ret	
ret	
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
push	rbp
mov	rbp, rsp
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0xbe251]
xor	ecx, ecx
mov	dword ptr [rax], 1
mov	rax, qword ptr [rip + 0xbe252]
mov	dword ptr [rax], 1
mov	rax, qword ptr [rip + 0xbe255]
mov	dword ptr [rax], 1
mov	rax, qword ptr [rip + 0xbe1d8]
cmp	word ptr [rax], 0x5a4d
jne	0x14000105e
jne	0x14000105e
movsxd	rdx, dword ptr [rax + 0x3c]
add	rax, rdx
cmp	dword ptr [rax], 0x4550
je	0x1400010c8
je	0x1400010c8
mov	rax, qword ptr [rip + 0xbe1fb]
mov	dword ptr [rip + 0xe3fa1], ecx
mov	eax, dword ptr [rax]
test	eax, eax
je	0x1400010b8
je	0x1400010b8
mov	ecx, 2
call	0x140015888
call	0x140015888
call	0x1400151e0
call	0x1400151e0
mov	rdx, qword ptr [rip + 0xbe2c9]
mov	edx, dword ptr [rdx]
mov	dword ptr [rax], edx
call	0x1400151f0
call	0x1400151f0
mov	rdx, qword ptr [rip + 0xbe299]
mov	edx, dword ptr [rdx]
mov	dword ptr [rax], edx
call	0x14000b170
call	0x14000b170
mov	rax, qword ptr [rip + 0xbd599]
cmp	dword ptr [rax], 1
je	0x140001100
je	0x140001100
xor	eax, eax
add	rsp, 0x20
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	ecx, 1
call	0x140015888
call	0x140015888
jmp	0x14000107b
jmp	0x14000107b
nop	dword ptr [rax]
movzx	edx, word ptr [rax + 0x18]
cmp	dx, 0x10b
je	0x140001118
je	0x140001118
cmp	dx, 0x20b
jne	0x14000105e
jne	0x14000105e
cmp	dword ptr [rax + 0x84], 0xe
jbe	0x14000105e
jbe	0x14000105e
mov	edx, dword ptr [rax + 0xf8]
xor	ecx, ecx
test	edx, edx
setne	cl
jmp	0x14000105e
jmp	0x14000105e
nop	dword ptr [rax]
mov	rcx, qword ptr [rip + 0xbe269]
call	0x14000b8e0
call	0x14000b8e0
xor	eax, eax
add	rsp, 0x20
pop	rbp
ret	
ret	
nop	dword ptr [rax]
cmp	dword ptr [rax + 0x74], 0xe
jbe	0x14000105e
jbe	0x14000105e
mov	r8d, dword ptr [rax + 0xe8]
xor	ecx, ecx
test	r8d, r8d
setne	cl
jmp	0x14000105e
jmp	0x14000105e
nop	word ptr cs:[rax + rax]
push	rbp
mov	rbp, rsp
sub	rsp, 0x30
mov	rax, qword ptr [rip + 0xbe231]
lea	r8, [rip + 0xe3ec2]
lea	rdx, [rip + 0xe3ec3]
lea	rcx, [rip + 0xe3ec4]
mov	eax, dword ptr [rax]
mov	dword ptr [rip + 0xe3e98], eax
mov	rax, qword ptr [rip + 0xbe1cd]
mov	r9d, dword ptr [rax]
lea	rax, [rip + 0xe3e87]
mov	qword ptr [rsp + 0x20], rax
call	0x140015878
call	0x140015878
nop	
add	rsp, 0x30
pop	rbp
ret	
ret	
nop	
push	rbp
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rsp + 0x20]
mov	rbx, qword ptr [rip + 0xbe108]
mov	r12, qword ptr [rip + 0xe52b9]
xor	edi, edi
mov	rax, qword ptr gs:[0x30]
mov	rsi, qword ptr [rax + 8]
jmp	0x1400011d1
jmp	0x1400011d1
cmp	rsi, rax
je	0x140001338
je	0x140001338
mov	ecx, 0x3e8
call	r12
call	r12
mov	rax, rdi
lock cmpxchg	qword ptr [rbx], rsi
test	rax, rax
jne	0x1400011c0
jne	0x1400011c0
mov	rsi, qword ptr [rip + 0xbe0db]
xor	edi, edi
mov	eax, dword ptr [rsi]
cmp	eax, 1
je	0x14000134f
je	0x14000134f
mov	eax, dword ptr [rsi]
test	eax, eax
je	0x1400013b0
je	0x1400013b0
mov	dword ptr [rip + 0xe3e02], 1
mov	eax, dword ptr [rsi]
cmp	eax, 1
je	0x140001364
je	0x140001364
test	edi, edi
je	0x140001385
je	0x140001385
mov	rax, qword ptr [rip + 0xbdfe0]
mov	rax, qword ptr [rax]
test	rax, rax
je	0x140001234
je	0x140001234
xor	r8d, r8d
mov	edx, 2
xor	ecx, ecx
call	rax
call	rax
call	0x14000b540
call	0x14000b540
mov	rcx, qword ptr [rip + 0xbe120]
call	qword ptr [rip + 0xe521a]
call	qword ptr [rip + 0xe521a]
mov	rdx, qword ptr [rip + 0xbe053]
lea	rcx, [rip - 0x254]
mov	qword ptr [rdx], rax
call	0x1400152e0
call	0x1400152e0
call	0x14000b350
call	0x14000b350
mov	ebx, dword ptr [rip + 0xe3dc1]
lea	edi, [rbx + 1]
movsxd	rdi, edi
shl	rdi, 3
mov	rcx, rdi
call	0x140015980
call	0x140015980
mov	r13, qword ptr [rip + 0xe3da0]
mov	r12, rax
test	ebx, ebx
jle	0x1400013d0
jle	0x1400013d0
sub	rdi, 8
xor	ebx, ebx
nop	dword ptr [rax]
mov	rcx, qword ptr [r13 + rbx]
call	0x140015a08
call	0x140015a08
lea	rsi, [rax + 1]
mov	rcx, rsi
call	0x140015980
call	0x140015980
mov	r8, rsi
mov	qword ptr [r12 + rbx], rax
mov	rdx, qword ptr [r13 + rbx]
mov	rcx, rax
add	rbx, 8
call	0x140015998
call	0x140015998
cmp	rdi, rbx
jne	0x140001298
jne	0x140001298
add	rdi, r12
mov	qword ptr [rdi], 0
mov	qword ptr [rip + 0xe3d44], r12
call	0x14000b150
call	0x14000b150
mov	rax, qword ptr [rip + 0xbdf48]
mov	r8, qword ptr [rip + 0xe3d29]
mov	ecx, dword ptr [rip + 0xe3d33]
mov	rax, qword ptr [rax]
mov	qword ptr [rax], r8
mov	rdx, qword ptr [rip + 0xe3d1e]
call	0x140001480
call	0x140001480
mov	ecx, dword ptr [rip + 0xe3cff]
mov	dword ptr [rip + 0xe3cfd], eax
test	ecx, ecx
je	0x1400013d8
je	0x1400013d8
mov	edx, dword ptr [rip + 0xe3ce7]
test	edx, edx
je	0x140001390
je	0x140001390
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rsi, qword ptr [rip + 0xbdf81]
mov	edi, 1
mov	eax, dword ptr [rsi]
cmp	eax, 1
jne	0x1400011f2
jne	0x1400011f2
mov	ecx, 0x1f
call	0x140015898
call	0x140015898
mov	eax, dword ptr [rsi]
cmp	eax, 1
jne	0x140001211
jne	0x140001211
mov	rdx, qword ptr [rip + 0xbdf95]
mov	rcx, qword ptr [rip + 0xbdf7e]
call	0x1400158c8
call	0x1400158c8
mov	dword ptr [rsi], 2
test	edi, edi
jne	0x140001219
jne	0x140001219
xor	eax, eax
xchg	qword ptr [rbx], rax
jmp	0x140001219
jmp	0x140001219
nop	
call	0x1400158a0
call	0x1400158a0
mov	eax, dword ptr [rip + 0xe3c75]
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	rdx, qword ptr [rip + 0xbdf69]
mov	rcx, qword ptr [rip + 0xbdf52]
mov	dword ptr [rsi], 1
call	0x1400158c8
call	0x1400158c8
jmp	0x140001206
jmp	0x140001206
nop	
mov	rdi, rax
jmp	0x1400012ce
jmp	0x1400012ce
mov	ecx, eax
call	0x1400158f8
call	0x1400158f8
nop	
push	rbp
mov	rbp, rsp
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0xbde71]
mov	dword ptr [rax], 1
call	0x140001190
call	0x140001190
nop	
nop	
add	rsp, 0x20
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
push	rbp
mov	rbp, rsp
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0xbde41]
mov	dword ptr [rax], 0
call	0x140001190
call	0x140001190
nop	
nop	
add	rsp, 0x20
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
push	rbp
mov	rbp, rsp
sub	rsp, 0x20
call	0x1400158d8
call	0x1400158d8
cmp	rax, 1
sbb	eax, eax
add	rsp, 0x20
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rcx, [rip + 9]
jmp	0x140001440
jmp	0x140001440
nop	dword ptr [rax]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
mov	rbp, rsp
sub	rsp, 0x20
call	0x14000b150
call	0x14000b150
lea	rax, [rip + 0xb7b6c]
mov	rdx, rax
mov	rax, qword ptr [rip + 0xbd792]
mov	rcx, rax
call	0x1400b05f0
call	0x1400b05f0
mov	eax, 0
add	rsp, 0x20
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	r10, rcx
cmp	edx, 0x31
ja	0x140001560
ja	0x140001560
cmp	edx, 0x28
jbe	0x1400014f0
jbe	0x1400014f0
lea	eax, [rdx - 0x29]
cmp	eax, 8
ja	0x140001588
ja	0x140001588
lea	rcx, [rip + 0xbabdc]
movsxd	rax, dword ptr [rcx + rax*4]
add	rax, rcx
jmp	rax
jmp	rax
nop	dword ptr [rax]
mov	ecx, edx
mov	eax, 1
shl	rax, cl
movabs	rcx, 0x17c00fff600
test	rax, rcx
jne	0x14000157c
jne	0x14000157c
movabs	rcx, 0x1fe000000
test	rax, rcx
jne	0x14000152e
jne	0x14000152e
add	rcx, 0x200081e
test	rax, rcx
je	0x140001588
je	0x140001588
test	r8, r8
je	0x140001588
je	0x140001588
test	r9, r9
je	0x140001588
je	0x140001588
mov	ecx, dword ptr [r10 + 0x28]
cmp	ecx, dword ptr [r10 + 0x2c]
jge	0x140001588
jge	0x140001588
movsxd	rax, ecx
add	ecx, 1
shl	rax, 5
add	rax, qword ptr [r10 + 0x20]
mov	qword ptr [rax + 4], 0
mov	dword ptr [r10 + 0x28], ecx
mov	dword ptr [rax], edx
mov	qword ptr [rax + 0x10], r8
mov	qword ptr [rax + 0x18], r9
ret	
ret	
nop	dword ptr [rax]
cmp	edx, 0x4f
ja	0x140001590
ja	0x140001590
cmp	edx, 0x33
jbe	0x140001588
jbe	0x140001588
lea	ecx, [rdx - 0x34]
mov	eax, 1
shl	rax, cl
test	eax, 0x1c71107
je	0x1400015b0
je	0x1400015b0
test	r8, r8
jne	0x14000152e
jne	0x14000152e
nop	dword ptr [rax]
xor	eax, eax
ret	
ret	
nop	dword ptr [rax + rax]
lea	eax, [rdx - 0x52]
cmp	eax, 9
ja	0x14000152e
ja	0x14000152e
lea	rcx, [rip + 0xbab45]
movsxd	rax, dword ptr [rcx + rax*4]
add	rax, rcx
jmp	rax
jmp	rax
nop	dword ptr [rax + rax]
test	eax, 0xa002ef8
jne	0x140001524
jne	0x140001524
cmp	edx, 0x4e
je	0x14000152e
je	0x14000152e
xor	eax, eax
jmp	0x14000158a
jmp	0x14000158a
nop	dword ptr [rax + rax]
mov	r9d, dword ptr [rcx + 0x28]
cmp	r9d, dword ptr [rcx + 0x2c]
jge	0x140001620
jge	0x140001620
movsxd	rax, r9d
add	r9d, 1
shl	rax, 5
add	rax, qword ptr [rcx + 0x20]
mov	qword ptr [rax + 4], 0
mov	dword ptr [rcx + 0x28], r9d
test	rdx, rdx
je	0x140001620
je	0x140001620
test	r8d, r8d
jle	0x140001620
jle	0x140001620
mov	qword ptr [rax + 4], 0
mov	dword ptr [rax], 0
mov	qword ptr [rax + 0x10], rdx
mov	dword ptr [rax + 0x18], r8d
ret	
ret	
nop	word ptr cs:[rax + rax]
xor	eax, eax
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	
push	rbx
mov	r9, rcx
mov	rcx, qword ptr [rcx + 0x18]
movzx	eax, byte ptr [rcx]
cmp	al, 0x6e
je	0x1400016c0
je	0x1400016c0
lea	edx, [rax - 0x30]
cmp	dl, 9
ja	0x1400016e2
ja	0x1400016e2
xor	r10d, r10d
sub	eax, 0x30
add	rcx, 1
xor	r8d, r8d
mov	ebx, 0x7fffffff
movsx	eax, al
mov	r11d, 0xcccccccd
jmp	0x140001688
jmp	0x140001688
nop	dword ptr [rax]
sub	eax, 0x30
mov	edx, ebx
add	rcx, 1
sub	edx, eax
imul	rdx, r11
shr	rdx, 0x23
cmp	edx, r8d
jl	0x1400016b0
jl	0x1400016b0
lea	edx, [r8 + r8*4]
mov	qword ptr [r9 + 0x18], rcx
lea	r8d, [rax + rdx*2]
movsx	eax, byte ptr [rcx]
lea	edx, [rax - 0x30]
cmp	dl, 9
jbe	0x140001670
jbe	0x140001670
mov	eax, r8d
neg	eax
test	r10d, r10d
cmovne	r8d, eax
mov	eax, r8d
pop	rbx
ret	
ret	
mov	r8d, 0xffffffff
mov	eax, r8d
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rcx + 1]
mov	qword ptr [r9 + 0x18], rdx
movzx	eax, byte ptr [rcx + 1]
lea	ecx, [rax - 0x30]
cmp	cl, 9
ja	0x1400016e2
ja	0x1400016e2
mov	rcx, rdx
mov	r10d, 1
jmp	0x140001652
jmp	0x140001652
xor	r8d, r8d
jmp	0x1400016ab
jmp	0x1400016ab
nop	word ptr [rax + rax]
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
test	edx, edx
jne	0x14000171b
jne	0x14000171b
mov	rax, qword ptr [rcx + 0x18]
cmp	byte ptr [rax], 0
jne	0x140001710
jne	0x140001710
xor	eax, eax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rax + 1]
mov	qword ptr [rcx + 0x18], rdx
movsx	edx, byte ptr [rax]
cmp	edx, 0x68
je	0x14000173e
je	0x14000173e
cmp	edx, 0x76
jne	0x140001705
jne	0x140001705
mov	rcx, rbx
call	0x140001630
call	0x140001630
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x5f
jne	0x140001705
jne	0x140001705
add	rax, 1
mov	qword ptr [rbx + 0x18], rax
mov	rcx, rbx
call	0x140001630
call	0x140001630
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x5f
jne	0x140001705
jne	0x140001705
add	rax, 1
mov	qword ptr [rbx + 0x18], rax
mov	eax, 1
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
mov	rax, qword ptr [rcx + 0x18]
mov	r8, rdx
movzx	edx, byte ptr [rax]
cmp	dl, 0x52
je	0x140001790
je	0x140001790
cmp	dl, 0x4f
je	0x140001790
je	0x140001790
mov	rax, r8
ret	
ret	
nop	dword ptr [rax + rax]
mov	r11d, dword ptr [rcx + 0x48]
mov	r10d, 0x20
lea	r9d, [r11 + 3]
cmp	dl, 0x52
je	0x1400017c0
je	0x1400017c0
mov	dword ptr [rcx + 0x48], r9d
add	rax, 1
xor	r9d, r9d
mov	edx, r10d
mov	qword ptr [rcx + 0x18], rax
jmp	0x1400014c0
jmp	0x1400014c0
nop	word ptr [rax + rax]
lea	r9d, [r11 + 2]
mov	r10d, 0x1f
jmp	0x1400017a3
jmp	0x1400017a3
nop	dword ptr [rax]
sub	rsp, 0x28
mov	rax, qword ptr [rcx + 0x18]
cmp	byte ptr [rax], 0x5f
je	0x1400017f0
je	0x1400017f0
mov	eax, 1
add	rsp, 0x28
ret	
ret	
nop	word ptr [rax + rax]
lea	rdx, [rax + 1]
mov	qword ptr [rcx + 0x18], rdx
cmp	byte ptr [rax + 1], 0x5f
je	0x140001810
je	0x140001810
call	0x140001630
call	0x140001630
test	eax, eax
jns	0x1400017dd
jns	0x1400017dd
xor	eax, eax
jmp	0x1400017e2
jmp	0x1400017e2
nop	dword ptr [rax + rax]
add	rax, 2
mov	qword ptr [rsp + 0x30], rcx
mov	qword ptr [rcx + 0x18], rax
call	0x140001630
call	0x140001630
test	eax, eax
js	0x140001807
js	0x140001807
cmp	eax, 9
jle	0x1400017dd
jle	0x1400017dd
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx + 0x18]
cmp	byte ptr [rax], 0x5f
jne	0x140001807
jne	0x140001807
add	rax, 1
mov	qword ptr [rcx + 0x18], rax
jmp	0x1400017dd
jmp	0x1400017dd
nop	word ptr cs:[rax + rax]
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rbx, rdx
test	rdx, rdx
je	0x1400018d7
je	0x1400018d7
mov	eax, dword ptr [rbx + 8]
cmp	eax, 1
jg	0x1400018d7
jg	0x1400018d7
mov	edx, dword ptr [rsi + 0x134]
cmp	edx, 0x400
jg	0x1400018d7
jg	0x1400018d7
mov	ecx, dword ptr [rbx]
add	eax, 1
mov	dword ptr [rbx + 8], eax
cmp	ecx, 0x33
ja	0x140001920
ja	0x140001920
cmp	ecx, 8
ja	0x1400018e0
ja	0x1400018e0
cmp	ecx, 7
je	0x140001910
je	0x140001910
cmp	ecx, 8
je	0x140001910
je	0x140001910
cmp	ecx, 3
jbe	0x140001980
jbe	0x140001980
cmp	ecx, 4
jne	0x1400018d7
jne	0x1400018d7
add	dword ptr [rsi + 0x16c], 1
mov	rax, qword ptr [rbx + 0x10]
add	edx, 1
mov	rcx, rsi
mov	dword ptr [rsi + 0x134], edx
mov	rdx, rax
call	0x140001850
call	0x140001850
mov	rdx, qword ptr [rbx + 0x18]
mov	rcx, rsi
call	0x140001850
call	0x140001850
sub	dword ptr [rsi + 0x134], 1
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
movabs	r8, 0x3ef67fefffe00
mov	eax, 1
shl	rax, cl
test	rax, r8
jne	0x1400018ac
jne	0x1400018ac
movabs	r8, 0x1800000000
test	rax, r8
jne	0x140001960
jne	0x140001960
cmp	ecx, 0x33
jne	0x1400018d7
jne	0x1400018d7
nop	dword ptr [rax + rax]
mov	rbx, qword ptr [rbx + 0x18]
test	rbx, rbx
jne	0x140001861
jne	0x140001861
jmp	0x1400018d7
jmp	0x1400018d7
nop	
sub	ecx, 0x34
cmp	ecx, 0x21
ja	0x1400018d7
ja	0x1400018d7
mov	eax, 1
shl	rax, cl
test	eax, 0x3fc13fff
jne	0x1400018ac
jne	0x1400018ac
movabs	rdx, 0x200060000
test	rax, rdx
jne	0x140001951
jne	0x140001951
test	eax, 0x180000
je	0x1400018d7
je	0x1400018d7
mov	rbx, qword ptr [rbx + 0x10]
jmp	0x140001914
jmp	0x140001914
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	dword ptr [rax], 5
jne	0x1400018b0
jne	0x1400018b0
add	dword ptr [rsi + 0x15c], 1
jmp	0x1400018b0
jmp	0x1400018b0
nop	dword ptr [rax]
test	ecx, ecx
jne	0x1400018ac
jne	0x1400018ac
jmp	0x1400018d7
jmp	0x1400018d7
nop	dword ptr [rax]
xor	eax, eax
test	rcx, rcx
jne	0x1400019b3
jne	0x1400019b3
jmp	0x1400019b8
jmp	0x1400019b8
nop	dword ptr [rax]
cmp	qword ptr [rcx + 0x10], 0
je	0x1400019b8
je	0x1400019b8
mov	rcx, qword ptr [rcx + 0x18]
add	eax, 1
test	rcx, rcx
je	0x1400019b8
je	0x1400019b8
cmp	dword ptr [rcx], 0x2f
je	0x1400019a0
je	0x1400019a0
ret	
ret	
nop	dword ptr [rax]
test	rcx, rcx
jne	0x1400019e0
jne	0x1400019e0
jmp	0x1400019e5
jmp	0x1400019e5
nop	word ptr [rax + rax]
test	edx, edx
je	0x1400019f0
je	0x1400019f0
mov	rcx, qword ptr [rcx + 0x18]
sub	edx, 1
test	rcx, rcx
je	0x1400019e5
je	0x1400019e5
cmp	dword ptr [rcx], 0x2f
je	0x1400019d0
je	0x1400019d0
xor	eax, eax
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x10]
ret	
ret	
nop	word ptr cs:[rax + rax]
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [r8 + 8]
mov	rsi, qword ptr [r8 + 0x10]
lea	rax, [rdx + rax + 1]
mov	rdi, rdx
mov	rbp, rcx
mov	edx, dword ptr [r8 + 0x18]
mov	rbx, r8
cmp	rsi, rax
jb	0x140001a60
jb	0x140001a60
mov	eax, dword ptr [rbx + 0x18]
test	eax, eax
jne	0x140001a51
jne	0x140001a51
mov	rcx, qword ptr [rbx + 8]
mov	r8, rdi
add	rcx, qword ptr [rbx]
mov	rdx, rbp
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rbx]
add	rax, rdi
add	rax, qword ptr [rbx + 8]
mov	byte ptr [rax], 0
add	qword ptr [rbx + 8], rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
test	edx, edx
jne	0x140001a51
jne	0x140001a51
test	rsi, rsi
je	0x140001a98
je	0x140001a98
nop	dword ptr [rax]
add	rsi, rsi
cmp	rsi, rax
jb	0x140001a70
jb	0x140001a70
mov	rcx, qword ptr [rbx]
mov	rdx, rsi
call	0x1400159c0
call	0x1400159c0
test	rax, rax
je	0x140001aa5
je	0x140001aa5
mov	qword ptr [rbx], rax
mov	qword ptr [rbx + 0x10], rsi
jmp	0x140001a27
jmp	0x140001a27
nop	dword ptr [rax]
mov	esi, 2
cmp	rax, 2
ja	0x140001a70
ja	0x140001a70
jmp	0x140001a78
jmp	0x140001a78
mov	rcx, qword ptr [rbx]
call	0x140015940
call	0x140015940
xor	edx, edx
pxor	xmm0, xmm0
mov	dword ptr [rbx + 0x18], 1
mov	qword ptr [rbx], rdx
movups	xmmword ptr [rbx + 8], xmm0
jmp	0x140001a51
jmp	0x140001a51
nop	word ptr cs:[rax + rax]
nop	
sub	rsp, 0x38
lea	rdx, [rip + 0xba631]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x58], r9
mov	qword ptr [rsp + 0x28], r8
call	0x14000d430
call	0x14000d430
add	rsp, 0x38
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx + 0x10]
mov	rdx, qword ptr [rax]
xor	eax, eax
cmp	byte ptr [rdx], 0x64
je	0x140001b10
je	0x140001b10
ret	
ret	
nop	
movzx	edx, byte ptr [rdx + 1]
sub	edx, 0x58
cmp	dl, 0x20
ja	0x140001b0e
ja	0x140001b0e
movabs	rax, 0x100020001
bt	rax, rdx
setb	al
movzx	eax, al
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
movzx	edx, byte ptr [rcx]
lea	eax, [rdx - 0x4b]
cmp	al, 0x27
jbe	0x140001b58
jbe	0x140001b58
xor	eax, eax
cmp	dl, 0x44
je	0x140001b70
je	0x140001b70
ret	
ret	
nop	word ptr [rax + rax]
movabs	rdx, 0xffffff7ffffff7fe
bt	rdx, rax
setb	al
xor	eax, 1
movzx	eax, al
ret	
ret	
movzx	edx, byte ptr [rcx + 1]
xor	eax, eax
sub	edx, 0x4f
cmp	dl, 0x29
ja	0x140001b51
ja	0x140001b51
movabs	rax, 0x30100000001
bt	rax, rdx
setb	al
movzx	eax, al
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx + 0x100]
mov	rbx, rcx
mov	esi, edx
cmp	rax, 0xff
je	0x140001be0
je	0x140001be0
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], sil
mov	byte ptr [rbx + 0x108], sil
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
mov	edx, 0xff
mov	byte ptr [rcx + 0xff], 0
mov	r8, qword ptr [rcx + 0x118]
call	qword ptr [rcx + 0x110]
call	qword ptr [rcx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140001bbe
jmp	0x140001bbe
nop	dword ptr [rax]
mov	rax, qword ptr [rcx + 0x120]
test	rax, rax
je	0x140001c58
je	0x140001c58
mov	rax, qword ptr [rax + 8]
mov	edx, dword ptr [rdx + 0x10]
mov	rax, qword ptr [rax + 0x18]
test	edx, edx
js	0x140001c4f
js	0x140001c4f
test	rax, rax
jne	0x140001c48
jne	0x140001c48
jmp	0x140001c4d
jmp	0x140001c4d
nop	word ptr [rax + rax]
test	edx, edx
je	0x140001c50
je	0x140001c50
mov	rax, qword ptr [rax + 0x18]
sub	edx, 1
test	rax, rax
je	0x140001c4d
je	0x140001c4d
cmp	dword ptr [rax], 0x2f
je	0x140001c38
je	0x140001c38
xor	eax, eax
ret	
ret	
mov	rax, qword ptr [rax + 0x10]
ret	
ret	
nop	dword ptr [rax]
mov	dword ptr [rcx + 0x130], 1
xor	eax, eax
jmp	0x140001c4f
jmp	0x140001c4f
nop	word ptr cs:[rax + rax]
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
call	0x140015a08
call	0x140015a08
test	rax, rax
je	0x140001d00
je	0x140001d00
mov	rdx, qword ptr [rsi + 0x100]
lea	rbp, [rbx + rax]
jmp	0x140001cc2
jmp	0x140001cc2
nop	dword ptr [rax + rax]
mov	rcx, rdx
add	rdx, 1
add	rbx, 1
mov	qword ptr [rsi + 0x100], rdx
mov	byte ptr [rsi + rcx], dil
mov	byte ptr [rsi + 0x108], dil
cmp	rbx, rbp
je	0x140001d00
je	0x140001d00
movzx	edi, byte ptr [rbx]
cmp	rdx, 0xff
jne	0x140001ca0
jne	0x140001ca0
mov	edx, 0xff
mov	rcx, rsi
mov	byte ptr [rsi + 0xff], 0
mov	r8, qword ptr [rsi + 0x118]
call	qword ptr [rsi + 0x110]
call	qword ptr [rsi + 0x110]
add	dword ptr [rsi + 0x140], 1
mov	edx, 1
xor	ecx, ecx
jmp	0x140001ca7
jmp	0x140001ca7
nop	word ptr [rax + rax]
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rbx, rdx
test	rdx, rdx
je	0x140001d70
je	0x140001d70
mov	eax, dword ptr [rbx]
cmp	eax, 0x18
ja	0x140001d40
ja	0x140001d40
lea	rdx, [rip + 0xba3e1]
movsxd	rax, dword ptr [rdx + rax*4]
add	rax, rdx
jmp	rax
jmp	rax
nop	dword ptr [rax + rax]
sub	eax, 0x27
cmp	eax, 0x35
ja	0x140001d80
ja	0x140001d80
movabs	rdx, 0x20006718000801
bt	rdx, rax
jb	0x140001d70
jb	0x140001d70
cmp	eax, 0xc
jne	0x140001d80
jne	0x140001d80
mov	rbx, qword ptr [rbx + 0x18]
test	rbx, rbx
jne	0x140001d21
jne	0x140001d21
nop	word ptr cs:[rax + rax]
xor	eax, eax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rdx, qword ptr [rbx + 0x10]
mov	rcx, rsi
call	0x140001d10
call	0x140001d10
test	rax, rax
jne	0x140001d72
jne	0x140001d72
mov	rbx, qword ptr [rbx + 0x18]
test	rbx, rbx
jne	0x140001d21
jne	0x140001d21
jmp	0x140001d70
jmp	0x140001d70
nop	dword ptr [rax]
mov	rax, qword ptr [rsi + 0x120]
test	rax, rax
je	0x140001df8
je	0x140001df8
mov	rax, qword ptr [rax + 8]
mov	edx, dword ptr [rbx + 0x10]
mov	rax, qword ptr [rax + 0x18]
test	edx, edx
js	0x140001de4
js	0x140001de4
test	rax, rax
jne	0x140001dd8
jne	0x140001dd8
jmp	0x140001d70
jmp	0x140001d70
nop	word ptr [rax + rax]
test	edx, edx
je	0x140001de0
je	0x140001de0
mov	rax, qword ptr [rax + 0x18]
sub	edx, 1
test	rax, rax
je	0x140001d70
je	0x140001d70
cmp	dword ptr [rax], 0x2f
je	0x140001dc8
je	0x140001dc8
jmp	0x140001d70
jmp	0x140001d70
nop	
mov	rax, qword ptr [rax + 0x10]
test	rax, rax
je	0x140001d70
je	0x140001d70
cmp	dword ptr [rax], 0x2f
jne	0x140001d70
jne	0x140001d70
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	dword ptr [rsi + 0x130], 1
jmp	0x140001d70
jmp	0x140001d70
nop	word ptr [rax + rax]
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx + 0x18]
cmp	byte ptr [rax], 0x54
mov	rbx, rcx
jne	0x140001e88
jne	0x140001e88
lea	rdx, [rax + 1]
mov	qword ptr [rcx + 0x18], rdx
movzx	eax, byte ptr [rax + 1]
cmp	al, 0x5f
je	0x140001e90
je	0x140001e90
cmp	al, 0x6e
je	0x140001e88
je	0x140001e88
call	0x140001630
call	0x140001630
add	eax, 1
mov	ecx, eax
js	0x140001e88
js	0x140001e88
mov	rdx, qword ptr [rbx + 0x18]
cmp	byte ptr [rdx], 0x5f
jne	0x140001e88
jne	0x140001e88
add	rdx, 1
mov	qword ptr [rbx + 0x18], rdx
mov	edx, dword ptr [rbx + 0x28]
cmp	edx, dword ptr [rbx + 0x2c]
jge	0x140001e88
jge	0x140001e88
movsxd	rax, edx
add	edx, 1
shl	rax, 5
add	rax, qword ptr [rbx + 0x20]
mov	qword ptr [rax + 4], 0
mov	dword ptr [rbx + 0x28], edx
mov	dword ptr [rax], 5
mov	dword ptr [rax + 0x10], ecx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	word ptr [rax + rax]
xor	eax, eax
add	rsp, 0x20
pop	rbx
ret	
ret	
xor	ecx, ecx
jmp	0x140001e4a
jmp	0x140001e4a
nop	word ptr cs:[rax + rax]
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	rbx, [rsp + 0x20]
mov	r8d, edx
mov	rsi, rcx
lea	rdx, [rip + 0xba252]
mov	rcx, rbx
call	0x140001ad0
call	0x140001ad0
mov	rcx, rbx
call	0x140015a08
call	0x140015a08
test	rax, rax
je	0x140001f40
je	0x140001f40
mov	rdx, qword ptr [rsi + 0x100]
lea	rbp, [rbx + rax]
jmp	0x140001f02
jmp	0x140001f02
nop	dword ptr [rax]
mov	rcx, rdx
add	rdx, 1
add	rbx, 1
mov	qword ptr [rsi + 0x100], rdx
mov	byte ptr [rsi + rcx], dil
mov	byte ptr [rsi + 0x108], dil
cmp	rbx, rbp
je	0x140001f40
je	0x140001f40
movzx	edi, byte ptr [rbx]
cmp	rdx, 0xff
jne	0x140001ee0
jne	0x140001ee0
mov	edx, 0xff
mov	rcx, rsi
mov	byte ptr [rsi + 0xff], 0
mov	r8, qword ptr [rsi + 0x118]
call	qword ptr [rsi + 0x110]
call	qword ptr [rsi + 0x110]
add	dword ptr [rsi + 0x140], 1
mov	edx, 1
xor	ecx, ecx
jmp	0x140001ee7
jmp	0x140001ee7
nop	word ptr [rax + rax]
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
mov	rbx, rcx
mov	ebp, r8d
cmp	edx, 0x59
je	0x1400020b0
je	0x1400020b0
cmp	edx, 0x5a
je	0x140002020
je	0x140002020
cmp	edx, 0x58
je	0x1400020c8
je	0x1400020c8
mov	dword ptr [rcx + 0x130], 1
lea	rsi, [rsp + 0x20]
mov	r8d, ebp
lea	rdx, [rip + 0xba178]
mov	rcx, rsi
call	0x140001ad0
call	0x140001ad0
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
test	rax, rax
je	0x1400020a0
je	0x1400020a0
mov	rdx, qword ptr [rbx + 0x100]
lea	rbp, [rsi + rax]
jmp	0x140001fe6
jmp	0x140001fe6
nop	word ptr [rax + rax]
mov	rcx, rdx
add	rdx, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rcx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rbp, rsi
je	0x1400020a0
je	0x1400020a0
movzx	edi, byte ptr [rsi]
cmp	rdx, 0xff
jne	0x140001fc0
jne	0x140001fc0
mov	edx, 0xff
mov	rcx, rbx
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	ecx, ecx
jmp	0x140001fc7
jmp	0x140001fc7
nop	
mov	r12d, 3
lea	rsi, [rip + 0xba147]
mov	rax, qword ptr [rbx + 0x100]
add	r12, rsi
jmp	0x140002066
jmp	0x140002066
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rsi, r12
je	0x140001f85
je	0x140001f85
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x140002040
jne	0x140002040
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140002047
jmp	0x140002047
nop	dword ptr [rax]
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax + rax]
mov	r12d, 2
lea	rsi, [rip + 0xba0be]
jmp	0x14000202d
jmp	0x14000202d
nop	word ptr [rax + rax]
mov	r12d, 2
lea	rsi, [rip + 0xba0a3]
jmp	0x14000202d
jmp	0x14000202d
nop	word ptr [rax + rax]
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x140001630
call	0x140001630
mov	r8d, eax
xor	eax, eax
test	r8d, r8d
jle	0x140002164
jle	0x140002164
mov	rdx, qword ptr [rbx + 0x18]
mov	rcx, qword ptr [rbx + 8]
movsxd	rax, r8d
sub	rcx, rdx
cmp	rcx, rax
jl	0x140002180
jl	0x140002180
add	rax, rdx
mov	qword ptr [rbx + 0x18], rax
test	byte ptr [rbx + 0x10], 4
je	0x14000211c
je	0x14000211c
cmp	byte ptr [rax], 0x24
je	0x140002170
je	0x140002170
cmp	r8d, 9
jle	0x140002158
jle	0x140002158
movabs	rax, 0x5f4c41424f4c475f
cmp	qword ptr [rdx], rax
jne	0x140002158
jne	0x140002158
movzx	eax, byte ptr [rdx + 8]
sub	eax, 0x24
cmp	al, 0x3b
ja	0x140002158
ja	0x140002158
movabs	rcx, 0x800000000000401
bt	rcx, rax
jae	0x140002158
jae	0x140002158
cmp	byte ptr [rdx + 9], 0x4e
je	0x140002188
je	0x140002188
nop	word ptr [rax + rax]
mov	rcx, rbx
call	0x1400015d0
call	0x1400015d0
mov	qword ptr [rbx + 0x40], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	word ptr [rax + rax]
add	rax, 1
mov	qword ptr [rbx + 0x18], rax
cmp	r8d, 9
jg	0x140002122
jg	0x140002122
jmp	0x140002158
jmp	0x140002158
xor	eax, eax
jmp	0x140002160
jmp	0x140002160
nop	dword ptr [rax]
mov	eax, dword ptr [rbx + 0x48]
mov	edx, dword ptr [rbx + 0x28]
add	eax, 0x16
sub	eax, r8d
mov	dword ptr [rbx + 0x48], eax
cmp	edx, dword ptr [rbx + 0x2c]
jge	0x140002180
jge	0x140002180
movsxd	rax, edx
add	edx, 1
mov	dword ptr [rbx + 0x28], edx
shl	rax, 5
lea	rdx, [rip + 0xb9fce]
add	rax, qword ptr [rbx + 0x20]
mov	qword ptr [rax + 4], 0
mov	dword ptr [rax], 0
mov	qword ptr [rax + 0x10], rdx
mov	dword ptr [rax + 0x18], 0x15
jmp	0x140002160
jmp	0x140002160
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
cmp	byte ptr [rcx], 0x53
jne	0x140002259
jne	0x140002259
lea	rax, [rcx + 1]
mov	qword ptr [rbx + 0x18], rax
movzx	eax, byte ptr [rcx + 1]
test	al, al
je	0x140002270
je	0x140002270
lea	rax, [rcx + 2]
mov	qword ptr [rbx + 0x18], rax
movsx	eax, byte ptr [rcx + 1]
lea	ecx, [rax - 0x30]
cmp	cl, 0x2f
ja	0x140002270
ja	0x140002270
movabs	r8, 0x87fffffe03ff
bt	r8, rcx
jae	0x140002270
jae	0x140002270
xor	edx, edx
cmp	al, 0x5f
jne	0x14000223d
jne	0x14000223d
jmp	0x1400022d0
jmp	0x1400022d0
nop	word ptr [rax + rax]
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x18], rdx
movsx	eax, byte ptr [rax]
cmp	al, 0x5f
je	0x1400023f0
je	0x1400023f0
mov	edx, ecx
lea	ecx, [rax - 0x30]
cmp	cl, 9
ja	0x1400022b0
ja	0x1400022b0
lea	ecx, [rdx + rdx*8]
lea	ecx, [rax + rcx*4 - 0x30]
cmp	ecx, edx
jb	0x140002259
jb	0x140002259
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0
jne	0x140002228
jne	0x140002228
xor	esi, esi
mov	rax, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	ecx, dword ptr [rbx + 0x10]
and	ecx, 8
jne	0x1400022c8
jne	0x1400022c8
and	edx, 1
je	0x1400022c8
je	0x1400022c8
mov	rdx, qword ptr [rbx + 0x18]
movzx	edx, byte ptr [rdx]
sub	edx, 0x43
cmp	dl, 1
setbe	r8b
lea	rdx, [rip + 0xba90b]
lea	rcx, [rdx + 0x188]
nop	dword ptr [rax]
cmp	byte ptr [rdx], al
je	0x1400022f0
je	0x1400022f0
add	rdx, 0x38
cmp	rdx, rcx
jne	0x1400022a0
jne	0x1400022a0
jmp	0x140002259
jmp	0x140002259
nop	
lea	ecx, [rax - 0x41]
cmp	cl, 0x19
ja	0x140002259
ja	0x140002259
lea	ecx, [rdx + rdx*8]
lea	ecx, [rax + rcx*4 - 0x37]
jmp	0x14000224c
jmp	0x14000224c
nop	dword ptr [rax]
test	ecx, ecx
setne	r8b
jmp	0x14000228e
jmp	0x14000228e
xor	ecx, ecx
cmp	ecx, dword ptr [rbx + 0x38]
jae	0x140002259
jae	0x140002259
mov	rax, qword ptr [rbx + 0x30]
mov	rsi, qword ptr [rax + rcx*8]
mov	rax, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
mov	r10, qword ptr [rdx + 0x28]
mov	eax, dword ptr [rbx + 0x28]
mov	r9d, dword ptr [rbx + 0x2c]
test	r10, r10
je	0x140002338
je	0x140002338
mov	r11d, dword ptr [rdx + 0x30]
cmp	r9d, eax
jle	0x14000240c
jle	0x14000240c
movsxd	rcx, eax
add	eax, 1
shl	rcx, 5
add	rcx, qword ptr [rbx + 0x20]
mov	qword ptr [rcx + 4], 0
mov	dword ptr [rbx + 0x28], eax
mov	dword ptr [rcx], 0x18
mov	qword ptr [rcx + 0x10], r10
mov	dword ptr [rcx + 0x18], r11d
mov	qword ptr [rbx + 0x40], rcx
test	r8b, r8b
jne	0x140002400
jne	0x140002400
mov	rcx, qword ptr [rdx + 8]
mov	edx, dword ptr [rdx + 0x10]
add	dword ptr [rbx + 0x48], edx
cmp	r9d, eax
jle	0x140002413
jle	0x140002413
movsxd	rsi, eax
add	eax, 1
shl	rsi, 5
add	rsi, qword ptr [rbx + 0x20]
mov	qword ptr [rsi + 4], 0
mov	dword ptr [rbx + 0x28], eax
mov	dword ptr [rsi], 0x18
mov	qword ptr [rsi + 0x10], rcx
mov	dword ptr [rsi + 0x18], edx
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x42
jne	0x14000225b
jne	0x14000225b
mov	rdi, qword ptr [rbx + 0x40]
nop	dword ptr [rax + rax]
add	rax, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], rax
call	0x1400020e0
call	0x1400020e0
mov	r8, rsi
mov	edx, 0x4d
mov	rcx, rbx
mov	r9, rax
call	0x1400014c0
call	0x1400014c0
mov	rsi, rax
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x42
je	0x140002390
je	0x140002390
mov	qword ptr [rbx + 0x40], rdi
test	rsi, rsi
je	0x140002259
je	0x140002259
mov	eax, dword ptr [rbx + 0x38]
cmp	eax, dword ptr [rbx + 0x3c]
jge	0x140002259
jge	0x140002259
mov	rdx, qword ptr [rbx + 0x30]
movsxd	rcx, eax
add	eax, 1
mov	qword ptr [rdx + rcx*8], rsi
mov	dword ptr [rbx + 0x38], eax
jmp	0x14000225b
jmp	0x14000225b
nop	
add	ecx, 1
jmp	0x1400022d2
jmp	0x1400022d2
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rdx + 0x18]
mov	edx, dword ptr [rdx + 0x20]
jmp	0x140002348
jmp	0x140002348
xor	ecx, ecx
jmp	0x140002334
jmp	0x140002334
xor	esi, esi
jmp	0x14000237a
jmp	0x14000237a
nop	word ptr [rax + rax]
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx + 0x18]
cmp	byte ptr [rax], 0x57
mov	rbx, rcx
mov	rsi, rdx
je	0x14000245a
je	0x14000245a
jmp	0x1400024b0
jmp	0x1400024b0
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rbx + 0x30]
movsxd	r8, edx
add	edx, 1
mov	qword ptr [rcx + r8*8], rax
mov	rax, qword ptr [rbx + 0x18]
mov	dword ptr [rbx + 0x38], edx
cmp	byte ptr [rax], 0x57
jne	0x1400024b0
jne	0x1400024b0
lea	rdx, [rax + 1]
mov	edi, 0x53
mov	qword ptr [rbx + 0x18], rdx
cmp	byte ptr [rax + 1], 0x50
jne	0x14000247a
jne	0x14000247a
add	rax, 2
mov	edi, 0x54
mov	qword ptr [rbx + 0x18], rax
mov	rcx, rbx
call	0x1400020e0
call	0x1400020e0
mov	r8, qword ptr [rsi]
mov	edx, edi
mov	rcx, rbx
mov	r9, rax
call	0x1400014c0
call	0x1400014c0
mov	qword ptr [rsi], rax
test	rax, rax
je	0x1400024a2
je	0x1400024a2
mov	edx, dword ptr [rbx + 0x38]
cmp	edx, dword ptr [rbx + 0x3c]
jl	0x140002440
jl	0x140002440
xor	eax, eax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	eax, 1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
mov	r8, qword ptr [rcx + 0x18]
mov	rbx, rcx
mov	rcx, r8
call	0x140001b40
call	0x140001b40
test	eax, eax
jne	0x140002518
jne	0x140002518
movsx	eax, byte ptr [r8]
cmp	al, 0x54
jg	0x1400025c0
jg	0x1400025c0
cmp	al, 0x40
jle	0x140002660
jle	0x140002660
sub	eax, 0x41
cmp	al, 0x13
ja	0x140002660
ja	0x140002660
lea	rdx, [rip + 0xb9ca3]
movzx	eax, al
movsxd	rax, dword ptr [rdx + rax*4]
add	rax, rdx
jmp	rax
jmp	rax
nop	dword ptr [rax]
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x1400046c0
call	0x1400046c0
mov	rsi, rax
test	rax, rax
je	0x1400028c8
je	0x1400028c8
mov	rax, qword ptr [rbx + 0x18]
mov	rcx, rbx
cmp	byte ptr [rax], 0x46
je	0x1400025b0
je	0x1400025b0
call	0x1400024c0
call	0x1400024c0
mov	qword ptr [rsi], rax
test	rax, rax
je	0x1400028c8
je	0x1400028c8
mov	edi, dword ptr [rax]
lea	edx, [rdi - 0x1f]
cmp	edx, 1
ja	0x140002573
ja	0x140002573
mov	rcx, qword ptr [rsp + 0x28]
mov	rdx, qword ptr [rax + 0x10]
mov	qword ptr [rax + 0x10], rcx
mov	rax, qword ptr [rsi]
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsi], rdx
mov	rdx, qword ptr [rsp + 0x28]
test	rdx, rdx
je	0x1400028c8
je	0x1400028c8
mov	eax, dword ptr [rbx + 0x38]
cmp	eax, dword ptr [rbx + 0x3c]
jge	0x1400028c8
jge	0x1400028c8
mov	rcx, qword ptr [rbx + 0x30]
movsxd	r8, eax
add	eax, 1
mov	qword ptr [rcx + r8*8], rdx
mov	dword ptr [rbx + 0x38], eax
mov	rax, rdx
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	
call	0x1400030d0
call	0x1400030d0
jmp	0x140002545
jmp	0x140002545
nop	word ptr [rax + rax]
lea	ecx, [rax - 0x55]
cmp	cl, 0x25
ja	0x140002660
ja	0x140002660
movabs	r9, 0x3ec7bff000
mov	edx, 1
shl	rdx, cl
test	rdx, r9
jne	0x140002dd8
jne	0x140002dd8
and	edx, 1
jne	0x140002d88
jne	0x140002d88
cmp	cl, 0x20
jne	0x140002660
jne	0x140002660
add	r8, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], r8
call	0x1400020e0
call	0x1400020e0
xor	r9d, r9d
mov	edx, 0x28
mov	rcx, rbx
mov	r8, rax
call	0x1400014c0
call	0x1400014c0
mov	qword ptr [rsp + 0x28], rax
mov	rsi, rax
test	rsi, rsi
je	0x1400028c8
je	0x1400028c8
mov	eax, dword ptr [rbx + 0x38]
cmp	eax, dword ptr [rbx + 0x3c]
jge	0x1400028c8
jge	0x1400028c8
mov	rdx, qword ptr [rbx + 0x30]
movsxd	rcx, eax
add	eax, 1
mov	qword ptr [rdx + rcx*8], rsi
mov	rdx, qword ptr [rsp + 0x28]
mov	dword ptr [rbx + 0x38], eax
mov	rax, rdx
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	edx, 1
mov	rcx, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
jmp	0x140004fd0
jmp	0x140004fd0
nop	dword ptr [rax]
add	r8, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], r8
call	0x1400024c0
call	0x1400024c0
xor	r9d, r9d
mov	edx, 0x25
mov	rcx, rbx
mov	r8, rax
call	0x1400014c0
call	0x1400014c0
mov	qword ptr [rsp + 0x28], rax
mov	rsi, rax
jmp	0x140002620
jmp	0x140002620
lea	rax, [r8 + 1]
mov	qword ptr [rbx + 0x18], rax
cmp	byte ptr [r8 + 1], 0
je	0x1400028c8
je	0x1400028c8
lea	rax, [r8 + 2]
mov	qword ptr [rbx + 0x18], rax
movzx	eax, byte ptr [r8 + 1]
sub	eax, 0x46
cmp	al, 0x30
ja	0x1400028c8
ja	0x1400028c8
lea	rdx, [rip + 0xb9b16]
movzx	eax, al
movsxd	rax, dword ptr [rdx + rax*4]
add	rax, rdx
jmp	rax
jmp	rax
nop	
mov	rcx, rbx
call	0x1400030d0
call	0x1400030d0
mov	qword ptr [rsp + 0x28], rax
mov	rsi, rax
jmp	0x140002620
jmp	0x140002620
nop	dword ptr [rax]
add	r8, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], r8
call	0x1400024c0
call	0x1400024c0
xor	r9d, r9d
mov	edx, 0x26
mov	rcx, rbx
mov	r8, rax
call	0x1400014c0
call	0x1400014c0
mov	qword ptr [rsp + 0x28], rax
mov	rsi, rax
jmp	0x140002620
jmp	0x140002620
nop	dword ptr [rax + rax]
add	r8, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], r8
call	0x1400024c0
call	0x1400024c0
xor	r9d, r9d
mov	edx, 0x24
mov	rcx, rbx
mov	r8, rax
call	0x1400014c0
call	0x1400014c0
mov	qword ptr [rsp + 0x28], rax
mov	rsi, rax
jmp	0x140002620
jmp	0x140002620
add	r8, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], r8
call	0x1400024c0
call	0x1400024c0
xor	r9d, r9d
mov	edx, 0x22
mov	rcx, rbx
mov	r8, rax
call	0x1400014c0
call	0x1400014c0
mov	qword ptr [rsp + 0x28], rax
mov	rsi, rax
jmp	0x140002620
jmp	0x140002620
add	r8, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], r8
call	0x1400024c0
call	0x1400024c0
xor	r9d, r9d
mov	edx, 0x23
mov	rcx, rbx
mov	r8, rax
call	0x1400014c0
call	0x1400014c0
mov	qword ptr [rsp + 0x28], rax
mov	rsi, rax
jmp	0x140002620
jmp	0x140002620
mov	rcx, rbx
call	0x140001e10
call	0x140001e10
mov	rdi, qword ptr [rbx + 0x18]
mov	qword ptr [rsp + 0x28], rax
mov	rsi, rax
cmp	byte ptr [rdi], 0x49
jne	0x140002620
jne	0x140002620
mov	r9d, dword ptr [rbx + 0x50]
test	r9d, r9d
jne	0x140002e86
jne	0x140002e86
test	rax, rax
je	0x1400028c8
je	0x1400028c8
mov	eax, dword ptr [rbx + 0x38]
cmp	eax, dword ptr [rbx + 0x3c]
jge	0x1400028c8
jge	0x1400028c8
mov	rdx, qword ptr [rbx + 0x30]
movsxd	rcx, eax
add	eax, 1
xor	r9d, r9d
mov	qword ptr [rdx + rcx*8], rsi
mov	dword ptr [rbx + 0x38], eax
movzx	eax, byte ptr [rdi]
lea	edx, [rax - 0x49]
cmp	dl, 1
ja	0x140002841
ja	0x140002841
add	rdi, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], rdi
call	0x140003cd0
call	0x140003cd0
mov	r9, rax
mov	r8, rsi
mov	edx, 4
mov	rcx, rbx
call	0x1400014c0
call	0x1400014c0
mov	qword ptr [rsp + 0x28], rax
mov	rsi, rax
jmp	0x140002620
jmp	0x140002620
nop	
lea	rdx, [r8 + 1]
mov	qword ptr [rbx + 0x18], rdx
movzx	eax, byte ptr [r8 + 1]
cmp	al, 0x5f
je	0x140002918
je	0x140002918
sub	eax, 0x30
cmp	al, 9
ja	0x140002e58
ja	0x140002e58
mov	r10, rdx
nop	dword ptr [rax + rax]
mov	r11, r10
add	r10, 1
mov	qword ptr [rbx + 0x18], r10
movzx	eax, byte ptr [r10]
sub	eax, 0x30
cmp	al, 9
jbe	0x140002888
jbe	0x140002888
mov	eax, r11d
mov	rcx, rbx
sub	eax, r8d
mov	r8d, eax
call	0x1400015d0
call	0x1400015d0
mov	rsi, rax
test	rax, rax
je	0x1400028c8
je	0x1400028c8
movzx	eax, byte ptr [r11 + 1]
mov	rdx, r10
cmp	al, 0x5f
je	0x14000291a
je	0x14000291a
nop	dword ptr [rax + rax]
xor	edx, edx
jmp	0x14000259e
jmp	0x14000259e
nop	
add	r8, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], r8
call	0x1400024c0
call	0x1400024c0
mov	rsi, rax
test	rax, rax
je	0x1400028c8
je	0x1400028c8
mov	rcx, rbx
call	0x1400024c0
call	0x1400024c0
mov	r9, rax
test	rax, rax
je	0x1400028c8
je	0x1400028c8
mov	r8, rsi
mov	edx, 0x2b
mov	rcx, rbx
call	0x1400014c0
call	0x1400014c0
mov	qword ptr [rsp + 0x28], rax
mov	rsi, rax
jmp	0x140002620
jmp	0x140002620
nop	dword ptr [rax]
xor	esi, esi
add	rdx, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], rdx
call	0x1400024c0
call	0x1400024c0
mov	r8, rsi
mov	edx, 0x2a
mov	rcx, rbx
mov	r9, rax
call	0x1400014c0
call	0x1400014c0
mov	qword ptr [rsp + 0x28], rax
mov	rsi, rax
jmp	0x140002620
jmp	0x140002620
mov	esi, dword ptr [rbx + 0x4c]
mov	dword ptr [rbx + 0x4c], 1
mov	rcx, rbx
call	0x140003f00
call	0x140003f00
mov	dword ptr [rbx + 0x4c], esi
xor	r9d, r9d
mov	edx, 0x44
mov	r8, rax
mov	rcx, rbx
call	0x1400014c0
call	0x1400014c0
mov	qword ptr [rsp + 0x28], rax
mov	rsi, rax
test	rax, rax
je	0x1400028c8
je	0x1400028c8
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0
je	0x1400028c8
je	0x1400028c8
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x18], rdx
cmp	byte ptr [rax], 0x45
je	0x140002629
je	0x140002629
xor	edx, edx
jmp	0x14000259e
jmp	0x14000259e
cmp	byte ptr [r8 + 2], 0x5f
je	0x140002f3f
je	0x140002f3f
mov	eax, dword ptr [rbx + 0x28]
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x1400028c8
jge	0x1400028c8
movsxd	rsi, eax
add	eax, 1
mov	rcx, rbx
shl	rsi, 5
add	rsi, qword ptr [rbx + 0x20]
mov	qword ptr [rsi + 4], 0
mov	dword ptr [rbx + 0x28], eax
mov	dword ptr [rsi], 0x43
call	0x140001630
call	0x140001630
mov	dword ptr [rsi + 0x10], eax
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x5f
jne	0x1400028c8
jne	0x1400028c8
add	rax, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], rax
call	0x1400024c0
call	0x1400024c0
mov	r8, rsi
mov	edx, 0x2d
mov	rcx, rbx
mov	r9, rax
call	0x1400014c0
call	0x1400014c0
mov	qword ptr [rsp + 0x28], rax
mov	rsi, rax
jmp	0x140002620
jmp	0x140002620
mov	eax, dword ptr [rbx + 0x28]
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x1400b4435
jge	0x1400b4435
movsxd	rdx, eax
add	eax, 1
shl	rdx, 5
add	rdx, qword ptr [rbx + 0x20]
mov	qword ptr [rdx + 4], 0
mov	dword ptr [rbx + 0x28], eax
lea	rax, [rip + 0xbb08e]
mov	dword ptr [rdx], 0x27
mov	qword ptr [rdx + 0x10], rax
add	dword ptr [rbx + 0x48], 7
jmp	0x14000259e
jmp	0x14000259e
mov	rcx, rbx
call	0x140001630
call	0x140001630
mov	rdx, qword ptr [rbx + 0x18]
mov	r8d, eax
movzx	edi, byte ptr [rdx]
cmp	dil, 0x62
je	0x140002ee9
je	0x140002ee9
cmp	dil, 0x78
je	0x140002a93
je	0x140002a93
cmp	dil, 0x5f
jne	0x1400028c8
jne	0x1400028c8
xor	edi, edi
mov	eax, dword ptr [rbx + 0x28]
add	rdx, 1
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x1400b4420
jge	0x1400b4420
movsxd	rsi, eax
xor	ecx, ecx
lea	rbp, [rsp + 0x34]
add	eax, 1
shl	rsi, 5
add	rsi, qword ptr [rbx + 0x20]
mov	qword ptr [rsi + 4], rcx
mov	rcx, rbp
mov	dword ptr [rbx + 0x28], eax
lea	rax, [rip + 0xbb097]
mov	word ptr [rsi + 0x18], r8w
mov	dword ptr [rsi], 0x5c
mov	qword ptr [rsi + 0x10], rax
mov	byte ptr [rsi + 0x1a], dil
mov	qword ptr [rbx + 0x18], rdx
lea	rdx, [rip + 0xb9625]
mov	qword ptr [rsp + 0x28], rsi
call	0x140001ad0
call	0x140001ad0
mov	rcx, rbp
call	0x140015a08
call	0x140015a08
mov	rcx, qword ptr [rsi + 0x10]
mov	rdx, rax
mov	eax, dword ptr [rbx + 0x48]
add	eax, dword ptr [rcx + 8]
cmp	dil, 1
sbb	eax, -1
add	eax, edx
mov	dword ptr [rbx + 0x48], eax
mov	rdx, qword ptr [rsp + 0x28]
jmp	0x14000259e
jmp	0x14000259e
mov	eax, dword ptr [rbx + 0x28]
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x1400b4435
jge	0x1400b4435
movsxd	rdx, eax
add	eax, 1
shl	rdx, 5
add	rdx, qword ptr [rbx + 0x20]
mov	qword ptr [rdx + 4], 0
mov	dword ptr [rbx + 0x28], eax
lea	rax, [rip + 0xbafb8]
mov	dword ptr [rdx], 0x27
mov	qword ptr [rdx + 0x10], rax
add	dword ptr [rbx + 0x48], 8
jmp	0x14000259e
jmp	0x14000259e
mov	eax, dword ptr [rbx + 0x28]
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x1400b4435
jge	0x1400b4435
movsxd	rdx, eax
add	eax, 1
shl	rdx, 5
add	rdx, qword ptr [rbx + 0x20]
mov	qword ptr [rdx + 4], 0
mov	dword ptr [rbx + 0x28], eax
lea	rax, [rip + 0xbaf39]
mov	dword ptr [rdx], 0x27
mov	qword ptr [rdx + 0x10], rax
add	dword ptr [rbx + 0x48], 4
jmp	0x14000259e
jmp	0x14000259e
mov	eax, dword ptr [rbx + 0x28]
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x1400b4435
jge	0x1400b4435
movsxd	rdx, eax
add	eax, 1
shl	rdx, 5
add	rdx, qword ptr [rbx + 0x20]
mov	qword ptr [rdx + 4], 0
mov	dword ptr [rbx + 0x28], eax
lea	rax, [rip + 0xbae9a]
mov	dword ptr [rdx], 0x27
mov	qword ptr [rdx + 0x10], rax
add	dword ptr [rbx + 0x48], 9
jmp	0x14000259e
jmp	0x14000259e
mov	eax, dword ptr [rbx + 0x28]
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x1400b4435
jge	0x1400b4435
movsxd	rdx, eax
add	eax, 1
shl	rdx, 5
add	rdx, qword ptr [rbx + 0x20]
mov	qword ptr [rdx + 4], 0
mov	dword ptr [rbx + 0x28], eax
lea	rax, [rip + 0xbae9b]
mov	dword ptr [rdx], 0x27
mov	qword ptr [rdx + 0x10], rax
add	dword ptr [rbx + 0x48], 0xa
jmp	0x14000259e
jmp	0x14000259e
mov	eax, dword ptr [rbx + 0x28]
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x1400b4435
jge	0x1400b4435
movsxd	rdx, eax
add	eax, 1
shl	rdx, 5
add	rdx, qword ptr [rbx + 0x20]
mov	qword ptr [rdx + 4], 0
mov	dword ptr [rbx + 0x28], eax
lea	rax, [rip + 0xbae3c]
mov	dword ptr [rdx], 0x27
mov	qword ptr [rdx + 0x10], rax
add	dword ptr [rbx + 0x48], 9
jmp	0x14000259e
jmp	0x14000259e
mov	eax, dword ptr [rbx + 0x28]
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x1400028c8
jge	0x1400028c8
movsxd	rdx, eax
add	eax, 1
mov	dword ptr [rbx + 0x28], eax
shl	rdx, 5
lea	rax, [rip + 0xb9522]
add	rdx, qword ptr [rbx + 0x20]
mov	qword ptr [rdx + 4], 0
mov	dword ptr [rdx], 0
mov	qword ptr [rdx + 0x10], rax
mov	dword ptr [rdx + 0x18], 0xe
jmp	0x14000259e
jmp	0x14000259e
mov	eax, dword ptr [rbx + 0x28]
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x1400028c8
jge	0x1400028c8
movsxd	rdx, eax
add	eax, 1
mov	dword ptr [rbx + 0x28], eax
shl	rdx, 5
lea	rax, [rip + 0xb94db]
add	rdx, qword ptr [rbx + 0x20]
mov	qword ptr [rdx + 4], 0
mov	dword ptr [rdx], 0
mov	qword ptr [rdx + 0x10], rax
mov	dword ptr [rdx + 0x18], 4
jmp	0x14000259e
jmp	0x14000259e
mov	eax, dword ptr [rbx + 0x28]
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x1400b4435
jge	0x1400b4435
movsxd	rdx, eax
add	eax, 1
shl	rdx, 5
add	rdx, qword ptr [rbx + 0x20]
mov	qword ptr [rdx + 4], 0
mov	dword ptr [rbx + 0x28], eax
lea	rax, [rip + 0xbae39]
mov	dword ptr [rdx], 0x27
mov	qword ptr [rdx + 0x10], rax
add	dword ptr [rbx + 0x48], 0x11
jmp	0x14000259e
jmp	0x14000259e
mov	eax, dword ptr [rbx + 0x28]
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x1400b4435
jge	0x1400b4435
movsxd	rdx, eax
add	eax, 1
shl	rdx, 5
add	rdx, qword ptr [rbx + 0x20]
mov	qword ptr [rdx + 4], 0
mov	dword ptr [rbx + 0x28], eax
lea	rax, [rip + 0xbadda]
mov	dword ptr [rdx], 0x27
mov	qword ptr [rdx + 0x10], rax
add	dword ptr [rbx + 0x48], 8
jmp	0x14000259e
jmp	0x14000259e
mov	rcx, rbx
call	0x1400024c0
call	0x1400024c0
xor	r9d, r9d
mov	edx, 0x4c
mov	rcx, rbx
mov	r8, rax
call	0x1400014c0
call	0x1400014c0
mov	qword ptr [rsp + 0x28], rax
mov	rsi, rax
jmp	0x140002620
jmp	0x140002620
nop	dword ptr [rax]
add	r8, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], r8
call	0x1400020e0
call	0x1400020e0
mov	qword ptr [rsp + 0x28], rax
mov	rsi, rax
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x49
je	0x140002e2d
je	0x140002e2d
mov	rcx, rbx
call	0x1400024c0
call	0x1400024c0
mov	r9, rsi
mov	edx, 0x21
mov	rcx, rbx
mov	r8, rax
call	0x1400014c0
call	0x1400014c0
mov	qword ptr [rsp + 0x28], rax
mov	rsi, rax
jmp	0x140002620
jmp	0x140002620
nop	dword ptr [rax]
sub	eax, 0x61
lea	rdx, [rip + 0xba93e]
mov	ecx, dword ptr [rbx + 0x28]
cdqe	
shl	rax, 5
add	rax, rdx
cmp	ecx, dword ptr [rbx + 0x2c]
jge	0x1400b4435
jge	0x1400b4435
movsxd	rdx, ecx
add	r8, 1
add	ecx, 1
shl	rdx, 5
add	rdx, qword ptr [rbx + 0x20]
mov	qword ptr [rdx + 4], 0
mov	dword ptr [rbx + 0x28], ecx
mov	qword ptr [rdx + 0x10], rax
mov	eax, dword ptr [rax + 8]
mov	dword ptr [rdx], 0x27
add	dword ptr [rbx + 0x48], eax
mov	qword ptr [rbx + 0x18], r8
jmp	0x14000259e
jmp	0x14000259e
add	rax, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], rax
call	0x140003cd0
call	0x140003cd0
mov	r8, rsi
mov	edx, 4
mov	rcx, rbx
mov	r9, rax
call	0x1400014c0
call	0x1400014c0
mov	rsi, rax
jmp	0x140002dad
jmp	0x140002dad
mov	edi, dword ptr [rbx + 0x4c]
mov	dword ptr [rbx + 0x4c], 1
mov	rcx, rbx
call	0x140003f00
call	0x140003f00
mov	dword ptr [rbx + 0x4c], edi
mov	rsi, rax
test	rax, rax
je	0x1400028c8
je	0x1400028c8
mov	r10, qword ptr [rbx + 0x18]
movzx	eax, byte ptr [r10]
jmp	0x1400028bc
jmp	0x1400028bc
lea	rax, [rdi + 1]
mov	rcx, rbx
mov	r13d, dword ptr [rbx + 0x28]
mov	r12d, dword ptr [rbx + 0x38]
mov	qword ptr [rbx + 0x18], rax
mov	ebp, dword ptr [rbx + 0x48]
call	0x140003cd0
call	0x140003cd0
mov	rdx, qword ptr [rbx + 0x18]
cmp	byte ptr [rdx], 0x49
je	0x140002ebe
je	0x140002ebe
mov	qword ptr [rbx + 0x18], rdi
mov	dword ptr [rbx + 0x28], r13d
mov	dword ptr [rbx + 0x38], r12d
mov	dword ptr [rbx + 0x48], ebp
jmp	0x140002620
jmp	0x140002620
test	rsi, rsi
je	0x1400028c8
je	0x1400028c8
mov	edx, dword ptr [rbx + 0x38]
cmp	edx, dword ptr [rbx + 0x3c]
jge	0x1400028c8
jge	0x1400028c8
mov	rcx, qword ptr [rbx + 0x30]
movsxd	r8, edx
add	edx, 1
mov	qword ptr [rcx + r8*8], rsi
mov	dword ptr [rbx + 0x38], edx
jmp	0x14000283e
jmp	0x14000283e
cmp	eax, 0x10
jne	0x1400028c8
jne	0x1400028c8
add	rdx, 1
mov	qword ptr [rbx + 0x18], rdx
mov	edx, dword ptr [rbx + 0x28]
cmp	edx, dword ptr [rbx + 0x2c]
jge	0x1400b4435
jge	0x1400b4435
movsxd	rax, edx
xor	r8d, r8d
lea	rdi, [rip + 0xbac6d]
add	edx, 1
shl	rax, 5
add	rax, qword ptr [rbx + 0x20]
mov	qword ptr [rax + 4], r8
mov	qword ptr [rsp + 0x28], rax
mov	dword ptr [rbx + 0x28], edx
mov	dword ptr [rax], 0x27
mov	qword ptr [rax + 0x10], rdi
mov	eax, dword ptr [rbx + 0x48]
add	eax, 0xf
jmp	0x140002b0f
jmp	0x140002b0f
add	r8, 3
mov	edi, dword ptr [rbx + 0x4c]
mov	dword ptr [rbx + 0x4c], 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], r8
call	0x140003f00
call	0x140003f00
mov	dword ptr [rbx + 0x4c], edi
mov	rsi, rax
test	rax, rax
jne	0x1400029e9
jne	0x1400029e9
xor	edx, edx
jmp	0x14000259e
jmp	0x14000259e
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	qword ptr [rsp + 0x28], 0
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
movzx	eax, byte ptr [rcx]
test	al, al
sete	dl
cmp	al, 0x45
sete	r8b
or	dl, r8b
jne	0x140003005
jne	0x140003005
cmp	al, 0x2e
lea	rsi, [rsp + 0x28]
sete	dl
test	dl, dl
je	0x140002fe7
je	0x140002fe7
jmp	0x140003005
jmp	0x140003005
nop	dword ptr [rax]
xor	r9d, r9d
mov	edx, 0x2e
mov	rcx, rbx
call	0x1400014c0
call	0x1400014c0
mov	qword ptr [rsi], rax
test	rax, rax
je	0x140003005
je	0x140003005
mov	rcx, qword ptr [rbx + 0x18]
lea	rsi, [rax + 0x18]
movzx	eax, byte ptr [rcx]
test	al, al
sete	dl
cmp	al, 0x45
sete	r8b
or	dl, r8b
jne	0x140003010
jne	0x140003010
cmp	al, 0x2e
je	0x140003010
je	0x140003010
cmp	al, 0x52
je	0x140002fef
je	0x140002fef
cmp	al, 0x4f
jne	0x140002ff5
jne	0x140002ff5
cmp	byte ptr [rcx + 1], 0x45
je	0x140003010
je	0x140003010
mov	rcx, rbx
call	0x1400024c0
call	0x1400024c0
mov	r8, rax
test	rax, rax
jne	0x140002fb0
jne	0x140002fb0
xor	eax, eax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
mov	rax, qword ptr [rsp + 0x28]
test	rax, rax
je	0x140003005
je	0x140003005
cmp	qword ptr [rax + 0x18], 0
jne	0x140003007
jne	0x140003007
mov	rdx, qword ptr [rax + 0x10]
cmp	dword ptr [rdx], 0x27
jne	0x140003007
jne	0x140003007
mov	rdx, qword ptr [rdx + 0x10]
cmp	dword ptr [rdx + 0x1c], 9
jne	0x140003007
jne	0x140003007
mov	edx, dword ptr [rdx + 8]
sub	dword ptr [rbx + 0x48], edx
mov	qword ptr [rax + 0x10], 0
jmp	0x140003007
jmp	0x140003007
nop	word ptr cs:[rax + rax]
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx + 0x18]
cmp	byte ptr [rax], 0x4a
mov	rbx, rcx
je	0x1400030c0
je	0x1400030c0
test	edx, edx
je	0x1400030a0
je	0x1400030a0
mov	rcx, rbx
call	0x1400024c0
call	0x1400024c0
mov	rsi, rax
test	rax, rax
je	0x1400030b2
je	0x1400030b2
mov	rcx, rbx
call	0x140002f70
call	0x140002f70
mov	r9, rax
test	rax, rax
je	0x1400030b2
je	0x1400030b2
mov	r8, rsi
mov	edx, 0x29
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400014c0
jmp	0x1400014c0
nop	dword ptr [rax]
mov	rcx, rbx
xor	esi, esi
call	0x140002f70
call	0x140002f70
mov	r9, rax
test	rax, rax
jne	0x140003086
jne	0x140003086
xor	eax, eax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
add	rax, 1
mov	qword ptr [rcx + 0x18], rax
jmp	0x140003066
jmp	0x140003066
nop	word ptr [rax + rax]
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
test	byte ptr [rcx + 0x12], 4
jne	0x140003108
jne	0x140003108
mov	ecx, dword ptr [rcx + 0x58]
cmp	ecx, 0x800
ja	0x140003111
ja	0x140003111
mov	rdx, qword ptr [rbx + 0x18]
lea	eax, [rcx + 1]
mov	dword ptr [rbx + 0x58], eax
xor	eax, eax
cmp	byte ptr [rdx], 0x46
je	0x140003120
je	0x140003120
mov	dword ptr [rbx + 0x58], ecx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rdx, qword ptr [rcx + 0x18]
cmp	byte ptr [rdx], 0x46
je	0x140003120
je	0x140003120
xor	eax, eax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
lea	rax, [rdx + 1]
mov	qword ptr [rbx + 0x18], rax
cmp	byte ptr [rdx + 1], 0x59
jne	0x140003136
jne	0x140003136
add	rdx, 2
mov	qword ptr [rbx + 0x18], rdx
mov	edx, 1
mov	rcx, rbx
call	0x140003050
call	0x140003050
mov	rcx, rbx
mov	rdx, rax
call	0x140001770
call	0x140001770
mov	rdx, qword ptr [rbx + 0x18]
cmp	byte ptr [rdx], 0x45
je	0x140003170
je	0x140003170
xor	eax, eax
test	byte ptr [rbx + 0x12], 4
jne	0x1400030fd
jne	0x1400030fd
mov	edx, dword ptr [rbx + 0x58]
lea	ecx, [rdx - 1]
jmp	0x1400030fa
jmp	0x1400030fa
nop	word ptr [rax + rax]
add	rdx, 1
mov	qword ptr [rbx + 0x18], rdx
jmp	0x140003159
jmp	0x140003159
nop	word ptr [rax + rax]
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx + 0x18]
cmp	byte ptr [rax], 0x54
mov	rbx, rcx
mov	rsi, rdx
jne	0x1400031d6
jne	0x1400031d6
movzx	edx, byte ptr [rax + 1]
cmp	dl, 0x74
je	0x140003230
je	0x140003230
jg	0x1400031e0
jg	0x1400031e0
cmp	dl, 0x6e
je	0x140003210
je	0x140003210
cmp	dl, 0x70
jne	0x1400031d6
jne	0x1400031d6
add	rax, 2
mov	rdx, rsi
mov	qword ptr [rcx + 0x18], rax
call	0x140003180
call	0x140003180
mov	edx, 0x5b
mov	r8, rax
test	rax, rax
jne	0x1400031f5
jne	0x1400031f5
nop	dword ptr [rax + rax]
mov	dword ptr [rsi], 1
xor	eax, eax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
cmp	dl, 0x79
jne	0x1400031d6
jne	0x1400031d6
add	rax, 2
mov	edx, 0x58
xor	r8d, r8d
mov	qword ptr [rcx + 0x18], rax
xor	r9d, r9d
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400014c0
jmp	0x1400014c0
nop	word ptr cs:[rax + rax]
add	rax, 2
mov	qword ptr [rcx + 0x18], rax
call	0x1400024c0
call	0x1400024c0
mov	r8, rax
test	rax, rax
je	0x1400031d0
je	0x1400031d0
mov	edx, 0x59
jmp	0x1400031f5
jmp	0x1400031f5
nop	dword ptr [rax]
add	rax, 2
mov	rdx, rsi
mov	qword ptr [rcx + 0x18], rax
call	0x140003270
call	0x140003270
mov	r8, rax
test	rax, rax
je	0x1400031d0
je	0x1400031d0
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x45
jne	0x1400031d0
jne	0x1400031d0
add	rax, 1
mov	edx, 0x5a
mov	qword ptr [rbx + 0x18], rax
jmp	0x1400031f5
jmp	0x1400031f5
nop	word ptr cs:[rax + rax]
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	qword ptr [rsp + 0x28], 0
mov	rsi, rcx
mov	rdi, rdx
lea	rbx, [rsp + 0x28]
jmp	0x140003297
jmp	0x140003297
nop	dword ptr [rax]
mov	qword ptr [rbx], rax
lea	rbx, [rax + 0x18]
mov	rdx, rdi
mov	rcx, rsi
call	0x140003180
call	0x140003180
test	rax, rax
jne	0x140003290
jne	0x140003290
mov	r8, qword ptr [rsp + 0x28]
test	r8, r8
je	0x1400032d0
je	0x1400032d0
xor	r9d, r9d
mov	edx, 0x57
mov	rcx, rsi
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
jmp	0x1400014c0
jmp	0x1400014c0
nop	dword ptr [rax + rax]
xor	eax, eax
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx + 0x18]
movzx	r10d, byte ptr [rax]
mov	rbx, rcx
test	r10b, r10b
je	0x140003380
je	0x140003380
lea	rdx, [rax + 1]
mov	qword ptr [rcx + 0x18], rdx
movzx	esi, byte ptr [rax + 1]
movzx	r10d, byte ptr [rax]
test	sil, sil
je	0x140003382
je	0x140003382
lea	rdx, [rax + 2]
mov	qword ptr [rcx + 0x18], rdx
movzx	esi, byte ptr [rax + 1]
cmp	r10b, 0x76
jne	0x140003415
jne	0x140003415
lea	eax, [rsi - 0x30]
cmp	al, 9
ja	0x140003382
ja	0x140003382
call	0x1400020e0
call	0x1400020e0
mov	edx, dword ptr [rbx + 0x28]
mov	rcx, rax
cmp	edx, dword ptr [rbx + 0x2c]
jge	0x1400033c5
jge	0x1400033c5
movsxd	rax, edx
add	edx, 1
shl	rax, 5
add	rax, qword ptr [rbx + 0x20]
mov	qword ptr [rax + 4], 0
mov	dword ptr [rbx + 0x28], edx
test	rcx, rcx
je	0x1400033c5
je	0x1400033c5
movsx	edx, sil
mov	qword ptr [rax + 4], 0
sub	edx, 0x30
mov	dword ptr [rax], 0x33
mov	dword ptr [rax + 0x10], edx
mov	qword ptr [rax + 0x18], rcx
jmp	0x1400033c7
jmp	0x1400033c7
nop	dword ptr [rax]
xor	esi, esi
mov	r8d, 0x48
xor	edx, edx
lea	r11, [rip + 0xb9b6f]
nop	dword ptr [rax]
mov	ecx, r8d
sub	ecx, edx
mov	eax, ecx
shr	eax, 0x1f
add	eax, ecx
sar	eax, 1
add	eax, edx
movsxd	rcx, eax
lea	rcx, [rcx + rcx*2]
lea	r9, [r11 + rcx*8]
mov	rcx, qword ptr [r9]
cmp	byte ptr [rcx], r10b
je	0x1400033d0
je	0x1400033d0
jg	0x140003410
jg	0x140003410
lea	edx, [rax + 1]
cmp	edx, r8d
jne	0x140003398
jne	0x140003398
xor	eax, eax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
cmp	byte ptr [rcx + 1], sil
jne	0x1400033bb
jne	0x1400033bb
mov	edx, dword ptr [rbx + 0x28]
cmp	edx, dword ptr [rbx + 0x2c]
jge	0x1400033c5
jge	0x1400033c5
movsxd	rax, edx
add	edx, 1
shl	rax, 5
add	rax, qword ptr [rbx + 0x20]
mov	qword ptr [rax + 4], 0
mov	dword ptr [rbx + 0x28], edx
mov	dword ptr [rax], 0x32
mov	qword ptr [rax + 0x10], r9
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
mov	r8d, eax
jmp	0x1400033c0
jmp	0x1400033c0
cmp	r10b, 0x63
jne	0x140003382
jne	0x140003382
cmp	sil, 0x76
jne	0x140003382
jne	0x140003382
mov	edx, dword ptr [rcx + 0x4c]
xor	eax, eax
mov	esi, dword ptr [rcx + 0x50]
test	edx, edx
sete	al
mov	dword ptr [rcx + 0x50], eax
call	0x1400024c0
call	0x1400024c0
mov	ecx, dword ptr [rbx + 0x50]
xor	r9d, r9d
mov	r8, rax
test	ecx, ecx
jne	0x140003462
jne	0x140003462
mov	edx, 0x34
mov	rcx, rbx
call	0x1400014c0
call	0x1400014c0
mov	dword ptr [rbx + 0x50], esi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	edx, 0x35
mov	rcx, rbx
call	0x1400014c0
call	0x1400014c0
jmp	0x140003458
jmp	0x140003458
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rdi, rdx
lea	rdx, [rsp + 0x70]
mov	qword ptr [rsp + 0x70], r8
mov	rbx, rcx
call	0x140002420
call	0x140002420
test	eax, eax
je	0x140003770
je	0x140003770
mov	rdx, qword ptr [rbx + 0x18]
movzx	eax, byte ptr [rdx]
lea	ecx, [rax - 0x30]
cmp	cl, 9
jbe	0x140003630
jbe	0x140003630
lea	ecx, [rax - 0x61]
cmp	cl, 0x19
ja	0x140003548
ja	0x140003548
mov	ebp, dword ptr [rbx + 0x4c]
cmp	al, 0x6f
je	0x140003690
je	0x140003690
mov	rcx, rbx
call	0x1400032e0
call	0x1400032e0
mov	dword ptr [rbx + 0x4c], ebp
mov	rsi, rax
test	rax, rax
je	0x1400036f8
je	0x1400036f8
cmp	dword ptr [rax], 0x32
jne	0x14000363b
jne	0x14000363b
mov	rax, qword ptr [rax + 0x10]
mov	ecx, dword ptr [rbx + 0x48]
mov	edx, dword ptr [rax + 0x10]
mov	rax, qword ptr [rax]
lea	edx, [rcx + rdx + 7]
mov	dword ptr [rbx + 0x48], edx
cmp	byte ptr [rax], 0x6c
jne	0x14000363b
jne	0x14000363b
cmp	byte ptr [rax + 1], 0x69
jne	0x14000363b
jne	0x14000363b
cmp	byte ptr [rax + 2], 0
jne	0x14000363b
jne	0x14000363b
mov	rcx, rbx
call	0x1400020e0
call	0x1400020e0
mov	r8, rsi
mov	edx, 0x37
mov	rcx, rbx
mov	r9, rax
call	0x1400014c0
call	0x1400014c0
mov	rsi, rax
jmp	0x14000363b
jmp	0x14000363b
nop	dword ptr [rax]
cmp	al, 0x44
je	0x1400036b0
je	0x1400036b0
lea	ecx, [rax - 0x43]
cmp	cl, 1
jbe	0x140003845
jbe	0x140003845
cmp	al, 0x4c
je	0x140003740
je	0x140003740
cmp	al, 0x55
jne	0x140003770
jne	0x140003770
movzx	eax, byte ptr [rdx + 1]
cmp	al, 0x6c
je	0x1400038e0
je	0x1400038e0
cmp	al, 0x74
jne	0x140003770
jne	0x140003770
lea	rax, [rdx + 1]
mov	rsi, qword ptr [rsp + 0x70]
mov	qword ptr [rbx + 0x18], rax
cmp	byte ptr [rdx + 1], 0x74
jne	0x1400036f8
jne	0x1400036f8
lea	rcx, [rdx + 2]
mov	qword ptr [rbx + 0x18], rcx
movzx	eax, byte ptr [rdx + 2]
cmp	al, 0x5f
je	0x140003a21
je	0x140003a21
cmp	al, 0x6e
je	0x140003a30
je	0x140003a30
mov	rcx, rbx
call	0x140001630
call	0x140001630
add	eax, 1
js	0x1400036f8
js	0x1400036f8
mov	rcx, qword ptr [rbx + 0x18]
cmp	byte ptr [rcx], 0x5f
jne	0x1400036f8
jne	0x1400036f8
add	rcx, 1
mov	edx, dword ptr [rbx + 0x28]
mov	qword ptr [rbx + 0x18], rcx
cmp	edx, dword ptr [rbx + 0x2c]
jge	0x1400036f8
jge	0x1400036f8
movsxd	rsi, edx
add	edx, 1
shl	rsi, 5
add	rsi, qword ptr [rbx + 0x20]
mov	qword ptr [rsi + 4], 0
mov	dword ptr [rbx + 0x28], edx
mov	dword ptr [rsi + 0x10], eax
mov	eax, dword ptr [rbx + 0x38]
mov	dword ptr [rsi], 0x49
cmp	eax, dword ptr [rbx + 0x3c]
jge	0x1400036f8
jge	0x1400036f8
mov	rdx, qword ptr [rbx + 0x30]
movsxd	rcx, eax
add	eax, 1
mov	qword ptr [rdx + rcx*8], rsi
mov	dword ptr [rbx + 0x38], eax
jmp	0x14000363b
jmp	0x14000363b
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	0x1400020e0
call	0x1400020e0
mov	rsi, rax
mov	r9, qword ptr [rsp + 0x70]
test	r9, r9
je	0x140003658
je	0x140003658
mov	r8, rsi
mov	edx, 0x55
mov	rcx, rbx
call	0x1400014c0
call	0x1400014c0
mov	rsi, rax
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x42
je	0x140003700
je	0x140003700
test	rdi, rdi
je	0x140003680
je	0x140003680
mov	r9, rsi
mov	r8, rdi
mov	edx, 1
mov	rcx, rbx
call	0x1400014c0
call	0x1400014c0
mov	rsi, rax
mov	rax, rsi
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
cmp	byte ptr [rdx + 1], 0x6e
jne	0x1400034d1
jne	0x1400034d1
add	rdx, 2
mov	dword ptr [rbx + 0x4c], 0
mov	qword ptr [rbx + 0x18], rdx
jmp	0x1400034d1
jmp	0x1400034d1
nop	
movzx	eax, byte ptr [rdx + 1]
cmp	al, 0x43
je	0x1400037f0
je	0x1400037f0
mov	rcx, qword ptr [rbx + 0x40]
test	rcx, rcx
je	0x1400036db
je	0x1400036db
mov	r8d, dword ptr [rcx]
test	r8d, r8d
je	0x140003860
je	0x140003860
cmp	r8d, 0x18
je	0x140003860
je	0x140003860
sub	eax, 0x30
cmp	al, 5
ja	0x1400036f8
ja	0x1400036f8
lea	r8, [rip + 0xb8bd3]
movzx	eax, al
movsxd	rax, dword ptr [r8 + rax*4]
add	rax, r8
jmp	rax
jmp	rax
nop	dword ptr [rax]
xor	esi, esi
jmp	0x14000363b
jmp	0x14000363b
nop	
mov	rbp, qword ptr [rbx + 0x40]
nop	dword ptr [rax]
add	rax, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], rax
call	0x1400020e0
call	0x1400020e0
mov	r8, rsi
mov	edx, 0x4d
mov	rcx, rbx
mov	r9, rax
call	0x1400014c0
call	0x1400014c0
mov	rsi, rax
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x42
je	0x140003708
je	0x140003708
mov	qword ptr [rbx + 0x40], rbp
jmp	0x140003665
jmp	0x140003665
add	rdx, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], rdx
call	0x1400020e0
call	0x1400020e0
mov	rsi, rax
test	rax, rax
je	0x140003770
je	0x140003770
mov	rcx, rbx
call	0x1400017d0
call	0x1400017d0
test	eax, eax
jne	0x14000363b
jne	0x14000363b
nop	dword ptr [rax + rax]
xor	esi, esi
jmp	0x140003680
jmp	0x140003680
mov	r8d, 2
add	rdx, 2
mov	eax, dword ptr [rbx + 0x28]
mov	qword ptr [rbx + 0x18], rdx
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x1400036f8
jge	0x1400036f8
movsxd	rsi, eax
add	eax, 1
shl	rsi, 5
add	rsi, qword ptr [rbx + 0x20]
mov	qword ptr [rsi + 4], 0
mov	dword ptr [rbx + 0x28], eax
test	rcx, rcx
je	0x1400036f8
je	0x1400036f8
mov	qword ptr [rsi + 4], 0
mov	dword ptr [rsi], 8
mov	dword ptr [rsi + 0x10], r8d
mov	qword ptr [rsi + 0x18], rcx
jmp	0x14000363b
jmp	0x14000363b
mov	r8d, 1
jmp	0x14000377d
jmp	0x14000377d
mov	r8d, 4
jmp	0x14000377d
jmp	0x14000377d
mov	r8d, 3
jmp	0x14000377d
jmp	0x14000377d
mov	r8d, 5
jmp	0x14000377d
jmp	0x14000377d
nop	
add	rdx, 2
xor	ebp, ebp
mov	qword ptr [rbx + 0x18], rdx
jmp	0x14000381a
jmp	0x14000381a
nop	dword ptr [rax]
mov	qword ptr [r11 + 0x18], rax
test	rbp, rbp
je	0x1400036f8
je	0x1400036f8
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x45
je	0x1400039e0
je	0x1400039e0
mov	rcx, rbx
call	0x1400020e0
call	0x1400020e0
xor	r9d, r9d
mov	edx, 0x52
mov	rcx, rbx
mov	r8, rax
mov	r11, rbp
call	0x1400014c0
call	0x1400014c0
mov	rbp, rax
test	r11, r11
jne	0x140003800
jne	0x140003800
mov	rsi, rax
jmp	0x140003804
jmp	0x140003804
mov	rcx, qword ptr [rbx + 0x40]
test	rcx, rcx
je	0x140003871
je	0x140003871
mov	eax, dword ptr [rcx]
test	eax, eax
je	0x140003860
je	0x140003860
cmp	eax, 0x18
jne	0x140003871
jne	0x140003871
nop	dword ptr [rax]
mov	eax, dword ptr [rcx + 0x18]
add	dword ptr [rbx + 0x48], eax
movzx	eax, byte ptr [rdx]
cmp	al, 0x43
jne	0x1400039c6
jne	0x1400039c6
movsx	eax, byte ptr [rdx + 1]
cmp	al, 0x49
je	0x1400039ed
je	0x1400039ed
lea	r8d, [rax - 0x31]
cmp	r8b, 4
ja	0x1400036f8
ja	0x1400036f8
add	rdx, 2
lea	ebp, [rax - 0x30]
mov	qword ptr [rbx + 0x18], rdx
mov	eax, dword ptr [rbx + 0x28]
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x1400036f8
jge	0x1400036f8
movsxd	rsi, eax
add	eax, 1
shl	rsi, 5
add	rsi, qword ptr [rbx + 0x20]
mov	qword ptr [rsi + 4], 0
mov	dword ptr [rbx + 0x28], eax
test	rcx, rcx
je	0x1400036f8
je	0x1400036f8
mov	qword ptr [rsi + 4], 0
mov	dword ptr [rsi], 7
mov	dword ptr [rsi + 0x10], ebp
mov	qword ptr [rsi + 0x18], rcx
jmp	0x14000363b
jmp	0x14000363b
nop	
lea	rax, [rdx + 1]
mov	qword ptr [rbx + 0x18], rax
cmp	byte ptr [rdx + 1], 0x6c
jne	0x1400036f8
jne	0x1400036f8
add	rdx, 2
mov	rcx, rbx
mov	dword ptr [rsp + 0x2c], 0
mov	qword ptr [rbx + 0x18], rdx
lea	rdx, [rsp + 0x2c]
call	0x140003270
call	0x140003270
mov	r12d, dword ptr [rsp + 0x2c]
mov	rbp, rax
test	r12d, r12d
jne	0x1400036f8
jne	0x1400036f8
mov	rcx, rbx
call	0x140002f70
call	0x140002f70
test	rax, rax
je	0x1400036f8
je	0x1400036f8
test	rbp, rbp
je	0x140003a28
je	0x140003a28
mov	qword ptr [rbp + 0x18], rax
mov	rdx, qword ptr [rbx + 0x18]
cmp	byte ptr [rdx], 0x45
jne	0x1400036f8
jne	0x1400036f8
lea	rax, [rdx + 1]
mov	qword ptr [rbx + 0x18], rax
movzx	edx, byte ptr [rdx + 1]
cmp	dl, 0x5f
je	0x140003986
je	0x140003986
cmp	dl, 0x6e
je	0x1400036f8
je	0x1400036f8
mov	rcx, rbx
call	0x140001630
call	0x140001630
add	eax, 1
mov	r12d, eax
js	0x1400036f8
js	0x1400036f8
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x5f
jne	0x1400036f8
jne	0x1400036f8
add	rax, 1
mov	qword ptr [rbx + 0x18], rax
mov	eax, dword ptr [rbx + 0x28]
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x1400036f8
jge	0x1400036f8
movsxd	rsi, eax
add	eax, 1
shl	rsi, 5
add	rsi, qword ptr [rbx + 0x20]
mov	qword ptr [rsi + 4], 0
mov	dword ptr [rbx + 0x28], eax
mov	dword ptr [rsi], 0x47
mov	qword ptr [rsi + 0x10], rbp
mov	dword ptr [rsi + 0x18], r12d
jmp	0x14000363b
jmp	0x14000363b
cmp	al, 0x44
jne	0x1400036f8
jne	0x1400036f8
movzx	eax, byte ptr [rdx + 1]
jmp	0x1400036db
jmp	0x1400036db
nop	word ptr [rax + rax]
add	rax, 1
mov	qword ptr [rbx + 0x18], rax
jmp	0x14000363b
jmp	0x14000363b
lea	rax, [rdx + 1]
mov	qword ptr [rbx + 0x18], rax
movsx	eax, byte ptr [rdx + 2]
lea	ecx, [rax - 0x31]
cmp	cl, 4
ja	0x1400036f8
ja	0x1400036f8
add	rdx, 3
mov	rcx, rbx
lea	ebp, [rax - 0x30]
mov	qword ptr [rbx + 0x18], rdx
call	0x1400024c0
call	0x1400024c0
mov	rcx, qword ptr [rbx + 0x40]
jmp	0x140003896
jmp	0x140003896
xor	eax, eax
jmp	0x1400035d1
jmp	0x1400035d1
mov	rbp, rax
jmp	0x14000393e
jmp	0x14000393e
test	rsi, rsi
je	0x140003665
je	0x140003665
mov	r9, rsi
xor	esi, esi
jmp	0x140003645
jmp	0x140003645
nop	word ptr cs:[rax + rax]
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rdx, qword ptr [rcx + 0x18]
cmp	byte ptr [rdx], 0x4c
mov	rbx, rcx
jne	0x140003adb
jne	0x140003adb
lea	rax, [rdx + 1]
mov	qword ptr [rcx + 0x18], rax
movzx	ecx, byte ptr [rdx + 1]
cmp	cl, 0x5f
je	0x140003be0
je	0x140003be0
cmp	cl, 0x5a
je	0x140003af0
je	0x140003af0
mov	rcx, rbx
call	0x1400024c0
call	0x1400024c0
mov	rsi, rax
test	rax, rax
je	0x140003adb
je	0x140003adb
cmp	dword ptr [rax], 0x27
mov	rdi, qword ptr [rbx + 0x18]
je	0x140003b48
je	0x140003b48
movzx	ecx, byte ptr [rdi]
mov	r10d, 0x3d
cmp	cl, 0x6e
je	0x140003b90
je	0x140003b90
cmp	cl, 0x45
je	0x140003c24
je	0x140003c24
lea	rdx, [rdi + 1]
jmp	0x140003ad7
jmp	0x140003ad7
nop	dword ptr [rax + rax]
mov	qword ptr [rbx + 0x18], rdx
mov	r8, rdx
movzx	ecx, byte ptr [rdx]
add	rdx, 1
cmp	cl, 0x45
je	0x140003bb0
je	0x140003bb0
test	cl, cl
jne	0x140003ac0
jne	0x140003ac0
xor	esi, esi
mov	rax, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
cmp	cl, 0x5f
je	0x140003be0
je	0x140003be0
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x18], rdx
movzx	eax, byte ptr [rax + 1]
cmp	al, 0x47
je	0x140003c00
je	0x140003c00
cmp	al, 0x54
je	0x140003c00
je	0x140003c00
xor	edx, edx
mov	rcx, rbx
call	0x140005430
call	0x140005430
mov	rsi, rax
mov	rax, qword ptr [rbx + 0x18]
movzx	edx, byte ptr [rax]
cmp	dl, 0x45
jne	0x140003adb
jne	0x140003adb
add	rax, 1
mov	qword ptr [rbx + 0x18], rax
mov	rax, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rax + 0x10]
mov	edx, dword ptr [rax + 0x1c]
test	edx, edx
je	0x140003b59
je	0x140003b59
mov	edx, dword ptr [rax + 8]
sub	dword ptr [rbx + 0x48], edx
mov	rcx, qword ptr [rax]
lea	rdx, [rip + 0xb8771]
call	0x1400159e8
call	0x1400159e8
movzx	ecx, byte ptr [rdi]
test	eax, eax
jne	0x140003a9d
jne	0x140003a9d
cmp	cl, 0x45
je	0x140003c17
je	0x140003c17
mov	r10d, 0x3d
cmp	cl, 0x6e
jne	0x140003ab5
jne	0x140003ab5
nop	dword ptr [rax + rax]
lea	rax, [rdi + 1]
mov	r10d, 0x3e
mov	qword ptr [rbx + 0x18], rax
movzx	ecx, byte ptr [rdi + 1]
mov	rdi, rax
jmp	0x140003aac
jmp	0x140003aac
nop	word ptr [rax + rax]
sub	r8d, edi
mov	rdx, rdi
mov	rcx, rbx
call	0x1400015d0
call	0x1400015d0
mov	r8, rsi
mov	edx, r10d
mov	r9, rax
call	0x1400014c0
call	0x1400014c0
mov	rsi, rax
mov	rax, qword ptr [rbx + 0x18]
movzx	edx, byte ptr [rax]
jmp	0x140003b29
jmp	0x140003b29
nop	dword ptr [rax + rax]
lea	rax, [rdx + 2]
xor	esi, esi
mov	qword ptr [rbx + 0x18], rax
movzx	edx, byte ptr [rdx + 2]
cmp	dl, 0x5a
jne	0x140003b29
jne	0x140003b29
jmp	0x140003af9
jmp	0x140003af9
nop	dword ptr [rax]
mov	rcx, rbx
call	0x1400049a0
call	0x1400049a0
mov	rsi, rax
mov	rax, qword ptr [rbx + 0x18]
movzx	edx, byte ptr [rax]
jmp	0x140003b29
jmp	0x140003b29
add	rdi, 1
mov	qword ptr [rbx + 0x18], rdi
jmp	0x140003add
jmp	0x140003add
xor	r8d, r8d
jmp	0x140003bb3
jmp	0x140003bb3
nop	dword ptr [rax]
push	rsi
sub	rsp, 0x30
mov	rax, qword ptr [rcx + 0x18]
movzx	edx, byte ptr [rax]
cmp	dl, 0x4c
je	0x140003ca0
je	0x140003ca0
jg	0x140003c60
jg	0x140003c60
sub	edx, 0x49
cmp	dl, 1
ja	0x140003cb0
ja	0x140003cb0
add	rax, 1
mov	qword ptr [rcx + 0x18], rax
add	rsp, 0x30
pop	rsi
jmp	0x140003cd0
jmp	0x140003cd0
nop	word ptr [rax + rax]
cmp	dl, 0x58
jne	0x140003cb0
jne	0x140003cb0
add	rax, 1
mov	esi, dword ptr [rcx + 0x4c]
mov	dword ptr [rcx + 0x4c], 1
mov	qword ptr [rcx + 0x18], rax
mov	qword ptr [rsp + 0x28], rcx
call	0x140003f00
call	0x140003f00
mov	rcx, qword ptr [rsp + 0x28]
mov	rdx, qword ptr [rcx + 0x18]
mov	dword ptr [rcx + 0x4c], esi
cmp	byte ptr [rdx], 0x45
jne	0x140003cc0
jne	0x140003cc0
add	rdx, 1
mov	qword ptr [rcx + 0x18], rdx
add	rsp, 0x30
pop	rsi
ret	
ret	
add	rsp, 0x30
pop	rsi
jmp	0x140003a50
jmp	0x140003a50
nop	word ptr [rax + rax]
add	rsp, 0x30
pop	rsi
jmp	0x1400024c0
jmp	0x1400024c0
nop	word ptr [rax + rax]
xor	eax, eax
jmp	0x140003c9a
jmp	0x140003c9a
nop	word ptr cs:[rax + rax]
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rcx + 0x18]
mov	rdi, qword ptr [rcx + 0x40]
cmp	byte ptr [rax], 0x45
mov	rbx, rcx
je	0x140003d60
je	0x140003d60
mov	qword ptr [rsp + 0x28], 0
lea	rsi, [rsp + 0x28]
jmp	0x140003d25
jmp	0x140003d25
nop	word ptr [rax + rax]
xor	r9d, r9d
mov	edx, 0x2f
mov	rcx, rbx
call	0x1400014c0
call	0x1400014c0
mov	qword ptr [rsi], rax
test	rax, rax
je	0x140003d35
je	0x140003d35
lea	rsi, [rax + 0x18]
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x45
je	0x140003d40
je	0x140003d40
mov	rcx, rbx
call	0x140003c30
call	0x140003c30
mov	r8, rax
test	rax, rax
jne	0x140003d00
jne	0x140003d00
xor	eax, eax
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
add	rax, 1
mov	qword ptr [rbx + 0x40], rdi
mov	qword ptr [rbx + 0x18], rax
mov	rax, qword ptr [rsp + 0x28]
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
add	rax, 1
xor	r9d, r9d
xor	r8d, r8d
mov	edx, 0x2f
mov	qword ptr [rcx + 0x18], rax
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
jmp	0x1400014c0
jmp	0x1400014c0
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	ebx, ebx
mov	rsi, rcx
mov	edi, edx
mov	rcx, qword ptr [rsi + 0x18]
movzx	edx, byte ptr [rcx]
cmp	dl, 0x44
je	0x140003e70
je	0x140003e70
cmp	dl, 0x49
je	0x140003eb0
je	0x140003eb0
cmp	dl, 0x54
jne	0x140003e20
jne	0x140003e20
test	rbx, rbx
jne	0x140003ec0
jne	0x140003ec0
mov	rcx, rsi
call	0x140001e10
call	0x140001e10
mov	rbx, rax
test	rbx, rbx
je	0x140003ec0
je	0x140003ec0
mov	rcx, qword ptr [rsi + 0x18]
cmp	byte ptr [rcx], 0x45
je	0x140003ec2
je	0x140003ec2
test	edi, edi
jne	0x140003e90
jne	0x140003e90
movzx	edx, byte ptr [rcx]
cmp	dl, 0x44
je	0x140003e70
je	0x140003e70
cmp	dl, 0x49
jne	0x140003da7
jne	0x140003da7
add	rcx, 1
mov	qword ptr [rsi + 0x18], rcx
mov	rcx, rsi
call	0x140003cd0
call	0x140003cd0
mov	r9, rax
test	rax, rax
je	0x140003ec0
je	0x140003ec0
mov	r8, rbx
mov	edx, 4
mov	rcx, rsi
call	0x1400014c0
call	0x1400014c0
mov	rbx, rax
jmp	0x140003dc0
jmp	0x140003dc0
cmp	dl, 0x4d
je	0x140003ef0
je	0x140003ef0
cmp	dl, 0x53
jne	0x140003ed0
jne	0x140003ed0
mov	edx, 1
mov	rcx, rsi
call	0x1400021d0
call	0x1400021d0
mov	r8, rax
test	rax, rax
je	0x140003ec0
je	0x140003ec0
mov	eax, dword ptr [rax]
sub	eax, 0x53
cmp	eax, 1
jbe	0x140003ed3
jbe	0x140003ed3
test	rbx, rbx
jne	0x140003ec0
jne	0x140003ec0
mov	rcx, qword ptr [rsi + 0x18]
mov	rbx, r8
movzx	edx, byte ptr [rcx]
cmp	dl, 0x44
jne	0x140003dea
jne	0x140003dea
nop	dword ptr [rax]
movzx	eax, byte ptr [rcx + 1]
and	eax, 0xffffffdf
cmp	al, 0x54
jne	0x140003ed0
jne	0x140003ed0
test	rbx, rbx
jne	0x140003ec0
jne	0x140003ec0
mov	rcx, rsi
call	0x1400024c0
call	0x1400024c0
mov	rbx, rax
jmp	0x140003dc0
jmp	0x140003dc0
mov	eax, dword ptr [rsi + 0x38]
cmp	eax, dword ptr [rsi + 0x3c]
jge	0x140003ec0
jge	0x140003ec0
mov	rdx, qword ptr [rsi + 0x30]
movsxd	r8, eax
add	eax, 1
mov	qword ptr [rdx + r8*8], rbx
mov	dword ptr [rsi + 0x38], eax
jmp	0x140003dde
jmp	0x140003dde
nop	
test	rbx, rbx
jne	0x140003def
jne	0x140003def
nop	dword ptr [rax]
xor	ebx, ebx
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
xor	r8d, r8d
mov	rdx, rbx
mov	rcx, rsi
call	0x140003480
call	0x140003480
mov	rbx, rax
jmp	0x140003dc0
jmp	0x140003dc0
nop	word ptr cs:[rax + rax]
add	rcx, 1
mov	qword ptr [rsi + 0x18], rcx
jmp	0x140003d8e
jmp	0x140003d8e
nop	dword ptr [rax]
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rdx, qword ptr [rcx + 0x18]
movzx	eax, byte ptr [rdx]
mov	rbx, rcx
cmp	al, 0x4c
je	0x1400042a8
je	0x1400042a8
cmp	al, 0x54
je	0x1400042b8
je	0x1400042b8
cmp	al, 0x73
je	0x140003f80
je	0x140003f80
cmp	al, 0x66
je	0x140003ff0
je	0x140003ff0
lea	ecx, [rax - 0x30]
cmp	cl, 9
jbe	0x140003f4c
jbe	0x140003f4c
cmp	al, 0x6f
jne	0x140004210
jne	0x140004210
cmp	byte ptr [rdx + 1], 0x6e
jne	0x140003f94
jne	0x140003f94
add	rdx, 2
mov	qword ptr [rbx + 0x18], rdx
xor	r8d, r8d
xor	edx, edx
mov	rcx, rbx
call	0x140003480
call	0x140003480
mov	rsi, rax
test	rax, rax
je	0x140004260
je	0x140004260
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x49
je	0x140004158
je	0x140004158
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
movzx	eax, byte ptr [rdx + 1]
cmp	al, 0x72
je	0x1400040d0
je	0x1400040d0
cmp	al, 0x70
je	0x140004410
je	0x140004410
mov	rcx, rbx
call	0x1400032e0
call	0x1400032e0
mov	rsi, rax
test	rax, rax
je	0x140004260
je	0x140004260
mov	eax, dword ptr [rax]
cmp	eax, 0x32
je	0x140004088
je	0x140004088
cmp	eax, 0x33
je	0x1400042c8
je	0x1400042c8
cmp	eax, 0x34
jne	0x140004260
jne	0x140004260
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x5f
je	0x1400043a2
je	0x1400043a2
mov	rcx, rbx
call	0x140003f00
call	0x140003f00
mov	r9, rax
mov	r8, rsi
mov	edx, 0x37
jmp	0x140004173
jmp	0x140004173
nop	word ptr [rax + rax]
cmp	byte ptr [rdx + 1], 0x70
jne	0x140003f94
jne	0x140003f94
lea	rax, [rdx + 2]
mov	qword ptr [rcx + 0x18], rax
movzx	eax, byte ptr [rdx + 2]
cmp	al, 0x54
je	0x140004400
je	0x140004400
cmp	al, 0x5f
je	0x140004390
je	0x140004390
cmp	al, 0x6e
je	0x140004260
je	0x140004260
call	0x140001630
call	0x140001630
mov	ecx, eax
add	ecx, 1
js	0x140004260
js	0x140004260
mov	rdx, qword ptr [rbx + 0x18]
cmp	byte ptr [rdx], 0x5f
jne	0x140004260
jne	0x140004260
add	rdx, 1
mov	qword ptr [rbx + 0x18], rdx
cmp	ecx, 0x7fffffff
je	0x140004260
je	0x140004260
lea	edx, [rax + 2]
mov	eax, dword ptr [rbx + 0x28]
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x140004260
jge	0x140004260
movsxd	rsi, eax
add	eax, 1
shl	rsi, 5
add	rsi, qword ptr [rbx + 0x20]
mov	qword ptr [rsi + 4], 0
mov	dword ptr [rbx + 0x28], eax
mov	dword ptr [rsi], 6
mov	dword ptr [rsi + 0x10], edx
jmp	0x140003f72
jmp	0x140003f72
nop	dword ptr [rax]
mov	rdx, qword ptr [rsi + 0x10]
mov	rdi, qword ptr [rdx]
mov	eax, dword ptr [rdx + 0x10]
sub	eax, 2
add	dword ptr [rbx + 0x48], eax
movzx	eax, byte ptr [rdi]
cmp	eax, 0x73
jne	0x140004188
jne	0x140004188
cmp	byte ptr [rdi + 1], 0x74
jne	0x140004188
jne	0x140004188
cmp	byte ptr [rdi + 2], 0
jne	0x140004188
jne	0x140004188
mov	rcx, rbx
call	0x1400024c0
call	0x1400024c0
mov	r8, rsi
mov	edx, 0x37
mov	r9, rax
jmp	0x140004173
jmp	0x140004173
lea	rax, [rdx + 2]
mov	qword ptr [rcx + 0x18], rax
movzx	eax, byte ptr [rdx + 2]
mov	edx, dword ptr [rcx + 0x54]
test	edx, edx
je	0x140004435
je	0x140004435
cmp	al, 0x39
jle	0x14000442d
jle	0x14000442d
sub	eax, 0x43
cmp	al, 0x37
ja	0x140004435
ja	0x140004435
movabs	rdx, 0xffffffc0040201
bt	rdx, rax
jae	0x140004435
jae	0x140004435
mov	dword ptr [rbx + 0x54], 0xffffffff
xor	edx, edx
mov	rcx, rbx
call	0x140003d80
call	0x140003d80
mov	rdx, rax
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x45
jne	0x140004138
jne	0x140004138
add	rax, 1
mov	qword ptr [rbx + 0x18], rax
nop	dword ptr [rax + rax]
xor	r8d, r8d
mov	rcx, rbx
call	0x140003480
call	0x140003480
mov	rsi, rax
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x49
jne	0x140003f72
jne	0x140003f72
nop	dword ptr [rax + rax]
add	rax, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], rax
call	0x140003cd0
call	0x140003cd0
mov	r8, rsi
mov	edx, 4
mov	r9, rax
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x1400014c0
jmp	0x1400014c0
nop	dword ptr [rax + rax]
mov	ebp, dword ptr [rdx + 0x14]
cmp	ebp, 2
je	0x1400042f0
je	0x1400042f0
jg	0x140004448
jg	0x140004448
test	ebp, ebp
je	0x1400042dd
je	0x1400042dd
cmp	ebp, 1
jne	0x140004260
jne	0x140004260
movzx	edx, byte ptr [rdi]
cmp	dl, 0x70
je	0x1400043c0
je	0x1400043c0
cmp	dl, 0x6d
je	0x1400043c0
je	0x1400043c0
xor	ebp, ebp
cmp	eax, 0x73
jne	0x1400043f0
jne	0x1400043f0
cmp	byte ptr [rdi + 1], 0x50
jne	0x1400043f0
jne	0x1400043f0
cmp	byte ptr [rdi + 2], 0
jne	0x1400043f0
jne	0x1400043f0
mov	rcx, rbx
call	0x140003cd0
call	0x140003cd0
mov	r9, rax
test	ebp, ebp
je	0x140003fdd
je	0x140003fdd
mov	r8, r9
mov	edx, 0x39
mov	rcx, rbx
call	0x1400014c0
call	0x1400014c0
mov	r9, rax
jmp	0x140003fdd
jmp	0x140003fdd
nop	word ptr [rax + rax]
cmp	al, 0x69
je	0x140004218
je	0x140004218
cmp	al, 0x74
jne	0x140004270
jne	0x140004270
cmp	byte ptr [rdx + 1], 0x6c
jne	0x140003f94
jne	0x140003f94
add	rdx, 2
xor	esi, esi
mov	qword ptr [rbx + 0x18], rdx
cmp	al, 0x74
je	0x1400044d0
je	0x1400044d0
cmp	byte ptr [rdx], 0
je	0x140004260
je	0x140004260
cmp	byte ptr [rdx + 1], 0
je	0x140004260
je	0x140004260
mov	edx, 0x45
mov	rcx, rbx
call	0x1400048f0
call	0x1400048f0
mov	r8, rsi
mov	edx, 0x31
mov	r9, rax
jmp	0x140004173
jmp	0x140004173
nop	dword ptr [rax]
xor	esi, esi
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
cmp	al, 0x75
jne	0x140003f94
jne	0x140003f94
add	rdx, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], rdx
call	0x1400020e0
call	0x1400020e0
mov	rcx, rbx
mov	rsi, rax
call	0x140003cd0
call	0x140003cd0
mov	r8, rsi
mov	edx, 0x3f
mov	r9, rax
jmp	0x140004173
jmp	0x140004173
nop	dword ptr [rax + rax]
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x140003a50
jmp	0x140003a50
nop	dword ptr [rax]
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x140001e10
jmp	0x140001e10
nop	dword ptr [rax]
mov	eax, dword ptr [rsi + 0x10]
cmp	eax, 1
je	0x140003fd2
je	0x140003fd2
cmp	eax, 3
je	0x140004260
je	0x140004260
test	eax, eax
jne	0x140004260
jne	0x140004260
xor	r9d, r9d
mov	r8, rsi
mov	edx, 0x36
jmp	0x140004173
jmp	0x140004173
nop	dword ptr [rax]
cmp	byte ptr [rdi + 1], 0x63
movzx	edx, byte ptr [rdi]
je	0x140004604
je	0x140004604
cmp	dl, 0x66
je	0x140004669
je	0x140004669
cmp	eax, 0x64
jne	0x14000464d
jne	0x14000464d
cmp	byte ptr [rdi + 1], 0x69
jne	0x14000464d
jne	0x14000464d
cmp	byte ptr [rdi + 2], 0
jne	0x14000464d
jne	0x14000464d
xor	r8d, r8d
xor	edx, edx
mov	rcx, rbx
call	0x140003480
call	0x140003480
mov	rbp, rax
movzx	eax, byte ptr [rdi]
cmp	eax, 0x63
jne	0x140004580
jne	0x140004580
cmp	byte ptr [rdi + 1], 0x6c
jne	0x140004580
jne	0x140004580
cmp	byte ptr [rdi + 2], 0
jne	0x140004580
jne	0x140004580
mov	edx, 0x45
mov	rcx, rbx
call	0x1400048f0
call	0x1400048f0
mov	rdi, rax
mov	r9, rdi
mov	r8, rbp
mov	edx, 0x39
mov	rcx, rbx
call	0x1400014c0
call	0x1400014c0
mov	r8, rsi
mov	edx, 0x38
mov	r9, rax
jmp	0x140004173
jmp	0x140004173
nop	word ptr cs:[rax + rax]
add	rdx, 3
mov	qword ptr [rcx + 0x18], rdx
mov	edx, 1
jmp	0x14000404e
jmp	0x14000404e
add	rax, 1
mov	edx, 0x45
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], rax
call	0x1400048f0
call	0x1400048f0
mov	r9, rax
jmp	0x140003fdd
jmp	0x140003fdd
nop	
cmp	byte ptr [rdi + 1], dl
jne	0x1400041c0
jne	0x1400041c0
mov	rdx, qword ptr [rbx + 0x18]
cmp	byte ptr [rdx], 0x5f
jne	0x1400041c2
jne	0x1400041c2
add	rdx, 1
mov	qword ptr [rbx + 0x18], rdx
movzx	eax, byte ptr [rdi]
jmp	0x1400041c0
jmp	0x1400041c0
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	0x140003f00
call	0x140003f00
mov	r9, rax
jmp	0x1400041ea
jmp	0x1400041ea
add	rdx, 3
mov	qword ptr [rcx + 0x18], rdx
xor	edx, edx
jmp	0x14000404e
jmp	0x14000404e
nop	
add	rdx, 2
mov	qword ptr [rcx + 0x18], rdx
call	0x140003f00
call	0x140003f00
xor	r9d, r9d
mov	edx, 0x4c
mov	r8, rax
jmp	0x140004173
jmp	0x140004173
cmp	al, 0x2f
jg	0x14000410e
jg	0x14000410e
mov	rcx, rbx
call	0x1400024c0
call	0x1400024c0
mov	rdx, rax
jmp	0x140004138
jmp	0x140004138
nop	dword ptr [rax]
cmp	ebp, 3
jne	0x140004260
jne	0x140004260
cmp	eax, 0x71
jne	0x1400044e8
jne	0x1400044e8
cmp	byte ptr [rdi + 1], 0x75
jne	0x1400044e8
jne	0x1400044e8
cmp	byte ptr [rdi + 2], 0
jne	0x1400044e8
jne	0x1400044e8
mov	rcx, rbx
call	0x140003f00
call	0x140003f00
mov	rcx, rbx
mov	rdi, rax
call	0x140003f00
call	0x140003f00
mov	rcx, rbx
mov	rbp, rax
call	0x140003f00
call	0x140003f00
mov	r9, rax
test	rax, rax
je	0x140004260
je	0x140004260
mov	r8, rbp
mov	edx, 0x3c
mov	rcx, rbx
call	0x1400014c0
call	0x1400014c0
mov	r8, rdi
mov	edx, 0x3b
mov	rcx, rbx
mov	r9, rax
call	0x1400014c0
call	0x1400014c0
mov	r8, rsi
mov	edx, 0x3a
mov	r9, rax
jmp	0x140004173
jmp	0x140004173
nop	word ptr [rax + rax]
mov	rcx, rbx
call	0x1400024c0
call	0x1400024c0
mov	rdx, qword ptr [rbx + 0x18]
mov	rsi, rax
jmp	0x140004234
jmp	0x140004234
nop	dword ptr [rax]
cmp	eax, 0x64
jne	0x1400044fd
jne	0x1400044fd
cmp	byte ptr [rdi + 1], 0x58
jne	0x1400044fd
jne	0x1400044fd
cmp	byte ptr [rdi + 2], 0
je	0x14000446a
je	0x14000446a
movzx	eax, byte ptr [rdi]
cmp	al, 0x66
je	0x140004679
je	0x140004679
cmp	al, 0x6e
jne	0x140004260
jne	0x140004260
movzx	eax, byte ptr [rdi + 1]
cmp	al, 0x77
je	0x140004520
je	0x140004520
cmp	al, 0x61
jne	0x140004260
jne	0x140004260
mov	edx, 0x5f
mov	rcx, rbx
call	0x1400048f0
call	0x1400048f0
mov	rcx, rbx
mov	rdi, rax
call	0x1400024c0
call	0x1400024c0
mov	rbp, rax
mov	rax, qword ptr [rbx + 0x18]
movzx	edx, byte ptr [rax]
cmp	dl, 0x45
je	0x1400046ad
je	0x1400046ad
cmp	dl, 0x70
je	0x140004686
je	0x140004686
cmp	dl, 0x69
jne	0x140004260
jne	0x140004260
cmp	byte ptr [rax + 1], 0x6c
jne	0x140004260
jne	0x140004260
mov	rcx, rbx
call	0x140003f00
call	0x140003f00
mov	r9, rax
jmp	0x140004494
jmp	0x140004494
nop	word ptr [rax + rax]
cmp	eax, 0x64
jne	0x140004628
jne	0x140004628
cmp	byte ptr [rdi + 1], 0x74
jne	0x140004628
jne	0x140004628
cmp	byte ptr [rdi + 2], 0
jne	0x140004628
jne	0x140004628
mov	rax, qword ptr [rbx + 0x18]
movzx	edx, byte ptr [rax]
cmp	dl, 0x67
je	0x14000465d
je	0x14000465d
cmp	dl, 0x73
jne	0x1400045bc
jne	0x1400045bc
cmp	byte ptr [rax + 1], 0x72
je	0x14000463d
je	0x14000463d
xor	r8d, r8d
xor	edx, edx
mov	rcx, rbx
call	0x140003480
call	0x140003480
mov	rdi, rax
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x49
jne	0x140004363
jne	0x140004363
add	rax, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], rax
call	0x140003cd0
call	0x140003cd0
mov	r8, rdi
mov	edx, 4
mov	rcx, rbx
mov	r9, rax
call	0x1400014c0
call	0x1400014c0
mov	rdi, rax
jmp	0x140004363
jmp	0x140004363
lea	ecx, [rdx - 0x63]
cmp	cl, 1
jbe	0x140004618
jbe	0x140004618
lea	ecx, [rdx - 0x72]
cmp	cl, 1
ja	0x1400042fd
ja	0x1400042fd
mov	rcx, rbx
call	0x1400024c0
call	0x1400024c0
mov	rbp, rax
jmp	0x140004333
jmp	0x140004333
cmp	eax, 0x70
jne	0x14000463d
jne	0x14000463d
cmp	byte ptr [rdi + 1], 0x74
jne	0x14000463d
jne	0x14000463d
cmp	byte ptr [rdi + 2], 0
je	0x14000459d
je	0x14000459d
mov	rcx, rbx
call	0x140003f00
call	0x140003f00
mov	rdi, rax
jmp	0x140004363
jmp	0x140004363
mov	rcx, rbx
call	0x140003f00
call	0x140003f00
mov	rbp, rax
jmp	0x140004333
jmp	0x140004333
cmp	byte ptr [rax + 1], 0x73
jne	0x1400045bc
jne	0x1400045bc
jmp	0x14000463d
jmp	0x14000463d
mov	rcx, rbx
call	0x1400032e0
call	0x1400032e0
mov	rbp, rax
jmp	0x140004333
jmp	0x140004333
mov	rcx, rbx
call	0x1400032e0
call	0x1400032e0
jmp	0x140004472
jmp	0x140004472
cmp	byte ptr [rax + 1], 0x69
jne	0x140004260
jne	0x140004260
add	rax, 2
mov	edx, 0x45
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], rax
call	0x1400048f0
call	0x1400048f0
mov	r9, rax
jmp	0x140004494
jmp	0x140004494
add	rax, 1
xor	r9d, r9d
mov	qword ptr [rbx + 0x18], rax
jmp	0x140004494
jmp	0x140004494
nop	dword ptr [rax]
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	r13d, r8d
mov	r14, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	rsi, rdx
mov	eax, r13d
mov	rbx, rdx
and	eax, 1
movzx	r8d, byte ptr [rcx]
cmp	al, 1
sbb	r12d, r12d
and	r12d, 0xfffffffd
add	r12d, 0x1e
cmp	al, 1
sbb	ebp, ebp
and	ebp, 0xfffffffd
add	ebp, 0x1d
cmp	al, 1
sbb	edi, edi
and	edi, 0xfffffffd
add	edi, 0x1c
jmp	0x140004787
jmp	0x140004787
nop	dword ptr [rax]
cmp	r8b, 0x56
je	0x1400047b8
je	0x1400047b8
cmp	r8b, 0x4b
je	0x140004810
je	0x140004810
cmp	byte ptr [rcx + 1], 0
je	0x1400047f0
je	0x1400047f0
lea	rax, [rcx + 2]
mov	qword ptr [r14 + 0x18], rax
movzx	eax, byte ptr [rcx + 1]
cmp	al, 0x78
je	0x140004820
je	0x140004820
mov	edx, eax
and	edx, 0xffffffdf
cmp	dl, 0x4f
jne	0x1400048a8
jne	0x1400048a8
add	dword ptr [r14 + 0x48], 9
xor	r9d, r9d
mov	edx, 0x50
cmp	al, 0x4f
je	0x1400047c8
je	0x1400047c8
nop	dword ptr [rax]
xor	r8d, r8d
mov	rcx, r14
call	0x1400014c0
call	0x1400014c0
mov	qword ptr [rbx], rax
test	rax, rax
je	0x1400047f0
je	0x1400047f0
mov	rcx, qword ptr [r14 + 0x18]
lea	rbx, [rax + 0x10]
movzx	r8d, byte ptr [rcx]
call	0x140001b40
call	0x140001b40
test	eax, eax
je	0x140004858
je	0x140004858
lea	rax, [rcx + 1]
mov	qword ptr [r14 + 0x18], rax
cmp	r8b, 0x72
jne	0x140004710
jne	0x140004710
add	dword ptr [r14 + 0x48], 9
mov	edx, edi
xor	r9d, r9d
jmp	0x140004768
jmp	0x140004768
nop	word ptr [rax + rax]
add	dword ptr [r14 + 0x48], 9
mov	edx, ebp
xor	r9d, r9d
jmp	0x140004768
jmp	0x140004768
nop	dword ptr [rax]
mov	r15d, dword ptr [r14 + 0x4c]
mov	dword ptr [r14 + 0x4c], 1
mov	rcx, r14
call	0x140003f00
call	0x140003f00
mov	dword ptr [r14 + 0x4c], r15d
mov	r9, rax
test	rax, rax
jne	0x140004838
jne	0x140004838
nop	dword ptr [rax + rax]
xor	ebx, ebx
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr cs:[rax + rax]
add	dword ptr [r14 + 0x48], 6
mov	edx, r12d
xor	r9d, r9d
jmp	0x140004768
jmp	0x140004768
add	dword ptr [r14 + 0x48], 0x11
xor	r9d, r9d
mov	edx, 0x4e
jmp	0x140004768
jmp	0x140004768
nop	word ptr [rax + rax]
mov	rax, qword ptr [r14 + 0x18]
cmp	byte ptr [rax], 0x45
jne	0x1400047f0
jne	0x1400047f0
add	rax, 1
mov	edx, 0x50
mov	qword ptr [r14 + 0x18], rax
jmp	0x140004768
jmp	0x140004768
nop	dword ptr [rax + rax]
and	r13d, 1
jne	0x1400047f2
jne	0x1400047f2
cmp	r8b, 0x46
je	0x140004884
je	0x140004884
jmp	0x1400047f2
jmp	0x1400047f2
nop	word ptr cs:[rax + rax]
cmp	eax, 0x1b
je	0x1400048a0
je	0x1400048a0
cmp	eax, 0x19
jne	0x140004880
jne	0x140004880
mov	dword ptr [rsi], 0x1c
add	rsi, 0x10
cmp	rbx, rsi
je	0x1400047f2
je	0x1400047f2
mov	rsi, qword ptr [rsi]
mov	eax, dword ptr [rsi]
cmp	eax, 0x1a
jne	0x140004870
jne	0x140004870
mov	dword ptr [rsi], 0x1d
jmp	0x140004880
jmp	0x140004880
nop	
mov	dword ptr [rsi], 0x1e
jmp	0x140004880
jmp	0x140004880
cmp	al, 0x77
jne	0x1400047f0
jne	0x1400047f0
add	dword ptr [r14 + 0x48], 6
mov	rcx, r14
call	0x140002f70
call	0x140002f70
mov	r9, rax
test	rax, rax
je	0x1400047f0
je	0x1400047f0
mov	rax, qword ptr [r14 + 0x18]
cmp	byte ptr [rax], 0x45
jne	0x1400047f0
jne	0x1400047f0
add	rax, 1
mov	edx, 0x51
mov	qword ptr [r14 + 0x18], rax
jmp	0x140004768
jmp	0x140004768
nop	dword ptr [rax + rax]
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rcx + 0x18]
mov	qword ptr [rsp + 0x28], 0
mov	rbx, rcx
mov	ebp, edx
lea	rsi, [rsp + 0x28]
cmp	byte ptr [rax], dl
jne	0x14000493d
jne	0x14000493d
jmp	0x140004980
jmp	0x140004980
nop	dword ptr [rax]
xor	r9d, r9d
mov	edx, 0x2e
mov	rcx, rbx
call	0x1400014c0
call	0x1400014c0
mov	qword ptr [rsi], rax
test	rax, rax
je	0x14000495a
je	0x14000495a
lea	rsi, [rax + 0x18]
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], bpl
je	0x140004968
je	0x140004968
mov	edi, dword ptr [rbx + 0x4c]
mov	dword ptr [rbx + 0x4c], 1
mov	rcx, rbx
call	0x140003f00
call	0x140003f00
mov	dword ptr [rbx + 0x4c], edi
mov	r8, rax
test	rax, rax
jne	0x140004918
jne	0x140004918
xor	eax, eax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
add	rax, 1
mov	qword ptr [rbx + 0x18], rax
mov	rax, qword ptr [rsp + 0x28]
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
add	rax, 1
xor	r9d, r9d
xor	r8d, r8d
mov	edx, 0x2e
mov	qword ptr [rcx + 0x18], rax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x1400014c0
jmp	0x1400014c0
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rbx, rcx
mov	ecx, dword ptr [rcx + 0x48]
lea	eax, [rcx + 0x14]
mov	dword ptr [rbx + 0x48], eax
mov	rax, qword ptr [rbx + 0x18]
movzx	edx, byte ptr [rax]
cmp	dl, 0x54
je	0x140004a10
je	0x140004a10
cmp	dl, 0x47
jne	0x140004a31
jne	0x140004a31
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x18], rdx
cmp	byte ptr [rax + 1], 0
je	0x140004a31
je	0x140004a31
lea	rdx, [rax + 2]
mov	qword ptr [rbx + 0x18], rdx
movzx	edx, byte ptr [rax + 1]
cmp	dl, 0x56
jg	0x140004b90
jg	0x140004b90
cmp	dl, 0x40
jle	0x140004a31
jle	0x140004a31
sub	edx, 0x41
cmp	dl, 0x15
ja	0x140004a31
ja	0x140004a31
lea	rcx, [rip + 0xb78ed]
movzx	edx, dl
movsxd	rdx, dword ptr [rcx + rdx*4]
add	rdx, rcx
jmp	rdx
jmp	rdx
nop	word ptr [rax + rax]
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x18], rdx
cmp	byte ptr [rax + 1], 0
je	0x140004a31
je	0x140004a31
lea	rdx, [rax + 2]
mov	qword ptr [rbx + 0x18], rdx
movzx	eax, byte ptr [rax + 1]
sub	eax, 0x41
cmp	al, 0x35
jbe	0x140004a40
jbe	0x140004a40
xor	eax, eax
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0xb78f9]
movzx	eax, al
movsxd	rax, dword ptr [rdx + rax*4]
add	rax, rdx
jmp	rax
jmp	rax
nop	dword ptr [rax + rax]
xor	edx, edx
mov	rcx, rbx
call	0x140004fd0
call	0x140004fd0
xor	r9d, r9d
mov	edx, 0x13
mov	r8, rax
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
jmp	0x1400014c0
jmp	0x1400014c0
nop	dword ptr [rax]
cmp	byte ptr [rax + 2], 0
je	0x140004cf0
je	0x140004cf0
lea	rdx, [rax + 3]
mov	qword ptr [rbx + 0x18], rdx
cmp	byte ptr [rax + 2], 0x6e
movzx	eax, byte ptr [rax + 3]
je	0x140004f69
je	0x140004f69
cmp	al, 0x47
je	0x140004aac
je	0x140004aac
cmp	al, 0x54
jne	0x140004cf0
jne	0x140004cf0
mov	rcx, rbx
call	0x1400049a0
call	0x1400049a0
mov	r8, rax
xor	r9d, r9d
mov	edx, 0x4a
jmp	0x140004a6d
jmp	0x140004a6d
nop	dword ptr [rax]
xor	edx, edx
mov	rcx, rbx
call	0x140004fd0
call	0x140004fd0
mov	rdi, rax
mov	eax, dword ptr [rbx + 0x28]
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x140004d02
jge	0x140004d02
movsxd	rsi, eax
add	eax, 1
mov	rcx, rbx
shl	rsi, 5
add	rsi, qword ptr [rbx + 0x20]
mov	qword ptr [rsi + 4], 0
mov	dword ptr [rbx + 0x28], eax
mov	dword ptr [rsi], 0x43
call	0x140001630
call	0x140001630
mov	dword ptr [rsi + 0x10], eax
mov	r9, rsi
mov	r8, rdi
mov	edx, 0x16
jmp	0x140004a6d
jmp	0x140004a6d
nop	dword ptr [rax + rax]
lea	rdx, [rsp + 0x28]
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], 0
call	0x140002420
call	0x140002420
test	eax, eax
je	0x140004a31
je	0x140004a31
mov	r8, qword ptr [rsp + 0x28]
test	r8, r8
je	0x140004a31
je	0x140004a31
xor	r9d, r9d
mov	edx, 0x56
jmp	0x140004a6d
jmp	0x140004a6d
nop	dword ptr [rax]
movzx	eax, byte ptr [rax + 2]
cmp	al, 0x47
je	0x140004cd8
je	0x140004cd8
cmp	al, 0x54
je	0x140004cd8
je	0x140004cd8
xor	edx, edx
mov	rcx, rbx
call	0x140005430
call	0x140005430
mov	r8, rax
xor	r9d, r9d
mov	edx, 0x17
jmp	0x140004a6d
jmp	0x140004a6d
nop	
cmp	dl, 0x72
jne	0x140004a31
jne	0x140004a31
mov	rcx, rbx
call	0x140001630
call	0x140001630
cmp	eax, 1
jle	0x140004a31
jle	0x140004a31
mov	rdx, qword ptr [rbx + 0x18]
cmp	byte ptr [rdx], 0
je	0x140004a31
je	0x140004a31
lea	r11, [rdx + 1]
mov	qword ptr [rbx + 0x18], r11
cmp	byte ptr [rdx], 0x5f
jne	0x140004a31
jne	0x140004a31
lea	esi, [rax - 1]
xor	edi, edi
movzx	eax, byte ptr [r11]
test	al, al
je	0x140004a31
je	0x140004a31
movsxd	rdx, esi
xor	r10d, r10d
cmp	al, 0x24
jne	0x140004c99
jne	0x140004c99
movzx	eax, byte ptr [r11 + 1]
cmp	al, 0x53
je	0x140004f40
je	0x140004f40
cmp	al, 0x5f
je	0x140004f30
je	0x140004f30
cmp	al, 0x24
jne	0x140004a31
jne	0x140004a31
mov	edx, 0x24
mov	rcx, qword ptr [rbx + 0x18]
mov	eax, dword ptr [rbx + 0x28]
lea	r11, [rcx + 2]
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x140004f60
jge	0x140004f60
movsxd	r9, eax
add	eax, 1
sub	esi, 2
shl	r9, 5
add	r9, qword ptr [rbx + 0x20]
mov	qword ptr [r9 + 4], 0
mov	dword ptr [rbx + 0x28], eax
mov	dword ptr [r9], 0x42
mov	dword ptr [r9 + 0x10], edx
mov	qword ptr [rbx + 0x18], r11
test	rdi, rdi
je	0x140004f20
je	0x140004f20
mov	r8, rdi
mov	edx, 0x41
mov	rcx, rbx
call	0x1400014c0
call	0x1400014c0
mov	rdi, rax
test	rax, rax
je	0x140004a31
je	0x140004a31
test	esi, esi
jg	0x140004bcd
jg	0x140004bcd
xor	r9d, r9d
mov	r8, rdi
mov	edx, 0x40
jmp	0x140004a6d
jmp	0x140004a6d
nop	dword ptr [rax]
cmp	al, 0x24
je	0x140004ca5
je	0x140004ca5
add	r10, 1
cmp	r10, rdx
je	0x140004f50
je	0x140004f50
movzx	eax, byte ptr [r11 + r10]
mov	r8d, r10d
test	al, al
jne	0x140004c88
jne	0x140004c88
mov	r8d, r10d
mov	rdx, r11
mov	rcx, rbx
sub	esi, r8d
call	0x1400015d0
call	0x1400015d0
mov	r11, qword ptr [rbx + 0x18]
mov	r9, rax
add	r11, r10
mov	qword ptr [rbx + 0x18], r11
test	rax, rax
jne	0x140004c48
jne	0x140004c48
jmp	0x140004a31
jmp	0x140004a31
nop	word ptr [rax + rax]
mov	rcx, rbx
call	0x1400049a0
call	0x1400049a0
mov	r8, rax
jmp	0x140004b81
jmp	0x140004b81
nop	dword ptr [rax + rax]
xor	edx, edx
mov	rcx, rbx
call	0x140005430
call	0x140005430
mov	r8, rax
jmp	0x140004ab7
jmp	0x140004ab7
xor	esi, esi
jmp	0x140004b0b
jmp	0x140004b0b
mov	edx, 0x76
mov	rcx, rbx
call	0x1400016f0
call	0x1400016f0
test	eax, eax
je	0x140004a31
je	0x140004a31
mov	rax, qword ptr [rbx + 0x18]
movzx	eax, byte ptr [rax]
cmp	al, 0x47
je	0x140004f8b
je	0x140004f8b
cmp	al, 0x54
je	0x140004f8b
je	0x140004f8b
xor	edx, edx
mov	rcx, rbx
call	0x140005430
call	0x140005430
mov	r8, rax
xor	r9d, r9d
mov	edx, 0x10
jmp	0x140004a6d
jmp	0x140004a6d
mov	edx, 0x68
mov	rcx, rbx
call	0x1400016f0
call	0x1400016f0
test	eax, eax
je	0x140004a31
je	0x140004a31
mov	rax, qword ptr [rbx + 0x18]
movzx	eax, byte ptr [rax]
cmp	al, 0x47
je	0x140004f9b
je	0x140004f9b
cmp	al, 0x54
je	0x140004f9b
je	0x140004f9b
xor	edx, edx
mov	rcx, rbx
call	0x140005430
call	0x140005430
mov	r8, rax
xor	r9d, r9d
mov	edx, 0xf
jmp	0x140004a6d
jmp	0x140004a6d
add	ecx, 0xa
mov	dword ptr [rbx + 0x48], ecx
mov	rcx, rbx
call	0x1400024c0
call	0x1400024c0
xor	r9d, r9d
mov	edx, 0xa
mov	r8, rax
jmp	0x140004a6d
jmp	0x140004a6d
xor	edx, edx
mov	rcx, rbx
call	0x140004fd0
call	0x140004fd0
xor	r9d, r9d
mov	edx, 0x15
mov	r8, rax
jmp	0x140004a6d
jmp	0x140004a6d
add	ecx, 0xf
mov	dword ptr [rbx + 0x48], ecx
mov	rcx, rbx
call	0x1400024c0
call	0x1400024c0
xor	r9d, r9d
mov	edx, 9
mov	r8, rax
jmp	0x140004a6d
jmp	0x140004a6d
xor	edx, edx
mov	rcx, rbx
call	0x1400016f0
call	0x1400016f0
test	eax, eax
je	0x140004a31
je	0x140004a31
xor	edx, edx
mov	rcx, rbx
call	0x1400016f0
call	0x1400016f0
test	eax, eax
je	0x140004a31
je	0x140004a31
mov	rax, qword ptr [rbx + 0x18]
movzx	eax, byte ptr [rax]
cmp	al, 0x47
je	0x140004fb8
je	0x140004fb8
cmp	al, 0x54
je	0x140004fb8
je	0x140004fb8
xor	edx, edx
mov	rcx, rbx
call	0x140005430
call	0x140005430
mov	r8, rax
xor	r9d, r9d
mov	edx, 0x11
jmp	0x140004a6d
jmp	0x140004a6d
xor	edx, edx
mov	rcx, rbx
call	0x140004fd0
call	0x140004fd0
xor	r9d, r9d
mov	edx, 0x14
mov	r8, rax
jmp	0x140004a6d
jmp	0x140004a6d
mov	rcx, rbx
call	0x1400024c0
call	0x1400024c0
xor	r9d, r9d
mov	edx, 0x12
mov	r8, rax
jmp	0x140004a6d
jmp	0x140004a6d
mov	rcx, rbx
call	0x1400024c0
call	0x1400024c0
xor	r9d, r9d
mov	edx, 0xc
mov	r8, rax
jmp	0x140004a6d
jmp	0x140004a6d
mov	rcx, rbx
call	0x1400024c0
call	0x1400024c0
xor	r9d, r9d
mov	edx, 0xd
mov	r8, rax
jmp	0x140004a6d
jmp	0x140004a6d
mov	rcx, rbx
call	0x1400024c0
call	0x1400024c0
mov	rcx, rbx
mov	rsi, rax
call	0x140001630
call	0x140001630
test	eax, eax
js	0x140004a31
js	0x140004a31
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x5f
jne	0x140004a31
jne	0x140004a31
add	rax, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], rax
call	0x1400024c0
call	0x1400024c0
add	dword ptr [rbx + 0x48], 5
mov	r9, rsi
mov	edx, 0xb
mov	r8, rax
jmp	0x140004a6d
jmp	0x140004a6d
mov	rcx, rbx
call	0x140003c30
call	0x140003c30
xor	r9d, r9d
mov	edx, 0x30
mov	r8, rax
jmp	0x140004a6d
jmp	0x140004a6d
mov	rcx, rbx
call	0x1400024c0
call	0x1400024c0
xor	r9d, r9d
mov	edx, 0xe
mov	r8, rax
jmp	0x140004a6d
jmp	0x140004a6d
nop	
mov	rdi, r9
jmp	0x140004c6d
jmp	0x140004c6d
nop	dword ptr [rax + rax]
mov	edx, 0x2e
jmp	0x140004c09
jmp	0x140004c09
nop	word ptr [rax + rax]
mov	edx, 0x2f
jmp	0x140004c09
jmp	0x140004c09
nop	word ptr [rax + rax]
add	r8d, 1
movsxd	r10, r8d
jmp	0x140004ca8
jmp	0x140004ca8
nop	dword ptr [rax]
mov	qword ptr [rbx + 0x18], r11
jmp	0x140004a31
jmp	0x140004a31
cmp	al, 0x47
je	0x140004fab
je	0x140004fab
cmp	al, 0x54
je	0x140004fab
je	0x140004fab
xor	edx, edx
mov	rcx, rbx
call	0x140005430
call	0x140005430
mov	r8, rax
xor	r9d, r9d
mov	edx, 0x4b
jmp	0x140004a6d
jmp	0x140004a6d
mov	rcx, rbx
call	0x1400049a0
call	0x1400049a0
mov	r8, rax
jmp	0x140004d42
jmp	0x140004d42
mov	rcx, rbx
call	0x1400049a0
call	0x1400049a0
mov	r8, rax
jmp	0x140004d88
jmp	0x140004d88
mov	rcx, rbx
call	0x1400049a0
call	0x1400049a0
mov	r8, rax
jmp	0x140004f7e
jmp	0x140004f7e
mov	rcx, rbx
call	0x1400049a0
call	0x1400049a0
mov	r8, rax
jmp	0x140004e33
jmp	0x140004e33
nop	dword ptr [rax + rax]
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
mov	esi, edx
mov	rdx, qword ptr [rcx + 0x18]
mov	rbx, rcx
movzx	eax, byte ptr [rdx]
cmp	al, 0x55
je	0x1400051c0
je	0x1400051c0
jg	0x1400050b0
jg	0x1400050b0
cmp	al, 0x4e
je	0x1400051d8
je	0x1400051d8
cmp	al, 0x53
jne	0x140005160
jne	0x140005160
xor	edi, edi
cmp	byte ptr [rdx + 1], 0x74
je	0x140005270
je	0x140005270
xor	edx, edx
mov	rcx, rbx
call	0x1400021d0
call	0x1400021d0
mov	r8, rax
test	rax, rax
je	0x1400052e8
je	0x1400052e8
mov	eax, dword ptr [rax]
sub	eax, 0x53
cmp	eax, 1
jbe	0x140005165
jbe	0x140005165
test	rdi, rdi
jne	0x1400052e8
jne	0x1400052e8
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x49
jne	0x1400050a2
jne	0x1400050a2
add	rax, 1
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], r8
mov	qword ptr [rbx + 0x18], rax
call	0x140003cd0
call	0x140003cd0
mov	r8, qword ptr [rsp + 0x28]
mov	r9, rax
mov	edx, 4
mov	rcx, rbx
call	0x1400014c0
call	0x1400014c0
mov	r8, rax
nop	dword ptr [rax + rax]
test	esi, esi
je	0x1400050a2
je	0x1400050a2
test	r8, r8
je	0x1400052e8
je	0x1400052e8
mov	eax, dword ptr [rbx + 0x38]
cmp	eax, dword ptr [rbx + 0x3c]
jge	0x1400052e8
jge	0x1400052e8
mov	rdx, qword ptr [rbx + 0x30]
movsxd	rcx, eax
add	eax, 1
mov	qword ptr [rdx + rcx*8], r8
mov	dword ptr [rbx + 0x38], eax
mov	rax, r8
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
cmp	al, 0x5a
jne	0x140005160
jne	0x140005160
lea	rax, [rdx + 1]
mov	qword ptr [rcx + 0x18], rax
movzx	eax, byte ptr [rdx + 1]
cmp	al, 0x47
je	0x140005258
je	0x140005258
cmp	al, 0x54
je	0x140005258
je	0x140005258
xor	edx, edx
call	0x140005430
call	0x140005430
mov	rdi, rax
test	rdi, rdi
je	0x1400052e8
je	0x1400052e8
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x45
jne	0x1400052e8
jne	0x1400052e8
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x18], rdx
movzx	edx, byte ptr [rax + 1]
cmp	dl, 0x73
je	0x1400053b0
je	0x1400053b0
cmp	dl, 0x64
je	0x1400052f0
je	0x1400052f0
xor	edx, edx
mov	rcx, rbx
call	0x140004fd0
call	0x140004fd0
mov	r9, rax
test	rax, rax
je	0x1400053a0
je	0x1400053a0
mov	eax, dword ptr [rax]
sub	eax, 0x47
and	eax, 0xfffffffd
jne	0x1400052c7
jne	0x1400052c7
cmp	dword ptr [rdi], 3
je	0x140005380
je	0x140005380
mov	r8, rdi
mov	edx, 2
mov	rcx, rbx
call	0x1400014c0
call	0x1400014c0
mov	r8, rax
jmp	0x140005078
jmp	0x140005078
nop	word ptr [rax + rax]
xor	r8d, r8d
xor	edi, edi
mov	rdx, rdi
mov	rcx, rbx
call	0x140003480
call	0x140003480
mov	r8, rax
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x49
jne	0x140005078
jne	0x140005078
test	r8, r8
je	0x1400052e8
je	0x1400052e8
mov	edx, dword ptr [rbx + 0x38]
cmp	edx, dword ptr [rbx + 0x3c]
jge	0x1400052e8
jge	0x1400052e8
mov	rcx, qword ptr [rbx + 0x30]
movsxd	r9, edx
add	edx, 1
mov	qword ptr [rcx + r9*8], r8
mov	dword ptr [rbx + 0x38], edx
movzx	edi, byte ptr [rax]
lea	edx, [rdi - 0x49]
cmp	dl, 1
jbe	0x140005046
jbe	0x140005046
xor	r9d, r9d
jmp	0x140005063
jmp	0x140005063
nop	dword ptr [rax]
xor	r8d, r8d
xor	edx, edx
call	0x140003480
call	0x140003480
mov	r8, rax
jmp	0x140005078
jmp	0x140005078
nop	word ptr [rax + rax]
add	rdx, 1
mov	r8d, 1
mov	qword ptr [rcx + 0x18], rdx
lea	rdx, [rsp + 0x38]
call	0x1400046c0
call	0x1400046c0
mov	rdi, rax
test	rax, rax
je	0x1400052e8
je	0x1400052e8
xor	edx, edx
mov	rcx, rbx
call	0x140001770
call	0x140001770
mov	edx, 1
mov	rcx, rbx
mov	rbp, rax
call	0x140003d80
call	0x140003d80
mov	qword ptr [rdi], rax
test	rax, rax
je	0x1400052e8
je	0x1400052e8
test	rbp, rbp
je	0x140005235
je	0x140005235
mov	rax, qword ptr [rsp + 0x38]
mov	qword ptr [rsp + 0x38], rbp
mov	qword ptr [rbp + 0x10], rax
mov	rax, qword ptr [rbx + 0x18]
cmp	byte ptr [rax], 0x45
jne	0x1400052e8
jne	0x1400052e8
add	rax, 1
mov	r8, qword ptr [rsp + 0x38]
mov	qword ptr [rbx + 0x18], rax
jmp	0x140005078
jmp	0x140005078
nop	dword ptr [rax]
mov	rcx, rbx
call	0x1400049a0
call	0x1400049a0
mov	rdi, rax
jmp	0x1400050de
jmp	0x1400050de
nop	dword ptr [rax + rax]
lea	rax, [rdx + 2]
mov	qword ptr [rcx + 0x18], rax
mov	eax, dword ptr [rcx + 0x28]
cmp	eax, dword ptr [rcx + 0x2c]
jge	0x1400052b1
jge	0x1400052b1
movsxd	rdi, eax
add	eax, 1
mov	dword ptr [rcx + 0x28], eax
shl	rdi, 5
lea	rax, [rip + 0xb7193]
add	rdi, qword ptr [rcx + 0x20]
mov	qword ptr [rdi + 4], 0
mov	dword ptr [rdi], 0
mov	qword ptr [rdi + 0x10], rax
mov	dword ptr [rdi + 0x18], 3
add	dword ptr [rbx + 0x48], 3
cmp	byte ptr [rdx + 2], 0x53
je	0x140005010
je	0x140005010
xor	r8d, r8d
jmp	0x140005165
jmp	0x140005165
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], r9
call	0x1400017d0
call	0x1400017d0
mov	r9, qword ptr [rsp + 0x28]
test	eax, eax
jne	0x140005136
jne	0x140005136
nop	dword ptr [rax]
xor	r8d, r8d
jmp	0x1400050a2
jmp	0x1400050a2
lea	rdx, [rax + 2]
mov	qword ptr [rbx + 0x18], rdx
movzx	eax, byte ptr [rax + 2]
cmp	al, 0x5f
je	0x140005408
je	0x140005408
cmp	al, 0x6e
je	0x1400052e8
je	0x1400052e8
mov	rcx, rbx
call	0x140001630
call	0x140001630
add	eax, 1
mov	ebp, eax
js	0x1400052e8
js	0x1400052e8
mov	rdx, qword ptr [rbx + 0x18]
cmp	byte ptr [rdx], 0x5f
jne	0x1400052e8
jne	0x1400052e8
add	rdx, 1
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], rdx
xor	edx, edx
call	0x140004fd0
call	0x140004fd0
mov	r12, rax
test	rax, rax
je	0x140005348
je	0x140005348
mov	eax, dword ptr [rax]
sub	eax, 0x47
and	eax, 0xfffffffd
jne	0x14000540f
jne	0x14000540f
mov	eax, dword ptr [rbx + 0x28]
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x1400053a0
jge	0x1400053a0
movsxd	r9, eax
add	eax, 1
shl	r9, 5
add	r9, qword ptr [rbx + 0x20]
mov	qword ptr [r9 + 4], 0
mov	dword ptr [rbx + 0x28], eax
mov	dword ptr [r9], 0x48
mov	dword ptr [r9 + 0x18], ebp
mov	qword ptr [r9 + 0x10], r12
jmp	0x140005136
jmp	0x140005136
nop	dword ptr [rax]
mov	rax, qword ptr [rdi + 0x18]
cmp	dword ptr [rax], 0x29
jne	0x14000513f
jne	0x14000513f
mov	qword ptr [rax + 0x10], 0
jmp	0x14000513f
jmp	0x14000513f
nop	word ptr [rax + rax]
xor	r9d, r9d
jmp	0x140005136
jmp	0x140005136
nop	dword ptr [rax + rax]
add	rax, 2
mov	rcx, rbx
mov	qword ptr [rbx + 0x18], rax
call	0x1400017d0
call	0x1400017d0
test	eax, eax
je	0x1400052e8
je	0x1400052e8
mov	eax, dword ptr [rbx + 0x28]
cmp	eax, dword ptr [rbx + 0x2c]
jge	0x1400053a0
jge	0x1400053a0
movsxd	r9, eax
add	eax, 1
mov	dword ptr [rbx + 0x28], eax
shl	r9, 5
lea	rax, [rip + 0xb7034]
add	r9, qword ptr [rbx + 0x20]
mov	qword ptr [r9 + 4], 0
mov	dword ptr [r9], 0
mov	qword ptr [r9 + 0x10], rax
mov	dword ptr [r9 + 0x18], 0xe
jmp	0x140005136
jmp	0x140005136
xor	ebp, ebp
jmp	0x140005320
jmp	0x140005320
mov	rcx, rbx
call	0x1400017d0
call	0x1400017d0
test	eax, eax
jne	0x140005348
jne	0x140005348
jmp	0x1400052e8
jmp	0x1400052e8
nop	word ptr cs:[rax + rax]
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	edi, edx
xor	edx, edx
mov	rsi, rcx
call	0x140004fd0
call	0x140004fd0
mov	rbx, rax
test	rax, rax
je	0x1400054b8
je	0x1400054b8
test	edi, edi
je	0x1400054c8
je	0x1400054c8
test	byte ptr [rsi + 0x10], 1
jne	0x1400054c8
jne	0x1400054c8
movabs	rcx, 0x3400000000001f
mov	edx, dword ptr [rbx]
lea	eax, [rdx - 0x1c]
cmp	eax, 0x35
ja	0x14000547d
ja	0x14000547d
bt	rcx, rax
jae	0x1400054ba
jae	0x1400054ba
mov	rbx, qword ptr [rbx + 0x10]
mov	edx, dword ptr [rbx]
lea	eax, [rdx - 0x1c]
cmp	eax, 0x35
jbe	0x140005469
jbe	0x140005469
cmp	edx, 2
jne	0x1400054ba
jne	0x1400054ba
mov	rdx, qword ptr [rbx + 0x18]
test	rdx, rdx
je	0x1400054b8
je	0x1400054b8
movabs	rcx, 0x3400000000001f
mov	eax, dword ptr [rdx]
sub	eax, 0x1c
cmp	eax, 0x35
ja	0x1400054ba
ja	0x1400054ba
bt	rcx, rax
jae	0x1400054ba
jae	0x1400054ba
mov	rdx, qword ptr [rdx + 0x10]
mov	qword ptr [rbx + 0x18], rdx
test	rdx, rdx
jne	0x140005495
jne	0x140005495
nop	word ptr [rax + rax]
xor	ebx, ebx
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rsi + 0x18]
movzx	eax, byte ptr [rax]
test	al, al
je	0x1400054ba
je	0x1400054ba
cmp	al, 0x45
je	0x1400054ba
je	0x1400054ba
mov	rdx, rbx
mov	eax, dword ptr [rdx]
cmp	eax, 4
je	0x140005550
je	0x140005550
jbe	0x140005540
jbe	0x140005540
sub	eax, 0x1c
cmp	eax, 0x35
ja	0x140005508
ja	0x140005508
movabs	rcx, 0x3400000000001f
bt	rcx, rax
jae	0x140005508
jae	0x140005508
mov	rdx, qword ptr [rdx + 0x10]
test	rdx, rdx
jne	0x1400054da
jne	0x1400054da
nop	dword ptr [rax]
xor	edx, edx
mov	rcx, rsi
call	0x140003050
call	0x140003050
mov	r9, rax
test	rax, rax
je	0x1400054b8
je	0x1400054b8
test	edi, edi
jne	0x140005523
jne	0x140005523
cmp	dword ptr [rbx], 2
je	0x1400055a0
je	0x1400055a0
mov	r8, rbx
mov	edx, 3
mov	rcx, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x1400014c0
jmp	0x1400014c0
nop	word ptr [rax + rax]
cmp	eax, 2
jne	0x140005508
jne	0x140005508
mov	rdx, qword ptr [rdx + 0x18]
jmp	0x1400054ff
jmp	0x1400054ff
nop	dword ptr [rax + rax]
mov	rdx, qword ptr [rdx + 0x10]
test	rdx, rdx
je	0x140005580
je	0x140005580
mov	eax, dword ptr [rdx]
cmp	eax, 8
ja	0x140005590
ja	0x140005590
cmp	eax, 6
ja	0x140005508
ja	0x140005508
sub	eax, 1
cmp	eax, 1
ja	0x140005580
ja	0x140005580
mov	rdx, qword ptr [rdx + 0x18]
test	rdx, rdx
jne	0x140005559
jne	0x140005559
nop	word ptr cs:[rax + rax]
mov	edx, 1
jmp	0x14000550a
jmp	0x14000550a
nop	word ptr [rax + rax]
xor	edx, edx
cmp	eax, 0x35
setne	dl
jmp	0x14000550a
jmp	0x14000550a
nop	dword ptr [rax]
cmp	dword ptr [rax], 0x29
jne	0x140005523
jne	0x140005523
mov	qword ptr [rax + 0x10], 0
jmp	0x140005523
jmp	0x140005523
nop	word ptr cs:[rax + rax]
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xb0
mov	rbx, rcx
mov	rsi, r8
test	r8, r8
je	0x140005610
je	0x140005610
mov	ebp, dword ptr [rcx + 0x130]
test	ebp, ebp
jne	0x14000561a
jne	0x14000561a
mov	r10d, dword ptr [r8]
cmp	r10d, 0x5c
ja	0x140005610
ja	0x140005610
lea	rdx, [rip + 0xb70ce]
mov	eax, r10d
movsxd	rax, dword ptr [rdx + rax*4]
add	rax, rdx
jmp	rax
jmp	rax
mov	qword ptr [rbx + 0x128], r10
nop	dword ptr [rax]
mov	dword ptr [rbx + 0x130], 1
add	rsp, 0xb0
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax]
mov	r8, qword ptr [rcx + 0x128]
mov	r9, r8
test	r8, r8
je	0x140008b6c
je	0x140008b6c
mov	rax, r8
jmp	0x140005658
jmp	0x140005658
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rax]
test	rax, rax
je	0x1400056d7
je	0x1400056d7
mov	ecx, dword ptr [rax + 0x10]
test	ecx, ecx
jne	0x140005650
jne	0x140005650
mov	rdx, qword ptr [rax + 8]
mov	edx, dword ptr [rdx]
lea	ecx, [rdx - 0x19]
cmp	ecx, 2
ja	0x1400056d7
ja	0x1400056d7
cmp	r10d, edx
jne	0x140005650
jne	0x140005650
nop	word ptr [rax + rax]
mov	r8, qword ptr [rsi + 0x10]
mov	edx, 0x11
mov	rcx, rbx
add	rsp, 0xb0
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
jmp	0x140008d40
jmp	0x140008d40
mov	rax, qword ptr [rcx + 0x100]
cmp	rax, 0xff
je	0x1400086a3
je	0x1400086a3
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x7e
mov	byte ptr [rbx + 0x108], 0x7e
nop	dword ptr [rax + rax]
mov	r8, qword ptr [rsi + 0x18]
jmp	0x14000567c
jmp	0x14000567c
nop	
mov	r8, qword ptr [rcx + 0x128]
lea	rax, [rsp + 0x30]
mov	qword ptr [rsp + 0x30], r8
mov	qword ptr [rbx + 0x128], rax
xor	eax, eax
mov	dword ptr [rsp + 0x40], eax
mov	rax, qword ptr [rbx + 0x120]
mov	qword ptr [rsp + 0x38], rsi
mov	qword ptr [rsp + 0x48], rax
mov	r8, qword ptr [rsi + 0x10]
nop	dword ptr [rax + rax]
mov	edx, 0x11
mov	rcx, rbx
call	0x140008d40
call	0x140008d40
mov	eax, dword ptr [rsp + 0x40]
test	eax, eax
je	0x140007c83
je	0x140007c83
mov	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rbx + 0x128], rax
test	ebp, ebp
je	0x14000561a
je	0x14000561a
mov	qword ptr [rbx + 0x120], rdi
jmp	0x14000561a
jmp	0x14000561a
nop	dword ptr [rax]
lea	rax, [rsp + 0x30]
movq	xmm4, r8
movq	xmm0, qword ptr [rcx + 0x128]
mov	r8, qword ptr [r8 + 0x18]
mov	qword ptr [rcx + 0x128], rax
mov	rax, qword ptr [rcx + 0x120]
mov	edx, 0x11
punpcklqdq	xmm0, xmm4
mov	dword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x48], rax
movups	xmmword ptr [rsp + 0x30], xmm0
call	0x140008d40
call	0x140008d40
mov	r10d, dword ptr [rsp + 0x40]
test	r10d, r10d
je	0x140008139
je	0x140008139
mov	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rbx + 0x128], rax
jmp	0x14000561a
jmp	0x14000561a
nop	dword ptr [rax + rax]
mov	r8, qword ptr [r8 + 0x10]
cmp	dword ptr [r8], 0x27
jne	0x140007f5d
jne	0x140007f5d
mov	rax, qword ptr [r8 + 0x10]
mov	edi, dword ptr [rax + 0x1c]
cmp	edi, 6
ja	0x1400082cd
ja	0x1400082cd
test	edi, edi
je	0x1400057e2
je	0x1400057e2
mov	rax, qword ptr [rsi + 0x18]
mov	r9d, dword ptr [rax]
test	r9d, r9d
je	0x140008ae5
je	0x140008ae5
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x140008710
je	0x140008710
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	rcx, rbx
mov	edx, 0x11
mov	byte ptr [rbx + rax], 0x28
mov	byte ptr [rbx + 0x108], 0x28
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x1400086e1
je	0x1400086e1
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x29
mov	byte ptr [rbx + 0x108], 0x29
cmp	dword ptr [rsi], 0x3e
je	0x1400086cf
je	0x1400086cf
cmp	edi, 8
jne	0x1400056c8
jne	0x1400056c8
mov	edx, 0x5b
mov	rcx, rbx
call	0x140001ba0
call	0x140001ba0
mov	r8, qword ptr [rsi + 0x18]
mov	edx, 0x11
mov	rcx, rbx
call	0x140008d40
call	0x140008d40
mov	edx, 0x5d
mov	rcx, rbx
add	rsp, 0xb0
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
jmp	0x140001ba0
jmp	0x140001ba0
nop	
mov	r8, qword ptr [r8 + 0x10]
test	r8, r8
je	0x140007f64
je	0x140007f64
mov	edx, 0x11
call	0x140008d40
call	0x140008d40
cmp	dword ptr [rsi], 0x54
je	0x140007f6e
je	0x140007f6e
cmp	qword ptr [rsi + 0x10], 0
je	0x1400056c8
je	0x1400056c8
mov	edi, 0x2e
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x14000886d
je	0x14000886d
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], dil
mov	byte ptr [rbx + 0x108], dil
jmp	0x1400056c8
jmp	0x1400056c8
nop	
mov	r8, qword ptr [r8 + 0x10]
test	r8, r8
je	0x140005903
je	0x140005903
mov	edx, 0x11
call	0x140008d40
call	0x140008d40
cmp	qword ptr [rsi + 0x18], 0
je	0x14000561a
je	0x14000561a
mov	rdx, qword ptr [rbx + 0x100]
cmp	rdx, 0xfd
ja	0x140008320
ja	0x140008320
lea	rdx, [rip + 0xb6b08]
mov	rcx, rbx
call	0x140001c70
call	0x140001c70
mov	r8, qword ptr [rsi + 0x18]
mov	edx, 0x11
mov	rcx, rbx
mov	edi, dword ptr [rbx + 0x140]
mov	rbp, qword ptr [rbx + 0x100]
call	0x140008d40
call	0x140008d40
cmp	dword ptr [rbx + 0x140], edi
jne	0x14000561a
jne	0x14000561a
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, rbp
jne	0x14000561a
jne	0x14000561a
sub	rax, 2
mov	qword ptr [rbx + 0x100], rax
jmp	0x14000561a
jmp	0x14000561a
nop	dword ptr [rax + rax]
mov	r8, qword ptr [r8 + 0x10]
mov	edx, 0x11
call	0x140008d40
call	0x140008d40
lea	rdx, [rip + 0xb6a9f]
mov	rcx, rbx
call	0x140001c70
call	0x140001c70
mov	rbp, qword ptr [rsi + 0x18]
cmp	dword ptr [rbp], 0x48
je	0x1400085ec
je	0x1400085ec
mov	r8, rbp
jmp	0x14000567c
jmp	0x14000567c
nop	dword ptr [rax + rax]
mov	r8, qword ptr [r8 + 0x10]
mov	r9d, dword ptr [rcx + 0x138]
mov	eax, dword ptr [r8]
mov	rcx, r8
test	r9d, r9d
jne	0x1400059d9
jne	0x1400059d9
xor	ebp, ebp
cmp	eax, 5
je	0x140008743
je	0x140008743
mov	r9, qword ptr [rbx + 0x128]
cmp	r10d, eax
je	0x140007e24
je	0x140007e24
cmp	eax, 0x23
je	0x140007e24
je	0x140007e24
cmp	eax, 0x24
je	0x140007667
je	0x140007667
lea	rax, [rsp + 0x30]
movq	xmm0, r9
movq	xmm5, rsi
mov	dword ptr [rsp + 0x40], 0
mov	qword ptr [rbx + 0x128], rax
mov	rax, qword ptr [rbx + 0x120]
punpcklqdq	xmm0, xmm5
movups	xmmword ptr [rsp + 0x30], xmm0
mov	qword ptr [rsp + 0x48], rax
jmp	0x140005708
jmp	0x140005708
lea	rdi, [rip + 0xb6c4c]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 7]
jmp	0x140005a76
jmp	0x140005a76
nop	word ptr [rax + rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x1400077d0
je	0x1400077d0
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140005a50
jne	0x140005a50
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140005a57
jmp	0x140005a57
lea	rdi, [rip + 0xb6bb5]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0x1c]
jmp	0x140005aee
jmp	0x140005aee
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	rdi, r12
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140005ac8
jne	0x140005ac8
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140005acf
jmp	0x140005acf
mov	rdi, qword ptr [rcx + 0x170]
mov	rbp, qword ptr [rcx + 0x128]
mov	edx, 0x11
mov	qword ptr [rbx + 0x170], r8
mov	qword ptr [rcx + 0x128], 0
mov	r8, qword ptr [r8 + 0x10]
call	0x140008d40
call	0x140008d40
cmp	byte ptr [rbx + 0x108], 0x3c
je	0x14000857f
je	0x14000857f
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x140008550
je	0x140008550
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	rcx, rbx
mov	edx, 0x11
mov	byte ptr [rbx + rax], 0x3c
mov	byte ptr [rbx + 0x108], 0x3c
mov	r8, qword ptr [rsi + 0x18]
call	0x140008d40
call	0x140008d40
cmp	byte ptr [rbx + 0x108], 0x3e
je	0x14000853e
je	0x14000853e
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x14000850f
je	0x14000850f
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x3e
mov	byte ptr [rbx + 0x108], 0x3e
mov	qword ptr [rbx + 0x128], rbp
mov	qword ptr [rbx + 0x170], rdi
jmp	0x14000561a
jmp	0x14000561a
mov	r12, qword ptr [r8 + 0x10]
mov	rdi, qword ptr [rcx + 0x128]
mov	qword ptr [rcx + 0x128], 0
test	r12, r12
je	0x140005610
je	0x140005610
lea	rbp, [rsp + 0x30]
mov	r8, qword ptr [rcx + 0x120]
xor	edx, edx
xor	ecx, ecx
mov	rax, rbp
mov	qword ptr [rax], rdx
mov	r10, rax
lea	r13d, [rcx + 1]
mov	dword ptr [rax + 0x10], 0
mov	edx, dword ptr [r12]
mov	qword ptr [rax + 8], r12
lea	r9d, [rdx - 0x1c]
mov	qword ptr [rax + 0x18], r8
cmp	r9d, 0x35
ja	0x140007d12
ja	0x140007d12
movabs	r11, 0x3400000000001f
bt	r11, r9
jae	0x140007d12
jae	0x140007d12
mov	r12, qword ptr [r12 + 0x10]
test	r12, r12
je	0x140008c69
je	0x140008c69
add	rax, 0x20
cmp	r13d, 4
je	0x140005602
je	0x140005602
mov	rdx, r10
mov	ecx, r13d
jmp	0x140005c15
jmp	0x140005c15
mov	r12, qword ptr [r8 + 0x10]
lea	rsi, [rip + 0xb6961]
mov	rax, qword ptr [rcx + 0x100]
lea	r13, [rsi + 8]
movsxd	rbp, dword ptr [r12 + 0x10]
jmp	0x140005cbe
jmp	0x140005cbe
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	r13, rsi
je	0x140007976
je	0x140007976
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x140005c98
jne	0x140005c98
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140005c9f
jmp	0x140005c9f
mov	r8, qword ptr [r8 + 0x10]
mov	rsi, qword ptr [rsi + 0x18]
test	r8, r8
je	0x140005d0c
je	0x140005d0c
mov	edx, 0x11
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x1400083a9
je	0x1400083a9
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	r8, rsi
mov	rcx, rbx
mov	edx, 0x11
mov	byte ptr [rbx + rax], 0x7b
mov	byte ptr [rbx + 0x108], 0x7b
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x14000837a
je	0x14000837a
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x7d
mov	byte ptr [rbx + 0x108], 0x7d
jmp	0x14000561a
jmp	0x14000561a
lea	rdi, [rip + 0xb67b5]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0xf]
jmp	0x140005db6
jmp	0x140005db6
nop	word ptr [rax + rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140005d90
jne	0x140005d90
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140005d97
jmp	0x140005d97
lea	rdi, [rip + 0xb6720]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0x1a]
jmp	0x140005e2e
jmp	0x140005e2e
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140005e08
jne	0x140005e08
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140005e0f
jmp	0x140005e0f
lea	rdi, [rip + 0xb6746]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0x16]
jmp	0x140005ea6
jmp	0x140005ea6
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140005e80
jne	0x140005e80
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140005e87
jmp	0x140005e87
lea	rdi, [rip + 0xb67ad]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0xe]
jmp	0x140005f1e
jmp	0x140005f1e
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140007710
je	0x140007710
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140005ef8
jne	0x140005ef8
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140005eff
jmp	0x140005eff
mov	rdi, qword ptr [r8 + 0x10]
mov	rsi, qword ptr [r8 + 0x18]
mov	eax, dword ptr [rdi]
cmp	eax, 0x32
je	0x140007fd6
je	0x140007fd6
cmp	eax, 0x34
je	0x140008165
je	0x140008165
mov	r8, rdi
mov	edx, 0x11
call	0x14000a070
call	0x14000a070
mov	r8, rsi
mov	edx, 0x11
mov	rcx, rbx
add	rsp, 0xb0
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
jmp	0x14000a6f0
jmp	0x14000a6f0
mov	r8, qword ptr [r8 + 0x10]
mov	edx, 0x11
mov	rcx, rbx
add	rsp, 0xb0
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
jmp	0x14000a070
jmp	0x14000a070
lea	rdi, [rip + 0xb6625]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 9]
jmp	0x140005ffe
jmp	0x140005ffe
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	rdi, r12
je	0x1400076a8
je	0x1400076a8
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140005fd8
jne	0x140005fd8
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140005fdf
jmp	0x140005fdf
mov	rax, qword ptr [r8 + 0x18]
cmp	dword ptr [rax], 0x3b
jne	0x140005610
jne	0x140005610
mov	rax, qword ptr [rax + 0x18]
cmp	dword ptr [rax], 0x3c
jne	0x140005610
jne	0x140005610
mov	edx, 0x11
call	0x14000a890
call	0x14000a890
test	eax, eax
jne	0x14000561a
jne	0x14000561a
mov	r8, rsi
mov	edx, 0x11
mov	rcx, rbx
call	0x14000ac20
call	0x14000ac20
test	eax, eax
jne	0x14000561a
jne	0x14000561a
mov	rax, qword ptr [rsi + 0x18]
mov	r12, qword ptr [rsi + 0x10]
lea	rdx, [rip + 0xb6578]
mov	rdi, qword ptr [rax + 0x10]
mov	rax, qword ptr [rax + 0x18]
mov	rbp, qword ptr [rax + 0x10]
mov	rsi, qword ptr [rax + 0x18]
mov	rax, qword ptr [r12 + 0x10]
mov	rcx, qword ptr [rax]
call	0x1400159e8
call	0x1400159e8
test	eax, eax
jne	0x140008bef
jne	0x140008bef
mov	r8, rdi
mov	rcx, rbx
mov	edx, 0x11
call	0x14000a6f0
call	0x14000a6f0
mov	r8, r12
mov	rcx, rbx
mov	edx, 0x11
call	0x14000a070
call	0x14000a070
mov	rcx, rbx
mov	r8, rbp
mov	edx, 0x11
call	0x14000a6f0
call	0x14000a6f0
lea	rdx, [rip + 0xb651f]
mov	rcx, rbx
call	0x140001c70
call	0x140001c70
jmp	0x140005f7e
jmp	0x140005f7e
nop	dword ptr [rax]
mov	rax, qword ptr [r8 + 0x18]
cmp	dword ptr [rax], 0x39
jne	0x140005610
jne	0x140005610
mov	r8, qword ptr [r8 + 0x10]
mov	rax, qword ptr [r8 + 0x10]
mov	rax, qword ptr [rax]
cmp	byte ptr [rax + 1], 0x63
je	0x1400087fa
je	0x1400087fa
mov	r8, rsi
mov	edx, 0x11
mov	rcx, rbx
call	0x14000a890
call	0x14000a890
test	eax, eax
jne	0x14000561a
jne	0x14000561a
mov	r8, rsi
mov	edx, 0x11
mov	rcx, rbx
call	0x14000ac20
call	0x14000ac20
test	eax, eax
jne	0x14000561a
jne	0x14000561a
mov	rax, qword ptr [rsi + 0x10]
cmp	dword ptr [rax], 0x32
je	0x140008b75
je	0x140008b75
mov	rax, qword ptr [rax + 0x10]
lea	r12, [rip + 0xb6498]
mov	rdx, r12
mov	rcx, qword ptr [rax]
call	0x1400159e8
call	0x1400159e8
mov	rdx, qword ptr [rsi + 0x18]
mov	r8, qword ptr [rdx + 0x10]
test	eax, eax
jne	0x140006183
jne	0x140006183
cmp	dword ptr [r8], 3
je	0x140008c40
je	0x140008c40
mov	edx, 0x11
mov	rcx, rbx
call	0x14000a6f0
call	0x14000a6f0
mov	rdi, qword ptr [rsi + 0x10]
lea	rdx, [rip + 0xb6462]
mov	rax, qword ptr [rdi + 0x10]
mov	rbp, qword ptr [rax]
mov	rcx, rbp
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140008ba6
je	0x140008ba6
mov	rdx, r12
mov	rcx, rbp
call	0x1400159e8
call	0x1400159e8
test	eax, eax
jne	0x140008bda
jne	0x140008bda
mov	rax, qword ptr [rsi + 0x18]
mov	edx, 0x11
mov	rcx, rbx
mov	r8, qword ptr [rax + 0x18]
call	0x14000a6f0
call	0x14000a6f0
mov	rax, qword ptr [rsi + 0x10]
cmp	dword ptr [rax], 0x32
jne	0x14000561a
jne	0x14000561a
mov	rax, qword ptr [rax + 0x10]
cmp	dword ptr [rax + 0x10], 1
jne	0x14000561a
jne	0x14000561a
mov	rax, qword ptr [rax + 8]
mov	edx, 0x29
cmp	byte ptr [rax], 0x3e
jne	0x14000561a
jne	0x14000561a
jmp	0x140005876
jmp	0x140005876
nop	dword ptr [rax]
lea	rdi, [rip + 0xb63d6]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 9]
jmp	0x14000624e
jmp	0x14000624e
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	rdi, r12
je	0x1400056c8
je	0x1400056c8
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140006228
jne	0x140006228
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x14000622f
jmp	0x14000622f
lea	rdi, [rip + 0xb63bf]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0x1d]
jmp	0x1400062c6
jmp	0x1400062c6
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x1400062a0
jne	0x1400062a0
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x1400062a7
jmp	0x1400062a7
lea	rdi, [rip + 0xb61d7]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0x10]
jmp	0x14000633e
jmp	0x14000633e
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140006318
jne	0x140006318
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x14000631f
jmp	0x14000631f
lea	rdi, [rip + 0xb614c]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0x12]
jmp	0x1400063b6
jmp	0x1400063b6
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	rdi, r12
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140006390
jne	0x140006390
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140006397
jmp	0x140006397
lea	rdi, [rip + 0xb60c6]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0xd]
jmp	0x14000642e
jmp	0x14000642e
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	rdi, r12
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140006408
jne	0x140006408
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x14000640f
jmp	0x14000640f
lea	rdi, [rip + 0xb6030]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0x18]
jmp	0x1400064a6
jmp	0x1400064a6
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140007a9d
je	0x140007a9d
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140006480
jne	0x140006480
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140006487
jmp	0x140006487
lea	rdi, [rip + 0xb60a0]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0x15]
jmp	0x14000651e
jmp	0x14000651e
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140007a16
je	0x140007a16
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x1400064f8
jne	0x1400064f8
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x1400064ff
jmp	0x1400064ff
lea	rdi, [rip + 0xb600e]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0x19]
jmp	0x140006596
jmp	0x140006596
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140006570
jne	0x140006570
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140006577
jmp	0x140006577
lea	rdi, [rip + 0xb5f7f]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0x16]
jmp	0x14000660e
jmp	0x14000660e
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x1400065e8
jne	0x1400065e8
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x1400065ef
jmp	0x1400065ef
lea	rdi, [rip + 0xb5ef3]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0x13]
jmp	0x140006686
jmp	0x140006686
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140006660
jne	0x140006660
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140006667
jmp	0x140006667
movsxd	rbp, dword ptr [r8 + 0x18]
mov	rsi, qword ptr [r8 + 0x10]
test	rbp, rbp
je	0x14000561a
je	0x14000561a
mov	rax, qword ptr [rcx + 0x100]
add	rbp, rsi
jmp	0x140006706
jmp	0x140006706
nop	word ptr [rax + rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rbp, rsi
je	0x14000561a
je	0x14000561a
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x1400066e0
jne	0x1400066e0
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x1400066e7
jmp	0x1400066e7
lea	rdi, [rip + 0xb5e5c]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0x11]
jmp	0x14000677e
jmp	0x14000677e
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140006758
jne	0x140006758
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x14000675f
jmp	0x14000675f
lea	rdi, [rip + 0xb5cd7]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 8]
jmp	0x1400067f6
jmp	0x1400067f6
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x1400067d0
jne	0x1400067d0
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x1400067d7
jmp	0x1400067d7
lea	rdi, [rip + 0xb5c53]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0xb]
jmp	0x14000686e
jmp	0x14000686e
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140006848
jne	0x140006848
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x14000684f
jmp	0x14000684f
lea	rdi, [rip + 0xb5e06]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 8]
jmp	0x1400068e6
jmp	0x1400068e6
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	rdi, r12
je	0x140007bcc
je	0x140007bcc
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x1400068c0
jne	0x1400068c0
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x1400068c7
jmp	0x1400068c7
mov	rax, qword ptr [rcx + 0x100]
cmp	rax, 0xff
je	0x1400085c0
je	0x1400085c0
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
xor	r12d, r12d
lea	r13, [rip + 0xb5aee]
mov	byte ptr [rbx + rax], 0x3c
mov	byte ptr [rbx + 0x108], 0x3c
mov	rbp, qword ptr [rsi + 0x10]
test	rbp, rbp
jne	0x140006981
jne	0x140006981
jmp	0x140007c55
jmp	0x140007c55
nop	
mov	r8, rbp
mov	edx, 0x11
mov	rcx, rbx
add	r12d, 1
call	0x140008d40
call	0x140008d40
mov	rbp, qword ptr [rbp + 0x18]
test	rbp, rbp
je	0x140007c55
je	0x140007c55
test	r12d, r12d
je	0x140006960
je	0x140006960
mov	rax, qword ptr [rbx + 0x100]
lea	rsi, [rip + 0xb5a9d]
jmp	0x1400069c2
jmp	0x1400069c2
nop	word ptr cs:[rax + rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	r13, rsi
je	0x140006960
je	0x140006960
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x1400069a0
jne	0x1400069a0
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x1400069a7
jmp	0x1400069a7
mov	rax, qword ptr [r8 + 0x10]
movsxd	r12, dword ptr [rax + 8]
mov	rdi, qword ptr [rax]
test	r12, r12
je	0x140007b25
je	0x140007b25
mov	rax, qword ptr [rcx + 0x100]
add	r12, rdi
jmp	0x140006a46
jmp	0x140006a46
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	rdi, r12
je	0x140007b25
je	0x140007b25
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140006a20
jne	0x140006a20
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140006a27
jmp	0x140006a27
lea	rsi, [rip + 0xb5c25]
mov	rax, qword ptr [rcx + 0x100]
lea	rbp, [rsi + 8]
jmp	0x140006abe
jmp	0x140006abe
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rbp, rsi
je	0x14000561a
je	0x14000561a
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x140006a98
jne	0x140006a98
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140006a9f
jmp	0x140006a9f
mov	r8, qword ptr [r8 + 0x10]
mov	r9, qword ptr [rcx + 0x128]
test	r8, r8
je	0x140006b70
je	0x140006b70
lea	rax, [rsp + 0x30]
movq	xmm0, r9
movq	xmm3, rsi
mov	edx, 0x11
mov	qword ptr [rcx + 0x128], rax
mov	rax, qword ptr [rcx + 0x120]
punpcklqdq	xmm0, xmm3
mov	dword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x48], rax
movups	xmmword ptr [rsp + 0x30], xmm0
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rsp + 0x30]
mov	r14d, dword ptr [rsp + 0x40]
mov	qword ptr [rbx + 0x128], rax
test	r14d, r14d
jne	0x14000561a
jne	0x14000561a
mov	edx, 0x20
mov	rcx, rbx
call	0x140001ba0
call	0x140001ba0
mov	r9, qword ptr [rbx + 0x128]
mov	r8, rsi
mov	edx, 0x11
mov	rcx, rbx
add	rsp, 0xb0
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
jmp	0x1400096d0
jmp	0x1400096d0
lea	rdi, [rip + 0xb58b8]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0x1e]
jmp	0x140006bce
jmp	0x140006bce
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140006ba8
jne	0x140006ba8
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140006baf
jmp	0x140006baf
mov	edi, dword ptr [r8 + 0x10]
test	edi, edi
jne	0x140007e3c
jne	0x140007e3c
lea	rdx, [rip + 0xb5a27]
mov	rcx, rbx
add	rsp, 0xb0
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
jmp	0x140001c70
jmp	0x140001c70
mov	r8d, dword ptr [r8 + 0x10]
mov	eax, dword ptr [rcx + 0x138]
lea	edx, [r8 + 1]
cmp	eax, edx
jle	0x140007ee4
jle	0x140007ee4
mov	rax, qword ptr [rcx + 0x120]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + 0x10]
test	rax, rax
je	0x140005610
je	0x140005610
test	r8d, r8d
je	0x140008192
je	0x140008192
mov	edx, r8d
jmp	0x140006c78
jmp	0x140006c78
nop	dword ptr [rax]
test	edx, edx
je	0x140008192
je	0x140008192
mov	rax, qword ptr [rax + 0x18]
sub	edx, 1
test	rax, rax
jne	0x140006c70
jne	0x140006c70
jmp	0x140005610
jmp	0x140005610
mov	rax, qword ptr [rcx + 0x100]
cmp	rax, 0xff
je	0x140008407
je	0x140008407
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
lea	r12, [rip + 0xb5785]
mov	byte ptr [rbx + rax], 0x5b
mov	byte ptr [rbx + 0x108], 0x5b
nop	dword ptr [rax]
mov	r8, qword ptr [rsi + 0x10]
mov	edx, 0x11
mov	rcx, rbx
call	0x140008d40
call	0x140008d40
mov	rsi, qword ptr [rsi + 0x18]
mov	rax, qword ptr [rbx + 0x100]
test	rsi, rsi
je	0x140007640
je	0x140007640
lea	rdi, [rip + 0xb5745]
jmp	0x140006d12
jmp	0x140006d12
nop	
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140006cc0
je	0x140006cc0
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140006cf0
jne	0x140006cf0
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140006cf7
jmp	0x140006cf7
lea	rdi, [rip + 0xb571f]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0x17]
jmp	0x140006d86
jmp	0x140006d86
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140006d60
jne	0x140006d60
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140006d67
jmp	0x140006d67
movq	xmm3, r8
lea	rbp, [rsp + 0x30]
mov	r12, qword ptr [rcx + 0x128]
mov	rax, qword ptr [rcx + 0x120]
mov	qword ptr [rcx + 0x128], rbp
mov	r9, rbp
mov	edi, 1
movq	xmm0, r12
mov	qword ptr [rsp + 0x48], rax
mov	rax, r12
punpcklqdq	xmm0, xmm3
mov	dword ptr [rsp + 0x40], 0
movups	xmmword ptr [rsp + 0x30], xmm0
test	r12, r12
jne	0x140006e5e
jne	0x140006e5e
jmp	0x140007dd5
jmp	0x140007dd5
nop	dword ptr [rax]
mov	r13d, dword ptr [rax + 0x10]
test	r13d, r13d
jne	0x140006e56
jne	0x140006e56
cmp	edi, 3
ja	0x140005610
ja	0x140005610
movdqu	xmm1, xmmword ptr [rax]
mov	edx, edi
add	edi, 1
shl	rdx, 5
movups	xmmword ptr [rsp + rdx + 0x30], xmm1
movdqu	xmm2, xmmword ptr [rax + 0x10]
mov	qword ptr [rsp + rdx + 0x30], r9
lea	r9, [rbp + rdx]
mov	qword ptr [rbx + 0x128], r9
movups	xmmword ptr [rsp + rdx + 0x40], xmm2
mov	dword ptr [rax + 0x10], 1
mov	rax, qword ptr [rax]
test	rax, rax
je	0x140006e6c
je	0x140006e6c
mov	rdx, qword ptr [rax + 8]
mov	edx, dword ptr [rdx]
sub	edx, 0x19
cmp	edx, 2
jbe	0x140006e10
jbe	0x140006e10
mov	r8, qword ptr [rsi + 0x18]
mov	edx, 0x11
mov	rcx, rbx
call	0x140008d40
call	0x140008d40
mov	r11d, dword ptr [rsp + 0x40]
mov	qword ptr [rbx + 0x128], r12
test	r11d, r11d
jne	0x14000561a
jne	0x14000561a
cmp	edi, 1
jbe	0x140007df7
jbe	0x140007df7
lea	eax, [rdi - 1]
mov	rdi, rax
shl	rax, 5
add	rbp, rax
mov	r8, qword ptr [rbp + 8]
mov	edx, 0x11
mov	rcx, rbx
sub	rbp, 0x20
call	0x140008de0
call	0x140008de0
cmp	edi, 1
je	0x140007df7
je	0x140007df7
sub	edi, 1
jmp	0x140006ea8
jmp	0x140006ea8
mov	r8, qword ptr [r8 + 0x10]
mov	edx, 0x11
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x1400083d8
je	0x1400083d8
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x28
mov	byte ptr [rbx + 0x108], 0x28
mov	r8, qword ptr [rsi + 0x18]
mov	edx, 0x11
mov	rcx, rbx
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x140007fa7
je	0x140007fa7
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x29
mov	byte ptr [rbx + 0x108], 0x29
jmp	0x14000561a
jmp	0x14000561a
lea	rdi, [rip + 0xb55ba]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0x11]
jmp	0x140006f7e
jmp	0x140006f7e
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140006f58
jne	0x140006f58
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140006f5f
jmp	0x140006f5f
lea	rdi, [rip + 0xb5530]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0x15]
jmp	0x140006ff6
jmp	0x140006ff6
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140006fd0
jne	0x140006fd0
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140006fd7
jmp	0x140006fd7
mov	r8, qword ptr [r8 + 0x10]
mov	edx, 0x11
lea	rdi, [rip + 0xb5663]
lea	r12, [rdi + 8]
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rbx + 0x100]
jmp	0x140007076
jmp	0x140007076
nop	
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140007628
je	0x140007628
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140007050
jne	0x140007050
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140007057
jmp	0x140007057
mov	r8, qword ptr [r8 + 0x10]
mov	edx, 0x11
lea	rdi, [rip + 0xb536e]
lea	r12, [rdi + 5]
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rbx + 0x100]
jmp	0x1400070f6
jmp	0x1400070f6
nop	
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140007628
je	0x140007628
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x1400070d0
jne	0x1400070d0
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x1400070d7
jmp	0x1400070d7
mov	r13d, dword ptr [rcx + 0x138]
mov	rbp, qword ptr [r8 + 0x10]
test	r13d, r13d
jne	0x140007cc7
jne	0x140007cc7
mov	rdx, rbp
xor	r12d, r12d
call	0x140001d10
call	0x140001d10
test	rax, rax
jne	0x140007174
jne	0x140007174
jmp	0x140007cc7
jmp	0x140007cc7
nop	word ptr cs:[rax + rax]
cmp	qword ptr [rax + 0x10], 0
je	0x140007179
je	0x140007179
mov	rax, qword ptr [rax + 0x18]
add	r12d, 1
test	rax, rax
je	0x140007182
je	0x140007182
cmp	dword ptr [rax], 0x2f
je	0x140007160
je	0x140007160
test	r12d, r12d
je	0x14000561a
je	0x14000561a
lea	r14, [rip + 0xb52aa]
mov	dword ptr [rbx + 0x13c], r13d
mov	r8, rbp
mov	edx, 0x11
mov	rcx, rbx
add	r13d, 1
call	0x140008d40
call	0x140008d40
cmp	r13d, r12d
je	0x14000561a
je	0x14000561a
mov	rax, qword ptr [rbx + 0x100]
lea	rsi, [rip + 0xb5276]
jmp	0x1400071e2
jmp	0x1400071e2
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rsi, r14
je	0x140007189
je	0x140007189
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x1400071c0
jne	0x1400071c0
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x1400071c7
jmp	0x1400071c7
lea	rdi, [rip + 0xb53a9]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0x1a]
jmp	0x140007256
jmp	0x140007256
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	rdi, r12
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140007230
jne	0x140007230
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140007237
jmp	0x140007237
lea	rdi, [rsp + 0x30]
mov	r8d, dword ptr [r8 + 0x10]
lea	rdx, [rip + 0xb4e6f]
mov	rcx, rdi
call	0x140001ad0
call	0x140001ad0
mov	rcx, rdi
call	0x140015a08
call	0x140015a08
test	rax, rax
je	0x14000561a
je	0x14000561a
mov	rdx, qword ptr [rbx + 0x100]
mov	rsi, rdi
lea	rbp, [rdi + rax]
jmp	0x1400072f6
jmp	0x1400072f6
nop	word ptr cs:[rax + rax]
mov	rax, rdx
add	rdx, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rbp, rsi
je	0x14000561a
je	0x14000561a
movzx	edi, byte ptr [rsi]
cmp	rdx, 0xff
jne	0x1400072d0
jne	0x1400072d0
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x1400072d7
jmp	0x1400072d7
mov	esi, dword ptr [r8 + 0x10]
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x140007c98
je	0x140007c98
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], sil
mov	byte ptr [rbx + 0x108], sil
jmp	0x14000561a
jmp	0x14000561a
lea	rdi, [rip + 0xb52c9]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0xa]
jmp	0x14000739e
jmp	0x14000739e
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140007a0d
je	0x140007a0d
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140007378
jne	0x140007378
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x14000737f
jmp	0x14000737f
mov	r8, qword ptr [r8 + 0x10]
mov	edx, 0x11
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x1400084e0
je	0x1400084e0
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x40
mov	byte ptr [rbx + 0x108], 0x40
mov	r8, qword ptr [rsi + 0x18]
jmp	0x14000567c
jmp	0x14000567c
mov	r8, qword ptr [r8 + 0x10]
mov	edx, 0x11
lea	rsi, [rip + 0xb5216]
lea	rbp, [rsi + 3]
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rbx + 0x100]
jmp	0x140007466
jmp	0x140007466
nop	word ptr [rax + rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rsi, rbp
je	0x14000561a
je	0x14000561a
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x140007440
jne	0x140007440
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140007447
jmp	0x140007447
mov	r8, qword ptr [r8 + 0x10]
mov	edx, 0x11
call	0x140008d40
call	0x140008d40
jmp	0x1400056c8
jmp	0x1400056c8
lea	rdi, [rip + 0xb516a]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0xe]
jmp	0x1400074ee
jmp	0x1400074ee
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x1400074c8
jne	0x1400074c8
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x1400074cf
jmp	0x1400074cf
movsxd	rbp, dword ptr [r8 + 0x18]
mov	rsi, qword ptr [r8 + 0x10]
test	rbp, rbp
je	0x14000561a
je	0x14000561a
mov	rax, qword ptr [rcx + 0x100]
add	rbp, rsi
jmp	0x14000756e
jmp	0x14000756e
nop	word ptr [rax + rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rsi, rbp
je	0x14000561a
je	0x14000561a
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x140007548
jne	0x140007548
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x14000754f
jmp	0x14000754f
mov	rax, qword ptr [r8 + 0x10]
movsxd	rbp, dword ptr [rax + 8]
mov	rsi, qword ptr [rax]
test	rbp, rbp
je	0x14000561a
je	0x14000561a
mov	rax, qword ptr [rcx + 0x100]
add	rbp, rsi
jmp	0x1400075ee
jmp	0x1400075ee
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rbp, rsi
je	0x14000561a
je	0x14000561a
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x1400075c8
jne	0x1400075c8
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x1400075cf
jmp	0x1400075cf
nop	dword ptr [rax]
mov	r8, qword ptr [rsi + 0x18]
mov	edx, 0x11
mov	rcx, rbx
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x140007ce3
je	0x140007ce3
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x5d
mov	byte ptr [rbx + 0x108], 0x5d
jmp	0x14000561a
jmp	0x14000561a
lea	rax, [rsp + 0x30]
mov	r8, qword ptr [rcx + 0x10]
mov	qword ptr [rsp + 0x30], r9
mov	qword ptr [rbx + 0x128], rax
mov	rax, qword ptr [rbx + 0x120]
mov	qword ptr [rsp + 0x38], rsi
mov	dword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x48], rax
test	r8, r8
jne	0x140005708
jne	0x140005708
jmp	0x1400056ff
jmp	0x1400056ff
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x170]
test	rax, rax
je	0x1400076d6
je	0x1400076d6
movq	xmm0, qword ptr [rbx + 0x120]
movq	xmm5, rax
lea	rax, [rsp + 0x30]
mov	qword ptr [rbx + 0x120], rax
punpcklqdq	xmm0, xmm5
movups	xmmword ptr [rsp + 0x30], xmm0
mov	r8, qword ptr [rsi + 0x10]
cmp	dword ptr [r8], 4
je	0x1400080c4
je	0x1400080c4
mov	edx, 0x11
mov	rcx, rbx
call	0x140008d40
call	0x140008d40
cmp	qword ptr [rbx + 0x170], 0
je	0x14000561a
je	0x14000561a
mov	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rbx + 0x120], rax
jmp	0x14000561a
jmp	0x14000561a
mov	eax, dword ptr [rsi + 0x10]
lea	rsi, [rsp + 0x30]
lea	rdx, [rip + 0xb49ed]
mov	rcx, rsi
lea	r8d, [rax + 1]
call	0x140001ad0
call	0x140001ad0
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, qword ptr [rbx + 0x100]
test	rax, rax
je	0x1400077a8
je	0x1400077a8
lea	rbp, [rsi + rax]
jmp	0x14000776a
jmp	0x14000776a
nop	dword ptr [rax]
mov	rax, rdx
add	rdx, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rsi, rbp
je	0x1400077a8
je	0x1400077a8
movzx	edi, byte ptr [rsi]
cmp	rdx, 0xff
jne	0x140007748
jne	0x140007748
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x14000774f
jmp	0x14000774f
nop	word ptr [rax + rax]
cmp	rdx, 0xff
je	0x140007f78
je	0x140007f78
lea	rax, [rdx + 1]
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], 0x7d
mov	byte ptr [rbx + 0x108], 0x7d
jmp	0x14000561a
jmp	0x14000561a
mov	rdx, qword ptr [rbx + 0x120]
mov	rbp, qword ptr [rsi + 0x10]
mov	qword ptr [rsp + 0x28], 0
mov	r12d, dword ptr [rbx + 0x138]
mov	dword ptr [rbx + 0x138], 0
mov	qword ptr [rsp + 0x20], rdx
lea	rdx, [rsp + 0x20]
mov	qword ptr [rbx + 0x120], rdx
mov	edx, 1
test	rbp, rbp
je	0x14000781a
je	0x14000781a
cmp	dword ptr [rbp], 0x57
je	0x1400088cb
je	0x1400088cb
mov	dword ptr [rbx + 0x138], edx
cmp	rax, 0xff
je	0x14000834b
je	0x14000834b
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	r8, rbp
mov	edx, 0x11
mov	rcx, rbx
mov	byte ptr [rbx + rax], 0x28
lea	rdi, [rip + 0xb4e41]
mov	byte ptr [rbx + 0x108], 0x28
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rsp + 0x20]
mov	dword ptr [rbx + 0x138], r12d
lea	r12, [rdi + 2]
mov	qword ptr [rbx + 0x120], rax
mov	rax, qword ptr [rbx + 0x100]
jmp	0x1400078a2
jmp	0x1400078a2
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x1400078d9
je	0x1400078d9
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140007880
jne	0x140007880
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140007887
jmp	0x140007887
mov	eax, dword ptr [rsi + 0x18]
lea	rsi, [rsp + 0x30]
lea	rdx, [rip + 0xb4824]
mov	rcx, rsi
lea	r8d, [rax + 1]
call	0x140001ad0
call	0x140001ad0
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, qword ptr [rbx + 0x100]
test	rax, rax
je	0x1400077a8
je	0x1400077a8
lea	rbp, [rsi + rax]
jmp	0x14000793e
jmp	0x14000793e
nop	word ptr [rax + rax]
mov	rax, rdx
add	rdx, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rbp, rsi
je	0x1400077a8
je	0x1400077a8
movzx	edi, byte ptr [rsi]
cmp	rdx, 0xff
jne	0x140007918
jne	0x140007918
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x14000791f
jmp	0x14000791f
mov	rsi, qword ptr [r12 + 8]
movzx	eax, byte ptr [rsi]
sub	eax, 0x61
cmp	al, 0x19
jbe	0x14000814e
jbe	0x14000814e
lea	rax, [rbp - 1]
cmp	byte ptr [rsi + rbp - 1], 0x20
cmove	rbp, rax
test	rbp, rbp
je	0x14000561a
je	0x14000561a
mov	rax, qword ptr [rbx + 0x100]
add	rbp, rsi
jmp	0x1400079d6
jmp	0x1400079d6
nop	dword ptr [rax + rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rbp, rsi
je	0x14000561a
je	0x14000561a
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x1400079b0
jne	0x1400079b0
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x1400079b7
jmp	0x1400079b7
mov	r8, qword ptr [rsi + 0x10]
jmp	0x140006f06
jmp	0x140006f06
mov	r8, qword ptr [rsi + 0x18]
mov	edx, 0x11
mov	rcx, rbx
lea	rdi, [rip + 0xb4b71]
lea	r12, [rdi + 5]
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rbx + 0x100]
jmp	0x140007a66
jmp	0x140007a66
nop	dword ptr [rax + rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140005678
je	0x140005678
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140007a40
jne	0x140007a40
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140007a47
jmp	0x140007a47
mov	r8, qword ptr [rsi + 0x10]
mov	edx, 0x11
mov	rcx, rbx
lea	rdi, [rip + 0xb4a05]
lea	r12, [rdi + 4]
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rbx + 0x100]
jmp	0x140007aee
jmp	0x140007aee
nop	word ptr [rax + rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	rdi, r12
je	0x1400056c8
je	0x1400056c8
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140007ac8
jne	0x140007ac8
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140007acf
jmp	0x140007acf
lea	rdi, [rsp + 0x30]
movsx	r8d, word ptr [rsi + 0x18]
lea	rdx, [rip + 0xb45d6]
mov	rcx, rdi
call	0x140001ad0
call	0x140001ad0
mov	rcx, rdi
call	0x140015a08
call	0x140015a08
test	rax, rax
je	0x140007bba
je	0x140007bba
mov	rdx, qword ptr [rbx + 0x100]
lea	r12, [rdi + rax]
jmp	0x140007b82
jmp	0x140007b82
nop	dword ptr [rax + rax]
mov	rax, rdx
add	rdx, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140007bba
je	0x140007bba
movzx	ebp, byte ptr [rdi]
cmp	rdx, 0xff
jne	0x140007b60
jne	0x140007b60
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140007b67
jmp	0x140007b67
movzx	esi, byte ptr [rsi + 0x1a]
test	sil, sil
je	0x14000561a
je	0x14000561a
jmp	0x140007332
jmp	0x140007332
mov	r8, qword ptr [rsi + 0x10]
mov	edx, 0x11
mov	rcx, rbx
lea	rsi, [rip + 0xb4adc]
lea	rbp, [rsi + 6]
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rbx + 0x100]
jmp	0x140007c1e
jmp	0x140007c1e
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rsi, rbp
je	0x14000561a
je	0x14000561a
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x140007bf8
jne	0x140007bf8
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140007bff
jmp	0x140007bff
mov	rax, qword ptr [rbx + 0x100]
lea	rdx, [rax + 1]
cmp	rax, 0xff
je	0x140008591
je	0x140008591
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x3e
mov	byte ptr [rbx + 0x108], 0x3e
jmp	0x14000561a
jmp	0x14000561a
mov	r8, rsi
mov	edx, 0x11
mov	rcx, rbx
call	0x140008de0
call	0x140008de0
jmp	0x140005721
jmp	0x140005721
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140007349
jmp	0x140007349
mov	edx, 0x11
mov	r8, rbp
mov	rcx, rbx
call	0x14000a6f0
call	0x14000a6f0
lea	rdx, [rip + 0xb495d]
jmp	0x140006c18
jmp	0x140006c18
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140007650
jmp	0x140007650
mov	qword ptr [rbx + 0x128], rax
cmp	edx, 2
je	0x140008433
je	0x140008433
cmp	edx, 4
jne	0x140007d46
jne	0x140007d46
lea	rax, [rsp + 0x20]
movq	xmm0, r8
movq	xmm4, r12
mov	qword ptr [rbx + 0x120], rax
punpcklqdq	xmm0, xmm4
movups	xmmword ptr [rsp + 0x20], xmm0
mov	r8, qword ptr [rsi + 0x18]
mov	edx, 0x11
mov	rcx, rbx
call	0x140008d40
call	0x140008d40
cmp	dword ptr [r12], 4
jne	0x140007d6a
jne	0x140007d6a
mov	rax, qword ptr [rsp + 0x20]
mov	qword ptr [rbx + 0x120], rax
lea	esi, [r13 - 1]
shl	rsi, 5
add	rsi, rbp
mov	r8d, dword ptr [rsi + 0x10]
test	r8d, r8d
je	0x140007d99
je	0x140007d99
nop	
lea	rax, [rsi - 0x20]
cmp	rsi, rbp
je	0x140007e30
je	0x140007e30
mov	rsi, rax
mov	r8d, dword ptr [rsi + 0x10]
test	r8d, r8d
jne	0x140007d80
jne	0x140007d80
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x14000889c
je	0x14000889c
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	r8, qword ptr [rsi + 8]
mov	rcx, rbx
mov	edx, 0x11
mov	byte ptr [rbx + rax], 0x20
mov	byte ptr [rbx + 0x108], 0x20
call	0x140008de0
call	0x140008de0
jmp	0x140007d80
jmp	0x140007d80
mov	r8, qword ptr [r8 + 0x18]
mov	edx, 0x11
call	0x140008d40
call	0x140008d40
xor	edx, edx
cmp	dword ptr [rsp + 0x40], 0
mov	qword ptr [rbx + 0x128], rdx
jne	0x14000561a
jne	0x14000561a
mov	r9, qword ptr [rbx + 0x128]
mov	r8, rsi
mov	edx, 0x11
mov	rcx, rbx
call	0x140009da0
call	0x140009da0
jmp	0x14000561a
jmp	0x14000561a
mov	r9, qword ptr [rbx + 0x128]
cmp	r10d, 0x2f
jne	0x1400059fb
jne	0x1400059fb
mov	r8, qword ptr [rcx + 0x10]
mov	rsi, rcx
jmp	0x1400059fb
jmp	0x1400059fb
mov	qword ptr [rbx + 0x128], rdi
jmp	0x14000561a
jmp	0x14000561a
lea	rdx, [rip + 0xb4801]
lea	rsi, [rsp + 0x30]
call	0x140001c70
call	0x140001c70
mov	r8d, edi
lea	rdx, [rip + 0xb42b5]
mov	rcx, rsi
call	0x140001ad0
call	0x140001ad0
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rbp, rax
test	rax, rax
je	0x140007eda
je	0x140007eda
mov	rdx, qword ptr [rbx + 0x100]
add	rbp, rsi
jmp	0x140007ea2
jmp	0x140007ea2
nop	dword ptr [rax + rax]
mov	rax, rdx
add	rdx, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rbp, rsi
je	0x140007eda
je	0x140007eda
movzx	edi, byte ptr [rsi]
cmp	rdx, 0xff
jne	0x140007e80
jne	0x140007e80
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140007e87
jmp	0x140007e87
mov	edx, 0x7d
jmp	0x140005876
jmp	0x140005876
test	eax, eax
je	0x1400081ca
je	0x1400081ca
lea	rdi, [rip + 0xb4556]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 5]
jmp	0x140007f26
jmp	0x140007f26
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x14000822b
je	0x14000822b
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140007f00
jne	0x140007f00
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140007f07
jmp	0x140007f07
xor	edi, edi
jmp	0x1400057e2
jmp	0x1400057e2
cmp	r10d, 0x54
jne	0x1400056c8
jne	0x1400056c8
mov	edi, 0x3a
jmp	0x1400058c0
jmp	0x1400058c0
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x1400077b9
jmp	0x1400077b9
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140006f2a
jmp	0x140006f2a
mov	rax, qword ptr [rdi + 0x10]
mov	rbp, qword ptr [rax]
movzx	eax, byte ptr [rbp]
mov	edx, eax
sub	edx, 0x61
jne	0x140007ff5
jne	0x140007ff5
movzx	edx, byte ptr [rbp + 1]
sub	edx, 0x64
jne	0x140007ff5
jne	0x140007ff5
movzx	edx, byte ptr [rbp + 2]
mov	ecx, dword ptr [rsi]
test	edx, edx
jne	0x140008004
jne	0x140008004
cmp	ecx, 3
je	0x140008ac8
je	0x140008ac8
cmp	ecx, 0x39
je	0x140008b53
je	0x140008b53
cmp	eax, 0x73
jne	0x140008054
jne	0x140008054
cmp	byte ptr [rbp + 1], 0x5a
jne	0x1400089cb
jne	0x1400089cb
cmp	byte ptr [rbp + 2], 0
jne	0x1400089cb
jne	0x1400089cb
mov	rdx, rsi
mov	rcx, rbx
call	0x140001d10
call	0x140001d10
mov	rcx, rax
call	0x140001990
call	0x140001990
mov	edx, eax
mov	rcx, rbx
add	rsp, 0xb0
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
jmp	0x140001ea0
jmp	0x140001ea0
mov	r8, rdi
mov	edx, 0x11
mov	rcx, rbx
call	0x14000a070
call	0x14000a070
movzx	eax, byte ptr [rbp]
cmp	eax, 0x67
jne	0x140008080
jne	0x140008080
cmp	byte ptr [rbp + 1], 0x73
jne	0x140008080
jne	0x140008080
cmp	byte ptr [rbp + 2], 0
mov	r8, rsi
je	0x14000567c
je	0x14000567c
cmp	eax, 0x73
jne	0x140005f7e
jne	0x140005f7e
cmp	byte ptr [rbp + 1], 0x74
jne	0x140005f7e
jne	0x140005f7e
cmp	byte ptr [rbp + 2], 0
jne	0x140005f7e
jne	0x140005f7e
mov	edx, 0x28
mov	rcx, rbx
call	0x140001ba0
call	0x140001ba0
mov	edx, 0x11
mov	r8, rsi
mov	rcx, rbx
call	0x140008d40
call	0x140008d40
mov	edx, 0x29
jmp	0x140005876
jmp	0x140005876
mov	r8, qword ptr [r8 + 0x10]
mov	edx, 0x11
mov	rcx, rbx
call	0x140008d40
call	0x140008d40
cmp	qword ptr [rbx + 0x170], 0
je	0x1400080eb
je	0x1400080eb
mov	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rbx + 0x120], rax
cmp	byte ptr [rbx + 0x108], 0x3c
je	0x140008aae
je	0x140008aae
mov	edx, 0x3c
mov	rcx, rbx
call	0x140001ba0
call	0x140001ba0
mov	rax, qword ptr [rsi + 0x10]
mov	edx, 0x11
mov	rcx, rbx
mov	r8, qword ptr [rax + 0x18]
call	0x140008d40
call	0x140008d40
cmp	byte ptr [rbx + 0x108], 0x3e
je	0x140008a9c
je	0x140008a9c
mov	edx, 0x3e
mov	rcx, rbx
call	0x140001ba0
call	0x140001ba0
jmp	0x14000561a
jmp	0x14000561a
mov	r8, rsi
mov	edx, 0x11
mov	rcx, rbx
call	0x140008de0
call	0x140008de0
jmp	0x14000579a
jmp	0x14000579a
mov	edx, 0x20
mov	rcx, rbx
call	0x140001ba0
call	0x140001ba0
mov	rsi, qword ptr [r12 + 8]
jmp	0x140007989
jmp	0x140007989
mov	edx, 0x28
call	0x140001ba0
call	0x140001ba0
mov	r8, qword ptr [rdi + 0x10]
mov	rcx, rbx
mov	edx, 0x11
call	0x140008d40
call	0x140008d40
mov	edx, 0x29
mov	rcx, rbx
call	0x140001ba0
call	0x140001ba0
jmp	0x140005f7e
jmp	0x140005f7e
test	rax, rax
je	0x140005610
je	0x140005610
mov	edx, dword ptr [rax]
cmp	edx, 0x5b
jne	0x1400081b1
jne	0x1400081b1
mov	rax, qword ptr [rax + 0x10]
test	rax, rax
je	0x140005610
je	0x140005610
mov	edx, dword ptr [rax]
mov	rcx, rbx
add	rsp, 0xb0
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
jmp	0x140001f50
jmp	0x140001f50
mov	rdx, rsi
call	0x140001c10
call	0x140001c10
mov	r8, rax
test	rax, rax
je	0x140005610
je	0x140005610
cmp	dword ptr [rax], 0x2f
jne	0x140008201
jne	0x140008201
mov	edx, dword ptr [rcx + 0x13c]
test	edx, edx
js	0x140008201
js	0x140008201
mov	rcx, rax
call	0x1400019c0
call	0x1400019c0
mov	r8, rax
test	rax, rax
je	0x140005610
je	0x140005610
mov	rsi, qword ptr [rbx + 0x120]
mov	edx, 0x11
mov	rcx, rbx
mov	rax, qword ptr [rsi]
mov	qword ptr [rbx + 0x120], rax
call	0x140008d40
call	0x140008d40
mov	qword ptr [rbx + 0x120], rsi
jmp	0x14000561a
jmp	0x14000561a
mov	eax, dword ptr [rsi + 0x10]
lea	rsi, [rsp + 0x30]
lea	rdx, [rip + 0xb3ed2]
mov	rcx, rsi
lea	r8d, [rax + 1]
call	0x140001ad0
call	0x140001ad0
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rbp, rax
test	rax, rax
je	0x14000561a
je	0x14000561a
mov	rax, qword ptr [rbx + 0x100]
add	rbp, rsi
jmp	0x140008296
jmp	0x140008296
nop	word ptr cs:[rax + rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rbp, rsi
je	0x14000561a
je	0x14000561a
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x140008270
jne	0x140008270
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140008277
jmp	0x140008277
cmp	edi, 7
jne	0x1400057e2
jne	0x1400057e2
mov	rax, qword ptr [rsi + 0x18]
mov	ecx, dword ptr [rax]
test	ecx, ecx
jne	0x1400057e2
jne	0x1400057e2
cmp	dword ptr [rax + 0x18], 1
jne	0x1400057e2
jne	0x1400057e2
cmp	r10d, 0x3d
jne	0x1400057e2
jne	0x1400057e2
mov	rax, qword ptr [rax + 0x10]
movzx	eax, byte ptr [rax]
cmp	al, 0x30
je	0x140008d2c
je	0x140008d2c
cmp	al, 0x31
jne	0x1400057e2
jne	0x1400057e2
lea	rdx, [rip + 0xb4306]
jmp	0x140006c18
jmp	0x140006c18
nop	dword ptr [rax + rax]
mov	byte ptr [rbx + rdx], 0
mov	rcx, rbx
mov	r8, qword ptr [rbx + 0x118]
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	qword ptr [rbx + 0x100], 0
jmp	0x140005922
jmp	0x140005922
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140007830
jmp	0x140007830
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140005d5c
jmp	0x140005d5c
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140005d23
jmp	0x140005d23
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140006ef0
jmp	0x140006ef0
mov	edx, 0xff
mov	byte ptr [rcx + 0xff], 0
mov	r8, qword ptr [rcx + 0x118]
call	qword ptr [rcx + 0x110]
call	qword ptr [rcx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140006ca0
jmp	0x140006ca0
mov	r12, qword ptr [r12 + 0x18]
cmp	dword ptr [r12], 0x48
je	0x140008a55
je	0x140008a55
movabs	r10, 0x3400000000001f
mov	eax, ecx
mov	ecx, r13d
shl	rax, 5
shl	rcx, 5
add	rax, rbp
add	rcx, rbp
mov	edx, dword ptr [r12]
lea	r9d, [rdx - 0x1c]
cmp	r9d, 0x35
ja	0x140007d22
ja	0x140007d22
bt	r10, r9
jae	0x140007d22
jae	0x140007d22
cmp	r13d, 4
je	0x140005610
je	0x140005610
movdqu	xmm3, xmmword ptr [rax]
movq	xmm0, r8
mov	qword ptr [rbx + 0x128], rcx
add	r13d, 1
add	rcx, 0x20
movups	xmmword ptr [rcx - 0x20], xmm3
movq	xmm3, rax
movdqu	xmm4, xmmword ptr [rax + 0x10]
add	rax, 0x20
punpcklqdq	xmm0, xmm3
movups	xmmword ptr [rcx - 0x10], xmm4
mov	qword ptr [rax - 0x18], r12
mov	dword ptr [rax - 0x10], 0
movups	xmmword ptr [rax - 8], xmm0
mov	r12, qword ptr [r12 + 0x10]
test	r12, r12
jne	0x140008460
jne	0x140008460
jmp	0x140005610
jmp	0x140005610
nop	word ptr cs:[rax + rax]
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x1400073fa
jmp	0x1400073fa
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140005bbe
jmp	0x140005bbe
mov	edx, 0x20
mov	rcx, rbx
call	0x140001ba0
call	0x140001ba0
jmp	0x140005ba7
jmp	0x140005ba7
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140005b77
jmp	0x140005b77
mov	edx, 0x20
mov	rcx, rbx
call	0x140001ba0
call	0x140001ba0
jmp	0x140005b60
jmp	0x140005b60
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140007c6c
jmp	0x140007c6c
mov	edx, 0xff
mov	byte ptr [rcx + 0xff], 0
mov	r8, qword ptr [rcx + 0x118]
call	qword ptr [rcx + 0x110]
call	qword ptr [rcx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140006934
jmp	0x140006934
lea	rdx, [rip + 0xb3e44]
mov	rcx, rbx
lea	rsi, [rsp + 0x30]
call	0x140001c70
call	0x140001c70
mov	eax, dword ptr [rbp + 0x18]
lea	rdx, [rip + 0xb3b02]
mov	rcx, rsi
lea	r8d, [rax + 1]
call	0x140001ad0
call	0x140001ad0
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	r12, rax
test	rax, rax
je	0x14000868b
je	0x14000868b
mov	rax, qword ptr [rbx + 0x100]
add	r12, rsi
jmp	0x140008654
jmp	0x140008654
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	r12, rsi
je	0x14000868b
je	0x14000868b
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x140008632
jne	0x140008632
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140008639
jmp	0x140008639
lea	rdx, [rip + 0xb3db3]
mov	rcx, rbx
call	0x140001c70
call	0x140001c70
mov	rbp, qword ptr [rbp + 0x10]
jmp	0x1400059ab
jmp	0x1400059ab
mov	edx, 0xff
mov	byte ptr [rcx + 0xff], 0
mov	r8, qword ptr [rcx + 0x118]
call	qword ptr [rcx + 0x110]
call	qword ptr [rcx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x1400056b1
jmp	0x1400056b1
mov	edx, 0x2d
mov	rcx, rbx
call	0x140001ba0
call	0x140001ba0
jmp	0x14000584a
jmp	0x14000584a
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x14000582f
jmp	0x14000582f
mov	r8, qword ptr [rbx + 0x118]
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	r8, qword ptr [rsi + 0x10]
xor	eax, eax
mov	edx, 1
jmp	0x1400057f9
jmp	0x1400057f9
mov	ecx, dword ptr [rbx + 0x158]
test	ecx, ecx
jle	0x140008c75
jle	0x140008c75
mov	rdx, qword ptr [rbx + 0x150]
movsxd	rax, ecx
shl	rax, 4
add	rax, rdx
jmp	0x140008775
jmp	0x140008775
nop	dword ptr [rax]
add	rdx, 0x10
cmp	rdx, rax
je	0x140008c75
je	0x140008c75
cmp	r8, qword ptr [rdx]
jne	0x140008768
jne	0x140008768
mov	r11, qword ptr [rbx + 0x148]
mov	rax, r11
test	r11, r11
jne	0x1400087a7
jne	0x1400087a7
jmp	0x140008a68
jmp	0x140008a68
nop	
cmp	rcx, rsi
jne	0x14000879a
jne	0x14000879a
cmp	r11, rax
jne	0x1400087af
jne	0x1400087af
mov	rax, qword ptr [rax + 8]
test	rax, rax
je	0x140008a68
je	0x140008a68
mov	rcx, qword ptr [rax]
cmp	rcx, r8
jne	0x140008790
jne	0x140008790
mov	rcx, rbx
mov	rdx, r8
call	0x140001c10
call	0x140001c10
mov	rcx, rax
test	rax, rax
je	0x140005610
je	0x140005610
mov	eax, dword ptr [rcx]
mov	ebp, r9d
cmp	eax, 0x2f
jne	0x1400059d9
jne	0x1400059d9
mov	edx, dword ptr [rbx + 0x13c]
test	edx, edx
js	0x140007e13
js	0x140007e13
call	0x1400019c0
call	0x1400019c0
mov	rcx, rax
test	rax, rax
je	0x140008d17
je	0x140008d17
mov	eax, dword ptr [rax]
jmp	0x1400059d9
jmp	0x1400059d9
movzx	eax, byte ptr [rax]
lea	edx, [rax - 0x72]
cmp	dl, 1
jbe	0x140008810
jbe	0x140008810
sub	eax, 0x63
cmp	al, 1
ja	0x14000611a
ja	0x14000611a
mov	edx, 0x11
mov	rcx, rbx
call	0x14000a070
call	0x14000a070
mov	edx, 0x3c
mov	rcx, rbx
call	0x140001ba0
call	0x140001ba0
mov	rax, qword ptr [rsi + 0x18]
mov	edx, 0x11
mov	rcx, rbx
mov	r8, qword ptr [rax + 0x10]
call	0x140008d40
call	0x140008d40
lea	rdx, [rip + 0xb3db1]
mov	rcx, rbx
call	0x140001c70
call	0x140001c70
mov	rax, qword ptr [rsi + 0x18]
mov	edx, 0x11
mov	rcx, rbx
mov	r8, qword ptr [rax + 0x18]
call	0x140008d40
call	0x140008d40
mov	edx, 0x29
jmp	0x140005876
jmp	0x140005876
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x1400058d7
jmp	0x1400058d7
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140007db0
jmp	0x140007db0
mov	edx, 0x3c
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], rbp
lea	r13, [rip + 0xb3b52]
call	0x140001ba0
call	0x140001ba0
mov	rdi, qword ptr [rbp + 0x10]
test	rdi, rdi
jne	0x140008956
jne	0x140008956
jmp	0x1400089a5
jmp	0x1400089a5
nop	word ptr [rax + rax]
mov	r8, rdi
mov	edx, 0x11
mov	rcx, rbx
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x140008976
je	0x140008976
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x20
mov	byte ptr [rbx + 0x108], 0x20
mov	edx, dword ptr [rdi]
cmp	edx, 0x5b
jne	0x14000893a
jne	0x14000893a
mov	rdi, qword ptr [rdi + 0x10]
mov	edx, dword ptr [rdi]
mov	r8d, dword ptr [rbx + 0x138]
mov	rcx, rbx
sub	r8d, 1
call	0x140001f50
call	0x140001f50
mov	rdi, qword ptr [rdi + 0x18]
test	rdi, rdi
je	0x1400089a5
je	0x1400089a5
mov	eax, dword ptr [rbx + 0x138]
lea	edx, [rax + 1]
mov	dword ptr [rbx + 0x138], edx
test	eax, eax
je	0x1400088f8
je	0x1400088f8
mov	rdx, r13
mov	rcx, rbx
call	0x140001c70
call	0x140001c70
jmp	0x1400088f8
jmp	0x1400088f8
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x14000891b
jmp	0x14000891b
mov	edx, 0x3e
mov	rcx, rbx
call	0x140001ba0
call	0x140001ba0
mov	eax, dword ptr [rbx + 0x138]
mov	rbp, qword ptr [rbp + 0x18]
lea	edx, [rax + 1]
mov	rax, qword ptr [rbx + 0x100]
jmp	0x14000781a
jmp	0x14000781a
cmp	eax, 0x73
jne	0x140008054
jne	0x140008054
cmp	byte ptr [rbp + 1], 0x50
jne	0x140008054
jne	0x140008054
xor	r8d, r8d
cmp	byte ptr [rbp + 2], 0
je	0x140008a01
je	0x140008a01
jmp	0x140008054
jmp	0x140008054
nop	dword ptr [rax]
add	r8d, 1
mov	rsi, qword ptr [rsi + 0x18]
test	rsi, rsi
je	0x140008ac0
je	0x140008ac0
cmp	dword ptr [rsi], 0x2f
jne	0x140008ac0
jne	0x140008ac0
mov	rax, qword ptr [rsi + 0x10]
test	rax, rax
je	0x140008ac0
je	0x140008ac0
cmp	dword ptr [rax], 0x4c
jne	0x1400089f0
jne	0x1400089f0
mov	rdx, qword ptr [rax + 0x10]
mov	rcx, rbx
call	0x140001d10
call	0x140001d10
xor	edx, edx
test	rax, rax
jne	0x140008a4b
jne	0x140008a4b
jmp	0x140008a50
jmp	0x140008a50
nop	dword ptr [rax]
cmp	qword ptr [rax + 0x10], 0
je	0x140008a50
je	0x140008a50
mov	rax, qword ptr [rax + 0x18]
add	edx, 1
test	rax, rax
je	0x140008a50
je	0x140008a50
cmp	dword ptr [rax], 0x2f
je	0x140008a38
je	0x140008a38
add	r8d, edx
jmp	0x1400089f4
jmp	0x1400089f4
mov	r12, qword ptr [r12 + 0x10]
test	r12, r12
jne	0x140008443
jne	0x140008443
jmp	0x140005610
jmp	0x140005610
mov	rax, qword ptr [rdx + 8]
mov	rdi, qword ptr [rbx + 0x120]
mov	rcx, rbx
mov	rdx, r8
mov	qword ptr [rbx + 0x120], rax
call	0x140001c10
call	0x140001c10
mov	rcx, rax
test	rax, rax
je	0x140008d20
je	0x140008d20
mov	r9d, 1
jmp	0x1400087c6
jmp	0x1400087c6
mov	edx, 0x20
mov	rcx, rbx
call	0x140001ba0
call	0x140001ba0
jmp	0x140008127
jmp	0x140008127
mov	edx, 0x20
mov	rcx, rbx
call	0x140001ba0
call	0x140001ba0
jmp	0x1400080f8
jmp	0x1400080f8
mov	edx, r8d
jmp	0x14000803b
jmp	0x14000803b
mov	rdx, qword ptr [rsi + 0x10]
cmp	dword ptr [rdx], 1
jne	0x14000800d
jne	0x14000800d
mov	rcx, qword ptr [rsi + 0x18]
cmp	dword ptr [rcx], 0x29
cmove	rsi, rdx
jmp	0x14000800d
jmp	0x14000800d
cmp	r10d, 0x3e
je	0x140008cfa
je	0x140008cfa
mov	r8, rax
mov	edx, 0x11
mov	rcx, rbx
sub	edi, 2
call	0x140008d40
call	0x140008d40
cmp	edi, 4
ja	0x14000561a
ja	0x14000561a
lea	rdx, [rip + 0xb3d26]
movsxd	rax, dword ptr [rdx + rdi*4]
add	rax, rdx
jmp	rax
jmp	rax
lea	rdx, [rip + 0xb3aed]
jmp	0x140006c18
jmp	0x140006c18
lea	rdx, [rip + 0xb3ade]
jmp	0x140006c18
jmp	0x140006c18
mov	edx, 0x6c
jmp	0x140005876
jmp	0x140005876
mov	edx, 0x75
jmp	0x140005876
jmp	0x140005876
lea	rdx, [rip + 0xb3ac4]
jmp	0x140006c18
jmp	0x140006c18
mov	r8, qword ptr [rsi + 0x10]
mov	edx, 0x11
mov	rcx, rbx
call	0x14000a6f0
call	0x14000a6f0
mov	r8, rdi
jmp	0x140005fa3
jmp	0x140005fa3
mov	r8, qword ptr [rsi + 0x10]
jmp	0x1400059fb
jmp	0x1400059fb
mov	rdx, qword ptr [rax + 0x10]
cmp	dword ptr [rdx + 0x10], 1
jne	0x140006157
jne	0x140006157
mov	rdx, qword ptr [rdx + 8]
cmp	byte ptr [rdx], 0x3e
jne	0x140006157
jne	0x140006157
mov	edx, 0x28
mov	rcx, rbx
call	0x140001ba0
call	0x140001ba0
mov	rax, qword ptr [rsi + 0x10]
jmp	0x140006157
jmp	0x140006157
mov	rcx, rbx
mov	edx, 0x5b
call	0x140001ba0
call	0x140001ba0
mov	rax, qword ptr [rsi + 0x18]
mov	rcx, rbx
mov	edx, 0x11
mov	r8, qword ptr [rax + 0x18]
call	0x140008d40
call	0x140008d40
mov	edx, 0x5d
mov	rcx, rbx
call	0x140001ba0
call	0x140001ba0
jmp	0x1400061da
jmp	0x1400061da
mov	r8, rdi
mov	edx, 0x11
mov	rcx, rbx
call	0x14000a070
call	0x14000a070
jmp	0x1400061c5
jmp	0x1400061c5
lea	rdx, [rip + 0xb3a11]
mov	rcx, rbx
call	0x140001c70
call	0x140001c70
cmp	qword ptr [rdi + 0x10], 0
je	0x140008c22
je	0x140008c22
mov	edx, 0x11
mov	rcx, rbx
mov	r8, rdi
call	0x14000a6f0
call	0x14000a6f0
mov	edx, 0x20
mov	rcx, rbx
call	0x140001ba0
call	0x140001ba0
mov	r8, rbp
mov	edx, 0x11
mov	rcx, rbx
call	0x140008d40
call	0x140008d40
test	rsi, rsi
jne	0x140005f7e
jne	0x140005f7e
jmp	0x14000561a
jmp	0x14000561a
mov	rax, qword ptr [r8 + 0x18]
cmp	dword ptr [rax], 0x29
je	0x140008c53
je	0x140008c53
mov	dword ptr [rbx + 0x130], 1
mov	r8, qword ptr [r8 + 0x10]
mov	edx, 0x11
mov	rcx, rbx
call	0x14000a6f0
call	0x14000a6f0
jmp	0x140006190
jmp	0x140006190
mov	qword ptr [rbx + 0x128], rax
jmp	0x140005610
jmp	0x140005610
cmp	ecx, dword ptr [rbx + 0x15c]
jge	0x140005610
jge	0x140005610
movsxd	rax, ecx
mov	r11, qword ptr [rbx + 0x120]
add	ecx, 1
shl	rax, 4
add	rax, qword ptr [rbx + 0x150]
mov	dword ptr [rbx + 0x158], ecx
add	rax, 8
mov	qword ptr [rax - 8], r8
test	r11, r11
je	0x140008d0d
je	0x140008d0d
movsxd	rdx, dword ptr [rbx + 0x168]
mov	r12d, dword ptr [rbx + 0x16c]
mov	rcx, rdx
shl	rdx, 4
jmp	0x140008cf0
jmp	0x140008cf0
mov	rbp, qword ptr [rbx + 0x160]
mov	r13, qword ptr [r11 + 8]
add	ecx, 1
mov	dword ptr [rbx + 0x168], ecx
add	rbp, rdx
add	rdx, 0x10
mov	qword ptr [rbp + 8], r13
mov	qword ptr [rax], rbp
mov	r11, qword ptr [r11]
mov	rax, rbp
test	r11, r11
je	0x140008d0d
je	0x140008d0d
cmp	r12d, ecx
jg	0x140008cc3
jg	0x140008cc3
jmp	0x140005610
jmp	0x140005610
mov	edx, 0x2d
call	0x140001ba0
call	0x140001ba0
mov	rax, qword ptr [rsi + 0x18]
jmp	0x140008aef
jmp	0x140008aef
xor	edx, edx
mov	qword ptr [rax], rdx
jmp	0x1400087af
jmp	0x1400087af
test	r9d, r9d
je	0x140005610
je	0x140005610
mov	qword ptr [rbx + 0x120], rdi
jmp	0x140005610
jmp	0x140005610
lea	rdx, [rip + 0xb38e3]
jmp	0x140006c18
jmp	0x140006c18
nop	dword ptr [rax + rax]
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, rcx
mov	rbx, r8
test	r8, r8
je	0x140008dc0
je	0x140008dc0
mov	eax, dword ptr [r8 + 4]
cmp	eax, 1
jg	0x140008dc0
jg	0x140008dc0
mov	edx, dword ptr [rcx + 0x134]
cmp	edx, 0x400
jg	0x140008dc0
jg	0x140008dc0
add	eax, 1
add	edx, 1
movq	xmm0, r8
mov	dword ptr [r8 + 4], eax
lea	rax, [rsp + 0x20]
movhps	xmm0, qword ptr [rcx + 0x148]
mov	dword ptr [rcx + 0x134], edx
mov	edx, 0x11
mov	qword ptr [rcx + 0x148], rax
movups	xmmword ptr [rsp + 0x20], xmm0
call	0x1400055c0
call	0x1400055c0
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rsi + 0x148], rax
sub	dword ptr [rbx + 4], 1
sub	dword ptr [rsi + 0x134], 1
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	dword ptr [rsi + 0x130], 1
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	eax, dword ptr [r8]
sub	eax, 3
mov	rbx, rcx
mov	rsi, r8
cmp	eax, 0x4e
ja	0x140008e10
ja	0x140008e10
lea	rdx, [rip + 0xb3ab2]
movsxd	rax, dword ptr [rdx + rax*4]
add	rax, rdx
jmp	rax
jmp	rax
nop	dword ptr [rax + rax]
mov	r8, rsi
mov	edx, 0x11
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
jmp	0x140008d40
jmp	0x140008d40
nop	word ptr [rax + rax]
lea	rsi, [rip + 0xb3a15]
mov	rax, qword ptr [rcx + 0x100]
lea	rbp, [rsi + 9]
jmp	0x140008e6e
jmp	0x140008e6e
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rbp, rsi
je	0x1400090e1
je	0x1400090e1
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x140008e48
jne	0x140008e48
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140008e4f
jmp	0x140008e4f
nop	dword ptr [rax]
lea	rsi, [rip + 0xb39a7]
mov	rax, qword ptr [rcx + 0x100]
lea	rbp, [rsi + 9]
jmp	0x140008ee6
jmp	0x140008ee6
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rbp, rsi
je	0x1400090e1
je	0x1400090e1
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x140008ec0
jne	0x140008ec0
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140008ec7
jmp	0x140008ec7
nop	dword ptr [rax]
lea	rsi, [rip + 0xb3939]
mov	rax, qword ptr [rcx + 0x100]
lea	rbp, [rsi + 6]
jmp	0x140008f5e
jmp	0x140008f5e
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rsi, rbp
je	0x1400090e1
je	0x1400090e1
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x140008f38
jne	0x140008f38
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140008f3f
jmp	0x140008f3f
nop	dword ptr [rax]
lea	rdi, [rip + 0xb38e4]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 6]
jmp	0x140008fd6
jmp	0x140008fd6
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140009458
je	0x140009458
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140008fb0
jne	0x140008fb0
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140008fb7
jmp	0x140008fb7
nop	dword ptr [rax]
mov	rdx, qword ptr [rcx + 0x100]
cmp	rdx, 0xff
je	0x1400095d8
je	0x1400095d8
lea	rax, [rdx + 1]
mov	qword ptr [rcx + 0x100], rax
mov	byte ptr [rcx + rdx], 0x20
mov	byte ptr [rcx + 0x108], 0x20
jmp	0x1400090bf
jmp	0x1400090bf
nop	
mov	rdx, qword ptr [rcx + 0x100]
cmp	rdx, 0xff
je	0x1400095a8
je	0x1400095a8
lea	rax, [rdx + 1]
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], 0x20
mov	byte ptr [rbx + 0x108], 0x20
jmp	0x1400090f7
jmp	0x1400090f7
nop	
mov	rax, qword ptr [rcx + 0x100]
cmp	rax, 0xff
je	0x140009578
je	0x140009578
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x20
mov	byte ptr [rbx + 0x108], 0x20
mov	r8, qword ptr [rsi + 0x18]
jmp	0x140008e13
jmp	0x140008e13
nop	word ptr [rax + rax]
mov	r8, qword ptr [r8 + 0x10]
jmp	0x140008e13
jmp	0x140008e13
nop	dword ptr [rax]
mov	rax, qword ptr [rcx + 0x100]
cmp	rax, 0xff
je	0x140009640
je	0x140009640
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x26
mov	byte ptr [rbx + 0x108], 0x26
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx + 0x100]
lea	rsi, [rip + 0xb378c]
lea	rbp, [rsi + 2]
jmp	0x14000912a
jmp	0x14000912a
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rbp, rsi
je	0x1400090e1
je	0x1400090e1
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x140009108
jne	0x140009108
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x14000910f
jmp	0x14000910f
nop	dword ptr [rax]
lea	rsi, [rip + 0xb371e]
mov	rax, qword ptr [rcx + 0x100]
lea	rbp, [rsi + 9]
jmp	0x1400091a6
jmp	0x1400091a6
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rbp, rsi
je	0x1400090e1
je	0x1400090e1
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x140009180
jne	0x140009180
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140009187
jmp	0x140009187
nop	dword ptr [rax]
lea	rsi, [rip + 0xb36b0]
mov	rax, qword ptr [rcx + 0x100]
lea	rbp, [rsi + 0xb]
jmp	0x14000921e
jmp	0x14000921e
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rsi, rbp
je	0x1400090e1
je	0x1400090e1
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x1400091f8
jne	0x1400091f8
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x1400091ff
jmp	0x1400091ff
nop	dword ptr [rax]
cmp	byte ptr [rcx + 0x108], 0x28
jne	0x1400094d8
jne	0x1400094d8
mov	r8, qword ptr [rsi + 0x10]
mov	edx, 0x11
mov	rcx, rbx
lea	rsi, [rip + 0xb362b]
lea	rbp, [rsi + 3]
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rbx + 0x100]
jmp	0x1400092b6
jmp	0x1400092b6
nop	word ptr [rax + rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rbp, rsi
je	0x1400090e1
je	0x1400090e1
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x140009290
jne	0x140009290
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140009297
jmp	0x140009297
nop	dword ptr [rax]
lea	rdi, [rip + 0xb35b0]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 0xa]
jmp	0x14000932e
jmp	0x14000932e
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rdi
je	0x140009490
je	0x140009490
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x140009308
jne	0x140009308
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x14000930f
jmp	0x14000930f
nop	dword ptr [rax]
lea	rsi, [rip + 0xb34f8]
mov	rax, qword ptr [rcx + 0x100]
lea	rbp, [rsi + 0x11]
jmp	0x1400093a6
jmp	0x1400093a6
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rsi, rbp
je	0x1400090e1
je	0x1400090e1
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x140009380
jne	0x140009380
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140009387
jmp	0x140009387
nop	dword ptr [rax]
lea	rdi, [rip + 0xb3492]
mov	rax, qword ptr [rcx + 0x100]
lea	r12, [rdi + 9]
jmp	0x14000941a
jmp	0x14000941a
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rdi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	rdi, r12
je	0x140009458
je	0x140009458
movzx	ebp, byte ptr [rdi]
cmp	rax, 0xff
jne	0x1400093f8
jne	0x1400093f8
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x1400093ff
jmp	0x1400093ff
nop	dword ptr [rax]
mov	r8, qword ptr [rsi + 0x18]
test	r8, r8
je	0x1400090e1
je	0x1400090e1
cmp	rax, 0xff
je	0x140009540
je	0x140009540
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x28
mov	byte ptr [rbx + 0x108], 0x28
jmp	0x140009494
jmp	0x140009494
nop	dword ptr [rax]
mov	r8, qword ptr [rsi + 0x10]
mov	edx, 0x11
mov	rcx, rbx
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x140009608
je	0x140009608
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x29
mov	byte ptr [rbx + 0x108], 0x29
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx + 0x100]
cmp	rax, 0xff
je	0x14000966f
je	0x14000966f
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x20
mov	byte ptr [rbx + 0x108], 0x20
jmp	0x140009265
jmp	0x140009265
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rcx + 0x100]
cmp	rax, 0xff
je	0x14000969b
je	0x14000969b
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x2a
mov	byte ptr [rbx + 0x108], 0x2a
jmp	0x1400090e1
jmp	0x1400090e1
nop	
mov	r8, qword ptr [rbx + 0x118]
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	r8, qword ptr [rsi + 0x18]
xor	eax, eax
mov	edx, 1
jmp	0x140009475
jmp	0x140009475
nop	dword ptr [rax + rax]
mov	edx, 0xff
mov	byte ptr [rcx + 0xff], 0
mov	r8, qword ptr [rcx + 0x118]
call	qword ptr [rcx + 0x110]
call	qword ptr [rcx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140009087
jmp	0x140009087
nop	dword ptr [rax]
mov	edx, 0xff
mov	byte ptr [rcx + 0xff], 0
mov	r8, qword ptr [rcx + 0x118]
call	qword ptr [rcx + 0x110]
call	qword ptr [rcx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140009058
jmp	0x140009058
nop	dword ptr [rax]
mov	byte ptr [rcx + 0xff], 0
mov	r8, qword ptr [rcx + 0x118]
mov	edx, 0xff
call	qword ptr [rcx + 0x110]
call	qword ptr [rcx + 0x110]
mov	byte ptr [rbx], 0x20
mov	eax, 1
add	dword ptr [rbx + 0x140], 1
jmp	0x1400090cb
jmp	0x1400090cb
nop	dword ptr [rax]
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x1400094b8
jmp	0x1400094b8
nop	word ptr [rax + rax]
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x1400090cf
jmp	0x1400090cf
mov	edx, 0xff
mov	byte ptr [rcx + 0xff], 0
mov	r8, qword ptr [rcx + 0x118]
call	qword ptr [rcx + 0x110]
call	qword ptr [rcx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x1400094ef
jmp	0x1400094ef
mov	edx, 0xff
mov	byte ptr [rcx + 0xff], 0
mov	r8, qword ptr [rcx + 0x118]
call	qword ptr [rcx + 0x110]
call	qword ptr [rcx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140009527
jmp	0x140009527
nop	word ptr [rax + rax]
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rdi, r8
mov	rsi, r9
test	r9, r9
je	0x140009860
je	0x140009860
movabs	r8, 0x8620e000000
mov	rax, r9
mov	r9d, 1
mov	edx, dword ptr [rax + 0x10]
test	edx, edx
jne	0x140009860
jne	0x140009860
mov	rdx, qword ptr [rax + 8]
mov	ecx, dword ptr [rdx]
cmp	ecx, 0x2b
ja	0x140009850
ja	0x140009850
mov	rdx, r9
shl	rdx, cl
test	rdx, r8
jne	0x1400098f0
jne	0x1400098f0
movabs	rcx, 0x1c00000000
test	rdx, rcx
je	0x140009850
je	0x140009850
movzx	edx, byte ptr [rbx + 0x108]
mov	eax, edx
and	eax, 0xfffffffd
cmp	al, 0x28
jne	0x1400098f7
jne	0x1400098f7
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x140009938
je	0x140009938
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
xor	r9d, r9d
mov	r8, rsi
mov	rcx, rbx
mov	byte ptr [rbx + rax], 0x28
mov	rbp, qword ptr [rbx + 0x128]
mov	edx, 0x11
mov	byte ptr [rbx + 0x108], 0x28
mov	qword ptr [rbx + 0x128], 0
call	0x140009a00
call	0x140009a00
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x1400099a0
je	0x1400099a0
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x29
mov	byte ptr [rbx + 0x108], 0x29
cmp	rdx, 0xff
je	0x140009899
je	0x140009899
lea	rax, [rdx + 1]
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], 0x28
mov	byte ptr [rbx + 0x108], 0x28
mov	r8, qword ptr [rdi + 0x18]
test	r8, r8
je	0x140009804
je	0x140009804
mov	edx, 0x11
mov	rcx, rbx
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x140009970
je	0x140009970
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	r9d, 1
mov	r8, rsi
mov	rcx, rbx
mov	byte ptr [rbx + rax], 0x29
mov	edx, 0x11
mov	byte ptr [rbx + 0x108], 0x29
call	0x140009a00
call	0x140009a00
mov	qword ptr [rbx + 0x128], rbp
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rax]
test	rax, rax
jne	0x1400096fd
jne	0x1400096fd
nop	dword ptr [rax]
mov	rbp, qword ptr [rbx + 0x128]
xor	r9d, r9d
mov	r8, rsi
mov	rcx, rbx
mov	qword ptr [rbx + 0x128], 0
mov	edx, 0x11
call	0x140009a00
call	0x140009a00
mov	rdx, qword ptr [rbx + 0x100]
cmp	rdx, 0xff
jne	0x1400097d1
jne	0x1400097d1
mov	r8, qword ptr [rbx + 0x118]
mov	byte ptr [rbx + 0xff], 0
mov	edx, 0xff
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
mov	byte ptr [rbx], 0x28
mov	byte ptr [rbx + 0x108], 0x28
mov	r8, qword ptr [rdi + 0x18]
add	dword ptr [rbx + 0x140], 1
mov	qword ptr [rbx + 0x100], 1
test	r8, r8
jne	0x1400097f0
jne	0x1400097f0
mov	eax, 1
jmp	0x140009810
jmp	0x140009810
nop	dword ptr [rax + rax]
movzx	edx, byte ptr [rbx + 0x108]
mov	rax, qword ptr [rbx + 0x100]
cmp	dl, 0x20
je	0x140009754
je	0x140009754
cmp	rax, 0xff
je	0x1400099d0
je	0x1400099d0
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x20
mov	rax, rdx
mov	byte ptr [rbx + 0x108], 0x20
cmp	rax, 0xff
jne	0x140009760
jne	0x140009760
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140009764
jmp	0x140009764
nop	word ptr [rax + rax]
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140009814
jmp	0x140009814
nop	
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
mov	byte ptr [rbx], 0x29
mov	edx, 1
add	dword ptr [rbx + 0x140], 1
jmp	0x1400097d1
jmp	0x1400097d1
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	edx, 0xff
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
mov	byte ptr [rbx], 0x20
mov	eax, 1
add	dword ptr [rbx + 0x140], 1
jmp	0x140009760
jmp	0x140009760
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
movabs	r12, 0x3400000000001f
mov	rsi, rcx
mov	rbx, r8
mov	ebp, r9d
test	r8, r8
jne	0x140009a50
jne	0x140009a50
jmp	0x140009ab8
jmp	0x140009ab8
nop	dword ptr [rax]
lea	edx, [rax - 0x1c]
cmp	edx, 0x35
ja	0x140009ac8
ja	0x140009ac8
bt	r12, rdx
jae	0x140009a6c
jae	0x140009a6c
nop	word ptr [rax + rax]
mov	rbx, qword ptr [rbx]
test	rbx, rbx
je	0x140009ab8
je	0x140009ab8
mov	edx, dword ptr [rsi + 0x130]
test	edx, edx
jne	0x140009ab8
jne	0x140009ab8
mov	eax, dword ptr [rbx + 0x10]
test	eax, eax
jne	0x140009a48
jne	0x140009a48
mov	r8, qword ptr [rbx + 8]
mov	eax, dword ptr [r8]
test	ebp, ebp
je	0x140009a30
je	0x140009a30
mov	rdx, qword ptr [rbx + 0x18]
mov	dword ptr [rbx + 0x10], 1
mov	rdi, qword ptr [rsi + 0x120]
mov	qword ptr [rsi + 0x120], rdx
cmp	eax, 0x29
je	0x140009b87
je	0x140009b87
cmp	eax, 0x2a
je	0x140009bab
je	0x140009bab
cmp	eax, 2
je	0x140009ae6
je	0x140009ae6
mov	edx, 0x11
mov	rcx, rsi
call	0x140008de0
call	0x140008de0
mov	rbx, qword ptr [rbx]
mov	qword ptr [rsi + 0x120], rdi
test	rbx, rbx
jne	0x140009a50
jne	0x140009a50
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	rdx, qword ptr [rbx + 0x18]
mov	dword ptr [rbx + 0x10], 1
mov	rdi, qword ptr [rsi + 0x120]
mov	qword ptr [rsi + 0x120], rdx
cmp	eax, 2
jne	0x140009a9c
jne	0x140009a9c
mov	rbp, qword ptr [rsi + 0x128]
mov	r8, qword ptr [r8 + 0x10]
mov	edx, 0x11
mov	rcx, rsi
mov	qword ptr [rsi + 0x128], 0
call	0x140008d40
call	0x140008d40
mov	qword ptr [rsi + 0x128], rbp
lea	rbp, [rip + 0xb291d]
mov	rax, qword ptr [rsi + 0x100]
lea	r13, [rbp + 2]
jmp	0x140009b4e
jmp	0x140009b4e
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rbp, 1
mov	qword ptr [rsi + 0x100], rax
mov	byte ptr [rsi + rdx], r12b
mov	byte ptr [rsi + 0x108], r12b
cmp	rbp, r13
je	0x140009bcf
je	0x140009bcf
movzx	r12d, byte ptr [rbp]
cmp	rax, 0xff
jne	0x140009b28
jne	0x140009b28
mov	edx, 0xff
mov	byte ptr [rsi + 0xff], 0
mov	r8, qword ptr [rsi + 0x118]
mov	rcx, rsi
call	qword ptr [rsi + 0x110]
call	qword ptr [rsi + 0x110]
add	dword ptr [rsi + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140009b2f
jmp	0x140009b2f
mov	r9, qword ptr [rbx]
mov	edx, 0x11
mov	rcx, rsi
call	0x1400096d0
call	0x1400096d0
mov	qword ptr [rsi + 0x120], rdi
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	r9, qword ptr [rbx]
mov	edx, 0x11
mov	rcx, rsi
call	0x140009da0
call	0x140009da0
mov	qword ptr [rsi + 0x120], rdi
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rdx, qword ptr [rbx + 8]
mov	rbp, qword ptr [rdx + 0x18]
mov	edx, dword ptr [rbp]
cmp	edx, 0x48
je	0x140009c2a
je	0x140009c2a
movabs	rcx, 0x3400000000001f
lea	eax, [rdx - 0x1c]
cmp	eax, 0x35
ja	0x140009c06
ja	0x140009c06
bt	rcx, rax
jae	0x140009c06
jae	0x140009c06
mov	rbp, qword ptr [rbp + 0x10]
mov	edx, dword ptr [rbp]
lea	eax, [rdx - 0x1c]
cmp	eax, 0x35
jbe	0x140009bf1
jbe	0x140009bf1
mov	r8, rbp
mov	edx, 0x11
mov	rcx, rsi
call	0x140008d40
call	0x140008d40
mov	qword ptr [rsi + 0x120], rdi
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
lea	rbx, [rip + 0xb2806]
lea	r13, [rbx + 0xd]
jmp	0x140009c59
jmp	0x140009c59
mov	rdx, rax
add	rax, 1
add	rbx, 1
mov	qword ptr [rsi + 0x100], rax
mov	byte ptr [rsi + rdx], r12b
mov	byte ptr [rsi + 0x108], r12b
cmp	rbx, r13
je	0x140009c91
je	0x140009c91
movzx	r12d, byte ptr [rbx]
cmp	rax, 0xff
jne	0x140009c37
jne	0x140009c37
mov	edx, 0xff
mov	byte ptr [rsi + 0xff], 0
mov	r8, qword ptr [rsi + 0x118]
mov	rcx, rsi
call	qword ptr [rsi + 0x110]
call	qword ptr [rsi + 0x110]
add	dword ptr [rsi + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140009c3e
jmp	0x140009c3e
mov	eax, dword ptr [rbp + 0x18]
lea	rbx, [rsp + 0x20]
lea	rdx, [rip + 0xb246c]
mov	rcx, rbx
lea	r8d, [rax + 1]
call	0x140001ad0
call	0x140001ad0
mov	rcx, rbx
call	0x140015a08
call	0x140015a08
mov	r13, rax
mov	rax, qword ptr [rsi + 0x100]
test	r13, r13
je	0x140009d22
je	0x140009d22
add	r13, rbx
jmp	0x140009cea
jmp	0x140009cea
mov	rdx, rax
add	rax, 1
add	rbx, 1
mov	qword ptr [rsi + 0x100], rax
mov	byte ptr [rsi + rdx], r12b
mov	byte ptr [rsi + 0x108], r12b
cmp	rbx, r13
je	0x140009d22
je	0x140009d22
movzx	r12d, byte ptr [rbx]
cmp	rax, 0xff
jne	0x140009cc8
jne	0x140009cc8
mov	edx, 0xff
mov	byte ptr [rsi + 0xff], 0
mov	r8, qword ptr [rsi + 0x118]
mov	rcx, rsi
call	qword ptr [rsi + 0x110]
call	qword ptr [rsi + 0x110]
add	dword ptr [rsi + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140009ccf
jmp	0x140009ccf
lea	rbx, [rip + 0xb271c]
lea	r13, [rbx + 3]
jmp	0x140009d51
jmp	0x140009d51
mov	rdx, rax
add	rax, 1
add	rbx, 1
mov	qword ptr [rsi + 0x100], rax
mov	byte ptr [rsi + rdx], r12b
mov	byte ptr [rsi + 0x108], r12b
cmp	rbx, r13
je	0x140009d89
je	0x140009d89
movzx	r12d, byte ptr [rbx]
cmp	rax, 0xff
jne	0x140009d2f
jne	0x140009d2f
mov	edx, 0xff
mov	byte ptr [rsi + 0xff], 0
mov	r8, qword ptr [rsi + 0x118]
mov	rcx, rsi
call	qword ptr [rsi + 0x110]
call	qword ptr [rsi + 0x110]
add	dword ptr [rsi + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140009d36
jmp	0x140009d36
mov	rbp, qword ptr [rbp + 0x10]
mov	edx, dword ptr [rbp]
jmp	0x140009bdf
jmp	0x140009bdf
nop	word ptr cs:[rax + rax]
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rbp, r8
mov	rdi, r9
mov	rax, r9
test	r9, r9
jne	0x140009dd4
jne	0x140009dd4
jmp	0x140009e8b
jmp	0x140009e8b
nop	word ptr [rax + rax]
mov	rax, qword ptr [rax]
test	rax, rax
je	0x140009e78
je	0x140009e78
mov	edx, dword ptr [rax + 0x10]
test	edx, edx
jne	0x140009dc8
jne	0x140009dc8
mov	rax, qword ptr [rax + 8]
cmp	dword ptr [rax], 0x2a
jne	0x140009f40
jne	0x140009f40
mov	edx, 0x11
xor	r9d, r9d
mov	r8, rdi
mov	rcx, rbx
call	0x140009a00
call	0x140009a00
mov	rdx, qword ptr [rbx + 0x100]
cmp	rdx, 0xff
je	0x140009ec1
je	0x140009ec1
lea	rax, [rdx + 1]
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], 0x5b
mov	byte ptr [rbx + 0x108], 0x5b
mov	r8, qword ptr [rbp + 0x10]
test	r8, r8
je	0x140009e42
je	0x140009e42
mov	edx, 0x11
mov	rcx, rbx
call	0x140008d40
call	0x140008d40
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x140009f10
je	0x140009f10
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x5d
mov	byte ptr [rbx + 0x108], 0x5d
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
xor	r9d, r9d
mov	r8, rdi
mov	edx, 0x11
mov	rcx, rbx
call	0x140009a00
call	0x140009a00
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x140009ffd
je	0x140009ffd
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x20
mov	byte ptr [rbx + 0x108], 0x20
cmp	rdx, 0xff
jne	0x140009e0f
jne	0x140009e0f
mov	r8, qword ptr [rbx + 0x118]
mov	byte ptr [rbx + 0xff], 0
mov	edx, 0xff
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
mov	byte ptr [rbx], 0x5b
mov	byte ptr [rbx + 0x108], 0x5b
mov	r8, qword ptr [rbp + 0x10]
add	dword ptr [rbx + 0x140], 1
mov	qword ptr [rbx + 0x100], 1
test	r8, r8
jne	0x140009e2e
jne	0x140009e2e
mov	eax, 1
jmp	0x140009e4e
jmp	0x140009e4e
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x140009e52
jmp	0x140009e52
nop	
lea	rsi, [rip + 0xb2aa9]
mov	rax, qword ptr [rbx + 0x100]
lea	r13, [rsi + 2]
jmp	0x140009f7a
jmp	0x140009f7a
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], r12b
mov	byte ptr [rbx + 0x108], r12b
cmp	r13, rsi
je	0x140009fb8
je	0x140009fb8
movzx	r12d, byte ptr [rsi]
cmp	rax, 0xff
jne	0x140009f58
jne	0x140009f58
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x140009f5f
jmp	0x140009f5f
nop	word ptr [rax + rax]
mov	edx, 0x11
xor	r9d, r9d
mov	r8, rdi
mov	rcx, rbx
call	0x140009a00
call	0x140009a00
mov	rdx, qword ptr [rbx + 0x100]
cmp	rdx, 0xff
je	0x14000a02d
je	0x14000a02d
lea	rax, [rdx + 1]
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], 0x29
mov	byte ptr [rbx + 0x108], 0x29
cmp	rax, 0xff
jne	0x140009e9e
jne	0x140009e9e
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
mov	byte ptr [rbx], 0x20
mov	edx, 1
add	dword ptr [rbx + 0x140], 1
jmp	0x140009e0f
jmp	0x140009e0f
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
mov	eax, 0x2029
mov	edx, 2
add	dword ptr [rbx + 0x140], 1
mov	word ptr [rbx], ax
jmp	0x140009e0f
jmp	0x140009e0f
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
cmp	dword ptr [r8], 0x32
mov	rbx, rcx
je	0x14000a098
je	0x14000a098
mov	edx, 0x11
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x140008d40
jmp	0x140008d40
nop	dword ptr [rax + rax]
mov	rax, qword ptr [r8 + 0x10]
movsxd	rbp, dword ptr [rax + 0x10]
mov	rsi, qword ptr [rax + 8]
test	rbp, rbp
je	0x14000a118
je	0x14000a118
mov	rax, qword ptr [rcx + 0x100]
add	rbp, rsi
jmp	0x14000a0da
jmp	0x14000a0da
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	rsi, rbp
je	0x14000a118
je	0x14000a118
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x14000a0b8
jne	0x14000a0b8
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x14000a0bf
jmp	0x14000a0bf
nop	dword ptr [rax]
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x228
lea	rbp, [rsp + 0x80]
cmp	byte ptr [rcx], 0x5f
mov	qword ptr [rbp + 0x200], r8
mov	rbx, rcx
mov	r15, rdx
je	0x14000a543
je	0x14000a543
mov	r8d, 8
lea	rdx, [rip + 0xb2885]
mov	rcx, rbx
call	0x140015a10
call	0x140015a10
test	eax, eax
je	0x14000a4bc
je	0x14000a4bc
xor	r11d, r11d
xor	r13d, r13d
shl	r11d, 0x1f
lea	rax, [rbx + 1]
lea	edi, [r13 - 2]
mov	dword ptr [rbp + 0x14], 1
sar	r11d, 0x1f
mov	qword ptr [rbp - 0x60], rax
lea	rax, [rbp - 0x40]
add	r11d, 0x46
mov	qword ptr [rbp - 0x48], rax
mov	qword ptr [rbp + 0x1f8], r15
mov	dword ptr [rbp - 0x54], r11d
jmp	0x14000a27b
jmp	0x14000a27b
nop	dword ptr [rax + rax]
cmp	edi, 1
ja	0x14000a476
ja	0x14000a476
lea	r12, [rbx + 0xb]
cmp	byte ptr [rbx + 0xb], 0x5f
mov	qword ptr [rbp - 0x28], r12
jne	0x14000a1e1
jne	0x14000a1e1
cmp	byte ptr [rbx + 0xc], 0x5a
je	0x14000a48e
je	0x14000a48e
mov	rcx, r12
mov	qword ptr [rbp - 0x50], r8
call	0x140015a08
call	0x140015a08
test	r15d, r15d
je	0x14000a537
je	0x14000a537
test	eax, eax
mov	dword ptr [rbp - 0x18], 1
mov	r8, qword ptr [rbp - 0x50]
mov	qword ptr [r14*8 + 4], 0
jle	0x14000a537
jle	0x14000a537
mov	dword ptr [r14*8], 0
mov	qword ptr [r14*8 + 0x10], r12
mov	dword ptr [r14*8 + 0x18], eax
mov	r14, qword ptr [rbp - 0x48]
mov	edx, dword ptr [rbp - 0x54]
xor	r9d, r9d
mov	rcx, r14
call	0x1400014c0
call	0x1400014c0
mov	rcx, r12
mov	r15, rax
call	0x140015a08
call	0x140015a08
lea	r11, [r12 + rax]
mov	qword ptr [rbp - 0x28], r11
movzx	eax, byte ptr [r11]
test	al, al
jne	0x14000a267
jne	0x14000a267
test	r15, r15
jne	0x14000a578
jne	0x14000a578
cmp	dword ptr [rbp + 0x14], -1
jne	0x14000a571
jne	0x14000a571
mov	dword ptr [rbp + 0x14], 0
mov	rsp, rsi
mov	rcx, rbx
call	0x140015a08
call	0x140015a08
mov	qword ptr [rbp - 0x40], rbx
mov	rcx, rax
lea	rax, [rbx + rax]
mov	dword ptr [rbp - 0x30], 0x11
lea	r15d, [rcx + rcx]
mov	qword ptr [rbp - 0x38], rax
mov	qword ptr [rbp - 0x28], rbx
mov	dword ptr [rbp - 0x14], r15d
mov	dword ptr [rbp - 0x18], 0
mov	dword ptr [rbp - 4], ecx
mov	dword ptr [rbp - 8], 0
mov	qword ptr [rbp], 0
mov	qword ptr [rbp + 8], 0
mov	dword ptr [rbp + 0x10], 0
mov	dword ptr [rbp + 0x18], 0
cmp	r15d, 0x800
ja	0x14000a55b
ja	0x14000a55b
mov	eax, r15d
mov	rsi, rsp
shl	rax, 5
call	0x14000c150
call	0x14000c150
sub	rsp, rax
movsxd	rcx, ecx
lea	r8, [rsp + 0x27]
lea	rax, [rcx*8 + 0xf]
mov	r14, r8
and	rax, 0xfffffffffffffff0
and	r8, 0xfffffffffffffff8
shr	r14, 3
call	0x14000c150
call	0x14000c150
sub	rsp, rax
mov	qword ptr [rbp - 0x20], r8
lea	rax, [rsp + 0x20]
mov	qword ptr [rbp - 0x10], rax
cmp	r13d, 1
jne	0x14000a1c0
jne	0x14000a1c0
cmp	byte ptr [rbx], 0x5f
jne	0x14000a267
jne	0x14000a267
mov	rax, qword ptr [rbp - 0x60]
cmp	byte ptr [rbx + 1], 0x5a
mov	qword ptr [rbp - 0x28], rax
jne	0x14000a267
jne	0x14000a267
lea	rax, [rbx + 2]
lea	r14, [rbp - 0x40]
mov	qword ptr [rbp - 0x28], rax
movzx	eax, byte ptr [rbx + 2]
cmp	al, 0x47
je	0x14000a527
je	0x14000a527
cmp	al, 0x54
je	0x14000a527
je	0x14000a527
mov	edx, 1
mov	rcx, r14
call	0x140005430
call	0x140005430
mov	r15, rax
mov	rdx, qword ptr [rbp - 0x28]
movzx	eax, byte ptr [rdx]
test	byte ptr [rbp - 0x30], 1
je	0x14000a25a
je	0x14000a25a
cmp	al, 0x2e
jne	0x14000a25a
jne	0x14000a25a
nop	dword ptr [rax]
movzx	eax, byte ptr [rdx + 1]
lea	ecx, [rax - 0x61]
cmp	cl, 0x19
jbe	0x14000a3b3
jbe	0x14000a3b3
cmp	al, 0x5f
je	0x14000a3b3
je	0x14000a3b3
sub	eax, 0x30
cmp	al, 9
ja	0x14000a6c6
ja	0x14000a6c6
movzx	eax, byte ptr [rdx + 2]
lea	r11, [rdx + 2]
lea	ecx, [rax - 0x30]
lea	r8d, [rax - 0x61]
cmp	cl, 9
setbe	cl
cmp	r8b, 0x19
setbe	r8b
or	cl, r8b
je	0x14000a3fb
je	0x14000a3fb
nop	dword ptr [rax]
movzx	eax, byte ptr [r11 + 1]
add	r11, 1
lea	ecx, [rax - 0x61]
lea	r8d, [rax - 0x30]
cmp	cl, 0x19
setbe	cl
cmp	r8b, 9
setbe	r8b
or	cl, r8b
jne	0x14000a3d8
jne	0x14000a3d8
cmp	al, 0x5f
je	0x14000a3d8
je	0x14000a3d8
nop	
cmp	al, 0x2e
jne	0x14000a43d
jne	0x14000a43d
movzx	eax, byte ptr [r11 + 1]
sub	eax, 0x30
cmp	al, 9
ja	0x14000a43d
ja	0x14000a43d
movzx	eax, byte ptr [r11 + 2]
lea	r8, [r11 + 2]
mov	r11, r8
lea	ecx, [rax - 0x30]
cmp	cl, 9
ja	0x14000a400
ja	0x14000a400
nop	dword ptr [rax]
movzx	eax, byte ptr [r11 + 1]
add	r11, 1
lea	ecx, [rax - 0x30]
cmp	cl, 9
jbe	0x14000a428
jbe	0x14000a428
cmp	al, 0x2e
je	0x14000a404
je	0x14000a404
mov	r8d, r11d
mov	rcx, r14
mov	qword ptr [rbp - 0x28], r11
sub	r8d, edx
call	0x1400015d0
call	0x1400015d0
mov	r8, r15
mov	edx, 0x4f
mov	r9, rax
call	0x1400014c0
call	0x1400014c0
mov	r15, rax
movzx	eax, byte ptr [r11]
cmp	al, 0x2e
jne	0x14000a25a
jne	0x14000a25a
mov	rdx, r11
jmp	0x14000a398
jmp	0x14000a398
mov	rcx, qword ptr [rbp - 0x48]
call	0x1400024c0
call	0x1400024c0
mov	r15, rax
mov	rax, qword ptr [rbp - 0x28]
movzx	eax, byte ptr [rax]
jmp	0x14000a25a
jmp	0x14000a25a
lea	rax, [rbx + 0xd]
lea	r14, [rbp - 0x40]
mov	qword ptr [rbp - 0x28], rax
movzx	eax, byte ptr [rbx + 0xd]
cmp	al, 0x47
je	0x14000a513
je	0x14000a513
cmp	al, 0x54
je	0x14000a513
je	0x14000a513
xor	edx, edx
mov	rcx, r14
call	0x140005430
call	0x140005430
mov	r12, qword ptr [rbp - 0x28]
mov	r8, rax
jmp	0x14000a235
jmp	0x14000a235
movzx	eax, byte ptr [rbx + 8]
sub	eax, 0x24
cmp	al, 0x3b
ja	0x14000a17e
ja	0x14000a17e
movabs	rdx, 0x800000000000401
bt	rdx, rax
setb	r11b
xor	r13d, r13d
test	r11b, r11b
je	0x14000a184
je	0x14000a184
movzx	eax, byte ptr [rbx + 9]
cmp	al, 0x44
sete	r11b
cmp	al, 0x49
sete	dl
or	r11b, dl
je	0x14000a184
je	0x14000a184
cmp	byte ptr [rbx + 0xa], 0x5f
je	0x14000a6d2
je	0x14000a6d2
xor	r11d, r11d
jmp	0x14000a184
jmp	0x14000a184
mov	rcx, r14
call	0x1400049a0
call	0x1400049a0
mov	r12, qword ptr [rbp - 0x28]
mov	r8, rax
jmp	0x14000a235
jmp	0x14000a235
mov	rcx, r14
call	0x1400049a0
call	0x1400049a0
mov	r15, rax
jmp	0x14000a37c
jmp	0x14000a37c
xor	r8d, r8d
lea	r14, [rbp - 0x40]
jmp	0x14000a235
jmp	0x14000a235
cmp	byte ptr [rcx + 1], 0x5a
jne	0x14000a161
jne	0x14000a161
xor	r11d, r11d
mov	r13d, 1
jmp	0x14000a184
jmp	0x14000a184
xor	eax, eax
lea	rsp, [rbp + 0x1a8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
xor	eax, eax
mov	rsp, rsi
jmp	0x14000a55d
jmp	0x14000a55d
mov	rax, qword ptr [rbp + 0x200]
mov	r14, r15
lea	rbx, [rbp + 0x20]
pxor	xmm0, xmm0
mov	r15, qword ptr [rbp + 0x1f8]
mov	rdx, r14
mov	rcx, rbx
mov	qword ptr [rbp + 0x120], 0
mov	byte ptr [rbp + 0x128], 0
mov	qword ptr [rbp + 0x140], 0
mov	qword ptr [rbp + 0x148], 0
mov	dword ptr [rbp + 0x160], 0
mov	qword ptr [rbp + 0x130], r15
mov	qword ptr [rbp + 0x138], rax
mov	qword ptr [rbp + 0x168], 0
mov	qword ptr [rbp + 0x178], 0
mov	qword ptr [rbp + 0x188], 0
movups	xmmword ptr [rbp + 0x150], xmm0
call	0x140001850
call	0x140001850
cmp	dword ptr [rbp + 0x154], 0x7ff
jg	0x14000a61a
jg	0x14000a61a
mov	dword ptr [rbp + 0x154], 0
movsxd	rax, dword ptr [rbp + 0x17c]
mov	edx, dword ptr [rbp + 0x18c]
mov	ecx, 1
mov	rdi, rsp
mov	qword ptr [rbp + 0x190], 0
imul	edx, eax
test	eax, eax
cmovle	rax, rcx
shl	rax, 4
mov	dword ptr [rbp + 0x18c], edx
call	0x14000c150
call	0x14000c150
sub	rsp, rax
test	edx, edx
mov	eax, 1
cmovg	eax, edx
lea	rcx, [rsp + 0x20]
cdqe	
shl	rax, 4
call	0x14000c150
call	0x14000c150
mov	edx, 0x11
sub	rsp, rax
mov	qword ptr [rbp + 0x170], rcx
mov	r8, r14
mov	rcx, rbx
lea	rax, [rsp + 0x20]
mov	qword ptr [rbp + 0x180], rax
call	0x140008d40
call	0x140008d40
mov	rdx, qword ptr [rbp + 0x120]
mov	rsp, rdi
mov	r8, qword ptr [rbp + 0x138]
mov	rcx, rbx
mov	byte ptr [rbp + rdx + 0x20], 0
call	qword ptr [rbp + 0x130]
call	qword ptr [rbp + 0x130]
mov	edx, dword ptr [rbp + 0x150]
xor	eax, eax
test	edx, edx
sete	al
jmp	0x14000a573
jmp	0x14000a573
mov	rax, qword ptr [rbp - 0x28]
movzx	eax, byte ptr [rax]
jmp	0x14000a25a
jmp	0x14000a25a
xor	r13d, r13d
cmp	al, 0x49
setne	r13b
add	r13d, 2
cmp	al, 0x49
mov	eax, 0
cmovne	r11d, eax
jmp	0x14000a184
jmp	0x14000a184
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	eax, dword ptr [r8]
mov	rbx, rcx
mov	rsi, r8
cmp	eax, 0x31
ja	0x14000a748
ja	0x14000a748
movabs	rdx, 0x2000000000043
bt	rdx, rax
jae	0x14000a748
jae	0x14000a748
mov	eax, dword ptr [r8 + 4]
cmp	eax, 1
jg	0x14000a731
jg	0x14000a731
mov	ecx, dword ptr [rcx + 0x134]
mov	edi, 1
cmp	ecx, 0x400
jle	0x14000a790
jle	0x14000a790
mov	dword ptr [rbx + 0x130], 1
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x14000a830
je	0x14000a830
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x28
mov	byte ptr [rbx + 0x108], 0x28
mov	eax, dword ptr [rsi + 4]
cmp	eax, 1
jg	0x14000a7f8
jg	0x14000a7f8
mov	ecx, dword ptr [rbx + 0x134]
cmp	ecx, 0x400
jg	0x14000a7f8
jg	0x14000a7f8
xor	edi, edi
nop	dword ptr [rax]
add	eax, 1
add	ecx, 1
movq	xmm0, rsi
mov	r8, rsi
mov	dword ptr [rsi + 4], eax
lea	rax, [rsp + 0x20]
movhps	xmm0, qword ptr [rbx + 0x148]
mov	edx, 0x11
mov	dword ptr [rbx + 0x134], ecx
mov	rcx, rbx
mov	qword ptr [rbx + 0x148], rax
movups	xmmword ptr [rsp + 0x20], xmm0
call	0x1400055c0
call	0x1400055c0
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x148], rax
sub	dword ptr [rsi + 4], 1
sub	dword ptr [rbx + 0x134], 1
test	edi, edi
jne	0x14000a73b
jne	0x14000a73b
mov	rdx, qword ptr [rbx + 0x100]
jmp	0x14000a802
jmp	0x14000a802
nop	dword ptr [rax]
mov	dword ptr [rbx + 0x130], 1
cmp	rdx, 0xff
je	0x14000a860
je	0x14000a860
lea	rax, [rdx + 1]
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], 0x29
mov	byte ptr [rbx + 0x108], 0x29
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x14000a75f
jmp	0x14000a75f
nop	
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x14000a80f
jmp	0x14000a80f
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [r8 + 0x10]
mov	rax, qword ptr [rax + 0x10]
mov	rdx, qword ptr [rax]
xor	eax, eax
mov	rbx, rcx
cmp	byte ptr [rdx], 0x66
jne	0x14000aa14
jne	0x14000aa14
mov	rax, qword ptr [r8 + 0x18]
xor	r13d, r13d
mov	r14, qword ptr [rax + 0x18]
mov	r12, qword ptr [rax + 0x10]
cmp	dword ptr [r14], 0x3c
je	0x14000aaf0
je	0x14000aaf0
mov	edi, dword ptr [rbx + 0x13c]
mov	dword ptr [rbx + 0x13c], 0xffffffff
movzx	eax, byte ptr [rdx + 1]
cmp	al, 0x6c
je	0x14000ab00
je	0x14000ab00
jg	0x14000aa28
jg	0x14000aa28
cmp	al, 0x4c
je	0x14000a8fe
je	0x14000a8fe
cmp	al, 0x52
jne	0x14000aa09
jne	0x14000aa09
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x14000abf0
je	0x14000abf0
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	r8, r14
mov	edx, 0x11
mov	rcx, rbx
mov	byte ptr [rbx + rax], 0x28
lea	rsi, [rip + 0xb1d09]
mov	byte ptr [rbx + 0x108], 0x28
lea	r14, [rsi + 3]
call	0x14000a6f0
call	0x14000a6f0
mov	r8, r12
mov	edx, 0x11
mov	rcx, rbx
call	0x14000a070
call	0x14000a070
mov	rax, qword ptr [rbx + 0x100]
jmp	0x14000a982
jmp	0x14000a982
nop	dword ptr [rax + rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r14, rsi
je	0x14000a9c0
je	0x14000a9c0
movzx	ebp, byte ptr [rsi]
cmp	rax, 0xff
jne	0x14000a960
jne	0x14000a960
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x14000a967
jmp	0x14000a967
nop	dword ptr [rax]
mov	r8, r12
mov	edx, 0x11
mov	rcx, rbx
call	0x14000a070
call	0x14000a070
mov	r8, r13
mov	edx, 0x11
mov	rcx, rbx
call	0x14000a6f0
call	0x14000a6f0
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x14000ab90
je	0x14000ab90
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x29
mov	byte ptr [rbx + 0x108], 0x29
mov	dword ptr [rbx + 0x13c], edi
mov	eax, 1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax + rax]
cmp	al, 0x72
jne	0x14000aa09
jne	0x14000aa09
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x14000abc0
je	0x14000abc0
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	r8, r14
mov	edx, 0x11
mov	rcx, rbx
mov	byte ptr [rbx + rax], 0x28
lea	rsi, [rip + 0xb1fa1]
mov	byte ptr [rbx + 0x108], 0x28
call	0x14000a6f0
call	0x14000a6f0
mov	r8, r12
mov	edx, 0x11
mov	rcx, rbx
call	0x14000a070
call	0x14000a070
lea	r12, [rsi + 4]
mov	rax, qword ptr [rbx + 0x100]
jmp	0x14000aab6
jmp	0x14000aab6
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r12, rsi
je	0x14000aa09
je	0x14000aa09
movzx	ebp, byte ptr [rsi]
cmp	rax, 0xff
jne	0x14000aa90
jne	0x14000aa90
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x14000aa97
jmp	0x14000aa97
nop	dword ptr [rax]
mov	r13, qword ptr [r14 + 0x18]
mov	r14, qword ptr [r14 + 0x10]
jmp	0x14000a8d0
jmp	0x14000a8d0
nop	dword ptr [rax]
lea	rsi, [rip + 0xb1ef5]
mov	rax, qword ptr [rbx + 0x100]
lea	r13, [rsi + 4]
jmp	0x14000ab3a
jmp	0x14000ab3a
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], bpl
mov	byte ptr [rbx + 0x108], bpl
cmp	r13, rsi
je	0x14000ab78
je	0x14000ab78
movzx	ebp, byte ptr [rsi]
cmp	rax, 0xff
jne	0x14000ab18
jne	0x14000ab18
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x14000ab1f
jmp	0x14000ab1f
nop	dword ptr [rax]
mov	r8, r12
mov	edx, 0x11
mov	rcx, rbx
call	0x14000a070
call	0x14000a070
mov	r8, r14
jmp	0x14000a9d3
jmp	0x14000a9d3
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x14000a9f7
jmp	0x14000a9f7
nop	
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x14000aa43
jmp	0x14000aa43
nop	
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x14000a915
jmp	0x14000a915
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
mov	edx, dword ptr [r8]
and	edx, 0xfffffffd
mov	rbx, rcx
cmp	edx, 0x38
jne	0x14000ad15
jne	0x14000ad15
mov	rcx, qword ptr [r8 + 0x10]
call	0x140001b00
call	0x140001b00
test	eax, eax
je	0x14000ad15
je	0x14000ad15
mov	rdx, qword ptr [rcx + 0x10]
mov	rax, qword ptr [r8 + 0x18]
mov	r12, qword ptr [rdx]
mov	rsi, qword ptr [rax + 0x10]
mov	rbp, qword ptr [rax + 0x18]
mov	rax, qword ptr [rbx + 0x100]
cmp	byte ptr [r12 + 1], 0x69
je	0x14000ad28
je	0x14000ad28
cmp	rax, 0xff
je	0x14000ae30
je	0x14000ae30
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x5b
mov	eax, 0x5b
mov	byte ptr [rbx + 0x108], al
mov	r8, rsi
mov	edx, 0x11
mov	rcx, rbx
call	0x140008d40
call	0x140008d40
movzx	eax, byte ptr [r12 + 1]
cmp	al, 0x58
je	0x14000ad90
je	0x14000ad90
cmp	al, 0x69
je	0x14000ace8
je	0x14000ace8
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x14000ae90
je	0x14000ae90
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x5d
mov	byte ptr [rbx + 0x108], 0x5d
mov	eax, dword ptr [rbp]
and	eax, 0xfffffffd
cmp	eax, 0x38
jne	0x14000ad50
jne	0x14000ad50
mov	rcx, qword ptr [rbp + 0x10]
call	0x140001b00
call	0x140001b00
test	eax, eax
je	0x14000ad50
je	0x14000ad50
mov	r8, rbp
mov	edx, 0x11
mov	rcx, rbx
call	0x140008d40
call	0x140008d40
mov	eax, 1
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr [rax + rax]
cmp	rax, 0xff
je	0x14000aec0
je	0x14000aec0
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	byte ptr [rbx + rax], 0x2e
mov	eax, 0x2e
jmp	0x14000ac97
jmp	0x14000ac97
nop	dword ptr [rax]
mov	rax, qword ptr [rbx + 0x100]
cmp	rax, 0xff
je	0x14000ae60
je	0x14000ae60
lea	rdx, [rax + 1]
mov	qword ptr [rbx + 0x100], rdx
mov	r8, rbp
mov	rcx, rbx
mov	edx, 0x11
mov	byte ptr [rbx + rax], 0x3d
mov	byte ptr [rbx + 0x108], 0x3d
call	0x14000a6f0
call	0x14000a6f0
jmp	0x14000ad10
jmp	0x14000ad10
nop	dword ptr [rax + rax]
lea	rsi, [rip + 0xb1c6f]
mov	rax, qword ptr [rbx + 0x100]
lea	r13, [rsi + 5]
jmp	0x14000adca
jmp	0x14000adca
nop	dword ptr [rax]
mov	rdx, rax
add	rax, 1
add	rsi, 1
mov	qword ptr [rbx + 0x100], rax
mov	byte ptr [rbx + rdx], dil
mov	byte ptr [rbx + 0x108], dil
cmp	r13, rsi
je	0x14000ae08
je	0x14000ae08
movzx	edi, byte ptr [rsi]
cmp	rax, 0xff
jne	0x14000ada8
jne	0x14000ada8
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	eax, 1
xor	edx, edx
jmp	0x14000adaf
jmp	0x14000adaf
nop	dword ptr [rax]
mov	r8, qword ptr [rbp + 0x10]
mov	edx, 0x11
mov	rcx, rbx
call	0x140008d40
call	0x140008d40
mov	rbp, qword ptr [rbp + 0x18]
movzx	eax, byte ptr [r12 + 1]
jmp	0x14000acbb
jmp	0x14000acbb
nop	dword ptr [rax + rax]
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x14000ac87
jmp	0x14000ac87
nop	
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x14000ad67
jmp	0x14000ad67
nop	
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x14000acd6
jmp	0x14000acd6
nop	
mov	edx, 0xff
mov	byte ptr [rbx + 0xff], 0
mov	r8, qword ptr [rbx + 0x118]
mov	rcx, rbx
call	qword ptr [rbx + 0x110]
call	qword ptr [rbx + 0x110]
add	dword ptr [rbx + 0x140], 1
mov	edx, 1
xor	eax, eax
jmp	0x14000ad38
jmp	0x14000ad38
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
mov	rbx, rdx
mov	rbp, r8
mov	rsi, r9
test	rcx, rcx
je	0x14000aff0
je	0x14000aff0
test	rdx, rdx
je	0x14000af1a
je	0x14000af1a
test	r8, r8
je	0x14000aff0
je	0x14000aff0
pxor	xmm0, xmm0
lea	r8, [rsp + 0x20]
lea	rdx, [rip - 0x952a]
mov	qword ptr [rsp + 0x20], 0
mov	dword ptr [rsp + 0x38], 0
movups	xmmword ptr [rsp + 0x28], xmm0
call	0x14000a130
call	0x14000a130
test	eax, eax
je	0x14000b020
je	0x14000b020
mov	eax, dword ptr [rsp + 0x38]
mov	rdi, qword ptr [rsp + 0x20]
test	eax, eax
je	0x14000afc0
je	0x14000afc0
mov	r12d, 1
test	rdi, rdi
je	0x14000b039
je	0x14000b039
test	rbx, rbx
je	0x14000b010
je	0x14000b010
mov	rcx, rdi
call	0x140015a08
call	0x140015a08
cmp	rax, qword ptr [rbp]
jae	0x14000b000
jae	0x14000b000
mov	rdx, rdi
lea	r8, [rax + 1]
mov	rcx, rbx
call	0x140015998
call	0x140015998
mov	rcx, rdi
mov	rdi, rbx
call	0x140015940
call	0x140015940
test	rsi, rsi
je	0x14000afa9
je	0x14000afa9
mov	dword ptr [rsi], 0
mov	rax, rdi
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
mov	r12, qword ptr [rsp + 0x30]
test	rdi, rdi
jne	0x14000af69
jne	0x14000af69
test	rsi, rsi
je	0x14000afdb
je	0x14000afdb
sub	r12, 1
jne	0x14000b02f
jne	0x14000b02f
mov	dword ptr [rsi], 0xffffffff
xor	edi, edi
mov	rax, rdi
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax + rax]
test	rsi, rsi
je	0x14000afdb
je	0x14000afdb
mov	dword ptr [rsi], 0xfffffffd
xor	edi, edi
jmp	0x14000afdd
jmp	0x14000afdd
nop	
mov	rcx, rbx
call	0x140015940
call	0x140015940
mov	qword ptr [rbp], r12
jmp	0x14000af9e
jmp	0x14000af9e
nop	
test	rbp, rbp
jne	0x14000b008
jne	0x14000b008
jmp	0x14000af9e
jmp	0x14000af9e
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x20]
call	0x140015940
call	0x140015940
test	rsi, rsi
je	0x14000afdb
je	0x14000afdb
mov	dword ptr [rsi], 0xfffffffe
xor	edi, edi
jmp	0x14000afdd
jmp	0x14000afdd
test	rsi, rsi
jne	0x14000afd5
jne	0x14000afd5
xor	edi, edi
jmp	0x14000afdd
jmp	0x14000afdd
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
sub	rsp, 0x28
test	rcx, rcx
je	0x14000b070
je	0x14000b070
test	rdx, rdx
je	0x14000b070
je	0x14000b070
call	0x14000a130
call	0x14000a130
cmp	eax, 1
sbb	eax, eax
and	eax, 0xfffffffe
add	rsp, 0x28
ret	
ret	
mov	eax, 0xfffffffd
jmp	0x14000b06b
jmp	0x14000b06b
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
mov	rbp, rsp
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0xa9f71]
mov	rax, qword ptr [rax]
test	rax, rax
je	0x14000b0bd
je	0x14000b0bd
nop	word ptr [rax + rax]
call	rax
call	rax
mov	rax, qword ptr [rip + 0xa9f57]
lea	rdx, [rax + 8]
mov	rax, qword ptr [rax + 8]
mov	qword ptr [rip + 0xa9f48], rdx
test	rax, rax
jne	0x14000b0a0
jne	0x14000b0a0
add	rsp, 0x20
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	
push	rbp
push	rsi
push	rbx
sub	rsp, 0x20
lea	rbp, [rsp + 0x20]
mov	rdx, qword ptr [rip + 0xb40dd]
mov	rax, qword ptr [rdx]
mov	ecx, eax
cmp	eax, -1
je	0x14000b130
je	0x14000b130
test	ecx, ecx
je	0x14000b113
je	0x14000b113
mov	eax, ecx
sub	ecx, 1
lea	rbx, [rdx + rax*8]
sub	rax, rcx
lea	rsi, [rdx + rax*8 - 8]
nop	word ptr [rax + rax]
call	qword ptr [rbx]
call	qword ptr [rbx]
sub	rbx, 8
cmp	rbx, rsi
jne	0x14000b108
jne	0x14000b108
lea	rcx, [rip - 0x9a]
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rbp
jmp	0x140001440
jmp	0x140001440
nop	word ptr cs:[rax + rax]
xor	eax, eax
nop	word ptr [rax + rax]
lea	r8d, [rax + 1]
mov	ecx, eax
cmp	qword ptr [rdx + r8*8], 0
mov	rax, r8
jne	0x14000b138
jne	0x14000b138
jmp	0x14000b0ed
jmp	0x14000b0ed
nop	word ptr [rax + rax]
mov	eax, dword ptr [rip + 0xd9eda]
test	eax, eax
je	0x14000b160
je	0x14000b160
ret	
ret	
nop	dword ptr [rax + rax]
mov	dword ptr [rip + 0xd9ec6], 1
jmp	0x14000b0d0
jmp	0x14000b0d0
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
mov	rbp, rsp
sub	rsp, 0x20
cmp	edx, 3
je	0x14000b1a0
je	0x14000b1a0
test	edx, edx
je	0x14000b1a0
je	0x14000b1a0
mov	eax, 1
add	rsp, 0x20
pop	rbp
ret	
ret	
nop	dword ptr [rax]
call	0x14000bc50
call	0x14000bc50
mov	eax, 1
add	rsp, 0x20
pop	rbp
ret	
ret	
push	rbp
push	rsi
push	rbx
sub	rsp, 0x20
lea	rbp, [rsp + 0x20]
mov	rax, qword ptr [rip + 0xb346d]
cmp	dword ptr [rax], 2
je	0x14000b1ce
je	0x14000b1ce
mov	dword ptr [rax], 2
cmp	edx, 2
je	0x14000b1e8
je	0x14000b1e8
cmp	edx, 1
je	0x14000b220
je	0x14000b220
mov	eax, 1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
lea	rbx, [rip + 0xdbe69]
lea	rsi, [rip + 0xdbe62]
cmp	rbx, rsi
je	0x14000b1d8
je	0x14000b1d8
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
test	rax, rax
je	0x14000b20a
je	0x14000b20a
call	rax
call	rax
add	rbx, 8
cmp	rbx, rsi
jne	0x14000b200
jne	0x14000b200
mov	eax, 1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rbp
ret	
ret	
call	0x14000bc50
call	0x14000bc50
mov	eax, 1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rsi
push	rbx
sub	rsp, 0x70
lea	rbp, [rsp + 0x40]
movups	xmmword ptr [rbp], xmm6
movups	xmmword ptr [rbp + 0x10], xmm7
movups	xmmword ptr [rbp + 0x20], xmm8
cmp	dword ptr [rcx], 6
ja	0x14000b33c
ja	0x14000b33c
mov	eax, dword ptr [rcx]
lea	rdx, [rip + 0xb2ae9]
movsxd	rax, dword ptr [rdx + rax*4]
add	rax, rdx
jmp	rax
jmp	rax
nop	dword ptr [rax]
lea	rbx, [rip + 0xb29d0]
movsd	xmm8, qword ptr [rcx + 0x20]
movsd	xmm7, qword ptr [rcx + 0x18]
movsd	xmm6, qword ptr [rcx + 0x10]
mov	rsi, qword ptr [rcx + 8]
mov	ecx, 2
call	0x1400152f0
call	0x1400152f0
movsd	qword ptr [rsp + 0x30], xmm8
mov	r8, rbx
lea	rdx, [rip + 0xb2a7a]
movsd	qword ptr [rsp + 0x28], xmm7
mov	rcx, rax
mov	r9, rsi
movsd	qword ptr [rsp + 0x20], xmm6
call	0x140015920
call	0x140015920
nop	
movups	xmm6, xmmword ptr [rbp]
movups	xmm7, xmmword ptr [rbp + 0x10]
xor	eax, eax
movups	xmm8, xmmword ptr [rbp + 0x20]
add	rsp, 0x70
pop	rbx
pop	rsi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
lea	rbx, [rip + 0xb2949]
jmp	0x14000b28f
jmp	0x14000b28f
nop	dword ptr [rax]
lea	rbx, [rip + 0xb2999]
jmp	0x14000b28f
jmp	0x14000b28f
nop	dword ptr [rax]
lea	rbx, [rip + 0xb2969]
jmp	0x14000b28f
jmp	0x14000b28f
nop	dword ptr [rax]
lea	rbx, [rip + 0xb29c9]
jmp	0x14000b28f
jmp	0x14000b28f
nop	dword ptr [rax]
lea	rbx, [rip + 0xb2991]
jmp	0x14000b28f
jmp	0x14000b28f
lea	rbx, [rip + 0xb29e3]
jmp	0x14000b28f
jmp	0x14000b28f
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
fninit	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rsi
push	rbx
sub	rsp, 0x30
lea	rbp, [rsp + 0x30]
mov	rbx, rcx
lea	rax, [rbp + 0x28]
mov	ecx, 2
mov	qword ptr [rbp + 0x28], rdx
mov	qword ptr [rbp + 0x30], r8
mov	qword ptr [rbp + 0x38], r9
mov	qword ptr [rbp - 8], rax
call	0x1400152f0
call	0x1400152f0
mov	r8d, 0x1b
mov	edx, 1
lea	rcx, [rip + 0xb29e1]
mov	r9, rax
call	0x140015950
call	0x140015950
mov	rsi, qword ptr [rbp - 8]
mov	ecx, 2
call	0x1400152f0
call	0x1400152f0
mov	rdx, rbx
mov	rcx, rax
mov	r8, rsi
call	0x140015a48
call	0x140015a48
call	0x1400158e8
call	0x1400158e8
nop	
nop	dword ptr [rax]
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
lea	rbp, [rsp + 0x50]
movsxd	rsi, dword ptr [rip + 0xd9cc0]
mov	rbx, rcx
test	esi, esi
jle	0x14000b500
jle	0x14000b500
mov	rax, qword ptr [rip + 0xd9cb2]
xor	r9d, r9d
add	rax, 0x18
nop	dword ptr [rax]
mov	r8, qword ptr [rax]
cmp	rbx, r8
jb	0x14000b41b
jb	0x14000b41b
mov	rdx, qword ptr [rax + 8]
mov	edx, dword ptr [rdx + 8]
add	r8, rdx
cmp	rbx, r8
jb	0x14000b4a3
jb	0x14000b4a3
add	r9d, 1
add	rax, 0x28
cmp	r9d, esi
jne	0x14000b400
jne	0x14000b400
mov	rcx, rbx
call	0x14000be80
call	0x14000be80
mov	rdi, rax
test	rax, rax
je	0x14000b522
je	0x14000b522
mov	rax, qword ptr [rip + 0xd9c65]
lea	rbx, [rsi + rsi*4]
shl	rbx, 3
add	rax, rbx
mov	qword ptr [rax + 0x20], rdi
mov	dword ptr [rax], 0
call	0x14000bfc0
call	0x14000bfc0
mov	edx, dword ptr [rdi + 0xc]
mov	r8d, 0x30
lea	rcx, [rax + rdx]
mov	rax, qword ptr [rip + 0xd9c37]
lea	rdx, [rbp - 0x30]
mov	qword ptr [rax + rbx + 0x18], rcx
call	qword ptr [rip + 0xdb028]
call	qword ptr [rip + 0xdb028]
test	rax, rax
je	0x14000b507
je	0x14000b507
mov	eax, dword ptr [rbp - 0xc]
lea	edx, [rax - 4]
and	edx, 0xfffffffb
je	0x14000b49c
je	0x14000b49c
lea	edx, [rax - 0x40]
and	edx, 0xffffffbf
jne	0x14000b4b0
jne	0x14000b4b0
add	dword ptr [rip + 0xd9c01], 1
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
cmp	eax, 2
mov	rcx, qword ptr [rbp - 0x30]
mov	rdx, qword ptr [rbp - 0x18]
mov	r8d, 0x40
mov	eax, 4
cmove	r8d, eax
add	rbx, qword ptr [rip + 0xd9bd7]
mov	qword ptr [rbx + 8], rcx
mov	r9, rbx
mov	qword ptr [rbx + 0x10], rdx
call	qword ptr [rip + 0xdafbe]
call	qword ptr [rip + 0xdafbe]
test	eax, eax
jne	0x14000b49c
jne	0x14000b49c
call	qword ptr [rip + 0xdaee4]
call	qword ptr [rip + 0xdaee4]
lea	rcx, [rip + 0xb2905]
mov	edx, eax
call	0x14000b360
call	0x14000b360
nop	word ptr [rax + rax]
xor	esi, esi
jmp	0x14000b428
jmp	0x14000b428
mov	rax, qword ptr [rip + 0xd9b9a]
mov	edx, dword ptr [rdi + 8]
lea	rcx, [rip + 0xb28a8]
mov	r8, qword ptr [rax + rbx + 0x18]
call	0x14000b360
call	0x14000b360
mov	rdx, rbx
lea	rcx, [rip + 0xb2874]
call	0x14000b360
call	0x14000b360
nop	
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	rbp, [rsp + 0x40]
mov	r12d, dword ptr [rip + 0xd9b44]
test	r12d, r12d
je	0x14000b578
je	0x14000b578
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	dword ptr [rip + 0xd9b1e], 1
call	0x14000bf00
call	0x14000bf00
cdqe	
lea	rax, [rax + rax*4]
lea	rax, [rax*8 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
mov	r13, qword ptr [rip + 0xb3c2b]
mov	rbx, qword ptr [rip + 0xb3c34]
mov	dword ptr [rip + 0xd9aee], 0
sub	rsp, rax
lea	rax, [rsp + 0x30]
mov	qword ptr [rip + 0xd9ae3], rax
mov	rax, r13
sub	rax, rbx
cmp	rax, 7
jle	0x14000b561
jle	0x14000b561
mov	edx, dword ptr [rbx]
cmp	rax, 0xb
jg	0x14000b6e0
jg	0x14000b6e0
mov	eax, dword ptr [rbx]
test	eax, eax
jne	0x14000b850
jne	0x14000b850
mov	eax, dword ptr [rbx + 4]
test	eax, eax
jne	0x14000b850
jne	0x14000b850
mov	edx, dword ptr [rbx + 8]
cmp	edx, 1
jne	0x14000b890
jne	0x14000b890
add	rbx, 0xc
cmp	rbx, r13
jae	0x14000b561
jae	0x14000b561
mov	r14, qword ptr [rip + 0xb3c0e]
mov	r15d, 0xffffffff
jmp	0x14000b67f
jmp	0x14000b67f
nop	word ptr [rax + rax]
cmp	ecx, 8
je	0x14000b700
je	0x14000b700
cmp	ecx, 0x10
jne	0x14000b882
jne	0x14000b882
movzx	esi, word ptr [rdi]
and	edx, 0xc0
test	si, si
jns	0x14000b810
jns	0x14000b810
or	rsi, 0xffffffffffff0000
sub	rsi, rax
add	rsi, r9
test	edx, edx
jne	0x14000b667
jne	0x14000b667
cmp	rsi, -0x8000
jl	0x14000b6c3
jl	0x14000b6c3
cmp	rsi, 0xffff
jg	0x14000b6c3
jg	0x14000b6c3
mov	rcx, rdi
call	0x14000b3d0
call	0x14000b3d0
mov	word ptr [rdi], si
add	rbx, 0xc
cmp	rbx, r13
jae	0x14000b750
jae	0x14000b750
mov	eax, dword ptr [rbx]
mov	edx, dword ptr [rbx + 8]
mov	edi, dword ptr [rbx + 4]
add	rax, r14
movzx	ecx, dl
mov	r9, qword ptr [rax]
add	rdi, r14
cmp	ecx, 0x20
je	0x14000b7a8
je	0x14000b7a8
jbe	0x14000b620
jbe	0x14000b620
cmp	ecx, 0x40
jne	0x14000b882
jne	0x14000b882
mov	rsi, qword ptr [rdi]
mov	ecx, edx
sub	rsi, rax
add	rsi, r9
and	ecx, 0xc0
jne	0x14000b800
jne	0x14000b800
test	rsi, rsi
js	0x14000b672
js	0x14000b672
mov	qword ptr [rsp + 0x20], rsi
mov	edx, ecx
mov	r8, rdi
lea	rcx, [rip + 0xb27b4]
call	0x14000b360
call	0x14000b360
nop	dword ptr [rax]
test	edx, edx
jne	0x14000b850
jne	0x14000b850
mov	eax, dword ptr [rbx + 4]
mov	edx, eax
or	edx, dword ptr [rbx + 8]
jne	0x14000b5ea
jne	0x14000b5ea
add	rbx, 0xc
jmp	0x14000b5dd
jmp	0x14000b5dd
nop	
movzx	esi, byte ptr [rdi]
and	edx, 0xc0
test	sil, sil
jns	0x14000b838
jns	0x14000b838
or	rsi, 0xffffffffffffff00
sub	rsi, rax
add	rsi, r9
test	edx, edx
jne	0x14000b732
jne	0x14000b732
cmp	rsi, 0xff
jg	0x14000b6c3
jg	0x14000b6c3
cmp	rsi, -0x80
jl	0x14000b6c3
jl	0x14000b6c3
mov	rcx, rdi
add	rbx, 0xc
call	0x14000b3d0
call	0x14000b3d0
mov	byte ptr [rdi], sil
cmp	rbx, r13
jb	0x14000b67f
jb	0x14000b67f
nop	word ptr [rax + rax]
mov	edx, dword ptr [rip + 0xd994e]
test	edx, edx
jle	0x14000b561
jle	0x14000b561
mov	rsi, qword ptr [rip + 0xdad3b]
xor	ebx, ebx
lea	rdi, [rbp - 4]
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rip + 0xd9931]
add	rax, rbx
mov	r8d, dword ptr [rax]
test	r8d, r8d
je	0x14000b78f
je	0x14000b78f
mov	rdx, qword ptr [rax + 0x10]
mov	rcx, qword ptr [rax + 8]
mov	r9, rdi
call	rsi
call	rsi
add	r12d, 1
add	rbx, 0x28
cmp	r12d, dword ptr [rip + 0xd9906]
jl	0x14000b770
jl	0x14000b770
jmp	0x14000b561
jmp	0x14000b561
nop	dword ptr [rax]
mov	esi, dword ptr [rdi]
and	edx, 0xc0
test	esi, esi
jns	0x14000b828
jns	0x14000b828
movabs	r11, 0xffffffff00000000
or	rsi, r11
sub	rsi, rax
add	rsi, r9
test	edx, edx
jne	0x14000b7e7
jne	0x14000b7e7
cmp	rsi, r15
jg	0x14000b6c3
jg	0x14000b6c3
movabs	rax, 0xffffffff7fffffff
cmp	rsi, rax
jle	0x14000b6c3
jle	0x14000b6c3
mov	rcx, rdi
call	0x14000b3d0
call	0x14000b3d0
mov	dword ptr [rdi], esi
jmp	0x14000b672
jmp	0x14000b672
nop	word ptr cs:[rax + rax]
mov	rcx, rdi
call	0x14000b3d0
call	0x14000b3d0
mov	qword ptr [rdi], rsi
jmp	0x14000b672
jmp	0x14000b672
sub	rsi, rax
add	rsi, r9
test	edx, edx
je	0x14000b655
je	0x14000b655
jmp	0x14000b667
jmp	0x14000b667
nop	dword ptr [rax + rax]
sub	rsi, rax
add	rsi, r9
test	edx, edx
je	0x14000b7cb
je	0x14000b7cb
jmp	0x14000b7e7
jmp	0x14000b7e7
nop	dword ptr [rax]
sub	rsi, rax
add	rsi, r9
test	edx, edx
je	0x14000b723
je	0x14000b723
jmp	0x14000b732
jmp	0x14000b732
nop	dword ptr [rax + rax]
cmp	rbx, r13
jae	0x14000b561
jae	0x14000b561
mov	r14, qword ptr [rip + 0xb39c0]
mov	esi, dword ptr [rbx + 4]
mov	edi, dword ptr [rbx]
add	rbx, 8
add	rsi, r14
add	edi, dword ptr [rsi]
mov	rcx, rsi
call	0x14000b3d0
call	0x14000b3d0
mov	dword ptr [rsi], edi
cmp	rbx, r13
jb	0x14000b860
jb	0x14000b860
jmp	0x14000b750
jmp	0x14000b750
mov	edx, ecx
lea	rcx, [rip + 0xb25cd]
call	0x14000b360
call	0x14000b360
lea	rcx, [rip + 0xb2589]
call	0x14000b360
call	0x14000b360
nop	
nop	
nop	
nop	
push	rbp
mov	rbp, rsp
sub	rsp, 0x50
mov	rax, qword ptr [rip + 0xd9801]
unpcklpd	xmm2, xmm3
test	rax, rax
je	0x14000b8d4
je	0x14000b8d4
movsd	xmm0, qword ptr [rbp + 0x30]
mov	dword ptr [rbp - 0x30], ecx
lea	rcx, [rbp - 0x30]
mov	qword ptr [rbp - 0x28], rdx
movups	xmmword ptr [rbp - 0x20], xmm2
movsd	qword ptr [rbp - 0x10], xmm0
call	rax
call	rax
nop	
add	rsp, 0x50
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	qword ptr [rip + 0xd97c9], rcx
jmp	0x140015890
jmp	0x140015890
nop	
nop	
nop	
nop	
push	rbp
push	rbx
sub	rsp, 0x28
lea	rbp, [rsp + 0x20]
mov	rdx, qword ptr [rcx]
mov	eax, dword ptr [rdx]
mov	rbx, rcx
mov	ecx, eax
and	ecx, 0x20ffffff
cmp	ecx, 0x20474343
je	0x14000b9d0
je	0x14000b9d0
cmp	eax, 0xc0000096
ja	0x14000b967
ja	0x14000b967
cmp	eax, 0xc000008b
jbe	0x14000b980
jbe	0x14000b980
add	eax, 0x3fffff73
cmp	eax, 9
ja	0x14000b9c0
ja	0x14000b9c0
lea	rdx, [rip + 0xb25a6]
movsxd	rax, dword ptr [rdx + rax*4]
add	rax, rdx
jmp	rax
jmp	rax
nop	dword ptr [rax + rax]
xor	edx, edx
mov	ecx, 8
call	0x1400159d8
call	0x1400159d8
cmp	rax, 1
je	0x14000ba94
je	0x14000ba94
test	rax, rax
jne	0x14000ba60
jne	0x14000ba60
mov	rax, qword ptr [rip + 0xd9762]
test	rax, rax
je	0x14000b9e0
je	0x14000b9e0
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rbp
jmp	rax
jmp	rax
nop	
cmp	eax, 0xc0000005
je	0x14000ba30
je	0x14000ba30
jbe	0x14000b9f0
jbe	0x14000b9f0
cmp	eax, 0xc0000008
je	0x14000b9c0
je	0x14000b9c0
cmp	eax, 0xc000001d
jne	0x14000b967
jne	0x14000b967
xor	edx, edx
mov	ecx, 4
call	0x1400159d8
call	0x1400159d8
cmp	rax, 1
je	0x14000ba80
je	0x14000ba80
test	rax, rax
je	0x14000b967
je	0x14000b967
mov	ecx, 4
call	rax
call	rax
nop	dword ptr [rax]
mov	eax, 0xffffffff
jmp	0x14000b9e2
jmp	0x14000b9e2
nop	word ptr [rax + rax]
test	byte ptr [rdx + 4], 1
jne	0x14000b917
jne	0x14000b917
jmp	0x14000b9c0
jmp	0x14000b9c0
nop	dword ptr [rax]
xor	eax, eax
add	rsp, 0x28
pop	rbx
pop	rbp
ret	
ret	
nop	dword ptr [rax]
cmp	eax, 0x80000002
jne	0x14000b967
jne	0x14000b967
jmp	0x14000b9c0
jmp	0x14000b9c0
nop	dword ptr [rax]
xor	edx, edx
mov	ecx, 8
call	0x1400159d8
call	0x1400159d8
cmp	rax, 1
jne	0x14000b95e
jne	0x14000b95e
mov	edx, 1
mov	ecx, 8
call	0x1400159d8
call	0x1400159d8
jmp	0x14000b9c0
jmp	0x14000b9c0
nop	word ptr [rax + rax]
xor	edx, edx
mov	ecx, 0xb
call	0x1400159d8
call	0x1400159d8
cmp	rax, 1
je	0x14000ba6c
je	0x14000ba6c
test	rax, rax
je	0x14000b967
je	0x14000b967
mov	ecx, 0xb
call	rax
call	rax
jmp	0x14000b9c0
jmp	0x14000b9c0
nop	word ptr [rax + rax]
mov	ecx, 8
call	rax
call	rax
jmp	0x14000b9c0
jmp	0x14000b9c0
mov	edx, 1
mov	ecx, 0xb
call	0x1400159d8
call	0x1400159d8
jmp	0x14000b9c0
jmp	0x14000b9c0
mov	edx, 1
mov	ecx, 4
call	0x1400159d8
call	0x1400159d8
jmp	0x14000b9c0
jmp	0x14000b9c0
mov	edx, 1
mov	ecx, 8
call	0x1400159d8
call	0x1400159d8
call	0x14000b350
call	0x14000b350
jmp	0x14000b9c0
jmp	0x14000b9c0
nop	
nop	
nop	
push	rbp
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rsp + 0x20]
lea	r13, [rip + 0xd9638]
mov	rcx, r13
call	qword ptr [rip + 0xda8ef]
call	qword ptr [rip + 0xda8ef]
mov	rbx, qword ptr [rip + 0xd9608]
test	rbx, rbx
je	0x14000bb15
je	0x14000bb15
mov	r12, qword ptr [rip + 0xda9a4]
mov	rdi, qword ptr [rip + 0xda8e5]
nop	dword ptr [rax + rax]
mov	ecx, dword ptr [rbx]
call	r12
call	r12
mov	rsi, rax
call	rdi
call	rdi
test	rsi, rsi
je	0x14000bb0c
je	0x14000bb0c
test	eax, eax
jne	0x14000bb0c
jne	0x14000bb0c
mov	rax, qword ptr [rbx + 8]
mov	rcx, rsi
call	rax
call	rax
mov	rbx, qword ptr [rbx + 0x10]
test	rbx, rbx
jne	0x14000baf0
jne	0x14000baf0
mov	rcx, r13
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	rbp
jmp	qword ptr [rip + 0xda8e5]
jmp	qword ptr [rip + 0xda8e5]
nop	dword ptr [rax + rax]
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rsp + 0x20]
mov	eax, dword ptr [rip + 0xd95a5]
mov	edi, ecx
mov	rsi, rdx
test	eax, eax
jne	0x14000bb60
jne	0x14000bb60
xor	eax, eax
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	edx, 0x18
mov	ecx, 1
call	0x1400158f0
call	0x1400158f0
mov	rbx, rax
test	rax, rax
je	0x14000bbaa
je	0x14000bbaa
mov	qword ptr [rax + 8], rsi
lea	rsi, [rip + 0xd957e]
mov	dword ptr [rax], edi
mov	rcx, rsi
call	qword ptr [rip + 0xda833]
call	qword ptr [rip + 0xda833]
mov	rax, qword ptr [rip + 0xd954c]
mov	rcx, rsi
mov	qword ptr [rip + 0xd9542], rbx
mov	qword ptr [rbx + 0x10], rax
call	qword ptr [rip + 0xda868]
call	qword ptr [rip + 0xda868]
jmp	0x14000bb4c
jmp	0x14000bb4c
or	eax, 0xffffffff
jmp	0x14000bb4e
jmp	0x14000bb4e
nop	
push	rbp
push	rsi
push	rbx
sub	rsp, 0x20
lea	rbp, [rsp + 0x20]
mov	eax, dword ptr [rip + 0xd9526]
mov	ebx, ecx
test	eax, eax
jne	0x14000bbd8
jne	0x14000bbd8
xor	eax, eax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
lea	rsi, [rip + 0xd9521]
mov	rcx, rsi
call	qword ptr [rip + 0xda7d8]
call	qword ptr [rip + 0xda7d8]
mov	rcx, qword ptr [rip + 0xd94f1]
test	rcx, rcx
je	0x14000bc23
je	0x14000bc23
xor	edx, edx
jmp	0x14000bc0b
jmp	0x14000bc0b
nop	dword ptr [rax + rax]
mov	rdx, rcx
test	rax, rax
je	0x14000bc23
je	0x14000bc23
mov	rcx, rax
mov	eax, dword ptr [rcx]
cmp	eax, ebx
mov	rax, qword ptr [rcx + 0x10]
jne	0x14000bc00
jne	0x14000bc00
test	rdx, rdx
je	0x14000bc40
je	0x14000bc40
mov	qword ptr [rdx + 0x10], rax
call	0x140015940
call	0x140015940
mov	rcx, rsi
call	qword ptr [rip + 0xda7e4]
call	qword ptr [rip + 0xda7e4]
xor	eax, eax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	qword ptr [rip + 0xd9499], rax
jmp	0x14000bc1e
jmp	0x14000bc1e
nop	dword ptr [rax]
push	rbp
push	rbx
sub	rsp, 0x28
lea	rbp, [rsp + 0x20]
cmp	edx, 2
je	0x14000bd10
je	0x14000bd10
ja	0x14000bc90
ja	0x14000bc90
test	edx, edx
je	0x14000bcb0
je	0x14000bcb0
mov	eax, dword ptr [rip + 0xd9478]
test	eax, eax
je	0x14000bd30
je	0x14000bd30
mov	dword ptr [rip + 0xd9466], 1
mov	eax, 1
add	rsp, 0x28
pop	rbx
pop	rbp
ret	
ret	
nop	
cmp	edx, 3
jne	0x14000bc82
jne	0x14000bc82
mov	eax, dword ptr [rip + 0xd944d]
test	eax, eax
je	0x14000bc82
je	0x14000bc82
call	0x14000bab0
call	0x14000bab0
jmp	0x14000bc82
jmp	0x14000bc82
nop	word ptr cs:[rax + rax]
mov	eax, dword ptr [rip + 0xd9432]
test	eax, eax
jne	0x14000bd28
jne	0x14000bd28
mov	eax, dword ptr [rip + 0xd9428]
cmp	eax, 1
jne	0x14000bc82
jne	0x14000bc82
mov	rbx, qword ptr [rip + 0xd9414]
test	rbx, rbx
je	0x14000bce9
je	0x14000bce9
nop	dword ptr [rax]
mov	rcx, rbx
mov	rbx, qword ptr [rbx + 0x10]
call	0x140015940
call	0x140015940
test	rbx, rbx
jne	0x14000bcd8
jne	0x14000bcd8
lea	rcx, [rip + 0xd9410]
mov	qword ptr [rip + 0xd93e5], 0
mov	dword ptr [rip + 0xd93e3], 0
call	qword ptr [rip + 0xda6ad]
call	qword ptr [rip + 0xda6ad]
jmp	0x14000bc82
jmp	0x14000bc82
call	0x14000b350
call	0x14000b350
mov	eax, 1
add	rsp, 0x28
pop	rbx
pop	rbp
ret	
ret	
nop	dword ptr [rax]
call	0x14000bab0
call	0x14000bab0
jmp	0x14000bcba
jmp	0x14000bcba
nop	
lea	rcx, [rip + 0xd93c9]
call	qword ptr [rip + 0xda6c3]
call	qword ptr [rip + 0xda6c3]
jmp	0x14000bc78
jmp	0x14000bc78
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
cmp	word ptr [rcx], 0x5a4d
jne	0x14000bd68
jne	0x14000bd68
movsxd	rdx, dword ptr [rcx + 0x3c]
add	rcx, rdx
cmp	dword ptr [rcx], 0x4550
je	0x14000bd70
je	0x14000bd70
ret	
ret	
nop	dword ptr [rax]
xor	eax, eax
cmp	word ptr [rcx + 0x18], 0x20b
sete	al
ret	
ret	
nop	dword ptr [rax]
movsxd	rax, dword ptr [rcx + 0x3c]
add	rcx, rax
movzx	eax, word ptr [rcx + 0x14]
movzx	r8d, word ptr [rcx + 6]
lea	rax, [rcx + rax + 0x18]
test	r8w, r8w
je	0x14000bdcd
je	0x14000bdcd
lea	ecx, [r8 - 1]
lea	rcx, [rcx + rcx*4]
lea	r9, [rax + rcx*8 + 0x28]
nop	dword ptr [rax + rax]
mov	r8d, dword ptr [rax + 0xc]
mov	rcx, r8
cmp	rdx, r8
jb	0x14000bdc4
jb	0x14000bdc4
add	ecx, dword ptr [rax + 8]
cmp	rdx, rcx
jb	0x14000bdcf
jb	0x14000bdcf
add	rax, 0x28
cmp	rax, r9
jne	0x14000bdb0
jne	0x14000bdb0
xor	eax, eax
ret	
ret	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rsp + 0x20]
mov	rsi, rcx
call	0x140015a08
call	0x140015a08
cmp	rax, 8
ja	0x14000be68
ja	0x14000be68
mov	rdx, qword ptr [rip + 0xb342e]
xor	ebx, ebx
cmp	word ptr [rdx], 0x5a4d
jne	0x14000be56
jne	0x14000be56
movsxd	rax, dword ptr [rdx + 0x3c]
add	rax, rdx
cmp	dword ptr [rax], 0x4550
jne	0x14000be56
jne	0x14000be56
cmp	word ptr [rax + 0x18], 0x20b
jne	0x14000be56
jne	0x14000be56
movzx	edx, word ptr [rax + 0x14]
lea	rbx, [rax + rdx + 0x18]
movzx	edx, word ptr [rax + 6]
test	dx, dx
je	0x14000be68
je	0x14000be68
lea	eax, [rdx - 1]
lea	rax, [rax + rax*4]
lea	rdi, [rbx + rax*8 + 0x28]
jmp	0x14000be41
jmp	0x14000be41
nop	word ptr [rax + rax]
add	rbx, 0x28
cmp	rbx, rdi
je	0x14000be68
je	0x14000be68
mov	r8d, 8
mov	rdx, rsi
mov	rcx, rbx
call	0x140015a10
call	0x140015a10
test	eax, eax
jne	0x14000be38
jne	0x14000be38
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
xor	ebx, ebx
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rdx, qword ptr [rip + 0xb3399]
xor	eax, eax
cmp	word ptr [rdx], 0x5a4d
jne	0x14000bea0
jne	0x14000bea0
movsxd	r8, dword ptr [rdx + 0x3c]
add	r8, rdx
cmp	dword ptr [r8], 0x4550
je	0x14000bea8
je	0x14000bea8
ret	
ret	
nop	dword ptr [rax]
cmp	word ptr [r8 + 0x18], 0x20b
jne	0x14000bea0
jne	0x14000bea0
movzx	eax, word ptr [r8 + 0x14]
sub	rcx, rdx
lea	rax, [r8 + rax + 0x18]
movzx	r8d, word ptr [r8 + 6]
test	r8w, r8w
je	0x14000befd
je	0x14000befd
lea	edx, [r8 - 1]
lea	rdx, [rdx + rdx*4]
lea	r9, [rax + rdx*8 + 0x28]
nop	word ptr cs:[rax + rax]
mov	r8d, dword ptr [rax + 0xc]
mov	rdx, r8
cmp	rcx, r8
jb	0x14000bef4
jb	0x14000bef4
add	edx, dword ptr [rax + 8]
cmp	rcx, rdx
jb	0x14000bea0
jb	0x14000bea0
add	rax, 0x28
cmp	rax, r9
jne	0x14000bee0
jne	0x14000bee0
xor	eax, eax
ret	
ret	
mov	rax, qword ptr [rip + 0xb3319]
xor	ecx, ecx
cmp	word ptr [rax], 0x5a4d
jne	0x14000bf1f
jne	0x14000bf1f
movsxd	rdx, dword ptr [rax + 0x3c]
add	rax, rdx
cmp	dword ptr [rax], 0x4550
je	0x14000bf28
je	0x14000bf28
mov	eax, ecx
ret	
ret	
nop	word ptr [rax + rax]
cmp	word ptr [rax + 0x18], 0x20b
jne	0x14000bf1f
jne	0x14000bf1f
movzx	ecx, word ptr [rax + 6]
mov	eax, ecx
ret	
ret	
nop	word ptr [rax + rax]
mov	r8, qword ptr [rip + 0xb32d9]
xor	eax, eax
cmp	word ptr [r8], 0x5a4d
jne	0x14000bf60
jne	0x14000bf60
movsxd	rdx, dword ptr [r8 + 0x3c]
add	rdx, r8
cmp	dword ptr [rdx], 0x4550
je	0x14000bf68
je	0x14000bf68
ret	
ret	
nop	dword ptr [rax]
cmp	word ptr [rdx + 0x18], 0x20b
jne	0x14000bf60
jne	0x14000bf60
movzx	eax, word ptr [rdx + 0x14]
movzx	r8d, word ptr [rdx + 6]
lea	rax, [rdx + rax + 0x18]
test	r8w, r8w
je	0x14000bfb0
je	0x14000bfb0
lea	edx, [r8 - 1]
lea	rdx, [rdx + rdx*4]
lea	rdx, [rax + rdx*8 + 0x28]
nop	dword ptr [rax]
test	byte ptr [rax + 0x27], 0x20
je	0x14000bfa7
je	0x14000bfa7
test	rcx, rcx
je	0x14000bf60
je	0x14000bf60
sub	rcx, 1
add	rax, 0x28
cmp	rdx, rax
jne	0x14000bf98
jne	0x14000bf98
xor	eax, eax
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	
mov	rax, qword ptr [rip + 0xb3259]
xor	edx, edx
cmp	word ptr [rax], 0x5a4d
jne	0x14000bfdf
jne	0x14000bfdf
movsxd	rcx, dword ptr [rax + 0x3c]
add	rcx, rax
cmp	dword ptr [rcx], 0x4550
je	0x14000bfe8
je	0x14000bfe8
mov	rax, rdx
ret	
ret	
nop	dword ptr [rax + rax]
cmp	word ptr [rcx + 0x18], 0x20b
cmove	rdx, rax
mov	rax, rdx
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rdx, qword ptr [rip + 0xb3219]
xor	eax, eax
cmp	word ptr [rdx], 0x5a4d
jne	0x14000c020
jne	0x14000c020
movsxd	r8, dword ptr [rdx + 0x3c]
add	r8, rdx
cmp	dword ptr [r8], 0x4550
je	0x14000c028
je	0x14000c028
ret	
ret	
nop	dword ptr [rax]
cmp	word ptr [r8 + 0x18], 0x20b
jne	0x14000c020
jne	0x14000c020
sub	rcx, rdx
movzx	r9d, word ptr [r8 + 6]
movzx	edx, word ptr [r8 + 0x14]
lea	rdx, [r8 + rdx + 0x18]
test	r9w, r9w
je	0x14000c020
je	0x14000c020
lea	eax, [r9 - 1]
lea	rax, [rax + rax*4]
lea	r9, [rdx + rax*8 + 0x28]
nop	word ptr cs:[rax + rax]
mov	r8d, dword ptr [rdx + 0xc]
mov	rax, r8
cmp	rcx, r8
jb	0x14000c074
jb	0x14000c074
add	eax, dword ptr [rdx + 8]
cmp	rcx, rax
jb	0x14000c080
jb	0x14000c080
add	rdx, 0x28
cmp	rdx, r9
jne	0x14000c060
jne	0x14000c060
xor	eax, eax
ret	
ret	
mov	eax, dword ptr [rdx + 0x24]
not	eax
shr	eax, 0x1f
ret	
ret	
nop	dword ptr [rax]
mov	r11, qword ptr [rip + 0xb3189]
xor	r8d, r8d
cmp	word ptr [r11], 0x5a4d
mov	r10d, ecx
jne	0x14000c0b4
jne	0x14000c0b4
movsxd	rcx, dword ptr [r11 + 0x3c]
add	rcx, r11
cmp	dword ptr [rcx], 0x4550
je	0x14000c0c0
je	0x14000c0c0
mov	rax, r8
ret	
ret	
nop	dword ptr [rax + rax]
cmp	word ptr [rcx + 0x18], 0x20b
jne	0x14000c0b4
jne	0x14000c0b4
mov	eax, dword ptr [rcx + 0x90]
test	eax, eax
je	0x14000c0b4
je	0x14000c0b4
movzx	edx, word ptr [rcx + 0x14]
movzx	r9d, word ptr [rcx + 6]
lea	rdx, [rcx + rdx + 0x18]
test	r9w, r9w
je	0x14000c0b4
je	0x14000c0b4
lea	ecx, [r9 - 1]
lea	rcx, [rcx + rcx*4]
lea	r9, [rdx + rcx*8 + 0x28]
nop	dword ptr [rax + rax]
mov	r8d, dword ptr [rdx + 0xc]
mov	rcx, r8
cmp	rax, r8
jb	0x14000c10c
jb	0x14000c10c
add	ecx, dword ptr [rdx + 8]
cmp	rax, rcx
jb	0x14000c120
jb	0x14000c120
add	rdx, 0x28
cmp	r9, rdx
jne	0x14000c0f8
jne	0x14000c0f8
xor	r8d, r8d
mov	rax, r8
ret	
ret	
nop	dword ptr [rax]
add	rax, r11
jmp	0x14000c130
jmp	0x14000c130
nop	dword ptr [rax]
sub	r10d, 1
add	rax, 0x14
mov	ecx, dword ptr [rax + 4]
test	ecx, ecx
jne	0x14000c13e
jne	0x14000c13e
mov	edx, dword ptr [rax + 0xc]
test	edx, edx
je	0x14000c115
je	0x14000c115
test	r10d, r10d
jg	0x14000c128
jg	0x14000c128
mov	r8d, dword ptr [rax + 0xc]
add	r8, r11
mov	rax, r8
ret	
ret	
nop	
nop	
push	rcx
push	rax
cmp	rax, 0x1000
lea	rcx, [rsp + 0x18]
jb	0x14000c178
jb	0x14000c178
sub	rcx, 0x1000
or	qword ptr [rcx], 0
sub	rax, 0x1000
cmp	rax, 0x1000
ja	0x14000c15f
ja	0x14000c15f
sub	rcx, rax
or	qword ptr [rcx], 0
pop	rax
pop	rcx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	qword ptr [rip + 0xda261]
jmp	qword ptr [rip + 0xda261]
nop	word ptr [rax + rax]
sub	rsp, 0x28
call	qword ptr [rip + 0xda306]
call	qword ptr [rip + 0xda306]
xor	eax, eax
add	rsp, 0x28
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
sub	rsp, 0x28
call	qword ptr [rip + 0xda2ee]
call	qword ptr [rip + 0xda2ee]
xor	eax, eax
add	rsp, 0x28
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
sub	rsp, 0x28
mov	r8d, 0xffffffff
call	qword ptr [rip + 0xda280]
call	qword ptr [rip + 0xda280]
test	eax, eax
je	0x14000c200
je	0x14000c200
xor	eax, eax
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax + rax]
add	rsp, 0x28
jmp	qword ptr [rip + 0xda1c5]
jmp	qword ptr [rip + 0xda1c5]
nop	dword ptr [rax + rax]
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rdi, r8
mov	rsi, rdx
mov	rbx, rcx
lea	rcx, [rsp + 0x28]
call	qword ptr [rip + 0xda1bd]
call	qword ptr [rip + 0xda1bd]
mov	eax, dword ptr [rdi + 8]
xor	r8d, r8d
movabs	rdx, 0xfe624e212ac18000
add	rdx, qword ptr [rsp + 0x28]
add	eax, 0x63
movsxd	rcx, eax
sar	eax, 0x1f
imul	rcx, rcx, 0x51eb851f
sar	rcx, 0x25
sub	ecx, eax
imul	rax, qword ptr [rdi], 0x989680
movsxd	rcx, ecx
add	rcx, rax
cmp	rcx, rdx
jb	0x14000c286
jb	0x14000c286
movabs	rax, 0xd6bf94d5e57a42bd
sub	rcx, rdx
lea	rdx, [rcx + 0x98967f]
mul	rdx
shr	rdx, 0x17
mov	r8, rdx
mov	rdx, rsi
mov	rcx, rbx
call	qword ptr [rip + 0xda1de]
call	qword ptr [rip + 0xda1de]
test	eax, eax
je	0x14000c2a0
je	0x14000c2a0
xor	eax, eax
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
jmp	qword ptr [rip + 0xda122]
jmp	qword ptr [rip + 0xda122]
nop	
push	rbx
sub	rsp, 0x30
mov	rbx, rcx
lea	rcx, [rsp + 0x28]
call	qword ptr [rip + 0xda125]
call	qword ptr [rip + 0xda125]
mov	eax, dword ptr [rbx + 8]
movabs	rdx, 0xfe624e212ac18000
add	rdx, qword ptr [rsp + 0x28]
add	eax, 0x63
movsxd	rcx, eax
sar	eax, 0x1f
imul	rcx, rcx, 0x51eb851f
sar	rcx, 0x25
sub	ecx, eax
imul	rax, qword ptr [rbx], 0x989680
movsxd	rcx, ecx
add	rcx, rax
xor	eax, eax
cmp	rcx, rdx
jb	0x14000c31d
jb	0x14000c31d
movabs	rax, 0xd6bf94d5e57a42bd
sub	rcx, rdx
lea	rdx, [rcx + 0x98967f]
mul	rdx
mov	rax, rdx
shr	rax, 0x17
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
call	qword ptr [rip + 0xda076]
call	qword ptr [rip + 0xda076]
xor	eax, eax
add	rsp, 0x28
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rdi, qword ptr [rip + 0xda092]
mov	rsi, rdx
call	rdi
call	rdi
mov	rcx, rsi
mov	ebx, eax
call	rdi
call	rdi
cmp	ebx, eax
sete	al
movzx	eax, al
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
sub	rsp, 0x28
xor	ecx, ecx
call	qword ptr [rip + 0xda0dc]
call	qword ptr [rip + 0xda0dc]
xor	eax, eax
add	rsp, 0x28
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	ecx, dword ptr [rcx]
test	ecx, ecx
je	0x14000c3c0
je	0x14000c3c0
xor	eax, eax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
lock add	dword ptr [rbx + 4], 1
je	0x14000c3f0
je	0x14000c3f0
mov	edx, dword ptr [rbx]
mov	rsi, qword ptr [rip + 0xda098]
test	edx, edx
jne	0x14000c3af
jne	0x14000c3af
nop	dword ptr [rax]
xor	ecx, ecx
call	rsi
call	rsi
mov	eax, dword ptr [rbx]
test	eax, eax
jne	0x14000c3af
jne	0x14000c3af
xor	ecx, ecx
call	rsi
call	rsi
mov	eax, dword ptr [rbx]
test	eax, eax
je	0x14000c3d8
je	0x14000c3d8
jmp	0x14000c3af
jmp	0x14000c3af
nop	
call	rdx
call	rdx
mov	dword ptr [rbx], 1
jmp	0x14000c3af
jmp	0x14000c3af
nop	word ptr [rax + rax]
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rbx, rdx
call	qword ptr [rip + 0xda066]
call	qword ptr [rip + 0xda066]
cmp	eax, -1
je	0x14000c430
je	0x14000c430
mov	rdx, rbx
mov	ecx, eax
mov	dword ptr [rsi], eax
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x140015bc0
jmp	0x140015bc0
nop	dword ptr [rax]
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	qword ptr [rip + 0xd9f93]
jmp	qword ptr [rip + 0xd9f93]
nop	dword ptr [rax]
sub	rsp, 0x28
call	qword ptr [rip + 0xda036]
call	qword ptr [rip + 0xda036]
test	eax, eax
je	0x14000c458
je	0x14000c458
xor	eax, eax
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax]
add	rsp, 0x28
jmp	qword ptr [rip + 0xd9f6d]
jmp	qword ptr [rip + 0xd9f6d]
nop	word ptr cs:[rax + rax]
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	ebx, ecx
call	qword ptr [rip + 0xd9f52]
call	qword ptr [rip + 0xd9f52]
mov	ecx, ebx
mov	esi, eax
call	qword ptr [rip + 0xda000]
call	qword ptr [rip + 0xda000]
mov	ecx, esi
mov	rbx, rax
call	qword ptr [rip + 0xd9fc5]
call	qword ptr [rip + 0xd9fc5]
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
sub	rsp, 0x28
call	qword ptr [rip + 0xd9fe6]
call	qword ptr [rip + 0xd9fe6]
test	eax, eax
je	0x14000c4b8
je	0x14000c4b8
xor	eax, eax
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax]
add	rsp, 0x28
jmp	qword ptr [rip + 0xd9f0d]
jmp	qword ptr [rip + 0xd9f0d]
nop	word ptr cs:[rax + rax]
nop	
jmp	qword ptr [rip + 0xd9f29]
jmp	qword ptr [rip + 0xd9f29]
nop	word ptr [rax + rax]
jmp	qword ptr [rip + 0xd9ed1]
jmp	qword ptr [rip + 0xd9ed1]
nop	word ptr [rax + rax]
sub	rsp, 0x28
call	qword ptr [rip + 0xd9ec6]
call	qword ptr [rip + 0xd9ec6]
xor	eax, eax
add	rsp, 0x28
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	qword ptr [rip + 0xd9f7a]
call	qword ptr [rip + 0xd9f7a]
test	eax, eax
je	0x14000c539
je	0x14000c539
xor	eax, eax
cmp	dword ptr [rbx + 0xc], 1
jg	0x14000c530
jg	0x14000c530
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	rcx, rbx
call	qword ptr [rip + 0xd9ed7]
call	qword ptr [rip + 0xd9ed7]
mov	eax, 1
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	
sub	rsp, 0x28
call	qword ptr [rip + 0xd9eb6]
call	qword ptr [rip + 0xd9eb6]
xor	eax, eax
add	rsp, 0x28
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
sub	rsp, 0x28
call	qword ptr [rip + 0xd9f1e]
call	qword ptr [rip + 0xd9f1e]
test	eax, eax
sete	al
movzx	eax, al
add	rsp, 0x28
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
xor	edx, edx
mov	r8d, 1
mov	qword ptr [rsp + 0x40], rcx
lea	r9, [rsp + 0x40]
mov	ecx, 0x22474343
call	qword ptr [rip + 0xd9e7f]
call	qword ptr [rip + 0xd9e7f]
mov	r9, qword ptr [rsp + 0x40]
mov	edx, 0x1a
mov	ecx, 1
mov	rax, qword ptr [r9 + 0x30]
mov	r8, qword ptr [r9]
mov	qword ptr [rsp + 0x20], 0
mov	qword ptr [rsp + 0x28], rax
call	qword ptr [r9 + 0x10]
call	qword ptr [r9 + 0x10]
mov	eax, 0x10
add	rsp, 0x38
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	
sub	rsp, 0x28
cmp	edx, 1
ja	0x14000c606
ja	0x14000c606
movsxd	rdx, edx
mov	rax, qword ptr [rcx + rdx*8 + 0x10]
add	rsp, 0x28
ret	
ret	
call	0x1400158e8
call	0x1400158e8
nop	
nop	dword ptr [rax]
sub	rsp, 0x28
cmp	edx, 1
ja	0x14000c626
ja	0x14000c626
movsxd	rdx, edx
mov	qword ptr [rcx + rdx*8 + 0x10], r8
add	rsp, 0x28
ret	
ret	
call	0x1400158e8
call	0x1400158e8
nop	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	
mov	rax, qword ptr [rcx + 8]
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rcx + 8]
mov	dword ptr [rdx], 0
ret	
ret	
nop	dword ptr [rax + rax]
mov	qword ptr [rcx + 8], rdx
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rcx + 0x20]
mov	rax, qword ptr [rax + 0x38]
ret	
ret	
nop	dword ptr [rax]
mov	rdx, qword ptr [rcx + 0x20]
mov	rax, qword ptr [rdx + 0x10]
mov	eax, dword ptr [rax]
add	rax, qword ptr [rdx + 8]
ret	
ret	
nop	
sub	rsp, 0x38
xor	r8d, r8d
lea	rdx, [rsp + 0x28]
call	qword ptr [rip + 0xd9d9e]
call	qword ptr [rip + 0xd9d9e]
test	rax, rax
je	0x14000c6ae
je	0x14000c6ae
mov	eax, dword ptr [rax]
add	rax, qword ptr [rsp + 0x28]
add	rsp, 0x38
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	
xor	eax, eax
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	
mov	rax, qword ptr [rcx + 0x20]
mov	rax, qword ptr [rax + 8]
ret	
ret	
nop	dword ptr [rax]
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x68
mov	eax, dword ptr [rcx]
mov	r12, qword ptr [rcx + 0x20]
mov	rbp, rdx
mov	edx, dword ptr [rcx + 4]
mov	rbx, rcx
mov	rdi, r8
mov	rsi, r9
test	dl, 0x20
jne	0x14000c7e0
jne	0x14000c7e0
cmp	eax, 0x21474343
je	0x14000c7c0
je	0x14000c7c0
mov	rcx, qword ptr [r9 + 0x28]
mov	qword ptr [rsp + 0x50], r9
movq	xmm0, qword ptr [rcx + 0x98]
movhps	xmm0, qword ptr [r9]
movups	xmmword ptr [rsp + 0x30], xmm0
movdqu	xmm0, xmmword ptr [rip + 0xb17d9]
movups	xmmword ptr [rsp + 0x40], xmm0
cmp	eax, 0x22474343
je	0x14000c7f8
je	0x14000c7f8
cmp	eax, 0x20474343
jne	0x14000c7ca
jne	0x14000c7ca
and	edx, 6
mov	r8, qword ptr [r12]
je	0x14000c830
je	0x14000c830
mov	edx, 2
lea	rsi, [rsp + 0x30]
mov	qword ptr [rsp + 0x20], rsi
mov	r9, r12
mov	ecx, 1
call	qword ptr [rsp + 0xc0]
call	qword ptr [rsp + 0xc0]
cmp	eax, 8
je	0x14000c7ca
je	0x14000c7ca
cmp	eax, 7
jne	0x14000c7b4
jne	0x14000c7b4
mov	rax, qword ptr [rsp + 0x48]
movq	xmm0, rbp
lea	r9, [rbx + 0x20]
mov	r8d, 4
movhps	xmm0, qword ptr [rsp + 0x38]
mov	edx, 1
mov	ecx, 0x21474343
mov	qword ptr [rbx + 0x38], rax
movups	xmmword ptr [rbx + 0x28], xmm0
call	qword ptr [rip + 0xd9c7c]
call	qword ptr [rip + 0xd9c7c]
call	0x1400158e8
call	0x1400158e8
nop	dword ptr [rax]
cmp	rbp, qword ptr [rcx + 0x28]
je	0x14000c8d8
je	0x14000c8d8
mov	eax, 1
add	rsp, 0x68
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [r9 + 0x28]
mov	rdx, qword ptr [rcx + 0x38]
mov	qword ptr [rax + 0x88], rdx
jmp	0x14000c7ca
jmp	0x14000c7ca
nop	dword ptr [rax]
mov	rax, qword ptr [r12 + 0x30]
lea	rsi, [rsp + 0x30]
mov	r8, qword ptr [r12]
mov	r9, r12
mov	edx, 0xa
mov	qword ptr [rsp + 0x20], rsi
mov	ecx, 1
mov	qword ptr [rsp + 0x28], rax
call	qword ptr [r12 + 0x10]
call	qword ptr [r12 + 0x10]
mov	r8, qword ptr [r12]
mov	edx, 0xa
jmp	0x14000c765
jmp	0x14000c765
lea	r13, [rsp + 0x30]
mov	r9, r12
mov	edx, 1
mov	ecx, 1
mov	qword ptr [rsp + 0x20], r13
call	qword ptr [rsp + 0xc0]
call	qword ptr [rsp + 0xc0]
cmp	eax, 8
je	0x14000c7ca
je	0x14000c7ca
cmp	eax, 6
jne	0x14000c7b4
jne	0x14000c7b4
mov	qword ptr [rsp + 0x20], r13
mov	r9, r12
mov	r8, qword ptr [r12]
mov	edx, 6
mov	ecx, 1
call	qword ptr [rsp + 0xc0]
call	qword ptr [rsp + 0xc0]
cmp	eax, 7
jne	0x14000c7b4
jne	0x14000c7b4
movq	xmm0, rbp
mov	r9, qword ptr [rsp + 0x40]
mov	r8, rbx
mov	rcx, rbp
movhps	xmm0, qword ptr [rsp + 0x38]
mov	rdx, qword ptr [rsp + 0x38]
movups	xmmword ptr [r12 + 0x18], xmm0
mov	rax, qword ptr [rsp + 0x48]
mov	qword ptr [r12 + 0x28], rax
mov	qword ptr [rbx + 0x38], rax
mov	rax, qword ptr [rsi + 0x40]
mov	dword ptr [rbx + 0x18], 4
movups	xmmword ptr [rbx + 0x28], xmm0
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x20], rdi
call	qword ptr [rip + 0xd9b75]
call	qword ptr [rip + 0xd9b75]
jmp	0x14000c7b4
jmp	0x14000c7b4
mov	rax, qword ptr [r9 + 0x40]
mov	rdx, qword ptr [rcx + 0x30]
mov	r9, r12
mov	qword ptr [rsp + 0x20], r8
mov	r8, rcx
mov	rcx, rbp
mov	qword ptr [rsp + 0x28], rax
call	qword ptr [rip + 0xd9b4f]
call	qword ptr [rip + 0xd9b4f]
call	0x1400158e8
call	0x1400158e8
nop	
nop	
sub	rsp, 0x28
pxor	xmm0, xmm0
mov	r8d, 1
xor	edx, edx
mov	qword ptr [rsp + 0x30], rcx
lea	r9, [rsp + 0x30]
movups	xmmword ptr [rcx + 0x10], xmm0
movups	xmmword ptr [rcx + 0x20], xmm0
movups	xmmword ptr [rcx + 0x30], xmm0
mov	ecx, 0x20474343
call	qword ptr [rip + 0xd9aff]
call	qword ptr [rip + 0xd9aff]
mov	eax, 5
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax + rax]
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x688
xor	eax, eax
lea	rdx, [rsp + 0x38]
mov	rbx, rcx
mov	ecx, 0x12
mov	dword ptr [rsp + 0x1e0], 0x10001f
mov	rdi, rdx
movq	xmm0, qword ptr [rbx + 0x20]
movq	xmm1, rbx
lea	rsi, [rsp + 0xd0]
rep stosq	qword ptr [rdi], rax
mov	ecx, 0x1b
mov	rdi, rsi
movhps	xmm1, qword ptr [rbx + 0x18]
rep stosq	qword ptr [rdi], rax
mov	rax, qword ptr [rip + 0xb158d]
movhps	xmm0, qword ptr [rbx + 0x28]
lea	rdi, [rsp + 0x1b0]
lea	rbp, [rsp + 0x30]
movups	xmmword ptr [rsp + 0x50], xmm1
mov	rcx, rdi
mov	qword ptr [rsp + 0x30], rax
movups	xmmword ptr [rsp + 0x60], xmm0
mov	dword ptr [rsp + 0x48], 4
call	qword ptr [rip + 0xd9a74]
call	qword ptr [rip + 0xd9a74]
mov	rdx, qword ptr [rbx + 0x20]
mov	rcx, qword ptr [rbx + 0x18]
mov	r9, rbx
mov	r8, rbp
mov	qword ptr [rsp + 0x28], rsi
mov	qword ptr [rsp + 0x20], rdi
call	qword ptr [rip + 0xd9a66]
call	qword ptr [rip + 0xd9a66]
call	0x1400158e8
call	0x1400158e8
nop	
nop	dword ptr [rax + rax]
sub	rsp, 0x28
cmp	qword ptr [rcx + 0x10], 0
jne	0x14000ca05
jne	0x14000ca05
call	0x14000c900
call	0x14000c900
call	0x1400158e8
call	0x1400158e8
call	0x14000c590
call	0x14000c590
jmp	0x14000ca00
jmp	0x14000ca00
nop	dword ptr [rax]
pxor	xmm0, xmm0
movups	xmmword ptr [rcx + 0x28], xmm0
mov	qword ptr [rcx + 0x38], 0
mov	qword ptr [rcx + 0x10], rdx
mov	qword ptr [rcx + 0x30], r8
movups	xmmword ptr [rcx + 0x18], xmm0
jmp	0x14000c590
jmp	0x14000c590
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
mov	rax, qword ptr [rcx + 8]
mov	rdx, rcx
test	rax, rax
je	0x14000ca58
je	0x14000ca58
mov	ecx, 1
jmp	rax
jmp	rax
nop	dword ptr [rax]
ret	
ret	
nop	dword ptr [rax]
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x678
xor	eax, eax
pxor	xmm0, xmm0
mov	r12, rcx
mov	ecx, 0x1b
lea	rbx, [rsp + 0x70]
mov	rbp, rdx
lea	rsi, [rsp + 0xc0]
movups	xmmword ptr [rsp + 0x40], xmm0
lea	r14, [rsp + 0x40]
mov	rdi, rsi
movups	xmmword ptr [rsp + 0x50], xmm0
rep stosq	qword ptr [rdi], rax
lea	rdi, [rsp + 0x1a0]
mov	qword ptr [rsp + 0x60], 0
mov	rcx, rdi
movups	xmmword ptr [rsp + 0x70], xmm0
mov	dword ptr [rsp + 0x1d0], 0x10001f
movups	xmmword ptr [rsp + 0x80], xmm0
movups	xmmword ptr [rsp + 0x90], xmm0
movups	xmmword ptr [rsp + 0xa0], xmm0
movups	xmmword ptr [rsp + 0xb0], xmm0
call	qword ptr [rip + 0xd9948]
call	qword ptr [rip + 0xd9948]
mov	qword ptr [rsp + 0x60], rbx
mov	rcx, qword ptr [rsp + 0x298]
mov	qword ptr [rsp + 0x98], rdi
mov	r13, qword ptr [rip + 0xd9934]
mov	qword ptr [rsp + 0xb0], rsi
mov	r15, qword ptr [rip + 0xd9935]
jmp	0x14000cb8a
jmp	0x14000cb8a
nop	dword ptr [rax]
lea	rax, [rbx + 0x18]
mov	rdx, qword ptr [rbx + 8]
xor	ecx, ecx
mov	qword ptr [rsp + 0x38], 0
mov	qword ptr [rsp + 0x30], rax
lea	rax, [rbx + 0x38]
mov	r8, qword ptr [rsp + 0x298]
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x20], rdi
call	r15
call	r15
mov	rdx, rbp
mov	rcx, r14
movq	xmm0, qword ptr [rsp + 0x238]
mov	qword ptr [rbx + 0x30], rax
movhps	xmm0, qword ptr [rsp + 0x298]
movups	xmmword ptr [rsp + 0x40], xmm0
call	r12
call	r12
test	eax, eax
jne	0x14000cbd0
jne	0x14000cbd0
mov	rcx, qword ptr [rsp + 0x298]
test	rcx, rcx
je	0x14000cbad
je	0x14000cbad
mov	rbx, qword ptr [rsp + 0x60]
mov	qword ptr [rbx], rcx
lea	rdx, [rbx + 8]
mov	r8, rsi
call	r13
call	r13
mov	qword ptr [rbx + 0x10], rax
mov	rbx, qword ptr [rsp + 0x60]
mov	r9, qword ptr [rbx + 0x10]
test	r9, r9
jne	0x14000cb20
jne	0x14000cb20
mov	eax, 5
add	rsp, 0x678
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	eax, 3
jmp	0x14000cbb2
jmp	0x14000cbb2
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rdi, qword ptr [rcx]
mov	rsi, rcx
test	rdi, rdi
je	0x14000cc14
je	0x14000cc14
xor	ebx, ebx
nop	dword ptr [rax]
mov	rax, qword ptr [rsi + rbx*8 + 8]
test	rax, rax
je	0x14000cc0b
je	0x14000cc0b
mov	rcx, qword ptr [rax - 8]
call	0x140015940
call	0x140015940
add	rbx, 1
cmp	rdi, rbx
jne	0x14000cbf8
jne	0x14000cbf8
mov	rcx, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x140015940
jmp	0x140015940
nop	word ptr cs:[rax + rax]
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, qword ptr [rcx + 8]
mov	rdi, qword ptr [rcx]
mov	rbx, rcx
cmp	rsi, 8
ja	0x14000cc80
ja	0x14000cc80
lea	rcx, [rdi + 8]
call	0x140015980
call	0x140015980
test	rax, rax
je	0x14000ccc2
je	0x14000ccc2
mov	rdx, qword ptr [rbx + 0x18]
mov	qword ptr [rax], rax
lea	r9, [rax + 8]
mov	r8, rdi
test	rdx, rdx
je	0x14000ccaa
je	0x14000ccaa
mov	rcx, r9
call	0x140015998
call	0x140015998
mov	r9, rax
mov	rax, r9
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
lea	rcx, [rsi + rdi + 7]
call	0x140015980
call	0x140015980
test	rax, rax
je	0x14000ccc2
je	0x14000ccc2
lea	r9, [rax + rsi + 7]
neg	rsi
mov	r8, rdi
and	r9, rsi
mov	qword ptr [r9 - 8], rax
mov	rdx, qword ptr [rbx + 0x18]
test	rdx, rdx
jne	0x14000cc68
jne	0x14000cc68
mov	rcx, r9
xor	edx, edx
call	0x1400159a8
call	0x1400159a8
mov	r9, rax
mov	rax, r9
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
call	0x1400158e8
call	0x1400158e8
nop	
nop	dword ptr [rax + rax]
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, qword ptr [rip + 0xb194d]
mov	r11d, dword ptr [rsi]
mov	rbx, rcx
test	r11d, r11d
jne	0x14000cd08
jne	0x14000cd08
mov	rax, qword ptr [rcx + 0x10]
test	rax, rax
je	0x14000cd70
je	0x14000cd70
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	r12, qword ptr [rcx + 0x10]
test	r12, r12
je	0x14000cd80
je	0x14000cd80
mov	esi, dword ptr [rip + 0xd8471]
mov	r13, qword ptr [rip + 0xd96b2]
call	r13
call	r13
mov	edi, eax
mov	ecx, esi
call	qword ptr [rip + 0xd975d]
call	qword ptr [rip + 0xd975d]
mov	ecx, edi
mov	rsi, rax
call	qword ptr [rip + 0xd9722]
call	qword ptr [rip + 0xd9722]
test	rsi, rsi
je	0x14000cdd8
je	0x14000cdd8
mov	rbp, qword ptr [rsi]
cmp	rbp, r12
jb	0x14000ce20
jb	0x14000ce20
sub	r12, 1
mov	rax, qword ptr [rsi + r12*8 + 8]
test	rax, rax
jne	0x14000ccf7
jne	0x14000ccf7
mov	rcx, rbx
call	0x14000cc30
call	0x14000cc30
mov	qword ptr [rsi + r12*8 + 8], rax
jmp	0x14000ccf7
jmp	0x14000ccf7
nop	dword ptr [rax + rax]
call	0x14000cc30
call	0x14000cc30
mov	qword ptr [rbx + 0x10], rax
jmp	0x14000ccf7
jmp	0x14000ccf7
nop	
mov	r10d, dword ptr [rsi]
test	r10d, r10d
je	0x14000ceb1
je	0x14000ceb1
mov	r9d, dword ptr [rip + 0xa829d]
test	r9d, r9d
je	0x14000ced9
je	0x14000ced9
lea	rcx, [rip + 0xd83fd]
call	qword ptr [rip + 0xd9617]
call	qword ptr [rip + 0xd9617]
mov	r12, qword ptr [rbx + 0x10]
test	r12, r12
je	0x14000cebe
je	0x14000cebe
mov	eax, dword ptr [rsi]
test	eax, eax
je	0x14000cd11
je	0x14000cd11
lea	rcx, [rip + 0xd83d9]
call	qword ptr [rip + 0xd9643]
call	qword ptr [rip + 0xd9643]
jmp	0x14000cd11
jmp	0x14000cd11
nop	word ptr [rax + rax]
lea	rcx, [r12 + 0x21]
mov	edx, 8
lea	rdi, [r12 + 0x20]
call	0x1400158f0
call	0x1400158f0
mov	rsi, rax
test	rax, rax
je	0x14000cf14
je	0x14000cf14
mov	qword ptr [rax], rdi
mov	ecx, dword ptr [rip + 0xd8387]
mov	rdx, rsi
call	qword ptr [rip + 0xd9686]
call	qword ptr [rip + 0xd9686]
test	eax, eax
jne	0x14000cd4b
jne	0x14000cd4b
call	r13
call	r13
jmp	0x14000cd4b
jmp	0x14000cd4b
nop	word ptr [rax + rax]
lea	rdi, [rbp + rbp]
lea	rax, [r12 + 0x20]
mov	rcx, rsi
cmp	rdi, r12
cmovb	rdi, rax
lea	rdx, [rdi*8 + 8]
call	0x1400159c0
call	0x1400159c0
mov	rsi, rax
test	rax, rax
je	0x14000cf14
je	0x14000cf14
mov	qword ptr [rax], rdi
sub	rdi, rbp
lea	rcx, [rax + rbp*8 + 8]
xor	edx, edx
lea	r8, [rdi*8]
call	0x1400159a8
call	0x1400159a8
jmp	0x14000cdfb
jmp	0x14000cdfb
lea	rcx, [rip + 0xd8330]
call	qword ptr [rip + 0xd958a]
call	qword ptr [rip + 0xd958a]
call	qword ptr [rip + 0xd95fc]
call	qword ptr [rip + 0xd95fc]
cmp	eax, -1
je	0x14000cf0c
je	0x14000cf0c
lea	rdx, [rip - 0x2ac]
mov	ecx, eax
mov	dword ptr [rip + 0xd82f4], eax
call	0x140015bc0
call	0x140015bc0
test	eax, eax
jne	0x14000cf14
jne	0x14000cf14
mov	dword ptr [rip + 0xa8189], 1
mov	edx, dword ptr [rsi]
test	edx, edx
jne	0x14000cd9c
jne	0x14000cd9c
mov	r12, qword ptr [rbx + 0x10]
test	r12, r12
jne	0x14000cd11
jne	0x14000cd11
mov	rax, qword ptr [rip + 0xd82bb]
lea	r12, [rax + 1]
mov	qword ptr [rip + 0xd82b0], r12
mov	qword ptr [rbx + 0x10], r12
jmp	0x14000cdb6
jmp	0x14000cdb6
lock add	dword ptr [rip + 0xa8153], 1
je	0x14000ce69
je	0x14000ce69
mov	r8d, dword ptr [rip + 0xa8146]
mov	rbp, qword ptr [rip + 0xd9577]
lea	rdi, [rip + 0xa8138]
test	r8d, r8d
jne	0x14000cea7
jne	0x14000cea7
nop	dword ptr [rax]
xor	ecx, ecx
call	rbp
call	rbp
mov	ecx, dword ptr [rdi]
test	ecx, ecx
je	0x14000cf00
je	0x14000cf00
jmp	0x14000cea7
jmp	0x14000cea7
call	qword ptr [rip + 0xd94be]
call	qword ptr [rip + 0xd94be]
jmp	0x14000ce99
jmp	0x14000ce99
call	0x1400158e8
call	0x1400158e8
nop	
nop	word ptr [rax + rax]
cmp	qword ptr [rcx], rdx
jae	0x14000cf30
jae	0x14000cf30
mov	qword ptr [rcx], rdx
mov	qword ptr [rcx + 0x18], 0
cmp	qword ptr [rcx + 8], r8
jae	0x14000cf3a
jae	0x14000cf3a
mov	qword ptr [rcx + 8], r8
test	r9, r9
je	0x14000cf44
je	0x14000cf44
cmp	qword ptr [rcx], rdx
je	0x14000cf48
je	0x14000cf48
ret	
ret	
nop	dword ptr [rax]
mov	qword ptr [rcx + 0x18], r9
ret	
ret	
nop	
nop	
nop	
push	rbp
push	rbx
sub	rsp, 0x48
lea	rbp, [rsp + 0x40]
lea	r8, [rip + 0xa80de]
lea	rax, [rbp - 8]
lea	r9, [rbp - 0xc]
mov	qword ptr [rsp + 0x20], rax
call	0x14000da10
call	0x14000da10
mov	edx, eax
and	edx, 7
cmp	edx, 6
ja	0x14000cfab
ja	0x14000cfab
lea	rcx, [rip + 0xb0fab]
movsxd	rdx, dword ptr [rcx + rdx*4]
add	rdx, rcx
jmp	rdx
jmp	rdx
nop	
mov	ebx, dword ptr [rbp - 4]
movd	xmm2, dword ptr [rbp - 8]
or	ebx, 0x7ff00000
movd	xmm4, ebx
punpckldq	xmm2, xmm4
movq	rbx, xmm2
test	al, 8
je	0x14000cfc4
je	0x14000cfc4
mov	rax, rbx
mov	ebx, ebx
shr	rax, 0x20
or	eax, 0x80000000
shl	rax, 0x20
or	rbx, rax
movq	xmm0, rbx
add	rsp, 0x48
pop	rbx
pop	rbp
ret	
ret	
xor	ebx, ebx
test	al, 8
je	0x14000cfc4
je	0x14000cfc4
jmp	0x14000cfaf
jmp	0x14000cfaf
nop	dword ptr [rax + rax]
mov	ebx, dword ptr [rbp - 0xc]
mov	edx, dword ptr [rbp - 4]
movd	xmm1, dword ptr [rbp - 8]
add	ebx, 0x433
and	edx, 0xffefffff
shl	ebx, 0x14
or	ebx, edx
movd	xmm3, ebx
punpckldq	xmm1, xmm3
movq	rbx, xmm1
test	al, 8
je	0x14000cfc4
je	0x14000cfc4
jmp	0x14000cfaf
jmp	0x14000cfaf
nop	
mov	rbx, qword ptr [rbp - 8]
test	al, 8
je	0x14000cfc4
je	0x14000cfc4
jmp	0x14000cfaf
jmp	0x14000cfaf
nop	word ptr [rax + rax]
movabs	rbx, 0x7ff0000000000000
test	al, 8
je	0x14000cfc4
je	0x14000cfc4
jmp	0x14000cfaf
jmp	0x14000cfaf
nop	dword ptr [rax + rax]
movabs	rbx, 0x7ff8000000000000
test	al, 8
je	0x14000cfc4
je	0x14000cfc4
jmp	0x14000cfaf
jmp	0x14000cfaf
nop	
push	rbp
mov	rbp, rsp
sub	rsp, 0x40
lea	r8, [rip + 0xa8001]
lea	rax, [rbp - 8]
lea	r9, [rbp - 4]
mov	qword ptr [rsp + 0x20], rax
call	0x14000da10
call	0x14000da10
mov	edx, eax
and	edx, 7
cmp	edx, 5
ja	0x14000d0e5
ja	0x14000d0e5
lea	rcx, [rip + 0xb0ece]
movsxd	rdx, dword ptr [rcx + rdx*4]
add	rdx, rcx
jmp	rdx
jmp	rdx
nop	dword ptr [rax + rax]
mov	ecx, dword ptr [rbp - 4]
lea	edx, [rcx + 0x96]
mov	ecx, dword ptr [rbp - 8]
shl	edx, 0x17
and	ecx, 0x7fffff
or	edx, ecx
mov	ecx, edx
or	ecx, 0x80000000
test	al, 8
cmovne	edx, ecx
movd	xmm0, edx
add	rsp, 0x40
pop	rbp
ret	
ret	
nop	
mov	edx, 0x7fc00000
jmp	0x14000d0a7
jmp	0x14000d0a7
nop	word ptr [rax + rax]
mov	edx, 0x7f800000
jmp	0x14000d0a7
jmp	0x14000d0a7
nop	word ptr [rax + rax]
mov	edx, dword ptr [rbp - 8]
jmp	0x14000d0a7
jmp	0x14000d0a7
xor	edx, edx
jmp	0x14000d0a7
jmp	0x14000d0a7
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rbx
sub	rsp, 0x58
lea	rbp, [rsp + 0x50]
lea	rax, [rbp - 0x18]
fldz	
lea	r9, [rbp - 0x1c]
mov	rbx, rcx
mov	qword ptr [rsp + 0x20], rax
mov	rcx, rdx
mov	rdx, r8
lea	r8, [rip + 0xa7f66]
fstp	xword ptr [rbp - 0x10]
call	0x14000da10
call	0x14000da10
mov	edx, eax
and	edx, 7
cmp	edx, 5
ja	0x14000d156
ja	0x14000d156
lea	rcx, [rip + 0xb0e3d]
movsxd	rdx, dword ptr [rcx + rdx*4]
add	rdx, rcx
jmp	rdx
jmp	rdx
nop	dword ptr [rax]
movzx	ecx, word ptr [rbp - 0x1c]
lea	edx, [rcx + 0x403e]
mov	word ptr [rbp - 8], dx
mov	rdx, qword ptr [rbp - 0x18]
mov	qword ptr [rbp - 0x10], rdx
test	al, 8
je	0x14000d160
je	0x14000d160
or	word ptr [rbp - 8], 0x8000
fld	xword ptr [rbp - 0x10]
mov	rax, rbx
fstp	xword ptr [rbx]
add	rsp, 0x58
pop	rbx
pop	rbp
ret	
ret	
nop	
mov	dword ptr [rbp - 0xa], 0x7fff8000
test	al, 8
je	0x14000d160
je	0x14000d160
jmp	0x14000d15a
jmp	0x14000d15a
nop	dword ptr [rax]
mov	dword ptr [rbp - 0xa], 0x7fffc000
test	al, 8
je	0x14000d160
je	0x14000d160
jmp	0x14000d15a
jmp	0x14000d15a
nop	
nop	
nop	
push	rbp
push	rbx
sub	rsp, 0x48
lea	rbp, [rsp + 0x40]
mov	ebx, 0xffffffff
cmp	ecx, -1
je	0x14000d1e2
je	0x14000d1e2
mov	eax, 0xffffffff
mov	byte ptr [rbp - 3], cl
mov	word ptr [rbp - 2], ax
call	0x140015868
call	0x140015868
mov	r9d, 1
lea	r8, [rbp - 3]
mov	dword ptr [rsp + 0x28], 1
mov	ecx, eax
lea	rax, [rbp - 2]
mov	edx, 8
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [rip + 0xd924a]
call	qword ptr [rip + 0xd924a]
test	eax, eax
jne	0x14000d1f0
jne	0x14000d1f0
mov	eax, ebx
add	rsp, 0x48
pop	rbx
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
movzx	ebx, word ptr [rbp - 2]
mov	eax, ebx
add	rsp, 0x48
pop	rbx
pop	rbp
ret	
ret	
nop	
nop	
nop	
push	rbp
mov	rbp, rsp
sub	rsp, 0x50
mov	word ptr [rbp - 6], cx
mov	dword ptr [rbp - 4], 0
call	0x140015868
call	0x140015868
xor	edx, edx
mov	r9d, 1
mov	qword ptr [rsp + 0x30], 0
mov	ecx, eax
lea	rax, [rbp - 4]
mov	dword ptr [rsp + 0x28], 1
lea	r8, [rbp - 6]
mov	qword ptr [rsp + 0x38], rax
lea	rax, [rbp - 7]
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [rip + 0xd9271]
call	qword ptr [rip + 0xd9271]
test	eax, eax
je	0x14000d268
je	0x14000d268
mov	eax, dword ptr [rbp - 4]
test	eax, eax
jne	0x14000d268
jne	0x14000d268
movsx	eax, byte ptr [rbp - 7]
add	rsp, 0x50
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	eax, 0xffffffff
jmp	0x14000d25e
jmp	0x14000d25e
nop	
push	rbp
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rbp, [rsp + 0x20]
lea	r12, [rip + 0xb0d7a]
xor	ebx, ebx
mov	rsi, r12
mov	rdi, rcx
nop	
mov	rdx, qword ptr [rsi]
mov	rcx, rdi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x14000d2c0
je	0x14000d2c0
add	ebx, 1
add	rsi, 0x10
cmp	ebx, 0xb
jne	0x14000d290
jne	0x14000d290
xor	eax, eax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
movsxd	rbx, ebx
shl	rbx, 4
movzx	eax, word ptr [r12 + rbx + 8]
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x140015918
jmp	0x140015918
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rsi
push	rbx
sub	rsp, 0x40
lea	rbp, [rsp + 0x40]
mov	rsi, rcx
mov	rbx, rdx
cmp	r8d, 1
je	0x14000d330
je	0x14000d330
cmp	r8d, 2
je	0x14000d350
je	0x14000d350
test	r8d, r8d
jne	0x14000d36d
jne	0x14000d36d
lea	rdx, [rbp - 8]
mov	rcx, rsi
mov	qword ptr [rbp - 8], rbx
call	0x140015948
call	0x140015948
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rbp - 8]
mov	qword ptr [rbp - 0x18], rdx
call	0x140015910
call	0x140015910
test	eax, eax
jne	0x14000d378
jne	0x14000d378
mov	rdx, qword ptr [rbp - 0x18]
add	rbx, qword ptr [rbp - 8]
jmp	0x14000d317
jmp	0x14000d317
nop	dword ptr [rax + rax]
call	0x140015908
call	0x140015908
mov	rcx, rsi
call	0x1400158b8
call	0x1400158b8
mov	ecx, eax
call	0x1400158b0
call	0x1400158b0
lea	rdx, [rbp - 8]
add	rbx, rax
jmp	0x14000d317
jmp	0x14000d317
call	0x1400158a8
call	0x1400158a8
mov	dword ptr [rax], 0x16
mov	eax, 0xffffffff
jmp	0x14000d323
jmp	0x14000d323
nop	
push	rbp
mov	rbp, rsp
sub	rsp, 0x30
lea	rdx, [rbp - 8]
call	0x140015910
call	0x140015910
test	eax, eax
jne	0x14000d3a0
jne	0x14000d3a0
mov	rax, qword ptr [rbp - 8]
add	rsp, 0x30
pop	rbp
ret	
ret	
nop	
mov	rax, 0xffffffffffffffff
jmp	0x14000d399
jmp	0x14000d399
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x1400158d0
jmp	0x1400158d0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rsi
push	rbx
sub	rsp, 0x30
lea	rbp, [rsp + 0x30]
mov	rsi, rcx
test	rdx, rdx
je	0x14000d408
je	0x14000d408
mov	qword ptr [rsp + 0x20], r9
lea	rbx, [rdx - 1]
mov	r9, r8
mov	rdx, rcx
mov	r8d, ebx
xor	ecx, ecx
call	0x140011010
call	0x140011010
mov	edx, ebx
cmp	eax, ebx
cmovle	edx, eax
movsxd	rdx, edx
mov	byte ptr [rsi + rdx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	qword ptr [rsp + 0x20], r9
mov	rdx, rcx
mov	r9, r8
xor	ecx, ecx
xor	r8d, r8d
call	0x140011010
call	0x140011010
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rbx
sub	rsp, 0x38
lea	rbp, [rsp + 0x30]
mov	qword ptr [rsp + 0x20], r8
mov	rbx, rcx
mov	r9, rdx
xor	r8d, r8d
mov	rdx, rcx
mov	ecx, 0x4000
call	0x140011010
call	0x140011010
movsxd	rdx, eax
mov	byte ptr [rbx + rdx], 0
add	rsp, 0x38
pop	rbx
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rsi
push	rbx
sub	rsp, 0x20
lea	rbp, [rsp + 0x20]
movsxd	r9, dword ptr [rcx + 0x14]
mov	r8, r9
lea	rax, [rcx + 0x18]
mov	rbx, rcx
lea	rcx, [rax + r9*4]
jmp	0x14000d4a0
jmp	0x14000d4a0
add	rax, 4
mov	dword ptr [rax - 4], 0
cmp	rax, rcx
jae	0x14000d4c0
jae	0x14000d4c0
mov	edx, dword ptr [rax]
cmp	edx, -1
je	0x14000d490
je	0x14000d490
add	edx, 1
mov	dword ptr [rax], edx
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
cmp	r8d, dword ptr [rbx + 0xc]
jge	0x14000d4e8
jge	0x14000d4e8
add	r8d, 1
mov	rax, rbx
mov	dword ptr [rbx + 0x14], r8d
mov	dword ptr [rbx + r9*4 + 0x18], 1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, dword ptr [rbx + 8]
lea	ecx, [rax + 1]
call	0x140014300
call	0x140014300
lea	rdx, [rbx + 0x10]
mov	rsi, rax
lea	rcx, [rax + 0x10]
movsxd	rax, dword ptr [rbx + 0x14]
lea	r8, [rax*4 + 8]
call	0x140015998
call	0x140015998
mov	rcx, rbx
mov	rbx, rsi
call	0x140014400
call	0x140014400
movsxd	r9, dword ptr [rsi + 0x14]
mov	r8, r9
jmp	0x14000d4c6
jmp	0x14000d4c6
nop	word ptr cs:[rax + rax]
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	rbp, [rsp + 0x40]
mov	rsi, rdx
mov	rdi, r8
lea	rdx, [rbp - 4]
mov	r12, r9
lea	r8, [rbp - 8]
call	0x140014d50
call	0x140014d50
mov	ecx, dword ptr [rbp - 8]
mov	r14d, dword ptr [rsi]
mov	rbx, rax
mov	eax, dword ptr [rbp - 4]
mov	edx, ecx
sub	edx, r14d
add	eax, edx
mov	dword ptr [rbp - 8], edx
mov	dword ptr [rbp - 4], eax
test	edx, edx
jle	0x14000d650
jle	0x14000d650
cmp	r14d, 0x35
je	0x14000d618
je	0x14000d618
cmp	dword ptr [rbp + 0x78], 1
je	0x14000d780
je	0x14000d780
cmp	dword ptr [rbp + 0x78], 2
jne	0x14000d750
jne	0x14000d750
mov	rcx, rbx
call	0x140015110
call	0x140015110
mov	edx, dword ptr [rbp - 8]
mov	rcx, rbx
mov	r13d, eax
call	0x140013bc0
call	0x140013bc0
mov	rcx, rbx
call	0x14000d470
call	0x14000d470
mov	edx, 0x20
mov	rbx, rax
mov	eax, r14d
and	eax, 0x1f
mov	ecx, dword ptr [rbx + 0x14]
sub	edx, eax
test	eax, eax
cmovne	eax, edx
lea	edx, [rcx - 1]
movsxd	rdx, edx
bsr	edx, dword ptr [rbx + rdx*4 + 0x18]
xor	edx, 0x1f
cmp	edx, eax
je	0x14000d8b0
je	0x14000d8b0
test	r13d, r13d
jne	0x14000d5f3
jne	0x14000d5f3
mov	r13d, dword ptr [rbx + 0x18]
and	r13d, 1
mov	edx, 1
mov	rcx, rbx
call	0x140013bc0
call	0x140013bc0
mov	eax, dword ptr [rbp - 4]
mov	r9d, 0x20
add	eax, 1
mov	dword ptr [rbp - 4], eax
jmp	0x14000d66a
jmp	0x14000d66a
nop	dword ptr [rax]
mov	ecx, dword ptr [rbp + 0x70]
xor	r15d, r15d
test	ecx, ecx
je	0x14000d62c
je	0x14000d62c
cmp	dword ptr [rsi + 0xc], 1
je	0x14000d850
je	0x14000d850
mov	rcx, rbx
call	0x140014400
call	0x140014400
mov	eax, r15d
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	r8d, dword ptr [rbp + 0x70]
xor	r15d, r15d
test	r8d, r8d
je	0x14000d62c
je	0x14000d62c
test	edx, edx
jne	0x14000d7b8
jne	0x14000d7b8
xor	r13d, r13d
xor	r9d, r9d
mov	edx, dword ptr [rsi + 4]
cmp	edx, eax
jle	0x14000d738
jle	0x14000d738
mov	r10d, edx
mov	dword ptr [rbp - 4], edx
sub	r10d, eax
cmp	r14d, r10d
jl	0x14000d6f8
jl	0x14000d6f8
mov	r15d, dword ptr [rsi + 0x10]
test	r15d, r15d
jne	0x14000d6f8
jne	0x14000d6f8
lea	edx, [r10 - 1]
test	edx, edx
jle	0x14000d69d
jle	0x14000d69d
test	r13d, r13d
je	0x14000d888
je	0x14000d888
mov	eax, r13d
or	eax, dword ptr [rbp + 0x70]
mov	dword ptr [rbp - 0x14], r9d
je	0x14000d62c
je	0x14000d62c
mov	eax, edx
mov	ecx, edx
mov	esi, 1
mov	edx, r10d
sar	eax, 5
shl	esi, cl
mov	rcx, rbx
cdqe	
and	esi, dword ptr [rbx + rax*4 + 0x18]
call	0x140013bc0
call	0x140013bc0
mov	rax, qword ptr [rbp + 0x80]
test	esi, esi
mov	r9d, dword ptr [rbp - 0x14]
mov	dword ptr [rax], 2
jne	0x14000d8c0
jne	0x14000d8c0
test	r13d, r13d
mov	esi, 0x50
mov	edx, dword ptr [rbp - 4]
cmove	esi, r9d
jmp	0x14000d70e
jmp	0x14000d70e
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbp + 0x80]
mov	dword ptr [rbx + 0x14], 0
xor	esi, esi
mov	dword ptr [rax], 0x50
mov	dword ptr [rdi], edx
mov	r8, rbx
mov	edx, r14d
mov	rcx, r12
mov	r15d, 1
call	0x140015090
call	0x140015090
mov	rax, qword ptr [rbp + 0x80]
or	dword ptr [rax], esi
jmp	0x14000d62c
jmp	0x14000d62c
nop	word ptr [rax + rax]
mov	edx, dword ptr [rsi + 8]
cmp	edx, eax
jl	0x14000d7d0
jl	0x14000d7d0
mov	esi, r9d
mov	edx, eax
jmp	0x14000d70e
jmp	0x14000d70e
nop	word ptr [rax + rax]
mov	ecx, edx
sub	ecx, 1
jne	0x14000d800
jne	0x14000d800
mov	eax, dword ptr [rbp + 0x70]
xor	r15d, r15d
test	eax, eax
je	0x14000d62c
je	0x14000d62c
mov	eax, dword ptr [rbx + 0x18]
shr	eax, 1
and	eax, 1
mov	r15d, eax
jmp	0x14000d813
jmp	0x14000d813
nop	dword ptr [rax]
mov	rcx, rbx
call	0x140015110
call	0x140015110
xor	r9d, r9d
mov	edx, dword ptr [rbp - 8]
mov	rcx, rbx
test	eax, eax
mov	r13d, eax
setne	r9b
shl	r9d, 4
mov	dword ptr [rbp - 0x14], r9d
call	0x140013bc0
call	0x140013bc0
mov	r9d, dword ptr [rbp - 0x14]
mov	eax, dword ptr [rbp - 4]
jmp	0x14000d66a
jmp	0x14000d66a
nop	dword ptr [rax + rax]
mov	edx, r14d
sub	edx, ecx
mov	rcx, rbx
call	0x1400148f0
call	0x1400148f0
mov	rbx, rax
mov	eax, dword ptr [rbp - 4]
jmp	0x14000d664
jmp	0x14000d664
mov	rax, qword ptr [rbp + 0x80]
add	edx, 1
xor	esi, esi
mov	dword ptr [rbp - 4], edx
mov	dword ptr [rax], 0xa3
call	0x1400158a8
call	0x1400158a8
mov	dword ptr [rax], 0x22
mov	edx, dword ptr [rbp - 4]
mov	dword ptr [rbx + 0x14], 0
jmp	0x14000d70e
jmp	0x14000d70e
nop	
mov	eax, ecx
sar	eax, 5
cdqe	
mov	eax, dword ptr [rbx + rax*4 + 0x18]
shr	eax, cl
and	eax, 1
mov	r15d, eax
mov	rcx, rbx
call	0x140015110
call	0x140015110
xor	r9d, r9d
mov	edx, dword ptr [rbp - 8]
mov	rcx, rbx
test	eax, eax
mov	r13d, eax
setne	r9b
shl	r9d, 4
mov	dword ptr [rbp - 0x14], r9d
call	0x140013bc0
call	0x140013bc0
test	r15d, r15d
mov	r9d, dword ptr [rbp - 0x14]
je	0x14000d7ab
je	0x14000d7ab
jmp	0x14000d5b0
jmp	0x14000d5b0
nop	dword ptr [rax]
mov	rcx, rbx
call	0x140015110
call	0x140015110
xor	r9d, r9d
mov	edx, dword ptr [rbp - 8]
mov	rcx, rbx
test	eax, eax
mov	r13d, eax
setne	r9b
shl	r9d, 4
mov	dword ptr [rbp - 0x14], r9d
call	0x140013bc0
call	0x140013bc0
mov	eax, dword ptr [rbp - 4]
mov	r9d, dword ptr [rbp - 0x14]
jmp	0x14000d66a
jmp	0x14000d66a
nop	dword ptr [rax + rax]
mov	rcx, rbx
mov	dword ptr [rbp - 0x1c], r9d
mov	dword ptr [rbp - 0x18], r10d
mov	dword ptr [rbp - 0x14], edx
call	0x140015110
call	0x140015110
mov	r9d, dword ptr [rbp - 0x1c]
mov	r10d, dword ptr [rbp - 0x18]
mov	edx, dword ptr [rbp - 0x14]
mov	r13d, eax
jmp	0x14000d69d
jmp	0x14000d69d
nop	
mov	eax, dword ptr [rbp - 4]
mov	r9d, 0x20
jmp	0x14000d66a
jmp	0x14000d66a
nop	
mov	rcx, rbx
mov	esi, 0x60
call	0x14000d470
call	0x14000d470
mov	edx, dword ptr [rbp - 4]
mov	rbx, rax
jmp	0x14000d70e
jmp	0x14000d70e
nop	dword ptr [rax + rax]
movsxd	rdx, dword ptr [rcx + 0x14]
lea	rax, [rcx + 0x18]
lea	rcx, [rax + rdx*4]
jmp	0x14000d900
jmp	0x14000d900
nop	
add	rax, 4
mov	dword ptr [rax - 4], 0xffffffff
cmp	rax, rcx
jae	0x14000d90b
jae	0x14000d90b
mov	edx, dword ptr [rax]
test	edx, edx
je	0x14000d8f0
je	0x14000d8f0
sub	edx, 1
mov	dword ptr [rax], edx
ret	
ret	
nop	dword ptr [rax]
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rsp + 0x20]
lea	edi, [rdx + 0x1f]
mov	rbx, rcx
mov	esi, edx
sar	edi, 5
cmp	dword ptr [rcx + 8], edi
jl	0x14000d9f8
jl	0x14000d9f8
mov	eax, esi
sar	eax, 5
and	esi, 0x1f
jne	0x14000d990
jne	0x14000d990
mov	dword ptr [rbx + 0x14], eax
lea	rcx, [rbx + 0x18]
cdqe	
lea	rdx, [rcx + rax*4]
cmp	rcx, rdx
jae	0x14000d97a
jae	0x14000d97a
lea	rax, [rdx - 1]
sub	rax, rcx
shr	rax, 2
lea	r8, [rax*4 + 4]
lea	rax, [rbx + 0x19]
cmp	rdx, rax
mov	eax, 4
mov	edx, 0xff
cmovb	r8, rax
call	0x1400159a8
call	0x1400159a8
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
add	eax, 1
lea	r9, [rbx + 0x18]
mov	dword ptr [rbx + 0x14], eax
cdqe	
lea	rdx, [r9 + rax*4]
cmp	r9, rdx
jae	0x14000d9de
jae	0x14000d9de
lea	rax, [rdx - 1]
mov	rcx, r9
sub	rax, r9
shr	rax, 2
lea	rdi, [rax*4 + 4]
lea	rax, [rbx + 0x19]
cmp	rdx, rax
mov	eax, 4
mov	edx, 0xff
cmovb	rdi, rax
mov	r8, rdi
call	0x1400159a8
call	0x1400159a8
mov	r9, rax
add	r9, rdi
mov	ecx, 0x20
mov	rax, rbx
sub	ecx, esi
shr	dword ptr [r9 - 4], cl
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
call	0x140014400
call	0x140014400
mov	ecx, edi
call	0x140014300
call	0x140014300
mov	rbx, rax
jmp	0x14000d931
jmp	0x14000d931
nop	dword ptr [rax]
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x128
lea	rbp, [rsp + 0xd0]
movups	xmmword ptr [rbp], xmm6
movups	xmmword ptr [rbp + 0x10], xmm7
movups	xmmword ptr [rbp + 0x20], xmm8
movups	xmmword ptr [rbp + 0x30], xmm9
movups	xmmword ptr [rbp + 0x40], xmm10
mov	r12, rcx
mov	r13, r8
mov	qword ptr [rbp + 0xa8], rdx
mov	qword ptr [rbp + 0xb8], r9
call	0x140015978
call	0x140015978
mov	r14, qword ptr [rax]
mov	rcx, r14
call	0x140015a08
call	0x140015a08
mov	dword ptr [rbp - 0x1c], 0
mov	r15, rax
mov	qword ptr [rbp - 8], 0
mov	eax, dword ptr [r13]
mov	dword ptr [rbp - 0x3c], eax
mov	rax, r12
mov	qword ptr [rbp - 0x10], rax
movzx	r8d, byte ptr [rax]
mov	rsi, rax
cmp	r8b, 0x2d
ja	0x14000dab0
ja	0x14000dab0
lea	rcx, [rip + 0xb0632]
movzx	edx, r8b
movsxd	rdx, dword ptr [rcx + rdx*4]
add	rdx, rcx
jmp	rdx
jmp	rdx
nop	word ptr [rax + rax]
mov	dword ptr [rbp - 0x5c], 0
xor	r10d, r10d
cmp	r8b, 0x30
je	0x14000dda8
je	0x14000dda8
mov	eax, dword ptr [r13 + 0x10]
mov	rcx, rsi
mov	edi, 0
mov	ebx, 0
mov	dword ptr [rbp - 0x78], eax
movsx	eax, r8b
lea	edx, [rax - 0x30]
cmp	edx, 9
mov	edx, 0
jbe	0x14000db18
jbe	0x14000db18
jmp	0x14000dba0
jmp	0x14000dba0
nop	
lea	r8d, [rdi + rdi*4]
lea	edi, [rax + r8*2 - 0x30]
add	rcx, 1
add	ebx, 1
mov	qword ptr [rbp - 0x10], rcx
movsx	eax, byte ptr [rcx]
lea	r9d, [rax - 0x30]
mov	r8d, eax
cmp	r9d, 9
ja	0x14000dba0
ja	0x14000dba0
cmp	ebx, 8
jle	0x14000daf0
jle	0x14000daf0
cmp	ebx, 0xf
jg	0x14000daf9
jg	0x14000daf9
lea	edx, [rdx + rdx*4]
lea	edx, [rax + rdx*2 - 0x30]
jmp	0x14000daf9
jmp	0x14000daf9
mov	dword ptr [rbp - 0x5c], 0
lea	rsi, [rax + 1]
mov	qword ptr [rbp - 0x10], rsi
movzx	r8d, byte ptr [rax + 1]
test	r8b, r8b
jne	0x14000dab7
jne	0x14000dab7
cmp	qword ptr [rbp + 0xa8], 0
je	0x14000db5c
je	0x14000db5c
mov	rax, qword ptr [rbp + 0xa8]
mov	qword ptr [rax], r12
mov	eax, 6
movups	xmm6, xmmword ptr [rbp]
movups	xmm7, xmmword ptr [rbp + 0x10]
movups	xmm8, xmmword ptr [rbp + 0x20]
movups	xmm9, xmmword ptr [rbp + 0x30]
movups	xmm10, xmmword ptr [rbp + 0x40]
add	rsp, 0x128
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax]
add	rax, 1
jmp	0x14000da82
jmp	0x14000da82
nop	dword ptr [rax]
cmp	byte ptr [r14], r8b
je	0x14000dfa8
je	0x14000dfa8
mov	dword ptr [rbp - 0x48], 0
mov	r11d, ebx
xor	r14d, r14d
mov	dword ptr [rbp - 0x40], 0
mov	ecx, eax
and	ecx, 0xffffffdf
cmp	ecx, 0x45
je	0x14000dc88
je	0x14000dc88
mov	dword ptr [rbp - 0x38], 0
test	r11d, r11d
jne	0x14000de38
jne	0x14000de38
or	r10d, r14d
jne	0x14000dde8
jne	0x14000dde8
mov	edx, dword ptr [rbp - 0x40]
test	edx, edx
jne	0x14000df90
jne	0x14000df90
cmp	eax, 0x69
je	0x14000eeb0
je	0x14000eeb0
jg	0x14000df87
jg	0x14000df87
cmp	eax, 0x49
je	0x14000eeb0
je	0x14000eeb0
cmp	eax, 0x4e
jne	0x14000df90
jne	0x14000df90
lea	rbx, [rbp - 0x10]
lea	rdx, [rip + 0xb04ae]
mov	rcx, rbx
call	0x140015040
call	0x140015040
test	eax, eax
je	0x14000df90
je	0x14000df90
mov	eax, dword ptr [r13 + 8]
mov	r8, qword ptr [rbp - 8]
mov	dword ptr [rbp - 0x1c], 4
mov	rsi, qword ptr [rbp + 0xb8]
add	eax, 1
mov	dword ptr [rsi], eax
mov	rax, qword ptr [rbp - 0x10]
cmp	byte ptr [rax], 0x28
jne	0x14000ddec
jne	0x14000ddec
mov	r8, qword ptr [rbp + 0xc0]
mov	rdx, r13
mov	rcx, rbx
call	0x140013db0
call	0x140013db0
mov	dword ptr [rbp - 0x1c], eax
mov	eax, dword ptr [r13 + 8]
mov	rsi, qword ptr [rbp + 0xb8]
mov	r8, qword ptr [rbp - 8]
add	eax, 1
mov	dword ptr [rsi], eax
jmp	0x14000ddec
jmp	0x14000ddec
nop	dword ptr [rax]
mov	eax, r11d
or	eax, r14d
or	eax, r10d
je	0x14000df90
je	0x14000df90
mov	r12, qword ptr [rbp - 0x10]
lea	rax, [r12 + 1]
mov	qword ptr [rbp - 0x10], rax
movsx	eax, byte ptr [r12 + 1]
cmp	al, 0x2b
je	0x14000edc0
je	0x14000edc0
cmp	al, 0x2d
jne	0x14000e668
jne	0x14000e668
mov	dword ptr [rbp - 0x4c], 1
lea	rax, [r12 + 2]
mov	qword ptr [rbp - 0x10], rax
movsx	eax, byte ptr [r12 + 2]
lea	r9d, [rax - 0x30]
cmp	r9d, 9
ja	0x14000edb0
ja	0x14000edb0
mov	rcx, qword ptr [rbp - 0x10]
cmp	eax, 0x30
jne	0x14000dd1d
jne	0x14000dd1d
lea	r8, [rcx + 1]
nop	dword ptr [rax + rax]
mov	qword ptr [rbp - 0x10], r8
movsx	eax, byte ptr [r8]
mov	rcx, r8
lea	r8, [r8 + 1]
cmp	eax, 0x30
je	0x14000dcf0
je	0x14000dcf0
lea	r8d, [rax - 0x31]
mov	dword ptr [rbp - 0x38], 0
cmp	r8d, 8
ja	0x14000dbd2
ja	0x14000dbd2
lea	r9d, [rax - 0x30]
lea	rax, [rcx + 1]
mov	qword ptr [rbp - 0x10], rax
movsx	eax, byte ptr [rcx + 1]
lea	r8d, [rax - 0x30]
cmp	r8d, 9
ja	0x14000ef6e
ja	0x14000ef6e
mov	qword ptr [rbp - 0x38], rcx
lea	r8, [rcx + 2]
mov	dword ptr [rbp - 0x50], ebx
nop	word ptr [rax + rax]
lea	ecx, [r9 + r9*4]
mov	qword ptr [rbp - 0x10], r8
mov	rbx, r8
add	r8, 1
lea	r9d, [rax + rcx*2 - 0x30]
movsx	eax, byte ptr [r8 - 1]
lea	ecx, [rax - 0x30]
cmp	ecx, 9
jbe	0x14000dd48
jbe	0x14000dd48
mov	rcx, qword ptr [rbp - 0x38]
mov	r8, rbx
mov	dword ptr [rbp - 0x38], 0x4e1f
mov	ebx, dword ptr [rbp - 0x50]
sub	r8, rcx
cmp	r8, 8
jle	0x14000ef6e
jle	0x14000ef6e
mov	r9d, dword ptr [rbp - 0x38]
mov	r8d, dword ptr [rbp - 0x4c]
mov	ecx, r9d
neg	ecx
test	r8d, r8d
cmove	ecx, r9d
mov	dword ptr [rbp - 0x38], ecx
jmp	0x14000dbd2
jmp	0x14000dbd2
nop	dword ptr [rax + rax]
movzx	edx, byte ptr [rsi + 1]
lea	rax, [rsi + 1]
and	edx, 0xffffffdf
cmp	dl, 0x58
je	0x14000edf0
je	0x14000edf0
nop	dword ptr [rax]
mov	qword ptr [rbp - 0x10], rax
mov	rsi, rax
movzx	r8d, byte ptr [rax]
lea	rax, [rax + 1]
cmp	r8b, 0x30
je	0x14000ddc0
je	0x14000ddc0
mov	r10d, 1
test	r8b, r8b
jne	0x14000dac4
jne	0x14000dac4
nop	dword ptr [rax]
mov	r8, qword ptr [rbp - 8]
cmp	qword ptr [rbp + 0xa8], 0
je	0x14000de04
je	0x14000de04
mov	rax, qword ptr [rbp - 0x10]
mov	rsi, qword ptr [rbp + 0xa8]
mov	qword ptr [rsi], rax
mov	ecx, dword ptr [rbp - 0x5c]
test	ecx, ecx
je	0x14000de0f
je	0x14000de0f
or	dword ptr [rbp - 0x1c], 8
test	r8, r8
je	0x14000de2c
je	0x14000de2c
mov	rcx, qword ptr [rbp + 0xc0]
mov	edx, dword ptr [rbp - 0x3c]
call	0x140015090
call	0x140015090
mov	rcx, qword ptr [rbp - 8]
call	0x140014400
call	0x140014400
mov	eax, dword ptr [rbp - 0x1c]
jmp	0x14000db61
jmp	0x14000db61
nop	dword ptr [rax]
mov	ecx, dword ptr [rbp - 0x48]
mov	eax, dword ptr [rbp - 0x38]
mov	dword ptr [rbp - 0x1c], 1
mov	r10d, dword ptr [rbp - 0x5c]
sub	eax, ecx
mov	dword ptr [rbp - 0x64], eax
mov	eax, dword ptr [r13 + 0xc]
and	eax, 3
mov	ecx, eax
sub	ecx, r10d
mov	dword ptr [rbp - 0x60], ecx
cmp	eax, 2
je	0x14000de79
je	0x14000de79
lea	ecx, [r10 + 1]
mov	dword ptr [rbp - 0x60], ecx
cmp	eax, 3
je	0x14000de79
je	0x14000de79
test	eax, eax
sete	al
movzx	eax, al
mov	dword ptr [rbp - 0x60], eax
mov	eax, edi
pxor	xmm0, xmm0
test	ebx, ebx
mov	r14d, 0x10
cvtsi2sd	xmm0, rax
cmove	ebx, r11d
cmp	r11d, r14d
cmovle	r14d, r11d
movq	r12, xmm0
cmp	r11d, 9
jle	0x14000dec6
jle	0x14000dec6
mov	rcx, qword ptr [rip + 0xb1427]
lea	eax, [r14 - 9]
pxor	xmm1, xmm1
cdqe	
cvtsi2sd	xmm1, rdx
mulsd	xmm0, qword ptr [rcx + rax*8]
addsd	xmm0, xmm1
movq	r12, xmm0
cmp	dword ptr [rbp - 0x3c], 0x35
jg	0x14000e038
jg	0x14000e038
cmp	r11d, 0xf
jg	0x14000e038
jg	0x14000e038
mov	eax, dword ptr [rbp - 0x64]
test	eax, eax
je	0x14000ee66
je	0x14000ee66
jle	0x14000e7ff
jle	0x14000e7ff
movsxd	rax, dword ptr [rbp - 0x64]
cmp	eax, 0x16
jg	0x14000ef27
jg	0x14000ef27
lea	rdx, [rip + 0xb02a1]
mov	r8d, dword ptr [rdx + rax*4]
test	r12d, r12d
jne	0x14000f1b4
jne	0x14000f1b4
mov	rdx, r12
mov	ecx, 0x15
shr	rdx, 0x20
or	edx, 0x100000
tzcnt	edx, edx
sub	ecx, edx
mov	rdx, qword ptr [rip + 0xb13a5]
movq	xmm0, r12
add	r8d, ecx
mov	dword ptr [rbp - 0x40], r11d
mulsd	xmm0, qword ptr [rdx + rax*8]
lea	rax, [rbp - 0x1c]
mov	qword ptr [rsp + 0x30], rax
mov	eax, dword ptr [rbp - 0x60]
mov	dword ptr [rsp + 0x28], eax
xor	eax, eax
cmp	r8d, 0x35
setle	al
mov	dword ptr [rsp + 0x20], eax
movq	r12, xmm0
mov	r9, qword ptr [rbp + 0xc0]
mov	r8, qword ptr [rbp + 0xb8]
mov	rdx, r13
call	0x14000d530
call	0x14000d530
mov	r11d, dword ptr [rbp - 0x40]
test	eax, eax
jne	0x14000dde8
jne	0x14000dde8
xor	eax, eax
jmp	0x14000e03b
jmp	0x14000e03b
cmp	eax, 0x6e
je	0x14000dc10
je	0x14000dc10
mov	dword ptr [rbp - 0x1c], 6
mov	r8, qword ptr [rbp - 8]
mov	qword ptr [rbp - 0x10], r12
jmp	0x14000ddec
jmp	0x14000ddec
nop	dword ptr [rax]
movzx	r9d, byte ptr [r14 + 1]
mov	r8d, 1
test	r9b, r9b
je	0x14000dfd8
je	0x14000dfd8
nop	dword ptr [rax + rax]
cmp	byte ptr [rcx + r8], r9b
jne	0x14000dba9
jne	0x14000dba9
add	r8, 1
movzx	r9d, byte ptr [r14 + r8]
test	r9b, r9b
jne	0x14000dfc0
jne	0x14000dfc0
add	rcx, r8
mov	qword ptr [rbp - 0x10], rcx
movsx	eax, byte ptr [rcx]
test	ebx, ebx
je	0x14000e767
je	0x14000e767
lea	ecx, [rax - 0x30]
mov	dword ptr [rbp - 0x48], 0
mov	r11d, ebx
xor	r14d, r14d
cmp	ecx, 9
ja	0x14000e027
ja	0x14000e027
mov	dword ptr [rbp - 0x38], ecx
mov	r9, qword ptr [rbp - 0x10]
add	r14d, 1
test	ecx, ecx
jne	0x14000f0d6
jne	0x14000f0d6
lea	rax, [r9 + 1]
mov	qword ptr [rbp - 0x10], rax
movsx	eax, byte ptr [r9 + 1]
lea	ecx, [rax - 0x30]
cmp	ecx, 9
jbe	0x14000dfff
jbe	0x14000dfff
mov	dword ptr [rbp - 0x40], 1
jmp	0x14000dbbd
jmp	0x14000dbbd
nop	dword ptr [rax + rax]
mov	eax, dword ptr [rbp - 0x64]
mov	edx, r11d
sub	edx, r14d
lea	r14d, [rdx + rax]
test	r14d, r14d
jle	0x14000e540
jle	0x14000e540
mov	eax, r14d
and	eax, 0xf
je	0x14000e06e
je	0x14000e06e
mov	rdx, qword ptr [rip + 0xb1273]
cdqe	
movq	xmm4, r12
mulsd	xmm4, qword ptr [rdx + rax*8]
movq	r12, xmm4
and	r14d, 0xfffffff0
jne	0x14000e678
jne	0x14000e678
movq	xmm0, r12
lea	rdx, [rbp - 0x14]
lea	r8, [rbp - 0x18]
mov	dword ptr [rbp - 0x40], r11d
call	0x140014d50
call	0x140014d50
mov	edx, dword ptr [rbp - 0x18]
mov	ecx, dword ptr [rbp - 0x3c]
add	r14d, dword ptr [rbp - 0x14]
mov	r11d, dword ptr [rbp - 0x40]
mov	qword ptr [rbp - 8], rax
mov	r12d, edx
mov	dword ptr [rbp - 0x14], r14d
sub	r12d, ecx
test	r12d, r12d
jle	0x14000e0cf
jle	0x14000e0cf
mov	edx, r12d
mov	rcx, rax
call	0x140013bc0
call	0x140013bc0
mov	r14d, dword ptr [rbp - 0x14]
mov	edx, dword ptr [rbp - 0x3c]
mov	r11d, dword ptr [rbp - 0x40]
add	r14d, r12d
mov	dword ptr [rbp - 0x18], edx
mov	dword ptr [rbp - 0x14], r14d
lea	eax, [r14 + rdx]
mov	ecx, eax
mov	eax, dword ptr [rbp - 0x3c]
sub	ecx, eax
mov	eax, dword ptr [r13 + 8]
mov	dword ptr [rbp - 0x84], ecx
add	eax, 1
cmp	eax, ecx
jl	0x14000ed78
jl	0x14000ed78
mov	r10d, dword ptr [r13 + 4]
cmp	ecx, r10d
jge	0x14000ee3b
jge	0x14000ee3b
mov	r12d, r14d
sub	r12d, r10d
test	r12d, r12d
jg	0x14000e7d6
jg	0x14000e7d6
je	0x14000e140
je	0x14000e140
add	r12d, edx
mov	rcx, qword ptr [rbp - 8]
mov	dword ptr [rbp - 0x18], r12d
test	r12d, r12d
jg	0x14000f156
jg	0x14000f156
cmp	r12d, -1
jl	0x14000ecc6
jl	0x14000ecc6
movabs	rax, 0x100000001
mov	dword ptr [rbp - 0x18], 1
mov	qword ptr [rcx + 0x14], rax
mov	r12d, dword ptr [rbp - 0x78]
mov	dword ptr [rbp - 0x14], r10d
test	r12d, r12d
je	0x14000ee47
je	0x14000ee47
mov	eax, dword ptr [rbp - 0x84]
mov	dword ptr [rbp - 0x40], 1
mov	dword ptr [rbp - 0x84], r10d
add	eax, 1
cmp	eax, r10d
jl	0x14000ec10
jl	0x14000ec10
mov	dword ptr [rsp + 0x20], r15d
mov	r9d, edi
mov	edx, ebx
mov	rcx, rsi
mov	r8d, r11d
mov	dword ptr [rbp - 0x50], r10d
call	0x140014ea0
call	0x140014ea0
mov	esi, dword ptr [rbp - 0x38]
xor	edx, edx
mov	r10d, dword ptr [rbp - 0x50]
movsd	xmm8, qword ptr [rip + 0xb0064]
mov	rdi, rax
mov	qword ptr [rbp - 0x70], rax
movsd	xmm9, qword ptr [rip + 0xb005c]
mov	eax, dword ptr [rbp - 0x48]
mov	dword ptr [rbp - 0x58], r10d
movq	xmm10, qword ptr [rip + 0xb0074]
mov	qword ptr [rbp + 0xb0], r13
sub	eax, esi
mov	esi, dword ptr [rbp - 0x64]
test	esi, esi
cmovs	edx, eax
mov	eax, 0
cmovns	eax, esi
xor	esi, esi
mov	dword ptr [rbp - 0x4c], edx
mov	dword ptr [rbp - 0x68], eax
mov	eax, dword ptr [rbp - 0x3c]
add	eax, 1
mov	dword ptr [rbp - 0x74], eax
lea	rax, [rdi + 0x10]
mov	qword ptr [rbp - 0x80], rax
nop	
mov	rdi, qword ptr [rbp - 0x70]
mov	ecx, dword ptr [rdi + 8]
call	0x140014300
call	0x140014300
mov	rdx, qword ptr [rbp - 0x80]
lea	rcx, [rax + 0x10]
mov	qword ptr [rbp - 0x48], rax
movsxd	rax, dword ptr [rdi + 0x14]
lea	r8, [rax*4 + 8]
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rbp - 8]
mov	ecx, dword ptr [rax + 8]
call	0x140014300
call	0x140014300
mov	rdx, qword ptr [rbp - 8]
lea	rcx, [rax + 0x10]
mov	r15, rax
movsxd	rax, dword ptr [rdx + 0x14]
add	rdx, 0x10
lea	r8, [rax*4 + 8]
call	0x140015998
call	0x140015998
mov	ebx, dword ptr [rbp - 0x18]
mov	r14d, dword ptr [rbp - 0x14]
mov	ecx, 1
call	0x140014530
call	0x140014530
mov	edi, ebx
lea	r12d, [r14 + rsi]
mov	qword ptr [rbp - 0x38], rax
sub	edi, esi
test	r12d, r12d
js	0x14000e940
js	0x14000e940
mov	eax, dword ptr [rbp - 0x4c]
mov	r13d, dword ptr [rbp - 0x68]
add	r12d, eax
lea	eax, [rbx + r14]
mov	ebx, dword ptr [rbp - 0x3c]
mov	edx, dword ptr [rbp - 0x74]
sub	eax, ebx
mov	ebx, dword ptr [rbp - 0x58]
sub	edx, edi
mov	ecx, eax
sub	ecx, ebx
add	ecx, edx
cmp	ebx, eax
cmovg	edx, ecx
lea	r14d, [r12 + rdx]
add	r13d, edx
cmp	r14d, r13d
mov	eax, r13d
cmovle	eax, r14d
cmp	eax, r12d
cmovg	eax, r12d
test	eax, eax
jle	0x14000e2b6
jle	0x14000e2b6
sub	r14d, eax
sub	r13d, eax
sub	r12d, eax
mov	eax, dword ptr [rbp - 0x4c]
test	eax, eax
jle	0x14000e2e5
jle	0x14000e2e5
mov	rcx, qword ptr [rbp - 0x38]
mov	edx, eax
call	0x140014760
call	0x140014760
mov	rdx, r15
mov	rcx, rax
mov	qword ptr [rbp - 0x38], rax
call	0x1400145f0
call	0x1400145f0
mov	rcx, r15
mov	rbx, rax
call	0x140014400
call	0x140014400
mov	r15, rbx
mov	edx, r14d
sub	edx, esi
test	edx, edx
jg	0x14000e910
jg	0x14000e910
jne	0x14000ebb0
jne	0x14000ebb0
mov	r11d, dword ptr [rbp - 0x64]
test	r11d, r11d
jg	0x14000e928
jg	0x14000e928
test	r13d, r13d
jle	0x14000e31a
jle	0x14000e31a
mov	rcx, qword ptr [rbp - 0x48]
mov	edx, r13d
call	0x1400148f0
call	0x1400148f0
mov	qword ptr [rbp - 0x48], rax
test	r12d, r12d
jle	0x14000e32f
jle	0x14000e32f
mov	rcx, qword ptr [rbp - 0x38]
mov	edx, r12d
call	0x1400148f0
call	0x1400148f0
mov	qword ptr [rbp - 0x38], rax
mov	rdx, qword ptr [rbp - 0x48]
mov	rcx, r15
call	0x140014a70
call	0x140014a70
cmp	dword ptr [rax + 0x14], 1
mov	rbx, rax
jg	0x14000e351
jg	0x14000e351
mov	r10d, dword ptr [rax + 0x18]
test	r10d, r10d
je	0x14000ee5a
je	0x14000ee5a
mov	r12d, dword ptr [rbx + 0x10]
mov	dword ptr [rbx + 0x10], 0
mov	rcx, rbx
mov	rdx, qword ptr [rbp - 0x38]
call	0x140014a20
call	0x140014a20
mov	esi, dword ptr [rbp - 0x60]
test	esi, esi
je	0x14000e850
je	0x14000e850
test	eax, eax
jg	0x14000e850
jg	0x14000e850
mov	eax, esi
and	eax, 1
mov	esi, eax
xor	esi, r12d
cmp	eax, r12d
je	0x14000f028
je	0x14000f028
test	r12d, r12d
jne	0x14000ebc8
jne	0x14000ebc8
mov	dword ptr [rbp - 0x1c], 0x11
mov	edx, dword ptr [rbp - 0x58]
cmp	dword ptr [rbp - 0x84], edx
je	0x14000e3dd
je	0x14000e3dd
mov	eax, dword ptr [rbp - 0x3c]
mov	r8, qword ptr [rbp - 8]
cmp	eax, 0x1f
jle	0x14000ef82
jle	0x14000ef82
mov	edx, 1
jmp	0x14000e3d3
jmp	0x14000e3d3
sub	eax, 0x20
lea	rcx, [rdx + 1]
cmp	eax, 0x1f
jle	0x14000ed20
jle	0x14000ed20
mov	rdx, rcx
mov	r9d, dword ptr [r8 + rdx*4 + 0x14]
test	r9d, r9d
je	0x14000e3c0
je	0x14000e3c0
cmp	edi, 1
jg	0x14000e3ec
jg	0x14000e3ec
test	byte ptr [rbp - 0x40], 1
jne	0x14000f130
jne	0x14000f130
movupd	xmm7, xmm8
mov	dword ptr [rbp - 0x54], 0
movupd	xmm6, xmm8
mov	r14d, 0x10
mov	r13d, 1
mov	eax, dword ptr [rbp - 0x18]
mov	edi, dword ptr [rbp - 0x14]
add	edi, eax
mov	dword ptr [rbp - 0x50], edi
mov	edi, dword ptr [rbp - 0x3c]
cmp	eax, edi
jge	0x14000e425
jge	0x14000e425
test	byte ptr [rbp - 0x40], 1
je	0x14000ebf0
je	0x14000ebf0
lea	rdx, [rbp - 0x24]
lea	r8, [rbp - 0x20]
movupd	xmm0, xmm7
call	0x140014d50
call	0x140014d50
mov	edx, dword ptr [rbp - 0x24]
mov	rdi, rax
test	edx, edx
js	0x14000e990
js	0x14000e990
jne	0x14000ea40
jne	0x14000ea40
mov	r12, qword ptr [rbp - 8]
mov	rdx, rdi
mov	rcx, r12
test	r13d, r13d
je	0x14000e8a8
je	0x14000e8a8
call	0x140014a70
call	0x140014a70
mov	edx, dword ptr [rbp - 0x40]
mov	qword ptr [rbp - 8], rax
mov	rcx, rax
mov	eax, dword ptr [r12 + 0x14]
test	edx, edx
jne	0x14000e4ab
jne	0x14000e4ab
sub	eax, 1
cmp	dword ptr [rcx + 0x14], eax
jle	0x14000e498
jle	0x14000e498
cdqe	
add	rax, 4
bsr	edx, dword ptr [rcx + rax*4 + 8]
xor	edx, 0x1f
bsr	eax, dword ptr [r12 + rax*4 + 8]
xor	eax, 0x1f
cmp	eax, edx
jge	0x14000e4af
jge	0x14000e4af
mov	edx, dword ptr [rbp - 0x58]
cmp	dword ptr [rbp - 0x84], edx
jne	0x14000e950
jne	0x14000e950
sub	dword ptr [rbp - 0x18], 1
mov	dword ptr [rbp - 0x40], r13d
mov	rcx, rdi
call	0x140014400
call	0x140014400
mov	rcx, r12
call	0x140014400
call	0x140014400
test	esi, esi
jne	0x14000ee5a
jne	0x14000ee5a
mov	edi, dword ptr [rbp - 0x50]
mov	eax, dword ptr [rbp - 0x18]
add	eax, dword ptr [rbp - 0x14]
cmp	eax, edi
jne	0x14000e50e
jne	0x14000e50e
mov	r12d, dword ptr [rbp - 0x54]
test	r12d, r12d
je	0x14000e50e
je	0x14000e50e
mulsd	xmm7, qword ptr [rip + 0xafd3b]
movupd	xmm0, xmm6
subsd	xmm0, qword ptr [rip + 0xafd1f]
movupd	xmm1, xmm7
xorpd	xmm1, xmm10
comisd	xmm1, xmm0
jbe	0x14000ea50
jbe	0x14000ea50
comisd	xmm6, xmm7
ja	0x14000ea70
ja	0x14000ea70
mov	edi, dword ptr [rbp - 0x40]
test	edi, edi
je	0x14000e979
je	0x14000e979
mov	rcx, r15
call	0x140014400
call	0x140014400
mov	rcx, qword ptr [rbp - 0x48]
call	0x140014400
call	0x140014400
mov	rcx, qword ptr [rbp - 0x38]
call	0x140014400
call	0x140014400
mov	rcx, rbx
call	0x140014400
call	0x140014400
jmp	0x14000e1f0
jmp	0x14000e1f0
je	0x14000e078
je	0x14000e078
neg	r14d
mov	eax, r14d
and	eax, 0xf
je	0x14000e569
je	0x14000e569
mov	rdx, qword ptr [rip + 0xb0d78]
cdqe	
movq	xmm5, r12
divsd	xmm5, qword ptr [rdx + rax*8]
movq	r12, xmm5
and	r14d, 0xfffffff0
je	0x14000e078
je	0x14000e078
mov	edx, r14d
sar	edx, 4
cmp	r14d, 0xff
jle	0x14000f24c
jle	0x14000f24c
mov	rax, qword ptr [rip + 0xb0d53]
mov	ecx, edx
xor	r9d, r9d
movsd	xmm0, qword ptr [rax + 0x20]
nop	word ptr [rax + rax]
mov	rax, r12
mov	r10, r12
mov	r12d, r12d
sub	ecx, 0x10
shr	rax, 0x20
shr	r10, 0x34
and	eax, 0x800fffff
mov	r8, r10
or	eax, 0x3ff00000
and	r8d, 0x7ff
shl	rax, 0x20
lea	r8d, [r9 + r8 - 0x3ff]
or	r12, rax
mov	r9d, r8d
movq	xmm3, r12
mulsd	xmm3, xmm0
movq	r12, xmm3
cmp	ecx, 0xf
jg	0x14000e5a0
jg	0x14000e5a0
and	edx, 0xf
mov	rax, r12
mov	rcx, r12
shr	rax, 0x20
shr	rcx, 0x34
and	eax, 0x800fffff
and	ecx, 0x7ff
or	eax, 0x3ff00000
lea	r14d, [r8 + rcx - 0x3ff]
mov	ecx, r12d
shl	rax, 0x20
or	rax, rcx
movq	xmm0, rax
test	edx, edx
je	0x14000e07d
je	0x14000e07d
movq	xmm1, rax
mov	rax, qword ptr [rip + 0xb0ca7]
xor	ecx, ecx
nop	dword ptr [rax + rax]
test	dl, 1
je	0x14000e64e
je	0x14000e64e
mulsd	xmm0, qword ptr [rax]
mov	ecx, 1
add	rax, 8
sar	edx, 1
jne	0x14000e640
jne	0x14000e640
test	cl, cl
jne	0x14000e07d
jne	0x14000e07d
jmp	0x14000e75e
jmp	0x14000e75e
nop	dword ptr [rax + rax]
mov	dword ptr [rbp - 0x4c], 0
jmp	0x14000dcd0
jmp	0x14000dcd0
nop	dword ptr [rax]
mov	edx, r14d
sar	edx, 4
cmp	r14d, 0xff
jle	0x14000f1e1
jle	0x14000f1e1
mov	rax, qword ptr [rip + 0xb0b5e]
mov	ecx, edx
xor	r9d, r9d
movsd	xmm0, qword ptr [rax + 0x20]
nop	dword ptr [rax]
mov	rax, r12
mov	r10, r12
mov	r12d, r12d
sub	ecx, 0x10
shr	rax, 0x20
shr	r10, 0x34
and	eax, 0x800fffff
mov	r8, r10
or	eax, 0x3ff00000
and	r8d, 0x7ff
shl	rax, 0x20
lea	r8d, [r9 + r8 - 0x3ff]
or	r12, rax
mov	r9d, r8d
movq	xmm2, r12
mulsd	xmm2, xmm0
movq	r12, xmm2
cmp	ecx, 0xf
jg	0x14000e6a0
jg	0x14000e6a0
and	edx, 0xf
mov	rax, r12
mov	rcx, r12
mov	r12d, r12d
shr	rax, 0x20
shr	rcx, 0x34
and	eax, 0x800fffff
and	ecx, 0x7ff
or	eax, 0x3ff00000
lea	r14d, [r8 + rcx - 0x3ff]
shl	rax, 0x20
or	r12, rax
movq	xmm0, r12
test	edx, edx
je	0x14000e07d
je	0x14000e07d
mov	rax, qword ptr [rip + 0xb0abc]
movupd	xmm1, xmm0
xor	ecx, ecx
nop	word ptr [rax + rax]
test	dl, 1
je	0x14000e74e
je	0x14000e74e
mulsd	xmm1, qword ptr [rax]
mov	ecx, 1
add	rax, 8
sar	edx, 1
jne	0x14000e740
jne	0x14000e740
test	cl, cl
je	0x14000e07d
je	0x14000e07d
movupd	xmm0, xmm1
jmp	0x14000e07d
jmp	0x14000e07d
cmp	eax, 0x30
jne	0x14000f1e9
jne	0x14000f1e9
mov	r8, rcx
nop	dword ptr [rax + rax]
mov	r9, r8
add	r8, 1
mov	qword ptr [rbp - 0x10], r8
movsx	eax, byte ptr [r8]
cmp	eax, 0x30
je	0x14000e778
je	0x14000e778
sub	r9d, ecx
lea	r14d, [r9 + 1]
lea	ecx, [rax - 0x31]
cmp	ecx, 8
ja	0x14000ef18
ja	0x14000ef18
sub	eax, 0x30
mov	r9, qword ptr [rbp - 0x10]
mov	r11d, 1
mov	dword ptr [rbp - 0x38], eax
lea	eax, [r14 + 1]
mov	dword ptr [rbp - 0x48], eax
mov	rsi, r9
lea	eax, [rdi + rdi*4]
mov	edi, dword ptr [rbp - 0x38]
xor	r14d, r14d
lea	edi, [rdi + rax*2]
jmp	0x14000e012
jmp	0x14000e012
mov	dword ptr [rbp - 0x5c], 1
jmp	0x14000db32
jmp	0x14000db32
mov	rcx, qword ptr [rbp - 8]
mov	edx, r12d
mov	dword ptr [rbp - 0x4c], r10d
mov	dword ptr [rbp - 0x40], r11d
call	0x1400148f0
call	0x1400148f0
add	dword ptr [rbp - 0x18], r12d
mov	r11d, dword ptr [rbp - 0x40]
mov	qword ptr [rbp - 8], rax
mov	r10d, dword ptr [rbp - 0x4c]
jmp	0x14000e140
jmp	0x14000e140
mov	edx, dword ptr [rbp - 0x64]
mov	eax, edx
cmp	edx, -0x16
jl	0x14000e03b
jl	0x14000e03b
mov	edx, dword ptr [rbp - 0x38]
mov	eax, dword ptr [rbp - 0x48]
mov	dword ptr [rbp - 0x40], r11d
movq	xmm0, r12
sub	eax, edx
mov	rdx, qword ptr [rip + 0xb0aab]
cdqe	
divsd	xmm0, qword ptr [rdx + rax*8]
lea	rax, [rbp - 0x1c]
mov	dword ptr [rsp + 0x20], 0
movq	r12, xmm0
mov	qword ptr [rsp + 0x30], rax
mov	eax, dword ptr [rbp - 0x60]
mov	dword ptr [rsp + 0x28], eax
jmp	0x14000df5e
jmp	0x14000df5e
nop	
test	eax, eax
js	0x14000ef8a
js	0x14000ef8a
je	0x14000f042
je	0x14000f042
mov	rdx, qword ptr [rbp - 0x38]
mov	rcx, rbx
call	0x140014fa0
call	0x140014fa0
comisd	xmm9, xmm0
movupd	xmm6, xmm0
jb	0x14000e9a0
jb	0x14000e9a0
test	r12d, r12d
je	0x14000edd0
je	0x14000edd0
movsd	xmm7, qword ptr [rip + 0xaf976]
mov	dword ptr [rbp - 0x54], 0
xor	esi, esi
xor	r13d, r13d
mov	r14d, 0x20
movupd	xmm6, xmm7
jmp	0x14000e409
jmp	0x14000e409
nop	dword ptr [rax]
call	0x14000f2d0
call	0x14000f2d0
mov	qword ptr [rbp - 8], rax
mov	rcx, rax
mov	eax, dword ptr [rax + 0x14]
sub	eax, 1
cmp	dword ptr [r12 + 0x14], eax
jle	0x14000e8e0
jle	0x14000e8e0
cdqe	
add	rax, 4
bsr	edx, dword ptr [rcx + rax*4 + 8]
xor	edx, 0x1f
bsr	eax, dword ptr [r12 + rax*4 + 8]
xor	eax, 0x1f
cmp	eax, edx
jle	0x14000e4af
jle	0x14000e4af
mov	r13d, dword ptr [rbp - 0x40]
test	r13d, r13d
je	0x14000ec70
je	0x14000ec70
mov	eax, dword ptr [rbp - 0x18]
mov	edx, dword ptr [rbp - 0x3c]
add	eax, 1
cmp	eax, edx
mov	dword ptr [rbp - 0x18], eax
setne	al
movzx	eax, al
mov	dword ptr [rbp - 0x40], eax
jmp	0x14000e4af
jmp	0x14000e4af
nop	dword ptr [rax]
mov	rcx, r15
call	0x1400148f0
call	0x1400148f0
mov	r11d, dword ptr [rbp - 0x64]
mov	r15, rax
test	r11d, r11d
jle	0x14000e305
jle	0x14000e305
mov	edx, dword ptr [rbp - 0x68]
mov	rcx, qword ptr [rbp - 0x48]
call	0x140014760
call	0x140014760
mov	qword ptr [rbp - 0x48], rax
jmp	0x14000e305
jmp	0x14000e305
nop	dword ptr [rax]
mov	r13d, dword ptr [rbp - 0x68]
sub	r13d, r12d
mov	r12d, dword ptr [rbp - 0x4c]
jmp	0x14000e275
jmp	0x14000e275
mov	edx, 1
call	0x1400148f0
call	0x1400148f0
mov	rcx, rdi
sub	dword ptr [rbp - 0x14], 1
sub	dword ptr [rbp - 0x84], 1
mov	qword ptr [rbp - 8], rax
call	0x140014400
call	0x140014400
mov	rcx, r12
call	0x140014400
call	0x140014400
mov	rcx, qword ptr [rbp - 8]
call	0x140013cd0
call	0x140013cd0
mov	dword ptr [rbp - 0x40], 0
mov	esi, eax
jmp	0x14000e519
jmp	0x14000e519
neg	edx
mov	rcx, rax
call	0x140013bc0
call	0x140013bc0
jmp	0x14000e44a
jmp	0x14000e44a
nop	
mulsd	xmm6, qword ptr [rip + 0xaf868]
cmp	r12d, 1
movsd	xmm0, qword ptr [rip + 0xaf864]
sbb	r14d, r14d
xor	r13d, r13d
and	r14d, 0x10
add	r14d, 0x10
cmp	r12d, 1
setb	r13b
comisd	xmm0, xmm6
jbe	0x14000ec58
jbe	0x14000ec58
cvttsd2si	eax, xmm6
pxor	xmm7, xmm7
cvtsi2sd	xmm7, eax
mov	dword ptr [rbp - 0x54], eax
mov	eax, dword ptr [rbp - 0x60]
subsd	xmm6, xmm7
cmp	eax, 1
je	0x14000ede0
je	0x14000ede0
cmp	eax, 2
je	0x14000ea10
je	0x14000ea10
comisd	xmm6, xmmword ptr [rip + 0xaf810]
jae	0x14000ea1f
jae	0x14000ea1f
xor	esi, esi
jmp	0x14000e409
jmp	0x14000e409
nop	dword ptr [rax]
test	r13d, r13d
jne	0x14000ea02
jne	0x14000ea02
pxor	xmm0, xmm0
comisd	xmm6, xmm0
jbe	0x14000ea02
jbe	0x14000ea02
add	dword ptr [rbp - 0x54], 1
mov	eax, 0x30
mov	esi, dword ptr [rbp - 0x54]
pxor	xmm7, xmm7
sub	eax, r14d
cvtsi2sd	xmm7, esi
mov	r14d, eax
xor	esi, esi
jmp	0x14000e409
jmp	0x14000e409
mov	rcx, rax
call	0x1400148f0
call	0x1400148f0
mov	rdi, rax
jmp	0x14000e44a
jmp	0x14000e44a
comisd	xmm0, xmm7
jbe	0x14000e50e
jbe	0x14000e50e
movsd	xmm0, qword ptr [rip + 0xaf79e]
subsd	xmm0, xmm7
comisd	xmm0, xmm6
jbe	0x14000e50e
jbe	0x14000e50e
or	dword ptr [rbp - 0x1c], r14d
mov	r13, qword ptr [rbp + 0xb0]
nop	dword ptr [rax + rax]
mov	esi, dword ptr [rbp - 0x40]
test	esi, esi
je	0x14000eca8
je	0x14000eca8
mov	eax, dword ptr [rbp - 0x14]
mov	esi, 1
mov	rdi, qword ptr [rbp + 0xb8]
mov	rcx, r15
mov	dword ptr [rdi], eax
call	0x140014400
call	0x140014400
mov	rcx, qword ptr [rbp - 0x48]
call	0x140014400
call	0x140014400
mov	rcx, qword ptr [rbp - 0x38]
call	0x140014400
call	0x140014400
mov	rcx, qword ptr [rbp - 0x70]
call	0x140014400
call	0x140014400
mov	rcx, rbx
call	0x140014400
call	0x140014400
mov	eax, dword ptr [rbp - 0x14]
cmp	dword ptr [r13 + 8], eax
jge	0x14000eb68
jge	0x14000eb68
mov	eax, dword ptr [r13 + 0xc]
and	eax, 3
cmp	eax, 2
je	0x14000f018
je	0x14000f018
cmp	eax, 3
je	0x14000f006
je	0x14000f006
cmp	eax, 1
je	0x14000ed7a
je	0x14000ed7a
mov	rcx, qword ptr [rbp - 8]
call	0x140014400
call	0x140014400
mov	ebx, dword ptr [r13]
mov	rdi, qword ptr [rbp + 0xb8]
mov	qword ptr [rbp - 8], 0
mov	eax, dword ptr [r13 + 8]
mov	dword ptr [rbp - 0x1c], 0x11
lea	r8d, [rbx + 0x1f]
sar	r8d, 5
mov	dword ptr [rdi], eax
mov	rdi, qword ptr [rbp + 0xc0]
movsxd	r8, r8d
shl	r8, 2
add	rdi, r8
cmp	qword ptr [rbp + 0xc0], rdi
jae	0x14000eb52
jae	0x14000eb52
mov	rcx, qword ptr [rbp + 0xc0]
mov	edx, 0xff
call	0x1400159a8
call	0x1400159a8
and	ebx, 0x1f
je	0x14000eb68
je	0x14000eb68
mov	ecx, 0x20
sub	ecx, ebx
shr	dword ptr [rdi - 4], cl
nop	dword ptr [rax]
mov	r8, qword ptr [rbp - 8]
test	esi, esi
je	0x14000ddec
je	0x14000ddec
mov	r10d, dword ptr [rbp - 0x78]
mov	rax, r8
test	r10d, r10d
jne	0x14000ec30
jne	0x14000ec30
mov	r9d, dword ptr [r8 + 0x14]
xor	eax, eax
mov	edx, dword ptr [rbp - 0x1c]
test	r9d, r9d
setg	al
and	edx, 0xfffffff8
add	eax, eax
or	eax, edx
and	edx, 0x30
jne	0x14000ed00
jne	0x14000ed00
mov	dword ptr [rbp - 0x1c], eax
jmp	0x14000ddec
jmp	0x14000ddec
nop	dword ptr [rax + rax]
sub	esi, r14d
mov	rcx, r15
mov	edx, esi
call	0x140013bc0
call	0x140013bc0
jmp	0x14000e2f8
jmp	0x14000e2f8
nop	word ptr [rax + rax]
mov	dword ptr [rbp - 0x1c], 0x21
mov	r14d, 0x20
xor	r13d, r13d
movsd	xmm7, qword ptr [rip + 0xaf620]
mov	dword ptr [rbp - 0x54], 0
movupd	xmm6, xmm7
jmp	0x14000e409
jmp	0x14000e409
mov	r12d, edi
mov	rcx, qword ptr [rbp - 8]
sub	edi, eax
mov	edx, edi
call	0x1400148f0
call	0x1400148f0
sub	dword ptr [rbp - 0x14], edi
mov	qword ptr [rbp - 8], rax
mov	dword ptr [rbp - 0x18], r12d
jmp	0x14000e425
jmp	0x14000e425
mov	rax, qword ptr [rbp - 8]
mov	rsi, qword ptr [rbp + 0xb8]
mov	qword ptr [rax + 0x14], 0
mov	dword ptr [rsi], r10d
nop	word ptr cs:[rax + rax]
mov	dword ptr [rax + 0x14], 0
mov	dword ptr [rbp - 0x1c], 0x50
call	0x1400158a8
call	0x1400158a8
mov	r8, qword ptr [rbp - 8]
mov	dword ptr [rax], 0x22
jmp	0x14000ddec
jmp	0x14000ddec
nop	word ptr [rax + rax]
mov	dword ptr [rbp - 0x54], 0
movupd	xmm7, xmm6
xor	esi, esi
jmp	0x14000e409
jmp	0x14000e409
nop	word ptr [rax + rax]
mov	edx, 1
call	0x140013bc0
call	0x140013bc0
mov	rcx, rdi
add	dword ptr [rbp - 0x14], 1
add	dword ptr [rbp - 0x84], 1
call	0x140014400
call	0x140014400
mov	rcx, r12
call	0x140014400
call	0x140014400
test	esi, esi
je	0x14000e979
je	0x14000e979
mov	r13, qword ptr [rbp + 0xb0]
nop	dword ptr [rax]
mov	eax, dword ptr [rbp - 0x18]
mov	dword ptr [rbp - 0x40], eax
mov	esi, dword ptr [rbp - 0x3c]
mov	eax, dword ptr [rbp - 0x40]
sub	esi, eax
test	esi, esi
jne	0x14000eef4
jne	0x14000eef4
mov	eax, dword ptr [rbp - 0x14]
jmp	0x14000ea93
jmp	0x14000ea93
mov	rsi, qword ptr [rbp + 0xb8]
mov	r13d, dword ptr [rbp - 0x78]
mov	rax, rcx
mov	qword ptr [rcx + 0x14], 0
mov	dword ptr [rbp - 0x1c], 0x50
mov	dword ptr [rsi], r10d
test	r13d, r13d
jne	0x14000ec30
jne	0x14000ec30
mov	edx, dword ptr [rcx + 0x14]
xor	eax, eax
test	edx, edx
setg	al
add	eax, eax
or	eax, 0x50
nop	
or	eax, 0x40
mov	dword ptr [rbp - 0x1c], eax
call	0x1400158a8
call	0x1400158a8
mov	dword ptr [rax], 0x22
jmp	0x14000dde8
jmp	0x14000dde8
nop	word ptr cs:[rax + rax]
mov	r12d, edx
cmp	eax, 1
jle	0x14000ed49
jle	0x14000ed49
movsxd	rdx, r12d
xor	ecx, ecx
sub	eax, 1
lea	r9, [r8 + rdx*4 + 0x18]
mov	edx, dword ptr [r9]
tzcnt	ecx, edx
shr	edx, cl
mov	dword ptr [r9], edx
cmp	eax, ecx
jg	0x14000e3dd
jg	0x14000e3dd
mov	eax, dword ptr [rbp - 0x84]
mov	r13, qword ptr [rbp + 0xb0]
sub	eax, 1
mov	dword ptr [rbp - 0x14], eax
mov	eax, dword ptr [rbp - 0x3c]
mov	edx, eax
mov	rcx, r8
mov	dword ptr [rbp - 0x18], eax
call	0x14000d910
call	0x14000d910
mov	qword ptr [rbp - 8], rax
jmp	0x14000ea80
jmp	0x14000ea80
nop	dword ptr [rax]
xor	esi, esi
mov	rax, qword ptr [rbp - 8]
mov	dword ptr [rbp - 0x1c], 0xa3
mov	dword ptr [rax + 0x14], 0
call	0x1400158a8
call	0x1400158a8
mov	rdi, qword ptr [rbp + 0xb8]
mov	dword ptr [rax], 0x22
mov	eax, dword ptr [r13 + 8]
add	eax, 1
mov	dword ptr [rdi], eax
jmp	0x14000eb68
jmp	0x14000eb68
nop	dword ptr [rax]
mov	qword ptr [rbp - 0x10], r12
mov	dword ptr [rbp - 0x38], 0
jmp	0x14000dbd2
jmp	0x14000dbd2
mov	dword ptr [rbp - 0x4c], 0
jmp	0x14000dcc1
jmp	0x14000dcc1
nop	dword ptr [rax]
xor	esi, esi
jmp	0x14000e3dd
jmp	0x14000e3dd
nop	word ptr [rax + rax]
test	r13d, r13d
jne	0x14000ea15
jne	0x14000ea15
xor	esi, esi
jmp	0x14000e409
jmp	0x14000e409
mov	eax, dword ptr [rbp - 0x5c]
lea	rcx, [rbp - 0x10]
lea	r9, [rbp - 8]
mov	rdx, r13
mov	r8, qword ptr [rbp + 0xb8]
mov	dword ptr [rsp + 0x20], eax
call	0x1400132b0
call	0x1400132b0
mov	dword ptr [rbp - 0x1c], eax
cmp	eax, 6
jne	0x14000dde8
jne	0x14000dde8
cmp	qword ptr [rbp + 0xa8], 0
mov	qword ptr [rbp - 0x10], r12
je	0x14000ee32
je	0x14000ee32
mov	rax, qword ptr [rbp + 0xa8]
mov	qword ptr [rax], r12
mov	r8, qword ptr [rbp - 8]
jmp	0x14000de0f
jmp	0x14000de0f
mov	dword ptr [rbp - 0x40], 0
jmp	0x14000e171
jmp	0x14000e171
mov	dword ptr [rbp - 0x84], r10d
mov	dword ptr [rbp - 0x40], 1
jmp	0x14000e171
jmp	0x14000e171
mov	r13, qword ptr [rbp + 0xb0]
jmp	0x14000ea80
jmp	0x14000ea80
lea	rax, [rbp - 0x1c]
mov	rdx, r13
movq	xmm0, r12
mov	dword ptr [rbp - 0x40], r11d
mov	qword ptr [rsp + 0x30], rax
mov	eax, dword ptr [rbp - 0x60]
mov	dword ptr [rsp + 0x20], 1
mov	r9, qword ptr [rbp + 0xc0]
mov	dword ptr [rsp + 0x28], eax
mov	r8, qword ptr [rbp + 0xb8]
call	0x14000d530
call	0x14000d530
mov	r11d, dword ptr [rbp - 0x40]
test	eax, eax
jne	0x14000dde8
jne	0x14000dde8
xor	eax, eax
jmp	0x14000e03b
jmp	0x14000e03b
lea	rbx, [rbp - 0x10]
lea	rdx, [rip + 0xaf205]
mov	rcx, rbx
call	0x140015040
call	0x140015040
test	eax, eax
je	0x14000df90
je	0x14000df90
lea	rdx, [rip + 0xaf1f1]
mov	rcx, rbx
sub	qword ptr [rbp - 0x10], 1
call	0x140015040
call	0x140015040
test	eax, eax
jne	0x14000eee8
jne	0x14000eee8
add	qword ptr [rbp - 0x10], 1
mov	dword ptr [rbp - 0x1c], 3
jmp	0x14000dc68
jmp	0x14000dc68
mov	rcx, qword ptr [rbp - 8]
jle	0x14000f0c4
jle	0x14000f0c4
mov	edx, esi
call	0x1400148f0
call	0x1400148f0
mov	qword ptr [rbp - 8], rax
mov	eax, dword ptr [rbp - 0x14]
sub	eax, esi
xor	esi, esi
mov	dword ptr [rbp - 0x14], eax
jmp	0x14000ea93
jmp	0x14000ea93
mov	dword ptr [rbp - 0x48], 0
xor	r11d, r11d
jmp	0x14000e027
jmp	0x14000e027
mov	ecx, dword ptr [rbp - 0x64]
mov	edx, 0x25
sub	edx, r11d
mov	eax, ecx
cmp	edx, ecx
jl	0x14000e03b
jl	0x14000e03b
mov	eax, 0xf
mov	rdx, qword ptr [rip + 0xb0388]
movq	xmm0, r12
mov	dword ptr [rbp - 0x40], r11d
sub	eax, r11d
movsxd	rcx, eax
mulsd	xmm0, qword ptr [rdx + rcx*8]
mov	ecx, dword ptr [rbp - 0x64]
sub	ecx, eax
movsxd	rax, ecx
mulsd	xmm0, qword ptr [rdx + rax*8]
jmp	0x14000e82c
jmp	0x14000e82c
mov	ecx, 0x4e1f
cmp	r9d, ecx
cmovle	ecx, r9d
mov	dword ptr [rbp - 0x38], ecx
jmp	0x14000dd87
jmp	0x14000dd87
mov	eax, dword ptr [rbp - 0x3c]
jmp	0x14000ed23
jmp	0x14000ed23
mov	r10d, dword ptr [rbp - 0x58]
mov	r13, qword ptr [rbp + 0xb0]
test	r12d, r12d
jne	0x14000f1a8
jne	0x14000f1a8
mov	dword ptr [rbp - 0x1c], 0x21
cmp	edi, 1
jg	0x14000ea80
jg	0x14000ea80
cmp	dword ptr [rbp - 0x84], r10d
je	0x14000ea80
je	0x14000ea80
test	byte ptr [rbp - 0x40], 1
jne	0x14000ea80
jne	0x14000ea80
mov	rcx, rbx
mov	edx, 1
call	0x1400148f0
call	0x1400148f0
mov	rdx, qword ptr [rbp - 0x38]
mov	rcx, rax
mov	rbx, rax
call	0x140014a20
call	0x140014a20
test	eax, eax
jle	0x14000eca8
jle	0x14000eca8
xor	r8d, r8d
mov	dword ptr [rbp - 0x1c], 0x11
mov	dword ptr [rbp - 0x40], r8d
mov	r8, qword ptr [rbp - 8]
mov	eax, dword ptr [rbp - 0x3c]
sub	dword ptr [rbp - 0x14], eax
jmp	0x14000ed5f
jmp	0x14000ed5f
mov	r11d, dword ptr [rbp - 0x5c]
test	r11d, r11d
jne	0x14000ed7a
jne	0x14000ed7a
jmp	0x14000eaf6
jmp	0x14000eaf6
mov	ebx, dword ptr [rbp - 0x5c]
test	ebx, ebx
je	0x14000ed7a
je	0x14000ed7a
jmp	0x14000eaf6
jmp	0x14000eaf6
cmp	eax, 1
mov	r13, qword ptr [rbp + 0xb0]
sbb	eax, eax
and	eax, 0x10
add	eax, 0x11
mov	dword ptr [rbp - 0x1c], eax
jmp	0x14000ea80
jmp	0x14000ea80
mov	r10d, dword ptr [rbp - 0x58]
mov	r13, qword ptr [rbp + 0xb0]
test	r12d, r12d
je	0x14000f176
je	0x14000f176
mov	ecx, dword ptr [rbp - 0x40]
test	ecx, ecx
je	0x14000f1f1
je	0x14000f1f1
mov	ecx, dword ptr [rbp - 0x18]
mov	rdx, qword ptr [rbp - 8]
mov	r8d, ecx
lea	rax, [rdx + 0x18]
sar	r8d, 5
movsxd	r8, r8d
lea	r8, [rax + r8*4]
jmp	0x14000f08a
jmp	0x14000f08a
add	rax, 4
cmp	dword ptr [rax - 4], -1
jne	0x14000f2a5
jne	0x14000f2a5
cmp	rax, r8
jb	0x14000f07c
jb	0x14000f07c
and	ecx, 0x1f
jne	0x14000f28f
jne	0x14000f28f
movabs	rax, 0x100000001
mov	dword ptr [rbp - 0x18], 1
mov	qword ptr [rdx + 0x14], rax
mov	eax, dword ptr [rbp - 0x3c]
mov	dword ptr [rbp - 0x1c], 0x21
lea	eax, [rax + r10 - 1]
mov	dword ptr [rbp - 0x14], eax
jmp	0x14000ecae
jmp	0x14000ecae
mov	edx, dword ptr [rbp - 0x40]
mov	eax, dword ptr [rbp - 0x3c]
sub	edx, eax
call	0x140013bc0
call	0x140013bc0
jmp	0x14000ef09
jmp	0x14000ef09
cmp	r14d, 1
jle	0x14000f2c1
jle	0x14000f2c1
lea	eax, [r11 + r14]
mov	dword ptr [rbp - 0x40], ebx
lea	r8d, [rax - 1]
jmp	0x14000f0f7
jmp	0x14000f0f7
lea	edi, [rdi + rdi*4]
add	edi, edi
cmp	r8d, r11d
je	0x14000f110
je	0x14000f110
mov	ebx, r11d
add	r11d, 1
cmp	ebx, 8
jle	0x14000f0ed
jle	0x14000f0ed
cmp	r11d, 0x10
jg	0x14000f0f2
jg	0x14000f0f2
lea	edx, [rdx + rdx*4]
add	edx, edx
jmp	0x14000f0f2
jmp	0x14000f0f2
mov	ebx, dword ptr [rbp - 0x40]
add	dword ptr [rbp - 0x48], r14d
cmp	r11d, 8
jg	0x14000f1c7
jg	0x14000f1c7
mov	r11d, eax
jmp	0x14000e7b9
jmp	0x14000e7b9
nop	dword ptr [rax]
mov	r10d, dword ptr [rbp - 0x58]
mov	rax, qword ptr [rbp - 8]
mov	dword ptr [rbp - 0x1c], 0x50
mov	r13, qword ptr [rbp + 0xb0]
mov	dword ptr [rax + 0x14], 0
mov	dword ptr [rbp - 0x14], r10d
jmp	0x14000ea8b
jmp	0x14000ea8b
mov	edx, r10d
mov	dword ptr [rbp - 0x4c], r11d
sub	edx, r14d
mov	dword ptr [rbp - 0x40], r10d
call	0x140013bc0
call	0x140013bc0
mov	r11d, dword ptr [rbp - 0x4c]
mov	r10d, dword ptr [rbp - 0x40]
jmp	0x14000e140
jmp	0x14000e140
cmp	edi, 1
je	0x14000f254
je	0x14000f254
mov	dword ptr [rbp - 0x1c], 0x21
cmp	dword ptr [rbp - 0x3c], edi
jle	0x14000f195
jle	0x14000f195
test	byte ptr [rbp - 0x40], 1
je	0x14000ea80
je	0x14000ea80
mov	rcx, qword ptr [rbp - 8]
test	byte ptr [rcx + 0x18], 1
je	0x14000ea80
je	0x14000ea80
call	0x14000d8e0
call	0x14000d8e0
mov	dword ptr [rbp - 0x1c], 0x11
jmp	0x14000ea80
jmp	0x14000ea80
xor	edx, edx
mov	ecx, 0x35
tzcnt	edx, r12d
sub	ecx, edx
jmp	0x14000df24
jmp	0x14000df24
xor	r14d, r14d
mov	r11d, eax
cmp	eax, 0x10
jg	0x14000e012
jg	0x14000e012
lea	eax, [rdx + rdx*4]
lea	edx, [rcx + rax*2]
jmp	0x14000e012
jmp	0x14000e012
xor	r8d, r8d
jmp	0x14000e6f0
jmp	0x14000e6f0
xor	r14d, r14d
jmp	0x14000e793
jmp	0x14000e793
mov	dword ptr [rbp - 0x1c], 0x11
cmp	dword ptr [rbp - 0x3c], edi
jg	0x14000eca8
jg	0x14000eca8
mov	rdx, qword ptr [rbp - 8]
test	byte ptr [rdx + 0x18], 1
je	0x14000eca8
je	0x14000eca8
mov	rcx, rdx
call	0x14000d470
call	0x14000d470
mov	ecx, dword ptr [rbp - 0x18]
mov	esi, dword ptr [rax + 0x14]
mov	qword ptr [rbp - 8], rax
lea	edx, [rsi - 1]
movsxd	rdx, edx
bsr	eax, dword ptr [rax + rdx*4 + 0x18]
mov	edx, ecx
neg	edx
and	edx, 0x1f
xor	eax, 0x1f
cmp	edx, eax
je	0x14000f240
je	0x14000f240
add	ecx, 1
mov	dword ptr [rbp - 0x18], ecx
mov	dword ptr [rbp - 0x1c], 0x21
jmp	0x14000ea80
jmp	0x14000ea80
xor	r8d, r8d
jmp	0x14000e5f0
jmp	0x14000e5f0
mov	dword ptr [rbp - 0x1c], 1
mov	r8, qword ptr [rbp - 8]
cmp	dword ptr [rbp - 0x84], r10d
jne	0x14000effb
jne	0x14000effb
cmp	dword ptr [r8 + 0x14], 1
mov	dword ptr [rbp - 0x1c], 0x21
jne	0x14000ea80
jne	0x14000ea80
cmp	dword ptr [r8 + 0x18], 1
cmovne	edi, dword ptr [rbp - 0x78]
mov	dword ptr [rbp - 0x78], edi
jmp	0x14000ea80
jmp	0x14000ea80
or	r8d, 0xffffffff
shl	r8d, cl
or	r8d, dword ptr [rax]
mov	eax, r8d
add	eax, 1
je	0x14000f098
je	0x14000f098
mov	dword ptr [rbp - 0x1c], 0x11
test	byte ptr [rdx + 0x18], 1
jne	0x14000f20f
jne	0x14000f20f
mov	eax, dword ptr [rbp - 0x14]
mov	esi, dword ptr [rbp - 0x40]
jmp	0x14000ea93
jmp	0x14000ea93
lea	eax, [r11 + 1]
jmp	0x14000f113
jmp	0x14000f113
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
lea	rbp, [rsp + 0x30]
mov	eax, dword ptr [rdx + 0x14]
mov	rsi, rcx
mov	rbx, rdx
cmp	dword ptr [rcx + 0x14], eax
jl	0x14000f2f9
jl	0x14000f2f9
mov	rbx, rcx
mov	rsi, rdx
mov	ecx, dword ptr [rbx + 8]
lea	r15, [rbx + 0x18]
call	0x140014300
call	0x140014300
mov	r11d, dword ptr [rbx + 0x14]
mov	r9d, 0x18
xor	r10d, r10d
lea	r13, [rax + 0x18]
mov	rdi, rax
mov	dword ptr [rax + 0x14], r11d
movsxd	rax, dword ptr [rsi + 0x14]
mov	rcx, r13
mov	dword ptr [rbp - 4], r11d
mov	r14, rax
lea	r12, [r13 + rax*4]
mov	eax, dword ptr [rbx + r9]
mov	r8d, dword ptr [rsi + r9]
add	rcx, 4
add	r9, 4
movzx	edx, ax
movzx	r11d, r8w
shr	eax, 0x10
add	edx, r11d
shr	r8d, 0x10
add	edx, r10d
add	eax, r8d
mov	r8d, edx
mov	word ptr [rcx - 4], dx
shr	r8d, 0x10
add	eax, r8d
mov	r10d, eax
mov	word ptr [rcx - 2], ax
shr	r10d, 0x10
cmp	rcx, r12
jb	0x14000f330
jb	0x14000f330
mov	rax, r12
lea	rdx, [rdi + 0x19]
movsxd	r11, dword ptr [rbp - 4]
sub	rax, rdi
sub	rax, 0x19
shr	rax, 2
cmp	r12, rdx
mov	edx, 4
lea	rax, [rax*4 + 4]
cmovb	rax, rdx
mov	edx, r11d
sub	edx, r14d
movsxd	rdx, edx
lea	r9, [r15 + rax]
add	rax, r13
lea	rbx, [r12 + rdx*4]
cmp	rax, rbx
jae	0x14000f3f2
jae	0x14000f3f2
nop	dword ptr [rax + rax]
mov	r8d, dword ptr [r9]
add	rax, 4
add	r9, 4
movzx	edx, r8w
shr	r8d, 0x10
add	edx, r10d
mov	ecx, edx
mov	word ptr [rax - 4], dx
shr	ecx, 0x10
add	ecx, r8d
mov	r10d, ecx
mov	word ptr [rax - 2], cx
shr	r10d, 0x10
cmp	rax, rbx
jb	0x14000f3c0
jb	0x14000f3c0
test	r10d, r10d
je	0x14000f40d
je	0x14000f40d
cmp	r11d, dword ptr [rdi + 0xc]
je	0x14000f428
je	0x14000f428
lea	eax, [r11 + 1]
mov	dword ptr [rdi + 0x14], eax
mov	dword ptr [rdi + r11*4 + 0x18], 1
mov	rax, rdi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	eax, dword ptr [rdi + 8]
lea	ecx, [rax + 1]
call	0x140014300
call	0x140014300
lea	rdx, [rdi + 0x10]
mov	rbx, rax
lea	rcx, [rax + 0x10]
movsxd	rax, dword ptr [rdi + 0x14]
lea	r8, [rax*4 + 8]
call	0x140015998
call	0x140015998
mov	rcx, rdi
mov	rdi, rbx
call	0x140014400
call	0x140014400
movsxd	r11, dword ptr [rbx + 0x14]
jmp	0x14000f3fd
jmp	0x14000f3fd
push	rbp
mov	rbp, rsp
sub	rsp, 0x60
mov	rax, qword ptr [rdx]
mov	edx, dword ptr [rdx + 8]
mov	r11d, edx
mov	r10d, ecx
mov	qword ptr [rbp - 0x10], rax
mov	rcx, rdx
mov	dword ptr [rbp - 8], edx
and	r11w, 0x7fff
jne	0x14000f4f0
jne	0x14000f4f0
mov	rdx, rax
shr	rdx, 0x20
or	eax, edx
je	0x14000f520
je	0x14000f520
test	edx, edx
jns	0x14000f530
jns	0x14000f530
lea	edx, [r11 - 0x403e]
mov	eax, 1
movsx	edx, dx
mov	dword ptr [rbp - 0x1c], eax
and	ecx, 0x8000
mov	rax, qword ptr [rbp + 0x30]
mov	dword ptr [rax], ecx
lea	rax, [rbp - 0x18]
lea	rcx, [rip + 0xa5bea]
mov	qword ptr [rsp + 0x30], r9
lea	r9, [rbp - 0x1c]
mov	dword ptr [rsp + 0x28], r8d
lea	r8, [rbp - 0x10]
mov	qword ptr [rsp + 0x38], rax
mov	dword ptr [rsp + 0x20], r10d
call	0x140011c90
call	0x140011c90
add	rsp, 0x60
pop	rbp
ret	
ret	
nop	dword ptr [rax]
cmp	r11w, 0x7fff
jne	0x14000f49d
jne	0x14000f49d
mov	rdx, rax
shr	rdx, 0x20
and	edx, 0x7fffffff
or	edx, eax
je	0x14000f540
je	0x14000f540
mov	dword ptr [rbp - 0x1c], 4
xor	edx, edx
xor	ecx, ecx
jmp	0x14000f4b5
jmp	0x14000f4b5
nop	word ptr cs:[rax + rax]
xor	eax, eax
xor	edx, edx
jmp	0x14000f4ac
jmp	0x14000f4ac
nop	word ptr cs:[rax + rax]
mov	eax, 2
mov	edx, 0xffffbfc3
jmp	0x14000f4ac
jmp	0x14000f4ac
nop	
mov	eax, 3
xor	edx, edx
jmp	0x14000f4ac
jmp	0x14000f4ac
nop	dword ptr [rax]
push	rbp
push	rbx
sub	rsp, 0x28
lea	rbp, [rsp + 0x20]
mov	rbx, rdx
mov	edx, dword ptr [rdx + 8]
test	dh, 0x40
jne	0x14000f56e
jne	0x14000f56e
mov	eax, dword ptr [rbx + 0x24]
cmp	dword ptr [rbx + 0x28], eax
jle	0x14000f580
jle	0x14000f580
mov	rax, qword ptr [rbx]
and	dh, 0x20
jne	0x14000f590
jne	0x14000f590
movsxd	rdx, dword ptr [rbx + 0x24]
mov	byte ptr [rax + rdx], cl
mov	eax, dword ptr [rbx + 0x24]
add	eax, 1
mov	dword ptr [rbx + 0x24], eax
add	rsp, 0x28
pop	rbx
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	rdx, rax
call	0x140015928
call	0x140015928
mov	eax, dword ptr [rbx + 0x24]
add	eax, 1
mov	dword ptr [rbx + 0x24], eax
add	rsp, 0x28
pop	rbx
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
lea	rbp, [rsp + 0x50]
lea	rax, [rbp - 0x18]
lea	rdi, [rbp - 0x10]
mov	esi, edx
mov	rbx, r8
xor	edx, edx
mov	r12, rcx
mov	r8, rax
mov	rcx, rdi
mov	qword ptr [rbp - 0x28], rax
call	0x1400153b0
call	0x1400153b0
mov	eax, dword ptr [rbx + 0x10]
cmp	esi, eax
mov	edx, eax
cmovle	edx, esi
test	eax, eax
mov	eax, dword ptr [rbx + 0xc]
cmovns	esi, edx
cmp	eax, esi
jg	0x14000f6eb
jg	0x14000f6eb
mov	dword ptr [rbx + 0xc], 0xffffffff
lea	r13d, [rsi - 1]
test	esi, esi
jle	0x14000f745
jle	0x14000f745
xor	esi, esi
add	r13d, 1
nop	dword ptr [rax]
movzx	edx, word ptr [r12 + rsi*2]
mov	r8, qword ptr [rbp - 0x28]
mov	rcx, rdi
call	0x1400153b0
call	0x1400153b0
test	eax, eax
jle	0x14000f6cd
jle	0x14000f6cd
sub	eax, 1
mov	r15, rdi
lea	r14, [rdi + rax + 1]
jmp	0x14000f665
jmp	0x14000f665
nop	word ptr cs:[rax + rax]
movsxd	rdx, dword ptr [rbx + 0x24]
mov	byte ptr [rax + rdx], cl
mov	eax, dword ptr [rbx + 0x24]
add	eax, 1
mov	dword ptr [rbx + 0x24], eax
cmp	r15, r14
je	0x14000f69c
je	0x14000f69c
mov	edx, dword ptr [rbx + 8]
add	r15, 1
test	dh, 0x40
jne	0x14000f679
jne	0x14000f679
mov	eax, dword ptr [rbx + 0x24]
cmp	dword ptr [rbx + 0x28], eax
jle	0x14000f65a
jle	0x14000f65a
movsx	ecx, byte ptr [r15 - 1]
mov	rax, qword ptr [rbx]
and	dh, 0x20
je	0x14000f650
je	0x14000f650
mov	rdx, rax
call	0x140015928
call	0x140015928
mov	eax, dword ptr [rbx + 0x24]
add	eax, 1
mov	dword ptr [rbx + 0x24], eax
cmp	r15, r14
jne	0x14000f665
jne	0x14000f665
add	rsi, 1
mov	eax, r13d
sub	eax, esi
test	eax, eax
jg	0x14000f620
jg	0x14000f620
mov	eax, dword ptr [rbx + 0xc]
lea	edx, [rax - 1]
mov	dword ptr [rbx + 0xc], edx
test	eax, eax
jle	0x14000f6da
jle	0x14000f6da
nop	word ptr [rax + rax]
mov	rdx, rbx
mov	ecx, 0x20
call	0x14000f550
call	0x14000f550
mov	eax, dword ptr [rbx + 0xc]
lea	edx, [rax - 1]
mov	dword ptr [rbx + 0xc], edx
test	eax, eax
jg	0x14000f6c0
jg	0x14000f6c0
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
sub	eax, esi
mov	dword ptr [rbx + 0xc], eax
test	byte ptr [rbx + 9], 4
jne	0x14000f730
jne	0x14000f730
sub	eax, 1
mov	dword ptr [rbx + 0xc], eax
nop	dword ptr [rax]
mov	rdx, rbx
mov	ecx, 0x20
call	0x14000f550
call	0x14000f550
mov	eax, dword ptr [rbx + 0xc]
lea	edx, [rax - 1]
mov	dword ptr [rbx + 0xc], edx
test	eax, eax
jne	0x14000f700
jne	0x14000f700
lea	r13d, [rsi - 1]
test	esi, esi
jg	0x14000f613
jg	0x14000f613
jmp	0x14000f6cd
jmp	0x14000f6cd
nop	dword ptr [rax + rax]
lea	r13d, [rsi - 1]
test	esi, esi
jg	0x14000f613
jg	0x14000f613
sub	dword ptr [rbx + 0xc], 1
jmp	0x14000f6c0
jmp	0x14000f6c0
mov	dword ptr [rbx + 0xc], 0xfffffffe
jmp	0x14000f6da
jmp	0x14000f6da
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rsp + 0x20]
mov	eax, dword ptr [r8 + 0x10]
mov	edi, edx
cmp	edx, eax
mov	edx, eax
mov	rsi, rcx
cmovle	edx, edi
test	eax, eax
mov	eax, dword ptr [r8 + 0xc]
mov	rbx, r8
cmovns	edi, edx
cmp	eax, edi
jg	0x14000f838
jg	0x14000f838
mov	dword ptr [r8 + 0xc], 0xffffffff
lea	edx, [rdi - 1]
test	edi, edi
je	0x14000f825
je	0x14000f825
mov	eax, dword ptr [rbx + 8]
lea	edi, [rdx + 1]
add	rdi, rsi
jmp	0x14000f7b8
jmp	0x14000f7b8
nop	
movsxd	rax, dword ptr [rbx + 0x24]
mov	byte ptr [rdx + rax], cl
mov	edx, dword ptr [rbx + 0x24]
add	edx, 1
mov	dword ptr [rbx + 0x24], edx
cmp	rsi, rdi
je	0x14000f7f1
je	0x14000f7f1
mov	eax, dword ptr [rbx + 8]
add	rsi, 1
test	ah, 0x40
jne	0x14000f7c9
jne	0x14000f7c9
mov	edx, dword ptr [rbx + 0x24]
cmp	dword ptr [rbx + 0x28], edx
jle	0x14000f7aa
jle	0x14000f7aa
movsx	ecx, byte ptr [rsi - 1]
mov	rdx, qword ptr [rbx]
test	ah, 0x20
je	0x14000f7a0
je	0x14000f7a0
call	0x140015928
call	0x140015928
mov	edx, dword ptr [rbx + 0x24]
jmp	0x14000f7aa
jmp	0x14000f7aa
nop	
movsxd	rax, dword ptr [rbx + 0x24]
mov	byte ptr [rdx + rax], 0x20
mov	edx, dword ptr [rbx + 0x24]
add	edx, 1
mov	dword ptr [rbx + 0x24], edx
mov	eax, dword ptr [rbx + 0xc]
lea	edx, [rax - 1]
mov	dword ptr [rbx + 0xc], edx
test	eax, eax
jle	0x14000f82c
jle	0x14000f82c
mov	eax, dword ptr [rbx + 8]
test	ah, 0x40
jne	0x14000f80e
jne	0x14000f80e
mov	edx, dword ptr [rbx + 0x24]
cmp	dword ptr [rbx + 0x28], edx
jle	0x14000f7eb
jle	0x14000f7eb
mov	rdx, qword ptr [rbx]
test	ah, 0x20
je	0x14000f7e0
je	0x14000f7e0
mov	ecx, 0x20
call	0x140015928
call	0x140015928
mov	edx, dword ptr [rbx + 0x24]
jmp	0x14000f7eb
jmp	0x14000f7eb
mov	dword ptr [rbx + 0xc], 0xfffffffe
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
sub	eax, edi
mov	dword ptr [r8 + 0xc], eax
mov	edx, eax
mov	eax, dword ptr [r8 + 8]
test	ah, 4
jne	0x14000f880
jne	0x14000f880
lea	eax, [rdx - 1]
mov	dword ptr [r8 + 0xc], eax
mov	rdx, rbx
mov	ecx, 0x20
call	0x14000f550
call	0x14000f550
mov	eax, dword ptr [rbx + 0xc]
lea	edx, [rax - 1]
mov	dword ptr [rbx + 0xc], edx
test	eax, eax
jne	0x14000f850
jne	0x14000f850
lea	edx, [rdi - 1]
test	edi, edi
jne	0x14000f794
jne	0x14000f794
jmp	0x14000f7f1
jmp	0x14000f7f1
nop	word ptr [rax + rax]
lea	edx, [rdi - 1]
test	edi, edi
jne	0x14000f797
jne	0x14000f797
sub	dword ptr [rbx + 0xc], 1
jmp	0x14000f801
jmp	0x14000f801
nop	word ptr cs:[rax + rax]
nop	
push	rbp
push	rsi
push	rbx
sub	rsp, 0x20
lea	rbp, [rsp + 0x20]
lea	rax, [rip + 0xae98d]
mov	rbx, rcx
test	rcx, rcx
mov	rsi, rdx
movsxd	rdx, dword ptr [rdx + 0x10]
cmove	rbx, rax
mov	rcx, rbx
test	edx, edx
js	0x14000f8e8
js	0x14000f8e8
call	0x140015180
call	0x140015180
mov	r8, rsi
mov	edx, eax
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rbp
jmp	0x14000f750
jmp	0x14000f750
nop	dword ptr [rax]
call	0x140015a08
call	0x140015a08
jmp	0x14000f8d0
jmp	0x14000f8d0
nop	
push	rbp
mov	rbp, rsp
sub	rsp, 0x30
mov	r10d, dword ptr [r8 + 8]
mov	dword ptr [r8 + 0x10], 0xffffffff
test	ecx, ecx
jne	0x14000f960
jne	0x14000f960
mov	eax, 0x2b
test	r10d, 0x100
jne	0x14000f965
jne	0x14000f965
test	r10b, 0x40
je	0x14000f978
je	0x14000f978
mov	eax, 0x20
lea	r9, [rbp - 3]
lea	r11, [rbp - 4]
mov	byte ptr [rbp - 4], al
and	r10d, 0x20
xor	ecx, ecx
movzx	eax, byte ptr [rdx + rcx]
and	eax, 0xffffffdf
or	eax, r10d
mov	byte ptr [r9 + rcx], al
add	rcx, 1
cmp	rcx, 3
jne	0x14000f932
jne	0x14000f932
lea	rdx, [r9 + 3]
mov	rcx, r11
sub	edx, r11d
call	0x14000f750
call	0x14000f750
nop	
add	rsp, 0x30
pop	rbp
ret	
ret	
mov	eax, 0x2d
mov	byte ptr [rbp - 4], al
lea	r9, [rbp - 3]
lea	r11, [rbp - 4]
jmp	0x14000f92c
jmp	0x14000f92c
nop	word ptr [rax + rax]
lea	r11, [rbp - 4]
mov	r9, r11
jmp	0x14000f92c
jmp	0x14000f92c
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
lea	rbp, [rsp + 0x30]
mov	r13d, ecx
mov	rbx, r8
cmp	ecx, 0x6f
je	0x14000fc80
je	0x14000fc80
mov	r14d, dword ptr [r8 + 0x10]
xor	eax, eax
mov	edi, dword ptr [r8 + 8]
test	r14d, r14d
cmovns	eax, r14d
add	eax, 0x12
test	edi, 0x1000
je	0x14000fab8
je	0x14000fab8
mov	ecx, 4
cmp	word ptr [rbx + 0x20], 0
je	0x14000f9f4
je	0x14000f9f4
mov	r8d, eax
mov	r9d, 0xaaaaaaab
imul	r8, r9
shr	r8, 0x21
add	eax, r8d
mov	r15d, dword ptr [rbx + 0xc]
cmp	r15d, eax
cmovge	eax, r15d
cdqe	
add	rax, 0xf
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
xor	r9d, r9d
sub	rsp, rax
cmp	r13d, 0x6f
setne	r9b
lea	r12, [rsp + 0x20]
lea	r9d, [r9*8 + 7]
test	rdx, rdx
jne	0x14000faee
jne	0x14000faee
nop	word ptr [rax + rax]
and	edi, 0xfffff7ff
mov	dword ptr [rbx + 8], edi
test	r14d, r14d
jle	0x14000fd10
jle	0x14000fd10
lea	edi, [r14 - 1]
mov	rsi, r12
add	edi, 1
mov	rcx, rsi
mov	edx, 0x30
movsxd	rdi, edi
mov	r8, rdi
add	rsi, rdi
call	0x1400159a8
call	0x1400159a8
cmp	rsi, r12
je	0x14000fd13
je	0x14000fd13
mov	rax, rsi
sub	rax, r12
mov	edx, eax
cmp	eax, r15d
jl	0x14000fd37
jl	0x14000fd37
mov	dword ptr [rbx + 0xc], 0xffffffff
cmp	r13d, 0x6f
jne	0x14000fe34
jne	0x14000fe34
cmp	r12, rsi
jae	0x14000fc6e
jae	0x14000fc6e
mov	edi, dword ptr [rbx + 8]
mov	r13d, 0xfffffffe
mov	r15d, 0xffffffff
jmp	0x14000fbe0
jmp	0x14000fbe0
nop	word ptr [rax + rax]
mov	r15d, dword ptr [rbx + 0xc]
cmp	r15d, eax
cmovge	eax, r15d
cdqe	
add	rax, 0xf
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
mov	ecx, 4
mov	r9d, 0xf
sub	rsp, rax
lea	r12, [rsp + 0x20]
test	rdx, rdx
je	0x14000fa38
je	0x14000fa38
mov	qword ptr [rbp - 8], r12
mov	r10d, r13d
mov	rsi, r12
and	r10d, 0x20
nop	dword ptr [rax]
mov	eax, r9d
mov	r11, rsi
add	rsi, 1
and	eax, edx
lea	r8d, [rax + 0x30]
add	eax, 0x37
or	eax, r10d
mov	r12d, r8d
cmp	r8b, 0x39
cmovbe	eax, r12d
shr	rdx, cl
mov	byte ptr [rsi - 1], al
test	rdx, rdx
jne	0x14000fb00
jne	0x14000fb00
mov	r12, qword ptr [rbp - 8]
cmp	rsi, r12
je	0x14000fa38
je	0x14000fa38
test	r14d, r14d
jle	0x14000fcb0
jle	0x14000fcb0
mov	rdx, rsi
mov	eax, r14d
sub	rdx, r12
sub	eax, edx
test	eax, eax
jg	0x14000fe20
jg	0x14000fe20
cmp	r13d, 0x6f
je	0x14000fd88
je	0x14000fd88
cmp	edx, r15d
jge	0x14000fdf0
jge	0x14000fdf0
sub	r15d, edx
mov	dword ptr [rbx + 0xc], r15d
test	edi, 0x800
jne	0x14000fdc0
jne	0x14000fdc0
test	r14d, r14d
js	0x14000fe39
js	0x14000fe39
lea	r13d, [r15 - 1]
test	edi, 0x400
jne	0x14000fdb0
jne	0x14000fdb0
mov	r15d, r13d
nop	word ptr [rax + rax]
mov	rdx, rbx
mov	ecx, 0x20
call	0x14000f550
call	0x14000f550
sub	r15d, 1
jae	0x14000fba0
jae	0x14000fba0
mov	r13d, 0xfffffffe
cmp	r12, rsi
jb	0x14000fbdd
jb	0x14000fbdd
jmp	0x14000fc6e
jmp	0x14000fc6e
nop	dword ptr [rax + rax]
movsxd	rax, dword ptr [rbx + 0x24]
mov	byte ptr [rdx + rax], cl
mov	eax, dword ptr [rbx + 0x24]
add	eax, 1
mov	dword ptr [rbx + 0x24], eax
cmp	r12, rsi
jae	0x14000fc15
jae	0x14000fc15
mov	edi, dword ptr [rbx + 8]
sub	rsi, 1
test	edi, 0x4000
jne	0x14000fbf4
jne	0x14000fbf4
mov	eax, dword ptr [rbx + 0x24]
cmp	dword ptr [rbx + 0x28], eax
jle	0x14000fbd2
jle	0x14000fbd2
and	edi, 0x2000
movsx	ecx, byte ptr [rsi]
mov	rdx, qword ptr [rbx]
je	0x14000fbc8
je	0x14000fbc8
call	0x140015928
call	0x140015928
mov	eax, dword ptr [rbx + 0x24]
add	eax, 1
mov	dword ptr [rbx + 0x24], eax
cmp	r12, rsi
jb	0x14000fbdd
jb	0x14000fbdd
test	r15d, r15d
jg	0x14000fc37
jg	0x14000fc37
jmp	0x14000fc6e
jmp	0x14000fc6e
nop	dword ptr [rax]
movsxd	rax, dword ptr [rbx + 0x24]
mov	byte ptr [rdx + rax], 0x20
mov	eax, dword ptr [rbx + 0x24]
add	eax, 1
mov	dword ptr [rbx + 0x24], eax
sub	r13d, 1
jb	0x14000fc6e
jb	0x14000fc6e
mov	edi, dword ptr [rbx + 8]
test	edi, 0x4000
jne	0x14000fc4a
jne	0x14000fc4a
mov	eax, dword ptr [rbx + 0x24]
cmp	dword ptr [rbx + 0x28], eax
jle	0x14000fc2b
jle	0x14000fc2b
and	edi, 0x2000
mov	rdx, qword ptr [rbx]
je	0x14000fc20
je	0x14000fc20
mov	ecx, 0x20
call	0x140015928
call	0x140015928
mov	eax, dword ptr [rbx + 0x24]
add	eax, 1
mov	dword ptr [rbx + 0x24], eax
sub	r13d, 1
jae	0x14000fc37
jae	0x14000fc37
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	
mov	r14d, dword ptr [r8 + 0x10]
xor	eax, eax
mov	edi, dword ptr [r8 + 8]
test	r14d, r14d
cmovns	eax, r14d
add	eax, 0x18
test	edi, 0x1000
je	0x14000fcd8
je	0x14000fcd8
mov	ecx, 3
jmp	0x14000f9d9
jmp	0x14000f9d9
nop	word ptr cs:[rax + rax]
cmp	r13d, 0x6f
je	0x14000fd88
je	0x14000fd88
mov	rax, rsi
sub	rax, r12
cmp	eax, r15d
jge	0x14000fdf0
jge	0x14000fdf0
sub	r15d, eax
mov	dword ptr [rbx + 0xc], r15d
jmp	0x14000fb6f
jmp	0x14000fb6f
nop	dword ptr [rax]
mov	r15d, dword ptr [rbx + 0xc]
cmp	r15d, eax
cmovge	eax, r15d
cdqe	
add	rax, 0xf
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
mov	ecx, 3
mov	r9d, 7
sub	rsp, rax
lea	r12, [rsp + 0x20]
jmp	0x14000fae5
jmp	0x14000fae5
nop	word ptr [rax + rax]
mov	rsi, r12
test	r14d, r14d
je	0x14000fa73
je	0x14000fa73
lea	rdx, [rsi + 1]
mov	byte ptr [rsi], 0x30
mov	rax, rdx
mov	rsi, rdx
sub	rax, r12
mov	edx, eax
cmp	eax, r15d
jge	0x14000fa84
jge	0x14000fa84
mov	edi, dword ptr [rbx + 8]
sub	r15d, edx
mov	dword ptr [rbx + 0xc], r15d
cmp	r13d, 0x6f
jne	0x14000fb6f
jne	0x14000fb6f
test	r14d, r14d
jns	0x14000fb84
jns	0x14000fb84
mov	eax, edi
and	eax, 0x600
cmp	eax, 0x200
jne	0x14000fb84
jne	0x14000fb84
movsxd	r15, r15d
mov	edx, 0x30
mov	rcx, rsi
mov	r8, r15
call	0x1400159a8
call	0x1400159a8
lea	rax, [rsi + r15]
mov	r15d, 0xffffffff
jmp	0x14000fdd8
jmp	0x14000fdd8
nop	dword ptr [rax]
test	edi, 0x800
jne	0x14000fe28
jne	0x14000fe28
mov	rax, rsi
sub	rax, r12
mov	edx, eax
cmp	r15d, eax
jg	0x14000fd3a
jg	0x14000fd3a
mov	dword ptr [rbx + 0xc], 0xffffffff
jmp	0x14000fa95
jmp	0x14000fa95
nop	dword ptr [rax]
cmp	r12, rsi
jb	0x14000fbe0
jb	0x14000fbe0
jmp	0x14000fc3a
jmp	0x14000fc3a
nop	
sub	r15d, 2
test	r15d, r15d
jg	0x14000fe84
jg	0x14000fe84
mov	byte ptr [rsi], r13b
lea	rax, [rsi + 2]
mov	byte ptr [rsi + 1], 0x30
cmp	r12, rax
jae	0x14000fc6e
jae	0x14000fc6e
mov	edi, dword ptr [rbx + 8]
lea	r13d, [r15 - 1]
mov	rsi, rax
jmp	0x14000fbe0
jmp	0x14000fbe0
mov	dword ptr [rbx + 0xc], 0xffffffff
and	edi, 0x800
mov	rax, rsi
mov	r15d, 0xffffffff
je	0x14000fdd8
je	0x14000fdd8
mov	byte ptr [rsi], r13b
lea	rax, [rsi + 2]
mov	r15d, 0xffffffff
mov	byte ptr [rsi + 1], 0x30
jmp	0x14000fdd8
jmp	0x14000fdd8
nop	dword ptr [rax + rax]
lea	edi, [rax - 1]
jmp	0x14000fa51
jmp	0x14000fa51
mov	byte ptr [rsi], 0x30
lea	rsi, [r11 + 2]
jmp	0x14000fa6a
jmp	0x14000fa6a
mov	edi, dword ptr [rbx + 8]
jmp	0x14000fdf7
jmp	0x14000fdf7
mov	eax, edi
and	eax, 0x600
cmp	eax, 0x200
jne	0x14000fb84
jne	0x14000fb84
movsxd	r15, r15d
mov	edx, 0x30
mov	rcx, rsi
mov	r8, r15
call	0x1400159a8
call	0x1400159a8
and	edi, 0x800
lea	rax, [rsi + r15]
je	0x14000fd7d
je	0x14000fd7d
mov	byte ptr [rax], r13b
mov	r15d, 0xffffffff
add	rax, 2
mov	byte ptr [rax - 1], 0x30
jmp	0x14000fdd8
jmp	0x14000fdd8
test	r14d, r14d
js	0x14000fe99
js	0x14000fe99
mov	byte ptr [rsi], r13b
add	rsi, 2
mov	byte ptr [rsi - 1], 0x30
jmp	0x14000fb84
jmp	0x14000fb84
mov	eax, edi
and	eax, 0x600
cmp	eax, 0x200
jne	0x14000fe89
jne	0x14000fe89
jmp	0x14000fe4b
jmp	0x14000fe4b
nop	dword ptr [rax]
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rsp + 0x20]
xor	eax, eax
mov	r14d, dword ptr [rdx + 0x10]
mov	edi, dword ptr [rdx + 8]
test	r14d, r14d
cmovns	eax, r14d
mov	rbx, rdx
add	eax, 0x17
test	edi, 0x1000
je	0x14000feee
je	0x14000feee
cmp	word ptr [rdx + 0x20], 0
jne	0x140010150
jne	0x140010150
mov	esi, dword ptr [rbx + 0xc]
cmp	esi, eax
cmovge	eax, esi
cdqe	
add	rax, 0xf
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
lea	r12, [rsp + 0x20]
test	dil, 0x80
je	0x14000ff23
je	0x14000ff23
test	rcx, rcx
js	0x140010190
js	0x140010190
and	dil, 0x7f
mov	dword ptr [rbx + 8], edi
test	rcx, rcx
je	0x140010240
je	0x140010240
movabs	r11, 0x8000000000000003
mov	r10d, edi
mov	r8, r12
movabs	r9, 0xcccccccccccccccd
and	r10d, 0x1000
nop	dword ptr [rax]
cmp	r12, r8
je	0x14000ff80
je	0x14000ff80
test	r10d, r10d
je	0x14000ff80
je	0x14000ff80
cmp	word ptr [rbx + 0x20], 0
je	0x14000ff80
je	0x14000ff80
mov	rax, r8
sub	rax, r12
and	rax, r11
cmp	rax, 3
jne	0x14000ff80
jne	0x14000ff80
mov	byte ptr [r8], 0x2c
add	r8, 1
nop	dword ptr [rax + rax]
mov	rax, rcx
lea	r13, [r8 + 1]
mul	r9
mov	rax, rcx
shr	rdx, 3
lea	r15, [rdx + rdx*4]
add	r15, r15
sub	rax, r15
add	eax, 0x30
mov	byte ptr [r8], al
cmp	rcx, 9
jbe	0x14000ffb0
jbe	0x14000ffb0
mov	rcx, rdx
mov	r8, r13
jmp	0x14000ff50
jmp	0x14000ff50
nop	
test	r14d, r14d
jle	0x14000ffe0
jle	0x14000ffe0
mov	rax, r13
mov	r8d, r14d
sub	rax, r12
sub	r8d, eax
test	r8d, r8d
jle	0x140010170
jle	0x140010170
movsxd	r15, r8d
mov	rcx, r13
mov	edx, 0x30
mov	r8, r15
add	r13, r15
call	0x1400159a8
call	0x1400159a8
cmp	r12, r13
sete	al
test	r14d, r14d
je	0x14000fff3
je	0x14000fff3
test	al, al
jne	0x140010232
jne	0x140010232
test	esi, esi
jle	0x140010030
jle	0x140010030
mov	rax, r13
sub	rax, r12
sub	esi, eax
mov	dword ptr [rbx + 0xc], esi
test	esi, esi
jle	0x140010030
jle	0x140010030
test	edi, 0x1c0
jne	0x1400101a0
jne	0x1400101a0
test	r14d, r14d
js	0x1400101af
js	0x1400101af
test	edi, 0x400
je	0x1400101f8
je	0x1400101f8
nop	word ptr [rax + rax]
test	dil, 0x80
je	0x140010110
je	0x140010110
mov	byte ptr [r13], 0x2d
lea	rsi, [r13 + 1]
cmp	r12, rsi
jb	0x140010068
jb	0x140010068
jmp	0x14001009d
jmp	0x14001009d
nop	word ptr [rax + rax]
movsxd	rax, dword ptr [rbx + 0x24]
mov	byte ptr [rdx + rax], cl
mov	eax, dword ptr [rbx + 0x24]
add	eax, 1
mov	dword ptr [rbx + 0x24], eax
cmp	r12, rsi
je	0x14001009d
je	0x14001009d
mov	edi, dword ptr [rbx + 8]
sub	rsi, 1
test	edi, 0x4000
jne	0x14001007c
jne	0x14001007c
mov	eax, dword ptr [rbx + 0x24]
cmp	dword ptr [rbx + 0x28], eax
jle	0x14001005a
jle	0x14001005a
and	edi, 0x2000
movsx	ecx, byte ptr [rsi]
mov	rdx, qword ptr [rbx]
je	0x140010050
je	0x140010050
call	0x140015928
call	0x140015928
mov	eax, dword ptr [rbx + 0x24]
add	eax, 1
mov	dword ptr [rbx + 0x24], eax
cmp	r12, rsi
jne	0x140010065
jne	0x140010065
mov	eax, dword ptr [rbx + 0xc]
jmp	0x1400100bc
jmp	0x1400100bc
nop	word ptr [rax + rax]
movsxd	rax, dword ptr [rbx + 0x24]
mov	byte ptr [rdx + rax], 0x20
mov	edx, dword ptr [rbx + 0x24]
mov	eax, dword ptr [rbx + 0xc]
add	edx, 1
mov	dword ptr [rbx + 0x24], edx
mov	edx, eax
sub	eax, 1
mov	dword ptr [rbx + 0xc], eax
test	edx, edx
jle	0x1400100f8
jle	0x1400100f8
mov	ecx, dword ptr [rbx + 8]
test	ch, 0x40
jne	0x1400100d8
jne	0x1400100d8
mov	edx, dword ptr [rbx + 0x24]
cmp	dword ptr [rbx + 0x28], edx
jle	0x1400100b6
jle	0x1400100b6
mov	rdx, qword ptr [rbx]
and	ch, 0x20
je	0x1400100a8
je	0x1400100a8
mov	ecx, 0x20
call	0x140015928
call	0x140015928
mov	edx, dword ptr [rbx + 0x24]
mov	eax, dword ptr [rbx + 0xc]
jmp	0x1400100b6
jmp	0x1400100b6
nop	word ptr [rax + rax]
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax]
test	edi, 0x100
je	0x140010130
je	0x140010130
mov	byte ptr [r13], 0x2b
lea	rsi, [r13 + 1]
jmp	0x140010043
jmp	0x140010043
nop	word ptr cs:[rax + rax]
mov	rsi, r13
test	dil, 0x40
je	0x140010043
je	0x140010043
mov	byte ptr [r13], 0x20
add	rsi, 1
jmp	0x140010043
jmp	0x140010043
nop	dword ptr [rax + rax]
mov	edx, eax
mov	r8d, 0xaaaaaaab
imul	rdx, r8
shr	rdx, 0x21
add	eax, edx
jmp	0x14000feee
jmp	0x14000feee
nop	word ptr [rax + rax]
cmp	r12, r13
jne	0x14000fff3
jne	0x14000fff3
mov	rax, r12
mov	byte ptr [rax], 0x30
lea	r13, [rax + 1]
jmp	0x14000fff3
jmp	0x14000fff3
nop	dword ptr [rax + rax]
neg	rcx
jmp	0x14000ff2c
jmp	0x14000ff2c
nop	dword ptr [rax + rax]
sub	esi, 1
mov	dword ptr [rbx + 0xc], esi
test	r14d, r14d
jns	0x14001001b
jns	0x14001001b
mov	eax, edi
and	eax, 0x600
cmp	eax, 0x200
jne	0x14001001b
jne	0x14001001b
mov	eax, dword ptr [rbx + 0xc]
lea	edx, [rax - 1]
mov	dword ptr [rbx + 0xc], edx
test	eax, eax
jle	0x140010030
jle	0x140010030
movsxd	rsi, eax
mov	rcx, r13
mov	edx, 0x30
mov	r8, rsi
add	r13, rsi
call	0x1400159a8
call	0x1400159a8
mov	dword ptr [rbx + 0xc], 0xffffffff
jmp	0x140010030
jmp	0x140010030
nop	dword ptr [rax]
mov	eax, dword ptr [rbx + 0xc]
lea	edx, [rax - 1]
mov	dword ptr [rbx + 0xc], edx
test	eax, eax
jle	0x140010030
jle	0x140010030
nop	dword ptr [rax]
mov	rdx, rbx
mov	ecx, 0x20
call	0x14000f550
call	0x14000f550
mov	eax, dword ptr [rbx + 0xc]
lea	edx, [rax - 1]
mov	dword ptr [rbx + 0xc], edx
test	eax, eax
jg	0x140010210
jg	0x140010210
mov	edi, dword ptr [rbx + 8]
jmp	0x140010030
jmp	0x140010030
mov	rax, r13
jmp	0x14001017c
jmp	0x14001017c
nop	word ptr [rax + rax]
mov	r13, r12
mov	r8d, r14d
mov	eax, 1
test	r14d, r14d
jg	0x14000ffca
jg	0x14000ffca
jmp	0x14000ffe6
jmp	0x14000ffe6
nop	dword ptr [rax]
push	rbp
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
lea	rbp, [rsp + 0x30]
cmp	dword ptr [rcx + 0x14], -3
mov	rbx, rcx
je	0x140010350
je	0x140010350
movzx	edx, word ptr [rcx + 0x18]
test	dx, dx
je	0x140010330
je	0x140010330
movsxd	rax, dword ptr [rbx + 0x14]
mov	rdi, rsp
add	rax, 0xf
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
lea	r8, [rbp - 8]
mov	qword ptr [rbp - 8], 0
lea	rsi, [rsp + 0x20]
mov	rcx, rsi
call	0x1400153b0
call	0x1400153b0
test	eax, eax
jle	0x140010390
jle	0x140010390
sub	eax, 1
lea	r12, [rsi + rax + 1]
jmp	0x1400102e5
jmp	0x1400102e5
nop	dword ptr [rax + rax]
movsxd	rdx, dword ptr [rbx + 0x24]
mov	byte ptr [rax + rdx], cl
mov	eax, dword ptr [rbx + 0x24]
add	eax, 1
mov	dword ptr [rbx + 0x24], eax
cmp	r12, rsi
je	0x14001031b
je	0x14001031b
mov	edx, dword ptr [rbx + 8]
add	rsi, 1
test	dh, 0x40
jne	0x1400102f9
jne	0x1400102f9
mov	eax, dword ptr [rbx + 0x24]
cmp	dword ptr [rbx + 0x28], eax
jle	0x1400102da
jle	0x1400102da
movsx	ecx, byte ptr [rsi - 1]
mov	rax, qword ptr [rbx]
and	dh, 0x20
je	0x1400102d0
je	0x1400102d0
mov	rdx, rax
call	0x140015928
call	0x140015928
mov	eax, dword ptr [rbx + 0x24]
add	eax, 1
mov	dword ptr [rbx + 0x24], eax
cmp	r12, rsi
jne	0x1400102e5
jne	0x1400102e5
mov	rsp, rdi
mov	rsp, rbp
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	rdx, rbx
mov	ecx, 0x2e
call	0x14000f550
call	0x14000f550
nop	
mov	rsp, rbp
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	qword ptr [rbp - 8], 0
lea	rsi, [rbp - 8]
call	0x140015978
call	0x140015978
lea	rcx, [rbp - 0xa]
mov	r9, rsi
mov	r8d, 0x10
mov	rdx, qword ptr [rax]
call	0x140015660
call	0x140015660
test	eax, eax
jle	0x1400103a8
jle	0x1400103a8
movzx	edx, word ptr [rbp - 0xa]
mov	word ptr [rbx + 0x18], dx
mov	dword ptr [rbx + 0x14], eax
jmp	0x140010280
jmp	0x140010280
nop	word ptr [rax + rax]
mov	rdx, rbx
mov	ecx, 0x2e
call	0x14000f550
call	0x14000f550
mov	rsp, rdi
jmp	0x14001031e
jmp	0x14001031e
nop	dword ptr [rax]
movzx	edx, word ptr [rbx + 0x18]
jmp	0x140010382
jmp	0x140010382
nop	
push	rbp
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rbp, [rsp + 0x20]
mov	eax, dword ptr [r9 + 0xc]
mov	r12d, ecx
mov	rdi, rdx
mov	esi, r8d
mov	rbx, r9
test	r8d, r8d
jle	0x140010520
jle	0x140010520
cmp	r8d, eax
jg	0x140010440
jg	0x140010440
mov	edx, dword ptr [r9 + 0x10]
sub	eax, r8d
cmp	eax, edx
jle	0x1400106f0
jle	0x1400106f0
sub	eax, edx
mov	dword ptr [rbx + 0xc], eax
test	edx, edx
jle	0x140010720
jle	0x140010720
sub	eax, 1
mov	dword ptr [rbx + 0xc], eax
test	esi, esi
jle	0x140010410
jle	0x140010410
test	byte ptr [rbx + 9], 0x10
jne	0x140010707
jne	0x140010707
nop	dword ptr [rax]
test	eax, eax
jle	0x140010453
jle	0x140010453
test	r12d, r12d
jne	0x1400105f8
jne	0x1400105f8
mov	edx, dword ptr [rbx + 8]
test	edx, 0x1c0
je	0x1400106d8
je	0x1400106d8
lea	ecx, [rax - 1]
mov	dword ptr [rbx + 0xc], ecx
test	ecx, ecx
je	0x14001045f
je	0x14001045f
test	dh, 6
jne	0x14001045f
jne	0x14001045f
jmp	0x140010613
jmp	0x140010613
mov	dword ptr [r9 + 0xc], 0xffffffff
test	byte ptr [r9 + 9], 0x10
jne	0x140010680
jne	0x140010680
test	r12d, r12d
jne	0x140010550
jne	0x140010550
mov	edx, dword ptr [rbx + 8]
test	dh, 1
jne	0x140010640
jne	0x140010640
and	edx, 0x40
je	0x140010480
je	0x140010480
mov	rdx, rbx
mov	ecx, 0x20
call	0x14000f550
call	0x14000f550
nop	word ptr [rax + rax]
mov	eax, dword ptr [rbx + 0xc]
test	eax, eax
jle	0x14001049c
jle	0x14001049c
mov	edx, dword ptr [rbx + 8]
and	edx, 0x600
cmp	edx, 0x200
je	0x140010658
je	0x140010658
test	esi, esi
jle	0x1400105b0
jle	0x1400105b0
nop	dword ptr [rax]
movzx	eax, byte ptr [rdi]
mov	ecx, 0x30
test	al, al
je	0x1400104bb
je	0x1400104bb
add	rdi, 1
movsx	ecx, al
mov	rdx, rbx
call	0x14000f550
call	0x14000f550
sub	esi, 1
je	0x1400104f8
je	0x1400104f8
test	byte ptr [rbx + 9], 0x10
je	0x1400104a8
je	0x1400104a8
cmp	word ptr [rbx + 0x20], 0
je	0x1400104a8
je	0x1400104a8
imul	eax, esi, 0xaaaaaaab
cmp	eax, 0x55555555
ja	0x1400104a8
ja	0x1400104a8
lea	rcx, [rbx + 0x20]
mov	r8, rbx
mov	edx, 1
call	0x14000f5b0
call	0x14000f5b0
jmp	0x1400104a8
jmp	0x1400104a8
nop	dword ptr [rax]
mov	eax, dword ptr [rbx + 0x10]
test	eax, eax
jg	0x140010568
jg	0x140010568
test	byte ptr [rbx + 9], 8
jne	0x1400105c8
jne	0x1400105c8
sub	eax, 1
mov	dword ptr [rbx + 0x10], eax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
test	eax, eax
jle	0x140010740
jle	0x140010740
mov	edx, dword ptr [r9 + 0x10]
sub	eax, 1
cmp	eax, edx
jg	0x1400103ec
jg	0x1400103ec
mov	dword ptr [rbx + 0xc], 0xffffffff
test	r12d, r12d
je	0x14001045c
je	0x14001045c
nop	word ptr [rax + rax]
mov	rdx, rbx
mov	ecx, 0x2d
call	0x14000f550
call	0x14000f550
jmp	0x140010480
jmp	0x140010480
nop	word ptr [rax + rax]
mov	rcx, rbx
call	0x140010260
call	0x140010260
jmp	0x140010593
jmp	0x140010593
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rdi]
mov	ecx, 0x30
test	al, al
je	0x14001058b
je	0x14001058b
add	rdi, 1
movsx	ecx, al
mov	rdx, rbx
call	0x14000f550
call	0x14000f550
mov	eax, dword ptr [rbx + 0x10]
lea	edx, [rax - 1]
mov	dword ptr [rbx + 0x10], edx
test	eax, eax
jg	0x140010578
jg	0x140010578
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	rdx, rbx
mov	ecx, 0x30
call	0x14000f550
call	0x14000f550
mov	eax, dword ptr [rbx + 0x10]
test	eax, eax
jle	0x14001076f
jle	0x14001076f
mov	rcx, rbx
call	0x140010260
call	0x140010260
test	esi, esi
je	0x140010593
je	0x140010593
mov	eax, dword ptr [rbx + 0x10]
add	eax, esi
mov	dword ptr [rbx + 0x10], eax
nop	dword ptr [rax]
mov	rdx, rbx
mov	ecx, 0x30
call	0x14000f550
call	0x14000f550
add	esi, 1
jne	0x1400105e0
jne	0x1400105e0
jmp	0x140010593
jmp	0x140010593
nop	dword ptr [rax]
lea	edx, [rax - 1]
mov	dword ptr [rbx + 0xc], edx
test	edx, edx
je	0x140010550
je	0x140010550
test	dword ptr [rbx + 8], 0x600
jne	0x140010550
jne	0x140010550
sub	eax, 2
mov	dword ptr [rbx + 0xc], eax
nop	dword ptr [rax]
mov	rdx, rbx
mov	ecx, 0x20
call	0x14000f550
call	0x14000f550
mov	eax, dword ptr [rbx + 0xc]
lea	edx, [rax - 1]
mov	dword ptr [rbx + 0xc], edx
test	eax, eax
jg	0x140010620
jg	0x140010620
jmp	0x140010453
jmp	0x140010453
nop	
mov	rdx, rbx
mov	ecx, 0x2b
call	0x14000f550
call	0x14000f550
jmp	0x140010480
jmp	0x140010480
nop	word ptr [rax + rax]
sub	eax, 1
mov	dword ptr [rbx + 0xc], eax
nop	
mov	rdx, rbx
mov	ecx, 0x30
call	0x14000f550
call	0x14000f550
mov	eax, dword ptr [rbx + 0xc]
lea	edx, [rax - 1]
mov	dword ptr [rbx + 0xc], edx
test	eax, eax
jg	0x140010660
jg	0x140010660
jmp	0x14001049c
jmp	0x14001049c
nop	
cmp	word ptr [r9 + 0x20], 0
je	0x140010453
je	0x140010453
mov	eax, 0xffffffff
mov	edx, 0xaaaaaaab
lea	r8d, [rsi + 2]
imul	r8, rdx
mov	edx, eax
shr	r8, 0x21
lea	ecx, [r8 - 1]
sub	ecx, eax
cmp	r8d, 1
jne	0x1400106c8
jne	0x1400106c8
jmp	0x140010410
jmp	0x140010410
nop	dword ptr [rax]
sub	edx, 1
mov	eax, ecx
add	eax, edx
mov	dword ptr [rbx + 0xc], edx
je	0x140010768
je	0x140010768
test	edx, edx
jg	0x1400106b8
jg	0x1400106b8
jmp	0x140010453
jmp	0x140010453
nop	dword ptr [rax]
and	dh, 6
jne	0x140010480
jne	0x140010480
sub	eax, 1
jmp	0x140010616
jmp	0x140010616
nop	dword ptr [rax]
mov	dword ptr [r9 + 0xc], 0xffffffff
mov	eax, 0xffffffff
test	byte ptr [rbx + 9], 0x10
je	0x140010410
je	0x140010410
cmp	word ptr [rbx + 0x20], 0
je	0x140010410
je	0x140010410
jmp	0x140010691
jmp	0x140010691
nop	word ptr [rax + rax]
mov	edx, dword ptr [rbx + 8]
test	dh, 8
jne	0x1400103f9
jne	0x1400103f9
test	esi, esi
jle	0x140010414
jle	0x140010414
and	dh, 0x10
jne	0x140010707
jne	0x140010707
jmp	0x140010414
jmp	0x140010414
nop	
jne	0x140010537
jne	0x140010537
mov	eax, dword ptr [r9 + 0x10]
test	eax, eax
jns	0x140010537
jns	0x140010537
neg	eax
mov	dword ptr [r9 + 0xc], eax
test	byte ptr [r9 + 9], 8
jne	0x1400103f9
jne	0x1400103f9
jmp	0x140010414
jmp	0x140010414
mov	eax, edx
jmp	0x140010410
jmp	0x140010410
test	byte ptr [rbx + 9], 8
jne	0x1400105c8
jne	0x1400105c8
test	esi, esi
jne	0x1400105d7
jne	0x1400105d7
jmp	0x140010509
jmp	0x140010509
nop	word ptr cs:[rax + rax]
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rsp + 0x20]
mov	r10d, 1
sub	r8d, 1
mov	r11d, ecx
mov	rbx, r9
movsxd	rsi, r8d
sar	r8d, 0x1f
imul	rcx, rsi, 0x66666667
sar	rcx, 0x22
sub	ecx, r8d
je	0x1400107e3
je	0x1400107e3
nop	dword ptr [rax]
movsxd	rax, ecx
sar	ecx, 0x1f
add	r10d, 1
imul	rax, rax, 0x66666667
sar	rax, 0x22
sub	eax, ecx
mov	ecx, eax
jne	0x1400107c8
jne	0x1400107c8
mov	eax, dword ptr [rbx + 0x2c]
cmp	eax, -1
jne	0x1400107f7
jne	0x1400107f7
mov	dword ptr [rbx + 0x2c], 2
mov	eax, 2
cmp	r10d, eax
mov	r8d, dword ptr [rbx + 0xc]
mov	r9, rbx
cmovge	eax, r10d
lea	ecx, [rax + 2]
mov	edi, eax
mov	eax, r8d
sub	eax, ecx
cmp	r8d, ecx
mov	ecx, 0xffffffff
mov	r8d, 1
cmovle	eax, ecx
mov	ecx, r11d
mov	dword ptr [rbx + 0xc], eax
call	0x1400103b0
call	0x1400103b0
mov	ecx, dword ptr [rbx + 8]
mov	eax, dword ptr [rbx + 0x2c]
mov	rdx, rbx
mov	dword ptr [rbx + 0x10], eax
mov	eax, ecx
and	ecx, 0x20
or	eax, 0x1c0
or	ecx, 0x45
mov	dword ptr [rbx + 8], eax
call	0x14000f550
call	0x14000f550
lea	r10d, [rdi + 1]
add	dword ptr [rbx + 0xc], r10d
mov	rdx, rbx
mov	rcx, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x14000feb0
jmp	0x14000feb0
nop	word ptr [rax + rax]
push	rbp
push	rsi
push	rbx
sub	rsp, 0x50
lea	rbp, [rsp + 0x50]
mov	r8d, dword ptr [rdx + 0x10]
fld	xword ptr [rcx]
mov	rbx, rdx
test	r8d, r8d
js	0x1400108e0
js	0x1400108e0
add	r8d, 1
lea	rax, [rbp - 8]
lea	rdx, [rbp - 0x20]
mov	ecx, 2
fstp	xword ptr [rbp - 0x20]
lea	r9, [rbp - 4]
mov	qword ptr [rsp + 0x20], rax
call	0x14000f460
call	0x14000f460
mov	r8d, dword ptr [rbp - 4]
mov	rsi, rax
cmp	r8d, 0xffff8000
je	0x1400108f0
je	0x1400108f0
mov	ecx, dword ptr [rbp - 8]
mov	r9, rbx
mov	rdx, rax
call	0x140010790
call	0x140010790
mov	rcx, rsi
call	0x140011ae0
call	0x140011ae0
nop	
add	rsp, 0x50
pop	rbx
pop	rsi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	dword ptr [rdx + 0x10], 6
mov	r8d, 7
jmp	0x14001088e
jmp	0x14001088e
nop	
mov	ecx, dword ptr [rbp - 8]
mov	r8, rbx
mov	rdx, rax
call	0x14000f8f0
call	0x14000f8f0
mov	rcx, rsi
call	0x140011ae0
call	0x140011ae0
nop	
add	rsp, 0x50
pop	rbx
pop	rsi
pop	rbp
ret	
ret	
nop	
push	rbp
push	rsi
push	rbx
sub	rsp, 0x50
lea	rbp, [rsp + 0x50]
mov	r8d, dword ptr [rdx + 0x10]
fld	xword ptr [rcx]
mov	rbx, rdx
test	r8d, r8d
jns	0x140010937
jns	0x140010937
mov	dword ptr [rdx + 0x10], 6
mov	r8d, 6
lea	rax, [rbp - 8]
lea	rdx, [rbp - 0x20]
mov	ecx, 3
fstp	xword ptr [rbp - 0x20]
lea	r9, [rbp - 4]
mov	qword ptr [rsp + 0x20], rax
call	0x14000f460
call	0x14000f460
mov	r8d, dword ptr [rbp - 4]
mov	rsi, rax
cmp	r8d, 0xffff8000
je	0x1400109d0
je	0x1400109d0
mov	ecx, dword ptr [rbp - 8]
mov	rdx, rax
mov	r9, rbx
call	0x1400103b0
call	0x1400103b0
mov	eax, dword ptr [rbx + 0xc]
jmp	0x140010994
jmp	0x140010994
nop	dword ptr [rax + rax]
movsxd	rax, dword ptr [rbx + 0x24]
mov	byte ptr [rdx + rax], 0x20
mov	edx, dword ptr [rbx + 0x24]
mov	eax, dword ptr [rbx + 0xc]
add	edx, 1
mov	dword ptr [rbx + 0x24], edx
mov	edx, eax
sub	eax, 1
mov	dword ptr [rbx + 0xc], eax
test	edx, edx
jle	0x1400109de
jle	0x1400109de
mov	ecx, dword ptr [rbx + 8]
test	ch, 0x40
jne	0x1400109b0
jne	0x1400109b0
mov	edx, dword ptr [rbx + 0x24]
cmp	dword ptr [rbx + 0x28], edx
jle	0x14001098e
jle	0x14001098e
mov	rdx, qword ptr [rbx]
and	ch, 0x20
je	0x140010980
je	0x140010980
mov	ecx, 0x20
call	0x140015928
call	0x140015928
mov	edx, dword ptr [rbx + 0x24]
mov	eax, dword ptr [rbx + 0xc]
jmp	0x14001098e
jmp	0x14001098e
nop	word ptr [rax + rax]
mov	ecx, dword ptr [rbp - 8]
mov	r8, rbx
mov	rdx, rax
call	0x14000f8f0
call	0x14000f8f0
mov	rcx, rsi
call	0x140011ae0
call	0x140011ae0
nop	
add	rsp, 0x50
pop	rbx
pop	rsi
pop	rbp
ret	
ret	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
lea	rbp, [rsp + 0x50]
mov	r8d, dword ptr [rdx + 0x10]
fld	xword ptr [rcx]
mov	rbx, rdx
test	r8d, r8d
js	0x140010af8
js	0x140010af8
je	0x140010ae0
je	0x140010ae0
lea	rax, [rbp - 8]
lea	rdx, [rbp - 0x20]
mov	ecx, 2
fstp	xword ptr [rbp - 0x20]
lea	r9, [rbp - 4]
mov	qword ptr [rsp + 0x20], rax
call	0x14000f460
call	0x14000f460
mov	edi, dword ptr [rbp - 4]
mov	rsi, rax
cmp	edi, 0xffff8000
je	0x140010b10
je	0x140010b10
mov	eax, dword ptr [rbx + 8]
and	eax, 0x800
cmp	edi, -3
jl	0x140010aa0
jl	0x140010aa0
mov	edx, dword ptr [rbx + 0x10]
cmp	edi, edx
jg	0x140010aa0
jg	0x140010aa0
test	eax, eax
je	0x140010b20
je	0x140010b20
sub	edx, edi
mov	dword ptr [rbx + 0x10], edx
mov	ecx, dword ptr [rbp - 8]
mov	r9, rbx
mov	r8d, edi
mov	rdx, rsi
call	0x1400103b0
call	0x1400103b0
jmp	0x140010a8d
jmp	0x140010a8d
nop	dword ptr [rax]
mov	rdx, rbx
mov	ecx, 0x20
call	0x14000f550
call	0x14000f550
mov	eax, dword ptr [rbx + 0xc]
lea	edx, [rax - 1]
mov	dword ptr [rbx + 0xc], edx
test	eax, eax
jg	0x140010a80
jg	0x140010a80
jmp	0x140010ac3
jmp	0x140010ac3
nop	dword ptr [rax]
test	eax, eax
jne	0x140010ad8
jne	0x140010ad8
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
sub	eax, 1
mov	dword ptr [rbx + 0x10], eax
mov	ecx, dword ptr [rbp - 8]
mov	r9, rbx
mov	r8d, edi
mov	rdx, rsi
call	0x140010790
call	0x140010790
mov	rcx, rsi
call	0x140011ae0
call	0x140011ae0
nop	
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	eax, dword ptr [rbx + 0x10]
sub	eax, 1
jmp	0x140010aaf
jmp	0x140010aaf
mov	dword ptr [rdx + 0x10], 1
mov	r8d, 1
jmp	0x140010a15
jmp	0x140010a15
nop	word ptr [rax + rax]
mov	dword ptr [rdx + 0x10], 6
mov	r8d, 6
jmp	0x140010a15
jmp	0x140010a15
nop	word ptr [rax + rax]
mov	ecx, dword ptr [rbp - 8]
mov	r8, rbx
mov	rdx, rax
call	0x14000f8f0
call	0x14000f8f0
jmp	0x140010ac3
jmp	0x140010ac3
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
sub	eax, edi
mov	dword ptr [rbx + 0x10], eax
jns	0x140010a66
jns	0x140010a66
mov	edx, dword ptr [rbx + 0xc]
test	edx, edx
jle	0x140010a66
jle	0x140010a66
add	eax, edx
mov	dword ptr [rbx + 0xc], eax
jmp	0x140010a66
jmp	0x140010a66
nop	dword ptr [rax + rax]
push	rbp
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x50
lea	rbp, [rsp + 0x50]
mov	r10d, dword ptr [r8 + 0x10]
mov	r9, rcx
mov	eax, edx
mov	rbx, r8
test	dx, dx
jne	0x140010b7d
jne	0x140010b7d
test	rcx, rcx
je	0x140010c68
je	0x140010c68
lea	r8d, [rax - 3]
cmp	r10d, 0xe
jbe	0x140010c20
jbe	0x140010c20
movsx	r12, r8w
mov	edx, 0x10
test	r9, r9
je	0x140010fa0
je	0x140010fa0
mov	r10d, dword ptr [rbx + 8]
lea	rdi, [rbp - 0x20]
mov	rsi, rdi
mov	r11d, r10d
mov	r13d, r10d
and	r11d, 0x20
and	r13d, 0x800
jmp	0x140010be6
jmp	0x140010be6
nop	dword ptr [rax + rax]
cmp	rdi, rcx
jb	0x140010bd0
jb	0x140010bd0
mov	esi, dword ptr [rbx + 0x10]
test	esi, esi
js	0x140010f48
js	0x140010f48
add	eax, 0x30
mov	byte ptr [rcx], al
lea	rsi, [rcx + 1]
shr	r9, 4
sub	edx, 1
je	0x140010dd0
je	0x140010dd0
mov	eax, r9d
and	eax, 0xf
cmp	edx, 1
je	0x140010da0
je	0x140010da0
mov	ecx, dword ptr [rbx + 0x10]
test	ecx, ecx
jle	0x140010c02
jle	0x140010c02
sub	ecx, 1
mov	dword ptr [rbx + 0x10], ecx
mov	rcx, rsi
test	eax, eax
je	0x140010bc0
je	0x140010bc0
cmp	eax, 9
jbe	0x140010bd0
jbe	0x140010bd0
add	eax, 0x37
or	eax, r11d
jmp	0x140010bd3
jmp	0x140010bd3
nop	word ptr cs:[rax + rax]
mov	ecx, 0xe
mov	edx, 4
shr	r9, 1
sub	ecx, r10d
shl	ecx, 2
shl	rdx, cl
add	rdx, r9
jns	0x140010f90
jns	0x140010f90
mov	ecx, 0xf
shr	rdx, 3
lea	r8d, [rax + 1]
sub	ecx, r10d
movsx	r12, r8w
shl	ecx, 2
shr	rdx, cl
mov	r9, rdx
lea	edx, [r10 + 1]
jmp	0x140010b9d
jmp	0x140010b9d
nop	dword ptr [rax]
cmp	r10d, 0xe
ja	0x140010f78
ja	0x140010f78
mov	ecx, 0xe
mov	edx, 4
xor	r12d, r12d
xor	r8d, r8d
sub	ecx, r10d
shl	ecx, 2
shl	rdx, cl
mov	ecx, 0xf
add	rdx, rdx
sub	ecx, r10d
shl	ecx, 2
shr	rdx, cl
mov	r9, rdx
test	rdx, rdx
jne	0x140010c5c
jne	0x140010c5c
test	r10d, r10d
jne	0x140010c5c
jne	0x140010c5c
mov	r10d, dword ptr [rbx + 8]
lea	rdi, [rbp - 0x20]
mov	rax, rdi
test	r10d, 0x800
je	0x140010cc5
je	0x140010cc5
mov	byte ptr [rbp - 0x20], 0x2e
lea	rax, [rbp - 0x1f]
mov	r9d, dword ptr [rbx + 0xc]
mov	byte ptr [rax], 0x30
lea	rsi, [rax + 1]
mov	r13d, 2
test	r9d, r9d
jg	0x140010dec
jg	0x140010dec
test	r10b, 0x80
jne	0x140010eb0
jne	0x140010eb0
test	r10d, 0x100
jne	0x140010f60
jne	0x140010f60
and	r10d, 0x40
jne	0x140010fb0
jne	0x140010fb0
mov	rdx, rbx
mov	ecx, 0x30
call	0x14000f550
call	0x14000f550
mov	ecx, dword ptr [rbx + 8]
mov	rdx, rbx
and	ecx, 0x20
or	ecx, 0x58
call	0x14000f550
call	0x14000f550
mov	eax, dword ptr [rbx + 0xc]
test	eax, eax
jle	0x140010d52
jle	0x140010d52
test	byte ptr [rbx + 9], 2
je	0x140010d52
je	0x140010d52
sub	eax, 1
mov	dword ptr [rbx + 0xc], eax
nop	dword ptr [rax]
mov	rdx, rbx
mov	ecx, 0x30
call	0x14000f550
call	0x14000f550
mov	eax, dword ptr [rbx + 0xc]
lea	edx, [rax - 1]
mov	dword ptr [rbx + 0xc], edx
test	eax, eax
jg	0x140010d38
jg	0x140010d38
lea	r14, [rbp - 0x22]
cmp	rdi, rsi
jb	0x140010d7a
jb	0x140010d7a
jmp	0x140010ed5
jmp	0x140010ed5
movzx	eax, word ptr [rbx + 0x20]
mov	word ptr [rbp - 0x22], ax
test	ax, ax
jne	0x140010f30
jne	0x140010f30
cmp	rsi, rdi
je	0x140010ed5
je	0x140010ed5
movsx	ecx, byte ptr [rsi - 1]
sub	rsi, 1
cmp	ecx, 0x2e
je	0x140010f20
je	0x140010f20
cmp	ecx, 0x2c
je	0x140010d60
je	0x140010d60
mov	rdx, rbx
call	0x14000f550
call	0x14000f550
jmp	0x140010d71
jmp	0x140010d71
nop	word ptr [rax + rax]
cmp	rdi, rsi
jb	0x140010db8
jb	0x140010db8
test	r13d, r13d
jne	0x140010db8
jne	0x140010db8
mov	ecx, dword ptr [rbx + 0x10]
test	ecx, ecx
jle	0x140010fc8
jle	0x140010fc8
nop	dword ptr [rax]
mov	byte ptr [rsi], 0x2e
lea	rcx, [rsi + 1]
jmp	0x140010c05
jmp	0x140010c05
test	ecx, ecx
jne	0x140010dd0
jne	0x140010dd0
mov	byte ptr [rsi], 0x30
add	rsi, 1
nop	
cmp	rsi, rdi
je	0x140010fe0
je	0x140010fe0
mov	r9d, dword ptr [rbx + 0xc]
mov	r13d, 2
test	r9d, r9d
jle	0x140010cdf
jle	0x140010cdf
mov	edx, dword ptr [rbx + 0x10]
mov	rcx, rsi
movsx	eax, r8w
movsx	r8, r8w
sub	rcx, rdi
lea	r11d, [rdx + rcx]
test	edx, edx
mov	edx, r10d
cmovg	ecx, r11d
and	edx, 0x1c0
cmp	edx, 1
sbb	ecx, -6
imul	r8, r8, 0x66666667
sar	eax, 0x1f
mov	r11d, ecx
sar	r8, 0x22
sub	r8d, eax
je	0x140010e5d
je	0x140010e5d
nop	dword ptr [rax]
movsxd	rax, r8d
mov	edx, r8d
add	r11d, 1
imul	rax, rax, 0x66666667
sar	edx, 0x1f
sar	rax, 0x22
sub	eax, edx
mov	r8d, eax
jne	0x140010e30
jne	0x140010e30
mov	r13d, r11d
sub	r13d, ecx
add	r13d, 2
movsx	r13d, r13w
cmp	r9d, r11d
jle	0x140010f50
jle	0x140010f50
sub	r9d, r11d
test	r10d, 0x600
jne	0x140010f56
jne	0x140010f56
sub	r9d, 1
mov	dword ptr [rbx + 0xc], r9d
nop	
mov	rdx, rbx
mov	ecx, 0x20
call	0x14000f550
call	0x14000f550
mov	eax, dword ptr [rbx + 0xc]
lea	edx, [rax - 1]
mov	dword ptr [rbx + 0xc], edx
test	eax, eax
jg	0x140010e80
jg	0x140010e80
mov	r10d, dword ptr [rbx + 8]
test	r10b, 0x80
je	0x140010ce9
je	0x140010ce9
nop	dword ptr [rax + rax]
mov	rdx, rbx
mov	ecx, 0x2d
call	0x14000f550
call	0x14000f550
jmp	0x140010d00
jmp	0x140010d00
nop	word ptr [rax + rax]
mov	rdx, rbx
mov	ecx, 0x30
call	0x14000f550
call	0x14000f550
mov	eax, dword ptr [rbx + 0x10]
lea	edx, [rax - 1]
mov	dword ptr [rbx + 0x10], edx
test	eax, eax
jg	0x140010ec8
jg	0x140010ec8
mov	ecx, dword ptr [rbx + 8]
mov	rdx, rbx
and	ecx, 0x20
or	ecx, 0x50
call	0x14000f550
call	0x14000f550
add	dword ptr [rbx + 0xc], r13d
mov	rdx, rbx
mov	rcx, r12
or	dword ptr [rbx + 8], 0x1c0
add	rsp, 0x50
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	rbp
jmp	0x14000feb0
jmp	0x14000feb0
nop	word ptr [rax + rax]
mov	rcx, rbx
call	0x140010260
call	0x140010260
jmp	0x140010d71
jmp	0x140010d71
nop	dword ptr [rax]
mov	r8, rbx
mov	edx, 1
mov	rcx, r14
call	0x14000f5b0
call	0x14000f5b0
jmp	0x140010d71
jmp	0x140010d71
nop	dword ptr [rax]
mov	rsi, rcx
jmp	0x140010bd9
jmp	0x140010bd9
mov	r9d, 0xffffffff
mov	dword ptr [rbx + 0xc], r9d
jmp	0x140010cdf
jmp	0x140010cdf
nop	
mov	rdx, rbx
mov	ecx, 0x2b
call	0x14000f550
call	0x14000f550
jmp	0x140010d00
jmp	0x140010d00
nop	word ptr [rax + rax]
test	r10d, r10d
jle	0x140010ff0
jle	0x140010ff0
xor	r12d, r12d
xor	r8d, r8d
xor	r9d, r9d
mov	edx, 0x10
jmp	0x140010b9d
jmp	0x140010b9d
movsx	r12, r8w
jmp	0x140010c8b
jmp	0x140010c8b
nop	dword ptr [rax]
test	r10d, r10d
jg	0x140010b9d
jg	0x140010b9d
jmp	0x140010ca9
jmp	0x140010ca9
nop	
mov	rdx, rbx
mov	ecx, 0x20
call	0x14000f550
call	0x14000f550
jmp	0x140010d00
jmp	0x140010d00
nop	word ptr [rax + rax]
test	eax, eax
je	0x140010dc4
je	0x140010dc4
mov	rcx, rsi
jmp	0x140010c09
jmp	0x140010c09
nop	dword ptr [rax + rax]
mov	eax, dword ptr [rbx + 0x10]
test	eax, eax
jg	0x140010cbd
jg	0x140010cbd
jmp	0x140010cb1
jmp	0x140010cb1
mov	r10d, dword ptr [r8 + 8]
xor	r12d, r12d
xor	r8d, r8d
lea	rdi, [rbp - 0x20]
jmp	0x140010cb1
jmp	0x140010cb1
nop	word ptr cs:[rax + rax]
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0xb8
lea	rbp, [rsp + 0xb0]
mov	r14, qword ptr [rbp + 0x70]
mov	edi, ecx
mov	r12, rdx
mov	ebx, r8d
mov	rsi, r9
call	0x1400158a8
call	0x1400158a8
and	edi, 0x6000
xor	edx, edx
mov	dword ptr [rbp - 8], ebx
movabs	rcx, 0xfffffffdffffffff
mov	word ptr [rbp - 0x18], dx
mov	eax, dword ptr [rax]
lea	rbx, [rsi + 1]
mov	qword ptr [rbp - 0x20], rcx
xor	ecx, ecx
mov	word ptr [rbp - 0x10], cx
movsx	ecx, byte ptr [rsi]
mov	qword ptr [rbp - 0x30], r12
mov	dword ptr [rbp - 0x28], edi
mov	edx, ecx
mov	dword ptr [rbp - 0x24], 0xffffffff
mov	dword ptr [rbp - 0x14], 0
mov	dword ptr [rbp - 0xc], 0
mov	dword ptr [rbp - 4], 0xffffffff
test	ecx, ecx
je	0x140011193
je	0x140011193
lea	rsi, [rbp - 0x24]
mov	dword ptr [rbp - 0x6c], eax
lea	r13, [rip + 0xad1ba]
mov	r15, rbx
mov	qword ptr [rbp - 0x68], rsi
jmp	0x1400110e9
jmp	0x1400110e9
nop	
mov	eax, dword ptr [rbp - 0x28]
mov	esi, dword ptr [rbp - 0xc]
test	ah, 0x40
jne	0x1400110c0
jne	0x1400110c0
cmp	dword ptr [rbp - 8], esi
jle	0x1400110d0
jle	0x1400110d0
mov	r8, qword ptr [rbp - 0x30]
test	ah, 0x20
jne	0x140011130
jne	0x140011130
movsxd	rax, esi
mov	byte ptr [r8 + rax], dl
add	esi, 1
mov	dword ptr [rbp - 0xc], esi
movzx	edx, byte ptr [r15]
add	r15, 1
movsx	ecx, dl
test	ecx, ecx
je	0x140011190
je	0x140011190
cmp	ecx, 0x25
jne	0x1400110b0
jne	0x1400110b0
movzx	edx, byte ptr [r15]
mov	dword ptr [rbp - 0x28], edi
mov	qword ptr [rbp - 0x24], 0xffffffffffffffff
test	dl, dl
je	0x140011190
je	0x140011190
mov	r10, qword ptr [rbp - 0x68]
mov	rsi, r15
xor	r11d, r11d
xor	ebx, ebx
lea	eax, [rdx - 0x20]
lea	r12, [rsi + 1]
movsx	ecx, dl
cmp	al, 0x5a
ja	0x140011140
ja	0x140011140
movzx	eax, al
movsxd	rax, dword ptr [r13 + rax*4]
add	rax, r13
jmp	rax
jmp	rax
nop	dword ptr [rax]
mov	rdx, r8
call	0x140015928
call	0x140015928
jmp	0x1400110d0
jmp	0x1400110d0
nop	word ptr [rax + rax]
sub	edx, 0x30
cmp	dl, 9
ja	0x14001134a
ja	0x14001134a
cmp	ebx, 3
ja	0x14001134a
ja	0x14001134a
test	ebx, ebx
jne	0x14001182f
jne	0x14001182f
mov	ebx, 1
test	r10, r10
je	0x140011180
je	0x140011180
mov	eax, dword ptr [r10]
test	eax, eax
js	0x1400118d1
js	0x1400118d1
lea	eax, [rax + rax*4]
lea	eax, [rcx + rax*2 - 0x30]
mov	dword ptr [r10], eax
nop	dword ptr [rax]
movzx	edx, byte ptr [rsi + 1]
mov	rsi, r12
test	dl, dl
jne	0x140011111
jne	0x140011111
nop	dword ptr [rax + rax]
mov	ecx, dword ptr [rbp - 0xc]
mov	eax, ecx
add	rsp, 0xb8
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax]
and	dword ptr [rbp - 0x28], 0xfffffeff
cmp	r11d, 3
je	0x1400118ff
je	0x1400118ff
cmp	r11d, 2
je	0x1400119ac
je	0x1400119ac
mov	edx, dword ptr [r14]
movzx	eax, dx
cmp	r11d, 1
je	0x1400111e8
je	0x1400111e8
mov	r8d, edx
cmp	r11d, 5
movzx	edx, dl
mov	rax, r8
cmove	rax, rdx
mov	qword ptr [rbp - 0x40], rax
cmp	ecx, 0x75
je	0x140011941
je	0x140011941
lea	r8, [rbp - 0x30]
mov	rdx, rax
call	0x14000f990
call	0x14000f990
jmp	0x140011490
jmp	0x140011490
nop	word ptr cs:[rax + rax]
movzx	edx, byte ptr [rsi + 1]
mov	r11d, 3
mov	rsi, r12
mov	ebx, 4
jmp	0x140011187
jmp	0x140011187
or	dword ptr [rbp - 0x28], 0x80
lea	rsi, [r14 + 8]
cmp	r11d, 3
je	0x140011952
je	0x140011952
movsxd	rcx, dword ptr [r14]
cmp	r11d, 2
je	0x14001125b
je	0x14001125b
cmp	r11d, 1
je	0x1400118c0
je	0x1400118c0
movsx	rdx, cl
cmp	r11d, 5
cmove	rcx, rdx
lea	rdx, [rbp - 0x30]
mov	r14, rsi
mov	r15, r12
call	0x14000feb0
call	0x14000feb0
jmp	0x1400110d6
jmp	0x1400110d6
test	ebx, ebx
jne	0x14001127c
jne	0x14001127c
cmp	dword ptr [rbp - 0x28], edi
je	0x14001189a
je	0x14001189a
mov	rdx, qword ptr [r14]
lea	rsi, [r14 + 8]
lea	r8, [rbp - 0x30]
mov	ecx, 0x78
mov	r14, rsi
mov	r15, r12
call	0x14000f990
call	0x14000f990
jmp	0x1400110d6
jmp	0x1400110d6
movzx	edx, byte ptr [rsi + 1]
cmp	dl, 0x68
je	0x140011907
je	0x140011907
mov	rsi, r12
mov	r11d, 1
mov	ebx, 4
jmp	0x140011187
jmp	0x140011187
mov	ecx, dword ptr [rbp - 0x6c]
mov	r15, r12
call	0x1400159f8
call	0x1400159f8
lea	rdx, [rbp - 0x30]
mov	rcx, rax
call	0x14000f8a0
call	0x14000f8a0
jmp	0x1400110d6
jmp	0x1400110d6
mov	rcx, qword ptr [r14]
movsxd	rdx, dword ptr [rbp - 0xc]
cmp	r11d, 5
je	0x14001191f
je	0x14001191f
cmp	r11d, 1
je	0x1400119a4
je	0x1400119a4
cmp	r11d, 2
je	0x140011303
je	0x140011303
cmp	r11d, 3
je	0x1400118c9
je	0x1400118c9
mov	dword ptr [rcx], edx
jmp	0x140011490
jmp	0x140011490
movzx	edx, byte ptr [rsi + 1]
cmp	dl, 0x6c
je	0x14001197c
je	0x14001197c
mov	rsi, r12
mov	r11d, 2
mov	ebx, 4
jmp	0x140011187
jmp	0x140011187
movzx	edx, byte ptr [rsi + 1]
cmp	dl, 0x36
je	0x14001195a
je	0x14001195a
cmp	dl, 0x33
jne	0x14001187d
jne	0x14001187d
cmp	byte ptr [rsi + 2], 0x32
je	0x1400119c7
je	0x1400119c7
lea	rdx, [rbp - 0x30]
mov	ecx, 0x25
call	0x14000f550
call	0x14000f550
jmp	0x1400110d6
jmp	0x1400110d6
nop	dword ptr [rax]
movzx	edx, byte ptr [rsi + 1]
or	dword ptr [rbp - 0x28], 4
mov	rsi, r12
mov	ebx, 4
jmp	0x140011187
jmp	0x140011187
mov	eax, dword ptr [rbp - 0x28]
mov	rdx, qword ptr [r14]
or	eax, 0x20
mov	dword ptr [rbp - 0x28], eax
test	al, 4
je	0x140011562
je	0x140011562
mov	r8, qword ptr [rdx]
mov	r9d, dword ptr [rdx + 8]
mov	r10, r8
movsx	r11d, r9w
mov	rdx, r9
shr	r10, 0x20
lea	esi, [r11 + r11]
and	r10d, 0x7fffffff
movzx	esi, si
or	r10d, r8d
mov	ecx, r10d
neg	ecx
or	ecx, r10d
shr	ecx, 0x1f
or	ecx, esi
mov	esi, 0xfffe
sub	esi, ecx
shr	esi, 0x10
jne	0x14001183f
jne	0x14001183f
test	r9w, r9w
js	0x140011890
js	0x140011890
and	dx, 0x7fff
je	0x14001186a
je	0x14001186a
cmp	dx, 0x7fff
jne	0x1400113f1
jne	0x1400113f1
test	r10d, r10d
je	0x1400119fd
je	0x1400119fd
sub	dx, 0x3fff
mov	rcx, r8
jmp	0x1400117cf
jmp	0x1400117cf
lea	eax, [r11 - 2]
mov	dword ptr [rbp - 0x20], 0xffffffff
mov	edx, dword ptr [r14]
lea	rsi, [r14 + 8]
cmp	eax, 1
jbe	0x140011603
jbe	0x140011603
mov	byte ptr [rbp - 0x40], dl
lea	rcx, [rbp - 0x40]
lea	r8, [rbp - 0x30]
mov	edx, 1
call	0x14000f750
call	0x14000f750
mov	r14, rsi
mov	r15, r12
jmp	0x1400110d6
jmp	0x1400110d6
lea	eax, [r11 - 2]
mov	rcx, qword ptr [r14]
lea	rsi, [r14 + 8]
cmp	eax, 1
jbe	0x1400117e1
jbe	0x1400117e1
lea	rdx, [rbp - 0x30]
mov	r14, rsi
mov	r15, r12
call	0x14000f8a0
call	0x14000f8a0
jmp	0x1400110d6
jmp	0x1400110d6
mov	eax, dword ptr [rbp - 0x28]
mov	rdx, qword ptr [r14]
or	eax, 0x20
mov	dword ptr [rbp - 0x28], eax
test	al, 4
je	0x140011689
je	0x140011689
fld	xword ptr [rdx]
lea	rcx, [rbp - 0x60]
lea	rdx, [rbp - 0x30]
fstp	xword ptr [rbp - 0x60]
call	0x1400109f0
call	0x1400109f0
nop	word ptr [rax + rax]
add	r14, 8
mov	r15, r12
jmp	0x1400110d6
jmp	0x1400110d6
mov	eax, dword ptr [rbp - 0x28]
mov	rdx, qword ptr [r14]
or	eax, 0x20
mov	dword ptr [rbp - 0x28], eax
test	al, 4
je	0x14001165f
je	0x14001165f
fld	xword ptr [rdx]
lea	rcx, [rbp - 0x60]
lea	rdx, [rbp - 0x30]
fstp	xword ptr [rbp - 0x60]
call	0x140010910
call	0x140010910
jmp	0x140011490
jmp	0x140011490
mov	eax, dword ptr [rbp - 0x28]
mov	rdx, qword ptr [r14]
or	eax, 0x20
mov	dword ptr [rbp - 0x28], eax
test	al, 4
je	0x140011635
je	0x140011635
fld	xword ptr [rdx]
lea	rcx, [rbp - 0x60]
lea	rdx, [rbp - 0x30]
fstp	xword ptr [rbp - 0x60]
call	0x140010870
call	0x140010870
jmp	0x140011490
jmp	0x140011490
test	ebx, ebx
jne	0x140011180
jne	0x140011180
movzx	edx, byte ptr [rsi + 1]
or	dword ptr [rbp - 0x28], 0x40
mov	rsi, r12
jmp	0x140011187
jmp	0x140011187
test	ebx, ebx
jne	0x140011180
jne	0x140011180
movzx	edx, byte ptr [rsi + 1]
or	dword ptr [rbp - 0x28], 0x400
mov	rsi, r12
jmp	0x140011187
jmp	0x140011187
cmp	ebx, 1
jbe	0x1400118e3
jbe	0x1400118e3
movzx	edx, byte ptr [rsi + 1]
mov	ebx, 4
mov	rsi, r12
jmp	0x140011187
jmp	0x140011187
test	ebx, ebx
jne	0x140011821
jne	0x140011821
movzx	edx, byte ptr [rsi + 1]
or	dword ptr [rbp - 0x28], 0x200
mov	rsi, r12
jmp	0x140011187
jmp	0x140011187
mov	eax, dword ptr [rbp - 0x28]
mov	rdx, qword ptr [r14]
test	al, 4
jne	0x140011389
jne	0x140011389
mov	r8, rdx
mov	ecx, edx
shr	r8, 0x20
neg	ecx
mov	r9d, r8d
or	ecx, edx
and	r9d, 0x7fffffff
shr	ecx, 0x1f
or	ecx, r9d
mov	r9d, 0x7ff00000
cmp	r9d, ecx
js	0x14001183f
js	0x14001183f
mov	qword ptr [rbp - 0x80], rdx
fld	qword ptr [rbp - 0x80]
fstp	xword ptr [rbp - 0x80]
mov	rcx, qword ptr [rbp - 0x78]
test	cx, cx
jns	0x1400115a6
jns	0x1400115a6
or	al, 0x80
mov	dword ptr [rbp - 0x28], eax
mov	eax, r8d
and	r8d, 0x7ff00000
and	eax, 0xfffff
cmp	r8d, 0x7ff00000
setne	r9b
or	eax, edx
setne	dl
or	r9b, dl
jne	0x140011795
jne	0x140011795
or	eax, r8d
je	0x140011795
je	0x140011795
and	ecx, 0x8000
lea	r8, [rbp - 0x30]
lea	rdx, [rip + 0xacc72]
call	0x14000f8f0
call	0x14000f8f0
jmp	0x140011490
jmp	0x140011490
nop	word ptr [rax + rax]
mov	dword ptr [rbp - 0x20], 0xffffffff
lea	rsi, [r14 + 8]
mov	eax, dword ptr [r14]
lea	rcx, [rbp - 0x40]
lea	r8, [rbp - 0x30]
mov	edx, 1
mov	r14, rsi
mov	r15, r12
mov	word ptr [rbp - 0x40], ax
call	0x14000f5b0
call	0x14000f5b0
jmp	0x1400110d6
jmp	0x1400110d6
mov	eax, dword ptr [rbp - 0x28]
mov	rdx, qword ptr [r14]
test	al, 4
jne	0x1400114d8
jne	0x1400114d8
mov	qword ptr [rbp - 0x80], rdx
fld	qword ptr [rbp - 0x80]
lea	rdx, [rbp - 0x30]
lea	rcx, [rbp - 0x60]
fstp	xword ptr [rbp - 0x60]
call	0x140010870
call	0x140010870
jmp	0x140011490
jmp	0x140011490
mov	eax, dword ptr [rbp - 0x28]
mov	rdx, qword ptr [r14]
test	al, 4
jne	0x1400114b0
jne	0x1400114b0
mov	qword ptr [rbp - 0x80], rdx
fld	qword ptr [rbp - 0x80]
lea	rdx, [rbp - 0x30]
lea	rcx, [rbp - 0x60]
fstp	xword ptr [rbp - 0x60]
call	0x140010910
call	0x140010910
jmp	0x140011490
jmp	0x140011490
mov	eax, dword ptr [rbp - 0x28]
mov	rdx, qword ptr [r14]
test	al, 4
jne	0x140011475
jne	0x140011475
mov	qword ptr [rbp - 0x80], rdx
fld	qword ptr [rbp - 0x80]
lea	rdx, [rbp - 0x30]
lea	rcx, [rbp - 0x60]
fstp	xword ptr [rbp - 0x60]
call	0x1400109f0
call	0x1400109f0
jmp	0x140011490
jmp	0x140011490
lea	rdx, [rbp - 0x30]
mov	ecx, 0x25
mov	r15, r12
call	0x14000f550
call	0x14000f550
jmp	0x1400110d6
jmp	0x1400110d6
test	ebx, ebx
jne	0x140011180
jne	0x140011180
lea	r9, [rbp - 0x40]
mov	qword ptr [rbp - 0x88], r10
mov	dword ptr [rbp - 0x70], r11d
or	dword ptr [rbp - 0x28], 0x1000
mov	qword ptr [rbp - 0x80], r9
mov	dword ptr [rbp - 0x40], 0
call	0x140015978
call	0x140015978
mov	r9, qword ptr [rbp - 0x80]
lea	rcx, [rbp - 0x42]
mov	r8d, 0x10
mov	rdx, qword ptr [rax + 8]
call	0x140015660
call	0x140015660
mov	r11d, dword ptr [rbp - 0x70]
mov	r10, qword ptr [rbp - 0x88]
test	eax, eax
jle	0x140011717
jle	0x140011717
movzx	edx, word ptr [rbp - 0x42]
mov	word ptr [rbp - 0x10], dx
movzx	edx, byte ptr [rsi + 1]
mov	dword ptr [rbp - 0x14], eax
mov	rsi, r12
jmp	0x140011187
jmp	0x140011187
test	r10, r10
je	0x140011528
je	0x140011528
test	ebx, 0xfffffffd
jne	0x140011856
jne	0x140011856
mov	eax, dword ptr [r14]
lea	rcx, [r14 + 8]
mov	dword ptr [r10], eax
test	eax, eax
js	0x1400119b4
js	0x1400119b4
movzx	edx, byte ptr [rsi + 1]
mov	r14, rcx
mov	rsi, r12
xor	r10d, r10d
jmp	0x140011187
jmp	0x140011187
test	ebx, ebx
jne	0x140011180
jne	0x140011180
movzx	edx, byte ptr [rsi + 1]
or	dword ptr [rbp - 0x28], 0x100
mov	rsi, r12
jmp	0x140011187
jmp	0x140011187
test	ebx, ebx
jne	0x140011180
jne	0x140011180
movzx	edx, byte ptr [rsi + 1]
or	dword ptr [rbp - 0x28], 0x800
mov	rsi, r12
jmp	0x140011187
jmp	0x140011187
mov	edx, ecx
mov	rax, qword ptr [rbp - 0x80]
and	dx, 0x7fff
je	0x140011994
je	0x140011994
cmp	dx, 0x3c00
jg	0x1400118ae
jg	0x1400118ae
movsx	r8d, dx
mov	ecx, 0x3c01
sub	ecx, r8d
shr	rax, cl
add	ecx, edx
lea	edx, [rcx - 0x3ffc]
shr	rax, 3
mov	rcx, rax
lea	r8, [rbp - 0x30]
call	0x140010b50
call	0x140010b50
jmp	0x140011490
jmp	0x140011490
lea	rsi, [r14 + 8]
mov	r14, qword ptr [r14]
lea	rax, [rip + 0xaca5d]
test	r14, r14
cmove	r14, rax
mov	eax, dword ptr [rbp - 0x20]
test	eax, eax
js	0x140011926
js	0x140011926
movsxd	rdx, eax
mov	rcx, r14
call	0x1400151b0
call	0x1400151b0
lea	r8, [rbp - 0x30]
mov	rcx, r14
mov	edx, eax
call	0x14000f5b0
call	0x14000f5b0
mov	r14, rsi
mov	r15, r12
jmp	0x1400110d6
jmp	0x1400110d6
cmp	ebx, 3
ja	0x14001134a
ja	0x14001134a
mov	ecx, 0x30
cmp	ebx, 2
mov	eax, 3
cmove	ebx, eax
jmp	0x140011162
jmp	0x140011162
lea	r8, [rbp - 0x30]
lea	rdx, [rip + 0xaca0c]
xor	ecx, ecx
call	0x14000f8f0
call	0x14000f8f0
jmp	0x140011490
jmp	0x140011490
movzx	edx, byte ptr [rsi + 1]
xor	r10d, r10d
mov	rsi, r12
mov	ebx, 4
jmp	0x140011187
jmp	0x140011187
test	r8, r8
mov	eax, 0xffffc002
mov	rcx, r8
cmovne	edx, eax
jmp	0x1400117cf
jmp	0x1400117cf
mov	rsi, r12
mov	r11d, 3
mov	ebx, 4
jmp	0x140011187
jmp	0x140011187
or	al, 0x80
mov	dword ptr [rbp - 0x28], eax
jmp	0x1400113d6
jmp	0x1400113d6
mov	eax, edi
mov	dword ptr [rbp - 0x20], 0x10
or	ah, 2
mov	dword ptr [rbp - 0x28], eax
jmp	0x14001127c
jmp	0x14001127c
test	dx, dx
je	0x140011994
je	0x140011994
mov	ecx, edx
jmp	0x1400117c2
jmp	0x1400117c2
nop	
movsx	rcx, cx
jmp	0x14001125b
jmp	0x14001125b
mov	qword ptr [rcx], rdx
jmp	0x140011490
jmp	0x140011490
sub	ecx, 0x30
movzx	edx, byte ptr [rsi + 1]
mov	rsi, r12
mov	dword ptr [r10], ecx
jmp	0x140011187
jmp	0x140011187
movzx	edx, byte ptr [rsi + 1]
mov	dword ptr [rbp - 0x20], 0
mov	rsi, r12
lea	r10, [rbp - 0x20]
mov	ebx, 2
jmp	0x140011187
jmp	0x140011187
mov	rax, qword ptr [r14]
jmp	0x1400111e8
jmp	0x1400111e8
movzx	edx, byte ptr [rsi + 2]
mov	r11d, 5
add	rsi, 2
mov	ebx, 4
jmp	0x140011187
jmp	0x140011187
mov	byte ptr [rcx], dl
jmp	0x140011490
jmp	0x140011490
mov	rcx, r14
call	0x140015a60
call	0x140015a60
lea	r8, [rbp - 0x30]
mov	rcx, r14
mov	edx, eax
call	0x14000f5b0
call	0x14000f5b0
jmp	0x140011816
jmp	0x140011816
lea	rdx, [rbp - 0x30]
mov	rcx, rax
call	0x14000feb0
call	0x14000feb0
jmp	0x140011490
jmp	0x140011490
mov	rcx, qword ptr [r14]
jmp	0x14001125b
jmp	0x14001125b
cmp	byte ptr [rsi + 2], 0x34
jne	0x14001134a
jne	0x14001134a
movzx	edx, byte ptr [rsi + 3]
mov	r11d, 3
add	rsi, 3
mov	ebx, 4
jmp	0x140011187
jmp	0x140011187
movzx	edx, byte ptr [rsi + 2]
mov	r11d, 3
add	rsi, 2
mov	ebx, 4
jmp	0x140011187
jmp	0x140011187
test	rax, rax
mov	ecx, 0xfffffc05
cmovne	edx, ecx
jmp	0x1400117c8
jmp	0x1400117c8
mov	word ptr [rcx], dx
jmp	0x140011490
jmp	0x140011490
mov	eax, dword ptr [r14]
jmp	0x1400111e8
jmp	0x1400111e8
test	ebx, ebx
jne	0x1400119df
jne	0x1400119df
or	dword ptr [rbp - 0x28], 0x400
neg	dword ptr [rbp - 0x24]
jmp	0x14001174d
jmp	0x14001174d
movzx	edx, byte ptr [rsi + 3]
mov	r11d, 2
add	rsi, 3
mov	ebx, 4
jmp	0x140011187
jmp	0x140011187
movzx	edx, byte ptr [rsi + 1]
mov	r14, rcx
mov	rsi, r12
xor	r10d, r10d
mov	dword ptr [rbp - 0x20], 0xffffffff
mov	ebx, 2
jmp	0x140011187
jmp	0x140011187
mov	ecx, r11d
lea	r8, [rbp - 0x30]
lea	rdx, [rip + 0xac84f]
and	ecx, 0x8000
call	0x14000f8f0
call	0x14000f8f0
jmp	0x140011490
jmp	0x140011490
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rbx
sub	rsp, 0x28
lea	rbp, [rsp + 0x20]
xor	ebx, ebx
cmp	ecx, 0x1b
jle	0x140011a4c
jle	0x140011a4c
mov	eax, 4
nop	word ptr [rax + rax]
add	eax, eax
add	ebx, 1
lea	edx, [rax + 0x17]
cmp	edx, ecx
jl	0x140011a40
jl	0x140011a40
mov	ecx, ebx
call	0x140014300
call	0x140014300
mov	dword ptr [rax], ebx
add	rax, 4
add	rsp, 0x28
pop	rbx
pop	rbp
ret	
ret	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rsp + 0x20]
mov	rdi, rcx
mov	rsi, rdx
cmp	r8d, 0x1b
jle	0x140011ad8
jle	0x140011ad8
mov	eax, 4
xor	ebx, ebx
add	eax, eax
add	ebx, 1
lea	edx, [rax + 0x17]
cmp	r8d, edx
jg	0x140011a80
jg	0x140011a80
mov	ecx, ebx
call	0x140014300
call	0x140014300
lea	rdx, [rdi + 1]
mov	dword ptr [rax], ebx
movzx	ecx, byte ptr [rdi]
lea	r8, [rax + 4]
mov	byte ptr [rax + 4], cl
mov	rax, r8
test	cl, cl
je	0x140011ac1
je	0x140011ac1
nop	dword ptr [rax + rax]
movzx	ecx, byte ptr [rdx]
add	rax, 1
add	rdx, 1
mov	byte ptr [rax], cl
test	cl, cl
jne	0x140011ab0
jne	0x140011ab0
test	rsi, rsi
je	0x140011ac9
je	0x140011ac9
mov	qword ptr [rsi], rax
mov	rax, r8
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
xor	ebx, ebx
jmp	0x140011a8d
jmp	0x140011a8d
nop	dword ptr [rax]
mov	edx, 1
mov	rax, rcx
mov	ecx, dword ptr [rcx - 4]
shl	edx, cl
movd	xmm0, ecx
lea	rcx, [rax - 4]
movd	xmm1, edx
punpckldq	xmm0, xmm1
movq	qword ptr [rax + 4], xmm0
jmp	0x140014400
jmp	0x140014400
nop	word ptr [rax + rax]
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
lea	rbp, [rsp + 0x30]
xor	eax, eax
mov	esi, dword ptr [rdx + 0x14]
mov	r13, rcx
mov	r11, rdx
cmp	dword ptr [rcx + 0x14], esi
jl	0x140011c23
jl	0x140011c23
sub	esi, 1
lea	rbx, [rdx + 0x18]
lea	r12, [rcx + 0x18]
xor	edx, edx
movsxd	r10, esi
shl	r10, 2
lea	rdi, [rbx + r10]
add	r10, r12
mov	eax, dword ptr [rdi]
mov	r8d, dword ptr [r10]
lea	ecx, [rax + 1]
mov	eax, r8d
div	ecx
mov	dword ptr [rbp - 8], eax
mov	dword ptr [rbp - 4], eax
cmp	r8d, ecx
jb	0x140011bc6
jb	0x140011bc6
mov	r15d, eax
mov	r9, rbx
mov	r8, r12
xor	r14d, r14d
xor	ecx, ecx
nop	word ptr [rax + rax]
mov	eax, dword ptr [r9]
mov	edx, dword ptr [r8]
add	r9, 4
add	r8, 4
imul	rax, r15
add	rax, r14
mov	r14, rax
mov	eax, eax
sub	rdx, rax
shr	r14, 0x20
mov	rax, rdx
sub	rax, rcx
mov	rcx, rax
mov	dword ptr [r8 - 4], eax
shr	rcx, 0x20
and	ecx, 1
cmp	rdi, r9
jae	0x140011b80
jae	0x140011b80
mov	r9d, dword ptr [r10]
test	r9d, r9d
je	0x140011c6b
je	0x140011c6b
mov	rdx, r11
mov	rcx, r13
call	0x140014a20
call	0x140014a20
test	eax, eax
js	0x140011c20
js	0x140011c20
mov	rcx, r12
xor	edx, edx
nop	word ptr [rax + rax]
mov	eax, dword ptr [rcx]
mov	r8d, dword ptr [rbx]
add	rbx, 4
add	rcx, 4
sub	rax, r8
sub	rax, rdx
mov	rdx, rax
mov	dword ptr [rcx - 4], eax
shr	rdx, 0x20
and	edx, 1
cmp	rdi, rbx
jae	0x140011be0
jae	0x140011be0
movsxd	rax, esi
lea	rax, [r12 + rax*4]
mov	ecx, dword ptr [rax]
test	ecx, ecx
je	0x140011c41
je	0x140011c41
mov	eax, dword ptr [rbp - 8]
add	eax, 1
mov	dword ptr [rbp - 4], eax
nop	dword ptr [rax + rax]
mov	eax, dword ptr [rbp - 4]
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rax]
test	edx, edx
jne	0x140011c4a
jne	0x140011c4a
sub	esi, 1
sub	rax, 4
cmp	r12, rax
jb	0x140011c38
jb	0x140011c38
mov	eax, dword ptr [rbp - 8]
mov	dword ptr [r13 + 0x14], esi
add	eax, 1
mov	dword ptr [rbp - 4], eax
jmp	0x140011c20
jmp	0x140011c20
nop	dword ptr [rax]
mov	r8d, dword ptr [r10]
test	r8d, r8d
jne	0x140011c74
jne	0x140011c74
sub	esi, 1
sub	r10, 4
cmp	r12, r10
jb	0x140011c60
jb	0x140011c60
mov	dword ptr [r13 + 0x14], esi
mov	rdx, r11
mov	rcx, r13
call	0x140014a20
call	0x140014a20
test	eax, eax
jns	0x140011bd5
jns	0x140011bd5
jmp	0x140011c20
jmp	0x140011c20
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0xc8
lea	rbp, [rsp + 0xc0]
mov	eax, dword ptr [rbp + 0x70]
mov	edi, dword ptr [r9]
mov	dword ptr [rbp - 0x28], eax
mov	eax, dword ptr [rbp + 0x78]
mov	r12, rcx
mov	rsi, r8
mov	dword ptr [rbp - 0x30], edx
mov	r15, r9
mov	dword ptr [rbp - 0x34], eax
mov	rax, qword ptr [rbp + 0x80]
mov	qword ptr [rbp - 0x18], rax
mov	rax, qword ptr [rbp + 0x88]
mov	qword ptr [rbp - 0x20], rax
mov	eax, edi
and	eax, 0xffffffcf
mov	dword ptr [r9], eax
mov	eax, edi
and	eax, 7
cmp	eax, 3
je	0x140011fb8
je	0x140011fb8
mov	ebx, edi
and	ebx, 4
mov	dword ptr [rbp - 0x40], ebx
jne	0x140011f30
jne	0x140011f30
test	eax, eax
je	0x140011f78
je	0x140011f78
mov	r13d, dword ptr [rcx]
mov	eax, 0x20
xor	ecx, ecx
cmp	r13d, 0x20
jle	0x140011d2a
jle	0x140011d2a
nop	dword ptr [rax + rax]
add	eax, eax
add	ecx, 1
cmp	r13d, eax
jg	0x140011d20
jg	0x140011d20
call	0x140014300
call	0x140014300
lea	r8d, [r13 - 1]
sar	r8d, 5
mov	rbx, rax
lea	rdx, [rax + 0x18]
mov	rax, rsi
movsxd	r8, r8d
lea	rcx, [rsi + r8*4]
nop	dword ptr [rax + rax]
mov	r9d, dword ptr [rax]
add	rax, 4
add	rdx, 4
mov	dword ptr [rdx - 4], r9d
cmp	rcx, rax
jae	0x140011d50
jae	0x140011d50
lea	rdx, [rsi + 1]
add	rcx, 1
lea	rax, [r8*4 + 4]
cmp	rcx, rdx
mov	edx, 4
cmovb	rax, rdx
mov	r14, rax
add	rax, rbx
sar	r14, 2
jmp	0x140011d9d
jmp	0x140011d9d
nop	dword ptr [rax]
sub	rax, 4
test	r14d, r14d
je	0x140011fe0
je	0x140011fe0
mov	r11d, dword ptr [rax + 0x14]
mov	edx, r14d
sub	r14d, 1
test	r11d, r11d
je	0x140011d90
je	0x140011d90
movsxd	r14, r14d
mov	dword ptr [rbx + 0x14], edx
shl	edx, 5
bsr	eax, dword ptr [rbx + r14*4 + 0x18]
xor	eax, 0x1f
sub	edx, eax
mov	r14d, edx
mov	rcx, rbx
call	0x140013cd0
call	0x140013cd0
mov	ecx, dword ptr [rbp - 0x30]
mov	dword ptr [rbp - 4], eax
mov	dword ptr [rbp - 0x58], ecx
test	eax, eax
jne	0x140011ff0
jne	0x140011ff0
mov	r10d, dword ptr [rbx + 0x14]
test	r10d, r10d
je	0x140011f70
je	0x140011f70
lea	rdx, [rbp - 4]
mov	rcx, rbx
call	0x140014c40
call	0x140014c40
mov	eax, dword ptr [rbp - 0x58]
pxor	xmm1, xmm1
movq	r10, xmm0
mov	rdx, r10
lea	r8d, [rax + r14]
mov	eax, r10d
shr	rdx, 0x20
lea	ecx, [r8 - 1]
and	edx, 0xfffff
cvtsi2sd	xmm1, ecx
mulsd	xmm1, qword ptr [rip + 0xac5d2]
or	edx, 0x3ff00000
mov	r9, rdx
shl	r9, 0x20
or	rax, r9
mov	r9d, 1
sub	r9d, r8d
movq	xmm0, rax
test	ecx, ecx
subsd	xmm0, qword ptr [rip + 0xac592]
mulsd	xmm0, qword ptr [rip + 0xac592]
cmovns	r9d, ecx
addsd	xmm0, qword ptr [rip + 0xac58e]
sub	r9d, 0x435
addsd	xmm0, xmm1
test	r9d, r9d
jle	0x140011e87
jle	0x140011e87
pxor	xmm1, xmm1
cvtsi2sd	xmm1, r9d
mulsd	xmm1, qword ptr [rip + 0xac57d]
addsd	xmm0, xmm1
pxor	xmm1, xmm1
cvttsd2si	r11d, xmm0
comisd	xmm1, xmm0
ja	0x140012340
ja	0x140012340
mov	r9d, ecx
mov	eax, eax
shl	r9d, 0x14
add	edx, r9d
mov	edx, edx
shl	rdx, 0x20
or	rax, rdx
mov	qword ptr [rbp - 0x98], rax
mov	r9, rax
mov	r10, rax
mov	eax, r14d
sub	eax, ecx
lea	edx, [rax - 1]
mov	dword ptr [rbp - 0x50], edx
cmp	r11d, 0x16
ja	0x140012010
ja	0x140012010
mov	rcx, qword ptr [rip + 0xad3f8]
movsxd	rdx, r11d
movq	xmm5, r9
movsd	xmm0, qword ptr [rcx + rdx*8]
comisd	xmm0, xmm5
ja	0x1400123a0
ja	0x1400123a0
mov	dword ptr [rbp - 0x7c], 0
mov	dword ptr [rbp - 0x68], 0
test	eax, eax
jg	0x140011f18
jg	0x140011f18
mov	edx, 1
mov	dword ptr [rbp - 0x50], 0
sub	edx, eax
mov	dword ptr [rbp - 0x68], edx
nop	word ptr [rax + rax]
add	dword ptr [rbp - 0x50], r11d
mov	dword ptr [rbp - 0x70], r11d
mov	dword ptr [rbp - 0x74], 0
jmp	0x140012054
jmp	0x140012054
nop	dword ptr [rax]
xor	esi, esi
cmp	eax, 4
jne	0x140011f9b
jne	0x140011f9b
mov	rax, qword ptr [rbp - 0x18]
mov	rdx, qword ptr [rbp - 0x20]
mov	r8d, 3
lea	rcx, [rip + 0xac48d]
mov	dword ptr [rax], 0xffff8000
add	rsp, 0xc8
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
jmp	0x140011a60
jmp	0x140011a60
nop	word ptr [rax + rax]
mov	rcx, rbx
call	0x140014400
call	0x140014400
mov	rax, qword ptr [rbp - 0x18]
mov	rdx, qword ptr [rbp - 0x20]
mov	r8d, 1
lea	rcx, [rip + 0xac450]
mov	dword ptr [rax], 1
call	0x140011a60
call	0x140011a60
mov	rsi, rax
mov	rax, rsi
add	rsp, 0xc8
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbp - 0x18]
mov	rdx, qword ptr [rbp - 0x20]
mov	r8d, 8
lea	rcx, [rip + 0xac403]
mov	dword ptr [rax], 0xffff8000
jmp	0x140011f52
jmp	0x140011f52
nop	dword ptr [rax + rax]
mov	dword ptr [rbx + 0x14], 0
jmp	0x140011dc4
jmp	0x140011dc4
nop	dword ptr [rax]
mov	edx, eax
mov	rcx, rbx
call	0x140013bc0
call	0x140013bc0
mov	eax, dword ptr [rbp - 4]
mov	edx, dword ptr [rbp - 0x30]
add	edx, eax
sub	r14d, eax
mov	dword ptr [rbp - 0x58], edx
jmp	0x140011ddd
jmp	0x140011ddd
nop	dword ptr [rax]
mov	dword ptr [rbp - 0x7c], 1
mov	r9d, dword ptr [rbp - 0x50]
mov	dword ptr [rbp - 0x68], 0
test	r9d, r9d
jns	0x140012038
jns	0x140012038
mov	edx, 1
mov	dword ptr [rbp - 0x50], 0
sub	edx, eax
mov	dword ptr [rbp - 0x68], edx
test	r11d, r11d
jns	0x140011f18
jns	0x140011f18
mov	eax, r11d
sub	dword ptr [rbp - 0x68], r11d
neg	eax
mov	dword ptr [rbp - 0x70], r11d
xor	r11d, r11d
mov	dword ptr [rbp - 0x74], eax
mov	eax, dword ptr [rbp - 0x28]
cmp	eax, 9
ja	0x1400122b0
ja	0x1400122b0
cmp	eax, 5
jg	0x140012360
jg	0x140012360
add	r8d, 0x3fd
xor	eax, eax
cmp	r8d, 0x7f7
setbe	al
mov	dword ptr [rbp - 0x8c], eax
mov	eax, dword ptr [rbp - 0x28]
cmp	eax, 4
je	0x1400126d4
je	0x1400126d4
cmp	eax, 5
je	0x140012aef
je	0x140012aef
mov	dword ptr [rbp - 0x78], 0
cmp	eax, 2
je	0x1400126db
je	0x1400126db
cmp	eax, 3
jne	0x1400122d0
jne	0x1400122d0
mov	ecx, dword ptr [rbp - 0x34]
mov	eax, dword ptr [rbp - 0x70]
add	eax, ecx
lea	edx, [rax + 1]
mov	dword ptr [rbp - 0x90], eax
mov	eax, 1
test	edx, edx
mov	dword ptr [rbp - 0x48], edx
cmovg	eax, edx
mov	ecx, eax
mov	qword ptr [rbp - 0x88], r10
mov	dword ptr [rbp - 0x80], r11d
mov	dword ptr [rbp - 4], eax
call	0x140011a20
call	0x140011a20
mov	r11d, dword ptr [rbp - 0x80]
mov	r10, qword ptr [rbp - 0x88]
mov	qword ptr [rbp - 0x60], rax
mov	eax, dword ptr [r12 + 0xc]
sub	eax, 1
mov	dword ptr [rbp - 0x38], eax
je	0x140012124
je	0x140012124
mov	ecx, dword ptr [rbp - 0x38]
mov	eax, 2
test	ecx, ecx
cmovns	eax, ecx
and	edi, 8
mov	dword ptr [rbp - 0x38], eax
mov	edx, eax
je	0x1400124f0
je	0x1400124f0
mov	eax, 3
sub	eax, edx
mov	dword ptr [rbp - 0x38], eax
mov	ecx, dword ptr [rbp - 0x48]
movzx	edi, byte ptr [rbp - 0x8c]
cmp	ecx, 0xe
setbe	al
and	dil, al
je	0x1400124f0
je	0x1400124f0
mov	eax, dword ptr [rbp - 0x70]
or	eax, dword ptr [rbp - 0x38]
jne	0x1400124f0
jne	0x1400124f0
mov	r8d, dword ptr [rbp - 0x7c]
mov	dword ptr [rbp - 4], 0
movsd	xmm0, qword ptr [rbp - 0x98]
test	r8d, r8d
je	0x140012173
je	0x140012173
movsd	xmm4, qword ptr [rip + 0xac2a7]
comisd	xmm4, xmm0
ja	0x140012edd
ja	0x140012edd
movupd	xmm1, xmm0
mov	ecx, dword ptr [rbp - 0x48]
addsd	xmm1, xmm0
addsd	xmm1, qword ptr [rip + 0xac2a2]
movq	rdx, xmm1
mov	rax, rdx
mov	edx, edx
shr	rax, 0x20
sub	eax, 0x3400000
shl	rax, 0x20
or	rdx, rax
test	ecx, ecx
je	0x1400124bf
je	0x1400124bf
mov	eax, dword ptr [rbp - 0x48]
xor	r8d, r8d
mov	rcx, qword ptr [rip + 0xad11b]
movq	xmm2, rdx
lea	edx, [rax - 1]
movsxd	rdx, edx
movsd	xmm3, qword ptr [rcx + rdx*8]
mov	edx, dword ptr [rbp - 0x78]
test	edx, edx
je	0x140012afb
je	0x140012afb
movsd	xmm1, qword ptr [rip + 0xac278]
cvttsd2si	ecx, xmm0
mov	rdi, qword ptr [rbp - 0x60]
divsd	xmm1, xmm3
lea	rdx, [rdi + 1]
subsd	xmm1, xmm2
pxor	xmm2, xmm2
cvtsi2sd	xmm2, ecx
add	ecx, 0x30
mov	byte ptr [rdi], cl
subsd	xmm0, xmm2
comisd	xmm1, xmm0
ja	0x1400130dd
ja	0x1400130dd
movsd	xmm4, qword ptr [rip + 0xac201]
movsd	xmm3, qword ptr [rip + 0xac201]
jmp	0x14001225d
jmp	0x14001225d
nop	dword ptr [rax]
mov	edi, dword ptr [rbp - 4]
lea	ecx, [rdi + 1]
mov	dword ptr [rbp - 4], ecx
cmp	ecx, eax
jge	0x1400124e8
jge	0x1400124e8
mulsd	xmm0, xmm3
pxor	xmm2, xmm2
add	rdx, 1
mulsd	xmm1, xmm3
cvttsd2si	ecx, xmm0
cvtsi2sd	xmm2, ecx
add	ecx, 0x30
mov	byte ptr [rdx - 1], cl
subsd	xmm0, xmm2
comisd	xmm1, xmm0
ja	0x1400130dd
ja	0x1400130dd
movupd	xmm2, xmm4
subsd	xmm2, xmm0
comisd	xmm1, xmm2
jbe	0x140012220
jbe	0x140012220
movzx	ecx, byte ptr [rdx - 1]
mov	rsi, qword ptr [rbp - 0x60]
jmp	0x140012288
jmp	0x140012288
nop	dword ptr [rax]
cmp	rax, rsi
je	0x140012fd7
je	0x140012fd7
movzx	ecx, byte ptr [rax - 1]
mov	rdx, rax
lea	rax, [rdx - 1]
cmp	cl, 0x39
je	0x140012278
je	0x140012278
mov	qword ptr [rbp - 0x60], rdx
add	ecx, 1
mov	byte ptr [rax], cl
lea	eax, [r8 + 1]
mov	dword ptr [rbp - 0x34], eax
mov	dword ptr [rbp - 0x40], 0x20
jmp	0x140012466
jmp	0x140012466
nop	dword ptr [rax]
add	r8d, 0x3fd
xor	eax, eax
mov	dword ptr [rbp - 0x28], 0
cmp	r8d, 0x7f7
setbe	al
mov	dword ptr [rbp - 0x8c], eax
pxor	xmm0, xmm0
mov	qword ptr [rbp - 0x48], r10
cvtsi2sd	xmm0, r13d
mulsd	xmm0, qword ptr [rip + 0xac123]
mov	dword ptr [rbp - 0x34], r11d
cvttsd2si	ecx, xmm0
add	ecx, 3
mov	dword ptr [rbp - 4], ecx
call	0x140011a20
call	0x140011a20
mov	r11d, dword ptr [rbp - 0x34]
mov	r10, qword ptr [rbp - 0x48]
mov	qword ptr [rbp - 0x60], rax
mov	eax, dword ptr [r12 + 0xc]
sub	eax, 1
mov	dword ptr [rbp - 0x38], eax
je	0x1400123b0
je	0x1400123b0
mov	dword ptr [rbp - 0x34], 0
mov	dword ptr [rbp - 0x78], 1
mov	dword ptr [rbp - 0x90], 0xffffffff
mov	dword ptr [rbp - 0x48], 0xffffffff
jmp	0x1400120ff
jmp	0x1400120ff
nop	dword ptr [rax]
pxor	xmm1, xmm1
cvtsi2sd	xmm1, r11d
ucomisd	xmm1, xmm0
jp	0x140012355
jp	0x140012355
je	0x140011e9a
je	0x140011e9a
sub	r11d, 1
jmp	0x140011e9a
jmp	0x140011e9a
nop	
mov	dword ptr [rbp - 0x8c], 0
sub	eax, 4
mov	dword ptr [rbp - 0x28], eax
cmp	eax, 4
je	0x1400126d4
je	0x1400126d4
cmp	eax, 5
je	0x140012aef
je	0x140012aef
mov	dword ptr [rbp - 0x78], 0
cmp	eax, 2
je	0x1400126db
je	0x1400126db
mov	dword ptr [rbp - 0x28], 3
jmp	0x1400120b0
jmp	0x1400120b0
nop	
mov	dword ptr [rbp - 0x7c], 0
sub	r11d, 1
jmp	0x140012017
jmp	0x140012017
mov	eax, dword ptr [rbp - 0x58]
mov	dword ptr [rbp - 0x34], 0
test	eax, eax
js	0x14001305e
js	0x14001305e
mov	dword ptr [rbp - 0x78], 1
mov	dword ptr [rbp - 0x90], 0xffffffff
mov	dword ptr [rbp - 0x48], 0xffffffff
nop	word ptr [rax + rax]
mov	eax, dword ptr [rbp - 0x70]
cmp	dword ptr [r12 + 0x14], eax
jl	0x1400124fb
jl	0x1400124fb
mov	rdx, qword ptr [rip + 0xacedb]
mov	r12d, dword ptr [rbp - 0x34]
cdqe	
mov	rsi, rax
movsd	xmm2, qword ptr [rdx + rax*8]
test	r12d, r12d
jns	0x140012bbc
jns	0x140012bbc
mov	eax, dword ptr [rbp - 0x48]
test	eax, eax
jg	0x140012bbc
jg	0x140012bbc
jne	0x1400126fb
jne	0x1400126fb
mulsd	xmm2, qword ptr [rip + 0xac00b]
comisd	xmm2, xmmword ptr [rbp - 0x98]
jae	0x1400126fb
jae	0x1400126fb
add	esi, 2
xor	r9d, r9d
xor	edi, edi
mov	dword ptr [rbp - 0x34], esi
mov	rsi, qword ptr [rbp - 0x60]
add	qword ptr [rbp - 0x60], 1
mov	byte ptr [rsi], 0x31
mov	dword ptr [rbp - 0x40], 0x20
mov	rcx, r9
call	0x140014400
call	0x140014400
test	rdi, rdi
je	0x140012466
je	0x140012466
mov	rcx, rdi
call	0x140014400
call	0x140014400
mov	rcx, rbx
call	0x140014400
call	0x140014400
mov	ebx, dword ptr [rbp - 0x34]
mov	rax, qword ptr [rbp - 0x60]
mov	rdi, qword ptr [rbp - 0x18]
mov	byte ptr [rax], 0
mov	dword ptr [rdi], ebx
mov	rbx, qword ptr [rbp - 0x20]
test	rbx, rbx
je	0x14001248a
je	0x14001248a
mov	qword ptr [rbx], rax
mov	eax, dword ptr [rbp - 0x40]
or	dword ptr [r15], eax
jmp	0x140011f9b
jmp	0x140011f9b
movupd	xmm1, xmm0
addsd	xmm1, xmm0
addsd	xmm1, qword ptr [rip + 0xabf83]
movq	rdx, xmm1
mov	rax, rdx
mov	edx, edx
shr	rax, 0x20
sub	eax, 0x3400000
shl	rax, 0x20
or	rdx, rax
subsd	xmm0, qword ptr [rip + 0xabf69]
movq	xmm1, rdx
comisd	xmm0, xmm1
ja	0x140012f7c
ja	0x140012f7c
xorpd	xmm1, xmmword ptr [rip + 0xabf62]
comisd	xmm1, xmm0
ja	0x1400126fb
ja	0x1400126fb
mov	dword ptr [rbp - 0x38], 0
nop	
mov	eax, dword ptr [rbp - 0x58]
test	eax, eax
jns	0x1400123e0
jns	0x1400123e0
mov	edi, dword ptr [rbp - 0x78]
test	edi, edi
je	0x140012720
je	0x140012720
mov	edi, dword ptr [rbp - 0x58]
sub	r13d, r14d
mov	edx, dword ptr [r12 + 4]
lea	eax, [r13 + 1]
mov	ecx, edi
mov	dword ptr [rbp - 4], eax
sub	ecx, r13d
cmp	ecx, edx
jge	0x140012ab0
jge	0x140012ab0
mov	ecx, dword ptr [rbp - 0x28]
lea	eax, [rcx - 3]
and	eax, 0xfffffffd
je	0x140012aba
je	0x140012aba
mov	eax, edi
mov	edi, dword ptr [rbp - 0x48]
sub	eax, edx
add	eax, 1
cmp	ecx, 1
setg	cl
test	edi, edi
mov	dword ptr [rbp - 4], eax
setg	dl
test	cl, dl
je	0x140012558
je	0x140012558
cmp	eax, edi
jg	0x1400131b9
jg	0x1400131b9
mov	edi, dword ptr [rbp - 0x68]
add	dword ptr [rbp - 0x50], eax
mov	r8d, dword ptr [rbp - 0x74]
add	eax, edi
mov	r13d, edi
mov	dword ptr [rbp - 0x68], eax
mov	ecx, 1
mov	dword ptr [rbp - 0x80], r8d
mov	dword ptr [rbp - 0x58], r11d
call	0x140014530
call	0x140014530
mov	dword ptr [rbp - 0x78], 1
mov	r11d, dword ptr [rbp - 0x58]
mov	r8d, dword ptr [rbp - 0x80]
mov	rdi, rax
test	r13d, r13d
jle	0x1400125b1
jle	0x1400125b1
mov	ecx, dword ptr [rbp - 0x50]
test	ecx, ecx
jle	0x1400125b1
jle	0x1400125b1
cmp	r13d, ecx
mov	eax, ecx
cmovle	eax, r13d
sub	dword ptr [rbp - 0x68], eax
sub	ecx, eax
mov	dword ptr [rbp - 4], eax
sub	r13d, eax
mov	dword ptr [rbp - 0x50], ecx
mov	r10d, dword ptr [rbp - 0x74]
test	r10d, r10d
je	0x1400125e2
je	0x1400125e2
mov	r9d, dword ptr [rbp - 0x78]
test	r9d, r9d
je	0x1400125cc
je	0x1400125cc
test	r8d, r8d
jne	0x140012d4f
jne	0x140012d4f
mov	edx, dword ptr [rbp - 0x74]
mov	rcx, rbx
mov	dword ptr [rbp - 0x58], r11d
call	0x140014760
call	0x140014760
mov	r11d, dword ptr [rbp - 0x58]
mov	rbx, rax
mov	ecx, 1
mov	dword ptr [rbp - 0x58], r11d
call	0x140014530
call	0x140014530
mov	r11d, dword ptr [rbp - 0x58]
mov	r9, rax
test	r11d, r11d
jne	0x140012a48
jne	0x140012a48
cmp	dword ptr [rbp - 0x28], 1
jle	0x140012a80
jle	0x140012a80
mov	r12d, 0x1f
mov	eax, dword ptr [rbp - 0x50]
sub	r12d, eax
mov	eax, dword ptr [rbp - 0x68]
sub	r12d, 4
and	r12d, 0x1f
add	eax, r12d
mov	dword ptr [rbp - 4], r12d
mov	edx, r12d
test	eax, eax
jle	0x14001264f
jle	0x14001264f
mov	edx, eax
mov	rcx, rbx
mov	qword ptr [rbp - 0x58], r9
mov	dword ptr [rbp - 0x30], r11d
call	0x1400148f0
call	0x1400148f0
mov	edx, dword ptr [rbp - 4]
mov	r9, qword ptr [rbp - 0x58]
mov	r11d, dword ptr [rbp - 0x30]
mov	rbx, rax
mov	eax, dword ptr [rbp - 0x50]
add	eax, edx
mov	edx, eax
test	eax, eax
jle	0x14001266d
jle	0x14001266d
mov	rcx, r9
mov	dword ptr [rbp - 0x30], r11d
call	0x1400148f0
call	0x1400148f0
mov	r11d, dword ptr [rbp - 0x30]
mov	r9, rax
mov	ecx, dword ptr [rbp - 0x7c]
cmp	dword ptr [rbp - 0x28], 2
setg	r14b
test	ecx, ecx
jne	0x140012920
jne	0x140012920
mov	eax, dword ptr [rbp - 0x48]
test	eax, eax
jg	0x140012730
jg	0x140012730
test	r14b, r14b
je	0x140012730
je	0x140012730
mov	eax, dword ptr [rbp - 0x48]
test	eax, eax
jne	0x140012700
jne	0x140012700
mov	rcx, r9
xor	r8d, r8d
mov	edx, 5
call	0x140014470
call	0x140014470
mov	rcx, rbx
mov	rdx, rax
mov	qword ptr [rbp - 0x28], rax
call	0x140014a20
call	0x140014a20
mov	r9, qword ptr [rbp - 0x28]
test	eax, eax
jle	0x140012700
jle	0x140012700
mov	eax, dword ptr [rbp - 0x70]
mov	rsi, qword ptr [rbp - 0x60]
add	eax, 2
mov	dword ptr [rbp - 0x34], eax
jmp	0x140012442
jmp	0x140012442
mov	dword ptr [rbp - 0x78], 1
mov	eax, dword ptr [rbp - 0x34]
mov	ecx, 1
test	eax, eax
cmovg	ecx, eax
mov	dword ptr [rbp - 0x90], ecx
mov	eax, ecx
mov	dword ptr [rbp - 0x48], ecx
mov	dword ptr [rbp - 0x34], ecx
jmp	0x1400120d0
jmp	0x1400120d0
xor	r9d, r9d
xor	edi, edi
mov	eax, dword ptr [rbp - 0x34]
mov	rsi, qword ptr [rbp - 0x60]
mov	dword ptr [rbp - 0x40], 0x10
neg	eax
mov	dword ptr [rbp - 0x34], eax
jmp	0x140012451
jmp	0x140012451
nop	dword ptr [rax + rax]
mov	r8d, dword ptr [rbp - 0x74]
mov	r13d, dword ptr [rbp - 0x68]
xor	edi, edi
jmp	0x14001258e
jmp	0x14001258e
nop	
mov	eax, dword ptr [rbp - 0x70]
add	eax, 1
mov	dword ptr [rbp - 0x34], eax
mov	eax, dword ptr [rbp - 0x78]
test	eax, eax
je	0x1400129a0
je	0x1400129a0
lea	edx, [r12 + r13]
test	edx, edx
jle	0x140012767
jle	0x140012767
mov	rcx, rdi
mov	qword ptr [rbp - 0x50], r9
mov	dword ptr [rbp - 0x30], r11d
call	0x1400148f0
call	0x1400148f0
mov	r9, qword ptr [rbp - 0x50]
mov	r11d, dword ptr [rbp - 0x30]
mov	rdi, rax
mov	r13, rdi
test	r11d, r11d
jne	0x140012f3b
jne	0x140012f3b
mov	r10, qword ptr [rbp - 0x60]
mov	qword ptr [rbp - 0x70], r15
mov	eax, 1
mov	qword ptr [rbp - 0x30], r9
mov	qword ptr [rbp - 0x50], rsi
mov	r15, r10
jmp	0x14001282a
jmp	0x14001282a
mov	rcx, rdx
call	0x140014400
call	0x140014400
mov	edx, 1
test	r12d, r12d
js	0x140012e08
js	0x140012e08
or	r12d, dword ptr [rbp - 0x28]
jne	0x1400127b9
jne	0x1400127b9
mov	rax, qword ptr [rbp - 0x50]
test	byte ptr [rax], 1
je	0x140012e08
je	0x140012e08
lea	r12, [r15 + 1]
mov	r14, r12
test	edx, edx
jle	0x1400127ce
jle	0x1400127ce
cmp	dword ptr [rbp - 0x38], 2
jne	0x140012f91
jne	0x140012f91
mov	byte ptr [r12 - 1], sil
mov	eax, dword ptr [rbp - 0x48]
cmp	dword ptr [rbp - 4], eax
je	0x140012fc1
je	0x140012fc1
mov	rcx, rbx
xor	r8d, r8d
mov	edx, 0xa
call	0x140014470
call	0x140014470
xor	r8d, r8d
mov	edx, 0xa
mov	rcx, rdi
mov	rbx, rax
cmp	rdi, r13
je	0x140012910
je	0x140012910
call	0x140014470
call	0x140014470
mov	rcx, r13
xor	r8d, r8d
mov	edx, 0xa
mov	rdi, rax
call	0x140014470
call	0x140014470
mov	r13, rax
mov	eax, dword ptr [rbp - 4]
mov	r15, r12
add	eax, 1
mov	rdx, qword ptr [rbp - 0x30]
mov	rcx, rbx
mov	dword ptr [rbp - 4], eax
call	0x140011b10
call	0x140011b10
mov	rdx, rdi
mov	rcx, rbx
mov	r14d, eax
lea	esi, [rax + 0x30]
call	0x140014a20
call	0x140014a20
mov	rcx, qword ptr [rbp - 0x30]
mov	rdx, r13
mov	r12d, eax
call	0x140014a70
call	0x140014a70
mov	rdx, rax
mov	eax, dword ptr [rax + 0x10]
test	eax, eax
jne	0x140012790
jne	0x140012790
mov	rcx, rbx
mov	qword ptr [rbp - 0x68], rdx
call	0x140014a20
call	0x140014a20
mov	rcx, qword ptr [rbp - 0x68]
mov	dword ptr [rbp - 0x58], eax
call	0x140014400
call	0x140014400
mov	edx, dword ptr [rbp - 0x58]
mov	eax, dword ptr [rbp - 0x28]
or	edx, eax
jne	0x140012c8e
jne	0x140012c8e
mov	rax, qword ptr [rbp - 0x50]
mov	eax, dword ptr [rax]
mov	dword ptr [rbp - 0x58], eax
and	eax, 1
or	eax, dword ptr [rbp - 0x38]
jne	0x14001279d
jne	0x14001279d
mov	r10, r15
mov	r9, qword ptr [rbp - 0x30]
mov	r15, qword ptr [rbp - 0x70]
mov	r8d, esi
cmp	esi, 0x39
je	0x140013231
je	0x140013231
test	r12d, r12d
jle	0x14001327e
jle	0x14001327e
mov	dword ptr [rbp - 0x40], 0x20
lea	r8d, [r14 + 0x31]
mov	byte ptr [r10], r8b
mov	rsi, rdi
lea	r12, [r10 + 1]
mov	rdi, r13
nop	word ptr [rax + rax]
mov	rcx, r9
call	0x140014400
call	0x140014400
test	rdi, rdi
je	0x140012ccc
je	0x140012ccc
test	rsi, rsi
je	0x140012903
je	0x140012903
cmp	rsi, rdi
je	0x140012903
je	0x140012903
mov	rcx, rsi
call	0x140014400
call	0x140014400
mov	rsi, qword ptr [rbp - 0x60]
mov	qword ptr [rbp - 0x60], r12
jmp	0x14001245e
jmp	0x14001245e
call	0x140014470
call	0x140014470
mov	rdi, rax
mov	r13, rax
jmp	0x140012821
jmp	0x140012821
mov	rdx, r9
mov	rcx, rbx
mov	dword ptr [rbp - 0x50], r11d
mov	qword ptr [rbp - 0x30], r9
call	0x140014a20
call	0x140014a20
mov	r9, qword ptr [rbp - 0x30]
mov	r11d, dword ptr [rbp - 0x50]
test	eax, eax
jns	0x140012680
jns	0x140012680
mov	eax, dword ptr [rbp - 0x70]
xor	r8d, r8d
mov	edx, 0xa
mov	rcx, rbx
mov	qword ptr [rbp - 0x48], r9
sub	eax, 1
mov	dword ptr [rbp - 0x30], r11d
mov	dword ptr [rbp - 0x50], eax
call	0x140014470
call	0x140014470
mov	edx, dword ptr [rbp - 0x78]
mov	r9, qword ptr [rbp - 0x48]
mov	rbx, rax
mov	eax, dword ptr [rbp - 0x90]
test	eax, eax
setle	al
and	r14d, eax
test	edx, edx
jne	0x14001314c
jne	0x14001314c
test	r14b, r14b
jne	0x140013074
jne	0x140013074
mov	eax, dword ptr [rbp - 0x70]
mov	dword ptr [rbp - 0x34], eax
mov	eax, dword ptr [rbp - 0x90]
mov	dword ptr [rbp - 0x48], eax
nop	dword ptr [rax]
mov	r14, qword ptr [rbp - 0x60]
mov	r12d, dword ptr [rbp - 0x48]
mov	eax, 1
mov	rsi, r9
jmp	0x1400129d1
jmp	0x1400129d1
nop	word ptr [rax + rax]
mov	rcx, rbx
xor	r8d, r8d
mov	edx, 0xa
call	0x140014470
call	0x140014470
mov	rbx, rax
mov	eax, dword ptr [rbp - 4]
add	eax, 1
mov	rdx, rsi
mov	rcx, rbx
mov	dword ptr [rbp - 4], eax
add	r14, 1
call	0x140011b10
call	0x140011b10
lea	r8d, [rax + 0x30]
mov	byte ptr [r14 - 1], r8b
cmp	dword ptr [rbp - 4], r12d
jl	0x1400129b8
jl	0x1400129b8
mov	r9, rsi
xor	esi, esi
mov	ecx, dword ptr [rbp - 0x38]
test	ecx, ecx
je	0x140012daa
je	0x140012daa
mov	eax, dword ptr [rbx + 0x14]
cmp	ecx, 2
je	0x140012dea
je	0x140012dea
cmp	eax, 1
jg	0x140012c96
jg	0x140012c96
mov	eax, dword ptr [rbx + 0x18]
test	eax, eax
jne	0x140012c96
jne	0x140012c96
test	eax, eax
setne	al
movzx	eax, al
shl	eax, 4
mov	dword ptr [rbp - 0x40], eax
nop	
mov	r12, r14
sub	r14, 1
cmp	byte ptr [r14], 0x30
je	0x140012a30
je	0x140012a30
jmp	0x1400128e0
jmp	0x1400128e0
nop	word ptr [rax + rax]
mov	edx, r11d
mov	rcx, rax
call	0x140014760
call	0x140014760
cmp	dword ptr [rbp - 0x28], 1
mov	r9, rax
jle	0x140012d02
jle	0x140012d02
xor	r11d, r11d
mov	eax, dword ptr [r9 + 0x14]
sub	eax, 1
cdqe	
bsr	r12d, dword ptr [r9 + rax*4 + 0x18]
xor	r12d, 0x1f
jmp	0x140012610
jmp	0x140012610
nop	dword ptr [rax + rax]
cmp	r14d, 1
jne	0x14001260a
jne	0x14001260a
mov	eax, dword ptr [r12 + 4]
add	eax, 1
cmp	dword ptr [rbp - 0x30], eax
jle	0x14001260a
jle	0x14001260a
add	dword ptr [rbp - 0x68], 1
mov	r11d, 1
add	dword ptr [rbp - 0x50], 1
jmp	0x14001260a
jmp	0x14001260a
nop	
cmp	dword ptr [rbp - 0x28], 1
jle	0x140012558
jle	0x140012558
mov	ecx, dword ptr [rbp - 0x48]
mov	edi, dword ptr [rbp - 0x74]
lea	eax, [rcx - 1]
cmp	edi, eax
jl	0x140012cd9
jl	0x140012cd9
mov	r8d, edi
sub	r8d, eax
test	ecx, ecx
jns	0x140013134
jns	0x140013134
mov	r13d, dword ptr [rbp - 0x68]
mov	eax, dword ptr [rbp - 0x48]
mov	dword ptr [rbp - 4], 0
sub	r13d, eax
jmp	0x14001256a
jmp	0x14001256a
mov	dword ptr [rbp - 0x78], 1
jmp	0x1400120b0
jmp	0x1400120b0
movupd	xmm4, xmm2
movq	xmm0, r10
mov	rdx, qword ptr [rbp - 0x60]
xor	r9d, r9d
mulsd	xmm4, xmm3
mov	dword ptr [rbp - 4], 1
movsd	xmm2, qword ptr [rip + 0xab8fa]
movupd	xmm1, xmm0
jmp	0x140012b37
jmp	0x140012b37
nop	dword ptr [rax]
mulsd	xmm1, xmm2
add	r10d, 1
mov	r9d, edi
mov	dword ptr [rbp - 4], r10d
cvttsd2si	ecx, xmm1
test	ecx, ecx
je	0x140012b4e
je	0x140012b4e
pxor	xmm3, xmm3
mov	r9d, edi
cvtsi2sd	xmm3, ecx
subsd	xmm1, xmm3
add	rdx, 1
add	ecx, 0x30
mov	byte ptr [rdx - 1], cl
mov	r10d, dword ptr [rbp - 4]
cmp	r10d, eax
jne	0x140012b28
jne	0x140012b28
test	r9b, r9b
je	0x140013115
je	0x140013115
movsd	xmm0, qword ptr [rip + 0xab8de]
movupd	xmm2, xmm4
addsd	xmm2, xmm0
comisd	xmm1, xmm2
ja	0x14001310c
ja	0x14001310c
subsd	xmm0, xmm4
comisd	xmm0, xmm1
ja	0x140013184
ja	0x140013184
mov	eax, dword ptr [rbp - 0x58]
test	eax, eax
js	0x14001311e
js	0x14001311e
mov	eax, dword ptr [r12 + 0x14]
test	eax, eax
js	0x14001311e
js	0x14001311e
mov	rax, qword ptr [rip + 0xac71f]
mov	dword ptr [rbp - 0x38], 0
movsd	xmm2, qword ptr [rax]
movsd	xmm0, qword ptr [rbp - 0x98]
mov	rsi, qword ptr [rbp - 0x60]
mov	dword ptr [rbp - 4], 1
movupd	xmm1, xmm0
lea	rdx, [rsi + 1]
divsd	xmm1, xmm2
cvttsd2si	eax, xmm1
pxor	xmm1, xmm1
cvtsi2sd	xmm1, eax
lea	ecx, [rax + 0x30]
mov	byte ptr [rsi], cl
mov	esi, dword ptr [rbp - 0x70]
add	esi, 1
mulsd	xmm1, xmm2
mov	dword ptr [rbp - 0x34], esi
subsd	xmm0, xmm1
pxor	xmm1, xmm1
ucomisd	xmm0, xmm1
jp	0x140012c0d
jp	0x140012c0d
je	0x140012d9d
je	0x140012d9d
movsd	xmm4, qword ptr [rip + 0xab803]
pxor	xmm3, xmm3
jmp	0x140012c5c
jmp	0x140012c5c
nop	dword ptr [rax + rax]
mulsd	xmm0, xmm4
add	ecx, 1
add	rdx, 1
mov	dword ptr [rbp - 4], ecx
movupd	xmm1, xmm0
divsd	xmm1, xmm2
cvttsd2si	eax, xmm1
pxor	xmm1, xmm1
cvtsi2sd	xmm1, eax
lea	ecx, [rax + 0x30]
mov	byte ptr [rdx - 1], cl
mulsd	xmm1, xmm2
subsd	xmm0, xmm1
ucomisd	xmm0, xmm3
jp	0x140012c5c
jp	0x140012c5c
je	0x140012d9d
je	0x140012d9d
mov	ecx, dword ptr [rbp - 4]
mov	esi, dword ptr [rbp - 0x48]
cmp	ecx, esi
jne	0x140012c20
jne	0x140012c20
mov	esi, dword ptr [rbp - 0x38]
test	esi, esi
je	0x140013088
je	0x140013088
cmp	esi, 1
je	0x1400131a8
je	0x1400131a8
mov	rsi, qword ptr [rbp - 0x60]
mov	dword ptr [rbp - 0x40], 0x10
mov	qword ptr [rbp - 0x60], rdx
jmp	0x140012466
jmp	0x140012466
mov	edx, dword ptr [rbp - 0x58]
jmp	0x14001279d
jmp	0x14001279d
mov	rdx, qword ptr [rbp - 0x60]
jmp	0x140012ca9
jmp	0x140012ca9
nop	dword ptr [rax]
cmp	r14, rdx
je	0x140012d38
je	0x140012d38
mov	r12, r14
lea	r14, [r14 - 1]
movzx	eax, byte ptr [r12 - 1]
cmp	al, 0x39
je	0x140012ca0
je	0x140012ca0
add	eax, 1
mov	dword ptr [rbp - 0x40], 0x20
mov	byte ptr [r14], al
jmp	0x1400128e0
jmp	0x1400128e0
mov	rsi, qword ptr [rbp - 0x60]
mov	qword ptr [rbp - 0x60], r12
jmp	0x140012466
jmp	0x140012466
mov	edi, dword ptr [rbp - 0x74]
mov	edx, eax
mov	dword ptr [rbp - 0x74], eax
xor	r8d, r8d
sub	edx, edi
mov	edi, dword ptr [rbp - 0x48]
add	dword ptr [rbp - 0x50], edi
add	r11d, edx
mov	edx, dword ptr [rbp - 0x68]
mov	dword ptr [rbp - 4], edi
add	edi, edx
mov	r13d, edx
mov	dword ptr [rbp - 0x68], edi
jmp	0x14001256a
jmp	0x14001256a
cmp	r14d, 1
jne	0x140012a60
jne	0x140012a60
mov	eax, dword ptr [r12 + 4]
mov	edx, dword ptr [rbp - 0x30]
add	eax, 1
cmp	eax, edx
jge	0x140012a60
jge	0x140012a60
add	dword ptr [rbp - 0x68], 1
mov	r11d, 1
add	dword ptr [rbp - 0x50], 1
jmp	0x140012a63
jmp	0x140012a63
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbp - 0x60]
add	dword ptr [rbp - 0x34], 1
mov	dword ptr [rbp - 0x40], 0x20
mov	byte ptr [rax], 0x31
jmp	0x1400128e0
jmp	0x1400128e0
mov	edx, r8d
mov	rcx, rdi
mov	dword ptr [rbp - 0x88], r11d
mov	dword ptr [rbp - 0x80], r8d
call	0x140014760
call	0x140014760
mov	rdx, rbx
mov	rcx, rax
mov	rdi, rax
call	0x1400145f0
call	0x1400145f0
mov	rcx, rbx
mov	qword ptr [rbp - 0x58], rax
call	0x140014400
call	0x140014400
mov	r8d, dword ptr [rbp - 0x80]
sub	dword ptr [rbp - 0x74], r8d
mov	rbx, qword ptr [rbp - 0x58]
mov	r11d, dword ptr [rbp - 0x88]
je	0x1400125e2
je	0x1400125e2
jmp	0x1400125cc
jmp	0x1400125cc
mov	rsi, qword ptr [rbp - 0x60]
mov	qword ptr [rbp - 0x60], rdx
jmp	0x140012466
jmp	0x140012466
mov	rcx, rbx
mov	edx, 1
mov	qword ptr [rbp - 0x28], r9
mov	dword ptr [rbp - 0x30], r8d
call	0x1400148f0
call	0x1400148f0
mov	rdx, qword ptr [rbp - 0x28]
mov	rcx, rax
mov	rbx, rax
call	0x140014a20
call	0x140014a20
mov	r9, qword ptr [rbp - 0x28]
test	eax, eax
jg	0x140012c96
jg	0x140012c96
jne	0x140012dea
jne	0x140012dea
mov	r8d, dword ptr [rbp - 0x30]
and	r8d, 1
jne	0x140012c96
jne	0x140012c96
cmp	dword ptr [rbx + 0x14], 1
mov	dword ptr [rbp - 0x40], 0x10
jg	0x140012a30
jg	0x140012a30
mov	eax, dword ptr [rbx + 0x18]
jmp	0x140012a21
jmp	0x140012a21
nop	dword ptr [rax + rax]
mov	r11d, dword ptr [rbp - 0x38]
mov	r10, r15
mov	r9, qword ptr [rbp - 0x30]
mov	r8d, esi
mov	r15, qword ptr [rbp - 0x70]
test	r11d, r11d
je	0x140012fe9
je	0x140012fe9
cmp	dword ptr [rbx + 0x14], 1
jle	0x1400131e5
jle	0x1400131e5
cmp	dword ptr [rbp - 0x38], 2
je	0x140013048
je	0x140013048
mov	qword ptr [rbp - 0x30], r15
mov	r14d, r8d
mov	r15, r10
mov	qword ptr [rbp - 0x28], r9
jmp	0x140012e98
jmp	0x140012e98
nop	word ptr [rax + rax]
mov	byte ptr [r12 - 1], r14b
xor	r8d, r8d
mov	rcx, r13
mov	edx, 0xa
mov	r15, r12
call	0x140014470
call	0x140014470
cmp	rdi, r13
mov	rcx, rbx
mov	edx, 0xa
cmove	rdi, rax
xor	r8d, r8d
mov	rsi, rax
call	0x140014470
call	0x140014470
mov	rdx, qword ptr [rbp - 0x28]
mov	r13, rsi
mov	rcx, rax
mov	rbx, rax
call	0x140011b10
call	0x140011b10
lea	r14d, [rax + 0x30]
mov	rcx, qword ptr [rbp - 0x28]
mov	rdx, r13
lea	r12, [r15 + 1]
call	0x140014a20
call	0x140014a20
test	eax, eax
jg	0x140012e50
jg	0x140012e50
mov	r10, r15
mov	r9, qword ptr [rbp - 0x28]
mov	r15, qword ptr [rbp - 0x30]
mov	r8d, r14d
cmp	r14d, 0x39
je	0x140013235
je	0x140013235
mov	dword ptr [rbp - 0x40], 0x20
mov	rsi, rdi
add	r8d, 1
mov	rdi, r13
mov	byte ptr [r10], r8b
jmp	0x1400128e0
jmp	0x1400128e0
test	ecx, ecx
je	0x140012495
je	0x140012495
mov	ecx, dword ptr [rbp - 0x90]
test	ecx, ecx
jle	0x1400124e8
jle	0x1400124e8
mulsd	xmm0, qword ptr [rip + 0xab51d]
movsd	xmm1, qword ptr [rip + 0xab51d]
mov	r8d, 0xffffffff
mulsd	xmm1, xmm0
movq	r10, xmm0
addsd	xmm1, qword ptr [rip + 0xab50e]
movq	rdx, xmm1
mov	rax, rdx
mov	edx, edx
shr	rax, 0x20
sub	eax, 0x3400000
shl	rax, 0x20
or	rdx, rax
mov	eax, ecx
jmp	0x1400121ae
jmp	0x1400121ae
mov	ecx, dword ptr [rdi + 8]
mov	qword ptr [rbp - 0x30], r9
call	0x140014300
call	0x140014300
lea	rdx, [rdi + 0x10]
lea	rcx, [rax + 0x10]
mov	r12, rax
movsxd	rax, dword ptr [rdi + 0x14]
lea	r8, [rax*4 + 8]
call	0x140015998
call	0x140015998
mov	edx, 1
mov	rcx, r12
call	0x1400148f0
call	0x1400148f0
mov	r9, qword ptr [rbp - 0x30]
mov	r13, rax
jmp	0x140012773
jmp	0x140012773
mov	dword ptr [rbp - 0x34], 2
mov	rsi, qword ptr [rbp - 0x60]
xor	r9d, r9d
xor	edi, edi
jmp	0x140012442
jmp	0x140012442
mov	r10, r15
mov	r9, qword ptr [rbp - 0x30]
mov	r15, qword ptr [rbp - 0x70]
mov	r8d, esi
cmp	esi, 0x39
je	0x140013235
je	0x140013235
add	r8d, 1
mov	rsi, rdi
mov	dword ptr [rbp - 0x40], 0x20
mov	rdi, r13
mov	byte ptr [r10], r8b
jmp	0x1400128e0
jmp	0x1400128e0
mov	r8d, esi
mov	r9, qword ptr [rbp - 0x30]
mov	rsi, rdi
mov	r15, qword ptr [rbp - 0x70]
mov	rdi, r13
jmp	0x1400129f6
jmp	0x1400129f6
mov	qword ptr [rbp - 0x60], rdx
add	r8d, 1
mov	ecx, 0x31
jmp	0x140012298
jmp	0x140012298
test	edx, edx
jle	0x14001303e
jle	0x14001303e
mov	rcx, rbx
mov	edx, 1
mov	qword ptr [rbp - 0x28], r9
mov	qword ptr [rbp - 0x40], r10
mov	dword ptr [rbp - 0x30], r8d
call	0x1400148f0
call	0x1400148f0
mov	rdx, qword ptr [rbp - 0x28]
mov	rcx, rax
mov	rbx, rax
call	0x140014a20
call	0x140014a20
mov	r9, qword ptr [rbp - 0x28]
mov	r8d, dword ptr [rbp - 0x30]
test	eax, eax
mov	r10, qword ptr [rbp - 0x40]
jle	0x14001324b
jle	0x14001324b
cmp	r8d, 0x39
je	0x140013263
je	0x140013263
mov	dword ptr [rbp - 0x38], 0x20
lea	r8d, [r14 + 0x31]
cmp	dword ptr [rbx + 0x14], 1
jle	0x140013214
jle	0x140013214
mov	rsi, rdi
mov	dword ptr [rbp - 0x40], 0x10
mov	rdi, r13
lea	r12, [r10 + 1]
jmp	0x140012ed5
jmp	0x140012ed5
mov	dword ptr [rbp - 0x90], 0xffffffff
mov	dword ptr [rbp - 0x48], 0xffffffff
jmp	0x140012506
jmp	0x140012506
mov	eax, dword ptr [rbp - 0x50]
mov	dword ptr [rbp - 0x70], eax
mov	eax, dword ptr [rbp - 0x90]
mov	dword ptr [rbp - 0x48], eax
jmp	0x140012694
jmp	0x140012694
addsd	xmm0, xmm0
movzx	ecx, byte ptr [rdx - 1]
comisd	xmm0, xmm2
ja	0x140013207
ja	0x140013207
ucomisd	xmm0, xmm2
mov	rsi, qword ptr [rbp - 0x60]
mov	r8d, dword ptr [rbp - 0x70]
jp	0x1400130b2
jp	0x1400130b2
jne	0x1400130b2
jne	0x1400130b2
test	al, 1
jne	0x140012288
jne	0x140012288
mov	dword ptr [rbp - 0x40], 0x10
nop	dword ptr [rax]
mov	rax, rdx
lea	rdx, [rdx - 1]
cmp	byte ptr [rax - 1], 0x30
je	0x1400130c0
je	0x1400130c0
mov	qword ptr [rbp - 0x60], rax
lea	eax, [r8 + 1]
mov	dword ptr [rbp - 0x34], eax
jmp	0x140012466
jmp	0x140012466
pxor	xmm1, xmm1
xor	eax, eax
mov	ecx, 1
mov	rsi, qword ptr [rbp - 0x60]
ucomisd	xmm0, xmm1
mov	qword ptr [rbp - 0x60], rdx
setp	al
cmovne	eax, ecx
shl	eax, 4
mov	dword ptr [rbp - 0x40], eax
lea	eax, [r8 + 1]
mov	dword ptr [rbp - 0x34], eax
jmp	0x140012466
jmp	0x140012466
mov	rsi, qword ptr [rbp - 0x60]
jmp	0x140012288
jmp	0x140012288
movupd	xmm1, xmm0
jmp	0x140012b6a
jmp	0x140012b6a
mov	dword ptr [rbp - 0x38], 0
mov	r8d, dword ptr [rbp - 0x74]
xor	edi, edi
mov	r13d, dword ptr [rbp - 0x68]
jmp	0x14001258e
jmp	0x14001258e
mov	edi, dword ptr [rbp - 0x68]
mov	eax, ecx
add	dword ptr [rbp - 0x50], ecx
mov	dword ptr [rbp - 4], ecx
add	eax, edi
mov	r13d, edi
mov	dword ptr [rbp - 0x68], eax
jmp	0x14001256a
jmp	0x14001256a
xor	r8d, r8d
mov	rcx, rdi
mov	edx, 0xa
call	0x140014470
call	0x140014470
test	r14b, r14b
mov	r9, qword ptr [rbp - 0x48]
mov	rdi, rax
jne	0x140013074
jne	0x140013074
mov	eax, dword ptr [rbp - 0x70]
mov	r11d, dword ptr [rbp - 0x30]
mov	dword ptr [rbp - 0x34], eax
mov	eax, dword ptr [rbp - 0x90]
mov	dword ptr [rbp - 0x48], eax
jmp	0x140012744
jmp	0x140012744
pxor	xmm0, xmm0
xor	eax, eax
mov	ecx, 1
mov	rsi, qword ptr [rbp - 0x60]
ucomisd	xmm1, xmm0
setp	al
cmovne	eax, ecx
shl	eax, 4
mov	dword ptr [rbp - 0x40], eax
jmp	0x1400130c0
jmp	0x1400130c0
movzx	ecx, byte ptr [rdx - 1]
mov	rsi, qword ptr [rbp - 0x60]
mov	r8d, dword ptr [rbp - 0x70]
jmp	0x140012288
jmp	0x140012288
mov	edi, dword ptr [rbp - 0x48]
mov	edx, dword ptr [rbp - 0x74]
lea	eax, [rdi - 1]
cmp	edx, eax
jl	0x140012cd9
jl	0x140012cd9
sub	edx, eax
mov	eax, dword ptr [rbp - 0x68]
add	dword ptr [rbp - 0x50], edi
mov	dword ptr [rbp - 4], edi
mov	r8d, edx
mov	r13d, eax
add	eax, edi
mov	dword ptr [rbp - 0x68], eax
jmp	0x14001256a
jmp	0x14001256a
mov	ecx, dword ptr [rbx + 0x18]
test	ecx, ecx
jne	0x140012e2d
jne	0x140012e2d
test	edx, edx
jg	0x140012fed
jg	0x140012fed
mov	rsi, rdi
lea	r12, [r10 + 1]
mov	rdi, r13
jmp	0x140012ed5
jmp	0x140012ed5
mov	rsi, qword ptr [rbp - 0x60]
mov	r8d, dword ptr [rbp - 0x70]
jmp	0x140012288
jmp	0x140012288
mov	edx, dword ptr [rbx + 0x18]
mov	rsi, rdi
mov	rdi, r13
test	edx, edx
je	0x14001326f
je	0x14001326f
mov	dword ptr [rbp - 0x40], 0x10
lea	r12, [r10 + 1]
jmp	0x140012ed5
jmp	0x140012ed5
lea	r12, [r10 + 1]
mov	rsi, rdi
mov	rdi, r13
mov	byte ptr [r10], 0x39
mov	rdx, qword ptr [rbp - 0x60]
mov	r14, r12
jmp	0x140012ca9
jmp	0x140012ca9
jne	0x140013257
jne	0x140013257
test	r8b, 1
jne	0x140013029
jne	0x140013029
mov	dword ptr [rbp - 0x38], 0x20
jmp	0x14001303e
jmp	0x14001303e
mov	rsi, rdi
lea	r12, [r10 + 1]
mov	rdi, r13
jmp	0x14001323b
jmp	0x14001323b
mov	eax, dword ptr [rbp - 0x38]
lea	r12, [r10 + 1]
mov	dword ptr [rbp - 0x40], eax
jmp	0x140012ed5
jmp	0x140012ed5
cmp	dword ptr [rbx + 0x14], 1
mov	dword ptr [rbp - 0x40], 0x10
jg	0x1400128cd
jg	0x1400128cd
xor	eax, eax
cmp	dword ptr [rbx + 0x18], 0
setne	al
shl	eax, 4
mov	dword ptr [rbp - 0x40], eax
jmp	0x1400128cd
jmp	0x1400128cd
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
lea	rbp, [rsp + 0x30]
mov	qword ptr [rbp + 0x60], r8
mov	r13, rcx
mov	r12, rdx
mov	qword ptr [rbp + 0x68], r9
call	0x140015978
call	0x140015978
mov	rdi, qword ptr [rip + 0xabf31]
mov	r14, qword ptr [rax]
cmp	byte ptr [rdi + 0x30], 0
je	0x1400136a0
je	0x1400136a0
mov	rax, qword ptr [rbp + 0x68]
mov	qword ptr [rax], 0
mov	rax, qword ptr [r13]
movzx	edx, byte ptr [rax + 2]
cmp	dl, 0x30
jne	0x1400138e0
jne	0x1400138e0
lea	rcx, [rax + 3]
mov	rax, rcx
nop	
mov	rsi, rax
movzx	edx, byte ptr [rax]
add	rax, 1
cmp	dl, 0x30
je	0x140013310
je	0x140013310
mov	eax, esi
sub	eax, ecx
lea	r9d, [rax + 1]
movzx	eax, dl
movzx	r8d, byte ptr [r14]
cmp	byte ptr [rdi + rax], 0
jne	0x140013428
jne	0x140013428
mov	ecx, r8d
xor	eax, eax
test	r8b, r8b
jne	0x140013419
jne	0x140013419
nop	word ptr cs:[rax + rax]
mov	rax, rsi
and	edx, 0xffffffdf
mov	rbx, rax
cmp	dl, 0x50
je	0x140013941
je	0x140013941
mov	dword ptr [rbp - 4], 0
mov	r11d, 1
xor	r15d, r15d
xor	r8d, r8d
lea	rdx, [rsi - 1]
test	r9d, r9d
cmove	rax, rdx
mov	qword ptr [r13], rax
test	r11d, r11d
jne	0x1400136b0
jne	0x1400136b0
test	r8d, r8d
je	0x140013483
je	0x140013483
mov	eax, dword ptr [r12 + 0xc]
test	r15d, r15d
je	0x140013720
je	0x140013720
cmp	eax, 2
je	0x140013a3e
je	0x140013a3e
cmp	eax, 3
jne	0x140013820
jne	0x140013820
mov	r10d, dword ptr [rbp + 0x70]
test	r10d, r10d
je	0x140013820
je	0x140013820
xor	ecx, ecx
call	0x140014300
call	0x140014300
mov	r15, rax
movabs	rax, 0x100000001
mov	qword ptr [r15 + 0x14], rax
mov	eax, dword ptr [r12 + 4]
mov	rdi, qword ptr [rbp + 0x68]
mov	ebx, 0x62
mov	qword ptr [rdi], r15
mov	rdi, qword ptr [rbp + 0x60]
mov	dword ptr [rdi], eax
call	0x1400158a8
call	0x1400158a8
mov	dword ptr [rax], 0x22
jmp	0x1400136b2
jmp	0x1400136b2
nop	word ptr [rax + rax]
add	rax, 1
movzx	ecx, byte ptr [r14 + rax]
test	cl, cl
je	0x1400136c8
je	0x1400136c8
cmp	byte ptr [rsi + rax], cl
je	0x140013408
je	0x140013408
jmp	0x140013350
jmp	0x140013350
nop	dword ptr [rax + rax]
add	r9d, 1
xor	eax, eax
mov	rbx, rsi
nop	dword ptr [rax]
movzx	ecx, byte ptr [rbx + 1]
add	rbx, 1
cmp	byte ptr [rdi + rcx], 0
mov	rdx, rcx
jne	0x140013438
jne	0x140013438
cmp	cl, r8b
je	0x140013530
je	0x140013530
xor	r11d, r11d
test	rax, rax
je	0x1400138d0
je	0x1400138d0
sub	eax, ebx
lea	eax, [rax*4]
mov	dword ptr [rbp - 4], eax
and	edx, 0xffffffdf
cmp	dl, 0x50
je	0x140013560
je	0x140013560
mov	qword ptr [r13], rbx
test	r11d, r11d
jne	0x1400136b0
jne	0x1400136b0
mov	rax, rbx
xor	ecx, ecx
sub	rax, rsi
sub	eax, 1
cmp	eax, 7
jle	0x1400134a2
jle	0x1400134a2
nop	dword ptr [rax + rax]
sar	eax, 1
add	ecx, 1
cmp	eax, 7
jg	0x140013498
jg	0x140013498
call	0x140014300
call	0x140014300
cmp	byte ptr [r14 + 1], 0
mov	r15, rax
lea	r13, [rax + 0x18]
je	0x140013ace
je	0x140013ace
lea	rcx, [r14 + 2]
call	0x140015a08
call	0x140015a08
lea	r10, [rax + 1]
cmp	rsi, rbx
jae	0x140013ad6
jae	0x140013ad6
add	r14, r10
mov	rdx, r13
xor	r11d, r11d
xor	r8d, r8d
jmp	0x1400134ff
jmp	0x1400134ff
nop	dword ptr [rax]
mov	ecx, r8d
add	r8d, 4
movzx	eax, byte ptr [rdi + rax]
mov	rbx, r9
and	eax, 0xf
shl	eax, cl
or	r11d, eax
cmp	rsi, rbx
jae	0x140013607
jae	0x140013607
movzx	eax, byte ptr [rbx - 1]
lea	r9, [rbx - 1]
cmp	al, byte ptr [r14]
je	0x1400135f8
je	0x1400135f8
cmp	r8d, 0x20
jne	0x1400134e0
jne	0x1400134e0
mov	dword ptr [rdx], r11d
mov	r8d, 4
movzx	eax, byte ptr [rbx - 1]
xor	r11d, r11d
add	rdx, 4
xor	ecx, ecx
jmp	0x1400134e7
jmp	0x1400134e7
nop	
xor	r11d, r11d
test	rax, rax
je	0x140013852
je	0x140013852
movzx	edx, byte ptr [rbx]
sub	eax, ebx
lea	eax, [rax*4]
and	edx, 0xffffffdf
mov	dword ptr [rbp - 4], eax
cmp	dl, 0x50
jne	0x140013476
jne	0x140013476
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rbx + 1]
cmp	al, 0x2b
je	0x1400138c0
je	0x1400138c0
cmp	al, 0x2d
jne	0x140013710
jne	0x140013710
mov	r15d, 1
movzx	eax, byte ptr [rbx + 2]
lea	rcx, [rbx + 2]
movzx	edx, byte ptr [rdi + rax]
xor	r8d, r8d
mov	rax, rbx
lea	r10d, [rdx - 1]
cmp	r10b, 0x18
ja	0x140013375
ja	0x140013375
lea	rax, [rcx + 1]
sub	edx, 0x10
movzx	ecx, byte ptr [rcx + 1]
jmp	0x1400135cf
jmp	0x1400135cf
nop	word ptr [rax + rax]
cmp	edx, 0x8000000
mov	ecx, 1
lea	edx, [rdx + rdx*4]
cmovae	r8d, ecx
movzx	ecx, byte ptr [rax + 1]
add	rax, 1
lea	edx, [r10 + rdx*2 - 0x10]
movzx	r10d, byte ptr [rdi + rcx]
mov	ecx, r10d
sub	ecx, 1
cmp	cl, 0x18
jbe	0x1400135b0
jbe	0x1400135b0
mov	ecx, edx
neg	ecx
test	r15d, r15d
cmovne	edx, ecx
add	dword ptr [rbp - 4], edx
jmp	0x140013375
jmp	0x140013375
nop	dword ptr [rax]
mov	rbx, r9
sub	rbx, r10
cmp	rsi, rbx
jb	0x1400134ff
jb	0x1400134ff
bsr	eax, r11d
xor	eax, 0x1f
mov	dword ptr [rdx], r11d
add	rdx, 4
mov	edi, dword ptr [r12]
sub	rdx, r13
sar	rdx, 2
mov	dword ptr [r15 + 0x14], edx
shl	edx, 5
sub	edx, eax
cmp	edx, edi
jg	0x1400138f0
jg	0x1400138f0
mov	esi, 0
jl	0x140013835
jl	0x140013835
mov	eax, dword ptr [rbp - 4]
cmp	dword ptr [r12 + 8], eax
jl	0x14001389c
jl	0x14001389c
mov	eax, dword ptr [r12 + 4]
mov	ecx, dword ptr [rbp - 4]
cmp	eax, ecx
jg	0x1400137d0
jg	0x1400137d0
mov	ebx, 1
test	esi, esi
je	0x140013686
je	0x140013686
mov	eax, dword ptr [r12 + 0xc]
cmp	eax, 2
je	0x1400139c5
je	0x1400139c5
cmp	eax, 3
je	0x1400139d0
je	0x1400139d0
cmp	eax, 1
je	0x140013a5a
je	0x140013a5a
or	ebx, 0x10
mov	rax, qword ptr [rbp + 0x68]
mov	edi, dword ptr [rbp - 4]
mov	qword ptr [rax], r15
mov	rax, qword ptr [rbp + 0x60]
mov	dword ptr [rax], edi
jmp	0x1400136b2
jmp	0x1400136b2
nop	dword ptr [rax + rax]
call	0x140013d10
call	0x140013d10
jmp	0x1400132ec
jmp	0x1400132ec
nop	word ptr [rax + rax]
xor	ebx, ebx
mov	eax, ebx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax]
add	rax, rsi
movzx	ecx, byte ptr [rax]
cmp	byte ptr [rdi + rcx], 0
mov	rdx, rcx
je	0x140013353
je	0x140013353
mov	rsi, rax
cmp	cl, 0x30
jne	0x140013702
jne	0x140013702
nop	dword ptr [rax + rax]
movzx	edx, byte ptr [rsi + 1]
add	rsi, 1
cmp	dl, 0x30
je	0x1400136e8
je	0x1400136e8
movzx	ecx, dl
cmp	byte ptr [rdi + rcx], 0
je	0x1400139a8
je	0x1400139a8
mov	r9d, 1
jmp	0x14001342e
jmp	0x14001342e
nop	dword ptr [rax]
lea	rcx, [rbx + 1]
xor	r15d, r15d
jmp	0x140013582
jmp	0x140013582
nop	dword ptr [rax]
cmp	eax, 2
je	0x140013abc
je	0x140013abc
cmp	eax, 3
je	0x140013aaa
je	0x140013aaa
cmp	eax, 1
je	0x1400138a4
je	0x1400138a4
mov	ebx, dword ptr [r12]
mov	r13d, ebx
and	ebx, 0x1f
sar	r13d, 5
cmp	ebx, 1
mov	esi, r13d
sbb	esi, -1
xor	ecx, ecx
mov	eax, esi
sar	eax, 1
je	0x140013767
je	0x140013767
nop	word ptr [rax + rax]
add	ecx, 1
sar	eax, 1
jne	0x140013760
jne	0x140013760
call	0x140014300
call	0x140014300
mov	rdi, rax
mov	rax, qword ptr [rbp + 0x68]
mov	qword ptr [rax], rdi
mov	dword ptr [rdi + 0x14], esi
test	r13d, r13d
jle	0x14001379a
jle	0x14001379a
mov	eax, r13d
lea	rcx, [rdi + 0x18]
mov	edx, 0xff
mov	r15d, r13d
lea	r8, [rax*4]
call	0x1400159a8
call	0x1400159a8
cmp	esi, r13d
jle	0x1400137b1
jle	0x1400137b1
mov	edx, 0x20
movsxd	rax, r15d
mov	ecx, edx
sub	ecx, ebx
sar	edx, cl
mov	dword ptr [rdi + rax*4 + 0x18], edx
mov	eax, dword ptr [r12 + 4]
mov	rdi, qword ptr [rbp + 0x60]
mov	ebx, 0x11
mov	dword ptr [rdi], eax
jmp	0x1400136b2
jmp	0x1400136b2
nop	word ptr cs:[rax + rax]
mov	ebx, eax
sub	ebx, ecx
cmp	edi, ebx
jg	0x140013953
jg	0x140013953
mov	edx, dword ptr [r12 + 0xc]
cmp	edx, 2
je	0x140013b19
je	0x140013b19
cmp	edx, 3
je	0x140013a8a
je	0x140013a8a
cmp	edx, 1
jne	0x140013818
jne	0x140013818
cmp	edi, ebx
jne	0x140013818
jne	0x140013818
cmp	edi, 1
je	0x140013a95
je	0x140013a95
lea	edx, [rdi - 1]
mov	rcx, r15
call	0x140015110
call	0x140015110
test	eax, eax
jne	0x140013bb0
jne	0x140013bb0
mov	rcx, r15
call	0x140014400
call	0x140014400
call	0x1400158a8
call	0x1400158a8
mov	ebx, 0x50
mov	dword ptr [rax], 0x22
jmp	0x1400136b2
jmp	0x1400136b2
mov	ebx, edi
mov	rcx, r15
sub	ebx, edx
mov	edx, ebx
call	0x1400148f0
call	0x1400148f0
sub	dword ptr [rbp - 4], ebx
mov	r15, rax
lea	r13, [rax + 0x18]
jmp	0x14001363c
jmp	0x14001363c
movzx	edx, byte ptr [r14 + 1]
mov	eax, 1
test	dl, dl
jne	0x140013879
jne	0x140013879
jmp	0x140013ae6
jmp	0x140013ae6
nop	dword ptr [rax]
add	rax, 1
movzx	edx, byte ptr [r14 + rax]
test	dl, dl
je	0x140013ae6
je	0x140013ae6
cmp	byte ptr [rbx + rax], dl
je	0x140013868
je	0x140013868
movzx	eax, byte ptr [rbx]
and	eax, 0xffffffdf
cmp	al, 0x50
je	0x140013b92
je	0x140013b92
mov	qword ptr [r13], rbx
mov	dword ptr [rbp - 4], 0
jmp	0x140013483
jmp	0x140013483
mov	rcx, r15
call	0x140014400
call	0x140014400
call	0x1400158a8
call	0x1400158a8
mov	ebx, 0xa3
mov	dword ptr [rax], 0x22
jmp	0x1400136b2
jmp	0x1400136b2
nop	dword ptr [rax]
xor	r15d, r15d
jmp	0x14001357a
jmp	0x14001357a
nop	dword ptr [rax + rax]
mov	dword ptr [rbp - 4], 0
jmp	0x14001346a
jmp	0x14001346a
nop	dword ptr [rax]
lea	rsi, [rax + 2]
xor	r9d, r9d
jmp	0x140013327
jmp	0x140013327
nop	dword ptr [rax]
mov	ebx, edx
mov	rcx, r15
sub	ebx, edi
mov	edx, ebx
call	0x140015110
call	0x140015110
mov	esi, eax
test	eax, eax
je	0x14001392f
je	0x14001392f
lea	ecx, [rbx - 1]
mov	eax, 1
mov	esi, 1
mov	edx, ecx
shl	eax, cl
sar	edx, 5
movsxd	rdx, edx
and	eax, dword ptr [r13 + rdx*4]
je	0x14001392f
je	0x14001392f
test	ecx, ecx
jne	0x140013b76
jne	0x140013b76
mov	esi, 2
mov	edx, ebx
mov	rcx, r15
call	0x140013bc0
call	0x140013bc0
add	dword ptr [rbp - 4], ebx
jmp	0x14001363c
jmp	0x14001363c
mov	dword ptr [rbp - 4], 0
mov	r11d, 1
jmp	0x140013560
jmp	0x140013560
lea	r14d, [rbx - 1]
test	esi, esi
jne	0x140013a50
jne	0x140013a50
test	r14d, r14d
jne	0x140013b29
jne	0x140013b29
mov	edx, r14d
mov	ecx, r14d
mov	eax, 1
sar	edx, 5
shl	eax, cl
mov	rcx, r15
movsxd	rdx, edx
and	eax, dword ptr [r13 + rdx*4]
mov	edx, esi
or	edx, 2
test	eax, eax
cmovne	esi, edx
mov	edx, ebx
sub	edi, ebx
mov	ebx, 2
call	0x140013bc0
call	0x140013bc0
mov	eax, dword ptr [r12 + 4]
mov	dword ptr [rbp - 4], eax
jmp	0x14001365f
jmp	0x14001365f
cmp	dl, r8b
je	0x140013a76
je	0x140013a76
mov	rbx, rsi
mov	r9d, 1
mov	r11d, 1
jmp	0x14001345e
jmp	0x14001345e
mov	eax, 1
sub	eax, dword ptr [rbp + 0x70]
mov	dword ptr [rbp + 0x70], eax
mov	eax, dword ptr [rbp + 0x70]
test	eax, eax
je	0x140013683
je	0x140013683
mov	rcx, r15
movsxd	rsi, dword ptr [r15 + 0x14]
call	0x14000d470
call	0x14000d470
mov	r15, rax
lea	rax, [rax + 0x18]
cmp	ebx, 2
je	0x140013b3b
je	0x140013b3b
cmp	dword ptr [r15 + 0x14], esi
jg	0x140013a15
jg	0x140013a15
and	edi, 0x1f
je	0x140013a34
je	0x140013a34
bsr	eax, dword ptr [rax + rsi*4 - 4]
mov	edx, 0x20
sub	edx, edi
xor	eax, 0x1f
cmp	edx, eax
jle	0x140013a34
jle	0x140013a34
mov	edx, 1
mov	rcx, r15
call	0x140013bc0
call	0x140013bc0
add	dword ptr [rbp - 4], 1
mov	eax, dword ptr [rbp - 4]
cmp	dword ptr [r12 + 8], eax
jl	0x14001389c
jl	0x14001389c
mov	ebx, 0x21
jmp	0x140013686
jmp	0x140013686
mov	r11d, dword ptr [rbp + 0x70]
test	r11d, r11d
jne	0x140013820
jne	0x140013820
jmp	0x1400133c3
jmp	0x1400133c3
mov	esi, 1
jmp	0x140013968
jmp	0x140013968
test	sil, 2
je	0x140013683
je	0x140013683
or	esi, dword ptr [r13]
and	esi, 1
jne	0x1400139db
jne	0x1400139db
jmp	0x140013683
jmp	0x140013683
mov	rbx, rsi
mov	r9d, 1
mov	r11d, 1
jmp	0x14001353c
jmp	0x14001353c
mov	edx, dword ptr [rbp + 0x70]
test	edx, edx
je	0x140013818
je	0x140013818
mov	dword ptr [r15 + 0x14], 1
mov	dword ptr [r13], 1
jmp	0x1400133e0
jmp	0x1400133e0
mov	r8d, dword ptr [rbp + 0x70]
test	r8d, r8d
jne	0x1400138a4
jne	0x1400138a4
jmp	0x14001373b
jmp	0x14001373b
mov	r9d, dword ptr [rbp + 0x70]
test	r9d, r9d
je	0x1400138a4
je	0x1400138a4
jmp	0x14001373b
jmp	0x14001373b
xor	r10d, r10d
jmp	0x1400134c6
jmp	0x1400134c6
mov	rdx, r13
mov	eax, 0x20
xor	r11d, r11d
jmp	0x14001360e
jmp	0x14001360e
add	rax, rbx
movzx	ecx, byte ptr [rax]
mov	rbx, rax
cmp	byte ptr [rdi + rcx], 0
mov	rdx, rcx
je	0x140013ba1
je	0x140013ba1
nop	dword ptr [rax]
movzx	ecx, byte ptr [rbx + 1]
add	rbx, 1
cmp	byte ptr [rdi + rcx], 0
mov	rdx, rcx
jne	0x140013b00
jne	0x140013b00
xor	r11d, r11d
jmp	0x14001345e
jmp	0x14001345e
mov	ecx, dword ptr [rbp + 0x70]
test	ecx, ecx
jne	0x140013818
jne	0x140013818
jmp	0x140013a95
jmp	0x140013a95
mov	edx, r14d
mov	rcx, r15
call	0x140015110
call	0x140015110
mov	esi, eax
jmp	0x140013968
jmp	0x140013968
mov	edx, dword ptr [r12]
mov	ebx, 0x22
sub	edx, 1
cmp	edx, edi
jne	0x140013686
jne	0x140013686
mov	r8d, edi
mov	edx, 1
mov	ecx, edi
mov	ebx, 0x21
sar	r8d, 5
shl	edx, cl
movsxd	r8, r8d
and	edx, dword ptr [rax + r8*4]
cmp	edx, 1
adc	ebx, 0
jmp	0x140013686
jmp	0x140013686
mov	edx, ecx
mov	rcx, r15
call	0x140015110
call	0x140015110
test	eax, eax
je	0x14001392a
je	0x14001392a
mov	esi, 3
jmp	0x14001392f
jmp	0x14001392f
mov	dword ptr [rbp - 4], 0
xor	r11d, r11d
jmp	0x140013560
jmp	0x140013560
mov	dword ptr [rbp - 4], 0
xor	r11d, r11d
jmp	0x14001346a
jmp	0x14001346a
mov	eax, dword ptr [r12 + 4]
jmp	0x140013a95
jmp	0x140013a95
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r13
push	r12
push	rdi
push	rsi
push	rbx
lea	rbp, [rsp]
movsxd	rbx, dword ptr [rcx + 0x14]
mov	r12d, edx
mov	r10, rcx
sar	r12d, 5
cmp	ebx, r12d
jg	0x140013c00
jg	0x140013c00
mov	dword ptr [r10 + 0x14], 0
mov	dword ptr [r10 + 0x18], 0
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
lea	r13, [rcx + 0x18]
movsxd	r12, r12d
lea	r11, [r13 + rbx*4]
lea	rsi, [r13 + r12*4]
and	edx, 0x1f
je	0x140013c78
je	0x140013c78
mov	r9d, dword ptr [rsi]
mov	edi, 0x20
mov	ecx, edx
lea	r8, [rsi + 4]
sub	edi, edx
shr	r9d, cl
cmp	r8, r11
jae	0x140013cb8
jae	0x140013cb8
mov	rsi, r13
nop	dword ptr [rax]
mov	eax, dword ptr [r8]
mov	ecx, edi
add	rsi, 4
add	r8, 4
shl	eax, cl
mov	ecx, edx
or	eax, r9d
mov	dword ptr [rsi - 4], eax
mov	r9d, dword ptr [r8 - 4]
shr	r9d, cl
cmp	r8, r11
jb	0x140013c38
jb	0x140013c38
sub	rbx, r12
lea	rax, [r13 + rbx*4 - 4]
mov	dword ptr [rax], r9d
test	r9d, r9d
je	0x140013c96
je	0x140013c96
add	rax, 4
jmp	0x140013c96
jmp	0x140013c96
nop	dword ptr [rax]
mov	rdi, r13
cmp	rsi, r11
jae	0x140013bdf
jae	0x140013bdf
nop	dword ptr [rax]
movsd	dword ptr [rdi], dword ptr [rsi]
cmp	rsi, r11
jb	0x140013c88
jb	0x140013c88
sub	rbx, r12
lea	rax, [r13 + rbx*4]
sub	rax, r13
sar	rax, 2
mov	dword ptr [r10 + 0x14], eax
test	eax, eax
je	0x140013be7
je	0x140013be7
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	dword ptr [r10 + 0x18], r9d
test	r9d, r9d
je	0x140013bdf
je	0x140013bdf
mov	rax, r13
jmp	0x140013c6b
jmp	0x140013c6b
nop	word ptr [rax + rax]
movsxd	rdx, dword ptr [rcx + 0x14]
lea	rax, [rcx + 0x18]
lea	rcx, [rax + rdx*4]
xor	edx, edx
cmp	rax, rcx
jb	0x140013cf4
jb	0x140013cf4
jmp	0x140013d07
jmp	0x140013d07
nop	dword ptr [rax]
add	rax, 4
add	edx, 0x20
cmp	rax, rcx
jae	0x140013d07
jae	0x140013d07
mov	r8d, dword ptr [rax]
test	r8d, r8d
je	0x140013ce8
je	0x140013ce8
cmp	rax, rcx
jae	0x140013d07
jae	0x140013d07
tzcnt	eax, dword ptr [rax]
add	edx, eax
mov	eax, edx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0xaa749]
mov	r9d, 0x10
mov	eax, 0x30
lea	rcx, [rip + 0xd14b7]
sub	r9d, edx
nop	dword ptr [rax]
lea	r8d, [r9 + rdx]
add	rdx, 1
mov	byte ptr [rcx + rax], r8b
movzx	eax, byte ptr [rdx]
test	al, al
jne	0x140013d30
jne	0x140013d30
lea	rdx, [rip + 0xaa721]
mov	r9d, 0x1a
mov	eax, 0x61
sub	r9d, edx
nop	dword ptr [rax + rax]
lea	r8d, [r9 + rdx]
add	rdx, 1
mov	byte ptr [rcx + rax], r8b
movzx	eax, byte ptr [rdx]
test	al, al
jne	0x140013d60
jne	0x140013d60
lea	rdx, [rip + 0xaa6f8]
mov	r9d, 0x1a
mov	eax, 0x41
sub	r9d, edx
nop	dword ptr [rax + rax]
lea	r8d, [r9 + rdx]
add	rdx, 1
mov	byte ptr [rcx + rax], r8b
movzx	eax, byte ptr [rdx]
test	al, al
jne	0x140013d90
jne	0x140013d90
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	rbp, [rsp + 0x40]
mov	r15, qword ptr [rip + 0xab444]
mov	qword ptr [rbp + 0x50], rcx
cmp	byte ptr [r15 + 0x30], 0
mov	rbx, rdx
mov	r13, r8
je	0x1400140e0
je	0x1400140e0
mov	eax, dword ptr [rbx]
mov	edx, eax
sar	edx, 5
and	eax, 0x1f
movsxd	rdx, edx
mov	r8d, eax
lea	rdx, [r13 + rdx*4]
jne	0x1400140a8
jne	0x1400140a8
lea	r12, [rdx - 4]
mov	r14, rdx
mov	rax, qword ptr [rbp + 0x50]
mov	dword ptr [r14 - 4], 0
mov	r9, qword ptr [rax]
movzx	eax, byte ptr [r9 + 1]
mov	edx, eax
test	eax, eax
jne	0x140013e37
jne	0x140013e37
jmp	0x140014140
jmp	0x140014140
nop	word ptr [rax + rax]
movzx	eax, byte ptr [r9 + 2]
add	r9, 1
mov	edx, eax
test	eax, eax
je	0x140013e58
je	0x140013e58
cmp	eax, 0x20
jbe	0x140013e28
jbe	0x140013e28
cmp	dl, 0x30
jne	0x140013e58
jne	0x140013e58
movzx	eax, byte ptr [r9 + 2]
and	eax, 0xffffffdf
cmp	al, 0x58
je	0x1400141a3
je	0x1400141a3
nop	dword ptr [rax]
movzx	edx, byte ptr [r9 + 1]
lea	rax, [r9 + 1]
test	edx, edx
je	0x140014140
je	0x140014140
xor	r10d, r10d
mov	r11, r14
mov	rsi, r12
mov	r14, r9
mov	rbx, r12
xor	edi, edi
mov	ecx, r10d
mov	r9d, r8d
mov	r8d, edx
movzx	r8d, byte ptr [r15 + r8]
test	r8b, r8b
jne	0x140014000
jne	0x140014000
cmp	edx, 0x20
ja	0x1400140f0
ja	0x1400140f0
cmp	edi, ecx
jle	0x140014063
jle	0x140014063
cmp	rbx, rsi
jae	0x140013f15
jae	0x140013f15
cmp	r10d, 7
jg	0x140013f15
jg	0x140013f15
mov	r14d, 8
mov	dword ptr [rbp - 4], r9d
mov	edx, dword ptr [rbx]
mov	r8, rbx
sub	r14d, r10d
mov	qword ptr [rbp - 0x18], rax
mov	r10d, 0x20
shl	r14d, 2
mov	qword ptr [rbp - 0x10], r11
mov	r11d, ecx
sub	r10d, r14d
nop	word ptr [rax + rax]
mov	r9d, dword ptr [r8 + 4]
mov	ecx, r10d
add	r8, 4
mov	eax, r9d
shl	eax, cl
mov	ecx, r14d
or	edx, eax
mov	dword ptr [r8 - 4], edx
mov	edx, r9d
shr	edx, cl
mov	dword ptr [r8], edx
cmp	r8, rsi
jb	0x140013ee0
jb	0x140013ee0
mov	ecx, r11d
mov	r9d, dword ptr [rbp - 4]
mov	r11, qword ptr [rbp - 0x10]
mov	rax, qword ptr [rbp - 0x18]
cmp	r13, rbx
jb	0x140014050
jb	0x140014050
movzx	edx, byte ptr [rax + 1]
mov	r14, rax
mov	r10d, 8
add	rax, 1
test	edx, edx
jne	0x140013e80
jne	0x140013e80
mov	r14, r11
mov	r8d, r9d
mov	r11d, r10d
test	edi, edi
je	0x140014140
je	0x140014140
cmp	rbx, rsi
jae	0x140013f57
jae	0x140013f57
cmp	r11d, 7
jle	0x140014150
jle	0x140014150
cmp	r13, rbx
jae	0x1400140b8
jae	0x1400140b8
mov	rdi, r13
mov	rsi, rbx
nop	word ptr cs:[rax + rax]
movsd	dword ptr [rdi], dword ptr [rsi]
cmp	r12, rsi
jae	0x140013f70
jae	0x140013f70
mov	rax, r12
lea	r9, [r12 + 1]
mov	edx, 4
sub	rax, rbx
add	rbx, 1
shr	rax, 2
cmp	r9, rbx
lea	rcx, [rax*4 + 4]
mov	rax, r12
cmovb	rcx, rdx
add	rcx, r13
sub	rax, rcx
shr	rax, 2
lea	r8, [rax*4 + 4]
lea	rax, [rcx + 1]
cmp	r9, rax
cmovb	r8, rdx
xor	edx, edx
call	0x1400159a8
call	0x1400159a8
mov	eax, dword ptr [r14 - 4]
test	eax, eax
je	0x140013fdd
je	0x140013fdd
jmp	0x140013fea
jmp	0x140013fea
nop	
mov	eax, dword ptr [r12 - 4]
sub	r12, 4
test	eax, eax
jne	0x140013fea
jne	0x140013fea
cmp	r13, r12
jne	0x140013fd0
jne	0x140013fd0
mov	dword ptr [r12], 1
mov	eax, 5
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
add	r10d, 1
add	edi, 1
cmp	r10d, 8
jg	0x140014030
jg	0x140014030
mov	edx, dword ptr [rbx]
shl	edx, 4
and	r8d, 0xf
or	r8d, edx
mov	dword ptr [rbx], r8d
movzx	edx, byte ptr [rax + 1]
mov	r14, rax
jmp	0x140013f2b
jmp	0x140013f2b
nop	dword ptr [rax + rax]
cmp	r13, rbx
jae	0x14001401c
jae	0x14001401c
mov	dword ptr [rbx - 4], 0
xor	edx, edx
sub	rbx, 4
mov	r10d, 1
jmp	0x140014012
jmp	0x140014012
nop	word ptr [rax + rax]
lea	rsi, [rbx - 4]
mov	dword ptr [rbx - 4], 0
mov	ecx, edi
xor	r10d, r10d
mov	rbx, rsi
movzx	edx, byte ptr [rax + 1]
cmp	dl, 0x20
ja	0x14001407d
ja	0x14001407d
nop	dword ptr [rax]
movzx	edx, byte ptr [rax + 2]
add	rax, 1
cmp	dl, 0x20
jbe	0x140014070
jbe	0x140014070
cmp	dl, 0x30
jne	0x14001401c
jne	0x14001401c
movzx	edx, byte ptr [rax + 2]
and	edx, 0xffffffdf
cmp	dl, 0x58
jne	0x14001401c
jne	0x14001401c
movzx	edx, byte ptr [rax + 3]
cmp	dl, 0x20
jbe	0x14001401c
jbe	0x14001401c
lea	r14, [rax + 2]
add	rax, 3
jmp	0x140013e80
jmp	0x140013e80
nop	dword ptr [rax]
lea	r14, [rdx + 4]
mov	r12, rdx
jmp	0x140013e03
jmp	0x140013e03
nop	dword ptr [rax]
mov	eax, dword ptr [r14 - 4]
test	r8d, r8d
je	0x140013fc8
je	0x140013fc8
mov	ecx, 0x20
mov	edx, 0xffffffff
sub	ecx, r8d
shr	edx, cl
and	eax, edx
mov	dword ptr [r14 - 4], eax
jmp	0x140013fc8
jmp	0x140013fc8
nop	
call	0x140013d10
call	0x140013d10
jmp	0x140013de1
jmp	0x140013de1
nop	word ptr [rax + rax]
mov	r8d, r9d
mov	r9, r14
mov	r14, r11
mov	r11d, r10d
cmp	edx, 0x29
jne	0x140014127
jne	0x140014127
test	edi, edi
je	0x140014127
je	0x140014127
mov	rax, qword ptr [rbp + 0x50]
add	r9, 2
mov	qword ptr [rax], r9
cmp	rbx, rsi
jb	0x140013f4d
jb	0x140013f4d
jmp	0x140013f57
jmp	0x140013f57
nop	
movsx	edx, byte ptr [rax]
test	edx, edx
je	0x140014140
je	0x140014140
add	rax, 1
cmp	edx, 0x29
jne	0x140014120
jne	0x140014120
mov	rdi, qword ptr [rbp + 0x50]
mov	qword ptr [rdi], rax
nop	word ptr [rax + rax]
mov	eax, 4
jmp	0x140013fef
jmp	0x140013fef
nop	word ptr [rax + rax]
mov	eax, 8
mov	edi, 0x20
mov	r9, rbx
sub	eax, r11d
lea	r11d, [rax*4]
mov	eax, dword ptr [rbx]
sub	edi, r11d
mov	edx, eax
nop	
mov	r10d, dword ptr [r9 + 4]
mov	ecx, edi
add	r9, 4
mov	eax, r10d
shl	eax, cl
mov	ecx, r11d
or	eax, edx
mov	edx, r10d
shr	edx, cl
mov	dword ptr [r9 - 4], eax
mov	dword ptr [r9], edx
cmp	r9, rsi
jb	0x140014170
jb	0x140014170
cmp	r13, rbx
jb	0x140013f60
jb	0x140013f60
jmp	0x1400140b8
jmp	0x1400140b8
movzx	edx, byte ptr [r9 + 3]
cmp	dl, 0x20
jbe	0x140013e58
jbe	0x140013e58
lea	rax, [r9 + 3]
add	r9, 2
jmp	0x140013e69
jmp	0x140013e69
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rsp + 0x20]
mov	eax, dword ptr [rip + 0xd1a7d]
mov	esi, ecx
cmp	eax, 2
je	0x1400142a0
je	0x1400142a0
test	eax, eax
je	0x140014218
je	0x140014218
cmp	eax, 1
jne	0x14001420b
jne	0x14001420b
mov	rbx, qword ptr [rip + 0xd227a]
nop	
mov	ecx, 1
call	rbx
call	rbx
mov	eax, dword ptr [rip + 0xd1a53]
cmp	eax, 1
je	0x1400141f0
je	0x1400141f0
cmp	eax, 2
je	0x1400142a0
je	0x1400142a0
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	eax, 1
xchg	dword ptr [rip + 0xd1a2d], eax
test	eax, eax
jne	0x140014278
jne	0x140014278
lea	rbx, [rip + 0xd1a32]
mov	rdi, qword ptr [rip + 0xd21cb]
mov	rcx, rbx
call	rdi
call	rdi
lea	rcx, [rbx + 0x28]
call	rdi
call	rdi
lea	rcx, [rip + 0x69]
call	0x140001440
call	0x140001440
mov	dword ptr [rip + 0xd19fa], 2
mov	rcx, rsi
neg	rcx
and	ecx, 0x28
add	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	qword ptr [rip + 0xd214f]
jmp	qword ptr [rip + 0xd214f]
nop	dword ptr [rax]
lea	rbx, [rip + 0xd19e1]
cmp	eax, 2
je	0x14001424c
je	0x14001424c
mov	eax, dword ptr [rip + 0xd19c6]
cmp	eax, 1
je	0x1400141e7
je	0x1400141e7
jmp	0x140014202
jmp	0x140014202
nop	dword ptr [rax + rax]
lea	rbx, [rip + 0xd19b9]
jmp	0x140014256
jmp	0x140014256
nop	dword ptr [rax]
push	rbp
push	rbx
sub	rsp, 0x28
lea	rbp, [rsp + 0x20]
mov	eax, 3
xchg	dword ptr [rip + 0xd198a], eax
cmp	eax, 2
je	0x1400142d8
je	0x1400142d8
add	rsp, 0x28
pop	rbx
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rbx, qword ptr [rip + 0xd20d9]
lea	rcx, [rip + 0xd197a]
call	rbx
call	rbx
lea	rcx, [rip + 0xd1999]
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rbp
jmp	rax
jmp	rax
nop	dword ptr [rax + rax]
push	rbp
push	rsi
push	rbx
sub	rsp, 0x30
lea	rbp, [rsp + 0x30]
mov	ebx, ecx
xor	ecx, ecx
call	0x1400141c0
call	0x1400141c0
cmp	ebx, 9
jg	0x140014358
jg	0x140014358
lea	rdx, [rip + 0xd18df]
movsxd	rcx, ebx
mov	rax, qword ptr [rdx + rcx*8]
test	rax, rax
je	0x1400143a8
je	0x1400143a8
mov	r8, qword ptr [rax]
cmp	dword ptr [rip + 0xd1919], 2
mov	qword ptr [rdx + rcx*8], r8
jne	0x140014391
jne	0x140014391
mov	qword ptr [rbp - 8], rax
lea	rcx, [rip + 0xd1918]
call	qword ptr [rip + 0xd20c2]
call	qword ptr [rip + 0xd20c2]
mov	rax, qword ptr [rbp - 8]
jmp	0x140014391
jmp	0x140014391
nop	dword ptr [rax]
mov	ecx, ebx
mov	esi, 1
shl	esi, cl
lea	eax, [rsi - 1]
cdqe	
lea	rcx, [rax*4 + 0x27]
shr	rcx, 3
mov	ecx, ecx
shl	rcx, 3
call	0x140015980
call	0x140015980
test	rax, rax
je	0x140014399
je	0x140014399
cmp	dword ptr [rip + 0xd18c7], 2
mov	dword ptr [rax + 8], ebx
mov	dword ptr [rax + 0xc], esi
je	0x14001433d
je	0x14001433d
mov	qword ptr [rax + 0x10], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	ecx, ebx
mov	esi, 1
lea	r8, [rip + 0xd0f4a]
shl	esi, cl
lea	eax, [rsi - 1]
cdqe	
lea	rcx, [rax*4 + 0x27]
mov	rax, qword ptr [rip + 0xa0d04]
shr	rcx, 3
mov	rdx, rax
sub	rdx, r8
sar	rdx, 3
add	rdx, rcx
cmp	rdx, 0x120
ja	0x140014374
ja	0x140014374
lea	rdx, [rax + rcx*8]
mov	qword ptr [rip + 0xa0cdf], rdx
jmp	0x140014382
jmp	0x140014382
nop	word ptr cs:[rax + rax]
nop	
push	rbp
push	rbx
sub	rsp, 0x28
lea	rbp, [rsp + 0x20]
mov	rbx, rcx
test	rcx, rcx
je	0x14001444e
je	0x14001444e
cmp	dword ptr [rcx + 8], 9
jle	0x140014428
jle	0x140014428
add	rsp, 0x28
pop	rbx
pop	rbp
jmp	0x140015940
jmp	0x140015940
nop	dword ptr [rax]
xor	ecx, ecx
call	0x1400141c0
call	0x1400141c0
movsxd	rdx, dword ptr [rbx + 8]
lea	rax, [rip + 0xd17c6]
cmp	dword ptr [rip + 0xd180f], 2
mov	rcx, qword ptr [rax + rdx*8]
mov	qword ptr [rax + rdx*8], rbx
mov	qword ptr [rbx], rcx
je	0x140014458
je	0x140014458
add	rsp, 0x28
pop	rbx
pop	rbp
ret	
ret	
nop	dword ptr [rax]
lea	rcx, [rip + 0xd1801]
add	rsp, 0x28
pop	rbx
pop	rbp
jmp	qword ptr [rip + 0xd1fa4]
jmp	qword ptr [rip + 0xd1fa4]
nop	dword ptr [rax]
push	rbp
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rbp, [rsp + 0x20]
mov	edi, dword ptr [rcx + 0x14]
mov	rbx, rcx
movsxd	rsi, r8d
movsxd	rdx, edx
xor	ecx, ecx
nop	dword ptr [rax]
mov	eax, dword ptr [rbx + rcx*4 + 0x18]
imul	rax, rdx
add	rax, rsi
mov	dword ptr [rbx + rcx*4 + 0x18], eax
mov	rsi, rax
add	rcx, 1
shr	rsi, 0x20
cmp	edi, ecx
jg	0x140014490
jg	0x140014490
mov	r12, rbx
test	rsi, rsi
je	0x1400144cb
je	0x1400144cb
cmp	dword ptr [rbx + 0xc], edi
jle	0x1400144e0
jle	0x1400144e0
movsxd	rax, edi
add	edi, 1
mov	r12, rbx
mov	dword ptr [rbx + rax*4 + 0x18], esi
mov	dword ptr [rbx + 0x14], edi
mov	rax, r12
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	eax, dword ptr [rbx + 8]
lea	ecx, [rax + 1]
call	0x140014300
call	0x140014300
mov	r12, rax
test	rax, rax
je	0x1400144cb
je	0x1400144cb
lea	rcx, [rax + 0x10]
movsxd	rax, dword ptr [rbx + 0x14]
lea	rdx, [rbx + 0x10]
lea	r8, [rax*4 + 8]
call	0x140015998
call	0x140015998
mov	rcx, rbx
mov	rbx, r12
call	0x140014400
call	0x140014400
movsxd	rax, edi
add	edi, 1
mov	r12, rbx
mov	dword ptr [rbx + rax*4 + 0x18], esi
mov	dword ptr [rbx + 0x14], edi
jmp	0x1400144cb
jmp	0x1400144cb
nop	dword ptr [rax]
push	rbp
push	rbx
sub	rsp, 0x38
lea	rbp, [rsp + 0x30]
mov	ebx, ecx
xor	ecx, ecx
call	0x1400141c0
call	0x1400141c0
mov	rax, qword ptr [rip + 0xd16bd]
test	rax, rax
je	0x140014580
je	0x140014580
mov	rdx, qword ptr [rax]
cmp	dword ptr [rip + 0xd16f6], 2
mov	qword ptr [rip + 0xd16a7], rdx
je	0x1400145c8
je	0x1400145c8
mov	rdx, qword ptr [rip + 0xaa066]
mov	dword ptr [rax + 0x18], ebx
mov	qword ptr [rax + 0x10], rdx
add	rsp, 0x38
pop	rbx
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rip + 0xa0b49]
lea	rcx, [rip + 0xd0d72]
mov	rdx, rax
sub	rdx, rcx
sar	rdx, 3
add	rdx, 5
cmp	rdx, 0x120
jbe	0x1400145e0
jbe	0x1400145e0
mov	ecx, 0x28
call	0x140015980
call	0x140015980
test	rax, rax
je	0x140014571
je	0x140014571
mov	rdx, qword ptr [rip + 0xaa00d]
cmp	dword ptr [rip + 0xd168e], 2
mov	qword ptr [rax + 8], rdx
jne	0x140014563
jne	0x140014563
mov	qword ptr [rbp - 8], rax
lea	rcx, [rip + 0xd168d]
call	qword ptr [rip + 0xd1e37]
call	qword ptr [rip + 0xd1e37]
mov	rax, qword ptr [rbp - 8]
jmp	0x140014563
jmp	0x140014563
nop	
lea	rdx, [rax + 0x28]
mov	qword ptr [rip + 0xa0ae5], rdx
jmp	0x1400145b4
jmp	0x1400145b4
nop	dword ptr [rax]
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
lea	rbp, [rsp + 0x30]
movsxd	r14, dword ptr [rcx + 0x14]
movsxd	r13, dword ptr [rdx + 0x14]
mov	r9, rcx
mov	r15, rdx
cmp	r14d, r13d
jl	0x140014627
jl	0x140014627
mov	eax, r13d
mov	r15, rcx
movsxd	r13, r14d
mov	r9, rdx
movsxd	r14, eax
mov	ecx, dword ptr [r15 + 8]
lea	ebx, [r13 + r14]
cmp	dword ptr [r15 + 0xc], ebx
jge	0x140014639
jge	0x140014639
add	ecx, 1
mov	qword ptr [rbp + 0x50], r9
call	0x140014300
call	0x140014300
mov	rdi, rax
test	rax, rax
je	0x140014743
je	0x140014743
lea	r12, [rax + 0x18]
movsxd	rax, ebx
mov	r9, qword ptr [rbp + 0x50]
lea	rsi, [r12 + rax*4]
cmp	r12, rsi
jae	0x14001468a
jae	0x14001468a
mov	rax, rsi
xor	edx, edx
mov	rcx, r12
mov	qword ptr [rbp + 0x50], r9
sub	rax, rdi
sub	rax, 0x19
shr	rax, 2
lea	r8, [rax*4 + 4]
call	0x1400159a8
call	0x1400159a8
mov	r9, qword ptr [rbp + 0x50]
add	r9, 0x18
lea	r11, [r15 + 0x18]
lea	r14, [r9 + r14*4]
lea	r13, [r11 + r13*4]
cmp	r9, r14
jae	0x140014728
jae	0x140014728
mov	rax, r13
lea	r10, [r15 + 0x19]
sub	rax, r15
sub	rax, 0x19
shr	rax, 2
cmp	r13, r10
lea	rdx, [rax*4 + 4]
mov	eax, 4
cmovae	rax, rdx
mov	qword ptr [rbp - 8], rax
jmp	0x1400146d9
jmp	0x1400146d9
nop	
add	r12, 4
cmp	r9, r14
jae	0x140014728
jae	0x140014728
mov	r10d, dword ptr [r9]
add	r9, 4
test	r10d, r10d
je	0x1400146d0
je	0x1400146d0
mov	rcx, r12
mov	rdx, r11
xor	r8d, r8d
nop	
mov	eax, dword ptr [rdx]
mov	r15d, dword ptr [rcx]
add	rdx, 4
add	rcx, 4
imul	rax, r10
add	rax, r15
add	rax, r8
mov	r8, rax
mov	dword ptr [rcx - 4], eax
shr	r8, 0x20
cmp	rdx, r13
jb	0x1400146f0
jb	0x1400146f0
mov	rax, qword ptr [rbp - 8]
add	r12, 4
mov	dword ptr [r12 + rax - 4], r8d
cmp	r9, r14
jb	0x1400146d9
jb	0x1400146d9
test	ebx, ebx
jg	0x140014735
jg	0x140014735
jmp	0x140014740
jmp	0x140014740
nop	
sub	ebx, 1
je	0x140014740
je	0x140014740
mov	eax, dword ptr [rsi - 4]
sub	rsi, 4
test	eax, eax
je	0x140014730
je	0x140014730
mov	dword ptr [rdi + 0x14], ebx
mov	rax, rdi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
push	rbp
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rbp, [rsp + 0x20]
mov	eax, edx
mov	rsi, rcx
mov	ebx, edx
and	eax, 3
jne	0x140014840
jne	0x140014840
sar	ebx, 2
mov	r12, rsi
je	0x1400147da
je	0x1400147da
mov	rdi, qword ptr [rip + 0xd0b52]
test	rdi, rdi
je	0x140014870
je	0x140014870
mov	r12, rsi
jmp	0x1400147af
jmp	0x1400147af
nop	dword ptr [rax]
sar	ebx, 1
je	0x1400147da
je	0x1400147da
mov	rsi, qword ptr [rdi]
test	rsi, rsi
je	0x1400147f0
je	0x1400147f0
mov	rdi, rsi
test	bl, 1
je	0x1400147a0
je	0x1400147a0
mov	rdx, rdi
mov	rcx, r12
call	0x1400145f0
call	0x1400145f0
mov	rsi, rax
test	rax, rax
je	0x140014868
je	0x140014868
mov	rcx, r12
mov	r12, rsi
call	0x140014400
call	0x140014400
sar	ebx, 1
jne	0x1400147a4
jne	0x1400147a4
mov	rax, r12
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	ecx, 1
call	0x1400141c0
call	0x1400141c0
mov	rsi, qword ptr [rdi]
test	rsi, rsi
je	0x140014820
je	0x140014820
cmp	dword ptr [rip + 0xd1447], 2
jne	0x1400147ac
jne	0x1400147ac
lea	rcx, [rip + 0xd1476]
call	qword ptr [rip + 0xd1bf8]
call	qword ptr [rip + 0xd1bf8]
jmp	0x1400147ac
jmp	0x1400147ac
nop	word ptr [rax + rax]
mov	rdx, rdi
mov	rcx, rdi
call	0x1400145f0
call	0x1400145f0
mov	qword ptr [rdi], rax
mov	rsi, rax
test	rax, rax
je	0x140014868
je	0x140014868
mov	qword ptr [rax], 0
jmp	0x140014802
jmp	0x140014802
nop	
sub	eax, 1
lea	rdx, [rip + 0xa9c36]
xor	r8d, r8d
cdqe	
mov	edx, dword ptr [rdx + rax*4]
call	0x140014470
call	0x140014470
mov	rsi, rax
test	rax, rax
jne	0x14001477f
jne	0x14001477f
nop	dword ptr [rax + rax]
xor	r12d, r12d
jmp	0x1400147da
jmp	0x1400147da
mov	ecx, 1
call	0x1400141c0
call	0x1400141c0
mov	rdi, qword ptr [rip + 0xd0a5f]
test	rdi, rdi
je	0x1400148a5
je	0x1400148a5
cmp	dword ptr [rip + 0xd13c3], 2
jne	0x140014797
jne	0x140014797
lea	rcx, [rip + 0xd13ee]
call	qword ptr [rip + 0xd1b70]
call	qword ptr [rip + 0xd1b70]
jmp	0x140014797
jmp	0x140014797
mov	ecx, 1
call	0x140014300
call	0x140014300
mov	rdi, rax
test	rax, rax
je	0x1400148d5
je	0x1400148d5
movabs	rax, 0x27100000001
mov	qword ptr [rip + 0xd0a18], rdi
mov	qword ptr [rdi + 0x14], rax
mov	qword ptr [rdi], 0
jmp	0x140014886
jmp	0x140014886
mov	qword ptr [rip + 0xd0a00], 0
jmp	0x140014868
jmp	0x140014868
nop	word ptr cs:[rax + rax]
nop	dword ptr [rax]
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rsp + 0x20]
mov	r13, rcx
mov	esi, edx
mov	ecx, dword ptr [rcx + 8]
mov	r14d, edx
mov	ebx, dword ptr [r13 + 0x14]
sar	esi, 5
mov	eax, dword ptr [r13 + 0xc]
add	ebx, esi
lea	r12d, [rbx + 1]
cmp	r12d, eax
jle	0x14001493a
jle	0x14001493a
nop	word ptr cs:[rax + rax]
add	eax, eax
add	ecx, 1
cmp	r12d, eax
jg	0x140014930
jg	0x140014930
call	0x140014300
call	0x140014300
mov	r15, rax
test	rax, rax
je	0x1400149ee
je	0x1400149ee
lea	rdi, [rax + 0x18]
test	esi, esi
jle	0x140014967
jle	0x140014967
shl	rsi, 2
mov	rcx, rdi
xor	edx, edx
mov	r8, rsi
add	rdi, rsi
call	0x1400159a8
call	0x1400159a8
movsxd	rax, dword ptr [r13 + 0x14]
lea	rsi, [r13 + 0x18]
lea	r8, [rsi + rax*4]
and	r14d, 0x1f
je	0x140014a08
je	0x140014a08
mov	r10d, 0x20
mov	r9, rdi
xor	edx, edx
sub	r10d, r14d
nop	dword ptr [rax + rax]
mov	eax, dword ptr [rsi]
mov	ecx, r14d
add	r9, 4
add	rsi, 4
shl	eax, cl
mov	ecx, r10d
or	eax, edx
mov	dword ptr [r9 - 4], eax
mov	edx, dword ptr [rsi - 4]
shr	edx, cl
cmp	rsi, r8
jb	0x140014990
jb	0x140014990
mov	rax, r8
lea	rcx, [r13 + 0x19]
sub	rax, r13
sub	rax, 0x19
shr	rax, 2
cmp	r8, rcx
mov	ecx, 4
lea	rax, [rax*4 + 4]
cmovb	rax, rcx
mov	dword ptr [rdi + rax], edx
test	edx, edx
jne	0x1400149e2
jne	0x1400149e2
mov	r12d, ebx
mov	dword ptr [r15 + 0x14], r12d
mov	rcx, r13
call	0x140014400
call	0x140014400
mov	rax, r15
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
movsd	dword ptr [rdi], dword ptr [rsi]
cmp	rsi, r8
jae	0x1400149df
jae	0x1400149df
movsd	dword ptr [rdi], dword ptr [rsi]
cmp	rsi, r8
jb	0x140014a08
jb	0x140014a08
jmp	0x1400149df
jmp	0x1400149df
nop	word ptr cs:[rax + rax]
movsxd	rax, dword ptr [rdx + 0x14]
mov	r9d, dword ptr [rcx + 0x14]
sub	r9d, eax
jne	0x140014a64
jne	0x140014a64
lea	r8, [rax*4]
add	rcx, 0x18
lea	rax, [rcx + r8]
lea	rdx, [rdx + r8 + 0x18]
jmp	0x140014a4d
jmp	0x140014a4d
nop	dword ptr [rax]
cmp	rcx, rax
jae	0x140014a64
jae	0x140014a64
sub	rax, 4
sub	rdx, 4
mov	r10d, dword ptr [rdx]
cmp	dword ptr [rax], r10d
je	0x140014a48
je	0x140014a48
sbb	r9d, r9d
or	r9d, 1
mov	eax, r9d
ret	
ret	
nop	dword ptr [rax + rax]
push	rbp
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rbp, [rsp + 0x20]
movsxd	rax, dword ptr [rdx + 0x14]
mov	rbx, rcx
mov	rsi, rdx
cmp	dword ptr [rcx + 0x14], eax
jne	0x140014be8
jne	0x140014be8
lea	rdx, [rax*4]
lea	rcx, [rcx + 0x18]
lea	rax, [rcx + rdx]
lea	rdx, [rsi + rdx + 0x18]
jmp	0x140014ab9
jmp	0x140014ab9
nop	dword ptr [rax]
cmp	rcx, rax
jae	0x140014c00
jae	0x140014c00
sub	rax, 4
sub	rdx, 4
mov	edi, dword ptr [rdx]
cmp	dword ptr [rax], edi
je	0x140014ab0
je	0x140014ab0
mov	edi, 1
jb	0x140014ad9
jb	0x140014ad9
mov	rax, rsi
xor	edi, edi
mov	rsi, rbx
mov	rbx, rax
mov	ecx, dword ptr [rsi + 8]
call	0x140014300
call	0x140014300
mov	r9, rax
test	rax, rax
je	0x140014bd3
je	0x140014bd3
mov	dword ptr [rax + 0x10], edi
movsxd	rax, dword ptr [rsi + 0x14]
lea	r13, [rsi + 0x18]
lea	r12, [r9 + 0x18]
mov	ecx, 0x18
xor	edx, edx
mov	r10, rax
lea	r11, [r13 + rax*4]
movsxd	rax, dword ptr [rbx + 0x14]
lea	r8, [rbx + rax*4 + 0x18]
nop	dword ptr [rax]
mov	edi, dword ptr [rbx + rcx]
mov	eax, dword ptr [rsi + rcx]
sub	rax, rdi
sub	rax, rdx
mov	dword ptr [r9 + rcx], eax
mov	rdx, rax
add	rcx, 4
mov	edi, eax
shr	rdx, 0x20
lea	rax, [rcx + rbx]
and	edx, 1
cmp	rax, r8
jb	0x140014b18
jb	0x140014b18
lea	rax, [rbx + 0x19]
mov	ecx, 4
cmp	r8, rax
setae	sil
sub	r8, rbx
lea	r14, [r8 - 0x19]
shr	r14, 2
test	sil, sil
lea	rax, [r14*4 + 4]
cmove	rax, rcx
add	r13, rax
lea	r8, [r12 + rax]
mov	rbx, r8
mov	rcx, r13
cmp	r13, r11
jae	0x140014c20
jae	0x140014c20
nop	dword ptr [rax]
mov	eax, dword ptr [rcx]
add	rcx, 4
add	rbx, 4
sub	rax, rdx
mov	rdx, rax
mov	dword ptr [rbx - 4], eax
mov	edi, eax
shr	rdx, 0x20
and	edx, 1
cmp	rcx, r11
jb	0x140014b88
jb	0x140014b88
sub	r11, 1
sub	r11, r13
and	r11, 0xfffffffffffffffc
lea	rax, [r8 + r11]
test	edi, edi
jne	0x140014bcf
jne	0x140014bcf
nop	dword ptr [rax]
mov	edx, dword ptr [rax - 4]
sub	rax, 4
sub	r10d, 1
test	edx, edx
je	0x140014bc0
je	0x140014bc0
mov	dword ptr [r9 + 0x14], r10d
mov	rax, r9
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	edi, 1
jns	0x140014ace
jns	0x140014ace
jmp	0x140014ad9
jmp	0x140014ad9
nop	dword ptr [rax + rax]
xor	ecx, ecx
call	0x140014300
call	0x140014300
mov	r9, rax
test	rax, rax
je	0x140014bd3
je	0x140014bd3
mov	qword ptr [rax + 0x14], 1
jmp	0x140014bd3
jmp	0x140014bd3
nop	dword ptr [rax]
xor	eax, eax
shl	r14, 2
test	sil, sil
cmove	r14, rax
lea	rax, [r12 + r14]
jmp	0x140014bb8
jmp	0x140014bb8
nop	word ptr cs:[rax + rax]
nop	
push	rbp
push	rdi
push	rsi
push	rbx
lea	rbp, [rsp]
movsxd	rax, dword ptr [rcx + 0x14]
lea	r11, [rcx + 0x18]
lea	r10, [r11 + rax*4]
mov	r9d, dword ptr [r10 - 4]
lea	rsi, [r10 - 4]
bsr	ecx, r9d
mov	edi, ecx
mov	ecx, 0x20
xor	edi, 0x1f
mov	r8d, ecx
sub	r8d, edi
mov	dword ptr [rdx], r8d
cmp	edi, 0xa
jle	0x140014cf0
jle	0x140014cf0
lea	ebx, [rdi - 0xb]
cmp	r11, rsi
jae	0x140014cd0
jae	0x140014cd0
mov	edx, dword ptr [r10 - 8]
test	ebx, ebx
je	0x140014cd7
je	0x140014cd7
sub	ecx, ebx
mov	eax, r9d
mov	esi, edx
mov	r8d, ecx
mov	ecx, ebx
shl	eax, cl
mov	ecx, r8d
shr	esi, cl
mov	ecx, ebx
or	eax, esi
shl	edx, cl
lea	rcx, [r10 - 8]
or	eax, 0x3ff00000
shl	rax, 0x20
cmp	r11, rcx
jae	0x140014ce3
jae	0x140014ce3
mov	r9d, dword ptr [r10 - 0xc]
mov	ecx, r8d
shr	r9d, cl
or	edx, r9d
or	rax, rdx
movq	xmm0, rax
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
xor	edx, edx
cmp	edi, 0xb
jne	0x140014d30
jne	0x140014d30
mov	eax, r9d
or	eax, 0x3ff00000
shl	rax, 0x20
or	rax, rdx
movq	xmm0, rax
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	ecx, 0xb
mov	eax, r9d
xor	r8d, r8d
sub	ecx, edi
shr	eax, cl
or	eax, 0x3ff00000
shl	rax, 0x20
cmp	r11, rsi
jae	0x140014d14
jae	0x140014d14
mov	r8d, dword ptr [r10 - 8]
shr	r8d, cl
lea	ecx, [rdi + 0x15]
mov	edx, r9d
shl	edx, cl
or	edx, r8d
or	rax, rdx
movq	xmm0, rax
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	eax, r9d
mov	ecx, ebx
xor	edx, edx
shl	eax, cl
or	eax, 0x3ff00000
shl	rax, 0x20
or	rax, rdx
movq	xmm0, rax
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
push	rbp
push	rsi
push	rbx
sub	rsp, 0x30
lea	rbp, [rsp + 0x20]
movups	xmmword ptr [rbp], xmm6
mov	ecx, 1
mov	rsi, rdx
movupd	xmm6, xmm0
mov	rbx, r8
call	0x140014300
call	0x140014300
mov	rdx, rax
test	rax, rax
je	0x140014e14
je	0x140014e14
movq	rax, xmm6
mov	rcx, rax
shr	rcx, 0x20
mov	r9d, ecx
shr	ecx, 0x14
and	r9d, 0xfffff
mov	r8d, r9d
or	r8d, 0x100000
and	ecx, 0x7ff
cmovne	r9d, r8d
mov	r10d, ecx
test	eax, eax
je	0x140014e28
je	0x140014e28
xor	r8d, r8d
tzcnt	r8d, eax
mov	ecx, r8d
shr	eax, cl
test	r8d, r8d
je	0x140014ddd
je	0x140014ddd
mov	ecx, 0x20
mov	r11d, r9d
sub	ecx, r8d
shl	r11d, cl
mov	ecx, r8d
or	eax, r11d
shr	r9d, cl
mov	dword ptr [rdx + 0x18], eax
cmp	r9d, 1
mov	eax, 1
sbb	eax, -1
mov	dword ptr [rdx + 0x1c], r9d
mov	dword ptr [rdx + 0x14], eax
test	r10d, r10d
jne	0x140014e47
jne	0x140014e47
movsxd	rcx, eax
sub	r8d, 0x432
bsr	ecx, dword ptr [rdx + rcx*4 + 0x14]
shl	eax, 5
mov	dword ptr [rsi], r8d
xor	ecx, 0x1f
sub	eax, ecx
mov	dword ptr [rbx], eax
movups	xmm6, xmmword ptr [rbp]
mov	rax, rdx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
xor	ecx, ecx
mov	eax, 1
tzcnt	ecx, r9d
mov	dword ptr [rdx + 0x14], eax
shr	r9d, cl
lea	r8d, [rcx + 0x20]
mov	dword ptr [rdx + 0x18], r9d
test	r10d, r10d
je	0x140014df8
je	0x140014df8
lea	eax, [r10 + r8 - 0x433]
mov	dword ptr [rsi], eax
mov	eax, 0x35
sub	eax, r8d
mov	dword ptr [rbx], eax
movups	xmm6, xmmword ptr [rbp]
mov	rax, rdx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, rcx
lea	rcx, [rdx + 1]
movzx	edx, byte ptr [rdx]
mov	byte ptr [rax], dl
test	dl, dl
je	0x140014e91
je	0x140014e91
movzx	edx, byte ptr [rcx]
add	rax, 1
add	rcx, 1
mov	byte ptr [rax], dl
test	dl, dl
jne	0x140014e80
jne	0x140014e80
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rsp + 0x20]
lea	eax, [r8 + 8]
mov	edi, edx
mov	r12, rcx
mov	esi, r8d
movsxd	rdx, eax
sar	eax, 0x1f
mov	ebx, r9d
imul	rdx, rdx, 0x38e38e39
sar	rdx, 0x21
sub	edx, eax
cmp	r8d, 9
jle	0x140014f90
jle	0x140014f90
mov	eax, 1
xor	ecx, ecx
nop	dword ptr [rax]
add	eax, eax
add	ecx, 1
cmp	edx, eax
jg	0x140014ee8
jg	0x140014ee8
call	0x140014300
call	0x140014300
movsxd	r13, dword ptr [rbp + 0x60]
mov	dword ptr [rax + 0x18], ebx
mov	rcx, rax
mov	dword ptr [rax + 0x14], 1
cmp	edi, 9
jle	0x140014f80
jle	0x140014f80
mov	eax, edi
lea	rbx, [r12 + 9]
add	r12, rax
nop	word ptr cs:[rax + rax]
movsx	r8d, byte ptr [rbx]
mov	edx, 0xa
add	rbx, 1
sub	r8d, 0x30
call	0x140014470
call	0x140014470
mov	rcx, rax
cmp	rbx, r12
jne	0x140014f20
jne	0x140014f20
add	rbx, r13
cmp	esi, edi
jle	0x140014f6e
jle	0x140014f6e
sub	esi, edi
add	rsi, rbx
nop	word ptr [rax + rax]
movsx	r8d, byte ptr [rbx]
mov	edx, 0xa
add	rbx, 1
sub	r8d, 0x30
call	0x140014470
call	0x140014470
mov	rcx, rax
cmp	rbx, rsi
jne	0x140014f50
jne	0x140014f50
mov	rax, rcx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	rbp
ret	
ret	
nop	
lea	rbx, [r12 + r13 + 9]
mov	edi, 9
jmp	0x140014f41
jmp	0x140014f41
nop	dword ptr [rax]
xor	ecx, ecx
jmp	0x140014ef1
jmp	0x140014ef1
nop	word ptr [rax + rax]
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	rbp, [rsp + 0x30]
movups	xmmword ptr [rbp], xmm6
mov	rsi, rdx
lea	rdx, [rbp - 8]
mov	rdi, rcx
call	0x140014c40
call	0x140014c40
mov	rcx, rsi
lea	rdx, [rbp - 4]
movupd	xmm6, xmm0
movq	rbx, xmm0
call	0x140014c40
call	0x140014c40
mov	eax, dword ptr [rdi + 0x14]
sub	eax, dword ptr [rsi + 0x14]
shl	eax, 5
add	eax, dword ptr [rbp - 8]
movq	rcx, xmm0
sub	eax, dword ptr [rbp - 4]
test	eax, eax
jle	0x140015020
jle	0x140015020
mov	rdx, rbx
shl	eax, 0x14
shr	rdx, 0x20
add	edx, eax
mov	eax, ebx
mov	edx, edx
shl	rdx, 0x20
or	rax, rdx
movq	xmm6, rax
divsd	xmm6, xmm0
movupd	xmm0, xmm6
movups	xmm6, xmmword ptr [rbp]
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
mov	rdx, rcx
shl	eax, 0x14
shr	rdx, 0x20
sub	edx, eax
mov	eax, ecx
shl	rdx, 0x20
or	rax, rdx
movq	xmm0, rax
jmp	0x140015009
jmp	0x140015009
nop	dword ptr [rax]
mov	r8, qword ptr [rcx]
jmp	0x140015061
jmp	0x140015061
nop	dword ptr [rax]
movsx	eax, byte ptr [r8]
lea	r11d, [rax - 0x41]
lea	r10d, [rax + 0x20]
cmp	r11d, 0x1a
cmovb	eax, r10d
cmp	eax, r9d
jne	0x140015080
jne	0x140015080
movsx	r9d, byte ptr [rdx]
add	rdx, 1
add	r8, 1
test	r9d, r9d
jne	0x140015048
jne	0x140015048
mov	eax, 1
mov	qword ptr [rcx], r8
ret	
ret	
nop	dword ptr [rax + rax]
xor	eax, eax
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	
push	rbp
push	rdi
push	rsi
lea	rbp, [rsp]
lea	eax, [rdx - 1]
lea	rsi, [r8 + 0x18]
sar	eax, 5
lea	eax, [rax + 1]
cdqe	
lea	rdx, [rcx + rax*4]
movsxd	rax, dword ptr [r8 + 0x14]
lea	rax, [rsi + rax*4]
cmp	rsi, rax
jae	0x1400150d6
jae	0x1400150d6
mov	rdi, rcx
nop	word ptr [rax + rax]
movsd	dword ptr [rdi], dword ptr [rsi]
cmp	rsi, rax
jb	0x1400150c0
jb	0x1400150c0
sub	rax, r8
sub	rax, 0x19
shr	rax, 2
lea	rcx, [rcx + rax*4 + 4]
cmp	rcx, rdx
jae	0x140015100
jae	0x140015100
sub	rdx, 1
sub	rdx, rcx
shr	rdx, 2
lea	r8, [rdx*4 + 4]
xor	edx, edx
pop	rsi
pop	rdi
pop	rbp
jmp	0x1400159a8
jmp	0x1400159a8
nop	dword ptr [rax + rax]
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
nop	
lea	r8, [rcx + 0x18]
mov	r9d, edx
movsxd	rcx, dword ptr [rcx + 0x14]
sar	r9d, 5
cmp	ecx, r9d
jge	0x140015148
jge	0x140015148
lea	rax, [r8 + rcx*4]
jmp	0x14001513b
jmp	0x14001513b
nop	word ptr [rax + rax]
mov	edx, dword ptr [rax - 4]
sub	rax, 4
test	edx, edx
jne	0x140015170
jne	0x140015170
cmp	r8, rax
jb	0x140015130
jb	0x140015130
xor	edx, edx
mov	eax, edx
ret	
ret	
nop	dword ptr [rax]
movsxd	rax, r9d
lea	rax, [r8 + rax*4]
jle	0x14001513b
jle	0x14001513b
and	edx, 0x1f
je	0x14001513b
je	0x14001513b
mov	r10d, dword ptr [rax]
mov	ecx, edx
mov	edx, 1
mov	r9d, r10d
shr	r9d, cl
shl	r9d, cl
cmp	r10d, r9d
jne	0x140015142
jne	0x140015142
jmp	0x14001513b
jmp	0x14001513b
mov	edx, 1
mov	eax, edx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	r8d, r8d
mov	rax, rcx
test	rdx, rdx
jne	0x14001519f
jne	0x14001519f
jmp	0x1400151a4
jmp	0x1400151a4
nop	dword ptr [rax]
add	rax, 1
mov	r8, rax
sub	r8, rcx
cmp	r8, rdx
jae	0x1400151a4
jae	0x1400151a4
cmp	byte ptr [rax], 0
jne	0x140015190
jne	0x140015190
mov	rax, r8
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	r8d, r8d
mov	rax, rdx
test	rdx, rdx
jne	0x1400151c9
jne	0x1400151c9
jmp	0x1400151d4
jmp	0x1400151d4
nop	dword ptr [rax]
add	r8, 1
cmp	rax, r8
je	0x1400151d4
je	0x1400151d4
cmp	word ptr [rcx + r8*2], 0
jne	0x1400151c0
jne	0x1400151c0
mov	rax, r8
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0xaa069]
mov	rax, qword ptr [rax]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0xaa049]
mov	rax, qword ptr [rax]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbp
mov	rbp, rsp
sub	rsp, 0x20
test	rcx, rcx
je	0x140015230
je	0x140015230
mov	rax, qword ptr [rip + 0xd0aac]
test	rax, rax
je	0x140015230
je	0x140015230
mov	edx, 4
call	rax
call	rax
test	al, al
je	0x140015230
je	0x140015230
xor	eax, eax
add	rsp, 0x20
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	eax, 0x16
add	rsp, 0x20
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
push	rbp
push	rsi
push	rbx
sub	rsp, 0x20
lea	rbp, [rsp + 0x20]
mov	rbx, rcx
lea	rcx, [rip + 0xa938a]
call	qword ptr [rip + 0xd117c]
call	qword ptr [rip + 0xd117c]
mov	rsi, qword ptr [rip + 0xd117d]
lea	rdx, [rip + 0xa938c]
mov	rcx, rax
call	rsi
call	rsi
test	rax, rax
je	0x140015290
je	0x140015290
mov	rcx, rbx
mov	qword ptr [rip + 0x9fe82], rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rbp
jmp	rax
jmp	rax
nop	dword ptr [rax + rax]
lea	rcx, [rip + 0xa9367]
call	qword ptr [rip + 0xd117b]
call	qword ptr [rip + 0xd117b]
lea	rdx, [rip + 0xa9374]
mov	rcx, rax
call	rsi
call	rsi
mov	qword ptr [rip + 0xd0a10], rax
lea	rax, [rip - 0xb7]
jmp	0x140015274
jmp	0x140015274
nop	dword ptr [rax]
jmp	qword ptr [rip + 0x9fe39]
jmp	qword ptr [rip + 0x9fe39]
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0xd09f9]
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, rcx
xchg	qword ptr [rip + 0xd09e6], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rbx
sub	rsp, 0x28
lea	rbp, [rsp + 0x20]
mov	ebx, ecx
call	0x140015880
call	0x140015880
mov	ecx, ebx
lea	rdx, [rcx + rcx*2]
shl	rdx, 4
add	rax, rdx
add	rsp, 0x28
pop	rbx
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
mov	rbp, rsp
sub	rsp, 0x50
mov	rax, rcx
mov	word ptr [rbp + 0x18], dx
mov	ecx, r8d
test	r8d, r8d
jne	0x140015350
jne	0x140015350
cmp	dx, 0xff
ja	0x140015390
ja	0x140015390
mov	byte ptr [rax], dl
mov	eax, 1
add	rsp, 0x50
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rbp - 4]
mov	dword ptr [rsp + 0x28], r9d
lea	r8, [rbp + 0x18]
mov	r9d, 1
mov	qword ptr [rsp + 0x38], rdx
xor	edx, edx
mov	dword ptr [rbp - 4], 0
mov	qword ptr [rsp + 0x30], 0
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [rip + 0xd113b]
call	qword ptr [rip + 0xd113b]
test	eax, eax
je	0x140015390
je	0x140015390
mov	edx, dword ptr [rbp - 4]
test	edx, edx
je	0x140015345
je	0x140015345
call	0x1400158a8
call	0x1400158a8
mov	dword ptr [rax], 0x2a
mov	eax, 0xffffffff
add	rsp, 0x50
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
lea	rbp, [rsp + 0x30]
test	rcx, rcx
mov	rbx, rcx
lea	rax, [rbp - 5]
mov	esi, edx
cmove	rbx, rax
call	0x140015870
call	0x140015870
mov	edi, eax
call	0x140015868
call	0x140015868
movzx	edx, si
mov	r9d, edi
mov	rcx, rbx
mov	r8d, eax
call	0x140015320
call	0x140015320
cdqe	
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
lea	rbp, [rsp + 0x30]
xor	r14d, r14d
mov	r12, rdx
mov	r15, rcx
mov	rdi, r8
call	0x140015868
call	0x140015868
mov	ebx, eax
call	0x140015870
call	0x140015870
mov	r13, qword ptr [r12]
mov	esi, eax
test	r13, r13
je	0x14001548a
je	0x14001548a
test	r15, r15
je	0x1400154a0
je	0x1400154a0
test	rdi, rdi
jne	0x14001546c
jne	0x14001546c
jmp	0x1400154e0
jmp	0x1400154e0
nop	word ptr [rax + rax]
cdqe	
add	r15, rax
add	r14, rax
cmp	byte ptr [r15 - 1], 0
je	0x1400154f0
je	0x1400154f0
add	r13, 2
cmp	r14, rdi
jae	0x1400154e0
jae	0x1400154e0
movzx	edx, word ptr [r13]
mov	r9d, esi
mov	r8d, ebx
mov	rcx, r15
call	0x140015320
call	0x140015320
test	eax, eax
jg	0x140015450
jg	0x140015450
mov	r14, 0xffffffffffffffff
mov	rax, r14
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	
lea	rdi, [rbp - 5]
jmp	0x1400154c6
jmp	0x1400154c6
nop	word ptr cs:[rax + rax]
movsxd	rdx, eax
sub	eax, 1
cdqe	
add	r14, rdx
cmp	byte ptr [rbp + rax - 5], 0
je	0x140015500
je	0x140015500
add	r13, 2
movzx	edx, word ptr [r13]
mov	r9d, esi
mov	r8d, ebx
mov	rcx, rdi
call	0x140015320
call	0x140015320
test	eax, eax
jg	0x1400154b0
jg	0x1400154b0
jmp	0x140015483
jmp	0x140015483
nop	
mov	qword ptr [r12], r13
jmp	0x14001548a
jmp	0x14001548a
nop	word ptr cs:[rax + rax]
mov	qword ptr [r12], 0
sub	r14, 1
jmp	0x14001548a
jmp	0x14001548a
nop	
sub	r14, 1
jmp	0x14001548a
jmp	0x14001548a
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rbx
sub	rsp, 0x40
lea	rbp, [rsp + 0x40]
mov	rdi, rcx
mov	rbx, rdx
test	rdx, rdx
je	0x1400155e5
je	0x1400155e5
test	r8, r8
je	0x140015650
je	0x140015650
mov	eax, dword ptr [r9]
movzx	edx, byte ptr [rdx]
mov	dword ptr [r9], 0
mov	dword ptr [rbp - 4], eax
test	dl, dl
je	0x1400155e0
je	0x1400155e0
cmp	dword ptr [rbp + 0x48], 1
jbe	0x1400155c0
jbe	0x1400155c0
test	al, al
jne	0x1400155f0
jne	0x1400155f0
mov	qword ptr [rbp + 0x38], r9
mov	ecx, dword ptr [rbp + 0x40]
mov	qword ptr [rbp + 0x30], r8
call	qword ptr [rip + 0xd0e9d]
call	qword ptr [rip + 0xd0e9d]
test	eax, eax
je	0x1400155c0
je	0x1400155c0
mov	r8, qword ptr [rbp + 0x30]
mov	r9, qword ptr [rbp + 0x38]
cmp	r8, 1
je	0x14001564a
je	0x14001564a
mov	qword ptr [rsp + 0x20], rdi
mov	r9d, 2
mov	r8, rbx
mov	dword ptr [rsp + 0x28], 1
mov	ecx, dword ptr [rbp + 0x40]
mov	edx, 8
call	qword ptr [rip + 0xd0e83]
call	qword ptr [rip + 0xd0e83]
test	eax, eax
je	0x140015638
je	0x140015638
mov	eax, 2
add	rsp, 0x40
pop	rbx
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, dword ptr [rbp + 0x40]
test	eax, eax
jne	0x140015610
jne	0x140015610
movzx	eax, byte ptr [rbx]
mov	word ptr [rdi], ax
mov	eax, 1
add	rsp, 0x40
pop	rbx
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
xor	edx, edx
mov	word ptr [rcx], dx
xor	eax, eax
add	rsp, 0x40
pop	rbx
pop	rdi
pop	rbp
ret	
ret	
nop	
mov	byte ptr [rbp - 3], dl
mov	r9d, 2
lea	r8, [rbp - 4]
mov	dword ptr [rsp + 0x28], 1
mov	qword ptr [rsp + 0x20], rcx
jmp	0x140015597
jmp	0x140015597
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x20], rdi
mov	ecx, dword ptr [rbp + 0x40]
mov	r8, rbx
mov	edx, 8
mov	dword ptr [rsp + 0x28], 1
mov	r9d, 1
call	qword ptr [rip + 0xd0df4]
call	qword ptr [rip + 0xd0df4]
test	eax, eax
jne	0x1400155cd
jne	0x1400155cd
call	0x1400158a8
call	0x1400158a8
mov	dword ptr [rax], 0x2a
mov	eax, 0xffffffff
jmp	0x1400155e7
jmp	0x1400155e7
movzx	eax, byte ptr [rbx]
mov	byte ptr [r9], al
mov	eax, 0xfffffffe
jmp	0x1400155e7
jmp	0x1400155e7
nop	word ptr [rax + rax]
push	rbp
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	rbp, [rsp + 0x40]
xor	eax, eax
mov	rbx, rcx
test	rcx, rcx
mov	word ptr [rbp - 2], ax
lea	rax, [rbp - 2]
mov	rsi, r9
cmove	rbx, rax
mov	rdi, rdx
mov	r12, r8
call	0x140015870
call	0x140015870
mov	r13d, eax
call	0x140015868
call	0x140015868
test	rsi, rsi
mov	dword ptr [rsp + 0x28], r13d
mov	r8, r12
mov	dword ptr [rsp + 0x20], eax
lea	r9, [rip + 0xd0637]
mov	rdx, rdi
mov	rcx, rbx
cmovne	r9, rsi
call	0x140015510
call	0x140015510
cdqe	
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	rbp
ret	
ret	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	rbp, [rsp + 0x40]
lea	rax, [rip + 0xd05f8]
mov	rsi, r9
test	r9, r9
mov	r15, rcx
mov	rbx, rdx
cmove	rsi, rax
mov	rdi, r8
call	0x140015868
call	0x140015868
mov	r13d, eax
call	0x140015870
call	0x140015870
mov	r12d, eax
test	rbx, rbx
je	0x1400157e0
je	0x1400157e0
mov	rdx, qword ptr [rbx]
test	rdx, rdx
je	0x1400157e0
je	0x1400157e0
test	r15, r15
je	0x140015798
je	0x140015798
xor	r14d, r14d
test	rdi, rdi
jne	0x14001574f
jne	0x14001574f
jmp	0x14001577e
jmp	0x14001577e
nop	dword ptr [rax + rax]
mov	rdx, qword ptr [rbx]
cdqe	
add	r15, 2
add	r14, rax
add	rdx, rax
mov	qword ptr [rbx], rdx
cmp	r14, rdi
jae	0x14001577e
jae	0x14001577e
mov	dword ptr [rsp + 0x28], r12d
mov	r8, rdi
mov	r9, rsi
mov	rcx, r15
mov	dword ptr [rsp + 0x20], r13d
sub	r8, r14
call	0x140015510
call	0x140015510
test	eax, eax
jg	0x140015738
jg	0x140015738
cmp	r14, rdi
jae	0x14001577e
jae	0x14001577e
test	eax, eax
jne	0x14001577e
jne	0x14001577e
mov	qword ptr [rbx], 0
mov	rax, r14
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
xor	eax, eax
mov	r15d, r12d
lea	rdi, [rbp - 2]
xor	r14d, r14d
mov	word ptr [rbp - 2], ax
jmp	0x1400157b8
jmp	0x1400157b8
nop	word ptr [rax + rax]
cdqe	
mov	rdx, qword ptr [rbx]
add	r14, rax
mov	dword ptr [rsp + 0x28], r12d
add	rdx, r14
mov	r9, rsi
mov	r8, r15
mov	dword ptr [rsp + 0x20], r13d
mov	rcx, rdi
call	0x140015510
call	0x140015510
test	eax, eax
jg	0x1400157b0
jg	0x1400157b0
jmp	0x14001577e
jmp	0x14001577e
nop	dword ptr [rax]
xor	r14d, r14d
jmp	0x14001577e
jmp	0x14001577e
nop	word ptr cs:[rax + rax]
push	rbp
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
lea	rbp, [rsp + 0x40]
xor	eax, eax
mov	rsi, rcx
mov	rdi, rdx
mov	rbx, r8
mov	word ptr [rbp - 2], ax
call	0x140015870
call	0x140015870
mov	r12d, eax
call	0x140015868
call	0x140015868
test	rbx, rbx
mov	dword ptr [rsp + 0x28], r12d
mov	r8, rdi
lea	rdx, [rip + 0xd04b3]
mov	dword ptr [rsp + 0x20], eax
lea	rcx, [rbp - 2]
cmove	rbx, rdx
mov	rdx, rsi
mov	r9, rbx
call	0x140015510
call	0x140015510
cdqe	
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	qword ptr [rip + 0xd0c6a]
jmp	qword ptr [rip + 0xd0c6a]
nop	
nop	
jmp	qword ptr [rip + 0xd0c6a]
jmp	qword ptr [rip + 0xd0c6a]
nop	
nop	
jmp	qword ptr [rip + 0xd0c6a]
jmp	qword ptr [rip + 0xd0c6a]
nop	
nop	
jmp	qword ptr [rip + 0xd0c6a]
jmp	qword ptr [rip + 0xd0c6a]
nop	
nop	
jmp	qword ptr [rip + 0xd0c72]
jmp	qword ptr [rip + 0xd0c72]
nop	
nop	
jmp	qword ptr [rip + 0xd0c72]
jmp	qword ptr [rip + 0xd0c72]
nop	
nop	
jmp	qword ptr [rip + 0xd0c72]
jmp	qword ptr [rip + 0xd0c72]
nop	
nop	
jmp	qword ptr [rip + 0xd0c72]
jmp	qword ptr [rip + 0xd0c72]
nop	
nop	
jmp	qword ptr [rip + 0xd0c72]
jmp	qword ptr [rip + 0xd0c72]
nop	
nop	
jmp	qword ptr [rip + 0xd0c7a]
jmp	qword ptr [rip + 0xd0c7a]
nop	
nop	
jmp	qword ptr [rip + 0xd0c7a]
jmp	qword ptr [rip + 0xd0c7a]
nop	
nop	
jmp	qword ptr [rip + 0xd0c7a]
jmp	qword ptr [rip + 0xd0c7a]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0c82]
jmp	qword ptr [rip + 0xd0c82]
nop	
nop	
jmp	qword ptr [rip + 0xd0a2a]
jmp	qword ptr [rip + 0xd0a2a]
nop	
nop	
jmp	qword ptr [rip + 0xd0a1a]
jmp	qword ptr [rip + 0xd0a1a]
nop	
nop	
jmp	qword ptr [rip + 0xd0a0a]
jmp	qword ptr [rip + 0xd0a0a]
nop	
nop	
jmp	qword ptr [rip + 0xd09fa]
jmp	qword ptr [rip + 0xd09fa]
nop	
nop	
jmp	qword ptr [rip + 0xd09ea]
jmp	qword ptr [rip + 0xd09ea]
nop	
nop	
jmp	qword ptr [rip + 0xd09da]
jmp	qword ptr [rip + 0xd09da]
nop	
nop	
jmp	qword ptr [rip + 0xd09ca]
jmp	qword ptr [rip + 0xd09ca]
nop	
nop	
jmp	qword ptr [rip + 0xd09ba]
jmp	qword ptr [rip + 0xd09ba]
nop	
nop	
jmp	qword ptr [rip + 0xd09aa]
jmp	qword ptr [rip + 0xd09aa]
nop	
nop	
jmp	qword ptr [rip + 0xd099a]
jmp	qword ptr [rip + 0xd099a]
nop	
nop	
jmp	qword ptr [rip + 0xd098a]
jmp	qword ptr [rip + 0xd098a]
nop	
nop	
jmp	qword ptr [rip + 0xd097a]
jmp	qword ptr [rip + 0xd097a]
nop	
nop	
jmp	qword ptr [rip + 0xd096a]
jmp	qword ptr [rip + 0xd096a]
nop	
nop	
jmp	qword ptr [rip + 0xd095a]
jmp	qword ptr [rip + 0xd095a]
nop	
nop	
jmp	qword ptr [rip + 0xd094a]
jmp	qword ptr [rip + 0xd094a]
nop	
nop	
jmp	qword ptr [rip + 0xd093a]
jmp	qword ptr [rip + 0xd093a]
nop	
nop	
jmp	qword ptr [rip + 0xd092a]
jmp	qword ptr [rip + 0xd092a]
nop	
nop	
jmp	qword ptr [rip + 0xd091a]
jmp	qword ptr [rip + 0xd091a]
nop	
nop	
jmp	qword ptr [rip + 0xd090a]
jmp	qword ptr [rip + 0xd090a]
nop	
nop	
jmp	qword ptr [rip + 0xd08fa]
jmp	qword ptr [rip + 0xd08fa]
nop	
nop	
jmp	qword ptr [rip + 0xd08ea]
jmp	qword ptr [rip + 0xd08ea]
nop	
nop	
jmp	qword ptr [rip + 0xd08da]
jmp	qword ptr [rip + 0xd08da]
nop	
nop	
jmp	qword ptr [rip + 0xd08ca]
jmp	qword ptr [rip + 0xd08ca]
nop	
nop	
jmp	qword ptr [rip + 0xd08ba]
jmp	qword ptr [rip + 0xd08ba]
nop	
nop	
jmp	qword ptr [rip + 0xd08aa]
jmp	qword ptr [rip + 0xd08aa]
nop	
nop	
jmp	qword ptr [rip + 0xd089a]
jmp	qword ptr [rip + 0xd089a]
nop	
nop	
jmp	qword ptr [rip + 0xd088a]
jmp	qword ptr [rip + 0xd088a]
nop	
nop	
jmp	qword ptr [rip + 0xd087a]
jmp	qword ptr [rip + 0xd087a]
nop	
nop	
jmp	qword ptr [rip + 0xd086a]
jmp	qword ptr [rip + 0xd086a]
nop	
nop	
jmp	qword ptr [rip + 0xd085a]
jmp	qword ptr [rip + 0xd085a]
nop	
nop	
jmp	qword ptr [rip + 0xd084a]
jmp	qword ptr [rip + 0xd084a]
nop	
nop	
jmp	qword ptr [rip + 0xd083a]
jmp	qword ptr [rip + 0xd083a]
nop	
nop	
jmp	qword ptr [rip + 0xd082a]
jmp	qword ptr [rip + 0xd082a]
nop	
nop	
jmp	qword ptr [rip + 0xd081a]
jmp	qword ptr [rip + 0xd081a]
nop	
nop	
jmp	qword ptr [rip + 0xd080a]
jmp	qword ptr [rip + 0xd080a]
nop	
nop	
nop	dword ptr [rax + rax]
jmp	0x14000bbb0
jmp	0x14000bbb0
nop	word ptr cs:[rax + rax]
test	rdx, rdx
jne	0x140015bd0
jne	0x140015bd0
xor	eax, eax
ret	
ret	
nop	dword ptr [rax + rax]
jmp	0x14000bb30
jmp	0x14000bb30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [r8]
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rdx]
mov	rsi, rcx
mov	rbx, rdx
mov	rdi, r8
mov	rcx, rdx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
test	al, al
je	0x140015c32
je	0x140015c32
mov	rax, qword ptr [rsp + 0x28]
mov	rax, qword ptr [rax]
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsi]
mov	r9d, 1
mov	rdx, rbx
mov	rcx, rsi
lea	r8, [rsp + 0x28]
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
test	al, al
je	0x140015c55
je	0x140015c55
mov	rdx, qword ptr [rsp + 0x28]
mov	qword ptr [rdi], rdx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
mov	rsi, rcx
mov	rdi, rdx
mov	rbx, r8
test	rcx, rcx
je	0x140015c7d
je	0x140015c7d
call	0x14000c680
call	0x14000c680
mov	qword ptr [rbx], rax
movzx	ecx, byte ptr [rdi]
lea	rbp, [rdi + 1]
cmp	cl, 0xff
jne	0x140015d20
jne	0x140015d20
mov	qword ptr [rbx + 8], rax
movzx	eax, byte ptr [rbp]
lea	r9, [rbp + 1]
xor	r8d, r8d
mov	byte ptr [rbx + 0x28], al
cmp	al, 0xff
je	0x140015cce
je	0x140015cce
xor	ecx, ecx
nop	dword ptr [rax + rax]
movzx	edx, byte ptr [r9]
add	r9, 1
mov	rax, rdx
and	eax, 0x7f
shl	rax, cl
add	ecx, 7
or	r8, rax
test	dl, dl
js	0x140015cb0
js	0x140015cb0
add	r8, r9
mov	qword ptr [rbx + 0x18], r8
movzx	eax, byte ptr [r9]
lea	rdx, [r9 + 1]
xor	r10d, r10d
xor	ecx, ecx
mov	byte ptr [rbx + 0x29], al
nop	word ptr [rax + rax]
movzx	r9d, byte ptr [rdx]
add	rdx, 1
mov	rax, r9
and	eax, 0x7f
shl	rax, cl
add	ecx, 7
or	r10, rax
test	r9b, r9b
js	0x140015ce8
js	0x140015ce8
add	r10, rdx
mov	rax, rdx
mov	qword ptr [rbx + 0x20], r10
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
movzx	edi, cl
mov	rdx, rsi
mov	ecx, edi
call	0x140015e60
call	0x140015e60
mov	r8, rbp
lea	r9, [rbx + 8]
mov	ecx, edi
mov	rdx, rax
call	0x140015f10
call	0x140015f10
mov	rbp, rax
jmp	0x140015c94
jmp	0x140015c94
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	qword ptr [rsp + 0x70], r8
mov	rbx, r9
mov	r12, rcx
mov	rsi, rdx
not	rbx
lea	rbp, [rsp + 0x28]
lea	rdi, [rsp + 0x70]
add	rbx, qword ptr [rcx + 0x18]
nop	dword ptr [rax]
xor	r9d, r9d
xor	ecx, ecx
nop	dword ptr [rax]
movzx	edx, byte ptr [rbx]
add	rbx, 1
mov	rax, rdx
and	eax, 0x7f
shl	rax, cl
add	ecx, 7
or	r9, rax
test	dl, dl
js	0x140015d88
js	0x140015d88
test	r9, r9
je	0x140015e48
je	0x140015e48
movzx	ecx, byte ptr [r12 + 0x28]
cmp	cl, 0xff
je	0x140015e18
je	0x140015e18
mov	eax, ecx
and	eax, 7
cmp	al, 2
je	0x140015e08
je	0x140015e08
jbe	0x140015e38
jbe	0x140015e38
lea	r8, [r9*4]
neg	r8
cmp	al, 3
jne	0x140015e20
jne	0x140015e20
mov	rdx, qword ptr [r12 + 0x10]
add	r8, qword ptr [r12 + 0x18]
mov	r9, rbp
call	0x140015f10
call	0x140015f10
mov	rcx, qword ptr [rsp + 0x28]
mov	r8, rdi
mov	rdx, rsi
call	0x140015c00
call	0x140015c00
test	al, al
je	0x140015d80
je	0x140015d80
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
lea	r8, [r9 + r9]
neg	r8
jmp	0x140015dd0
jmp	0x140015dd0
nop	dword ptr [rax]
xor	r8d, r8d
jmp	0x140015dd0
jmp	0x140015dd0
nop	dword ptr [rax]
cmp	al, 4
jne	0x140015e3c
jne	0x140015e3c
lea	r8, [r9*8]
neg	r8
jmp	0x140015dd0
jmp	0x140015dd0
nop	dword ptr [rax]
test	al, al
je	0x140015e24
je	0x140015e24
call	0x1400158e8
call	0x1400158e8
nop	dword ptr [rax]
xor	eax, eax
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	eax, ecx
cmp	cl, 0xff
je	0x140015ea2
je	0x140015ea2
and	eax, 0x70
cmp	al, 0x30
je	0x140015ec0
je	0x140015ec0
ja	0x140015e88
ja	0x140015e88
cmp	al, 0x20
jne	0x140015ea0
jne	0x140015ea0
mov	rcx, rdx
add	rsp, 0x28
jmp	0x14000c6d0
jmp	0x14000c6d0
nop	dword ptr [rax]
cmp	al, 0x40
jne	0x140015eb0
jne	0x140015eb0
mov	rcx, rdx
add	rsp, 0x28
jmp	0x14000c680
jmp	0x14000c680
nop	dword ptr [rax + rax]
ja	0x140015eb4
ja	0x140015eb4
xor	eax, eax
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax]
cmp	al, 0x50
je	0x140015ea2
je	0x140015ea2
call	0x1400158e8
call	0x1400158e8
nop	dword ptr [rax]
mov	rcx, rdx
add	rsp, 0x28
jmp	0x14000c6c0
jmp	0x14000c6c0
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
cmp	ecx, 1
ja	0x140015f06
ja	0x140015f06
lock sub	dword ptr [rdx - 0x60], 1
jne	0x140015f00
jne	0x140015f00
mov	rax, qword ptr [rdx - 0x48]
lea	rbx, [rdx + 0x40]
test	rax, rax
je	0x140015ef3
je	0x140015ef3
mov	rcx, rbx
call	rax
call	rax
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b3020
jmp	0x1400b3020
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	rcx, qword ptr [rdx - 0x38]
call	0x140016070
call	0x140016070
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	r10d, ecx
mov	r11, rdx
cmp	cl, 0x50
je	0x140015f78
je	0x140015f78
mov	eax, ecx
and	eax, 0xf
cmp	al, 0xc
ja	0x14001605f
ja	0x14001605f
lea	rdx, [rip + 0xa4beb]
movzx	eax, al
movsxd	rax, dword ptr [rdx + rax*4]
add	rax, rdx
jmp	rax
jmp	rax
nop	dword ptr [rax]
mov	rdx, qword ptr [r8]
lea	rax, [r8 + 8]
test	rdx, rdx
je	0x140015f69
je	0x140015f69
mov	ecx, r10d
and	ecx, 0x70
cmp	cl, 0x10
cmove	r11, r8
add	rdx, r11
test	r10b, r10b
js	0x140015f98
js	0x140015f98
mov	qword ptr [r9], rdx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rax, [r8 + 7]
and	rax, 0xfffffffffffffff8
mov	rdx, qword ptr [rax]
add	rax, 8
mov	qword ptr [r9], rdx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rdx, qword ptr [rdx]
mov	qword ptr [r9], rdx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
movzx	edx, word ptr [r8]
lea	rax, [r8 + 2]
jmp	0x140015f4f
jmp	0x140015f4f
nop	word ptr [rax + rax]
mov	edx, dword ptr [r8]
lea	rax, [r8 + 4]
jmp	0x140015f4f
jmp	0x140015f4f
nop	dword ptr [rax]
movsxd	rdx, dword ptr [r8]
lea	rax, [r8 + 4]
jmp	0x140015f4f
jmp	0x140015f4f
nop	dword ptr [rax]
movsx	rdx, word ptr [r8]
lea	rax, [r8 + 2]
jmp	0x140015f4f
jmp	0x140015f4f
nop	dword ptr [rax]
mov	rax, r8
xor	edx, edx
xor	ecx, ecx
nop	
movzx	esi, byte ptr [rax]
add	rax, 1
mov	rbx, rsi
and	ebx, 0x7f
shl	rbx, cl
add	ecx, 7
or	rdx, rbx
test	sil, sil
js	0x140015ff0
js	0x140015ff0
jmp	0x140015f4f
jmp	0x140015f4f
mov	rax, r8
xor	edx, edx
xor	ecx, ecx
nop	word ptr [rax + rax]
movzx	esi, byte ptr [rax]
add	rax, 1
mov	rbx, rsi
and	ebx, 0x7f
shl	rbx, cl
add	ecx, 7
or	rdx, rbx
test	sil, sil
js	0x140016020
js	0x140016020
cmp	ecx, 0x3f
ja	0x140015f4f
ja	0x140015f4f
and	esi, 0x40
je	0x140015f4f
je	0x140015f4f
mov	rbx, 0xffffffffffffffff
shl	rbx, cl
or	rdx, rbx
jmp	0x140015f54
jmp	0x140015f54
call	0x1400158e8
call	0x1400158e8
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
call	rcx
call	rcx
call	0x1400158e8
call	0x1400158e8
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400158e8
call	0x1400158e8
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
call	rcx
call	rcx
call	0x1400afa30
call	0x1400afa30
nop	
nop	
nop	
nop	
nop	
mov	edx, 8
jmp	0x1400b2bf0
jmp	0x1400b2bf0
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0xae8b4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400ac6a0
call	0x1400ac6a0
mov	edx, 0x10
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2bf0
jmp	0x1400b2bf0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0xae889]
mov	qword ptr [rcx], rax
jmp	0x1400ac6a0
jmp	0x1400ac6a0
nop	
mov	edx, 8
jmp	0x1400b2bf0
jmp	0x1400b2bf0
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0xae8e4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400160f0
call	0x1400160f0
mov	edx, 0x18
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2bf0
jmp	0x1400b2bf0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0xae8b9]
mov	qword ptr [rcx], rax
jmp	0x1400160f0
jmp	0x1400160f0
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0xae904]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400160f0
call	0x1400160f0
mov	edx, 0x28
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2bf0
jmp	0x1400b2bf0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0xae8d9]
mov	qword ptr [rcx], rax
jmp	0x1400160f0
jmp	0x1400160f0
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xc8
mov	qword ptr [rsp + 0x70], 0
mov	esi, edx
mov	r15, r9
mov	dword ptr [rsp + 0x6c], 0
cmp	ecx, 1
jne	0x140016270
jne	0x140016270
movabs	rax, 0xb8b1aabcbcd4d500
add	rax, r8
cmp	rax, 1
mov	qword ptr [rsp + 0x30], rax
setbe	byte ptr [rsp + 0x41]
cmp	edx, 6
movzx	edi, byte ptr [rsp + 0x41]
sete	al
and	al, dil
mov	byte ptr [rsp + 0x42], al
je	0x140016290
je	0x140016290
mov	rax, qword ptr [r9 - 0x18]
mov	rbx, qword ptr [r9 - 0x10]
mov	edi, dword ptr [r9 - 0x24]
mov	qword ptr [rsp + 0x38], rax
test	rbx, rbx
je	0x140016401
je	0x140016401
movsxd	rsi, edi
test	edi, edi
js	0x14001671e
js	0x14001671e
mov	rcx, qword ptr [rsp + 0x130]
mov	r8, r15
xor	edx, edx
call	0x14000c610
call	0x14000c610
mov	rcx, qword ptr [rsp + 0x130]
mov	r8, rsi
mov	edx, 1
call	0x14000c610
call	0x14000c610
mov	rcx, qword ptr [rsp + 0x130]
mov	rdx, rbx
call	0x14000c660
call	0x14000c660
mov	eax, 7
jmp	0x140016275
jmp	0x140016275
nop	dword ptr [rax + rax]
mov	eax, 3
add	rsp, 0xc8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x130]
call	0x14000c670
call	0x14000c670
mov	qword ptr [rsp + 0x38], rax
mov	rdx, rax
test	rax, rax
je	0x14001658b
je	0x14001658b
lea	rax, [rsp + 0x90]
mov	rcx, qword ptr [rsp + 0x130]
mov	r8, rax
mov	qword ptr [rsp + 0x50], rax
call	0x140015c60
call	0x140015c60
mov	rdx, qword ptr [rsp + 0x130]
mov	r13, rax
movzx	eax, byte ptr [rsp + 0xb8]
mov	ecx, eax
mov	byte ptr [rsp + 0x43], al
mov	dword ptr [rsp + 0x44], eax
call	0x140015e60
call	0x140015e60
mov	rcx, qword ptr [rsp + 0x130]
lea	rdx, [rsp + 0x6c]
mov	qword ptr [rsp + 0x48], rax
mov	qword ptr [rsp + 0xa0], rax
call	0x14000c650
call	0x14000c650
cmp	dword ptr [rsp + 0x6c], 1
mov	r12, qword ptr [rsp + 0xb0]
sbb	rax, 0
mov	rdi, rax
cmp	r13, r12
jae	0x1400163e9
jae	0x1400163e9
lea	rax, [rsp + 0x78]
mov	r14, qword ptr [rsp + 0x90]
movzx	ebx, byte ptr [rsp + 0xb9]
lea	rbp, [rsp + 0x88]
mov	qword ptr [rsp + 0x20], rax
lea	rax, [rsp + 0x80]
mov	qword ptr [rsp + 0x28], rax
nop	dword ptr [rax + rax]
xor	edx, edx
mov	ecx, ebx
call	0x140015e60
call	0x140015e60
mov	r9, qword ptr [rsp + 0x20]
mov	r8, r13
mov	ecx, ebx
mov	rdx, rax
call	0x140015f10
call	0x140015f10
xor	edx, edx
mov	ecx, ebx
mov	r13, rax
call	0x140015e60
call	0x140015e60
mov	r9, qword ptr [rsp + 0x28]
mov	r8, r13
mov	ecx, ebx
mov	rdx, rax
call	0x140015f10
call	0x140015f10
xor	edx, edx
mov	ecx, ebx
mov	r13, rax
call	0x140015e60
call	0x140015e60
mov	r8, r13
mov	ecx, ebx
mov	r9, rbp
mov	rdx, rax
call	0x140015f10
call	0x140015f10
xor	r10d, r10d
xor	ecx, ecx
mov	r13, rax
nop	dword ptr [rax]
movzx	edx, byte ptr [r13]
add	r13, 1
mov	rax, rdx
and	eax, 0x7f
shl	rax, cl
add	ecx, 7
or	r10, rax
test	dl, dl
js	0x1400163c0
js	0x1400163c0
mov	rax, qword ptr [rsp + 0x78]
add	rax, r14
cmp	rdi, rax
jae	0x140016410
jae	0x140016410
test	sil, 1
jne	0x140016430
jne	0x140016430
and	esi, 8
je	0x1400163f9
je	0x1400163f9
call	0x1400afa30
call	0x1400afa30
cmp	qword ptr [rsp + 0x30], 1
ja	0x1400163f4
ja	0x1400163f4
mov	rcx, r15
call	0x1400b2e00
call	0x1400b2e00
nop	dword ptr [rax]
add	rax, qword ptr [rsp + 0x80]
cmp	rdi, rax
jb	0x14001644d
jb	0x14001644d
cmp	r13, r12
jb	0x140016360
jb	0x140016360
jmp	0x1400163e9
jmp	0x1400163e9
nop	dword ptr [rax + rax]
xor	edi, edi
xor	ebx, ebx
xor	r13d, r13d
cmp	qword ptr [rsp + 0x30], 1
jbe	0x140016595
jbe	0x140016595
mov	eax, 6
jmp	0x140016275
jmp	0x140016275
mov	rbx, qword ptr [rsp + 0x88]
test	rbx, rbx
je	0x14001658b
je	0x14001658b
add	rbx, qword ptr [rsp + 0x98]
test	r10, r10
je	0x140016581
je	0x140016581
lea	r13, [r12 + r10 - 1]
test	rbx, rbx
je	0x14001658b
je	0x14001658b
mov	r11d, esi
lea	r14, [rip + 0xa9cf9]
and	r11d, 8
jne	0x1400164a0
jne	0x1400164a0
cmp	qword ptr [rsp + 0x30], 1
lea	r14, [rip + 0xa9d16]
jbe	0x1400167b8
jbe	0x1400167b8
lea	rax, [rsp + 0x70]
mov	qword ptr [rsp + 0x28], rbx
movzx	r12d, byte ptr [rsp + 0x42]
mov	qword ptr [rsp + 0x58], rax
movzx	eax, byte ptr [rsp + 0x43]
mov	dword ptr [rsp + 0x118], esi
mov	esi, r11d
and	eax, 7
mov	qword ptr [rsp + 0x128], r15
mov	r15, r13
mov	byte ptr [rsp + 0x20], al
nop	word ptr cs:[rax + rax]
mov	rbx, r15
xor	edi, edi
xor	ecx, ecx
nop	word ptr [rax + rax]
movzx	edx, byte ptr [rbx]
add	rbx, 1
mov	rax, rdx
and	eax, 0x7f
shl	rax, cl
add	ecx, 7
or	rdi, rax
test	dl, dl
js	0x1400164f0
js	0x1400164f0
cmp	ecx, 0x3f
ja	0x140016522
ja	0x140016522
and	edx, 0x40
je	0x140016522
je	0x140016522
mov	eax, 1
shl	rax, cl
neg	rax
or	rdi, rax
mov	rdx, rbx
xor	r13d, r13d
xor	ecx, ecx
nop	word ptr [rax + rax]
movzx	r8d, byte ptr [rdx]
add	rdx, 1
mov	rax, r8
and	eax, 0x7f
shl	rax, cl
add	ecx, 7
or	r13, rax
test	r8b, r8b
js	0x140016530
js	0x140016530
cmp	ecx, 0x3f
ja	0x1400165c0
ja	0x1400165c0
and	r8d, 0x40
je	0x1400165c0
je	0x1400165c0
mov	eax, 1
shl	rax, cl
neg	rax
or	r13, rax
test	rdi, rdi
jne	0x140016600
jne	0x140016600
mov	r12d, 1
nop	dword ptr [rax]
lea	r15, [rbx + r13]
jmp	0x1400164e0
jmp	0x1400164e0
test	rbx, rbx
je	0x14001658b
je	0x14001658b
and	esi, 1
je	0x1400165f3
je	0x1400165f3
mov	eax, 8
jmp	0x140016275
jmp	0x140016275
mov	rax, qword ptr [rsp + 0x38]
mov	dword ptr [r15 - 0x24], edi
mov	qword ptr [r15 - 0x20], r13
mov	qword ptr [r15 - 0x18], rax
mov	rax, qword ptr [rsp + 0x70]
mov	qword ptr [r15 - 0x10], rbx
mov	qword ptr [r15 - 8], rax
jmp	0x140016443
jmp	0x140016443
nop	dword ptr [rax + rax]
test	rdi, rdi
jne	0x140016600
jne	0x140016600
mov	r12d, 1
test	r13, r13
jne	0x140016578
jne	0x140016578
mov	byte ptr [rsp + 0x42], r12b
mov	rbx, qword ptr [rsp + 0x28]
mov	esi, dword ptr [rsp + 0x118]
mov	r15, qword ptr [rsp + 0x128]
test	r12b, r12b
je	0x14001658b
je	0x14001658b
and	esi, 1
jne	0x14001658b
jne	0x14001658b
xor	esi, esi
jmp	0x14001622a
jmp	0x14001622a
nop	word ptr [rax + rax]
test	rdi, rdi
jg	0x140016699
jg	0x140016699
test	esi, esi
sete	al
test	byte ptr [rsp + 0x41], al
je	0x14001661d
je	0x14001661d
test	r14, r14
jne	0x140016790
jne	0x140016790
mov	rdx, rdi
xor	r9d, r9d
xor	ecx, ecx
not	rdx
add	rdx, qword ptr [rsp + 0xa8]
movzx	r8d, byte ptr [rdx]
add	rdx, 1
mov	rax, r8
and	eax, 0x7f
shl	rax, cl
add	ecx, 7
or	r9, rax
test	r8b, r8b
js	0x140016630
js	0x140016630
test	r9, r9
jne	0x1400165cb
jne	0x1400165cb
mov	r11d, esi
mov	esi, dword ptr [rsp + 0x118]
mov	r13, r15
mov	rbx, qword ptr [rsp + 0x28]
mov	r15, qword ptr [rsp + 0x128]
and	esi, 1
jne	0x140016437
jne	0x140016437
cmp	qword ptr [rsp + 0x30], 1
ja	0x140016689
ja	0x140016689
test	r11d, r11d
je	0x14001621f
je	0x14001621f
test	edi, edi
js	0x1400167d7
js	0x1400167d7
movsxd	rsi, edi
jmp	0x14001622a
jmp	0x14001622a
cmp	byte ptr [rsp + 0x43], 0xff
je	0x140016719
je	0x140016719
cmp	byte ptr [rsp + 0x20], 2
je	0x140016710
je	0x140016710
jbe	0x14001677e
jbe	0x14001677e
lea	r8, [rdi*4]
neg	r8
cmp	byte ptr [rsp + 0x20], 3
jne	0x140016767
jne	0x140016767
mov	ecx, dword ptr [rsp + 0x44]
mov	rdx, qword ptr [rsp + 0x48]
mov	r9, rbp
add	r8, qword ptr [rsp + 0xa8]
call	0x140015f10
call	0x140015f10
mov	rcx, qword ptr [rsp + 0x88]
test	rcx, rcx
je	0x140016655
je	0x140016655
test	r14, r14
je	0x1400165cb
je	0x1400165cb
mov	r8, qword ptr [rsp + 0x58]
mov	rdx, r14
call	0x140015c00
call	0x140015c00
test	al, al
je	0x1400165cb
je	0x1400165cb
jmp	0x140016655
jmp	0x140016655
lea	r8, [rdi + rdi]
neg	r8
jmp	0x1400166c3
jmp	0x1400166c3
xor	r8d, r8d
jmp	0x1400166c3
jmp	0x1400166c3
mov	rdx, qword ptr [rsp + 0x38]
mov	rcx, qword ptr [rsp + 0x130]
lea	r8, [rsp + 0x90]
call	0x140015c60
call	0x140015c60
movzx	edi, byte ptr [rsp + 0xb8]
mov	rdx, qword ptr [rsp + 0x130]
mov	ecx, edi
call	0x140015e60
call	0x140015e60
mov	rdx, qword ptr [rsp + 0x130]
mov	ecx, edi
call	0x140015e60
call	0x140015e60
mov	qword ptr [r15 - 0x10], rax
jmp	0x14001622a
jmp	0x14001622a
cmp	byte ptr [rsp + 0x20], 4
jne	0x140016785
jne	0x140016785
lea	r8, [rdi*8]
neg	r8
jmp	0x1400166c3
jmp	0x1400166c3
cmp	byte ptr [rsp + 0x20], 0
je	0x14001676e
je	0x14001676e
call	0x1400158e8
call	0x1400158e8
nop	word ptr [rax + rax]
mov	r8, qword ptr [rsp + 0x70]
mov	rcx, qword ptr [rsp + 0x50]
mov	r9, rdi
mov	rdx, r14
call	0x140015d50
call	0x140015d50
test	al, al
jne	0x1400165cb
jne	0x1400165cb
jmp	0x140016655
jmp	0x140016655
nop	word ptr [rax + rax]
lea	rax, [r15 + 0x40]
test	byte ptr [r15], 1
je	0x1400167c6
je	0x1400167c6
mov	rax, qword ptr [r15 - 0x50]
mov	qword ptr [rsp + 0x70], rax
mov	r14, qword ptr [rax - 0x90]
jmp	0x1400164a0
jmp	0x1400164a0
call	0x1400ac6b0
call	0x1400ac6b0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x1400163f4
jmp	0x1400163f4
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
movzx	eax, byte ptr [rip + 0x9ec43]
test	al, al
je	0x140016818
je	0x140016818
lea	rbx, [rip + 0xa1758]
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
lea	rsi, [rip + 0x9ec21]
mov	rcx, rsi
call	0x1400b3190
call	0x1400b3190
test	eax, eax
je	0x140016801
je	0x140016801
mov	rax, qword ptr [rip + 0xa7dfe]
lea	rbx, [rip + 0xa1727]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140016860
jne	0x140016860
lea	rcx, [rip + 0x9cf3a]
call	0x140001440
call	0x140001440
mov	rcx, rsi
call	0x1400b33d0
call	0x1400b33d0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	0x14000c4d0
call	0x14000c4d0
jmp	0x14001683f
jmp	0x14001683f
mov	rbx, rax
mov	rcx, rsi
call	0x1400b3090
call	0x1400b3090
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0xae244]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400984e0
call	0x1400984e0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0xae219]
mov	qword ptr [rcx], rax
jmp	0x1400984e0
jmp	0x1400984e0
nop	
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, qword ptr [rip + 0xa7d23]
mov	r9d, dword ptr [rsi]
mov	rbx, rcx
test	r9d, r9d
jne	0x1400169d0
jne	0x1400169d0
mov	rdx, qword ptr [rip + 0x9ee65]
mov	rsi, qword ptr [rcx - 0x10]
lea	r10, [rcx - 0x10]
test	rdx, rdx
je	0x140016a18
je	0x140016a18
lea	r8, [r10 + rsi]
cmp	r8, rdx
jb	0x1400169fb
jb	0x1400169fb
mov	rax, qword ptr [rdx + 8]
je	0x140016a40
je	0x140016a40
lea	r11, [rip + 0x9ee36]
test	rax, rax
jne	0x140016973
jne	0x140016973
jmp	0x14001698b
jmp	0x14001698b
nop	dword ptr [rax]
mov	rcx, qword ptr [rax + 8]
lea	r11, [rdx + 8]
mov	rdx, rax
test	rcx, rcx
je	0x140016988
je	0x140016988
mov	rax, rcx
cmp	rax, r8
jb	0x140016960
jb	0x140016960
cmp	r8, rax
jne	0x140016988
jne	0x140016988
mov	rax, qword ptr [r8 + 8]
add	rsi, qword ptr [r8]
mov	qword ptr [rdx + 8], rax
mov	rdx, qword ptr [r11]
mov	rax, qword ptr [rdx]
lea	rcx, [rdx + rax]
cmp	r10, rcx
je	0x140016a30
je	0x140016a30
mov	rax, qword ptr [rdx + 8]
mov	qword ptr [rbx - 0x10], rsi
mov	qword ptr [rbx - 8], rax
mov	rax, qword ptr [r11]
mov	qword ptr [rax + 8], r10
test	r9d, r9d
je	0x140016a0b
je	0x140016a0b
lea	rcx, [rip + 0x9eda6]
call	0x14000c550
call	0x14000c550
test	eax, eax
je	0x140016a0b
je	0x140016a0b
call	0x140018750
call	0x140018750
nop	dword ptr [rax + rax]
lea	rcx, [rip + 0x9ed89]
call	0x14000c4f0
call	0x14000c4f0
test	eax, eax
jne	0x140016a54
jne	0x140016a54
mov	rdx, qword ptr [rip + 0x9eda1]
mov	r9d, dword ptr [rsi]
lea	r10, [rbx - 0x10]
mov	rsi, qword ptr [rbx - 0x10]
test	rdx, rdx
jne	0x140016934
jne	0x140016934
mov	qword ptr [rbx - 8], rdx
mov	qword ptr [rip + 0x9ed82], r10
test	r9d, r9d
jne	0x1400169b3
jne	0x1400169b3
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
mov	qword ptr [rcx - 8], 0
mov	qword ptr [rip + 0x9ed61], r10
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
add	rax, rsi
mov	qword ptr [rdx], rax
jmp	0x140016a06
jmp	0x140016a06
nop	dword ptr [rax + rax]
add	rsi, qword ptr [rdx]
mov	qword ptr [rbx - 8], rax
mov	qword ptr [rbx - 0x10], rsi
mov	qword ptr [rip + 0x9ed36], r10
jmp	0x140016a06
jmp	0x140016a06
call	0x140018720
call	0x140018720
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, qword ptr [rip + 0xa7bc3]
mov	rbx, rcx
mov	ecx, dword ptr [rsi]
test	ecx, ecx
jne	0x140016b20
jne	0x140016b20
lea	rax, [rbx + 0x10]
mov	edx, 0x10
mov	rbx, qword ptr [rip + 0x9ecfe]
cmp	rax, rdx
cmovb	rax, rdx
add	rax, 0xf
and	rax, 0xfffffffffffffff0
test	rbx, rbx
je	0x140016afa
je	0x140016afa
lea	rdx, [rip + 0x9ece3]
jmp	0x140016ac1
jmp	0x140016ac1
nop	word ptr [rax + rax]
lea	rdx, [rbx + 8]
mov	rbx, qword ptr [rbx + 8]
test	rbx, rbx
je	0x140016b5a
je	0x140016b5a
cmp	qword ptr [rbx], rax
jb	0x140016ab0
jb	0x140016ab0
mov	r8, qword ptr [rbx]
mov	r10, qword ptr [rbx + 8]
mov	r9, r8
sub	r9, rax
cmp	r9, 0xf
ja	0x140016b08
ja	0x140016b08
mov	qword ptr [rbx], r8
mov	r8, r10
mov	qword ptr [rdx], r8
add	rbx, 0x10
test	ecx, ecx
je	0x140016afa
je	0x140016afa
lea	rcx, [rip + 0x9ec6f]
call	0x14000c550
call	0x14000c550
test	eax, eax
jne	0x140016b5e
jne	0x140016b5e
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
lea	r8, [rbx + rax]
mov	qword ptr [r8 + 8], r10
mov	rbx, qword ptr [rdx]
mov	qword ptr [r8], r9
mov	qword ptr [rbx], rax
jmp	0x140016adf
jmp	0x140016adf
nop	dword ptr [rax + rax]
lea	rcx, [rip + 0x9ec39]
call	0x14000c4f0
call	0x14000c4f0
test	eax, eax
jne	0x140016b63
jne	0x140016b63
lea	rax, [rbx + 0x10]
mov	edx, 0x10
mov	rbx, qword ptr [rip + 0x9ec48]
mov	ecx, dword ptr [rsi]
cmp	rax, rdx
cmovb	rax, rdx
add	rax, 0xf
and	rax, 0xfffffffffffffff0
test	rbx, rbx
jne	0x140016a9e
jne	0x140016a9e
xor	ebx, ebx
jmp	0x140016ae6
jmp	0x140016ae6
call	0x140018750
call	0x140018750
call	0x140018720
call	0x140018720
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
and	ecx, 0x7d
cmp	ecx, 0x7c
ja	0x140016b90
ja	0x140016b90
lea	rdx, [rip + 0xa4165]
movsxd	rax, dword ptr [rdx + rcx*4]
add	rax, rdx
jmp	rax
jmp	rax
nop	dword ptr [rax + rax]
xor	eax, eax
ret	
ret	
nop	dword ptr [rax + rax]
lea	rax, [rip + 0xa4119]
ret	
ret	
lea	rax, [rip + 0xa4132]
ret	
ret	
nop	dword ptr [rax + rax]
lea	rax, [rip + 0xa4113]
ret	
ret	
nop	dword ptr [rax + rax]
lea	rax, [rip + 0xa40f3]
ret	
ret	
nop	dword ptr [rax + rax]
lea	rax, [rip + 0xa40fb]
ret	
ret	
lea	rax, [rip + 0xa40d6]
ret	
ret	
lea	rax, [rip + 0xa40d9]
ret	
ret	
lea	rax, [rip + 0xa40ed]
ret	
ret	
lea	rax, [rip + 0xa40cc]
ret	
ret	
lea	rax, [rip + 0xa40e1]
ret	
ret	
lea	rax, [rip + 0xa40bf]
ret	
ret	
lea	rax, [rip + 0xa40be]
ret	
ret	
lea	rax, [rip + 0xa40be]
ret	
ret	
lea	rax, [rip + 0xa409f]
ret	
ret	
lea	rax, [rip + 0xa408b]
ret	
ret	
nop	dword ptr [rax + rax]
lea	rax, [rip + 0xa4079]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0xa79e4]
lea	rbx, [rip + 0x9fb4d]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140016c70
jne	0x140016c70
mov	qword ptr [rip + 0x9fb90], rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	0x14000c190
call	0x14000c190
mov	qword ptr [rip + 0x9fb71], rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0xa7994]
lea	rbx, [rip + 0x9e7dd]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140016cc0
jne	0x140016cc0
mov	qword ptr [rip + 0x9fb50], rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	0x14000c4d0
call	0x14000c4d0
mov	qword ptr [rip + 0x9fb31], rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0xa7945]
mov	eax, dword ptr [rax]
mov	rcx, qword ptr [rcx]
test	eax, eax
jne	0x140016d00
jne	0x140016d00
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax]
call	0x14000c550
call	0x14000c550
test	eax, eax
je	0x140016cf4
je	0x140016cf4
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip + 0x1666]
lea	rdx, [rip + 0xa961f]
mov	rcx, rax
lea	rax, [rip + 0xae125]
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
add	rdx, 1
mov	rcx, rax
jne	0x140016d41
jne	0x140016d41
call	0x1400b2e40
call	0x1400b2e40
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
add	rcx, 0x50
jmp	0x1400784e0
jmp	0x1400784e0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
add	rcx, 0x50
jmp	0x140078510
jmp	0x140078510
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x140080010
jmp	0x140080010
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rdi, rdx
mov	esi, r8d
mov	rbp, r9
call	0x140081b10
call	0x140081b10
lea	r12, [rbx + 0x50]
mov	r8d, esi
mov	rdx, rdi
lea	rax, [rip + 0xade14]
mov	rcx, r12
mov	qword ptr [rbx], rax
call	0x1400787c0
call	0x1400787c0
mov	rcx, r12
call	0x14001d8f0
call	0x14001d8f0
test	al, al
jne	0x140016dd0
jne	0x140016dd0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
mov	dword ptr [rbx + 0x60], esi
mov	rcx, rbx
mov	qword ptr [rbx + 0x78], rbp
call	0x14007fda0
call	0x14007fda0
movq	xmm0, qword ptr [rbx + 0x70]
xor	eax, eax
mov	qword ptr [rbx + 0x30], 0
mov	word ptr [rbx + 0x81], ax
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
movups	xmmword ptr [rbx + 8], xmm1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140081cb0
call	0x140081cb0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	edi, edx
mov	esi, r8d
mov	rbp, r9
call	0x140081b10
call	0x140081b10
lea	r12, [rbx + 0x50]
mov	r8d, esi
mov	edx, edi
lea	rax, [rip + 0xadd66]
mov	rcx, r12
mov	qword ptr [rbx], rax
call	0x140078830
call	0x140078830
mov	rcx, r12
call	0x14001d8f0
call	0x14001d8f0
test	al, al
jne	0x140016e80
jne	0x140016e80
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	dword ptr [rbx + 0x60], esi
mov	rcx, rbx
mov	qword ptr [rbx + 0x78], rbp
call	0x14007fda0
call	0x14007fda0
movq	xmm0, qword ptr [rbx + 0x70]
xor	eax, eax
mov	qword ptr [rbx + 0x30], 0
mov	word ptr [rbx + 0x81], ax
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
movups	xmmword ptr [rbx + 8], xmm1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140081cb0
call	0x140081cb0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x140081b10
call	0x140081b10
lea	rax, [rip + 0xadccc]
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rdi, rdx
mov	esi, r8d
mov	rbp, r9
call	0x140081b10
call	0x140081b10
lea	r12, [rbx + 0x50]
mov	r8d, esi
mov	rdx, rdi
lea	rax, [rip + 0xadc94]
mov	rcx, r12
mov	qword ptr [rbx], rax
call	0x1400787c0
call	0x1400787c0
mov	rcx, r12
call	0x14001d8f0
call	0x14001d8f0
test	al, al
jne	0x140016f50
jne	0x140016f50
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
mov	dword ptr [rbx + 0x60], esi
mov	rcx, rbx
mov	qword ptr [rbx + 0x78], rbp
call	0x14007fda0
call	0x14007fda0
movq	xmm0, qword ptr [rbx + 0x70]
xor	eax, eax
mov	qword ptr [rbx + 0x30], 0
mov	word ptr [rbx + 0x81], ax
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
movups	xmmword ptr [rbx + 8], xmm1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140081cb0
call	0x140081cb0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	edi, edx
mov	esi, r8d
mov	rbp, r9
call	0x140081b10
call	0x140081b10
lea	r12, [rbx + 0x50]
mov	r8d, esi
mov	edx, edi
lea	rax, [rip + 0xadbe6]
mov	rcx, r12
mov	qword ptr [rbx], rax
call	0x140078830
call	0x140078830
mov	rcx, r12
call	0x14001d8f0
call	0x14001d8f0
test	al, al
jne	0x140017000
jne	0x140017000
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	dword ptr [rbx + 0x60], esi
mov	rcx, rbx
mov	qword ptr [rbx + 0x78], rbp
call	0x14007fda0
call	0x14007fda0
movq	xmm0, qword ptr [rbx + 0x70]
xor	eax, eax
mov	qword ptr [rbx + 0x30], 0
mov	word ptr [rbx + 0x81], ax
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
movups	xmmword ptr [rbx + 8], xmm1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140081cb0
call	0x140081cb0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x140081b10
call	0x140081b10
lea	rax, [rip + 0xadb4c]
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0xa7e04]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x50]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xa7e65]
lea	rcx, [rbx + 0x38]
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bf30
call	0x14009bf30
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14001709b
jmp	0x14001709b
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0xa7da4]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x50]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xa7e05]
lea	rcx, [rbx + 0x38]
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bf30
jmp	0x14009bf30
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400170fb
jmp	0x1400170fb
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0xa7d54]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x50]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xa7db5]
lea	rcx, [rbx + 0x38]
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bf30
jmp	0x14009bf30
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14001714b
jmp	0x14001714b
nop	
add	rcx, 0x50
jmp	0x1400784e0
jmp	0x1400784e0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
add	rcx, 0x50
jmp	0x140078510
jmp	0x140078510
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x1400825c0
jmp	0x1400825c0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rdi, rdx
mov	esi, r8d
mov	rbp, r9
call	0x1400840e0
call	0x1400840e0
lea	r12, [rbx + 0x50]
mov	r8d, esi
mov	rdx, rdi
lea	rax, [rip + 0xada64]
mov	rcx, r12
mov	qword ptr [rbx], rax
call	0x1400787c0
call	0x1400787c0
mov	rcx, r12
call	0x14001d8f0
call	0x14001d8f0
test	al, al
jne	0x140017200
jne	0x140017200
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
mov	dword ptr [rbx + 0x60], esi
mov	rcx, rbx
mov	qword ptr [rbx + 0x78], rbp
call	0x140082310
call	0x140082310
movq	xmm0, qword ptr [rbx + 0x70]
xor	eax, eax
mov	qword ptr [rbx + 0x30], 0
mov	word ptr [rbx + 0x81], ax
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
movups	xmmword ptr [rbx + 8], xmm1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140084290
call	0x140084290
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	edi, edx
mov	esi, r8d
mov	rbp, r9
call	0x1400840e0
call	0x1400840e0
lea	r12, [rbx + 0x50]
mov	r8d, esi
mov	edx, edi
lea	rax, [rip + 0xad9b6]
mov	rcx, r12
mov	qword ptr [rbx], rax
call	0x140078830
call	0x140078830
mov	rcx, r12
call	0x14001d8f0
call	0x14001d8f0
test	al, al
jne	0x1400172b0
jne	0x1400172b0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	dword ptr [rbx + 0x60], esi
mov	rcx, rbx
mov	qword ptr [rbx + 0x78], rbp
call	0x140082310
call	0x140082310
movq	xmm0, qword ptr [rbx + 0x70]
xor	eax, eax
mov	qword ptr [rbx + 0x30], 0
mov	word ptr [rbx + 0x81], ax
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
movups	xmmword ptr [rbx + 8], xmm1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140084290
call	0x140084290
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x1400840e0
call	0x1400840e0
lea	rax, [rip + 0xad91c]
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rdi, rdx
mov	esi, r8d
mov	rbp, r9
call	0x1400840e0
call	0x1400840e0
lea	r12, [rbx + 0x50]
mov	r8d, esi
mov	rdx, rdi
lea	rax, [rip + 0xad8e4]
mov	rcx, r12
mov	qword ptr [rbx], rax
call	0x1400787c0
call	0x1400787c0
mov	rcx, r12
call	0x14001d8f0
call	0x14001d8f0
test	al, al
jne	0x140017380
jne	0x140017380
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
mov	dword ptr [rbx + 0x60], esi
mov	rcx, rbx
mov	qword ptr [rbx + 0x78], rbp
call	0x140082310
call	0x140082310
movq	xmm0, qword ptr [rbx + 0x70]
xor	eax, eax
mov	qword ptr [rbx + 0x30], 0
mov	word ptr [rbx + 0x81], ax
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
movups	xmmword ptr [rbx + 8], xmm1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140084290
call	0x140084290
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	edi, edx
mov	esi, r8d
mov	rbp, r9
call	0x1400840e0
call	0x1400840e0
lea	r12, [rbx + 0x50]
mov	r8d, esi
mov	edx, edi
lea	rax, [rip + 0xad836]
mov	rcx, r12
mov	qword ptr [rbx], rax
call	0x140078830
call	0x140078830
mov	rcx, r12
call	0x14001d8f0
call	0x14001d8f0
test	al, al
jne	0x140017430
jne	0x140017430
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	dword ptr [rbx + 0x60], esi
mov	rcx, rbx
mov	qword ptr [rbx + 0x78], rbp
call	0x140082310
call	0x140082310
movq	xmm0, qword ptr [rbx + 0x70]
xor	eax, eax
mov	qword ptr [rbx + 0x30], 0
mov	word ptr [rbx + 0x81], ax
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
movups	xmmword ptr [rbx + 8], xmm1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140084290
call	0x140084290
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x1400840e0
call	0x1400840e0
lea	rax, [rip + 0xad79c]
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0xa79e4]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x50]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xa7a45]
lea	rcx, [rbx + 0x38]
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bf30
call	0x14009bf30
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400174cb
jmp	0x1400174cb
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0xa7984]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x50]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xa79e5]
lea	rcx, [rbx + 0x38]
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bf30
jmp	0x14009bf30
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14001752b
jmp	0x14001752b
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0xa7934]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x50]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xa7995]
lea	rcx, [rbx + 0x38]
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bf30
jmp	0x14009bf30
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14001757b
jmp	0x14001757b
nop	
push	rbp
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rbp, [rsp + 0x20]
lea	rbx, [rip + 0xa2e3a]
movabs	r11, 0xcccccccccccccccd
sub	rsp, 0x20
mov	rdi, rcx
mov	rcx, r8
mov	rsi, rdx
lea	r8, [rsp + 0x38]
lea	r12, [rsp + 0x20]
mov	r10, r8
nop	word ptr [rax + rax]
mov	rax, rcx
sub	r10, 1
mul	r11
mov	rax, rcx
shr	rdx, 3
lea	r9, [rdx + rdx*4]
add	r9, r9
sub	rax, r9
movzx	eax, byte ptr [rbx + rax]
mov	byte ptr [r10], al
mov	rax, rcx
mov	rcx, rdx
cmp	rax, 9
ja	0x1400175f0
ja	0x1400175f0
mov	rbx, r8
sub	rbx, r10
cmp	rsi, rbx
jb	0x140017648
jb	0x140017648
sub	r12, rbx
mov	r8, rbx
mov	rcx, rdi
lea	rdx, [r12 + 0x18]
call	0x140015998
call	0x140015998
mov	eax, ebx
mov	rsp, rbp
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	rbp
ret	
ret	
mov	eax, 0xffffffff
jmp	0x14001763e
jmp	0x14001763e
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
movzx	eax, byte ptr [r8]
mov	rbp, rcx
mov	rsi, r8
lea	rdi, [rcx + rdx - 1]
mov	rbx, rcx
test	al, al
je	0x140017760
je	0x140017760
cmp	rcx, rdi
jb	0x14001769d
jb	0x14001769d
jmp	0x140017764
jmp	0x140017764
nop	
movzx	eax, byte ptr [rsi]
mov	byte ptr [rbx], al
add	rsi, 1
add	rbx, 1
movzx	eax, byte ptr [rsi]
test	al, al
je	0x140017700
je	0x140017700
cmp	rbx, rdi
jae	0x140017764
jae	0x140017764
cmp	al, 0x25
jne	0x140017680
jne	0x140017680
movzx	eax, byte ptr [rsi + 1]
cmp	al, 0x73
je	0x1400176c0
je	0x1400176c0
cmp	al, 0x7a
je	0x140017718
je	0x140017718
cmp	al, 0x25
jne	0x140017680
jne	0x140017680
add	rsi, 1
jmp	0x140017683
jmp	0x140017683
nop	word ptr [rax + rax]
mov	rdx, qword ptr [r9]
lea	rcx, [r9 + 8]
movzx	eax, byte ptr [rdx]
test	al, al
je	0x1400176ee
je	0x1400176ee
cmp	rbx, rdi
jb	0x1400176dd
jb	0x1400176dd
jmp	0x14001774c
jmp	0x14001774c
nop	dword ptr [rax]
cmp	rdi, rbx
je	0x14001774f
je	0x14001774f
add	rdx, 1
mov	byte ptr [rbx], al
add	rbx, 1
movzx	eax, byte ptr [rdx]
test	al, al
jne	0x1400176d8
jne	0x1400176d8
movzx	eax, byte ptr [rsi + 2]
add	rsi, 2
mov	r9, rcx
test	al, al
jne	0x140017694
jne	0x140017694
nop	dword ptr [rax]
mov	eax, ebx
sub	eax, ebp
mov	byte ptr [rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
cmp	byte ptr [rsi + 2], 0x75
jne	0x140017680
jne	0x140017680
mov	rdx, rdi
mov	r8, qword ptr [r9]
mov	rcx, rbx
lea	r12, [r9 + 8]
sub	rdx, rbx
call	0x1400175b0
call	0x1400175b0
test	eax, eax
jle	0x140017764
jle	0x140017764
cdqe	
add	rsi, 3
mov	r9, r12
add	rbx, rax
jmp	0x14001768d
jmp	0x14001768d
mov	rdi, rbx
mov	rdx, rdi
mov	rcx, rbp
call	0x140018390
call	0x140018390
nop	word ptr [rax + rax]
xor	eax, eax
jmp	0x140017704
jmp	0x140017704
mov	rdx, rbx
mov	rcx, rbp
call	0x140018390
call	0x140018390
nop	
mov	rax, qword ptr [rcx + 0x40]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rcx + 8]
mov	rbx, rdx
mov	rdx, qword ptr [rdx + 8]
lea	r12, [rcx + 0x38]
lea	rdi, [rsp + 0x28]
mov	rsi, rcx
lea	rbp, [rbx + 0x38]
mov	qword ptr [rcx + 8], rdx
mov	rdx, qword ptr [rbx + 0x10]
mov	qword ptr [rbx + 8], rax
mov	rax, qword ptr [rcx + 0x10]
mov	qword ptr [rcx + 0x10], rdx
mov	rdx, qword ptr [rbx + 0x18]
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rcx + 0x18]
mov	qword ptr [rcx + 0x18], rdx
mov	rdx, qword ptr [rbx + 0x20]
mov	qword ptr [rbx + 0x18], rax
mov	rax, qword ptr [rcx + 0x20]
mov	qword ptr [rcx + 0x20], rdx
mov	rdx, qword ptr [rbx + 0x28]
mov	qword ptr [rbx + 0x20], rax
mov	rax, qword ptr [rcx + 0x28]
mov	qword ptr [rcx + 0x28], rdx
mov	rdx, qword ptr [rbx + 0x30]
mov	qword ptr [rbx + 0x28], rax
mov	rax, qword ptr [rcx + 0x30]
mov	qword ptr [rcx + 0x30], rdx
mov	rdx, r12
mov	rcx, rdi
mov	qword ptr [rbx + 0x30], rax
call	0x14009be20
call	0x14009be20
mov	rdx, rbp
mov	rcx, r12
call	0x14009bf90
call	0x14009bf90
mov	rdx, rdi
mov	rcx, rbp
call	0x14009bf90
call	0x14009bf90
mov	rcx, rdi
call	0x14009bf30
call	0x14009bf30
mov	rax, qword ptr [rsi + 0x40]
mov	rdx, qword ptr [rbx + 0x40]
mov	qword ptr [rsi + 0x40], rdx
mov	edx, dword ptr [rbx + 0x48]
mov	qword ptr [rbx + 0x40], rax
mov	eax, dword ptr [rsi + 0x48]
mov	dword ptr [rsi + 0x48], edx
mov	dword ptr [rbx + 0x48], eax
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
nop	
mov	rcx, qword ptr [rcx + 0x40]
jmp	0x140015908
jmp	0x140015908
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x40]
call	0x140015958
call	0x140015958
mov	dword ptr [rbx + 0x48], eax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	r9, qword ptr [rcx + 0x40]
mov	rsi, rdx
mov	rbx, rcx
mov	edx, 1
mov	rcx, rsi
call	0x140015938
call	0x140015938
mov	edx, 0xffffffff
test	rax, rax
jle	0x1400178ac
jle	0x1400178ac
movzx	edx, byte ptr [rsi + rax - 1]
mov	dword ptr [rbx + 0x48], edx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, rdx
mov	edx, 1
mov	r9, qword ptr [rax + 0x40]
jmp	0x140015950
jmp	0x140015950
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rdx
mov	qword ptr [rcx], 0xffffffffffffffff
mov	rdx, r8
mov	rbx, rcx
mov	dword ptr [rcx + 8], 0
xor	r8d, r8d
test	r9d, r9d
je	0x140017914
je	0x140017914
xor	r8d, r8d
cmp	r9d, 1
setne	r8b
add	r8d, 1
mov	rcx, qword ptr [rsi + 0x40]
call	0x14000d2f0
call	0x14000d2f0
test	eax, eax
je	0x140017930
je	0x140017930
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsi + 0x40]
call	0x14000d380
call	0x14000d380
mov	dword ptr [rbx + 8], 0
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, rdx
mov	rbx, rcx
lea	rcx, [rip - 0x83]
mov	rdx, qword ptr [r8]
mov	rax, qword ptr [rsi]
mov	rax, qword ptr [rax + 0x20]
cmp	rax, rcx
jne	0x1400179c0
jne	0x1400179c0
mov	rcx, qword ptr [rsi + 0x40]
xor	r8d, r8d
mov	qword ptr [rbx], 0xffffffffffffffff
mov	dword ptr [rbx + 8], 0
call	0x14000d2f0
call	0x14000d2f0
test	eax, eax
je	0x1400179a0
je	0x1400179a0
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsi + 0x40]
call	0x14000d380
call	0x14000d380
mov	dword ptr [rbx + 8], 0
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	dword ptr [rsp + 0x20], r9d
mov	r8, rdx
xor	r9d, r9d
mov	rdx, rsi
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, rcx
mov	ecx, edx
mov	rdx, qword ptr [rax + 0x40]
cmp	ecx, -1
je	0x140017a00
je	0x140017a00
add	rsp, 0x28
jmp	0x1400159b0
jmp	0x1400159b0
nop	dword ptr [rax + rax]
mov	rcx, rdx
call	0x140015908
call	0x140015908
neg	eax
sbb	eax, eax
add	rsp, 0x28
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	ecx, edx
cmp	edx, -1
jne	0x140017a50
jne	0x140017a50
mov	eax, dword ptr [rbx + 0x48]
cmp	eax, -1
je	0x140017a42
je	0x140017a42
mov	rdx, qword ptr [rbx + 0x40]
mov	ecx, eax
call	0x140015a38
call	0x140015a38
mov	dword ptr [rbx + 0x48], 0xffffffff
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
mov	rdx, qword ptr [rbx + 0x40]
call	0x140015a38
call	0x140015a38
mov	dword ptr [rbx + 0x48], 0xffffffff
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x40]
call	0x140015958
call	0x140015958
mov	rdx, qword ptr [rbx + 0x40]
mov	ecx, eax
add	rsp, 0x20
pop	rbx
jmp	0x140015a38
jmp	0x140015a38
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rdx
mov	rsi, rcx
call	0x140091fd0
call	0x140091fd0
lea	rax, [rip + 0xad208]
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rbx + 0x40]
mov	qword ptr [rbx + 0x40], 0
mov	qword ptr [rsi + 0x40], rax
mov	eax, dword ptr [rbx + 0x48]
mov	dword ptr [rbx + 0x48], 0xffffffff
mov	dword ptr [rsi + 0x48], eax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0xa7423]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x38]
mov	rsi, rdx
mov	qword ptr [rcx - 0x30], 0
mov	qword ptr [rcx - 0x28], 0
mov	qword ptr [rcx - 0x20], 0
mov	qword ptr [rcx - 0x18], 0
mov	qword ptr [rcx - 0x10], 0
mov	qword ptr [rcx - 8], 0
call	0x14009be50
call	0x14009be50
lea	rax, [rip + 0xad186]
mov	qword ptr [rbx + 0x40], rsi
mov	qword ptr [rbx], rax
mov	dword ptr [rbx + 0x48], 0xffffffff
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rdx
mov	rsi, rcx
call	0x140091fd0
call	0x140091fd0
lea	rax, [rip + 0xad158]
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rbx + 0x40]
mov	qword ptr [rbx + 0x40], 0
mov	qword ptr [rsi + 0x40], rax
mov	eax, dword ptr [rbx + 0x48]
mov	dword ptr [rbx + 0x48], 0xffffffff
mov	dword ptr [rsi + 0x48], eax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0xa7373]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x38]
mov	rsi, rdx
mov	qword ptr [rcx - 0x30], 0
mov	qword ptr [rcx - 0x28], 0
mov	qword ptr [rcx - 0x20], 0
mov	qword ptr [rcx - 0x18], 0
mov	qword ptr [rcx - 0x10], 0
mov	qword ptr [rcx - 8], 0
call	0x14009be50
call	0x14009be50
lea	rax, [rip + 0xad0d6]
mov	qword ptr [rbx + 0x40], rsi
mov	qword ptr [rbx], rax
mov	dword ptr [rbx + 0x48], 0xffffffff
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0xa7304]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x38]
call	0x14009bf30
call	0x14009bf30
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0xa72d9]
add	rax, 0x10
mov	qword ptr [rcx], rax
add	rcx, 0x38
jmp	0x14009bf30
jmp	0x14009bf30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rdx
mov	rsi, rcx
call	0x1400920e0
call	0x1400920e0
mov	rax, qword ptr [rbx + 0x40]
mov	qword ptr [rbx + 0x40], 0
mov	qword ptr [rsi + 0x40], rax
mov	eax, dword ptr [rbx + 0x48]
mov	dword ptr [rbx + 0x48], 0xffffffff
mov	dword ptr [rsi + 0x48], eax
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x40]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rcx + 8]
mov	rbx, rdx
mov	rdx, qword ptr [rdx + 8]
lea	r12, [rcx + 0x38]
lea	rdi, [rsp + 0x28]
mov	rsi, rcx
lea	rbp, [rbx + 0x38]
mov	qword ptr [rcx + 8], rdx
mov	rdx, qword ptr [rbx + 0x10]
mov	qword ptr [rbx + 8], rax
mov	rax, qword ptr [rcx + 0x10]
mov	qword ptr [rcx + 0x10], rdx
mov	rdx, qword ptr [rbx + 0x18]
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rcx + 0x18]
mov	qword ptr [rcx + 0x18], rdx
mov	rdx, qword ptr [rbx + 0x20]
mov	qword ptr [rbx + 0x18], rax
mov	rax, qword ptr [rcx + 0x20]
mov	qword ptr [rcx + 0x20], rdx
mov	rdx, qword ptr [rbx + 0x28]
mov	qword ptr [rbx + 0x20], rax
mov	rax, qword ptr [rcx + 0x28]
mov	qword ptr [rcx + 0x28], rdx
mov	rdx, qword ptr [rbx + 0x30]
mov	qword ptr [rbx + 0x28], rax
mov	rax, qword ptr [rcx + 0x30]
mov	qword ptr [rcx + 0x30], rdx
mov	rdx, r12
mov	rcx, rdi
mov	qword ptr [rbx + 0x30], rax
call	0x14009be20
call	0x14009be20
mov	rdx, rbp
mov	rcx, r12
call	0x14009bf90
call	0x14009bf90
mov	rdx, rdi
mov	rcx, rbp
call	0x14009bf90
call	0x14009bf90
mov	rcx, rdi
call	0x14009bf30
call	0x14009bf30
mov	rax, qword ptr [rsi + 0x40]
mov	rdx, qword ptr [rbx + 0x40]
mov	qword ptr [rsi + 0x40], rdx
movzx	edx, word ptr [rbx + 0x48]
mov	qword ptr [rbx + 0x40], rax
movzx	eax, word ptr [rsi + 0x48]
mov	word ptr [rsi + 0x48], dx
mov	word ptr [rbx + 0x48], ax
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rcx, qword ptr [rcx + 0x40]
jmp	0x140015908
jmp	0x140015908
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x40]
call	0x140015968
call	0x140015968
mov	word ptr [rbx + 0x48], ax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rbp, rdx
mov	rdi, r8
test	r8, r8
je	0x140017df2
je	0x140017df2
xor	ebx, ebx
jmp	0x140017dde
jmp	0x140017dde
nop	word ptr [rax + rax]
mov	word ptr [rbp + rbx*2], ax
add	rbx, 1
cmp	rdi, rbx
je	0x140017e10
je	0x140017e10
mov	rcx, qword ptr [rsi + 0x40]
call	0x140015968
call	0x140015968
cmp	ax, -1
jne	0x140017dd0
jne	0x140017dd0
test	rbx, rbx
jne	0x140017e10
jne	0x140017e10
xor	ebx, ebx
mov	eax, 0xffffffff
mov	word ptr [rsi + 0x48], ax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
movzx	eax, word ptr [rbp + rbx*2 - 2]
mov	word ptr [rsi + 0x48], ax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
xor	ebx, ebx
mov	rdi, rcx
mov	rbp, rdx
mov	rsi, r8
test	r8, r8
jne	0x140017e59
jne	0x140017e59
jmp	0x140017e6d
jmp	0x140017e6d
nop	word ptr [rax + rax]
add	rbx, 1
cmp	rsi, rbx
je	0x140017e6d
je	0x140017e6d
mov	rdx, qword ptr [rdi + 0x40]
movzx	ecx, word ptr [rbp + rbx*2]
call	0x1400159b8
call	0x1400159b8
cmp	ax, -1
jne	0x140017e50
jne	0x140017e50
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rdx
mov	qword ptr [rcx], 0xffffffffffffffff
mov	rdx, r8
mov	rbx, rcx
mov	dword ptr [rcx + 8], 0
xor	r8d, r8d
test	r9d, r9d
je	0x140017eb4
je	0x140017eb4
xor	r8d, r8d
cmp	r9d, 1
setne	r8b
add	r8d, 1
mov	rcx, qword ptr [rsi + 0x40]
call	0x14000d2f0
call	0x14000d2f0
test	eax, eax
je	0x140017ed0
je	0x140017ed0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsi + 0x40]
call	0x14000d380
call	0x14000d380
mov	dword ptr [rbx + 8], 0
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, rdx
mov	rbx, rcx
lea	rcx, [rip - 0x83]
mov	rdx, qword ptr [r8]
mov	rax, qword ptr [rsi]
mov	rax, qword ptr [rax + 0x20]
cmp	rax, rcx
jne	0x140017f60
jne	0x140017f60
mov	rcx, qword ptr [rsi + 0x40]
xor	r8d, r8d
mov	qword ptr [rbx], 0xffffffffffffffff
mov	dword ptr [rbx + 8], 0
call	0x14000d2f0
call	0x14000d2f0
test	eax, eax
je	0x140017f40
je	0x140017f40
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsi + 0x40]
call	0x14000d380
call	0x14000d380
mov	dword ptr [rbx + 8], 0
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	dword ptr [rsp + 0x20], r9d
mov	r8, rdx
xor	r9d, r9d
mov	rdx, rsi
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rcx + 0x40]
cmp	dx, -1
je	0x140017fa0
je	0x140017fa0
movzx	ecx, dx
mov	rdx, rax
add	rsp, 0x28
jmp	0x1400159b8
jmp	0x1400159b8
nop	dword ptr [rax]
mov	rcx, rax
call	0x140015908
call	0x140015908
neg	eax
sbb	ax, ax
add	rsp, 0x28
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
cmp	dx, -1
jne	0x140017ff8
jne	0x140017ff8
movzx	eax, word ptr [rcx + 0x48]
cmp	ax, -1
je	0x140017fe4
je	0x140017fe4
mov	rdx, qword ptr [rcx + 0x40]
movzx	ecx, ax
call	0x140015a40
call	0x140015a40
mov	edx, 0xffffffff
mov	word ptr [rbx + 0x48], dx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
movzx	ecx, dx
mov	rdx, qword ptr [rbx + 0x40]
call	0x140015a40
call	0x140015a40
mov	edx, 0xffffffff
mov	word ptr [rbx + 0x48], dx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x40]
call	0x140015968
call	0x140015968
mov	rdx, qword ptr [rbx + 0x40]
movzx	ecx, ax
add	rsp, 0x20
pop	rbx
jmp	0x140015a40
jmp	0x140015a40
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rdx
mov	rsi, rcx
call	0x140092a60
call	0x140092a60
lea	rax, [rip + 0xaccd8]
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rbx + 0x40]
mov	qword ptr [rbx + 0x40], 0
mov	qword ptr [rsi + 0x40], rax
movzx	eax, word ptr [rbx + 0x48]
mov	word ptr [rsi + 0x48], ax
mov	eax, 0xffffffff
mov	word ptr [rbx + 0x48], ax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0xa6e73]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x38]
mov	rsi, rdx
mov	qword ptr [rcx - 0x30], 0
mov	qword ptr [rcx - 0x28], 0
mov	qword ptr [rcx - 0x20], 0
mov	qword ptr [rcx - 0x18], 0
mov	qword ptr [rcx - 0x10], 0
mov	qword ptr [rcx - 8], 0
call	0x14009be50
call	0x14009be50
lea	rax, [rip + 0xacc46]
mov	qword ptr [rbx + 0x40], rsi
mov	qword ptr [rbx], rax
mov	eax, 0xffffffff
mov	word ptr [rbx + 0x48], ax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rdx
mov	rsi, rcx
call	0x140092a60
call	0x140092a60
lea	rax, [rip + 0xacc08]
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rbx + 0x40]
mov	qword ptr [rbx + 0x40], 0
mov	qword ptr [rsi + 0x40], rax
movzx	eax, word ptr [rbx + 0x48]
mov	word ptr [rsi + 0x48], ax
mov	eax, 0xffffffff
mov	word ptr [rbx + 0x48], ax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0xa6da3]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x38]
mov	rsi, rdx
mov	qword ptr [rcx - 0x30], 0
mov	qword ptr [rcx - 0x28], 0
mov	qword ptr [rcx - 0x20], 0
mov	qword ptr [rcx - 0x18], 0
mov	qword ptr [rcx - 0x10], 0
mov	qword ptr [rcx - 8], 0
call	0x14009be50
call	0x14009be50
lea	rax, [rip + 0xacb76]
mov	qword ptr [rbx + 0x40], rsi
mov	qword ptr [rbx], rax
mov	eax, 0xffffffff
mov	word ptr [rbx + 0x48], ax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0xa6d24]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x38]
call	0x14009bf30
call	0x14009bf30
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0xa6cf9]
add	rax, 0x10
mov	qword ptr [rcx], rax
add	rcx, 0x38
jmp	0x14009bf30
jmp	0x14009bf30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rdx
mov	rsi, rcx
call	0x140092b70
call	0x140092b70
mov	rax, qword ptr [rbx + 0x40]
mov	edx, 0xffffffff
mov	qword ptr [rbx + 0x40], 0
mov	qword ptr [rsi + 0x40], rax
movzx	eax, word ptr [rbx + 0x48]
mov	word ptr [rbx + 0x48], dx
mov	word ptr [rsi + 0x48], ax
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0xacb39]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0xacb24]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400ac440
call	0x1400ac440
mov	edx, 8
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2bf0
jmp	0x1400b2bf0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0xacaf9]
mov	qword ptr [rcx], rax
jmp	0x1400ac440
jmp	0x1400ac440
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0xacb14]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0xacae9]
mov	qword ptr [rcx], rax
jmp	0x1400ac440
jmp	0x1400ac440
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0xacb04]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400ac440
call	0x1400ac440
mov	edx, 8
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2bf0
jmp	0x1400b2bf0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0xacad9]
mov	qword ptr [rcx], rax
jmp	0x1400ac440
jmp	0x1400ac440
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0xacaf4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0xacac9]
mov	qword ptr [rcx], rax
jmp	0x1400ac440
jmp	0x1400ac440
nop	
push	rbp
push	r15
push	r14
push	r12
push	rsi
push	rbx
sub	rsp, 0x98
lea	rbp, [rsp + 0x90]
movabs	rsi, 0x657220677562206c
movabs	rbx, 0x6c75662074696d62
movabs	r9, 0x756f6e6520746f6e
movabs	r10, 0x6563617073206867
movabs	r11, 0x726f6620726f6620
movabs	r12, 0x617078652074616d
movabs	r14, 0x5028206e6f69736e
movabs	r15, 0x757320657361656c
mov	qword ptr [rbp - 0x38], rsi
sub	rdx, rcx
movabs	rsi, 0x2f2f3a7370747468
mov	qword ptr [rbp - 0x40], rbx
lea	rax, [rdx + 0x78]
movabs	rbx, 0x2074612074726f70
mov	qword ptr [rbp - 0x28], rsi
and	rax, 0xfffffffffffffff0
movabs	rsi, 0x736775622f67726f
mov	qword ptr [rbp - 0x18], rsi
movabs	rsi, 0x202020200a3a29
mov	qword ptr [rbp - 0x30], rbx
movabs	rbx, 0x2e756e672e636367
mov	qword ptr [rbp - 0x20], rbx
movabs	rbx, 0x2f736775622f6772
mov	qword ptr [rbp - 0xf], rsi
mov	rsi, rdx
mov	qword ptr [rbp - 0x70], r9
mov	qword ptr [rbp - 0x68], r10
mov	qword ptr [rbp - 0x60], r11
mov	qword ptr [rbp - 0x58], r12
mov	qword ptr [rbp - 0x50], r14
mov	qword ptr [rbp - 0x48], r15
mov	qword ptr [rbp - 0x17], rbx
call	0x14000c150
call	0x14000c150
movabs	rdx, 0x657220677562206c
movdqu	xmm0, xmmword ptr [rbp - 0x20]
sub	rsp, rax
mov	r8, rsi
movabs	rax, 0x6c75662074696d62
mov	qword ptr [rsp + 0x50], rax
lea	rbx, [rsp + 0x20]
movabs	rax, 0x2074612074726f70
mov	qword ptr [rsp + 0x60], rax
mov	rax, qword ptr [rbp - 0x10]
mov	qword ptr [rsp + 0x58], rdx
movabs	rdx, 0x2f2f3a7370747468
mov	qword ptr [rsp + 0x80], rax
lea	rax, [rsp + 0x88]
mov	qword ptr [rsp + 0x68], rdx
mov	rdx, rcx
mov	rcx, rax
mov	qword ptr [rsp + 0x20], r9
mov	qword ptr [rsp + 0x28], r10
mov	qword ptr [rsp + 0x30], r11
mov	qword ptr [rsp + 0x38], r12
mov	qword ptr [rsp + 0x40], r14
mov	qword ptr [rsp + 0x48], r15
movups	xmmword ptr [rsp + 0x70], xmm0
call	0x140015998
call	0x140015998
mov	rcx, rbx
mov	byte ptr [rsp + rsi + 0x88], 0
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
cmp	byte ptr [rip + 0x9fad2], 0
jne	0x140018626
jne	0x140018626
mov	byte ptr [rip + 0x9fac5], 1
call	0x1400b2f30
call	0x1400b2f30
test	rax, rax
je	0x1400185fc
je	0x1400185fc
mov	rbx, qword ptr [rax + 8]
xor	eax, eax
lea	r9, [rsp + 0x2c]
cmp	byte ptr [rbx], 0x2a
mov	dword ptr [rsp + 0x2c], 0xffffffff
sete	al
xor	r8d, r8d
xor	edx, edx
add	rbx, rax
mov	rcx, rbx
call	0x14000aef0
call	0x14000aef0
mov	ecx, 2
mov	rsi, qword ptr [rip + 0x9cba2]
mov	rdi, rax
call	rsi
call	rsi
mov	edx, 1
lea	rcx, [rip + 0xa26a1]
mov	r8d, 0x30
mov	r9, rax
call	0x140015950
call	0x140015950
mov	edx, dword ptr [rsp + 0x2c]
mov	ecx, 2
test	edx, edx
je	0x1400185ed
je	0x1400185ed
call	rsi
call	rsi
mov	rcx, rbx
mov	rdx, rax
call	0x140015930
call	0x140015930
mov	ecx, 2
call	rsi
call	rsi
mov	r8d, 2
mov	edx, 1
lea	rcx, [rip + 0xa2691]
mov	r9, rax
call	0x140015950
call	0x140015950
mov	eax, dword ptr [rsp + 0x2c]
test	eax, eax
jne	0x1400185e8
jne	0x1400185e8
mov	rcx, rdi
call	0x140015940
call	0x140015940
call	0x1400b3540
call	0x1400b3540
call	rsi
call	rsi
mov	rcx, rdi
mov	rdx, rax
call	0x140015930
call	0x140015930
jmp	0x1400185b7
jmp	0x1400185b7
mov	ecx, 2
call	qword ptr [rip + 0x9cb19]
call	qword ptr [rip + 0x9cb19]
mov	r8d, 0x2d
mov	edx, 1
lea	rcx, [rip + 0xa264f]
mov	r9, rax
call	0x140015950
call	0x140015950
call	0x1400158e8
call	0x1400158e8
mov	ecx, 2
call	qword ptr [rip + 0x9caef]
call	qword ptr [rip + 0x9caef]
mov	r8d, 0x1d
mov	edx, 1
lea	rcx, [rip + 0xa25cd]
mov	r9, rax
call	0x140015950
call	0x140015950
call	0x1400158e8
call	0x1400158e8
sub	rdx, 1
mov	rcx, rax
jne	0x1400186bb
jne	0x1400186bb
call	0x1400b2d80
call	0x1400b2d80
mov	rcx, rax
mov	rax, qword ptr [rax]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	ecx, 2
mov	rbx, rax
call	rsi
call	rsi
mov	r9, rax
mov	r8d, 0xb
mov	edx, 1
lea	rcx, [rip + 0xa2610]
call	0x140015950
call	0x140015950
mov	ecx, 2
call	rsi
call	rsi
mov	rdx, rax
mov	rcx, rbx
call	0x140015930
call	0x140015930
mov	ecx, 2
call	rsi
call	rsi
mov	rdx, rax
mov	ecx, 0xa
call	0x140015928
call	0x140015928
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140018621
jmp	0x140018621
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140018621
jmp	0x140018621
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0xac794]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400ac440
call	0x1400ac440
mov	edx, 8
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2bf0
jmp	0x1400b2bf0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0xac769]
mov	qword ptr [rcx], rax
jmp	0x1400ac440
jmp	0x1400ac440
nop	
sub	rsp, 0x28
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x435]
lea	rdx, [rip + 0xa7bc4]
mov	rcx, rax
lea	rax, [rip + 0xac6aa]
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
nop	
nop	
sub	rsp, 0x28
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x3e5]
lea	rdx, [rip + 0xa7bd4]
mov	rcx, rax
lea	rax, [rip + 0xac6da]
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
nop	
nop	
sub	rsp, 0x28
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x85]
lea	rdx, [rip + 0xa7bc4]
mov	rcx, rax
lea	rax, [rip + 0xac6da]
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
nop	
nop	
mov	rax, qword ptr [rdx]
cmp	qword ptr [rcx], rax
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
cmp	qword ptr [rcx], rax
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
cmp	qword ptr [rcx], rax
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
cmp	qword ptr [rcx], rax
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
cmp	qword ptr [rcx], rax
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
cmp	qword ptr [rcx], rax
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
cmp	qword ptr [rcx], rax
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
cmp	qword ptr [rcx], rax
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rbx, rdx
mov	rbp, r8
mov	edi, r9d
call	0x140068780
call	0x140068780
test	al, al
jne	0x140018870
jne	0x140018870
cmp	edi, 3
ja	0x140018870
ja	0x140018870
mov	rax, qword ptr [rbx]
mov	r8, rbp
mov	rdx, rsi
mov	rcx, rbx
mov	rax, qword ptr [rax + 0x28]
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	rax
jmp	rax
nop	dword ptr [rax]
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, r8
mov	rbx, r9
call	0x140068780
call	0x140068780
test	al, al
je	0x1400188a7
je	0x1400188a7
mov	qword ptr [rbx], rsi
mov	qword ptr [rbx + 0x10], 0x10
mov	dword ptr [rbx + 8], 6
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
push	rbx
sub	rsp, 0x40
movabs	rax, 0x1000000000
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rcx]
mov	rbx, r8
lea	r9, [rsp + 0x20]
mov	qword ptr [rsp + 0x20], 0
mov	r8, qword ptr [r8]
mov	qword ptr [rsp + 0x30], 0
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	eax, dword ptr [rsp + 0x28]
xor	edx, edx
not	eax
test	al, 6
jne	0x140018900
jne	0x140018900
mov	rax, qword ptr [rsp + 0x20]
mov	edx, 1
mov	qword ptr [rbx], rax
mov	eax, edx
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
sub	rsp, 0x28
mov	rbp, qword ptr [rsp + 0x70]
mov	r12, qword ptr [rsp + 0x88]
mov	edi, r8d
mov	rsi, r9
cmp	rbp, qword ptr [rsp + 0x80]
je	0x140018960
je	0x140018960
mov	rdx, rsi
call	0x140068780
call	0x140068780
test	al, al
je	0x140018954
je	0x140018954
mov	qword ptr [r12], rbp
mov	dword ptr [r12 + 8], edi
mov	dword ptr [r12 + 0x10], 1
xor	eax, eax
add	rsp, 0x28
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rdx, qword ptr [rsp + 0x78]
mov	qword ptr [rsp + 0x50], rcx
call	0x140068780
call	0x140068780
mov	rcx, qword ptr [rsp + 0x50]
test	al, al
je	0x140018936
je	0x140018936
xor	eax, eax
mov	dword ptr [r12 + 0xc], edi
add	rsp, 0x28
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
cmp	qword ptr [rsp + 0x28], r8
sete	al
lea	eax, [rax + rax*4 + 1]
ret	
ret	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbp, rcx
mov	rbx, rdx
mov	rsi, r8
mov	rdi, r9
call	0x140018880
call	0x140018880
test	al, al
jne	0x1400189e0
jne	0x1400189e0
mov	rcx, qword ptr [rbp + 0x10]
mov	r9, rdi
mov	r8, rsi
mov	rdx, rbx
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x30]
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	rax
jmp	rax
nop	dword ptr [rax]
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	r12, qword ptr [rsp + 0x90]
mov	r15, qword ptr [rsp + 0x98]
mov	r14, qword ptr [rsp + 0xa0]
mov	r13, qword ptr [rsp + 0xa8]
mov	rdi, rdx
mov	rdx, r9
mov	rbx, rcx
mov	ebp, r8d
mov	rsi, r9
call	0x140068780
call	0x140068780
test	al, al
jne	0x140018a90
jne	0x140018a90
cmp	r12, r14
je	0x140018ae0
je	0x140018ae0
mov	rcx, qword ptr [rbx + 0x10]
mov	r9, rsi
mov	r8d, ebp
mov	rdx, rdi
mov	rax, qword ptr [rcx]
mov	qword ptr [rsp + 0xa8], r13
mov	qword ptr [rsp + 0xa0], r14
mov	qword ptr [rsp + 0x98], r15
mov	qword ptr [rsp + 0x90], r12
mov	rax, qword ptr [rax + 0x38]
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
jmp	rax
jmp	rax
nop	dword ptr [rax + rax]
mov	qword ptr [r13], r12
mov	dword ptr [r13 + 8], ebp
test	rdi, rdi
js	0x140018ac8
js	0x140018ac8
add	r12, rdi
xor	eax, eax
cmp	r14, r12
sete	al
lea	eax, [rax + rax*4 + 1]
mov	dword ptr [r13 + 0x10], eax
xor	eax, eax
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
cmp	rdi, -2
jne	0x140018ab0
jne	0x140018ab0
mov	dword ptr [r13 + 0x10], 1
jmp	0x140018ab0
jmp	0x140018ab0
nop	dword ptr [rax + rax]
mov	rdx, r15
mov	rcx, rbx
call	0x140068780
call	0x140068780
test	al, al
je	0x140018a41
je	0x140018a41
mov	dword ptr [r13 + 0xc], ebp
jmp	0x140018ab0
jmp	0x140018ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rsi, qword ptr [rsp + 0x70]
mov	rbx, rcx
mov	rdi, rdx
cmp	rsi, r8
je	0x140018b38
je	0x140018b38
mov	rcx, qword ptr [rbx + 0x10]
mov	rdx, rdi
mov	rax, qword ptr [rcx]
mov	qword ptr [rsp + 0x70], rsi
mov	rax, qword ptr [rax + 0x40]
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
jmp	rax
jmp	rax
nop	dword ptr [rax]
mov	rdx, r9
mov	qword ptr [rsp + 0x28], r8
mov	qword ptr [rsp + 0x20], r9
call	0x140068780
call	0x140068780
mov	r9, qword ptr [rsp + 0x20]
mov	r8, qword ptr [rsp + 0x28]
test	al, al
je	0x140018b17
je	0x140018b17
mov	eax, 6
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
mov	qword ptr [rsp + 0xa0], rcx
mov	r12, rdx
mov	r13, r8
mov	r15, r9
call	0x140018880
call	0x140018880
test	al, al
jne	0x140018d00
jne	0x140018d00
mov	r14d, dword ptr [r15 + 0xc]
mov	r10, qword ptr [rsp + 0xa0]
test	r14b, 0x10
jne	0x140018d90
jne	0x140018d90
mov	esi, dword ptr [r10 + 0x14]
test	rsi, rsi
je	0x140018d80
je	0x140018d80
lea	rax, [rsp + 0x30]
mov	rbx, rsi
mov	qword ptr [rsp + 0xb0], r13
mov	qword ptr [rsp + 0x20], rax
shl	rbx, 4
mov	eax, r14d
add	rbx, r10
and	eax, 1
mov	qword ptr [rsp + 0xa0], r10
mov	r13, rbx
mov	dword ptr [rsp + 0x2c], eax
mov	rbx, qword ptr [rsp + 0xb0]
jmp	0x140018c2d
jmp	0x140018c2d
nop	dword ptr [rax]
mov	rax, qword ptr [r15]
cmp	rax, qword ptr [rsp + 0x30]
jne	0x140018d99
jne	0x140018d99
test	rax, rax
je	0x140018d20
je	0x140018d20
mov	eax, dword ptr [rsp + 0x38]
or	dword ptr [r15 + 8], eax
sub	r13, 0x10
sub	rsi, 1
je	0x140018d80
je	0x140018d80
mov	rax, qword ptr [r13 + 0x10]
mov	dword ptr [rsp + 0x38], 0
mov	qword ptr [rsp + 0x30], 0
mov	edi, eax
mov	rbp, rax
mov	dword ptr [rsp + 0x3c], r14d
mov	qword ptr [rsp + 0x40], 0
and	edi, 1
and	ebp, 2
jne	0x140018c65
jne	0x140018c65
mov	edx, dword ptr [rsp + 0x2c]
test	edx, edx
je	0x140018c1f
je	0x140018c1f
xor	r8d, r8d
test	rbx, rbx
je	0x140018c81
je	0x140018c81
sar	rax, 8
test	dil, dil
je	0x140018c7d
je	0x140018c7d
mov	rdx, qword ptr [rbx]
mov	rax, qword ptr [rdx + rax]
lea	r8, [rbx + rax]
mov	rcx, qword ptr [r13 + 8]
mov	r9, qword ptr [rsp + 0x20]
mov	rdx, r12
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
test	al, al
je	0x140018c1f
je	0x140018c1f
cmp	qword ptr [rsp + 0x40], 0x10
jne	0x140018ca8
jne	0x140018ca8
test	dil, dil
jne	0x140018d50
jne	0x140018d50
mov	eax, dword ptr [rsp + 0x38]
test	rbp, rbp
jne	0x140018cbd
jne	0x140018cbd
cmp	eax, 3
jle	0x140018cbd
jle	0x140018cbd
and	eax, 0xfffffffd
mov	dword ptr [rsp + 0x38], eax
mov	rdx, qword ptr [r15 + 0x10]
test	rdx, rdx
jne	0x140018c00
jne	0x140018c00
mov	rax, qword ptr [rsp + 0x40]
movdqu	xmm0, xmmword ptr [rsp + 0x30]
mov	qword ptr [r15 + 0x10], rax
movups	xmmword ptr [r15], xmm0
mov	eax, dword ptr [r15 + 8]
cmp	eax, 3
jle	0x140018d00
jle	0x140018d00
test	al, 2
je	0x140018d60
je	0x140018d60
mov	rax, qword ptr [rsp + 0xa0]
test	byte ptr [rax + 0x10], 1
jne	0x140018c1f
jne	0x140018c1f
nop	dword ptr [rax]
mov	eax, 1
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, qword ptr [rsp + 0x40]
cmp	rdx, 0x10
je	0x140018d3e
je	0x140018d3e
cmp	rcx, 0x10
je	0x140018d3e
je	0x140018d3e
call	0x140068780
call	0x140068780
test	al, al
jne	0x140018c17
jne	0x140018c17
mov	dword ptr [r15 + 8], 2
jmp	0x140018d00
jmp	0x140018d00
nop	dword ptr [rax + rax]
mov	rax, qword ptr [r13 + 8]
mov	qword ptr [rsp + 0x40], rax
jmp	0x140018ca8
jmp	0x140018ca8
nop	
test	al, 1
je	0x140018d00
je	0x140018d00
mov	rax, qword ptr [rsp + 0xa0]
test	byte ptr [rax + 0x10], 2
je	0x140018d00
je	0x140018d00
sub	r13, 0x10
sub	rsi, 1
jne	0x140018c2d
jne	0x140018c2d
mov	ecx, dword ptr [r15 + 8]
test	ecx, ecx
setne	al
jmp	0x140018d05
jmp	0x140018d05
nop	
mov	r14d, dword ptr [r10 + 0x10]
jmp	0x140018bb4
jmp	0x140018bb4
mov	qword ptr [r15], 0
mov	dword ptr [r15 + 8], 2
jmp	0x140018d00
jmp	0x140018d00
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x78
mov	rbx, qword ptr [rsp + 0xf8]
mov	r14, qword ptr [rsp + 0xe0]
mov	qword ptr [rsp + 0xd8], r9
mov	r15, rcx
mov	r12, rdx
mov	r13d, r8d
test	byte ptr [rbx + 0x14], 0x10
je	0x140018ded
je	0x140018ded
mov	eax, dword ptr [rcx + 0x10]
mov	dword ptr [rbx + 0x14], eax
cmp	r14, qword ptr [rsp + 0xf0]
je	0x1400192f0
je	0x1400192f0
mov	rdx, qword ptr [rsp + 0xd8]
mov	rcx, r15
call	0x140068780
call	0x140068780
test	al, al
jne	0x1400192c0
jne	0x1400192c0
mov	rbp, qword ptr [rsp + 0xf0]
xor	eax, eax
mov	byte ptr [rsp + 0x4f], 0
mov	byte ptr [rsp + 0x4e], 1
sub	rbp, r12
test	r12, r12
mov	qword ptr [rsp + 0xc8], r12
cmovs	rbp, rax
xor	r10d, r10d
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x40], rax
mov	byte ptr [rsp + 0x4d], r10b
mov	r12, rbp
mov	ebp, dword ptr [r15 + 0x14]
test	rbp, rbp
je	0x1400190bb
je	0x1400190bb
mov	qword ptr [rsp + 0xe0], r14
mov	r14, r15
mov	r15, qword ptr [rsp + 0xe0]
jmp	0x140018f16
jmp	0x140018f16
nop	dword ptr [rax + rax]
test	rdx, rdx
je	0x140019150
je	0x140019150
cmp	rdx, r8
je	0x1400190d8
je	0x1400190d8
test	r8, r8
jne	0x140018e94
jne	0x140018e94
test	r9b, r9b
je	0x140018f03
je	0x140018f03
mov	edi, dword ptr [rbx + 0x10]
cmp	eax, 3
jle	0x140019028
jle	0x140019028
test	al, 1
je	0x140018eae
je	0x140018eae
test	byte ptr [rbx + 0x14], 2
jne	0x140019028
jne	0x140019028
test	edi, edi
mov	eax, 1
cmove	edi, eax
test	esi, esi
cmove	esi, eax
mov	eax, esi
xor	eax, edi
cmp	eax, 3
jle	0x140019120
jle	0x140019120
cmp	esi, 3
jle	0x1400191d0
jle	0x1400191d0
mov	r8, qword ptr [rsp + 0x50]
mov	edx, dword ptr [rsp + 0x58]
mov	qword ptr [rbx], r8
mov	eax, esi
mov	byte ptr [rsp + 0x4d], 0
and	eax, 2
mov	dword ptr [rbx + 8], edx
mov	dword ptr [rbx + 0x10], esi
test	eax, eax
jne	0x140019070
jne	0x140019070
and	esi, 1
je	0x140019070
je	0x140019070
mov	eax, dword ptr [rbx + 0xc]
cmp	eax, 4
je	0x1400190f0
je	0x1400190f0
sub	rbp, 1
je	0x1400190a8
je	0x1400190a8
mov	rcx, rbp
mov	r9d, dword ptr [rbx + 0x14]
mov	r8d, r13d
mov	qword ptr [rsp + 0x60], 0
mov	qword ptr [rsp + 0x50], 0
shl	rcx, 4
mov	rax, qword ptr [r14 + rcx + 0x10]
mov	dword ptr [rsp + 0x64], r9d
mov	qword ptr [rsp + 0x58], 0
mov	rdx, rax
sar	rdx, 8
test	al, 1
je	0x140018f5f
je	0x140018f5f
mov	rsi, qword ptr [r15]
or	r8d, 1
mov	rdx, qword ptr [rsi + rdx]
add	rdx, r15
test	r12, r12
je	0x140018f79
je	0x140018f79
cmp	r12, rdx
setb	sil
cmp	byte ptr [rsp + 0x4e], sil
je	0x140019100
je	0x140019100
test	al, 2
jne	0x140018f90
jne	0x140018f90
cmp	qword ptr [rsp + 0xc8], -2
je	0x140019090
je	0x140019090
and	r8d, 0xfffffffd
mov	rcx, qword ptr [r14 + rcx + 8]
mov	rdi, qword ptr [rsp + 0x40]
mov	r9, qword ptr [rsp + 0xd8]
mov	rax, qword ptr [rcx]
mov	qword ptr [rsp + 0x38], rdi
mov	rdi, qword ptr [rsp + 0xf0]
mov	qword ptr [rsp + 0x20], rdx
mov	rdx, qword ptr [rsp + 0xc8]
mov	qword ptr [rsp + 0x30], rdi
mov	rdi, qword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0x28], rdi
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
mov	esi, dword ptr [rsp + 0x60]
mov	r9d, eax
mov	eax, dword ptr [rbx + 0xc]
or	eax, dword ptr [rsp + 0x5c]
mov	edx, esi
mov	dword ptr [rbx + 0xc], eax
and	edx, 0xfffffffb
cmp	edx, 2
je	0x140019380
je	0x140019380
cmp	byte ptr [rsp + 0x4d], 0
mov	r8, qword ptr [rsp + 0x50]
mov	rdx, qword ptr [rbx]
je	0x140018e78
je	0x140018e78
test	rdx, rdx
jne	0x140018e81
jne	0x140018e81
test	r8, r8
je	0x140018f03
je	0x140018f03
mov	edi, dword ptr [rbx + 0x10]
cmp	eax, 3
jg	0x140018ea0
jg	0x140018ea0
nop	dword ptr [rax]
test	edi, edi
jle	0x140019180
jle	0x140019180
test	esi, esi
jg	0x140018ebd
jg	0x140018ebd
cmp	edi, 3
jbe	0x140019458
jbe	0x140019458
test	dil, 1
je	0x1400191f8
je	0x1400191f8
test	byte ptr [r14 + 0x10], 2
jne	0x140019210
jne	0x140019210
mov	eax, edi
xor	eax, 1
cmp	eax, 3
jbe	0x14001912b
jbe	0x14001912b
mov	dword ptr [rbx + 0x10], edi
and	edi, 2
je	0x140018f00
je	0x140018f00
xor	r10d, r10d
mov	eax, r10d
add	rsp, 0x78
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
and	r9d, 3
jne	0x140018f8c
jne	0x140018f8c
sub	rbp, 1
jne	0x140018f16
jne	0x140018f16
nop	dword ptr [rax]
mov	qword ptr [rsp + 0xe0], r15
mov	r15, r14
mov	r14, qword ptr [rsp + 0xe0]
movzx	esi, byte ptr [rsp + 0x4e]
and	byte ptr [rsp + 0x4f], sil
je	0x1400190f0
je	0x1400190f0
mov	byte ptr [rsp + 0x4e], 0
jmp	0x140018e4e
jmp	0x140018e4e
nop	dword ptr [rax]
mov	edx, dword ptr [rsp + 0x58]
or	dword ptr [rbx + 8], edx
cmp	eax, 4
jne	0x140018f0c
jne	0x140018f0c
nop	dword ptr [rax + rax]
movzx	r10d, byte ptr [rsp + 0x4d]
jmp	0x140019073
jmp	0x140019073
nop	dword ptr [rax + rax]
mov	byte ptr [rsp + 0x4f], 1
jmp	0x140018f0c
jmp	0x140018f0c
mov	eax, edi
xor	eax, 6
cmp	eax, 3
ja	0x1400192a6
ja	0x1400192a6
mov	esi, 6
nop	dword ptr [rax]
and	esi, edi
cmp	esi, 3
jg	0x14001942d
jg	0x14001942d
mov	eax, dword ptr [rbx + 0xc]
mov	qword ptr [rbx], 0
mov	dword ptr [rbx + 0x10], 1
mov	byte ptr [rsp + 0x4d], 1
jmp	0x140018f03
jmp	0x140018f03
nop	word ptr cs:[rax + rax]
mov	edx, dword ptr [rsp + 0x58]
mov	qword ptr [rbx], r8
mov	dword ptr [rbx + 8], edx
test	eax, eax
je	0x14001916e
je	0x14001916e
test	r8, r8
je	0x14001916e
je	0x14001916e
test	byte ptr [r14 + 0x10], 1
je	0x140019392
je	0x140019392
mov	byte ptr [rsp + 0x4d], r9b
jmp	0x140018f03
jmp	0x140018f03
nop	dword ptr [rax + rax]
cmp	esi, 3
jle	0x140019260
jle	0x140019260
test	sil, 1
je	0x1400191e0
je	0x1400191e0
test	byte ptr [r14 + 0x10], 2
je	0x140019318
je	0x140019318
cmp	qword ptr [rsp + 0xc8], 0
js	0x1400193b0
js	0x1400193b0
xor	edi, edi
add	rdx, qword ptr [rsp + 0xc8]
cmp	qword ptr [rsp + 0xf0], rdx
sete	dil
lea	edi, [rdi + rdi*4 + 1]
jmp	0x140018ebd
jmp	0x140018ebd
nop	dword ptr [rax + rax]
mov	eax, edi
mov	esi, edi
and	eax, 2
jmp	0x140018eec
jmp	0x140018eec
nop	dword ptr [rax]
mov	edx, esi
xor	edx, 1
cmp	edx, 3
jbe	0x14001912e
jbe	0x14001912e
jmp	0x140018ed8
jmp	0x140018ed8
nop	dword ptr [rax + rax]
mov	eax, edi
xor	eax, 1
cmp	eax, 3
jbe	0x14001912b
jbe	0x14001912b
mov	dword ptr [rbx + 0x10], edi
jmp	0x140019070
jmp	0x140019070
nop	
cmp	qword ptr [rsp + 0xc8], 0
mov	r8, qword ptr [rsp + 0x50]
js	0x140019330
js	0x140019330
mov	rax, qword ptr [rsp + 0xc8]
add	rax, r8
cmp	qword ptr [rsp + 0xf0], rax
je	0x14001910a
je	0x14001910a
mov	edx, edi
mov	eax, edi
mov	esi, edi
xor	edx, 1
and	eax, 2
cmp	edx, 3
ja	0x140018eec
ja	0x140018eec
jmp	0x14001912b
jmp	0x14001912b
nop	word ptr [rax + rax]
cmp	qword ptr [rsp + 0xc8], 0
js	0x140019410
js	0x140019410
add	rdx, qword ptr [rsp + 0xc8]
cmp	qword ptr [rsp + 0xf0], rdx
je	0x140019446
je	0x140019446
test	esi, esi
jg	0x140019423
jg	0x140019423
mov	rdx, qword ptr [rsp + 0xc8]
add	rdx, r8
cmp	qword ptr [rsp + 0xf0], rdx
jne	0x14001912e
jne	0x14001912e
mov	eax, dword ptr [rsp + 0x58]
mov	qword ptr [rbx], r8
mov	dword ptr [rbx + 8], eax
mov	dword ptr [rbx + 0x10], 6
jmp	0x140019070
jmp	0x140019070
nop	dword ptr [rax]
mov	qword ptr [rbx], r14
mov	dword ptr [rbx + 8], r13d
test	r12, r12
js	0x14001939a
js	0x14001939a
xor	eax, eax
lea	r10, [r14 + r12]
cmp	qword ptr [rsp + 0xf0], r10
sete	al
lea	eax, [rax + rax*4 + 1]
mov	dword ptr [rbx + 0x10], eax
jmp	0x140019070
jmp	0x140019070
nop	dword ptr [rax]
mov	rdx, qword ptr [rsp + 0xe8]
mov	rcx, r15
call	0x140068780
call	0x140068780
test	al, al
je	0x140018dfb
je	0x140018dfb
mov	dword ptr [rbx + 0xc], r13d
jmp	0x140019070
jmp	0x140019070
nop	dword ptr [rax]
mov	eax, esi
xor	eax, 1
cmp	eax, 3
ja	0x140018ed8
ja	0x140018ed8
jmp	0x14001912b
jmp	0x14001912b
nop	dword ptr [rax + rax]
cmp	qword ptr [rsp + 0xc8], -2
je	0x14001923d
je	0x14001923d
mov	rax, qword ptr [rsp + 0xd8]
mov	rsi, qword ptr [rsp + 0xf0]
mov	r9, qword ptr [rsp + 0xe8]
mov	rdx, qword ptr [rsp + 0xc8]
mov	rax, qword ptr [rax]
mov	rcx, qword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0x20], rsi
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	esi, eax
jmp	0x140018ebd
jmp	0x140018ebd
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x50]
mov	dword ptr [rbx + 0x10], esi
mov	qword ptr [rbx], rax
mov	eax, dword ptr [rsp + 0x58]
mov	dword ptr [rbx + 8], eax
mov	r10d, r9d
jmp	0x140019073
jmp	0x140019073
cmp	r12, -2
jne	0x140019070
jne	0x140019070
mov	dword ptr [rbx + 0x10], 1
jmp	0x140019070
jmp	0x140019070
cmp	qword ptr [rsp + 0xc8], -2
je	0x140019423
je	0x140019423
mov	rax, qword ptr [rsp + 0xd8]
mov	rcx, qword ptr [rsp + 0xf0]
mov	r8, rdx
mov	r9, qword ptr [rsp + 0xe8]
mov	rdx, qword ptr [rsp + 0xc8]
mov	rax, qword ptr [rax]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, qword ptr [rsp + 0xd8]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	edi, eax
test	esi, esi
jg	0x140018ebd
jg	0x140018ebd
mov	r8, qword ptr [rsp + 0x50]
cmp	eax, 3
jg	0x140019041
jg	0x140019041
jmp	0x14001933f
jmp	0x14001933f
nop	
cmp	qword ptr [rsp + 0xc8], -2
jne	0x1400193bb
jne	0x1400193bb
test	esi, esi
jle	0x14001912e
jle	0x14001912e
mov	edi, 1
jmp	0x140018ebd
jmp	0x140018ebd
mov	qword ptr [rbx], 0
mov	r10d, 1
mov	dword ptr [rbx + 0x10], 2
jmp	0x140019073
jmp	0x140019073
test	esi, esi
jle	0x1400192b0
jle	0x1400192b0
mov	edi, 6
jmp	0x140018ebd
jmp	0x140018ebd
cmp	qword ptr [rsp + 0xc8], 0
js	0x140019481
js	0x140019481
mov	rax, qword ptr [rsp + 0xc8]
add	rax, r8
cmp	qword ptr [rsp + 0xf0], rax
jne	0x14001912b
jne	0x14001912b
jmp	0x1400192a6
jmp	0x1400192a6
cmp	qword ptr [rsp + 0xc8], -2
jne	0x14001933f
jne	0x14001933f
jmp	0x14001912b
jmp	0x14001912b
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	r13, qword ptr [rsp + 0x90]
mov	rbx, rcx
mov	rbp, rdx
mov	r14, r8
mov	r12, r9
cmp	r8, r13
je	0x140019558
je	0x140019558
mov	edi, dword ptr [rbx + 0x14]
mov	rax, rdi
shl	rax, 4
add	rbx, rax
test	rdi, rdi
je	0x14001952b
je	0x14001952b
nop	dword ptr [rax]
mov	rax, qword ptr [rbx + 0x10]
test	al, 2
je	0x140019521
je	0x140019521
mov	rdx, rax
mov	esi, eax
sar	rdx, 8
and	esi, 1
je	0x140019503
je	0x140019503
cmp	rbp, -3
je	0x140019521
je	0x140019521
mov	rax, qword ptr [r14]
mov	rdx, qword ptr [rax + rdx]
mov	rcx, qword ptr [rbx + 8]
lea	r8, [r14 + rdx]
mov	r9, r12
mov	rdx, rbp
mov	rax, qword ptr [rcx]
mov	qword ptr [rsp + 0x20], r13
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
cmp	eax, 3
jg	0x140019540
jg	0x140019540
sub	rbx, 0x10
sub	rdi, 1
jne	0x1400194e0
jne	0x1400194e0
mov	eax, 1
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	
movzx	esi, sil
or	eax, esi
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax]
mov	rdx, r9
call	0x140068780
call	0x140068780
mov	edx, eax
mov	eax, 6
test	dl, dl
je	0x1400194cb
je	0x1400194cb
jmp	0x140019530
jmp	0x140019530
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0xa1ec9]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx + 8], 0
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	byte ptr [rcx + 0x10], 0
cmp	r8d, 1
je	0x1400195e0
je	0x1400195e0
mov	qword ptr [rsp + 0x20], 0xd
lea	r9, [rip + 0xa1ea6]
xor	r8d, r8d
xor	edx, edx
call	0x14009cf70
call	0x14009cf70
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	qword ptr [rsp + 0x20], 0xe
lea	r9, [rip + 0xa1e69]
xor	r8d, r8d
xor	edx, edx
call	0x14009cf70
call	0x14009cf70
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009cf50
call	0x14009cf50
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
lea	rax, [rsp + 0x20]
mov	r10, r8
mov	r8d, edx
mov	rdx, rcx
mov	rcx, rax
call	0x140019670
call	0x140019670
mov	rdx, qword ptr [rsp + 0x20]
mov	rcx, qword ptr [rsp + 0x28]
xor	eax, eax
cmp	qword ptr [r10 + 8], rcx
je	0x140019658
je	0x140019658
add	rsp, 0x38
ret	
ret	
nop	dword ptr [rax]
cmp	dword ptr [r10], edx
sete	al
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
cmp	r8d, 0x217
jg	0x1400196a8
jg	0x1400196a8
test	r8d, r8d
js	0x1400197a0
js	0x1400197a0
cmp	r8d, 0x217
ja	0x1400197a0
ja	0x1400197a0
lea	r9, [rip + 0xa1e37]
mov	ecx, r8d
movsxd	rcx, dword ptr [r9 + rcx*4]
add	rcx, r9
jmp	rcx
jmp	rcx
nop	dword ptr [rax]
cmp	r8d, 0x4c9
jg	0x140019720
jg	0x140019720
cmp	r8d, 0x44b
jle	0x1400196e0
jle	0x1400196e0
lea	ecx, [r8 - 0x44c]
cmp	ecx, 0x7d
ja	0x1400197a0
ja	0x1400197a0
lea	r9, [rip + 0xa265f]
movsxd	rcx, dword ptr [r9 + rcx*4]
add	rcx, r9
jmp	rcx
jmp	rcx
nop	word ptr [rax + rax]
cmp	r8d, 0x3f0
jg	0x1400197b0
jg	0x1400197b0
cmp	r8d, 0x3e3
jle	0x1400197a0
jle	0x1400197a0
lea	ecx, [r8 - 0x3e4]
cmp	ecx, 0xc
ja	0x1400197a0
ja	0x1400197a0
lea	r9, [rip + 0xa2817]
movsxd	rcx, dword ptr [r9 + rcx*4]
add	rcx, r9
jmp	rcx
jmp	rcx
nop	word ptr [rax + rax]
cmp	r8d, 0x5b4
jg	0x140019758
jg	0x140019758
cmp	r8d, 0x56f
jle	0x140019ed0
jle	0x140019ed0
lea	ecx, [r8 - 0x570]
cmp	ecx, 0x44
ja	0x1400197a0
ja	0x1400197a0
lea	r9, [rip + 0xa2813]
movsxd	rcx, dword ptr [r9 + rcx*4]
add	rcx, r9
jmp	rcx
jmp	rcx
nop	word ptr [rax + rax]
cmp	r8d, 0x962
je	0x1400197d8
je	0x1400197d8
jg	0x140019f00
jg	0x140019f00
cmp	r8d, 0x89a
je	0x140019f3a
je	0x140019f3a
cmp	r8d, 0x961
je	0x140019f28
je	0x140019f28
cmp	r8d, 0x718
jne	0x1400197a0
jne	0x1400197a0
lea	rdx, [rip + 0x9c6ef]
mov	dword ptr [rcx], 5
mov	qword ptr [rcx + 8], rdx
ret	
ret	
nop	dword ptr [rax]
mov	dword ptr [rax], r8d
mov	qword ptr [rax + 8], rdx
ret	
ret	
nop	dword ptr [rax + rax]
cmp	r8d, 0x41d
je	0x140019f5e
je	0x140019f5e
cmp	r8d, 0x42b
jne	0x1400197a0
jne	0x1400197a0
lea	rdx, [rip + 0x9c6b3]
mov	dword ptr [rcx], 0xe
mov	qword ptr [rcx + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c6a1]
mov	dword ptr [rcx], 0xb
mov	qword ptr [rcx + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c68f]
mov	dword ptr [rax], 0x16
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c67d]
mov	dword ptr [rax], 6
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c66b]
mov	dword ptr [rax], 0xe
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c659]
mov	dword ptr [rax], 0xb
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c647]
mov	dword ptr [rax], 0xb
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c635]
mov	dword ptr [rax], 0x16
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c623]
mov	dword ptr [rax], 0x14
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c611]
mov	dword ptr [rax], 4
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c5ff]
mov	dword ptr [rax], 0x20
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c5ed]
mov	dword ptr [rax], 5
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c5db]
mov	dword ptr [rax], 0x1c
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c5c9]
mov	dword ptr [rax], 0x16
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c5b7]
mov	dword ptr [rax], 0xb
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c5a5]
mov	dword ptr [rax], 0x1e
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c593]
mov	dword ptr [rax], 0x13
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c581]
mov	dword ptr [rax], 2
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c56f]
mov	dword ptr [rax], 2
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c55d]
mov	dword ptr [rax], 0x18
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c54b]
mov	dword ptr [rax], 0xd
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c539]
mov	dword ptr [rax], 0
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c527]
mov	dword ptr [rax], 0x10
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c515]
mov	dword ptr [rax], 0x17
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c503]
mov	dword ptr [rax], 0x28
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c4f1]
mov	dword ptr [rax], 2
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c4df]
mov	dword ptr [rax], 2
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c4cd]
mov	dword ptr [rax], 3
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c4bb]
mov	dword ptr [rax], 0x10
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c4a9]
mov	dword ptr [rax], 0x16
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c497]
mov	dword ptr [rax], 0x29
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c485]
mov	dword ptr [rax], 5
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c473]
mov	dword ptr [rax], 2
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c461]
mov	dword ptr [rax], 0x10
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c44f]
mov	dword ptr [rax], 0xb
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c43d]
mov	dword ptr [rax], 0x10
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c42b]
mov	dword ptr [rax], 0x11
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c419]
mov	dword ptr [rax], 8
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c407]
mov	dword ptr [rax], 8
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c3f5]
mov	dword ptr [rax], 8
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c3e3]
mov	dword ptr [rax], 8
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c3d1]
mov	dword ptr [rax], 5
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c3bf]
mov	dword ptr [rax], 0x26
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c3ad]
mov	dword ptr [rax], 0x16
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c39b]
mov	dword ptr [rax], 0x16
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c389]
mov	dword ptr [rax], 0x16
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c377]
mov	dword ptr [rax], 8
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c365]
mov	dword ptr [rax], 0x16
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c353]
mov	dword ptr [rax], 0x10
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c341]
mov	dword ptr [rax], 5
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c32f]
mov	dword ptr [rax], 0x16
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c31d]
mov	dword ptr [rax], 0x16
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c30b]
mov	dword ptr [rax], 0x10
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c2f9]
mov	dword ptr [rax], 0x10
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c2e7]
mov	dword ptr [rax], 0x27
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c2d5]
mov	dword ptr [rax], 0x1c
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c2c3]
mov	dword ptr [rax], 0x28
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c2b1]
mov	dword ptr [rax], 2
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c29f]
mov	dword ptr [rax], 2
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c28d]
mov	dword ptr [rax], 0x28
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c27b]
mov	dword ptr [rax], 5
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c269]
mov	dword ptr [rax], 2
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c257]
mov	dword ptr [rax], 2
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c245]
mov	dword ptr [rax], 0x11
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c233]
mov	dword ptr [rax], 1
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c221]
mov	dword ptr [rax], 9
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c20f]
mov	dword ptr [rax], 0xc
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c1fd]
mov	dword ptr [rax], 0x16
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c1eb]
mov	dword ptr [rax], 0xc
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c1d9]
mov	dword ptr [rax], 0x13
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c1c7]
mov	dword ptr [rax], 0x12
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c1b5]
mov	dword ptr [rax], 0x6b
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c1a3]
mov	dword ptr [rax], 4
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c191]
mov	dword ptr [rax], 0x13
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c17f]
mov	dword ptr [rax], 5
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c16d]
mov	dword ptr [rax], 5
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c15b]
mov	dword ptr [rax], 0x1f
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c149]
mov	dword ptr [rax], 0x24
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c137]
mov	dword ptr [rax], 5
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c125]
mov	dword ptr [rax], 5
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c113]
mov	dword ptr [rax], 5
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c101]
mov	dword ptr [rax], 5
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c0ef]
mov	dword ptr [rax], 5
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c0dd]
mov	dword ptr [rax], 5
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c0cb]
mov	dword ptr [rax], 5
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c0b9]
mov	dword ptr [rax], 5
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c0a7]
mov	dword ptr [rax], 0x1c
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c095]
mov	dword ptr [rax], 1
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c083]
mov	dword ptr [rax], 0x16
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c071]
mov	dword ptr [rax], 0x20
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c05f]
mov	dword ptr [rax], 0x73
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c04d]
mov	dword ptr [rax], 0x10
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c03b]
mov	dword ptr [rax], 0xb
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c029]
mov	dword ptr [rax], 0xb
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c017]
mov	dword ptr [rax], 0xb
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9c005]
mov	dword ptr [rax], 0xb
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9bff3]
mov	dword ptr [rax], 0xb
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9bfe1]
mov	dword ptr [rax], 0x1b
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9bfcf]
mov	dword ptr [rax], 5
mov	qword ptr [rax + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9bfbd]
mov	dword ptr [rax], 0x11
mov	qword ptr [rax + 8], rdx
ret	
ret	
nop	
cmp	r8d, 0x522
je	0x140019f4c
je	0x140019f4c
cmp	r8d, 0x534
jne	0x1400197a0
jne	0x1400197a0
lea	rdx, [rip + 0x9bf93]
mov	dword ptr [rcx], 0x16
mov	qword ptr [rcx + 8], rdx
ret	
ret	
nop	dword ptr [rax + rax]
cmp	r8d, 0x964
je	0x140019f70
je	0x140019f70
cmp	r8d, 0x2095
jne	0x1400197a0
jne	0x1400197a0
lea	rdx, [rip + 0x9bf63]
mov	dword ptr [rcx], 5
mov	qword ptr [rcx + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9bf51]
mov	dword ptr [rcx], 0xb
mov	qword ptr [rcx + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9bf3f]
mov	dword ptr [rcx], 0x16
mov	qword ptr [rcx + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9bf2d]
mov	dword ptr [rcx], 1
mov	qword ptr [rcx + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9bf1b]
mov	dword ptr [rcx], 0x10
mov	qword ptr [rcx + 8], rdx
ret	
ret	
lea	rdx, [rip + 0x9bf09]
mov	dword ptr [rcx], 0xb
mov	qword ptr [rcx + 8], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0xa1531]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x58
xor	edx, edx
mov	r9d, 0x400
lea	rax, [rsp + 0x48]
mov	rbx, rcx
mov	qword ptr [rsp + 0x48], 0
mov	ecx, 0x1100
mov	qword ptr [rsp + 0x30], 0
mov	dword ptr [rsp + 0x28], 0
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [rip + 0xcc3e8]
call	qword ptr [rip + 0xcc3e8]
test	eax, eax
je	0x14001a040
je	0x14001a040
mov	rsi, qword ptr [rsp + 0x48]
mov	r8d, eax
cmp	eax, 3
ja	0x14001a020
ja	0x14001a020
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x14001a064
je	0x14001a064
add	r8, rsi
mov	rdx, rsi
mov	rcx, rbx
call	0x14009d670
call	0x14009d670
mov	rcx, rsi
call	qword ptr [rip + 0xcc40c]
call	qword ptr [rip + 0xcc40c]
mov	rax, rbx
add	rsp, 0x58
pop	rbx
pop	rsi
ret	
ret	
nop	
lea	rdx, [rsi + r8 - 3]
cmp	word ptr [rdx], 0xd2e
jne	0x140019ff1
jne	0x140019ff1
cmp	byte ptr [rdx + 2], 0xa
jne	0x140019ff1
jne	0x140019ff1
lea	r8d, [rax - 3]
jmp	0x140019ff1
jmp	0x140019ff1
nop	dword ptr [rax + rax]
lea	rax, [rbx + 0x10]
lea	r8, [rip + 0xa2071]
mov	rcx, rbx
mov	qword ptr [rbx], rax
lea	rdx, [r8 - 0x12]
call	0x14009d670
call	0x14009d670
mov	rax, rbx
add	rsp, 0x58
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0xa200d]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rbx, rax
mov	rcx, rsi
call	qword ptr [rip + 0xcc3a4]
call	qword ptr [rip + 0xcc3a4]
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
cmp	edx, dword ptr [r8]
je	0x14001a0a0
je	0x14001a0a0
ret	
ret	
nop	dword ptr [rax + rax]
cmp	qword ptr [r8 + 8], rcx
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0xa1409]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	ecx, r8d
call	0x1400159f8
call	0x1400159f8
mov	rsi, rax
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x14001a101
je	0x14001a101
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d670
call	0x14009d670
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0xa1f70]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
lea	rax, [rip + 0x9eef9]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0xa0ab9]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x9ef01]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0xa0a69]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	ecx, 1
cmp	rdx, rax
jb	0x14001a16b
jb	0x14001a16b
mov	rcx, qword ptr [rax - 0x18]
lea	rax, [rax + rcx*2]
cmp	rax, rdx
setb	cl
mov	eax, ecx
ret	
ret	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
mov	rdi, r8
call	0x140015a60
call	0x140015a60
mov	r8, rdi
mov	rdx, rbx
mov	rcx, rsi
mov	r9, rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14001a1a0
jmp	0x14001a1a0
mov	r11, qword ptr [rcx]
mov	r10, qword ptr [r11 - 0x18]
test	r10, r10
je	0x14001a20a
je	0x14001a20a
test	r9, r9
je	0x14001a20a
je	0x14001a20a
sub	r10, 1
cmp	r10, r8
cmova	r10, r8
test	rdx, rdx
je	0x14001a1e8
je	0x14001a1e8
movzx	r8d, word ptr [r11 + r10*2]
mov	rcx, r9
mov	rax, rdx
jmp	0x14001a1da
jmp	0x14001a1da
nop	
add	rax, 2
sub	rcx, 1
je	0x14001a200
je	0x14001a200
cmp	r8w, word ptr [rax]
jne	0x14001a1d0
jne	0x14001a1d0
mov	rax, r10
ret	
ret	
nop	dword ptr [rax]
sub	r10, 1
jb	0x14001a1e0
jb	0x14001a1e0
sub	r10, 1
jae	0x14001a1e8
jae	0x14001a1e8
jmp	0x14001a1e0
jmp	0x14001a1e0
nop	word ptr cs:[rax + rax]
sub	r10, 1
jae	0x14001a1c1
jae	0x14001a1c1
mov	rax, r10
ret	
ret	
mov	r10, 0xffffffffffffffff
mov	rax, r10
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	r9, qword ptr [rdx - 0x18]
jmp	0x14001a1a0
jmp	0x14001a1a0
nop	
nop	
nop	
nop	
mov	rax, 0xffffffffffffffff
mov	rcx, qword ptr [rcx]
mov	r9, qword ptr [rcx - 0x18]
test	r9, r9
je	0x14001a26c
je	0x14001a26c
sub	r9, 1
mov	rax, r8
cmp	r9, r8
cmovbe	rax, r9
nop	dword ptr [rax]
mov	r8, rax
sub	rax, 1
cmp	dx, word ptr [rcx + rax*2 + 2]
je	0x14001a270
je	0x14001a270
cmp	rax, -1
jne	0x14001a258
jne	0x14001a258
ret	
ret	
nop	dword ptr [rax]
mov	rax, r8
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
mov	rdi, r8
call	0x140015a60
call	0x140015a60
mov	r8, rdi
mov	rdx, rbx
mov	rcx, rsi
mov	r9, rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14001a2b0
jmp	0x14001a2b0
push	rbx
test	r9, r9
je	0x14001a301
je	0x14001a301
mov	rbx, qword ptr [rcx]
mov	r11, qword ptr [rbx - 0x18]
cmp	r8, r11
jae	0x14001a301
jae	0x14001a301
nop	word ptr [rax + rax]
test	rdx, rdx
je	0x14001a2f8
je	0x14001a2f8
movzx	r10d, word ptr [rbx + r8*2]
mov	rcx, r9
mov	rax, rdx
jmp	0x14001a2ea
jmp	0x14001a2ea
nop	word ptr [rax + rax]
add	rax, 2
sub	rcx, 1
je	0x14001a310
je	0x14001a310
cmp	r10w, word ptr [rax]
jne	0x14001a2e0
jne	0x14001a2e0
mov	rax, r8
pop	rbx
ret	
ret	
nop	dword ptr [rax]
add	r8, 1
cmp	r8, r11
jb	0x14001a2c8
jb	0x14001a2c8
mov	r8, 0xffffffffffffffff
mov	rax, r8
pop	rbx
ret	
ret	
nop	dword ptr [rax]
add	r8, 1
cmp	r8, r11
jb	0x14001a2cd
jb	0x14001a2cd
mov	r8, 0xffffffffffffffff
jmp	0x14001a308
jmp	0x14001a308
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	r9, qword ptr [rdx - 0x18]
jmp	0x14001a2b0
jmp	0x14001a2b0
nop	
nop	
nop	
nop	
movzx	edx, dx
jmp	0x14001a830
jmp	0x14001a830
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
movabs	rax, 0x1ffffffffffffffc
add	rdx, rax
mov	rax, qword ptr [rcx]
sub	rdx, qword ptr [rax - 0x18]
cmp	rdx, r8
jb	0x14001a382
jb	0x14001a382
add	rsp, 0x28
ret	
ret	
mov	rcx, r9
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
mov	rdi, r8
call	0x140015a60
call	0x140015a60
mov	r8, rdi
mov	rdx, rbx
mov	rcx, rsi
mov	r9, rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14001a3c0
jmp	0x14001a3c0
mov	r10, 0xffffffffffffffff
mov	r11, qword ptr [rcx]
mov	rax, qword ptr [r11 - 0x18]
test	rax, rax
je	0x14001a416
je	0x14001a416
sub	rax, 1
mov	r10, r8
cmp	rax, r8
cmovbe	r10, rax
test	r9, r9
je	0x14001a416
je	0x14001a416
test	rdx, rdx
je	0x14001a416
je	0x14001a416
nop	dword ptr [rax + rax]
movzx	r8d, word ptr [r11 + r10*2]
mov	rcx, r9
mov	rax, rdx
jmp	0x14001a40a
jmp	0x14001a40a
nop	dword ptr [rax]
add	rax, 2
sub	rcx, 1
je	0x14001a416
je	0x14001a416
cmp	r8w, word ptr [rax]
jne	0x14001a400
jne	0x14001a400
sub	r10, 1
jae	0x14001a3f0
jae	0x14001a3f0
mov	rax, r10
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	r9, qword ptr [rdx - 0x18]
jmp	0x14001a3c0
jmp	0x14001a3c0
nop	
nop	
nop	
nop	
mov	rax, 0xffffffffffffffff
mov	rcx, qword ptr [rcx]
mov	r9, qword ptr [rcx - 0x18]
test	r9, r9
je	0x14001a464
je	0x14001a464
sub	r9, 1
mov	rax, r8
cmp	r9, r8
cmovbe	rax, r9
jmp	0x14001a45e
jmp	0x14001a45e
nop	dword ptr [rax + rax]
sub	rax, 1
jb	0x14001a464
jb	0x14001a464
cmp	word ptr [rcx + rax*2], dx
je	0x14001a458
je	0x14001a458
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rdi, rcx
mov	rcx, rdx
mov	rsi, rdx
mov	rbx, r8
call	0x140015a60
call	0x140015a60
mov	rdx, qword ptr [rdi]
mov	r11, rax
mov	r8, qword ptr [rdx - 0x18]
cmp	rbx, r8
jae	0x14001a4e0
jae	0x14001a4e0
test	rsi, rsi
je	0x14001a4ef
je	0x14001a4ef
test	rax, rax
je	0x14001a4ef
je	0x14001a4ef
movzx	r10d, word ptr [rdx + rbx*2]
mov	rax, rbx
nop	dword ptr [rax]
mov	r9, r11
mov	rcx, rsi
jmp	0x14001a4ca
jmp	0x14001a4ca
nop	dword ptr [rax + rax]
add	rcx, 2
sub	r9, 1
je	0x14001a4e7
je	0x14001a4e7
cmp	word ptr [rcx], r10w
jne	0x14001a4c0
jne	0x14001a4c0
add	rax, 1
cmp	rax, r8
je	0x14001a4e0
je	0x14001a4e0
movzx	r10d, word ptr [rdx + rax*2]
jmp	0x14001a4b0
jmp	0x14001a4b0
mov	rax, 0xffffffffffffffff
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
mov	r11, qword ptr [rcx]
mov	rbx, rdx
mov	rdx, qword ptr [r11 - 0x18]
cmp	r8, rdx
jae	0x14001a549
jae	0x14001a549
test	rbx, rbx
je	0x14001a550
je	0x14001a550
test	r9, r9
je	0x14001a550
je	0x14001a550
nop	word ptr [rax + rax]
movzx	r10d, word ptr [r11 + r8*2]
mov	rcx, r9
mov	rax, rbx
jmp	0x14001a53a
jmp	0x14001a53a
nop	dword ptr [rax]
add	rax, 2
sub	rcx, 1
je	0x14001a550
je	0x14001a550
cmp	word ptr [rax], r10w
jne	0x14001a530
jne	0x14001a530
add	r8, 1
cmp	r8, rdx
jne	0x14001a520
jne	0x14001a520
mov	r8, 0xffffffffffffffff
mov	rax, r8
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
mov	r11, qword ptr [rdx]
mov	rbx, qword ptr [r11 - 0x18]
mov	rax, r8
mov	r8, qword ptr [rcx]
mov	r10, qword ptr [r8 - 0x18]
cmp	rax, r10
jae	0x14001a5b0
jae	0x14001a5b0
movzx	r9d, word ptr [r8 + rax*2]
test	rbx, rbx
je	0x14001a5b7
je	0x14001a5b7
nop	dword ptr [rax]
mov	rcx, rbx
mov	rdx, r11
jmp	0x14001a59a
jmp	0x14001a59a
add	rdx, 2
sub	rcx, 1
je	0x14001a5b7
je	0x14001a5b7
cmp	r9w, word ptr [rdx]
jne	0x14001a590
jne	0x14001a590
add	rax, 1
cmp	rax, r10
je	0x14001a5b0
je	0x14001a5b0
movzx	r9d, word ptr [r8 + rax*2]
jmp	0x14001a588
jmp	0x14001a588
mov	rax, 0xffffffffffffffff
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	rcx, qword ptr [rax - 0x18]
cmp	r8, rcx
jb	0x14001a5d9
jb	0x14001a5d9
jmp	0x14001a5e8
jmp	0x14001a5e8
nop	
add	r8, 1
cmp	r8, rcx
je	0x14001a5e8
je	0x14001a5e8
cmp	word ptr [rax + r8*2], dx
je	0x14001a5d0
je	0x14001a5d0
mov	rax, r8
ret	
ret	
nop	dword ptr [rax]
mov	rax, 0xffffffffffffffff
ret	
ret	
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	r8, qword ptr [rax - 0x18]
cmp	rdx, r8
jae	0x14001a609
jae	0x14001a609
lea	rax, [rax + rdx*2]
add	rsp, 0x28
ret	
ret	
lea	rcx, [rip + 0x9eec8]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	rdx, qword ptr [rax - 0x18]
lea	rax, [rax + rdx*2]
ret	
ret	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x10]
shr	eax, 0x1f
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0xa3fe9]
mov	edx, dword ptr [rax]
test	edx, edx
jne	0x14001a660
jne	0x14001a660
mov	eax, dword ptr [rcx + 0x10]
test	eax, eax
setg	al
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	eax, dword ptr [rcx + 0x10]
test	eax, eax
setg	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	rdx, qword ptr [rax - 0x18]
lea	rax, [rax + rdx*2 - 2]
ret	
ret	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	rdx, qword ptr [rax - 0x18]
lea	rax, [rax + rdx*2]
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	r10, rcx
mov	rcx, rdx
mov	rax, r9
mov	rdx, qword ptr [r10]
mov	rbx, qword ptr [rdx - 0x18]
cmp	rbx, r9
jb	0x14001a6e7
jb	0x14001a6e7
sub	rbx, r9
cmp	rbx, r8
cmova	rbx, r8
test	rbx, rbx
je	0x14001a6cc
je	0x14001a6cc
lea	rdx, [rdx + r9*2]
cmp	rbx, 1
je	0x14001a6d8
je	0x14001a6d8
lea	r8, [rbx + rbx]
call	0x140015998
call	0x140015998
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	r9, rbx
mov	r8, rax
lea	rdx, [rip + 0x9ee28]
lea	rcx, [rip + 0x9eda5]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
mov	rdi, r8
call	0x140015a60
call	0x140015a60
mov	r8, rdi
mov	rdx, rbx
mov	rcx, rsi
mov	r9, rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14001a750
jmp	0x14001a750
push	rsi
push	rbx
mov	r11, qword ptr [rcx]
mov	rax, qword ptr [r11 - 0x18]
mov	r10, rdx
test	r9, r9
je	0x14001a7f0
je	0x14001a7f0
mov	rcx, 0xffffffffffffffff
cmp	r8, rax
jae	0x14001a7e2
jae	0x14001a7e2
lea	rbx, [r11 + rax*2]
sub	rax, r8
lea	rdx, [r11 + r8*2]
cmp	rax, r9
jb	0x14001a7e2
jb	0x14001a7e2
mov	r8d, 1
sub	r8, r9
add	rax, r8
je	0x14001a7e2
je	0x14001a7e2
movzx	ecx, word ptr [r10]
jmp	0x14001a7a2
jmp	0x14001a7a2
nop	dword ptr [rax]
add	rdx, 2
sub	rax, 1
je	0x14001a7db
je	0x14001a7db
cmp	cx, word ptr [rdx]
jne	0x14001a798
jne	0x14001a798
cmp	r10, rdx
je	0x14001a808
je	0x14001a808
xor	eax, eax
jmp	0x14001a7b9
jmp	0x14001a7b9
add	rax, 1
cmp	r9, rax
je	0x14001a808
je	0x14001a808
movzx	esi, word ptr [r10 + rax*2]
cmp	word ptr [rdx + rax*2], si
je	0x14001a7b0
je	0x14001a7b0
add	rdx, 2
mov	rax, rbx
sub	rax, rdx
sar	rax, 1
cmp	rax, r9
jb	0x14001a7db
jb	0x14001a7db
add	rax, r8
jne	0x14001a7a2
jne	0x14001a7a2
mov	rcx, 0xffffffffffffffff
mov	rax, rcx
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
cmp	rax, r8
mov	rcx, 0xffffffffffffffff
cmovae	rcx, r8
mov	rax, rcx
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rdx
sub	rcx, r11
sar	rcx, 1
mov	rax, rcx
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	r9, qword ptr [rdx - 0x18]
jmp	0x14001a750
jmp	0x14001a750
nop	
nop	
nop	
nop	
mov	rax, 0xffffffffffffffff
mov	r9, qword ptr [rcx]
mov	rcx, qword ptr [r9 - 0x18]
cmp	r8, rcx
jae	0x14001a865
jae	0x14001a865
sub	rcx, r8
lea	rax, [r9 + r8*2]
jmp	0x14001a85a
jmp	0x14001a85a
nop	dword ptr [rax]
add	rax, 2
sub	rcx, 1
je	0x14001a870
je	0x14001a870
cmp	word ptr [rax], dx
jne	0x14001a850
jne	0x14001a850
sub	rax, r9
sar	rax, 1
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rax, 0xffffffffffffffff
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	rax, rcx
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	rax, rcx
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
cmp	qword ptr [rax - 0x18], 0
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
mov	rdi, r8
call	0x140015a60
call	0x140015a60
mov	r8, rdi
mov	rdx, rbx
mov	rcx, rsi
mov	r9, rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14001a920
jmp	0x14001a920
mov	r10, 0xffffffffffffffff
mov	rcx, qword ptr [rcx]
mov	rax, qword ptr [rcx - 0x18]
cmp	rax, r9
jb	0x14001a98a
jb	0x14001a98a
sub	rax, r9
mov	r10, r8
cmp	rax, r8
cmovbe	r10, rax
test	r9, r9
sete	r8b
lea	rcx, [rcx + r10*2]
cmp	rdx, rcx
je	0x14001a98a
je	0x14001a98a
test	r8b, r8b
jne	0x14001a98a
jne	0x14001a98a
test	rdx, rdx
je	0x14001a975
je	0x14001a975
xor	eax, eax
jmp	0x14001a969
jmp	0x14001a969
nop	
add	rax, 1
cmp	r9, rax
je	0x14001a98a
je	0x14001a98a
movzx	r11d, word ptr [rdx + rax*2]
cmp	word ptr [rcx + rax*2], r11w
je	0x14001a960
je	0x14001a960
lea	rax, [r10 - 1]
sub	rcx, 2
test	r10, r10
je	0x14001a990
je	0x14001a990
mov	r10, rax
cmp	rdx, rcx
jne	0x14001a950
jne	0x14001a950
mov	rax, r10
ret	
ret	
nop	
mov	r10, 0xffffffffffffffff
jmp	0x14001a98a
jmp	0x14001a98a
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	r9, qword ptr [rdx - 0x18]
jmp	0x14001a920
jmp	0x14001a920
nop	
nop	
nop	
nop	
mov	rax, 0xffffffffffffffff
mov	rcx, qword ptr [rcx]
mov	r9, qword ptr [rcx - 0x18]
test	r9, r9
je	0x14001a9ec
je	0x14001a9ec
sub	r9, 1
mov	rax, r8
cmp	r9, r8
cmovbe	rax, r9
nop	dword ptr [rax]
mov	r8, rax
sub	rax, 1
cmp	word ptr [rcx + rax*2 + 2], dx
je	0x14001a9f0
je	0x14001a9f0
cmp	rax, -1
jne	0x14001a9d8
jne	0x14001a9d8
ret	
ret	
nop	dword ptr [rax]
mov	rax, r8
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
sub	rax, 0x18
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	rax, rcx
mov	rcx, qword ptr [rdx - 0x18]
lea	rdx, [rdx + rcx*2]
mov	qword ptr [rax], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rdx, qword ptr [rdx]
mov	rax, qword ptr [rdx - 0x18]
mov	rbx, rcx
cmp	rax, r8
jb	0x14001aa95
jb	0x14001aa95
sub	rax, r8
lea	rcx, [rdx + r8*2]
cmp	rax, r9
cmova	rax, r9
xor	r9d, r9d
add	rax, r8
lea	r8, [rsp + 0x2f]
lea	rax, [rdx + rax*2]
mov	rdx, rax
call	0x140068b20
call	0x140068b20
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
mov	r9, rax
lea	rdx, [rip + 0x9eb9e]
lea	rcx, [rip + 0x9e9fa]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	rdx, qword ptr [rax - 0x18]
lea	rax, [rax + rdx*2]
ret	
ret	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rsi, qword ptr [rax - 0x18]
mov	rdi, rcx
mov	rcx, rdx
mov	rbx, rdx
call	0x140015a60
call	0x140015a60
mov	rdx, qword ptr [rdi]
mov	r8, rsi
cmp	rax, rsi
cmovbe	r8, rax
cmp	rbx, rdx
je	0x14001ab28
je	0x14001ab28
test	r8, r8
je	0x14001ab28
je	0x14001ab28
test	rbx, rbx
setne	r9b
test	rdx, rdx
setne	cl
cmp	r9b, cl
je	0x14001ab50
je	0x14001ab50
neg	rbx
sbb	eax, eax
or	eax, 1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
sub	rsi, rax
mov	eax, 0x7fffffff
cmp	rsi, 0x7fffffff
jg	0x14001ab48
jg	0x14001ab48
cmp	rsi, -0x80000000
mov	eax, 0x80000000
cmovge	eax, esi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
xor	ecx, ecx
jmp	0x14001ab61
jmp	0x14001ab61
nop	dword ptr [rax]
add	rcx, 1
cmp	r8, rcx
je	0x14001ab28
je	0x14001ab28
movzx	edi, word ptr [rbx + rcx*2]
cmp	word ptr [rdx + rcx*2], di
je	0x14001ab58
je	0x14001ab58
sbb	eax, eax
or	eax, 1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	r8, qword ptr [rcx]
mov	rax, rdx
mov	rdx, qword ptr [r8 - 0x18]
mov	rcx, qword ptr [rax]
mov	r9, rdx
mov	r10, qword ptr [rcx - 0x18]
cmp	r10, rdx
cmovbe	r9, r10
test	r9, r9
je	0x14001abd0
je	0x14001abd0
cmp	rcx, r8
je	0x14001abd0
je	0x14001abd0
xor	eax, eax
jmp	0x14001abb9
jmp	0x14001abb9
nop	dword ptr [rax]
add	rax, 1
cmp	rax, r9
je	0x14001abd0
je	0x14001abd0
movzx	r11d, word ptr [rcx + rax*2]
cmp	word ptr [r8 + rax*2], r11w
je	0x14001abb0
je	0x14001abb0
sbb	eax, eax
or	eax, 1
ret	
ret	
nop	dword ptr [rax + rax]
sub	rdx, r10
mov	eax, 0x7fffffff
cmp	rdx, 0x7fffffff
jg	0x14001abca
jg	0x14001abca
cmp	rdx, -0x80000000
mov	eax, 0x80000000
cmovge	eax, edx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rbx, qword ptr [rax - 0x18]
mov	rbp, rcx
mov	rdi, rdx
mov	rsi, r9
cmp	rbx, rdx
jb	0x14001acd1
jb	0x14001acd1
sub	rbx, rdx
mov	rcx, r9
cmp	rbx, r8
cmova	rbx, r8
call	0x140015a60
call	0x140015a60
mov	rdx, qword ptr [rbp]
cmp	rax, rbx
mov	r8, rbx
lea	rcx, [rdx + rdi*2]
cmovbe	r8, rax
cmp	rcx, rsi
je	0x14001ac78
je	0x14001ac78
test	r8, r8
je	0x14001ac78
je	0x14001ac78
test	rsi, rsi
setne	r9b
test	rcx, rcx
setne	dl
cmp	r9b, dl
je	0x14001aca8
je	0x14001aca8
neg	rsi
sbb	eax, eax
or	eax, 1
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
sub	rbx, rax
mov	eax, 0x7fffffff
cmp	rbx, 0x7fffffff
jg	0x14001ac98
jg	0x14001ac98
cmp	rbx, -0x80000000
mov	eax, 0x80000000
cmovge	eax, ebx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
xor	edx, edx
jmp	0x14001acb9
jmp	0x14001acb9
nop	dword ptr [rax]
add	rdx, 1
cmp	r8, rdx
je	0x14001ac78
je	0x14001ac78
movzx	edi, word ptr [rsi + rdx*2]
cmp	word ptr [rcx + rdx*2], di
je	0x14001acb0
je	0x14001acb0
sbb	eax, eax
or	eax, 1
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	r8, rdx
mov	r9, rbx
lea	rdx, [rip + 0x9e851]
lea	rcx, [rip + 0x9e7bb]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r11, qword ptr [rcx]
mov	r10, qword ptr [rsp + 0x50]
mov	rax, qword ptr [r11 - 0x18]
cmp	rax, rdx
jb	0x14001ad86
jb	0x14001ad86
sub	rax, rdx
mov	rcx, r10
lea	rdx, [r11 + rdx*2]
cmp	rax, r8
cmovbe	r8, rax
cmp	r8, r10
cmovbe	rcx, r8
test	rcx, rcx
je	0x14001ad60
je	0x14001ad60
cmp	rdx, r9
je	0x14001ad60
je	0x14001ad60
mov	eax, 1
test	r9, r9
je	0x14001ad81
je	0x14001ad81
xor	eax, eax
jmp	0x14001ad49
jmp	0x14001ad49
nop	dword ptr [rax]
add	rax, 1
cmp	rcx, rax
je	0x14001ad60
je	0x14001ad60
movzx	r11d, word ptr [r9 + rax*2]
cmp	word ptr [rdx + rax*2], r11w
je	0x14001ad40
je	0x14001ad40
sbb	eax, eax
or	eax, 1
add	rsp, 0x28
ret	
ret	
nop	
sub	r8, r10
mov	eax, 0x7fffffff
cmp	r8, 0x7fffffff
jg	0x14001ad81
jg	0x14001ad81
cmp	r8, -0x80000000
mov	eax, 0x80000000
cmovge	eax, r8d
add	rsp, 0x28
ret	
ret	
mov	r8, rdx
mov	r9, rax
lea	rdx, [rip + 0x9e79c]
lea	rcx, [rip + 0x9e706]
call	0x1400aed20
call	0x1400aed20
nop	
sub	rsp, 0x28
mov	r11, qword ptr [rcx]
mov	rax, qword ptr [r11 - 0x18]
cmp	rax, rdx
jb	0x14001ae26
jb	0x14001ae26
sub	rax, rdx
mov	rcx, qword ptr [r9]
lea	rdx, [r11 + rdx*2]
cmp	rax, r8
cmovbe	r8, rax
mov	r10, qword ptr [rcx - 0x18]
mov	r9, r8
cmp	r10, r8
cmovbe	r9, r10
test	r9, r9
je	0x14001ae00
je	0x14001ae00
cmp	rdx, rcx
je	0x14001ae00
je	0x14001ae00
xor	eax, eax
jmp	0x14001ade9
jmp	0x14001ade9
nop	dword ptr [rax]
add	rax, 1
cmp	r9, rax
je	0x14001ae00
je	0x14001ae00
movzx	r11d, word ptr [rcx + rax*2]
cmp	word ptr [rdx + rax*2], r11w
je	0x14001ade0
je	0x14001ade0
sbb	eax, eax
or	eax, 1
add	rsp, 0x28
ret	
ret	
nop	
sub	r8, r10
mov	eax, 0x7fffffff
cmp	r8, 0x7fffffff
jg	0x14001ae21
jg	0x14001ae21
cmp	r8, -0x80000000
mov	eax, 0x80000000
cmovge	eax, r8d
add	rsp, 0x28
ret	
ret	
mov	r8, rdx
mov	r9, rax
lea	rdx, [rip + 0x9e6fc]
lea	rcx, [rip + 0x9e666]
call	0x1400aed20
call	0x1400aed20
nop	
push	rbx
sub	rsp, 0x20
mov	r10, qword ptr [rsp + 0x58]
mov	rax, rcx
mov	rcx, qword ptr [rsp + 0x50]
mov	r11, qword ptr [rax]
mov	rax, qword ptr [r11 - 0x18]
cmp	rax, rdx
jb	0x14001aef7
jb	0x14001aef7
mov	rbx, qword ptr [r9]
mov	r9, qword ptr [rbx - 0x18]
cmp	r9, rcx
jb	0x14001af10
jb	0x14001af10
sub	rax, rdx
lea	rdx, [r11 + rdx*2]
cmp	rax, r8
cmovbe	r8, rax
sub	r9, rcx
lea	rcx, [rbx + rcx*2]
cmp	r9, r10
cmova	r9, r10
mov	r10, r8
cmp	r9, r8
cmovbe	r10, r9
test	r10, r10
je	0x14001aed0
je	0x14001aed0
cmp	rcx, rdx
je	0x14001aed0
je	0x14001aed0
xor	eax, eax
jmp	0x14001aeb9
jmp	0x14001aeb9
nop	word ptr cs:[rax + rax]
add	rax, 1
cmp	r10, rax
je	0x14001aed0
je	0x14001aed0
movzx	ebx, word ptr [rcx + rax*2]
cmp	word ptr [rdx + rax*2], bx
je	0x14001aeb0
je	0x14001aeb0
sbb	eax, eax
or	eax, 1
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
sub	r8, r9
mov	eax, 0x7fffffff
cmp	r8, 0x7fffffff
jg	0x14001aef1
jg	0x14001aef1
cmp	r8, -0x80000000
mov	eax, 0x80000000
cmovge	eax, r8d
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	r8, rdx
mov	r9, rax
lea	rdx, [rip + 0x9e62b]
lea	rcx, [rip + 0x9e595]
call	0x1400aed20
call	0x1400aed20
mov	r8, rcx
lea	rdx, [rip + 0x9e615]
lea	rcx, [rip + 0x9e57f]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	rax, rcx
mov	rcx, qword ptr [rdx - 0x18]
lea	rdx, [rdx + rcx*2]
mov	qword ptr [rax], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rcx, qword ptr [rcx]
mov	r9, qword ptr [rcx - 0x18]
mov	rax, rdx
mov	rdx, r8
cmp	r9, rax
jb	0x14001af6b
jb	0x14001af6b
add	rsp, 0x28
ret	
ret	
mov	r8, rax
lea	rcx, [rip + 0x9e52b]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
sub	rax, rdx
cmp	rax, r8
cmova	rax, r8
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x10]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movabs	rax, 0x1ffffffffffffffc
ret	
ret	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
lea	rax, [rax + rdx*2]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movzx	eax, byte ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movzx	eax, byte ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	ecx, 1
cmp	rdx, rax
jb	0x14001b027
jb	0x14001b027
add	rax, qword ptr [rax - 0x18]
cmp	rax, rdx
setb	cl
mov	eax, ecx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
mov	rdi, r8
call	0x140015a08
call	0x140015a08
mov	r8, rdi
mov	rdx, rbx
mov	rcx, rsi
mov	r9, rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14001b060
jmp	0x14001b060
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbp, qword ptr [rcx]
mov	rbx, qword ptr [rbp - 0x18]
mov	rdi, rdx
mov	rsi, r9
test	rbx, rbx
je	0x14001b0c0
je	0x14001b0c0
test	r9, r9
je	0x14001b0c0
je	0x14001b0c0
sub	rbx, 1
cmp	rbx, r8
cmova	rbx, r8
jmp	0x14001b096
jmp	0x14001b096
nop	dword ptr [rax]
sub	rbx, 1
jb	0x14001b0ab
jb	0x14001b0ab
movsx	edx, byte ptr [rbp + rbx]
mov	r8, rsi
mov	rcx, rdi
call	0x140015988
call	0x140015988
test	rax, rax
je	0x14001b090
je	0x14001b090
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rbx, 0xffffffffffffffff
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	r9, qword ptr [rdx - 0x18]
jmp	0x14001b060
jmp	0x14001b060
nop	
nop	
nop	
nop	
mov	rax, 0xffffffffffffffff
mov	rcx, qword ptr [rcx]
mov	r9, qword ptr [rcx - 0x18]
test	r9, r9
je	0x14001b12b
je	0x14001b12b
sub	r9, 1
mov	rax, r8
cmp	r9, r8
cmovbe	rax, r9
nop	dword ptr [rax]
mov	r8, rax
sub	rax, 1
cmp	dl, byte ptr [rcx + rax + 1]
je	0x14001b130
je	0x14001b130
cmp	rax, -1
jne	0x14001b118
jne	0x14001b118
ret	
ret	
nop	dword ptr [rax]
mov	rax, r8
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbp, rcx
mov	rcx, rdx
mov	rsi, rdx
mov	rbx, r8
call	0x140015a08
call	0x140015a08
mov	rdi, rax
test	rax, rax
je	0x14001b18e
je	0x14001b18e
mov	rbp, qword ptr [rbp]
mov	r12, qword ptr [rbp - 0x18]
jmp	0x14001b189
jmp	0x14001b189
nop	dword ptr [rax]
movsx	edx, byte ptr [rbp + rbx]
mov	r8, rdi
mov	rcx, rsi
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x14001b1a0
jne	0x14001b1a0
add	rbx, 1
cmp	rbx, r12
jb	0x14001b170
jb	0x14001b170
mov	rax, 0xffffffffffffffff
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rdi, rdx
mov	rbx, r8
mov	rsi, r9
test	r9, r9
je	0x14001b1f6
je	0x14001b1f6
mov	rbp, qword ptr [rcx]
mov	r12, qword ptr [rbp - 0x18]
jmp	0x14001b1f1
jmp	0x14001b1f1
nop	dword ptr [rax]
movsx	edx, byte ptr [rbp + rbx]
mov	r8, rsi
mov	rcx, rdi
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x14001b210
jne	0x14001b210
add	rbx, 1
cmp	rbx, r12
jb	0x14001b1d8
jb	0x14001b1d8
mov	rax, 0xffffffffffffffff
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rdi, qword ptr [rdx]
mov	rsi, qword ptr [rdi - 0x18]
mov	rbx, r8
test	rsi, rsi
je	0x14001b266
je	0x14001b266
mov	rbp, qword ptr [rcx]
mov	r12, qword ptr [rbp - 0x18]
jmp	0x14001b261
jmp	0x14001b261
nop	word ptr [rax + rax]
movsx	edx, byte ptr [rbp + rbx]
mov	r8, rsi
mov	rcx, rdi
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x14001b280
jne	0x14001b280
add	rbx, 1
cmp	rbx, r12
jb	0x14001b248
jb	0x14001b248
mov	rax, 0xffffffffffffffff
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, 0xffffffffffffffff
mov	rsi, qword ptr [rcx]
mov	rax, r8
mov	r8, qword ptr [rsi - 0x18]
cmp	rax, r8
jae	0x14001b2c8
jae	0x14001b2c8
movsx	edx, dl
sub	r8, rax
lea	rcx, [rsi + rax]
call	0x140015988
call	0x140015988
mov	rdx, rax
sub	rdx, rsi
test	rax, rax
cmovne	rbx, rdx
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
movabs	rax, 0x3ffffffffffffff9
add	rdx, rax
mov	rax, qword ptr [rcx]
sub	rdx, qword ptr [rax - 0x18]
cmp	rdx, r8
jb	0x14001b312
jb	0x14001b312
add	rsp, 0x28
ret	
ret	
mov	rcx, r9
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, 0xffffffffffffffff
mov	r12, qword ptr [rcx]
mov	rbp, qword ptr [r12 - 0x18]
mov	rsi, rdx
mov	r13, r8
test	rbp, rbp
je	0x14001b364
je	0x14001b364
sub	rbp, 1
mov	rcx, rdx
mov	rbx, r13
call	0x140015a08
call	0x140015a08
cmp	rbp, r13
cmovbe	rbx, rbp
mov	rdi, rax
test	rax, rax
jne	0x14001b37e
jne	0x14001b37e
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
sub	rbx, 1
jb	0x14001b364
jb	0x14001b364
movsx	edx, byte ptr [r12 + rbx]
mov	r8, rdi
mov	rcx, rsi
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x14001b378
jne	0x14001b378
jmp	0x14001b364
jmp	0x14001b364
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, 0xffffffffffffffff
mov	rbp, qword ptr [rcx]
mov	rax, qword ptr [rbp - 0x18]
mov	rdi, rdx
mov	rsi, r9
test	rax, rax
je	0x14001b3d4
je	0x14001b3d4
sub	rax, 1
mov	rbx, r8
cmp	rax, r8
cmovbe	rbx, rax
test	r9, r9
jne	0x14001b3e6
jne	0x14001b3e6
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
sub	rbx, 1
jb	0x14001b3d4
jb	0x14001b3d4
movsx	edx, byte ptr [rbp + rbx]
mov	r8, rsi
mov	rcx, rdi
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x14001b3e0
jne	0x14001b3e0
jmp	0x14001b3d4
jmp	0x14001b3d4
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, 0xffffffffffffffff
mov	rsi, qword ptr [rcx]
mov	rax, qword ptr [rsi - 0x18]
test	rax, rax
je	0x14001b435
je	0x14001b435
mov	rbp, qword ptr [rdx]
sub	rax, 1
mov	rbx, r8
cmp	rax, r8
mov	rdi, qword ptr [rbp - 0x18]
cmovbe	rbx, rax
test	rdi, rdi
jne	0x14001b44e
jne	0x14001b44e
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
sub	rbx, 1
jb	0x14001b435
jb	0x14001b435
movsx	edx, byte ptr [rsi + rbx]
mov	r8, rdi
mov	rcx, rbp
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x14001b448
jne	0x14001b448
jmp	0x14001b435
jmp	0x14001b435
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, 0xffffffffffffffff
mov	rcx, qword ptr [rcx]
mov	r9, qword ptr [rcx - 0x18]
test	r9, r9
je	0x14001b4a3
je	0x14001b4a3
sub	r9, 1
mov	rax, r8
cmp	r9, r8
cmovbe	rax, r9
jmp	0x14001b49e
jmp	0x14001b49e
nop	dword ptr [rax + rax]
sub	rax, 1
jb	0x14001b4a3
jb	0x14001b4a3
cmp	byte ptr [rcx + rax], dl
je	0x14001b498
je	0x14001b498
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbp, rcx
mov	rcx, rdx
mov	rsi, rdx
mov	rbx, r8
call	0x140015a08
call	0x140015a08
mov	rbp, qword ptr [rbp]
mov	rdi, rax
mov	r12, qword ptr [rbp - 0x18]
cmp	rbx, r12
jae	0x14001b518
jae	0x14001b518
test	rax, rax
jne	0x14001b4f1
jne	0x14001b4f1
jmp	0x14001b506
jmp	0x14001b506
nop	word ptr [rax + rax]
add	rbx, 1
cmp	r12, rbx
je	0x14001b518
je	0x14001b518
movsx	edx, byte ptr [rbp + rbx]
mov	r8, rdi
mov	rcx, rsi
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x14001b4e8
jne	0x14001b4e8
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	rax, 0xffffffffffffffff
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbp, qword ptr [rcx]
mov	r12, qword ptr [rbp - 0x18]
mov	rdi, rdx
mov	rbx, r8
mov	rsi, r9
cmp	r8, r12
jae	0x14001b590
jae	0x14001b590
test	r9, r9
jne	0x14001b569
jne	0x14001b569
jmp	0x14001b57e
jmp	0x14001b57e
nop	word ptr cs:[rax + rax]
add	rbx, 1
cmp	rbx, r12
je	0x14001b590
je	0x14001b590
movsx	edx, byte ptr [rbp + rbx]
mov	r8, rsi
mov	rcx, rdi
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x14001b560
jne	0x14001b560
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	rax, 0xffffffffffffffff
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rdi, qword ptr [rcx]
mov	rsi, qword ptr [rdx]
mov	r12, qword ptr [rdi - 0x18]
mov	rbp, qword ptr [rsi - 0x18]
mov	rbx, r8
cmp	r8, r12
jae	0x14001b610
jae	0x14001b610
test	rbp, rbp
jne	0x14001b5e9
jne	0x14001b5e9
jmp	0x14001b5fd
jmp	0x14001b5fd
nop	word ptr [rax + rax]
add	rbx, 1
cmp	r12, rbx
je	0x14001b610
je	0x14001b610
movsx	edx, byte ptr [rdi + rbx]
mov	r8, rbp
mov	rcx, rsi
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x14001b5e0
jne	0x14001b5e0
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, 0xffffffffffffffff
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	rcx, qword ptr [rax - 0x18]
cmp	r8, rcx
jb	0x14001b649
jb	0x14001b649
jmp	0x14001b658
jmp	0x14001b658
nop	
add	r8, 1
cmp	r8, rcx
je	0x14001b658
je	0x14001b658
cmp	byte ptr [rax + r8], dl
je	0x14001b640
je	0x14001b640
mov	rax, r8
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, 0xffffffffffffffff
ret	
ret	
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	r8, qword ptr [rax - 0x18]
cmp	rdx, r8
jae	0x14001b678
jae	0x14001b678
add	rax, rdx
add	rsp, 0x28
ret	
ret	
lea	rcx, [rip + 0x9dc99]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rax, qword ptr [rax - 0x18]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x10]
shr	eax, 0x1f
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0xa2f79]
mov	edx, dword ptr [rax]
test	edx, edx
jne	0x14001b6d0
jne	0x14001b6d0
mov	eax, dword ptr [rcx + 0x10]
test	eax, eax
setg	al
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	eax, dword ptr [rcx + 0x10]
test	eax, eax
setg	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	rdx, qword ptr [rax - 0x18]
lea	rax, [rax + rdx - 1]
ret	
ret	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rax, qword ptr [rax - 0x18]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	r10, rcx
mov	rcx, rdx
mov	rax, r9
mov	rdx, qword ptr [r10]
mov	rbx, qword ptr [rdx - 0x18]
cmp	rbx, r9
jb	0x14001b756
jb	0x14001b756
sub	rbx, r9
cmp	rbx, r8
cmova	rbx, r8
test	rbx, rbx
je	0x14001b73a
je	0x14001b73a
add	rdx, r9
cmp	rbx, 1
je	0x14001b748
je	0x14001b748
mov	r8, rbx
call	0x140015998
call	0x140015998
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	r9, rbx
mov	r8, rax
lea	rdx, [rip + 0x9dbf9]
lea	rcx, [rip + 0x9db76]
call	0x1400aed20
call	0x1400aed20
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
mov	rdi, r8
call	0x140015a08
call	0x140015a08
mov	r8, rdi
mov	rdx, rbx
mov	rcx, rsi
mov	r9, rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14001b7b0
jmp	0x14001b7b0
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	r12, qword ptr [rcx]
mov	rax, qword ptr [r12 - 0x18]
mov	rbp, rdx
mov	rsi, r9
test	r9, r9
je	0x14001b850
je	0x14001b850
mov	rbx, 0xffffffffffffffff
cmp	r8, rax
jae	0x14001b83e
jae	0x14001b83e
lea	r13, [r12 + rax]
sub	rax, r8
lea	rcx, [r12 + r8]
cmp	rax, r9
jb	0x14001b83e
jb	0x14001b83e
mov	edi, 1
sub	rdi, r9
add	rax, rdi
mov	r8, rax
je	0x14001b83e
je	0x14001b83e
movsx	r14d, byte ptr [rdx]
mov	edx, r14d
call	0x140015988
call	0x140015988
mov	rbx, rax
test	rax, rax
je	0x14001b837
je	0x14001b837
mov	r8, rsi
mov	rdx, rbp
mov	rcx, rax
call	0x140015990
call	0x140015990
test	eax, eax
je	0x14001b868
je	0x14001b868
lea	rcx, [rbx + 1]
mov	r8, r13
sub	r8, rcx
cmp	r8, rsi
jb	0x14001b837
jb	0x14001b837
add	r8, rdi
jne	0x14001b801
jne	0x14001b801
mov	rbx, 0xffffffffffffffff
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
cmp	rax, r8
mov	rdx, 0xffffffffffffffff
cmovae	rdx, r8
mov	rbx, rdx
jmp	0x14001b83e
jmp	0x14001b83e
nop	dword ptr [rax + rax]
sub	rbx, r12
jmp	0x14001b83e
jmp	0x14001b83e
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	r9, qword ptr [rdx - 0x18]
jmp	0x14001b7b0
jmp	0x14001b7b0
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, 0xffffffffffffffff
mov	rsi, qword ptr [rcx]
mov	rax, r8
mov	r8, qword ptr [rsi - 0x18]
cmp	rax, r8
jae	0x14001b8b8
jae	0x14001b8b8
movsx	edx, dl
sub	r8, rax
lea	rcx, [rsi + rax]
call	0x140015988
call	0x140015988
mov	rdx, rax
sub	rdx, rsi
test	rax, rax
cmovne	rbx, rdx
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	rax, rcx
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	rax, rcx
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
cmp	qword ptr [rax - 0x18], 0
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
mov	rdi, r8
call	0x140015a08
call	0x140015a08
mov	r8, rdi
mov	rdx, rbx
mov	rcx, rsi
mov	r9, rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14001b970
jmp	0x14001b970
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, 0xffffffffffffffff
mov	rbp, qword ptr [rcx]
mov	rax, qword ptr [rbp - 0x18]
mov	rdi, rdx
mov	rsi, r9
cmp	rax, r9
jb	0x14001b9a3
jb	0x14001b9a3
sub	rax, r9
mov	rbx, r8
cmp	rax, r8
cmovbe	rbx, rax
test	r9, r9
jne	0x14001b9bc
jne	0x14001b9bc
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
lea	rax, [rbx - 1]
test	rbx, rbx
je	0x14001b9d8
je	0x14001b9d8
mov	rbx, rax
lea	rcx, [rbp + rbx]
mov	r8, rsi
mov	rdx, rdi
call	0x140015990
call	0x140015990
test	eax, eax
jne	0x14001b9b0
jne	0x14001b9b0
jmp	0x14001b9a3
jmp	0x14001b9a3
nop	word ptr [rax + rax]
mov	rbx, 0xffffffffffffffff
jmp	0x14001b9a3
jmp	0x14001b9a3
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, 0xffffffffffffffff
mov	rdi, qword ptr [rdx]
mov	rbp, qword ptr [rcx]
mov	rsi, qword ptr [rdi - 0x18]
mov	rax, qword ptr [rbp - 0x18]
cmp	rax, rsi
jb	0x14001ba24
jb	0x14001ba24
sub	rax, rsi
mov	rbx, r8
cmp	rax, r8
cmovbe	rbx, rax
test	rsi, rsi
jne	0x14001ba3c
jne	0x14001ba3c
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
lea	rax, [rbx - 1]
test	rbx, rbx
je	0x14001ba58
je	0x14001ba58
mov	rbx, rax
lea	rcx, [rbp + rbx]
mov	r8, rsi
mov	rdx, rdi
call	0x140015990
call	0x140015990
test	eax, eax
jne	0x14001ba30
jne	0x14001ba30
jmp	0x14001ba24
jmp	0x14001ba24
nop	word ptr [rax + rax]
mov	rbx, 0xffffffffffffffff
jmp	0x14001ba24
jmp	0x14001ba24
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, 0xffffffffffffffff
mov	rcx, qword ptr [rcx]
mov	r9, qword ptr [rcx - 0x18]
test	r9, r9
je	0x14001baab
je	0x14001baab
sub	r9, 1
mov	rax, r8
cmp	r9, r8
cmovbe	rax, r9
nop	dword ptr [rax]
mov	r8, rax
sub	rax, 1
cmp	byte ptr [rcx + rax + 1], dl
je	0x14001bab0
je	0x14001bab0
cmp	rax, -1
jne	0x14001ba98
jne	0x14001ba98
ret	
ret	
nop	dword ptr [rax]
mov	rax, r8
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
sub	rax, 0x18
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
add	rdx, qword ptr [rdx - 0x18]
mov	rax, rcx
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rbx, rcx
mov	rcx, qword ptr [rdx]
mov	rdx, qword ptr [rcx - 0x18]
cmp	rdx, r8
jb	0x14001bb40
jb	0x14001bb40
sub	rdx, r8
cmp	rdx, r9
cmova	rdx, r9
xor	r9d, r9d
add	rdx, r8
add	rdx, rcx
add	rcx, r8
lea	r8, [rsp + 0x2f]
call	0x140072130
call	0x140072130
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
mov	r9, rdx
lea	rcx, [rip + 0x9d796]
lea	rdx, [rip + 0x9d92e]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rax, qword ptr [rax - 0x18]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbp, qword ptr [rcx]
mov	rbx, qword ptr [rbp - 0x18]
mov	rcx, rdx
mov	rdi, rdx
call	0x140015a08
call	0x140015a08
mov	r8, rbx
cmp	rax, rbx
mov	rsi, rax
cmovbe	r8, rax
test	r8, r8
je	0x14001bbbb
je	0x14001bbbb
mov	rdx, rdi
mov	rcx, rbp
call	0x140015990
call	0x140015990
test	eax, eax
jne	0x14001bbdb
jne	0x14001bbdb
sub	rbx, rsi
mov	eax, 0x7fffffff
cmp	rbx, 0x7fffffff
jg	0x14001bbdb
jg	0x14001bbdb
cmp	rbx, -0x80000000
mov	eax, 0x80000000
cmovge	eax, ebx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rcx, qword ptr [rcx]
mov	rdx, qword ptr [rdx]
mov	rbx, qword ptr [rcx - 0x18]
mov	rsi, qword ptr [rdx - 0x18]
mov	r8, rbx
cmp	rsi, rbx
cmovbe	r8, rsi
test	r8, r8
je	0x14001bc1c
je	0x14001bc1c
call	0x140015990
call	0x140015990
test	eax, eax
jne	0x14001bc3c
jne	0x14001bc3c
sub	rbx, rsi
mov	eax, 0x7fffffff
cmp	rbx, 0x7fffffff
jg	0x14001bc3c
jg	0x14001bc3c
cmp	rbx, -0x80000000
mov	eax, 0x80000000
cmovge	eax, ebx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	r12, qword ptr [rcx]
mov	rbx, qword ptr [r12 - 0x18]
mov	rdi, rdx
mov	rbp, r9
cmp	rbx, rdx
jb	0x14001bccc
jb	0x14001bccc
sub	rbx, rdx
mov	rcx, r9
cmp	rbx, r8
cmova	rbx, r8
call	0x140015a08
call	0x140015a08
cmp	rax, rbx
mov	r8, rbx
mov	rsi, rax
cmovbe	r8, rax
test	r8, r8
je	0x14001bca1
je	0x14001bca1
lea	rcx, [r12 + rdi]
mov	rdx, rbp
call	0x140015990
call	0x140015990
test	eax, eax
jne	0x14001bcc1
jne	0x14001bcc1
sub	rbx, rsi
mov	eax, 0x7fffffff
cmp	rbx, 0x7fffffff
jg	0x14001bcc1
jg	0x14001bcc1
cmp	rbx, -0x80000000
mov	eax, 0x80000000
cmovge	eax, ebx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	r8, rdx
mov	r9, rbx
lea	rdx, [rip + 0x9d696]
lea	rcx, [rip + 0x9d600]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rcx, qword ptr [rcx]
mov	rsi, qword ptr [rsp + 0x60]
mov	rbx, qword ptr [rcx - 0x18]
cmp	rbx, rdx
jb	0x14001bd56
jb	0x14001bd56
sub	rbx, rdx
cmp	rbx, r8
cmova	rbx, r8
cmp	rsi, rbx
mov	r8, rbx
cmovbe	r8, rsi
test	r8, r8
je	0x14001bd2f
je	0x14001bd2f
add	rcx, rdx
mov	rdx, r9
call	0x140015990
call	0x140015990
test	eax, eax
jne	0x14001bd4f
jne	0x14001bd4f
sub	rbx, rsi
mov	eax, 0x7fffffff
cmp	rbx, 0x7fffffff
jg	0x14001bd4f
jg	0x14001bd4f
cmp	rbx, -0x80000000
mov	eax, 0x80000000
cmovge	eax, ebx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	r8, rdx
mov	r9, rbx
lea	rdx, [rip + 0x9d60c]
lea	rcx, [rip + 0x9d576]
call	0x1400aed20
call	0x1400aed20
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rcx, qword ptr [rcx]
mov	rbx, qword ptr [rcx - 0x18]
cmp	rbx, rdx
jb	0x14001bdd8
jb	0x14001bdd8
sub	rbx, rdx
mov	rax, qword ptr [r9]
cmp	rbx, r8
cmova	rbx, r8
mov	rsi, qword ptr [rax - 0x18]
mov	r8, rbx
cmp	rsi, rbx
cmovbe	r8, rsi
test	r8, r8
je	0x14001bdb1
je	0x14001bdb1
add	rcx, rdx
mov	rdx, rax
call	0x140015990
call	0x140015990
test	eax, eax
jne	0x14001bdd1
jne	0x14001bdd1
sub	rbx, rsi
mov	eax, 0x7fffffff
cmp	rbx, 0x7fffffff
jg	0x14001bdd1
jg	0x14001bdd1
cmp	rbx, -0x80000000
mov	eax, 0x80000000
cmovge	eax, ebx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	r8, rdx
mov	r9, rbx
lea	rdx, [rip + 0x9d58a]
lea	rcx, [rip + 0x9d4f4]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rcx, qword ptr [rcx]
mov	r10, qword ptr [rsp + 0x60]
mov	r11, qword ptr [rsp + 0x68]
mov	rbx, qword ptr [rcx - 0x18]
mov	rax, rdx
cmp	rbx, rdx
jb	0x14001be84
jb	0x14001be84
mov	rdx, qword ptr [r9]
mov	rsi, qword ptr [rdx - 0x18]
cmp	rsi, r10
jb	0x14001be9d
jb	0x14001be9d
sub	rbx, rax
cmp	rbx, r8
cmova	rbx, r8
sub	rsi, r10
cmp	rsi, r11
cmova	rsi, r11
mov	r8, rbx
cmp	rsi, rbx
cmovbe	r8, rsi
test	r8, r8
je	0x14001be5d
je	0x14001be5d
add	rdx, r10
add	rcx, rax
call	0x140015990
call	0x140015990
test	eax, eax
jne	0x14001be7d
jne	0x14001be7d
sub	rbx, rsi
mov	eax, 0x7fffffff
cmp	rbx, 0x7fffffff
jg	0x14001be7d
jg	0x14001be7d
cmp	rbx, -0x80000000
mov	eax, 0x80000000
cmovge	eax, ebx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	r8, rdx
mov	r9, rbx
lea	rdx, [rip + 0x9d4de]
lea	rcx, [rip + 0x9d448]
call	0x1400aed20
call	0x1400aed20
mov	r9, rsi
mov	r8, r10
lea	rdx, [rip + 0x9d4c5]
lea	rcx, [rip + 0x9d42f]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
add	rdx, qword ptr [rdx - 0x18]
mov	rax, rcx
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
sub	rsp, 0x28
mov	rcx, qword ptr [rcx]
mov	r9, qword ptr [rcx - 0x18]
mov	rax, rdx
mov	rdx, r8
cmp	r9, rax
jb	0x14001beeb
jb	0x14001beeb
add	rsp, 0x28
ret	
ret	
mov	r8, rax
lea	rcx, [rip + 0x9d3eb]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
sub	rax, rdx
cmp	rax, r8
cmova	rax, r8
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x10]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movabs	rax, 0x3ffffffffffffff9
ret	
ret	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rax, rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x9eae9]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	r8d, dword ptr [rdx]
mov	r9, qword ptr [rax]
mov	rdx, rax
mov	rbx, rcx
call	qword ptr [r9 + 0x28]
call	qword ptr [r9 + 0x28]
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x179]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x50]
cmp	rax, rdx
jne	0x14001bfc0
jne	0x14001bfc0
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x60]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x159]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x48]
cmp	rax, rdx
jne	0x14001bff0
jne	0x14001bff0
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x5c]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x28]
mov	rbx, rcx
lea	rcx, [rip + 0x239]
cmp	rax, rcx
jne	0x14001c060
jne	0x14001c060
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x28]
test	rsi, rsi
je	0x14001c03c
je	0x14001c03c
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x10]
mov	rbx, rcx
test	rsi, rsi
je	0x14001c099
je	0x14001c099
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x1d9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, rdx
jne	0x14001c0e0
jne	0x14001c0e0
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x58]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x1b9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x14001c110
jne	0x14001c110
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x21]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x60]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x5c]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x38]
mov	rbx, rcx
lea	rcx, [rip + 0x169]
cmp	rax, rcx
jne	0x14001c1a0
jne	0x14001c1a0
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x48]
test	rsi, rsi
je	0x14001c17c
je	0x14001c17c
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x30]
mov	rbx, rcx
lea	rcx, [rip + 0x149]
cmp	rax, rcx
jne	0x14001c210
jne	0x14001c210
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x38]
test	rsi, rsi
je	0x14001c1ec
je	0x14001c1ec
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
lea	rdx, [rip + 0x139]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x18]
cmp	rax, rdx
jne	0x14001c240
jne	0x14001c240
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x22]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x28]
mov	rbx, rcx
test	rsi, rsi
je	0x14001c279
je	0x14001c279
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x58]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x21]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x48]
mov	rbx, rcx
test	rsi, rsi
je	0x14001c2e9
je	0x14001c2e9
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x38]
mov	rbx, rcx
test	rsi, rsi
je	0x14001c339
je	0x14001c339
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x22]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x20]
mov	rbx, rcx
lea	rcx, [rip - 0x317]
cmp	rax, rcx
jne	0x14001c3d0
jne	0x14001c3d0
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x10]
test	rsi, rsi
je	0x14001c3ac
je	0x14001c3ac
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
lea	rdx, [rip + 0x179]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x50]
cmp	rax, rdx
jne	0x14001c400
jne	0x14001c400
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x60]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x159]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x48]
cmp	rax, rdx
jne	0x14001c430
jne	0x14001c430
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x5c]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x28]
mov	rbx, rcx
lea	rcx, [rip + 0x239]
cmp	rax, rcx
jne	0x14001c4a0
jne	0x14001c4a0
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x28]
test	rsi, rsi
je	0x14001c47c
je	0x14001c47c
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x10]
mov	rbx, rcx
test	rsi, rsi
je	0x14001c4d9
je	0x14001c4d9
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x1d9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, rdx
jne	0x14001c520
jne	0x14001c520
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x58]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x1b9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x14001c550
jne	0x14001c550
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x21]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x60]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x5c]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x38]
mov	rbx, rcx
lea	rcx, [rip + 0x169]
cmp	rax, rcx
jne	0x14001c5e0
jne	0x14001c5e0
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x48]
test	rsi, rsi
je	0x14001c5bc
je	0x14001c5bc
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x30]
mov	rbx, rcx
lea	rcx, [rip + 0x149]
cmp	rax, rcx
jne	0x14001c650
jne	0x14001c650
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x38]
test	rsi, rsi
je	0x14001c62c
je	0x14001c62c
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
lea	rdx, [rip + 0x139]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x18]
cmp	rax, rdx
jne	0x14001c680
jne	0x14001c680
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x22]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x28]
mov	rbx, rcx
test	rsi, rsi
je	0x14001c6b9
je	0x14001c6b9
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x58]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x21]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x48]
mov	rbx, rcx
test	rsi, rsi
je	0x14001c729
je	0x14001c729
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x38]
mov	rbx, rcx
test	rsi, rsi
je	0x14001c779
je	0x14001c779
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x22]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x20]
mov	rbx, rcx
lea	rcx, [rip - 0x317]
cmp	rax, rcx
jne	0x14001c810
jne	0x14001c810
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x10]
test	rsi, rsi
je	0x14001c7ec
je	0x14001c7ec
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
lea	rdx, [rip + 0x179]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x50]
cmp	rax, rdx
jne	0x14001c840
jne	0x14001c840
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x60]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x159]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x48]
cmp	rax, rdx
jne	0x14001c870
jne	0x14001c870
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x5c]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x28]
mov	rbx, rcx
lea	rcx, [rip + 0x239]
cmp	rax, rcx
jne	0x14001c8e0
jne	0x14001c8e0
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	rsi, qword ptr [rax + 0x28]
test	rsi, rsi
je	0x14001c8bc
je	0x14001c8bc
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
lea	rdx, [rsi + rax*2]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140068a90
call	0x140068a90
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x10]
mov	rbx, rcx
test	rsi, rsi
je	0x14001c919
je	0x14001c919
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071ff0
call	0x140071ff0
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x1d9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, rdx
jne	0x14001c960
jne	0x14001c960
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x58]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x1b9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x14001c990
jne	0x14001c990
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x22]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x60]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x5c]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x38]
mov	rbx, rcx
lea	rcx, [rip + 0x169]
cmp	rax, rcx
jne	0x14001ca20
jne	0x14001ca20
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	rsi, qword ptr [rax + 0x48]
test	rsi, rsi
je	0x14001c9fc
je	0x14001c9fc
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
lea	rdx, [rsi + rax*2]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140068a90
call	0x140068a90
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x30]
mov	rbx, rcx
lea	rcx, [rip + 0x149]
cmp	rax, rcx
jne	0x14001ca90
jne	0x14001ca90
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	rsi, qword ptr [rax + 0x38]
test	rsi, rsi
je	0x14001ca6c
je	0x14001ca6c
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
lea	rdx, [rsi + rax*2]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140068a90
call	0x140068a90
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
lea	rdx, [rip + 0x139]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x18]
cmp	rax, rdx
jne	0x14001cac0
jne	0x14001cac0
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x24]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	rsi, qword ptr [rax + 0x28]
mov	rbx, rcx
test	rsi, rsi
je	0x14001caf9
je	0x14001caf9
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
lea	rdx, [rsi + rax*2]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140068a90
call	0x140068a90
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x58]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x22]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	rsi, qword ptr [rax + 0x48]
mov	rbx, rcx
test	rsi, rsi
je	0x14001cb69
je	0x14001cb69
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
lea	rdx, [rsi + rax*2]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140068a90
call	0x140068a90
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	rsi, qword ptr [rax + 0x38]
mov	rbx, rcx
test	rsi, rsi
je	0x14001cbb9
je	0x14001cbb9
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
lea	rdx, [rsi + rax*2]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140068a90
call	0x140068a90
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x24]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x20]
mov	rbx, rcx
lea	rcx, [rip - 0x317]
cmp	rax, rcx
jne	0x14001cc50
jne	0x14001cc50
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x10]
test	rsi, rsi
je	0x14001cc2c
je	0x14001cc2c
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071ff0
call	0x140071ff0
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
lea	rdx, [rip + 0x179]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x50]
cmp	rax, rdx
jne	0x14001cc80
jne	0x14001cc80
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x60]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x159]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x48]
cmp	rax, rdx
jne	0x14001ccb0
jne	0x14001ccb0
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x5c]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x28]
mov	rbx, rcx
lea	rcx, [rip + 0x239]
cmp	rax, rcx
jne	0x14001cd20
jne	0x14001cd20
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	rsi, qword ptr [rax + 0x28]
test	rsi, rsi
je	0x14001ccfc
je	0x14001ccfc
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
lea	rdx, [rsi + rax*2]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140068a90
call	0x140068a90
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x10]
mov	rbx, rcx
test	rsi, rsi
je	0x14001cd59
je	0x14001cd59
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071ff0
call	0x140071ff0
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x1d9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, rdx
jne	0x14001cda0
jne	0x14001cda0
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x58]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x1b9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x14001cdd0
jne	0x14001cdd0
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x22]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x60]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x5c]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x38]
mov	rbx, rcx
lea	rcx, [rip + 0x169]
cmp	rax, rcx
jne	0x14001ce60
jne	0x14001ce60
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	rsi, qword ptr [rax + 0x48]
test	rsi, rsi
je	0x14001ce3c
je	0x14001ce3c
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
lea	rdx, [rsi + rax*2]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140068a90
call	0x140068a90
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x30]
mov	rbx, rcx
lea	rcx, [rip + 0x149]
cmp	rax, rcx
jne	0x14001ced0
jne	0x14001ced0
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	rsi, qword ptr [rax + 0x38]
test	rsi, rsi
je	0x14001ceac
je	0x14001ceac
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
lea	rdx, [rsi + rax*2]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140068a90
call	0x140068a90
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
lea	rdx, [rip + 0x139]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x18]
cmp	rax, rdx
jne	0x14001cf00
jne	0x14001cf00
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x24]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	rsi, qword ptr [rax + 0x28]
mov	rbx, rcx
test	rsi, rsi
je	0x14001cf39
je	0x14001cf39
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
lea	rdx, [rsi + rax*2]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140068a90
call	0x140068a90
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x58]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x22]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	rsi, qword ptr [rax + 0x48]
mov	rbx, rcx
test	rsi, rsi
je	0x14001cfa9
je	0x14001cfa9
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
lea	rdx, [rsi + rax*2]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140068a90
call	0x140068a90
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	rsi, qword ptr [rax + 0x38]
mov	rbx, rcx
test	rsi, rsi
je	0x14001cff9
je	0x14001cff9
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
lea	rdx, [rsi + rax*2]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140068a90
call	0x140068a90
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x24]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x20]
mov	rbx, rcx
lea	rcx, [rip - 0x317]
cmp	rax, rcx
jne	0x14001d090
jne	0x14001d090
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x10]
test	rsi, rsi
je	0x14001d06c
je	0x14001d06c
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071ff0
call	0x140071ff0
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	rax, qword ptr [rax + 0x50]
mov	qword ptr [rdx], rax
ret	
ret	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	rcx, qword ptr [rax + 0x10]
mov	qword ptr [rdx], rcx
mov	rax, qword ptr [rax + 0x18]
mov	qword ptr [rdx + 8], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	rcx, qword ptr [rax + 0x20]
mov	qword ptr [rdx], rcx
mov	rax, qword ptr [rax + 0x28]
mov	qword ptr [rdx + 8], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	rcx, qword ptr [rax + 0x90]
mov	qword ptr [rdx], rcx
mov	rcx, qword ptr [rax + 0x98]
mov	qword ptr [rdx + 8], rcx
mov	rcx, qword ptr [rax + 0xa0]
mov	qword ptr [rdx + 0x10], rcx
mov	rcx, qword ptr [rax + 0xa8]
mov	qword ptr [rdx + 0x18], rcx
mov	rcx, qword ptr [rax + 0xb0]
mov	qword ptr [rdx + 0x20], rcx
mov	rcx, qword ptr [rax + 0xb8]
mov	qword ptr [rdx + 0x28], rcx
mov	rax, qword ptr [rax + 0xc0]
mov	qword ptr [rdx + 0x30], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	rcx, qword ptr [rax + 0x30]
mov	qword ptr [rdx], rcx
mov	rax, qword ptr [rax + 0x38]
mov	qword ptr [rdx + 8], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	rcx, qword ptr [rax + 0x128]
mov	qword ptr [rdx], rcx
mov	rcx, qword ptr [rax + 0x130]
mov	qword ptr [rdx + 8], rcx
mov	rcx, qword ptr [rax + 0x138]
mov	qword ptr [rdx + 0x10], rcx
mov	rcx, qword ptr [rax + 0x140]
mov	qword ptr [rdx + 0x18], rcx
mov	rcx, qword ptr [rax + 0x148]
mov	qword ptr [rdx + 0x20], rcx
mov	rcx, qword ptr [rax + 0x150]
mov	qword ptr [rdx + 0x28], rcx
mov	rcx, qword ptr [rax + 0x158]
mov	qword ptr [rdx + 0x30], rcx
mov	rcx, qword ptr [rax + 0x160]
mov	qword ptr [rdx + 0x38], rcx
mov	rcx, qword ptr [rax + 0x168]
mov	qword ptr [rdx + 0x40], rcx
mov	rcx, qword ptr [rax + 0x170]
mov	qword ptr [rdx + 0x48], rcx
mov	rcx, qword ptr [rax + 0x178]
mov	qword ptr [rdx + 0x50], rcx
mov	rax, qword ptr [rax + 0x180]
mov	qword ptr [rdx + 0x58], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	r14, rcx
mov	rbp, rdx
xor	ecx, ecx
xor	edx, edx
mov	r12, r8
mov	r13, r9
call	0x1400159c8
call	0x1400159c8
mov	rcx, rax
mov	rsi, rax
call	0x140015a08
call	0x140015a08
lea	rdi, [rax + 1]
mov	rcx, rdi
call	0x1400b2c00
call	0x1400b2c00
mov	r8, rdi
mov	rdx, rsi
mov	rcx, rax
mov	rbx, rax
call	0x140015998
call	0x140015998
mov	rdx, qword ptr [r14 + 0x20]
xor	ecx, ecx
call	0x1400159c8
call	0x1400159c8
mov	r8, r13
mov	rdx, r12
mov	rcx, rbp
mov	r9, qword ptr [rsp + 0x80]
call	0x140015a00
call	0x140015a00
xor	ecx, ecx
mov	rdx, rbx
mov	rsi, rax
call	0x1400159c8
call	0x1400159c8
mov	rcx, rbx
call	0x1400b2bd0
call	0x1400b2bd0
test	rsi, rsi
jne	0x14001d29a
jne	0x14001d29a
mov	byte ptr [rbp], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
add	rdx, 1
mov	rcx, rax
jne	0x14001d2b7
jne	0x14001d2b7
call	0x1400b2e40
call	0x1400b2e40
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	rcx, qword ptr [rax + 0x58]
mov	qword ptr [rdx], rcx
mov	rcx, qword ptr [rax + 0x60]
mov	qword ptr [rdx + 8], rcx
mov	rcx, qword ptr [rax + 0x68]
mov	qword ptr [rdx + 0x10], rcx
mov	rcx, qword ptr [rax + 0x70]
mov	qword ptr [rdx + 0x18], rcx
mov	rcx, qword ptr [rax + 0x78]
mov	qword ptr [rdx + 0x20], rcx
mov	rcx, qword ptr [rax + 0x80]
mov	qword ptr [rdx + 0x28], rcx
mov	rax, qword ptr [rax + 0x88]
mov	qword ptr [rdx + 0x30], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	rcx, qword ptr [rax + 0x40]
mov	qword ptr [rdx], rcx
mov	rax, qword ptr [rax + 0x48]
mov	qword ptr [rdx + 8], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	rcx, qword ptr [rax + 0xc8]
mov	qword ptr [rdx], rcx
mov	rcx, qword ptr [rax + 0xd0]
mov	qword ptr [rdx + 8], rcx
mov	rcx, qword ptr [rax + 0xd8]
mov	qword ptr [rdx + 0x10], rcx
mov	rcx, qword ptr [rax + 0xe0]
mov	qword ptr [rdx + 0x18], rcx
mov	rcx, qword ptr [rax + 0xe8]
mov	qword ptr [rdx + 0x20], rcx
mov	rcx, qword ptr [rax + 0xf0]
mov	qword ptr [rdx + 0x28], rcx
mov	rcx, qword ptr [rax + 0xf8]
mov	qword ptr [rdx + 0x30], rcx
mov	rcx, qword ptr [rax + 0x100]
mov	qword ptr [rdx + 0x38], rcx
mov	rcx, qword ptr [rax + 0x108]
mov	qword ptr [rdx + 0x40], rcx
mov	rcx, qword ptr [rax + 0x110]
mov	qword ptr [rdx + 0x48], rcx
mov	rcx, qword ptr [rax + 0x118]
mov	qword ptr [rdx + 0x50], rcx
mov	rax, qword ptr [rax + 0x120]
mov	qword ptr [rdx + 0x58], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	rax, qword ptr [rax + 0x50]
mov	qword ptr [rdx], rax
ret	
ret	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	rcx, qword ptr [rax + 0x10]
mov	qword ptr [rdx], rcx
mov	rax, qword ptr [rax + 0x18]
mov	qword ptr [rdx + 8], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	rcx, qword ptr [rax + 0x20]
mov	qword ptr [rdx], rcx
mov	rax, qword ptr [rax + 0x28]
mov	qword ptr [rdx + 8], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	rcx, qword ptr [rax + 0x90]
mov	qword ptr [rdx], rcx
mov	rcx, qword ptr [rax + 0x98]
mov	qword ptr [rdx + 8], rcx
mov	rcx, qword ptr [rax + 0xa0]
mov	qword ptr [rdx + 0x10], rcx
mov	rcx, qword ptr [rax + 0xa8]
mov	qword ptr [rdx + 0x18], rcx
mov	rcx, qword ptr [rax + 0xb0]
mov	qword ptr [rdx + 0x20], rcx
mov	rcx, qword ptr [rax + 0xb8]
mov	qword ptr [rdx + 0x28], rcx
mov	rax, qword ptr [rax + 0xc0]
mov	qword ptr [rdx + 0x30], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	rcx, qword ptr [rax + 0x30]
mov	qword ptr [rdx], rcx
mov	rax, qword ptr [rax + 0x38]
mov	qword ptr [rdx + 8], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	rcx, qword ptr [rax + 0x128]
mov	qword ptr [rdx], rcx
mov	rcx, qword ptr [rax + 0x130]
mov	qword ptr [rdx + 8], rcx
mov	rcx, qword ptr [rax + 0x138]
mov	qword ptr [rdx + 0x10], rcx
mov	rcx, qword ptr [rax + 0x140]
mov	qword ptr [rdx + 0x18], rcx
mov	rcx, qword ptr [rax + 0x148]
mov	qword ptr [rdx + 0x20], rcx
mov	rcx, qword ptr [rax + 0x150]
mov	qword ptr [rdx + 0x28], rcx
mov	rcx, qword ptr [rax + 0x158]
mov	qword ptr [rdx + 0x30], rcx
mov	rcx, qword ptr [rax + 0x160]
mov	qword ptr [rdx + 0x38], rcx
mov	rcx, qword ptr [rax + 0x168]
mov	qword ptr [rdx + 0x40], rcx
mov	rcx, qword ptr [rax + 0x170]
mov	qword ptr [rdx + 0x48], rcx
mov	rcx, qword ptr [rax + 0x178]
mov	qword ptr [rdx + 0x50], rcx
mov	rax, qword ptr [rax + 0x180]
mov	qword ptr [rdx + 0x58], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	r14, rcx
mov	rbp, rdx
xor	ecx, ecx
xor	edx, edx
mov	r12, r8
mov	r13, r9
call	0x1400159c8
call	0x1400159c8
mov	rcx, rax
mov	rsi, rax
call	0x140015a08
call	0x140015a08
lea	rdi, [rax + 1]
mov	rcx, rdi
call	0x1400b2c00
call	0x1400b2c00
mov	r8, rdi
mov	rdx, rsi
mov	rcx, rax
mov	rbx, rax
call	0x140015998
call	0x140015998
mov	rdx, qword ptr [r14 + 0x20]
xor	ecx, ecx
call	0x1400159c8
call	0x1400159c8
mov	r8, r13
mov	rdx, r12
mov	rcx, rbp
mov	r9, qword ptr [rsp + 0x80]
call	0x140015a58
call	0x140015a58
xor	ecx, ecx
mov	rdx, rbx
mov	rsi, rax
call	0x1400159c8
call	0x1400159c8
mov	rcx, rbx
call	0x1400b2bd0
call	0x1400b2bd0
test	rsi, rsi
jne	0x14001d5bc
jne	0x14001d5bc
xor	eax, eax
mov	word ptr [rbp], ax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
add	rdx, 1
mov	rcx, rax
jne	0x14001d5d9
jne	0x14001d5d9
call	0x1400b2e40
call	0x1400b2e40
call	0x14000c940
call	0x14000c940
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	rcx, qword ptr [rax + 0x58]
mov	qword ptr [rdx], rcx
mov	rcx, qword ptr [rax + 0x60]
mov	qword ptr [rdx + 8], rcx
mov	rcx, qword ptr [rax + 0x68]
mov	qword ptr [rdx + 0x10], rcx
mov	rcx, qword ptr [rax + 0x70]
mov	qword ptr [rdx + 0x18], rcx
mov	rcx, qword ptr [rax + 0x78]
mov	qword ptr [rdx + 0x20], rcx
mov	rcx, qword ptr [rax + 0x80]
mov	qword ptr [rdx + 0x28], rcx
mov	rax, qword ptr [rax + 0x88]
mov	qword ptr [rdx + 0x30], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	rcx, qword ptr [rax + 0x40]
mov	qword ptr [rdx], rcx
mov	rax, qword ptr [rax + 0x48]
mov	qword ptr [rdx + 8], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	rcx, qword ptr [rax + 0xc8]
mov	qword ptr [rdx], rcx
mov	rcx, qword ptr [rax + 0xd0]
mov	qword ptr [rdx + 8], rcx
mov	rcx, qword ptr [rax + 0xd8]
mov	qword ptr [rdx + 0x10], rcx
mov	rcx, qword ptr [rax + 0xe0]
mov	qword ptr [rdx + 0x18], rcx
mov	rcx, qword ptr [rax + 0xe8]
mov	qword ptr [rdx + 0x20], rcx
mov	rcx, qword ptr [rax + 0xf0]
mov	qword ptr [rdx + 0x28], rcx
mov	rcx, qword ptr [rax + 0xf8]
mov	qword ptr [rdx + 0x30], rcx
mov	rcx, qword ptr [rax + 0x100]
mov	qword ptr [rdx + 0x38], rcx
mov	rcx, qword ptr [rax + 0x108]
mov	qword ptr [rdx + 0x40], rcx
mov	rcx, qword ptr [rax + 0x110]
mov	qword ptr [rdx + 0x48], rcx
mov	rcx, qword ptr [rax + 0x118]
mov	qword ptr [rdx + 0x50], rcx
mov	rax, qword ptr [rax + 0x120]
mov	qword ptr [rdx + 0x58], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
lea	rcx, [rip + 0x99eae]
call	0x140022a70
call	0x140022a70
mov	rsi, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 0x18]
lea	rbp, [rax + rsi*8]
mov	rax, qword ptr [rbp]
test	rax, rax
je	0x14001d720
je	0x14001d720
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	ecx, 0x90
call	0x1400b2c30
call	0x1400b2c30
mov	rdi, rax
mov	dword ptr [rax + 8], 0
mov	rdx, rbx
lea	rax, [rip + 0xa99e2]
mov	qword ptr [rdi], rax
xor	eax, eax
mov	rcx, rdi
mov	qword ptr [rdi + 0x10], 0
mov	qword ptr [rdi + 0x18], 0
mov	byte ptr [rdi + 0x20], 0
mov	qword ptr [rdi + 0x28], 0
mov	qword ptr [rdi + 0x30], 0
mov	qword ptr [rdi + 0x38], 0
mov	qword ptr [rdi + 0x40], 0
mov	word ptr [rdi + 0x48], ax
mov	byte ptr [rdi + 0x88], 0
call	0x140093c20
call	0x140093c20
mov	rcx, qword ptr [rbx]
mov	r8, rsi
mov	rdx, rdi
call	0x140099d30
call	0x140099d30
mov	rax, qword ptr [rbp]
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
jmp	0x14001d7ad
jmp	0x14001d7ad
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
lea	rcx, [rip + 0x99dbe]
call	0x140022a70
call	0x140022a70
mov	rsi, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 0x18]
lea	rbp, [rax + rsi*8]
mov	rax, qword ptr [rbp]
test	rax, rax
je	0x14001d820
je	0x14001d820
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	ecx, 0xd0
call	0x1400b2c30
call	0x1400b2c30
mov	rdi, rax
mov	dword ptr [rax + 8], 0
mov	rdx, rbx
lea	rax, [rip + 0xa9902]
mov	qword ptr [rdi], rax
mov	rcx, rdi
mov	qword ptr [rdi + 0x10], 0
mov	qword ptr [rdi + 0x18], 0
mov	byte ptr [rdi + 0x20], 0
mov	qword ptr [rdi + 0x28], 0
mov	qword ptr [rdi + 0x30], 0
mov	qword ptr [rdi + 0x38], 0
mov	qword ptr [rdi + 0x40], 0
mov	dword ptr [rdi + 0x48], 0
mov	byte ptr [rdi + 0xc8], 0
call	0x1400942c0
call	0x1400942c0
mov	rcx, qword ptr [rbx]
mov	r8, rsi
mov	rdx, rdi
call	0x140099d30
call	0x140099d30
mov	rax, qword ptr [rbp]
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
jmp	0x14001d8ae
jmp	0x14001d8ae
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
cmp	qword ptr [rcx], 0
setne	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, rdx
mov	rdx, qword ptr [rcx + 0x18]
mov	rcx, qword ptr [rsp + 0x60]
mov	qword ptr [rsp + 0x20], r9
mov	r9, r8
mov	r8, rax
mov	qword ptr [rsp + 0x28], rcx
xor	ecx, ecx
call	0x14007d850
call	0x14007d850
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, rdx
mov	rdx, qword ptr [rcx + 0x18]
mov	rcx, qword ptr [rsp + 0x60]
mov	qword ptr [rsp + 0x20], r9
mov	r9, r8
mov	r8, rax
mov	qword ptr [rsp + 0x28], rcx
xor	ecx, ecx
call	0x14007d830
call	0x14007d830
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x78
mov	rdx, qword ptr [rdx + 0x18]
mov	qword ptr [rsp + 0x20], r9
mov	rbx, rcx
mov	r9, r8
xor	ecx, ecx
mov	qword ptr [rsp + 0x60], 0
lea	rsi, [rsp + 0x40]
mov	r8, rsi
call	0x14007d9b0
call	0x14007d9b0
cmp	qword ptr [rsp + 0x60], 0
je	0x14001d9c8
je	0x14001d9c8
mov	rcx, qword ptr [rsp + 0x40]
mov	rdx, qword ptr [rsp + 0x48]
lea	r8, [rsp + 0x3f]
add	rdx, rcx
call	0x140071eb0
call	0x140071eb0
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rsp + 0x60]
test	rax, rax
je	0x14001d9be
je	0x14001d9be
mov	rcx, rsi
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x78
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x9b80b]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x60]
test	rax, rax
je	0x14001d9e6
je	0x14001d9e6
mov	rcx, rsi
call	rax
call	rax
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x68
mov	rdx, qword ptr [rdx + 0x18]
mov	qword ptr [rsp + 0x20], r9
mov	rbx, rcx
mov	r9, r8
xor	ecx, ecx
mov	qword ptr [rsp + 0x50], 0
lea	rsi, [rsp + 0x30]
mov	r8, rsi
call	0x14007d8b0
call	0x14007d8b0
cmp	qword ptr [rsp + 0x50], 0
je	0x14001da69
je	0x14001da69
mov	rdx, qword ptr [rsp + 0x30]
lea	rax, [rbx + 0x10]
mov	r8, qword ptr [rsp + 0x38]
mov	qword ptr [rbx], rax
test	rdx, rdx
jne	0x14001da40
jne	0x14001da40
test	r8, r8
jne	0x14001da64
jne	0x14001da64
add	r8, rdx
mov	rcx, rbx
call	0x14009d490
call	0x14009d490
mov	rax, qword ptr [rsp + 0x50]
test	rax, rax
je	0x14001da5a
je	0x14001da5a
mov	rcx, rsi
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
call	0x1400a0690
call	0x1400a0690
lea	rcx, [rip + 0x9c092]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x50]
test	rax, rax
je	0x14001da87
je	0x14001da87
mov	rcx, rsi
call	rax
call	rax
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
sub	rsp, 0x38
mov	rax, rdx
mov	rdx, qword ptr [rcx + 0x18]
mov	rcx, qword ptr [rsp + 0x60]
mov	qword ptr [rsp + 0x20], r9
mov	r9, r8
mov	r8, rax
mov	qword ptr [rsp + 0x28], rcx
xor	ecx, ecx
call	0x14007d890
call	0x14007d890
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, rdx
mov	rdx, qword ptr [rcx + 0x18]
mov	rcx, qword ptr [rsp + 0x60]
mov	qword ptr [rsp + 0x20], r9
mov	r9, r8
mov	r8, rax
mov	qword ptr [rsp + 0x28], rcx
xor	ecx, ecx
call	0x14007d870
call	0x14007d870
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x78
mov	rdx, qword ptr [rdx + 0x18]
mov	qword ptr [rsp + 0x20], r9
mov	rbx, rcx
mov	r9, r8
xor	ecx, ecx
mov	qword ptr [rsp + 0x60], 0
lea	rsi, [rsp + 0x40]
mov	r8, rsi
call	0x14007db40
call	0x14007db40
cmp	qword ptr [rsp + 0x60], 0
je	0x14001db59
je	0x14001db59
mov	rcx, qword ptr [rsp + 0x40]
mov	rax, qword ptr [rsp + 0x48]
lea	r8, [rsp + 0x3f]
lea	rdx, [rcx + rax*2]
call	0x140068a00
call	0x140068a00
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rsp + 0x60]
test	rax, rax
je	0x14001db4f
je	0x14001db4f
mov	rcx, rsi
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x78
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x9b67a]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x60]
test	rax, rax
je	0x14001db77
je	0x14001db77
mov	rcx, rsi
call	rax
call	rax
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
push	rsi
push	rbx
sub	rsp, 0x68
mov	rdx, qword ptr [rdx + 0x18]
mov	qword ptr [rsp + 0x20], r9
mov	rbx, rcx
mov	r9, r8
xor	ecx, ecx
mov	qword ptr [rsp + 0x50], 0
lea	rsi, [rsp + 0x30]
mov	r8, rsi
call	0x14007da40
call	0x14007da40
cmp	qword ptr [rsp + 0x50], 0
je	0x14001dbfa
je	0x14001dbfa
mov	rdx, qword ptr [rsp + 0x30]
lea	rcx, [rbx + 0x10]
mov	rax, qword ptr [rsp + 0x38]
mov	qword ptr [rbx], rcx
test	rdx, rdx
jne	0x14001dbd0
jne	0x14001dbd0
test	rax, rax
jne	0x14001dbf5
jne	0x14001dbf5
lea	r8, [rdx + rax*2]
mov	rcx, rbx
call	0x1400a1530
call	0x1400a1530
mov	rax, qword ptr [rsp + 0x50]
test	rax, rax
je	0x14001dbeb
je	0x14001dbeb
mov	rcx, rsi
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
call	0x1400a0690
call	0x1400a0690
lea	rcx, [rip + 0x9bf01]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x50]
test	rax, rax
je	0x14001dc18
je	0x14001dc18
mov	rcx, rsi
call	rax
call	rax
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x78
mov	rax, qword ptr [rsp + 0xb8]
mov	rdx, qword ptr [rdx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rax + 8]
lea	rsi, [rsp + 0x40]
mov	qword ptr [rsp + 0x60], 0
mov	qword ptr [rsp + 0x38], rcx
mov	rax, qword ptr [rax]
xor	ecx, ecx
mov	dword ptr [rsp + 0x20], r9d
mov	r9d, r8d
mov	r8, rsi
mov	qword ptr [rsp + 0x30], rax
mov	eax, dword ptr [rsp + 0xb0]
mov	dword ptr [rsp + 0x28], eax
call	0x14007d010
call	0x14007d010
cmp	qword ptr [rsp + 0x60], 0
je	0x14001dccd
je	0x14001dccd
mov	rdx, qword ptr [rsp + 0x40]
lea	rax, [rbx + 0x10]
mov	r8, qword ptr [rsp + 0x48]
mov	qword ptr [rbx], rax
test	rdx, rdx
jne	0x14001dca4
jne	0x14001dca4
test	r8, r8
jne	0x14001dcc8
jne	0x14001dcc8
add	r8, rdx
mov	rcx, rbx
call	0x14009d490
call	0x14009d490
mov	rax, qword ptr [rsp + 0x60]
test	rax, rax
je	0x14001dcbe
je	0x14001dcbe
mov	rcx, rsi
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x78
pop	rbx
pop	rsi
ret	
ret	
call	0x1400a0690
call	0x1400a0690
lea	rcx, [rip + 0x9be2e]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x60]
test	rax, rax
je	0x14001dceb
je	0x14001dceb
mov	rcx, rsi
call	rax
call	rax
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
mov	rax, qword ptr [rsp + 0xc8]
mov	rdx, qword ptr [rdx + 0x20]
mov	rax, qword ptr [rax]
mov	rbx, rcx
mov	rcx, qword ptr [rax - 0x18]
mov	qword ptr [rsp + 0x30], rax
lea	rsi, [rsp + 0x50]
mov	eax, dword ptr [rsp + 0xc0]
mov	dword ptr [rsp + 0x20], r9d
mov	r9d, r8d
mov	r8, rsi
mov	qword ptr [rsp + 0x38], rcx
xor	ecx, ecx
mov	dword ptr [rsp + 0x28], eax
mov	qword ptr [rsp + 0x70], 0
call	0x14007d1c0
call	0x14007d1c0
cmp	qword ptr [rsp + 0x70], 0
je	0x14001dd92
je	0x14001dd92
mov	rcx, qword ptr [rsp + 0x50]
mov	rdx, qword ptr [rsp + 0x58]
lea	r8, [rsp + 0x4f]
add	rdx, rcx
call	0x140071eb0
call	0x140071eb0
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rsp + 0x70]
test	rax, rax
je	0x14001dd85
je	0x14001dd85
mov	rcx, rsi
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x9b441]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x70]
test	rax, rax
je	0x14001ddb0
je	0x14001ddb0
mov	rcx, rsi
call	rax
call	rax
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rcx + 0x20]
xor	ecx, ecx
mov	qword ptr [rsp + 0x20], r8
mov	r9, qword ptr [rdx + 8]
mov	r8, qword ptr [rdx]
mov	rdx, rax
call	0x14007d590
call	0x14007d590
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rdx, qword ptr [rcx + 0x20]
xor	ecx, ecx
mov	r9, qword ptr [rax - 0x18]
mov	qword ptr [rsp + 0x20], r8
mov	r8, rax
call	0x14007d640
call	0x14007d640
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	r8d, edx
mov	rdx, qword ptr [rcx + 0x20]
xor	ecx, ecx
jmp	0x14007d800
jmp	0x14007d800
nop	
nop	
mov	r8d, edx
mov	rdx, qword ptr [rcx + 0x20]
xor	ecx, ecx
jmp	0x14007d7f0
jmp	0x14007d7f0
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x78
mov	rax, qword ptr [rsp + 0xb8]
mov	rdx, qword ptr [rdx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rax + 8]
lea	rsi, [rsp + 0x40]
mov	qword ptr [rsp + 0x60], 0
mov	qword ptr [rsp + 0x38], rcx
mov	rax, qword ptr [rax]
xor	ecx, ecx
mov	dword ptr [rsp + 0x20], r9d
mov	r9d, r8d
mov	r8, rsi
mov	qword ptr [rsp + 0x30], rax
mov	eax, dword ptr [rsp + 0xb0]
mov	dword ptr [rsp + 0x28], eax
call	0x14007d2d0
call	0x14007d2d0
cmp	qword ptr [rsp + 0x60], 0
je	0x14001dede
je	0x14001dede
mov	rdx, qword ptr [rsp + 0x40]
lea	rcx, [rbx + 0x10]
mov	rax, qword ptr [rsp + 0x48]
mov	qword ptr [rbx], rcx
test	rdx, rdx
jne	0x14001deb4
jne	0x14001deb4
test	rax, rax
jne	0x14001ded9
jne	0x14001ded9
lea	r8, [rdx + rax*2]
mov	rcx, rbx
call	0x1400a1530
call	0x1400a1530
mov	rax, qword ptr [rsp + 0x60]
test	rax, rax
je	0x14001decf
je	0x14001decf
mov	rcx, rsi
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x78
pop	rbx
pop	rsi
ret	
ret	
call	0x1400a0690
call	0x1400a0690
lea	rcx, [rip + 0x9bc1d]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x60]
test	rax, rax
je	0x14001defc
je	0x14001defc
mov	rcx, rsi
call	rax
call	rax
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
mov	rax, qword ptr [rsp + 0xc8]
mov	rdx, qword ptr [rdx + 0x20]
mov	rax, qword ptr [rax]
mov	rbx, rcx
mov	rcx, qword ptr [rax - 0x18]
mov	qword ptr [rsp + 0x30], rax
lea	rsi, [rsp + 0x50]
mov	eax, dword ptr [rsp + 0xc0]
mov	dword ptr [rsp + 0x20], r9d
mov	r9d, r8d
mov	r8, rsi
mov	qword ptr [rsp + 0x38], rcx
xor	ecx, ecx
mov	dword ptr [rsp + 0x28], eax
mov	qword ptr [rsp + 0x70], 0
call	0x14007d480
call	0x14007d480
cmp	qword ptr [rsp + 0x70], 0
je	0x14001dfa3
je	0x14001dfa3
mov	rcx, qword ptr [rsp + 0x50]
mov	rax, qword ptr [rsp + 0x58]
lea	r8, [rsp + 0x4f]
lea	rdx, [rcx + rax*2]
call	0x140068a00
call	0x140068a00
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rsp + 0x70]
test	rax, rax
je	0x14001df96
je	0x14001df96
mov	rcx, rsi
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x9b230]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x70]
test	rax, rax
je	0x14001dfc1
je	0x14001dfc1
mov	rcx, rsi
call	rax
call	rax
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rcx + 0x20]
xor	ecx, ecx
mov	qword ptr [rsp + 0x20], r8
mov	r9, qword ptr [rdx + 8]
mov	r8, qword ptr [rdx]
mov	rdx, rax
call	0x14007d6c0
call	0x14007d6c0
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rdx, qword ptr [rcx + 0x20]
xor	ecx, ecx
mov	r9, qword ptr [rax - 0x18]
mov	qword ptr [rsp + 0x20], r8
mov	r8, rax
call	0x14007d770
call	0x14007d770
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	r8d, edx
mov	rdx, qword ptr [rcx + 0x20]
xor	ecx, ecx
jmp	0x14007d820
jmp	0x14007d820
nop	
nop	
mov	r8d, edx
mov	rdx, qword ptr [rcx + 0x20]
xor	ecx, ecx
jmp	0x14007d810
jmp	0x14007d810
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x64
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007a070
call	0x14007a070
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x64
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x140079f20
call	0x140079f20
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x74
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007a070
call	0x14007a070
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x74
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x140079f20
call	0x140079f20
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x79
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007a070
call	0x14007a070
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x79
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x140079f20
call	0x140079f20
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rcx + 0x10]
xor	ecx, ecx
jmp	0x14007dbe0
jmp	0x14007dbe0
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rcx + 0x10]
xor	ecx, ecx
jmp	0x14007dbd0
jmp	0x14007dbd0
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x77
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007a070
call	0x14007a070
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x77
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x140079f20
call	0x140079f20
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x6d
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007a070
call	0x14007a070
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x6d
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x140079f20
call	0x140079f20
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x64
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007a310
call	0x14007a310
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x64
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007a1c0
call	0x14007a1c0
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x74
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007a310
call	0x14007a310
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x74
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007a1c0
call	0x14007a1c0
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x79
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007a310
call	0x14007a310
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x79
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007a1c0
call	0x14007a1c0
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rcx + 0x10]
xor	ecx, ecx
jmp	0x14007dc00
jmp	0x14007dc00
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rcx + 0x10]
xor	ecx, ecx
jmp	0x14007dbf0
jmp	0x14007dbf0
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x77
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007a310
call	0x14007a310
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x77
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007a1c0
call	0x14007a1c0
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x6d
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007a310
call	0x14007a310
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rbx, rcx
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x40], 0x6d
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], r11
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007a1c0
call	0x14007a1c0
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xe8
mov	rsi, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	r8, qword ptr [r9]
mov	r9, qword ptr [r9 + 8]
mov	r12, qword ptr [rsp + 0x168]
lea	rax, [rsp + 0x84]
mov	qword ptr [rsp + 0x50], r8
mov	r8, qword ptr [rdx + 0x10]
mov	rdi, rcx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x158]
lea	rcx, [rsp + 0x70]
xor	edx, edx
lea	rbp, [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x30], rax
movzx	eax, byte ptr [rsp + 0x150]
mov	qword ptr [rsp + 0x48], rbp
mov	dword ptr [rsp + 0x28], eax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x58], r9
lea	r9, [rsp + 0x60]
mov	qword ptr [rsp + 0xd0], 0
mov	dword ptr [rsp + 0x84], 0
mov	qword ptr [rsp + 0x60], rsi
mov	qword ptr [rsp + 0x68], rbx
call	0x14007a460
call	0x14007a460
movabs	rdx, 0xffffffff00000000
mov	rax, qword ptr [rsp + 0x70]
and	rbx, rdx
mov	edx, dword ptr [rsp + 0x84]
mov	qword ptr [rsp + 0x70], rax
mov	rsi, rax
mov	eax, dword ptr [rsp + 0x78]
or	rbx, rax
mov	rax, qword ptr [rsp + 0xd0]
test	edx, edx
je	0x14001ebb0
je	0x14001ebb0
mov	rcx, qword ptr [rsp + 0x160]
mov	dword ptr [rcx], edx
mov	qword ptr [rdi], rsi
mov	qword ptr [rdi + 8], rbx
test	rax, rax
je	0x14001eb91
je	0x14001eb91
mov	rcx, rbp
call	rax
call	rax
mov	rax, rdi
add	rsp, 0xe8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
test	rax, rax
je	0x14001ee6c
je	0x14001ee6c
mov	r15, qword ptr [rsp + 0xb0]
lea	r14, [rsp + 0xa0]
mov	r13, qword ptr [rsp + 0xb8]
mov	qword ptr [rsp + 0x90], r14
test	r15, r15
jne	0x14001ebe7
jne	0x14001ebe7
test	r13, r13
jne	0x14001edb4
jne	0x14001edb4
mov	qword ptr [rsp + 0x88], r13
cmp	r13, 0xf
ja	0x14001ecc0
ja	0x14001ecc0
cmp	r13, 1
jne	0x14001eca8
jne	0x14001eca8
movzx	eax, byte ptr [r15]
mov	byte ptr [rsp + 0xa0], al
mov	rax, r14
mov	qword ptr [rsp + 0x98], r13
lea	rdx, [r12 + 0x10]
mov	byte ptr [rax + r13], 0
mov	rax, qword ptr [r12]
cmp	rax, rdx
mov	rcx, rax
mov	rdx, qword ptr [rsp + 0x90]
je	0x14001ed18
je	0x14001ed18
cmp	rdx, r14
je	0x14001ed50
je	0x14001ed50
movdqu	xmm0, xmmword ptr [rsp + 0x98]
mov	rcx, qword ptr [r12 + 0x10]
mov	qword ptr [r12], rdx
movups	xmmword ptr [r12 + 8], xmm0
test	rax, rax
je	0x14001ed30
je	0x14001ed30
mov	qword ptr [rsp + 0x90], rax
mov	qword ptr [rsp + 0xa0], rcx
mov	qword ptr [rsp + 0x98], 0
mov	byte ptr [rax], 0
mov	rcx, qword ptr [rsp + 0x90]
cmp	rcx, r14
je	0x14001ec96
je	0x14001ec96
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0xd0]
jmp	0x14001eb80
jmp	0x14001eb80
nop	dword ptr [rax + rax]
test	r13, r13
jne	0x14001ee78
jne	0x14001ee78
mov	rax, r14
jmp	0x14001ec11
jmp	0x14001ec11
nop	dword ptr [rax]
lea	rdx, [rsp + 0x88]
lea	rcx, [rsp + 0x90]
xor	r8d, r8d
call	0x14009fa70
call	0x14009fa70
mov	qword ptr [rsp + 0x90], rax
mov	rcx, rax
mov	rax, qword ptr [rsp + 0x88]
mov	qword ptr [rsp + 0xa0], rax
mov	r8, r13
mov	rdx, r15
call	0x140015998
call	0x140015998
mov	r13, qword ptr [rsp + 0x88]
mov	rax, qword ptr [rsp + 0x90]
jmp	0x14001ec11
jmp	0x14001ec11
nop	dword ptr [rax + rax]
cmp	rdx, r14
je	0x14001ed50
je	0x14001ed50
movdqu	xmm1, xmmword ptr [rsp + 0x98]
mov	qword ptr [r12], rdx
movups	xmmword ptr [r12 + 8], xmm1
mov	qword ptr [rsp + 0x90], r14
lea	r14, [rsp + 0xa0]
mov	rax, r14
jmp	0x14001ec75
jmp	0x14001ec75
nop	dword ptr [rax + rax]
mov	rdx, qword ptr [rsp + 0x98]
mov	r8, rdx
test	rdx, rdx
je	0x14001ed9e
je	0x14001ed9e
cmp	rdx, 1
je	0x14001edc0
je	0x14001edc0
mov	eax, edx
cmp	edx, 8
jae	0x14001edd8
jae	0x14001edd8
test	dl, 4
jne	0x14001ee2d
jne	0x14001ee2d
test	eax, eax
je	0x14001ed98
je	0x14001ed98
movzx	edx, byte ptr [rsp + 0xa0]
mov	byte ptr [rcx], dl
test	al, 2
jne	0x14001ee50
jne	0x14001ee50
mov	rcx, qword ptr [r12]
mov	r8, qword ptr [rsp + 0x98]
mov	rdx, r8
mov	rax, rcx
mov	qword ptr [r12 + 8], rdx
mov	byte ptr [rax + rdx], 0
mov	rax, qword ptr [rsp + 0x90]
jmp	0x14001ec75
jmp	0x14001ec75
call	0x1400a0690
call	0x1400a0690
nop	dword ptr [rax]
movzx	eax, byte ptr [rsp + 0xa0]
mov	byte ptr [rcx], al
mov	rdx, qword ptr [rsp + 0x98]
mov	rax, qword ptr [r12]
jmp	0x14001ed9e
jmp	0x14001ed9e
mov	rax, qword ptr [rsp + 0xa0]
lea	r9, [rcx + 8]
mov	r10, r14
and	r9, 0xfffffffffffffff8
mov	qword ptr [rcx], rax
mov	eax, edx
mov	rdx, qword ptr [r14 + rax - 8]
mov	qword ptr [rcx + rax - 8], rdx
mov	rax, rcx
sub	rax, r9
sub	r10, rax
add	eax, r8d
and	eax, 0xfffffff8
cmp	eax, 8
jb	0x14001ed8c
jb	0x14001ed8c
and	eax, 0xfffffff8
xor	edx, edx
mov	ecx, edx
add	edx, 8
mov	r8, qword ptr [r10 + rcx]
mov	qword ptr [r9 + rcx], r8
cmp	edx, eax
jb	0x14001ee17
jb	0x14001ee17
jmp	0x14001ed8c
jmp	0x14001ed8c
mov	edx, dword ptr [rsp + 0xa0]
mov	dword ptr [rcx], edx
mov	edx, dword ptr [r14 + rax - 4]
mov	dword ptr [rcx + rax - 4], edx
mov	rcx, qword ptr [r12]
mov	r8, qword ptr [rsp + 0x98]
jmp	0x14001ed98
jmp	0x14001ed98
movzx	edx, word ptr [r14 + rax - 2]
mov	word ptr [rcx + rax - 2], dx
mov	rcx, qword ptr [r12]
mov	r8, qword ptr [rsp + 0x98]
jmp	0x14001ed98
jmp	0x14001ed98
lea	rcx, [rip + 0x9ac8f]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rcx, r14
jmp	0x14001ecf3
jmp	0x14001ecf3
mov	rbx, rax
mov	rax, qword ptr [rsp + 0xd0]
test	rax, rax
je	0x14001ee95
je	0x14001ee95
mov	rcx, rbp
call	rax
call	rax
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xc0
mov	rsi, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
lea	rax, [rsp + 0x84]
mov	rdi, rcx
lea	r9, [rsp + 0x60]
mov	qword ptr [rsp + 0x60], rsi
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x118]
lea	rcx, [rsp + 0x70]
lea	rbp, [rsp + 0x90]
mov	qword ptr [rsp + 0x48], rbp
mov	qword ptr [rsp + 0x30], rax
movzx	eax, byte ptr [rsp + 0x110]
mov	qword ptr [rsp + 0x40], 0
mov	dword ptr [rsp + 0x28], eax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0xb0], 0
mov	dword ptr [rsp + 0x84], 0
mov	qword ptr [rsp + 0x68], rbx
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007a6b0
call	0x14007a6b0
movabs	rdx, 0xffffffff00000000
mov	rax, qword ptr [rsp + 0x70]
and	rbx, rdx
mov	edx, dword ptr [rsp + 0x84]
mov	qword ptr [rsp + 0x70], rax
mov	rsi, rax
mov	eax, dword ptr [rsp + 0x78]
or	rbx, rax
mov	rax, qword ptr [rsp + 0xb0]
test	edx, edx
je	0x14001efa0
je	0x14001efa0
mov	rcx, qword ptr [rsp + 0x120]
mov	dword ptr [rcx], edx
mov	qword ptr [rdi], rsi
mov	qword ptr [rdi + 8], rbx
test	rax, rax
je	0x14001ef8c
je	0x14001ef8c
mov	rcx, rbp
call	rax
call	rax
mov	rax, rdi
add	rsp, 0xc0
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
test	rax, rax
je	0x14001f03c
je	0x14001f03c
mov	rcx, qword ptr [rsp + 0x90]
mov	rdx, qword ptr [rsp + 0x98]
lea	r12, [rsp + 0x83]
mov	r8, r12
add	rdx, rcx
call	0x140071eb0
call	0x140071eb0
mov	rcx, qword ptr [rsp + 0x128]
lea	rdx, [rsp + 0x88]
mov	qword ptr [rsp + 0x88], rax
call	0x140072780
call	0x140072780
mov	rax, qword ptr [rip + 0x9f640]
mov	rcx, qword ptr [rsp + 0x88]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14001f030
jne	0x14001f030
mov	edx, dword ptr [rcx - 8]
lea	eax, [rdx - 1]
mov	dword ptr [rcx - 8], eax
mov	rax, qword ptr [rsp + 0xb0]
test	edx, edx
jg	0x14001ef7b
jg	0x14001ef7b
sub	rcx, 0x18
mov	rdx, r12
call	0x140072480
call	0x140072480
mov	rax, qword ptr [rsp + 0xb0]
jmp	0x14001ef7b
jmp	0x14001ef7b
mov	edx, 0xffffffff
lock xadd	dword ptr [rcx - 8], edx
jmp	0x14001f007
jmp	0x14001f007
lea	rcx, [rip + 0x9a197]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rbx, rax
mov	rax, qword ptr [rsp + 0xb0]
test	rax, rax
je	0x14001f05d
je	0x14001f05d
mov	rcx, rbp
call	rax
call	rax
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0xa8
mov	rax, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x60], rax
lea	rax, [rsp + 0x90]
mov	rsi, rcx
lea	r9, [rsp + 0x60]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0x8c]
lea	rcx, [rsp + 0x70]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0x48], 0
mov	qword ptr [rsp + 0x30], rax
movzx	eax, byte ptr [rsp + 0xe0]
mov	qword ptr [rsp + 0x68], rbx
mov	dword ptr [rsp + 0x28], eax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	dword ptr [rsp + 0x8c], 0
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007a6b0
call	0x14007a6b0
mov	rdx, qword ptr [rsp + 0x70]
movabs	rcx, 0xffffffff00000000
and	rbx, rcx
mov	qword ptr [rsp + 0x70], rdx
mov	rax, rdx
mov	edx, dword ptr [rsp + 0x78]
or	rbx, rdx
mov	edx, dword ptr [rsp + 0x8c]
test	edx, edx
jne	0x14001f150
jne	0x14001f150
fld	xword ptr [rsp + 0x90]
mov	rdx, qword ptr [rsp + 0xf8]
fstp	xword ptr [rdx]
mov	qword ptr [rsi], rax
mov	rax, rsi
mov	qword ptr [rsi + 8], rbx
add	rsp, 0xa8
pop	rbx
pop	rsi
ret	
ret	
nop	
mov	rcx, qword ptr [rsp + 0xf0]
mov	dword ptr [rcx], edx
jmp	0x14001f13a
jmp	0x14001f13a
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0xa8
mov	rax, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x60], rax
lea	rax, [rsp + 0x90]
mov	rsi, rcx
lea	r9, [rsp + 0x60]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0x8c]
lea	rcx, [rsp + 0x70]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0x48], 0
mov	qword ptr [rsp + 0x30], rax
movzx	eax, byte ptr [rsp + 0xe0]
mov	qword ptr [rsp + 0x68], rbx
mov	dword ptr [rsp + 0x28], eax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	dword ptr [rsp + 0x8c], 0
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007a460
call	0x14007a460
mov	rdx, qword ptr [rsp + 0x70]
movabs	rcx, 0xffffffff00000000
and	rbx, rcx
mov	qword ptr [rsp + 0x70], rdx
mov	rax, rdx
mov	edx, dword ptr [rsp + 0x78]
or	rbx, rdx
mov	edx, dword ptr [rsp + 0x8c]
test	edx, edx
jne	0x14001f240
jne	0x14001f240
fld	xword ptr [rsp + 0x90]
mov	rdx, qword ptr [rsp + 0xf8]
fstp	xword ptr [rdx]
mov	qword ptr [rsi], rax
mov	rax, rsi
mov	qword ptr [rsi + 8], rbx
add	rsp, 0xa8
pop	rbx
pop	rsi
ret	
ret	
nop	
mov	rcx, qword ptr [rsp + 0xf0]
mov	dword ptr [rcx], edx
jmp	0x14001f22a
jmp	0x14001f22a
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xe8
mov	rsi, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	r8, qword ptr [r9]
mov	r9, qword ptr [r9 + 8]
lea	rax, [rsp + 0x84]
mov	qword ptr [rsp + 0x50], r8
mov	r8, qword ptr [rdx + 0x10]
mov	rdi, rcx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x158]
lea	rcx, [rsp + 0x70]
xor	edx, edx
lea	rbp, [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x30], rax
movzx	eax, byte ptr [rsp + 0x150]
mov	qword ptr [rsp + 0x48], rbp
mov	dword ptr [rsp + 0x28], eax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x58], r9
lea	r9, [rsp + 0x60]
mov	qword ptr [rsp + 0xd0], 0
mov	dword ptr [rsp + 0x84], 0
mov	qword ptr [rsp + 0x60], rsi
mov	qword ptr [rsp + 0x68], rbx
call	0x14007a870
call	0x14007a870
mov	rax, qword ptr [rsp + 0x70]
mov	edx, dword ptr [rsp + 0x84]
xor	bx, bx
mov	qword ptr [rsp + 0x70], rax
mov	rsi, rax
movzx	eax, word ptr [rsp + 0x78]
or	rbx, rax
mov	rax, qword ptr [rsp + 0xd0]
test	edx, edx
je	0x14001f360
je	0x14001f360
mov	rcx, qword ptr [rsp + 0x160]
mov	dword ptr [rcx], edx
mov	qword ptr [rdi], rsi
mov	qword ptr [rdi + 8], rbx
test	rax, rax
je	0x14001f340
je	0x14001f340
mov	rcx, rbp
call	rax
call	rax
mov	rax, rdi
add	rsp, 0xe8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
test	rax, rax
je	0x14001f5a8
je	0x14001f5a8
mov	r15, qword ptr [rsp + 0xb0]
lea	r13, [rsp + 0xa0]
mov	r12, qword ptr [rsp + 0xb8]
mov	qword ptr [rsp + 0x90], r13
test	r15, r15
jne	0x14001f397
jne	0x14001f397
test	r12, r12
jne	0x14001f58f
jne	0x14001f58f
add	r12, r12
mov	r14, r12
sar	r14, 1
mov	qword ptr [rsp + 0x88], r14
mov	rax, r14
cmp	r12, 0xe
ja	0x14001f520
ja	0x14001f520
cmp	r14, 1
jne	0x14001f470
jne	0x14001f470
movzx	edx, word ptr [r15]
xor	r11d, r11d
mov	r8d, 2
mov	qword ptr [rsp + 0x98], 1
mov	word ptr [rsp + 0xa2], r11w
mov	word ptr [rsp + 0xa0], dx
mov	rdx, qword ptr [rsp + 0x168]
mov	rcx, qword ptr [rdx]
add	rdx, 0x10
cmp	rcx, rdx
mov	rdx, r13
je	0x14001f598
je	0x14001f598
cmp	rdx, r13
je	0x14001f4f8
je	0x14001f4f8
mov	r10, qword ptr [rsp + 0x168]
movq	xmm0, rax
movhps	xmm0, qword ptr [rsp + 0xa0]
mov	r8, qword ptr [r10 + 0x10]
mov	qword ptr [r10], rdx
movups	xmmword ptr [r10 + 8], xmm0
test	rcx, rcx
je	0x14001f45e
je	0x14001f45e
mov	qword ptr [rsp + 0x90], rcx
mov	qword ptr [rsp + 0xa0], r8
mov	qword ptr [rsp + 0x98], 0
xor	eax, eax
mov	word ptr [rcx], ax
cmp	rcx, r13
je	0x14001f45e
je	0x14001f45e
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0xd0]
jmp	0x14001f32f
jmp	0x14001f32f
nop	dword ptr [rax + rax]
mov	rcx, r13
test	r14, r14
je	0x14001f483
je	0x14001f483
mov	r8, r12
mov	rdx, r15
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rsp + 0x88]
mov	rdx, qword ptr [rsp + 0x90]
xor	r10d, r10d
mov	rcx, qword ptr [rsp + 0x168]
lea	r8, [rax + rax]
mov	qword ptr [rsp + 0x98], rax
mov	word ptr [rdx + r8], r10w
mov	r10, qword ptr [rsp + 0x168]
mov	rcx, qword ptr [rcx]
lea	r9, [r10 + 0x10]
cmp	rcx, r9
jne	0x14001f404
jne	0x14001f404
cmp	rdx, r13
je	0x14001f4f8
je	0x14001f4f8
mov	rcx, qword ptr [rsp + 0x168]
movq	xmm0, rax
mov	rax, qword ptr [rsp + 0xd0]
movhps	xmm0, qword ptr [rsp + 0xa0]
mov	qword ptr [rcx], rdx
movups	xmmword ptr [rcx + 8], xmm0
jmp	0x14001f32f
jmp	0x14001f32f
nop	dword ptr [rax]
test	rax, rax
jne	0x14001f560
jne	0x14001f560
mov	r11, qword ptr [rsp + 0x168]
xor	r9d, r9d
mov	qword ptr [r11 + 8], rax
mov	word ptr [rcx + r8], r9w
mov	rcx, rdx
jmp	0x14001f443
jmp	0x14001f443
nop	dword ptr [rax]
lea	rdx, [rsp + 0x88]
lea	rcx, [rsp + 0x90]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	qword ptr [rsp + 0x90], rax
mov	rcx, rax
mov	rax, qword ptr [rsp + 0x88]
mov	qword ptr [rsp + 0xa0], rax
jmp	0x14001f473
jmp	0x14001f473
nop	dword ptr [rax + rax]
cmp	rax, 1
je	0x14001f598
je	0x14001f598
call	0x140015998
call	0x140015998
mov	rdx, qword ptr [rsp + 0x168]
mov	rax, qword ptr [rsp + 0x98]
mov	rcx, qword ptr [rdx]
lea	r8, [rax + rax]
mov	rdx, qword ptr [rsp + 0x90]
jmp	0x14001f4fd
jmp	0x14001f4fd
call	0x1400a0690
call	0x1400a0690
nop	dword ptr [rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
mov	eax, 1
jmp	0x14001f4fd
jmp	0x14001f4fd
lea	rcx, [rip + 0x9a553]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rbx, rax
mov	rax, qword ptr [rsp + 0xd0]
test	rax, rax
je	0x14001f5c9
je	0x14001f5c9
mov	rcx, rbp
call	rax
call	rax
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xc0
mov	rsi, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
lea	rax, [rsp + 0x84]
mov	rdi, rcx
lea	r9, [rsp + 0x60]
mov	qword ptr [rsp + 0x60], rsi
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x118]
lea	rcx, [rsp + 0x70]
lea	rbp, [rsp + 0x90]
mov	qword ptr [rsp + 0x48], rbp
mov	qword ptr [rsp + 0x30], rax
movzx	eax, byte ptr [rsp + 0x110]
mov	qword ptr [rsp + 0x40], 0
mov	dword ptr [rsp + 0x28], eax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0xb0], 0
mov	dword ptr [rsp + 0x84], 0
mov	qword ptr [rsp + 0x68], rbx
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007aab0
call	0x14007aab0
mov	rax, qword ptr [rsp + 0x70]
mov	edx, dword ptr [rsp + 0x84]
xor	bx, bx
mov	qword ptr [rsp + 0x70], rax
mov	rsi, rax
movzx	eax, word ptr [rsp + 0x78]
or	rbx, rax
mov	rax, qword ptr [rsp + 0xb0]
test	edx, edx
je	0x14001f6d8
je	0x14001f6d8
mov	rcx, qword ptr [rsp + 0x120]
mov	dword ptr [rcx], edx
mov	qword ptr [rdi], rsi
mov	qword ptr [rdi + 8], rbx
test	rax, rax
je	0x14001f6c3
je	0x14001f6c3
mov	rcx, rbp
call	rax
call	rax
mov	rax, rdi
add	rsp, 0xc0
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
test	rax, rax
je	0x14001f77c
je	0x14001f77c
mov	rcx, qword ptr [rsp + 0x90]
mov	rax, qword ptr [rsp + 0x98]
lea	r12, [rsp + 0x83]
mov	r8, r12
lea	rdx, [rcx + rax*2]
call	0x140068a00
call	0x140068a00
mov	rcx, qword ptr [rsp + 0x128]
lea	rdx, [rsp + 0x88]
mov	qword ptr [rsp + 0x88], rax
call	0x140069230
call	0x140069230
mov	rax, qword ptr [rip + 0x9ef07]
mov	rcx, qword ptr [rsp + 0x88]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14001f770
jne	0x14001f770
mov	edx, dword ptr [rcx - 8]
lea	eax, [rdx - 1]
mov	dword ptr [rcx - 8], eax
mov	rax, qword ptr [rsp + 0xb0]
test	edx, edx
jg	0x14001f6b2
jg	0x14001f6b2
sub	rcx, 0x18
mov	rdx, r12
call	0x140068ef0
call	0x140068ef0
mov	rax, qword ptr [rsp + 0xb0]
jmp	0x14001f6b2
jmp	0x14001f6b2
nop	dword ptr [rax]
mov	edx, 0xffffffff
lock xadd	dword ptr [rcx - 8], edx
jmp	0x14001f740
jmp	0x14001f740
lea	rcx, [rip + 0x99a57]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rbx, rax
mov	rax, qword ptr [rsp + 0xb0]
test	rax, rax
je	0x14001f79d
je	0x14001f79d
mov	rcx, rbp
call	rax
call	rax
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0xa8
mov	rax, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x60], rax
lea	rax, [rsp + 0x90]
mov	rsi, rcx
lea	r9, [rsp + 0x60]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0x8c]
lea	rcx, [rsp + 0x70]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0x48], 0
mov	qword ptr [rsp + 0x30], rax
movzx	eax, byte ptr [rsp + 0xe0]
mov	qword ptr [rsp + 0x68], rbx
xor	bx, bx
mov	dword ptr [rsp + 0x28], eax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	dword ptr [rsp + 0x8c], 0
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007aab0
call	0x14007aab0
mov	rdx, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x70], rdx
mov	rax, rdx
movzx	edx, word ptr [rsp + 0x78]
or	rbx, rdx
mov	edx, dword ptr [rsp + 0x8c]
test	edx, edx
jne	0x14001f888
jne	0x14001f888
fld	xword ptr [rsp + 0x90]
mov	rdx, qword ptr [rsp + 0xf8]
fstp	xword ptr [rdx]
mov	qword ptr [rsi], rax
mov	rax, rsi
mov	qword ptr [rsi + 8], rbx
add	rsp, 0xa8
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0xf0]
mov	dword ptr [rcx], edx
jmp	0x14001f871
jmp	0x14001f871
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0xa8
mov	rax, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
mov	qword ptr [rsp + 0x60], rax
lea	rax, [rsp + 0x90]
mov	rsi, rcx
lea	r9, [rsp + 0x60]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0x8c]
lea	rcx, [rsp + 0x70]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0x48], 0
mov	qword ptr [rsp + 0x30], rax
movzx	eax, byte ptr [rsp + 0xe0]
mov	qword ptr [rsp + 0x68], rbx
xor	bx, bx
mov	dword ptr [rsp + 0x28], eax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rax
mov	dword ptr [rsp + 0x8c], 0
movups	xmmword ptr [rsp + 0x50], xmm0
call	0x14007a870
call	0x14007a870
mov	rdx, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x70], rdx
mov	rax, rdx
movzx	edx, word ptr [rsp + 0x78]
or	rbx, rdx
mov	edx, dword ptr [rsp + 0x8c]
test	edx, edx
jne	0x14001f978
jne	0x14001f978
fld	xword ptr [rsp + 0x90]
mov	rdx, qword ptr [rsp + 0xf8]
fstp	xword ptr [rdx]
mov	qword ptr [rsi], rax
mov	rax, rsi
mov	qword ptr [rsi + 8], rbx
add	rsp, 0xa8
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0xf0]
mov	dword ptr [rcx], edx
jmp	0x14001f961
jmp	0x14001f961
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xb0
movups	xmmword ptr [rsp + 0xa0], xmm6
mov	rax, qword ptr [rsp + 0x110]
movdqu	xmm6, xmmword ptr [r8]
mov	ebp, dword ptr [rsp + 0x108]
mov	r8, qword ptr [rax + 8]
mov	rdi, rdx
lea	r12, [rsp + 0x70]
mov	rsi, rcx
mov	ebx, r9d
lea	rdx, [rsp + 0x80]
mov	rcx, r12
mov	qword ptr [rsp + 0x90], 0
mov	qword ptr [rsp + 0x70], rdx
mov	rdx, qword ptr [rax]
add	r8, rdx
call	0x14009d7c0
call	0x14009d7c0
lea	rax, [rip + 0x5d577]
movsx	ebp, bpl
movzx	ebx, bl
xor	edx, edx
mov	qword ptr [rsp + 0x40], r12
fldz	
lea	r9, [rsp + 0x60]
mov	rcx, rsi
mov	qword ptr [rsp + 0x90], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x100]
mov	dword ptr [rsp + 0x30], ebp
mov	qword ptr [rsp + 0x28], rax
mov	dword ptr [rsp + 0x20], ebx
mov	r8, qword ptr [rdi + 0x10]
fstp	xword ptr [rsp + 0x50]
movups	xmmword ptr [rsp + 0x60], xmm6
call	0x14007ac70
call	0x14007ac70
mov	rax, qword ptr [rsp + 0x90]
test	rax, rax
je	0x14001fa5d
je	0x14001fa5d
mov	rcx, r12
call	rax
call	rax
nop	
movups	xmm6, xmmword ptr [rsp + 0xa0]
mov	rax, rsi
add	rsp, 0xb0
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x90]
test	rax, rax
je	0x14001fa8b
je	0x14001fa8b
mov	rcx, r12
call	rax
call	rax
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xc0
movups	xmmword ptr [rsp + 0xb0], xmm6
mov	r12, qword ptr [rsp + 0x120]
movdqu	xmm6, xmmword ptr [r8]
mov	ebp, dword ptr [rsp + 0x118]
mov	rax, qword ptr [r12]
mov	rdi, rdx
mov	rsi, rcx
lea	r8, [rax - 8]
mov	ebx, r9d
mov	qword ptr [rsp + 0xa0], 0
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
test	edx, edx
js	0x14001fbb0
js	0x14001fbb0
mov	rdx, qword ptr [rip + 0x9eb34]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x14001fbc8
jne	0x14001fbc8
add	dword ptr [rax - 8], 1
mov	qword ptr [rsp + 0x80], rax
mov	rax, qword ptr [r12]
fldz	
xor	edx, edx
movsx	ebp, bpl
movzx	ebx, bl
lea	r9, [rsp + 0x60]
mov	rcx, rsi
mov	rax, qword ptr [rax - 0x18]
lea	r12, [rsp + 0x80]
mov	dword ptr [rsp + 0x30], ebp
mov	qword ptr [rsp + 0x40], r12
mov	qword ptr [rsp + 0x88], rax
lea	rax, [rip + 0x5d3c3]
mov	qword ptr [rsp + 0xa0], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x110]
mov	dword ptr [rsp + 0x20], ebx
mov	qword ptr [rsp + 0x28], rax
mov	r8, qword ptr [rdi + 0x10]
fstp	xword ptr [rsp + 0x50]
movups	xmmword ptr [rsp + 0x60], xmm6
call	0x14007ade0
call	0x14007ade0
mov	rax, qword ptr [rsp + 0xa0]
test	rax, rax
je	0x14001fb95
je	0x14001fb95
mov	rcx, r12
call	rax
call	rax
nop	
movups	xmm6, xmmword ptr [rsp + 0xb0]
mov	rax, rsi
add	rsp, 0xc0
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
lea	rdx, [rsp + 0x7f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
jmp	0x14001fb0a
jmp	0x14001fb0a
nop	word ptr [rax + rax]
lock add	dword ptr [r8], 1
jmp	0x14001fb0a
jmp	0x14001fb0a
mov	rbx, rax
mov	rax, qword ptr [rsp + 0xa0]
test	rax, rax
je	0x14001fbec
je	0x14001fbec
lea	rcx, [rsp + 0x80]
call	rax
call	rax
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
fld	xword ptr [rax]
lea	rax, [rsp + 0x50]
movzx	r9d, r9b
mov	rbx, rcx
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x38], rax
movsx	eax, byte ptr [rsp + 0xa8]
mov	dword ptr [rsp + 0x20], r9d
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x30], eax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x28], rax
fstp	xword ptr [rsp + 0x50]
mov	qword ptr [rsp + 0x68], r11
call	0x14007ade0
call	0x14007ade0
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
fld	xword ptr [rax]
lea	rax, [rsp + 0x50]
movzx	r9d, r9b
mov	rbx, rcx
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x38], rax
movsx	eax, byte ptr [rsp + 0xa8]
mov	dword ptr [rsp + 0x20], r9d
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x30], eax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x28], rax
fstp	xword ptr [rsp + 0x50]
mov	qword ptr [rsp + 0x68], r11
call	0x14007ac70
call	0x14007ac70
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xb0
movups	xmmword ptr [rsp + 0xa0], xmm6
mov	rax, qword ptr [rsp + 0x110]
movdqu	xmm6, xmmword ptr [r8]
mov	ebp, dword ptr [rsp + 0x108]
mov	rdi, rdx
lea	r12, [rsp + 0x70]
mov	rsi, rcx
mov	ebx, r9d
lea	rdx, [rsp + 0x80]
mov	rcx, r12
mov	qword ptr [rsp + 0x90], 0
mov	qword ptr [rsp + 0x70], rdx
mov	rdx, qword ptr [rax]
mov	rax, qword ptr [rax + 8]
lea	r8, [rdx + rax*2]
call	0x1400a1700
call	0x1400a1700
lea	rax, [rip + 0x5d286]
movzx	ebp, bp
movzx	ebx, bl
xor	edx, edx
mov	qword ptr [rsp + 0x40], r12
fldz	
lea	r9, [rsp + 0x60]
mov	rcx, rsi
mov	qword ptr [rsp + 0x90], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x100]
mov	dword ptr [rsp + 0x30], ebp
mov	qword ptr [rsp + 0x28], rax
mov	dword ptr [rsp + 0x20], ebx
mov	r8, qword ptr [rdi + 0x10]
fstp	xword ptr [rsp + 0x50]
movups	xmmword ptr [rsp + 0x60], xmm6
call	0x14007afd0
call	0x14007afd0
mov	rax, qword ptr [rsp + 0x90]
test	rax, rax
je	0x14001fdcd
je	0x14001fdcd
mov	rcx, r12
call	rax
call	rax
nop	
movups	xmm6, xmmword ptr [rsp + 0xa0]
mov	rax, rsi
add	rsp, 0xb0
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x90]
test	rax, rax
je	0x14001fdfb
je	0x14001fdfb
mov	rcx, r12
call	rax
call	rax
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xc0
movups	xmmword ptr [rsp + 0xb0], xmm6
mov	r12, qword ptr [rsp + 0x120]
movdqu	xmm6, xmmword ptr [r8]
mov	ebp, dword ptr [rsp + 0x118]
mov	rax, qword ptr [r12]
mov	rdi, rdx
mov	rsi, rcx
lea	r8, [rax - 8]
mov	ebx, r9d
mov	qword ptr [rsp + 0xa0], 0
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
test	edx, edx
js	0x14001ff20
js	0x14001ff20
mov	rdx, qword ptr [rip + 0x9e7c4]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x14001ff38
jne	0x14001ff38
add	dword ptr [rax - 8], 1
mov	qword ptr [rsp + 0x80], rax
mov	rax, qword ptr [r12]
fldz	
xor	edx, edx
movzx	ebp, bp
movzx	ebx, bl
lea	r9, [rsp + 0x60]
mov	rcx, rsi
mov	rax, qword ptr [rax - 0x18]
lea	r12, [rsp + 0x80]
mov	dword ptr [rsp + 0x30], ebp
mov	qword ptr [rsp + 0x40], r12
mov	qword ptr [rsp + 0x88], rax
lea	rax, [rip + 0x5d0d4]
mov	qword ptr [rsp + 0xa0], rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x110]
mov	dword ptr [rsp + 0x20], ebx
mov	qword ptr [rsp + 0x28], rax
mov	r8, qword ptr [rdi + 0x10]
fstp	xword ptr [rsp + 0x50]
movups	xmmword ptr [rsp + 0x60], xmm6
call	0x14007b140
call	0x14007b140
mov	rax, qword ptr [rsp + 0xa0]
test	rax, rax
je	0x14001ff04
je	0x14001ff04
mov	rcx, r12
call	rax
call	rax
nop	
movups	xmm6, xmmword ptr [rsp + 0xb0]
mov	rax, rsi
add	rsp, 0xc0
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x7f]
xor	r8d, r8d
call	0x140069010
call	0x140069010
jmp	0x14001fe7a
jmp	0x14001fe7a
nop	word ptr [rax + rax]
lock add	dword ptr [r8], 1
jmp	0x14001fe7a
jmp	0x14001fe7a
mov	rbx, rax
mov	rax, qword ptr [rsp + 0xa0]
test	rax, rax
je	0x14001ff5c
je	0x14001ff5c
lea	rcx, [rsp + 0x80]
call	rax
call	rax
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
fld	xword ptr [rax]
lea	rax, [rsp + 0x50]
movzx	r9d, r9b
mov	rbx, rcx
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x38], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	dword ptr [rsp + 0x20], r9d
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x30], eax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x28], rax
fstp	xword ptr [rsp + 0x50]
mov	qword ptr [rsp + 0x68], r11
call	0x14007b140
call	0x14007b140
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x70
mov	rax, qword ptr [rsp + 0xb0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
mov	r8, qword ptr [rdx + 0x10]
xor	edx, edx
fld	xword ptr [rax]
lea	rax, [rsp + 0x50]
movzx	r9d, r9b
mov	rbx, rcx
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x38], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	dword ptr [rsp + 0x20], r9d
lea	r9, [rsp + 0x60]
mov	dword ptr [rsp + 0x30], eax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x28], rax
fstp	xword ptr [rsp + 0x50]
mov	qword ptr [rsp + 0x68], r11
call	0x14007afd0
call	0x14007afd0
mov	rax, rbx
add	rsp, 0x70
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x9aa88]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
add	rcx, 0x50
jmp	0x14001d8f0
jmp	0x14001d8f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
add	rcx, 0x50
jmp	0x14001d8f0
jmp	0x14001d8f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rcx + 0x18]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
add	rcx, 0x68
jmp	0x14001d8f0
jmp	0x14001d8f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rcx + 0x18]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
add	rcx, 0x68
jmp	0x14001d8f0
jmp	0x14001d8f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movzx	eax, byte ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movzx	eax, byte ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x57779]
mov	rax, qword ptr [rcx + 8]
cmp	rax, rdx
je	0x14002014a
je	0x14002014a
lea	rdx, [rip + 0x576a9]
lea	rcx, [rip + 0x578d2]
cmp	rax, rdx
sete	dl
cmp	rax, rcx
sete	cl
or	dl, cl
jne	0x140020150
jne	0x140020150
lea	rdx, [rip + 0x5763b]
cmp	rax, rdx
je	0x140020150
je	0x140020150
pxor	xmm0, xmm0
ret	
ret	
nop	
movsd	xmm0, qword ptr [rip + 0x9a298]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rcx + 0x10]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
add	rcx, 0x60
jmp	0x14001d8f0
jmp	0x14001d8f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rcx + 0x10]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
add	rcx, 0x60
jmp	0x14001d8f0
jmp	0x14001d8f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rcx + 8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
add	rcx, 0x58
jmp	0x14001d8f0
jmp	0x14001d8f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rcx + 8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
add	rcx, 0x58
jmp	0x14001d8f0
jmp	0x14001d8f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x28]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x18]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x30]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x20]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
add	rdx, 0x38
call	0x14009be20
call	0x14009be20
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x28]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x18]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x30]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x20]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
add	rdx, 0x38
call	0x14009be20
call	0x14009be20
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x10]
and	eax, 4
cmp	eax, 1
sbb	eax, eax
and	eax, 0xfffffffd
add	eax, 7
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, qword ptr [rsp + 0x88]
mov	rbp, qword ptr [rsp + 0x90]
mov	edi, dword ptr [rcx + 0xc]
mov	qword ptr [rsp + 0x20], r8
mov	rsi, r9
mov	qword ptr [rsp + 0x28], r9
test	byte ptr [rcx + 0x10], 4
jne	0x1400203b0
jne	0x1400203b0
cmp	r8, rsi
je	0x1400203f5
je	0x1400203f5
lea	rcx, [rsp + 0x20]
cmp	rbp, rbx
je	0x1400203e8
je	0x1400203e8
mov	edx, edi
call	0x140077c30
call	0x140077c30
mov	r8, qword ptr [rsp + 0x20]
cmp	eax, -2
je	0x140020380
je	0x140020380
cmp	edi, eax
jb	0x1400203a8
jb	0x1400203a8
add	rbx, 4
mov	dword ptr [rbx - 4], eax
cmp	rsi, r8
jne	0x140020340
jne	0x140020340
mov	rax, rsi
cmp	rsi, rax
setne	al
movzx	eax, al
jmp	0x140020385
jmp	0x140020385
nop	dword ptr [rax + rax]
mov	eax, 1
mov	rdx, qword ptr [rsp + 0x80]
mov	qword ptr [rdx], r8
mov	rdx, qword ptr [rsp + 0x98]
mov	qword ptr [rdx], rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	eax, 2
jmp	0x140020385
jmp	0x140020385
nop	
mov	rax, r9
sub	rax, r8
cmp	rax, 2
jbe	0x140020332
jbe	0x140020332
cmp	word ptr [r8], 0xbbef
jne	0x140020332
jne	0x140020332
cmp	byte ptr [r8 + 2], 0xbf
jne	0x140020332
jne	0x140020332
add	r8, 3
mov	qword ptr [rsp + 0x20], r8
jmp	0x140020332
jmp	0x140020332
nop	dword ptr [rax]
mov	rax, r8
mov	r8, qword ptr [rsp + 0x20]
jmp	0x14002036d
jmp	0x14002036d
mov	rax, r8
jmp	0x14002036d
jmp	0x14002036d
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rsp + 0x68]
mov	rdx, qword ptr [rsp + 0x70]
mov	r11d, dword ptr [rcx + 0xc]
mov	qword ptr [rsp + 0x20], rax
mov	r10, r8
mov	qword ptr [rsp + 0x28], rdx
test	byte ptr [rcx + 0x10], 2
jne	0x140020490
jne	0x140020490
lea	rcx, [rsp + 0x20]
cmp	r10, r9
je	0x140020449
je	0x140020449
mov	edx, dword ptr [r10]
cmp	r11d, edx
jb	0x140020458
jb	0x140020458
call	0x140077f50
call	0x140077f50
test	al, al
je	0x140020480
je	0x140020480
add	r10, 4
cmp	r9, r10
jne	0x14002042f
jne	0x14002042f
mov	rax, qword ptr [rsp + 0x20]
xor	ecx, ecx
jmp	0x140020462
jmp	0x140020462
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x20]
mov	ecx, 2
mov	rdx, qword ptr [rsp + 0x60]
mov	qword ptr [rdx], r10
mov	rdx, qword ptr [rsp + 0x78]
mov	qword ptr [rdx], rax
mov	eax, ecx
add	rsp, 0x38
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x20]
mov	ecx, 1
jmp	0x140020462
jmp	0x140020462
nop	dword ptr [rax]
sub	rdx, rax
mov	ecx, 1
cmp	rdx, 2
jbe	0x140020462
jbe	0x140020462
mov	edx, 0xffffbbef
mov	byte ptr [rax + 2], 0xbf
add	rax, 3
mov	word ptr [rax - 3], dx
mov	qword ptr [rsp + 0x20], rax
jmp	0x140020425
jmp	0x140020425
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rsp + 0x70]
mov	esi, dword ptr [rcx + 0xc]
mov	qword ptr [rsp + 0x20], r8
mov	rdi, r8
mov	qword ptr [rsp + 0x28], r9
test	byte ptr [rcx + 0x10], 4
jne	0x140020520
jne	0x140020520
lea	rbx, [rax - 1]
test	rax, rax
je	0x14002050a
je	0x14002050a
lea	rcx, [rsp + 0x20]
mov	edx, esi
call	0x140077c30
call	0x140077c30
test	rbx, rbx
setne	dl
cmp	esi, eax
setae	al
sub	rbx, 1
test	dl, al
jne	0x1400204f0
jne	0x1400204f0
mov	eax, dword ptr [rsp + 0x20]
sub	eax, edi
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
sub	r9, r8
cmp	r9, 2
jbe	0x1400204e2
jbe	0x1400204e2
cmp	word ptr [r8], 0xbbef
jne	0x1400204e2
jne	0x1400204e2
cmp	byte ptr [r8 + 2], 0xbf
jne	0x1400204e2
jne	0x1400204e2
lea	rdx, [r8 + 3]
mov	qword ptr [rsp + 0x20], rdx
jmp	0x1400204e2
jmp	0x1400204e2
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x10]
and	eax, 4
cmp	eax, 1
sbb	eax, eax
and	eax, 0xfffffffd
add	eax, 6
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x48
mov	rax, qword ptr [rsp + 0x78]
mov	qword ptr [rsp + 0x28], r9
mov	r9d, dword ptr [rcx + 0x10]
lea	rdx, [rsp + 0x30]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x20], r8
mov	r8d, dword ptr [rcx + 0xc]
and	r9d, 6
lea	rcx, [rsp + 0x20]
mov	qword ptr [rsp + 0x38], rax
mov	eax, 0xffff
or	r9d, 1
cmp	r8d, eax
cmova	r8d, eax
call	0x1400781f0
call	0x1400781f0
mov	rdx, qword ptr [rsp + 0x70]
mov	rcx, qword ptr [rsp + 0x20]
mov	qword ptr [rdx], rcx
mov	rdx, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x30]
mov	qword ptr [rdx], rcx
add	rsp, 0x48
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x58
mov	rax, qword ptr [rsp + 0x88]
mov	qword ptr [rsp + 0x40], rax
lea	r10, [rsp + 0x30]
lea	rdx, [rsp + 0x40]
mov	rax, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x30], r8
mov	r8d, dword ptr [rcx + 0xc]
mov	qword ptr [rsp + 0x48], rax
mov	eax, 0xffff
mov	dword ptr [rsp + 0x20], 1
cmp	r8d, eax
mov	qword ptr [rsp + 0x38], r9
cmova	r8d, eax
mov	r9d, dword ptr [rcx + 0x10]
mov	rcx, r10
call	0x1400783e0
call	0x1400783e0
mov	rdx, qword ptr [rsp + 0x80]
mov	rcx, qword ptr [rsp + 0x30]
mov	qword ptr [rdx], rcx
mov	rdx, qword ptr [rsp + 0x98]
mov	rcx, qword ptr [rsp + 0x40]
mov	qword ptr [rdx], rcx
add	rsp, 0x58
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	eax, dword ptr [rcx + 0x10]
mov	dword ptr [rsp + 0x20], eax
mov	rbx, r8
mov	rdx, r9
mov	r8, qword ptr [rsp + 0x60]
mov	r9d, dword ptr [rcx + 0xc]
mov	rcx, rbx
call	0x140078350
call	0x140078350
sub	eax, ebx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x1c]
and	eax, 4
cmp	eax, 1
sbb	eax, eax
and	eax, 0xfffffffd
add	eax, 6
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x48
mov	rax, qword ptr [rsp + 0x78]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x80]
lea	rdx, [rsp + 0x30]
mov	qword ptr [rsp + 0x20], r8
mov	r8d, dword ptr [rcx + 0x18]
lea	rcx, [rsp + 0x20]
mov	qword ptr [rsp + 0x38], rax
mov	eax, 0xffff
cmp	r8d, eax
mov	qword ptr [rsp + 0x28], r9
mov	r9d, 1
cmova	r8d, eax
call	0x1400781f0
call	0x1400781f0
mov	rdx, qword ptr [rsp + 0x70]
mov	rcx, qword ptr [rsp + 0x20]
mov	qword ptr [rdx], rcx
mov	rdx, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x30]
mov	qword ptr [rdx], rcx
add	rsp, 0x48
ret	
ret	
nop	
nop	
nop	
nop	
sub	rsp, 0x58
mov	rax, qword ptr [rsp + 0x88]
mov	qword ptr [rsp + 0x30], rax
lea	r10, [rsp + 0x40]
lea	rdx, [rsp + 0x30]
mov	rax, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x40], r8
mov	r8d, dword ptr [rcx + 0x18]
mov	qword ptr [rsp + 0x38], rax
mov	eax, 0xffff
mov	dword ptr [rsp + 0x20], 1
cmp	r8d, eax
mov	qword ptr [rsp + 0x48], r9
cmova	r8d, eax
mov	r9d, dword ptr [rcx + 0x1c]
mov	rcx, r10
call	0x1400783e0
call	0x1400783e0
mov	rdx, qword ptr [rsp + 0x80]
mov	rcx, qword ptr [rsp + 0x40]
mov	qword ptr [rdx], rcx
mov	rdx, qword ptr [rsp + 0x98]
mov	rcx, qword ptr [rsp + 0x30]
mov	qword ptr [rdx], rcx
add	rsp, 0x58
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	eax, dword ptr [rcx + 0x1c]
mov	dword ptr [rsp + 0x20], eax
mov	rbx, r8
mov	rdx, r9
mov	r8, qword ptr [rsp + 0x60]
mov	r9d, dword ptr [rcx + 0x18]
mov	rcx, rbx
call	0x140078350
call	0x140078350
sub	eax, ebx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rdi, rcx
mov	rcx, rdx
mov	rsi, rdx
mov	rbx, r8
call	0x1400aed10
call	0x1400aed10
test	al, al
je	0x140020810
je	0x140020810
add	qword ptr [rbx], 0x20
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
mov	r8, rbx
mov	rdx, rsi
mov	rcx, rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x1400188b0
jmp	0x1400188b0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, rcx
mov	rcx, qword ptr [rcx]
mov	rbx, rdx
cmp	dword ptr [rsi + 8], -1
sete	dil
test	rcx, rcx
setne	al
and	al, dil
mov	ebp, eax
jne	0x140020880
jne	0x140020880
mov	rcx, qword ptr [rbx]
cmp	dword ptr [rbx + 8], -1
sete	al
test	rcx, rcx
setne	dl
and	dl, al
jne	0x140020890
jne	0x140020890
cmp	dil, al
sete	al
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx + 0x18]
cmp	qword ptr [rcx + 0x10], rax
jae	0x1400208d0
jae	0x1400208d0
xor	edi, edi
jmp	0x140020856
jmp	0x140020856
nop	
mov	rax, qword ptr [rcx + 0x18]
cmp	qword ptr [rcx + 0x10], rax
jae	0x1400208b0
jae	0x1400208b0
xor	eax, eax
cmp	dil, al
sete	al
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
mov	byte ptr [rsp + 0x2f], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x2f]
cmp	eax, -1
jne	0x14002089a
jne	0x14002089a
mov	qword ptr [rbx], 0
mov	eax, edx
jmp	0x14002086a
jmp	0x14002086a
nop	
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x14002088a
jne	0x14002088a
mov	qword ptr [rsi], 0
mov	edi, ebp
jmp	0x140020856
jmp	0x140020856
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	eax, dword ptr [rcx + 8]
mov	rbx, rcx
mov	rcx, qword ptr [rcx]
cmp	eax, -1
jne	0x140020908
jne	0x140020908
test	rcx, rcx
jne	0x140020910
jne	0x140020910
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140020928
jae	0x140020928
movzx	eax, byte ptr [rax]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x140020908
jne	0x140020908
mov	qword ptr [rbx], 0
jmp	0x140020908
jmp	0x140020908
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rcx, qword ptr [rcx]
mov	rbx, rdx
cmp	word ptr [rsi + 8], -1
sete	dil
test	rcx, rcx
setne	al
and	al, dil
mov	ebp, eax
jne	0x140020990
jne	0x140020990
mov	rcx, qword ptr [rbx]
cmp	word ptr [rbx + 8], -1
sete	dl
test	rcx, rcx
setne	al
and	al, dl
mov	esi, eax
jne	0x1400209b0
jne	0x1400209b0
cmp	dil, dl
sete	al
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400209e0
jae	0x1400209e0
movzx	eax, word ptr [rax]
xor	edi, edi
cmp	ax, -1
jne	0x140020967
jne	0x140020967
mov	qword ptr [rsi], 0
mov	edi, ebp
jmp	0x140020967
jmp	0x140020967
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400209d0
jae	0x1400209d0
movzx	eax, word ptr [rax]
xor	edx, edx
cmp	ax, -1
jne	0x14002097e
jne	0x14002097e
mov	qword ptr [rbx], 0
mov	edx, esi
jmp	0x14002097e
jmp	0x14002097e
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400209bd
jmp	0x1400209bd
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14002099d
jmp	0x14002099d
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
movzx	eax, word ptr [rcx + 8]
mov	rbx, rcx
mov	rcx, qword ptr [rcx]
cmp	ax, -1
jne	0x140020a0a
jne	0x140020a0a
test	rcx, rcx
jne	0x140020a10
jne	0x140020a10
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140020a30
jae	0x140020a30
movzx	eax, word ptr [rax]
cmp	ax, -1
jne	0x140020a0a
jne	0x140020a0a
mov	qword ptr [rbx], 0
jmp	0x140020a0a
jmp	0x140020a0a
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140020a1d
jmp	0x140020a1d
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x10]
and	eax, 4
cmp	eax, 1
sbb	eax, eax
and	eax, 0xfffffffe
add	eax, 6
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
mov	eax, dword ptr [rcx + 0x10]
mov	ebx, dword ptr [rcx + 0xc]
mov	r10, qword ptr [rsp + 0x98]
mov	rsi, qword ptr [rsp + 0xa0]
lea	rdx, [rsp + 0x2c]
lea	rcx, [rsp + 0x30]
mov	r11, r9
mov	dword ptr [rsp + 0x2c], eax
mov	qword ptr [rsp + 0x38], r9
mov	qword ptr [rsp + 0x30], r8
call	0x1400778c0
call	0x1400778c0
mov	r9, qword ptr [rsp + 0x30]
mov	rax, r11
sub	rax, r9
shr	rax, 1
mov	rdx, rax
je	0x140020bf9
je	0x140020bf9
mov	r8d, dword ptr [rsp + 0x2c]
mov	rcx, r9
xor	edi, edi
and	r8d, 1
cmp	rsi, r10
je	0x140020be0
je	0x140020be0
movzx	eax, word ptr [rcx]
test	r8d, r8d
jne	0x140020b68
jne	0x140020b68
rol	ax, 8
movzx	eax, ax
lea	ebp, [rax - 0xd800]
cmp	ebp, 0x3ff
ja	0x140020b88
ja	0x140020b88
cmp	rdx, 1
je	0x140020be0
je	0x140020be0
movzx	edx, word ptr [rcx + 2]
rol	dx, 8
movzx	edx, dx
lea	ebp, [rdx - 0xdc00]
cmp	ebp, 0x3ff
ja	0x140020bd0
ja	0x140020bd0
shl	eax, 0xa
lea	eax, [rdx + rax - 0x35fdc00]
mov	edx, 2
cmp	ebx, eax
jb	0x140020b9f
jb	0x140020b9f
lea	rcx, [rcx + rdx*2]
mov	edi, 1
mov	dword ptr [r10], eax
mov	rax, r11
add	r10, 4
sub	rax, rcx
shr	rax, 1
mov	rdx, rax
jne	0x140020ac3
jne	0x140020ac3
test	dil, dil
cmove	rcx, r9
xor	r8d, r8d
cmp	r11, rcx
setne	r8b
add	r8d, r8d
jmp	0x140020bac
jmp	0x140020bac
nop	dword ptr [rax + rax]
lea	ebp, [rax - 0xd800]
cmp	ebp, 0x3ff
ja	0x140020b88
ja	0x140020b88
cmp	rdx, 1
je	0x140020bf0
je	0x140020bf0
movzx	edx, word ptr [rcx + 2]
jmp	0x140020b03
jmp	0x140020b03
nop	word ptr [rax + rax]
lea	edx, [rax - 0xdc00]
cmp	edx, 0x3ff
jbe	0x140020bd0
jbe	0x140020bd0
mov	edx, 1
cmp	ebx, eax
jae	0x140020b2b
jae	0x140020b2b
test	dil, dil
mov	r8d, 2
cmove	rcx, r9
mov	rax, qword ptr [rsp + 0x90]
mov	qword ptr [rax], rcx
mov	rax, qword ptr [rsp + 0xa8]
mov	qword ptr [rax], r10
mov	eax, r8d
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
cmp	ebx, -1
jne	0x140020c01
jne	0x140020c01
mov	eax, 0xffffffff
jmp	0x140020b34
jmp	0x140020b34
nop	
test	dil, dil
mov	r8d, 1
cmove	rcx, r9
jmp	0x140020bac
jmp	0x140020bac
nop	
test	dil, dil
cmove	rcx, r9
jmp	0x140020bac
jmp	0x140020bac
mov	rcx, r9
jmp	0x140020b54
jmp	0x140020b54
test	dil, dil
mov	r8d, 2
cmovne	r9, rcx
mov	rcx, r9
jmp	0x140020bac
jmp	0x140020bac
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
mov	ebx, dword ptr [rcx + 0x10]
mov	r10, qword ptr [rsp + 0x38]
mov	r11, qword ptr [rsp + 0x40]
mov	ecx, dword ptr [rcx + 0xc]
test	bl, 2
je	0x140020c5b
je	0x140020c5b
mov	rdx, r11
mov	eax, ebx
sub	rdx, r10
and	eax, 1
je	0x140020d10
je	0x140020d10
cmp	rdx, 1
jbe	0x140020c85
jbe	0x140020c85
mov	edx, 0xfffffeff
add	r10, 2
mov	word ptr [r10 - 2], dx
cmp	r8, r9
je	0x140020cd3
je	0x140020cd3
mov	eax, dword ptr [r8]
cmp	ecx, eax
jb	0x140020d38
jb	0x140020d38
mov	rdx, r11
sub	rdx, r10
shr	rdx, 1
cmp	eax, 0xffff
ja	0x140020ca0
ja	0x140020ca0
test	rdx, rdx
jne	0x140020ce0
jne	0x140020ce0
mov	eax, 1
mov	rdx, qword ptr [rsp + 0x30]
mov	qword ptr [rdx], r8
mov	rdx, qword ptr [rsp + 0x48]
mov	qword ptr [rdx], r10
pop	rbx
ret	
ret	
nop	word ptr [rax + rax]
cmp	rdx, 1
jbe	0x140020c80
jbe	0x140020c80
mov	edx, eax
and	ax, 0x3ff
shr	edx, 0xa
sub	ax, 0x2400
sub	dx, 0x2840
test	bl, 1
je	0x140020d00
je	0x140020d00
mov	word ptr [r10], dx
add	r10, 4
mov	word ptr [r10 - 2], ax
add	r8, 4
cmp	r9, r8
jne	0x140020c60
jne	0x140020c60
xor	eax, eax
jmp	0x140020c85
jmp	0x140020c85
nop	word ptr [rax + rax]
mov	edx, eax
rol	dx, 8
test	bl, 1
cmove	eax, edx
add	r10, 2
mov	word ptr [r10 - 2], ax
jmp	0x140020cca
jmp	0x140020cca
nop	word ptr [rax + rax]
rol	dx, 8
rol	ax, 8
jmp	0x140020cbd
jmp	0x140020cbd
nop	word ptr [rax + rax]
mov	eax, 1
cmp	rdx, 1
jbe	0x140020c85
jbe	0x140020c85
mov	eax, 0xfffffffe
add	r10, 2
mov	word ptr [r10 - 2], ax
jmp	0x140020c5b
jmp	0x140020c5b
nop	word ptr [rax + rax]
mov	eax, 2
jmp	0x140020c85
jmp	0x140020c85
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
mov	eax, dword ptr [rcx + 0x10]
mov	r10, qword ptr [rsp + 0x90]
mov	ebx, dword ptr [rcx + 0xc]
lea	r11, [r10 - 1]
lea	rdx, [rsp + 0x2c]
lea	rcx, [rsp + 0x30]
mov	rdi, r8
mov	rsi, r9
mov	dword ptr [rsp + 0x2c], eax
mov	qword ptr [rsp + 0x30], r8
mov	qword ptr [rsp + 0x38], r9
call	0x1400778c0
call	0x1400778c0
mov	rax, qword ptr [rsp + 0x30]
test	r10, r10
je	0x140020e7e
je	0x140020e7e
mov	r8d, dword ptr [rsp + 0x2c]
mov	r10, rax
xor	r9d, r9d
and	r8d, 1
jmp	0x140020e16
jmp	0x140020e16
nop	dword ptr [rax]
lea	ebp, [rdx - 0xd800]
cmp	ebp, 0x3ff
ja	0x140020e60
ja	0x140020e60
cmp	rcx, 1
je	0x140020e90
je	0x140020e90
movzx	ecx, word ptr [r10 + 2]
movzx	ecx, cx
lea	ebp, [rcx - 0xdc00]
cmp	ebp, 0x3ff
ja	0x140020ea0
ja	0x140020ea0
shl	edx, 0xa
lea	edx, [rcx + rdx - 0x35fdc00]
mov	ecx, 2
cmp	ebx, edx
jb	0x140020e77
jb	0x140020e77
lea	r10, [r10 + rcx*2]
mov	r9d, 1
test	r11, r11
setne	cl
cmp	ebx, edx
setae	dl
sub	r11, 1
test	cl, dl
je	0x140020e77
je	0x140020e77
mov	rdx, rsi
sub	rdx, r10
mov	rcx, rdx
shr	rcx, 1
je	0x140020e90
je	0x140020e90
movzx	edx, word ptr [r10]
test	r8d, r8d
jne	0x140020db0
jne	0x140020db0
rol	dx, 8
movzx	edx, dx
lea	ebp, [rdx - 0xd800]
cmp	ebp, 0x3ff
ja	0x140020e60
ja	0x140020e60
cmp	rcx, 1
je	0x140020e90
je	0x140020e90
movzx	ecx, word ptr [r10 + 2]
rol	cx, 8
jmp	0x140020dd1
jmp	0x140020dd1
nop	word ptr cs:[rax + rax]
lea	ecx, [rdx - 0xdc00]
cmp	ecx, 0x3ff
jbe	0x140020ea0
jbe	0x140020ea0
mov	ecx, 1
cmp	ebx, edx
jae	0x140020df9
jae	0x140020df9
test	r9b, r9b
cmovne	rax, r10
sub	eax, edi
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	edx, 0xfffffffe
jmp	0x140020e03
jmp	0x140020e03
nop	word ptr [rax + rax]
mov	edx, 0xffffffff
jmp	0x140020e03
jmp	0x140020e03
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x10]
and	eax, 4
cmp	eax, 1
sbb	eax, eax
and	eax, 0xfffffffe
add	eax, 4
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x40
mov	rax, qword ptr [rsp + 0x78]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x80]
mov	rbx, r9
lea	rdx, [rsp + 0x30]
mov	qword ptr [rsp + 0x20], r8
mov	r8d, dword ptr [rcx + 0xc]
mov	qword ptr [rsp + 0x28], r9
mov	r9d, dword ptr [rcx + 0x10]
mov	qword ptr [rsp + 0x38], rax
lea	rax, [rsp + 0x20]
mov	rcx, rax
call	0x140078060
call	0x140078060
mov	rcx, qword ptr [rsp + 0x70]
mov	rdx, qword ptr [rsp + 0x20]
mov	r8, qword ptr [rsp + 0x30]
mov	qword ptr [rcx], rdx
mov	rcx, qword ptr [rsp + 0x88]
mov	qword ptr [rcx], r8
test	eax, eax
jne	0x140020f3e
jne	0x140020f3e
xor	eax, eax
cmp	rdx, rbx
setne	al
add	eax, eax
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x48
mov	r10, qword ptr [rsp + 0x78]
mov	rax, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x28], r9
mov	r9d, dword ptr [rcx + 0x10]
mov	rdx, r8
mov	qword ptr [rsp + 0x20], r8
mov	r8d, dword ptr [rcx + 0xc]
mov	qword ptr [rsp + 0x30], r10
mov	qword ptr [rsp + 0x38], rax
test	r9b, 2
je	0x140020fad
je	0x140020fad
sub	rax, r10
mov	rcx, rax
mov	eax, r9d
and	eax, 1
je	0x140020fe0
je	0x140020fe0
cmp	rcx, 1
jbe	0x140020fc6
jbe	0x140020fc6
mov	edx, 0xfffffeff
add	r10, 2
mov	word ptr [r10 - 2], dx
mov	qword ptr [rsp + 0x30], r10
lea	rdx, [rsp + 0x30]
lea	rcx, [rsp + 0x20]
call	0x140078150
call	0x140078150
mov	rdx, qword ptr [rsp + 0x20]
mov	r10, qword ptr [rsp + 0x30]
mov	rcx, qword ptr [rsp + 0x70]
mov	qword ptr [rcx], rdx
mov	rdx, qword ptr [rsp + 0x88]
mov	qword ptr [rdx], r10
add	rsp, 0x48
ret	
ret	
nop	
mov	eax, 1
cmp	rcx, 1
jbe	0x140020fc6
jbe	0x140020fc6
mov	eax, 0xfffffffe
add	r10, 2
mov	word ptr [r10 - 2], ax
mov	qword ptr [rsp + 0x30], r10
jmp	0x140020fad
jmp	0x140020fad
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
mov	eax, dword ptr [rcx + 0x10]
mov	edi, dword ptr [rcx + 0xc]
mov	r11, qword ptr [rsp + 0x80]
lea	rcx, [rsp + 0x30]
lea	rdx, [rsp + 0x2c]
mov	rbx, r8
mov	r10, r9
mov	dword ptr [rsp + 0x2c], eax
mov	qword ptr [rsp + 0x30], r8
mov	qword ptr [rsp + 0x38], r9
call	0x1400778c0
call	0x1400778c0
mov	eax, 0xffff
lea	rcx, [r11 - 1]
cmp	edi, eax
cmova	edi, eax
mov	rax, qword ptr [rsp + 0x30]
test	r11, r11
je	0x1400210cf
je	0x1400210cf
mov	rsi, qword ptr [rsp + 0x30]
mov	r11d, dword ptr [rsp + 0x2c]
mov	rdx, r10
xor	r9d, r9d
mov	rax, rsi
and	r11d, 1
sub	rdx, rax
shr	rdx, 1
je	0x1400210c8
je	0x1400210c8
nop	
movzx	edx, word ptr [rax]
test	r11d, r11d
jne	0x14002107f
jne	0x14002107f
rol	dx, 8
movzx	edx, dx
lea	r8d, [rdx - 0xd800]
cmp	r8d, 0x3ff
jbe	0x1400210c8
jbe	0x1400210c8
lea	r8d, [rdx - 0xdc00]
cmp	r8d, 0x3ff
jbe	0x1400210c8
jbe	0x1400210c8
cmp	edi, edx
jb	0x1400210c8
jb	0x1400210c8
sub	rcx, 1
add	rax, 2
mov	r9d, 1
cmp	rcx, -1
je	0x1400210cf
je	0x1400210cf
mov	rdx, r10
sub	rdx, rax
shr	rdx, 1
jne	0x140021070
jne	0x140021070
nop	word ptr [rax + rax]
test	r9b, r9b
cmove	rax, rsi
sub	eax, ebx
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x1c]
and	eax, 4
cmp	eax, 1
sbb	eax, eax
and	eax, 0xfffffffe
add	eax, 4
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x40
mov	rax, qword ptr [rsp + 0x78]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x80]
mov	rbx, r9
lea	rdx, [rsp + 0x30]
mov	qword ptr [rsp + 0x20], r8
mov	r8d, dword ptr [rcx + 0x18]
mov	qword ptr [rsp + 0x28], r9
mov	r9d, dword ptr [rcx + 0x1c]
mov	qword ptr [rsp + 0x38], rax
lea	rax, [rsp + 0x20]
mov	rcx, rax
call	0x140078060
call	0x140078060
mov	rcx, qword ptr [rsp + 0x70]
mov	rdx, qword ptr [rsp + 0x20]
mov	r8, qword ptr [rsp + 0x30]
mov	qword ptr [rcx], rdx
mov	rcx, qword ptr [rsp + 0x88]
mov	qword ptr [rcx], r8
test	eax, eax
jne	0x14002116e
jne	0x14002116e
xor	eax, eax
cmp	rdx, rbx
setne	al
add	eax, eax
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x48
mov	r10, qword ptr [rsp + 0x78]
mov	rax, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x38], r9
mov	r9d, dword ptr [rcx + 0x1c]
mov	rdx, r8
mov	qword ptr [rsp + 0x30], r8
mov	r8d, dword ptr [rcx + 0x18]
mov	qword ptr [rsp + 0x20], r10
mov	qword ptr [rsp + 0x28], rax
test	r9b, 2
je	0x1400211dd
je	0x1400211dd
sub	rax, r10
mov	rcx, rax
mov	eax, r9d
and	eax, 1
je	0x140021210
je	0x140021210
cmp	rcx, 1
jbe	0x1400211f6
jbe	0x1400211f6
mov	edx, 0xfffffeff
add	r10, 2
mov	word ptr [r10 - 2], dx
mov	qword ptr [rsp + 0x20], r10
lea	rdx, [rsp + 0x20]
lea	rcx, [rsp + 0x30]
call	0x140078150
call	0x140078150
mov	rdx, qword ptr [rsp + 0x30]
mov	r10, qword ptr [rsp + 0x20]
mov	rcx, qword ptr [rsp + 0x70]
mov	qword ptr [rcx], rdx
mov	rdx, qword ptr [rsp + 0x88]
mov	qword ptr [rdx], r10
add	rsp, 0x48
ret	
ret	
nop	
mov	eax, 1
cmp	rcx, 1
jbe	0x1400211f6
jbe	0x1400211f6
mov	eax, 0xfffffffe
add	r10, 2
mov	word ptr [r10 - 2], ax
mov	qword ptr [rsp + 0x20], r10
jmp	0x1400211dd
jmp	0x1400211dd
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
mov	eax, dword ptr [rcx + 0x1c]
mov	edi, dword ptr [rcx + 0x18]
mov	r11, qword ptr [rsp + 0x80]
lea	rcx, [rsp + 0x30]
lea	rdx, [rsp + 0x2c]
mov	rbx, r8
mov	r10, r9
mov	dword ptr [rsp + 0x2c], eax
mov	qword ptr [rsp + 0x30], r8
mov	qword ptr [rsp + 0x38], r9
call	0x1400778c0
call	0x1400778c0
mov	eax, 0xffff
lea	rcx, [r11 - 1]
cmp	edi, eax
cmova	edi, eax
mov	rax, qword ptr [rsp + 0x30]
test	r11, r11
je	0x1400212ff
je	0x1400212ff
mov	rsi, qword ptr [rsp + 0x30]
mov	r11d, dword ptr [rsp + 0x2c]
mov	rdx, r10
xor	r9d, r9d
mov	rax, rsi
and	r11d, 1
sub	rdx, rax
shr	rdx, 1
je	0x1400212f8
je	0x1400212f8
nop	
movzx	edx, word ptr [rax]
test	r11d, r11d
jne	0x1400212af
jne	0x1400212af
rol	dx, 8
movzx	edx, dx
lea	r8d, [rdx - 0xd800]
cmp	r8d, 0x3ff
jbe	0x1400212f8
jbe	0x1400212f8
lea	r8d, [rdx - 0xdc00]
cmp	r8d, 0x3ff
jbe	0x1400212f8
jbe	0x1400212f8
cmp	edi, edx
jb	0x1400212f8
jb	0x1400212f8
sub	rcx, 1
add	rax, 2
mov	r9d, 1
cmp	rcx, -1
je	0x1400212ff
je	0x1400212ff
mov	rdx, r10
sub	rdx, rax
shr	rdx, 1
jne	0x1400212a0
jne	0x1400212a0
nop	word ptr [rax + rax]
test	r9b, r9b
cmove	rax, rsi
sub	eax, ebx
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x99709]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x10]
and	eax, 4
cmp	eax, 1
sbb	eax, eax
and	eax, 0xfffffffd
add	eax, 7
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	r12, qword ptr [rsp + 0x88]
mov	rdi, qword ptr [rsp + 0x90]
mov	esi, dword ptr [rcx + 0xc]
mov	qword ptr [rsp + 0x20], r8
mov	rbp, r8
mov	rbx, r9
mov	qword ptr [rsp + 0x28], r9
test	byte ptr [rcx + 0x10], 4
jne	0x140021440
jne	0x140021440
lea	rcx, [rsp + 0x20]
cmp	rbx, rbp
je	0x1400213bb
je	0x1400213bb
cmp	rdi, r12
je	0x140021478
je	0x140021478
mov	edx, esi
call	0x140077c30
call	0x140077c30
cmp	eax, -2
je	0x140021430
je	0x140021430
cmp	esi, eax
jb	0x140021488
jb	0x140021488
cmp	eax, 0xffff
ja	0x1400213d0
ja	0x1400213d0
mov	dword ptr [r12], eax
add	r12, 4
mov	rbp, qword ptr [rsp + 0x20]
cmp	rbx, rbp
jne	0x140021381
jne	0x140021381
mov	rax, rbx
cmp	rbx, rax
setne	al
movzx	eax, al
jmp	0x1400213e1
jmp	0x1400213e1
nop	dword ptr [rax]
mov	rdx, rdi
sub	rdx, r12
cmp	rdx, 4
ja	0x140021408
ja	0x140021408
mov	eax, 1
mov	rdx, qword ptr [rsp + 0x80]
mov	qword ptr [rdx], rbp
mov	rdx, qword ptr [rsp + 0x98]
mov	qword ptr [rdx], r12
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
mov	edx, eax
and	ax, 0x3ff
add	r12, 8
shr	edx, 0xa
sub	ax, 0x2400
sub	dx, 0x2840
movzx	eax, ax
movzx	edx, dx
mov	dword ptr [r12 - 4], eax
mov	dword ptr [r12 - 8], edx
jmp	0x1400213b1
jmp	0x1400213b1
mov	rbp, qword ptr [rsp + 0x20]
mov	eax, 1
jmp	0x1400213e1
jmp	0x1400213e1
nop	dword ptr [rax]
mov	rax, r9
sub	rax, r8
cmp	rax, 2
jbe	0x140021377
jbe	0x140021377
cmp	word ptr [r8], 0xbbef
jne	0x140021377
jne	0x140021377
cmp	byte ptr [r8 + 2], 0xbf
jne	0x140021377
jne	0x140021377
add	rbp, 3
mov	qword ptr [rsp + 0x20], rbp
jmp	0x140021377
jmp	0x140021377
nop	dword ptr [rax]
mov	rax, rbp
mov	rbp, qword ptr [rsp + 0x20]
jmp	0x1400213be
jmp	0x1400213be
nop	dword ptr [rax]
mov	rbp, qword ptr [rsp + 0x20]
mov	eax, 2
jmp	0x1400213e1
jmp	0x1400213e1
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rsp + 0x78]
mov	rdx, qword ptr [rsp + 0x80]
mov	ebx, dword ptr [rcx + 0xc]
mov	qword ptr [rsp + 0x20], rax
mov	r10, r8
mov	qword ptr [rsp + 0x28], rdx
test	byte ptr [rcx + 0x10], 2
jne	0x140021598
jne	0x140021598
mov	rcx, r9
sub	rcx, r10
cmp	r10, r9
je	0x140021538
je	0x140021538
lea	rsi, [rsp + 0x20]
mov	edx, dword ptr [r10]
lea	eax, [rdx - 0xd800]
cmp	eax, 0x3ff
ja	0x140021548
ja	0x140021548
cmp	rcx, 4
jbe	0x140021588
jbe	0x140021588
mov	eax, dword ptr [r10 + 4]
lea	ecx, [rax - 0xdc00]
cmp	ecx, 0x3ff
ja	0x14002155f
ja	0x14002155f
shl	edx, 0xa
mov	r11d, 2
lea	edx, [rax + rdx - 0x35fdc00]
cmp	ebx, edx
jb	0x14002155f
jb	0x14002155f
mov	rcx, rsi
call	0x140077f50
call	0x140077f50
test	al, al
je	0x140021588
je	0x140021588
lea	r10, [r10 + r11*4]
mov	rcx, r9
sub	rcx, r10
cmp	r9, r10
jne	0x1400214dd
jne	0x1400214dd
mov	rax, qword ptr [rsp + 0x20]
xor	ecx, ecx
jmp	0x140021569
jmp	0x140021569
nop	dword ptr [rax]
lea	eax, [rdx - 0xdc00]
cmp	eax, 0x3ff
jbe	0x14002155f
jbe	0x14002155f
mov	r11d, 1
cmp	ebx, edx
jae	0x14002151d
jae	0x14002151d
mov	rax, qword ptr [rsp + 0x20]
mov	ecx, 2
mov	rdx, qword ptr [rsp + 0x70]
mov	qword ptr [rdx], r10
mov	rdx, qword ptr [rsp + 0x88]
mov	qword ptr [rdx], rax
mov	eax, ecx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x20]
mov	ecx, 1
jmp	0x140021569
jmp	0x140021569
nop	dword ptr [rax]
sub	rdx, rax
mov	ecx, 1
cmp	rdx, 2
jbe	0x140021569
jbe	0x140021569
mov	edx, 0xffffbbef
mov	byte ptr [rax + 2], 0xbf
add	rax, 3
mov	word ptr [rax - 3], dx
mov	qword ptr [rsp + 0x20], rax
jmp	0x1400214cd
jmp	0x1400214cd
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	eax, dword ptr [rcx + 0x10]
mov	dword ptr [rsp + 0x20], eax
mov	rbx, r8
mov	rdx, r9
mov	r8, qword ptr [rsp + 0x60]
mov	r9d, dword ptr [rcx + 0xc]
mov	rcx, rbx
call	0x1400776b0
call	0x1400776b0
sub	eax, ebx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x10]
and	eax, 4
cmp	eax, 1
sbb	eax, eax
and	eax, 0xfffffffd
add	eax, 7
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x48
mov	rax, qword ptr [rsp + 0x78]
mov	qword ptr [rsp + 0x28], r9
mov	r9d, dword ptr [rcx + 0x10]
lea	rdx, [rsp + 0x30]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x20], r8
and	r9d, 6
mov	r8d, dword ptr [rcx + 0xc]
mov	qword ptr [rsp + 0x38], rax
lea	rax, [rsp + 0x20]
or	r9d, 1
mov	rcx, rax
call	0x1400781f0
call	0x1400781f0
mov	rdx, qword ptr [rsp + 0x70]
mov	rcx, qword ptr [rsp + 0x20]
mov	qword ptr [rdx], rcx
mov	rdx, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x30]
mov	qword ptr [rdx], rcx
add	rsp, 0x48
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x58
mov	rax, qword ptr [rsp + 0x88]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x90]
lea	rdx, [rsp + 0x40]
mov	dword ptr [rsp + 0x20], 0
mov	qword ptr [rsp + 0x30], r8
mov	r8d, dword ptr [rcx + 0xc]
mov	qword ptr [rsp + 0x38], r9
mov	r9d, dword ptr [rcx + 0x10]
mov	qword ptr [rsp + 0x48], rax
lea	rax, [rsp + 0x30]
mov	rcx, rax
call	0x1400783e0
call	0x1400783e0
mov	rdx, qword ptr [rsp + 0x80]
mov	rcx, qword ptr [rsp + 0x30]
mov	qword ptr [rdx], rcx
mov	rdx, qword ptr [rsp + 0x98]
mov	rcx, qword ptr [rsp + 0x40]
mov	qword ptr [rdx], rcx
add	rsp, 0x58
ret	
ret	
nop	
push	rbx
sub	rsp, 0x30
mov	eax, dword ptr [rcx + 0x10]
mov	dword ptr [rsp + 0x20], eax
mov	rbx, r8
mov	rdx, r9
mov	r8, qword ptr [rsp + 0x60]
mov	r9d, dword ptr [rcx + 0xc]
mov	rcx, rbx
call	0x1400776b0
call	0x1400776b0
sub	eax, ebx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x1c]
and	eax, 4
cmp	eax, 1
sbb	eax, eax
and	eax, 0xfffffffd
add	eax, 7
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	r12, qword ptr [rsp + 0x88]
mov	rbp, qword ptr [rsp + 0x90]
mov	edi, dword ptr [rcx + 0x18]
mov	qword ptr [rsp + 0x20], r8
mov	rbx, r8
mov	rsi, r9
mov	qword ptr [rsp + 0x28], r9
test	byte ptr [rcx + 0x1c], 4
jne	0x140021850
jne	0x140021850
lea	rcx, [rsp + 0x20]
cmp	rsi, rbx
je	0x1400217cc
je	0x1400217cc
cmp	rbp, r12
je	0x140021888
je	0x140021888
mov	edx, edi
call	0x140077c30
call	0x140077c30
cmp	eax, -2
je	0x140021840
je	0x140021840
cmp	edi, eax
jb	0x140021898
jb	0x140021898
cmp	eax, 0xffff
ja	0x1400217e0
ja	0x1400217e0
mov	word ptr [r12], ax
add	r12, 2
mov	rbx, qword ptr [rsp + 0x20]
cmp	rsi, rbx
jne	0x140021791
jne	0x140021791
mov	rax, rsi
cmp	rsi, rax
setne	al
movzx	eax, al
jmp	0x1400217f1
jmp	0x1400217f1
nop	word ptr [rax + rax]
mov	rdx, rbp
sub	rdx, r12
cmp	rdx, 2
ja	0x140021818
ja	0x140021818
mov	eax, 1
mov	rdx, qword ptr [rsp + 0x80]
mov	qword ptr [rdx], rbx
mov	rdx, qword ptr [rsp + 0x98]
mov	qword ptr [rdx], r12
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
mov	edx, eax
and	ax, 0x3ff
add	r12, 4
shr	edx, 0xa
sub	ax, 0x2400
sub	dx, 0x2840
mov	word ptr [r12 - 2], ax
mov	word ptr [r12 - 4], dx
jmp	0x1400217c2
jmp	0x1400217c2
nop	dword ptr [rax]
mov	rbx, qword ptr [rsp + 0x20]
mov	eax, 1
jmp	0x1400217f1
jmp	0x1400217f1
nop	dword ptr [rax]
mov	rax, r9
sub	rax, r8
cmp	rax, 2
jbe	0x140021787
jbe	0x140021787
cmp	word ptr [r8], 0xbbef
jne	0x140021787
jne	0x140021787
cmp	byte ptr [r8 + 2], 0xbf
jne	0x140021787
jne	0x140021787
add	rbx, 3
mov	qword ptr [rsp + 0x20], rbx
jmp	0x140021787
jmp	0x140021787
nop	dword ptr [rax]
mov	rax, rbx
mov	rbx, qword ptr [rsp + 0x20]
jmp	0x1400217cf
jmp	0x1400217cf
nop	dword ptr [rax]
mov	rbx, qword ptr [rsp + 0x20]
mov	eax, 2
jmp	0x1400217f1
jmp	0x1400217f1
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rsp + 0x78]
mov	rdx, qword ptr [rsp + 0x80]
mov	ebx, dword ptr [rcx + 0x18]
mov	qword ptr [rsp + 0x20], rax
mov	r10, r8
mov	qword ptr [rsp + 0x28], rdx
test	byte ptr [rcx + 0x1c], 2
jne	0x1400219a8
jne	0x1400219a8
mov	rcx, r9
sub	rcx, r10
cmp	r10, r9
je	0x14002194a
je	0x14002194a
lea	rsi, [rsp + 0x20]
movzx	edx, word ptr [r10]
lea	eax, [rdx - 0xd800]
cmp	eax, 0x3ff
ja	0x140021958
ja	0x140021958
cmp	rcx, 2
jbe	0x140021998
jbe	0x140021998
movzx	eax, word ptr [r10 + 2]
lea	ecx, [rax - 0xdc00]
cmp	ecx, 0x3ff
ja	0x14002196f
ja	0x14002196f
shl	edx, 0xa
mov	r11d, 2
lea	edx, [rax + rdx - 0x35fdc00]
cmp	ebx, edx
jb	0x14002196f
jb	0x14002196f
mov	rcx, rsi
call	0x140077f50
call	0x140077f50
test	al, al
je	0x140021998
je	0x140021998
lea	r10, [r10 + r11*2]
mov	rcx, r9
sub	rcx, r10
cmp	r9, r10
jne	0x1400218ed
jne	0x1400218ed
mov	rax, qword ptr [rsp + 0x20]
xor	ecx, ecx
jmp	0x140021979
jmp	0x140021979
nop	dword ptr [rax + rax]
lea	eax, [rdx - 0xdc00]
cmp	eax, 0x3ff
jbe	0x14002196f
jbe	0x14002196f
mov	r11d, 1
cmp	ebx, edx
jae	0x14002192f
jae	0x14002192f
mov	rax, qword ptr [rsp + 0x20]
mov	ecx, 2
mov	rdx, qword ptr [rsp + 0x70]
mov	qword ptr [rdx], r10
mov	rdx, qword ptr [rsp + 0x88]
mov	qword ptr [rdx], rax
mov	eax, ecx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x20]
mov	ecx, 1
jmp	0x140021979
jmp	0x140021979
nop	dword ptr [rax]
sub	rdx, rax
mov	ecx, 1
cmp	rdx, 2
jbe	0x140021979
jbe	0x140021979
mov	edx, 0xffffbbef
mov	byte ptr [rax + 2], 0xbf
add	rax, 3
mov	word ptr [rax - 3], dx
mov	qword ptr [rsp + 0x20], rax
jmp	0x1400218dd
jmp	0x1400218dd
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	eax, dword ptr [rcx + 0x1c]
mov	dword ptr [rsp + 0x20], eax
mov	rbx, r8
mov	rdx, r9
mov	r8, qword ptr [rsp + 0x60]
mov	r9d, dword ptr [rcx + 0x18]
mov	rcx, rbx
call	0x1400776b0
call	0x1400776b0
sub	eax, ebx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x48
mov	rax, qword ptr [rdx]
lea	rsi, [rsp + 0x20]
mov	rbx, rcx
mov	rcx, rsi
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	r8, qword ptr [rsp + 0x28]
mov	rdx, qword ptr [rsp + 0x20]
mov	rcx, rbx
call	0x140078a90
call	0x140078a90
mov	rcx, qword ptr [rsp + 0x20]
lea	rax, [rsp + 0x30]
cmp	rcx, rax
je	0x140021a4d
je	0x140021a4d
call	0x1400b2be0
call	0x1400b2be0
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
mov	rbx, rax
mov	rcx, rsi
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rdx]
mov	rbx, rcx
lea	rcx, [rsp + 0x28]
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rdx, qword ptr [rsp + 0x28]
mov	rcx, rbx
mov	r8, qword ptr [rdx - 0x18]
call	0x140078da0
call	0x140078da0
mov	rax, qword ptr [rip + 0x9cb95]
mov	rcx, qword ptr [rsp + 0x28]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140021ac0
jne	0x140021ac0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140021ace
jle	0x140021ace
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140021ab3
jg	0x140021ab3
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x28]
lea	rdx, [rsp + 0x27]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
cmp	qword ptr [rdx + 8], rcx
je	0x140021b20
je	0x140021b20
ret	
ret	
nop	dword ptr [rax]
cmp	dword ptr [rdx], r8d
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rcx]
lea	r9, [rsp + 0x20]
mov	rbx, r8
mov	r8d, edx
mov	rdx, rcx
mov	rcx, r9
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	rdx, qword ptr [rsp + 0x20]
mov	rcx, qword ptr [rsp + 0x28]
xor	eax, eax
cmp	qword ptr [rbx + 8], rcx
je	0x140021b68
je	0x140021b68
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
cmp	dword ptr [rbx], edx
sete	al
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	dword ptr [rcx], r8d
mov	qword ptr [rcx + 8], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rbx, rdx
mov	rdi, r8
cmp	rdx, r8
jae	0x140021bf3
jae	0x140021bf3
lea	rbp, [rip + 0x53]
jmp	0x140021bcf
jmp	0x140021bcf
nop	
mov	rcx, qword ptr [rsi + 0x30]
movzx	r8d, al
lea	edx, [rax + 0x20]
test	byte ptr [rcx + r8*2], 1
cmovne	eax, edx
add	rbx, 1
mov	byte ptr [rbx - 1], al
cmp	rdi, rbx
je	0x140021bf3
je	0x140021bf3
mov	rax, qword ptr [rsi]
mov	r9, qword ptr [rax + 0x20]
movzx	eax, byte ptr [rbx]
cmp	r9, rbp
je	0x140021bb0
je	0x140021bb0
movsx	edx, al
mov	rcx, rsi
add	rbx, 1
call	r9
call	r9
mov	byte ptr [rbx - 1], al
cmp	rdi, rbx
jne	0x140021bcf
jne	0x140021bcf
mov	rax, rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
mov	rcx, qword ptr [rcx + 0x30]
movzx	r8d, dl
lea	eax, [rdx + 0x20]
test	byte ptr [rcx + r8*2], 1
cmove	eax, edx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rbx, rdx
mov	rdi, r8
cmp	rdx, r8
jae	0x140021c83
jae	0x140021c83
lea	rbp, [rip + 0x53]
jmp	0x140021c5f
jmp	0x140021c5f
nop	
mov	rcx, qword ptr [rsi + 0x30]
movzx	r8d, al
lea	edx, [rax - 0x20]
test	byte ptr [rcx + r8*2], 2
cmovne	eax, edx
add	rbx, 1
mov	byte ptr [rbx - 1], al
cmp	rdi, rbx
je	0x140021c83
je	0x140021c83
mov	rax, qword ptr [rsi]
mov	r9, qword ptr [rax + 0x10]
movzx	eax, byte ptr [rbx]
cmp	r9, rbp
je	0x140021c40
je	0x140021c40
movsx	edx, al
mov	rcx, rsi
add	rbx, 1
call	r9
call	r9
mov	byte ptr [rbx - 1], al
cmp	rdi, rbx
jne	0x140021c5f
jne	0x140021c5f
mov	rax, rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
mov	rcx, qword ptr [rcx + 0x30]
movzx	r8d, dl
lea	eax, [rdx - 0x20]
test	byte ptr [rcx + r8*2], 2
cmove	eax, edx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x1a0
movups	xmmword ptr [rsp + 0x120], xmm6
movups	xmmword ptr [rsp + 0x130], xmm7
movups	xmmword ptr [rsp + 0x140], xmm8
movups	xmmword ptr [rsp + 0x150], xmm9
movups	xmmword ptr [rsp + 0x160], xmm10
movups	xmmword ptr [rsp + 0x170], xmm11
movups	xmmword ptr [rsp + 0x180], xmm12
movups	xmmword ptr [rsp + 0x190], xmm13
movdqu	xmm2, xmmword ptr [rip + 0x97968]
movdqu	xmm11, xmmword ptr [rip + 0x9796f]
movdqu	xmm7, xmmword ptr [rip + 0x979a7]
movdqu	xmm6, xmmword ptr [rip + 0x979af]
movdqu	xmm5, xmmword ptr [rip + 0x979b7]
movdqu	xmm4, xmmword ptr [rip + 0x979bf]
movdqu	xmm10, xmmword ptr [rip + 0x97956]
movdqu	xmm3, xmmword ptr [rip + 0x979be]
movdqu	xmm9, xmmword ptr [rip + 0x97955]
movdqu	xmm8, xmmword ptr [rip + 0x9795c]
lea	rsi, [rsp + 0x20]
mov	rbx, rcx
lea	rdx, [rsp + 0x120]
mov	rax, rsi
nop	word ptr [rax + rax]
movdqu	xmm12, xmm2
add	rax, 0x10
paddq	xmm2, xmm11
movdqu	xmm1, xmm12
movdqu	xmm0, xmm12
movdqu	xmm13, xmm12
paddq	xmm1, xmm10
paddq	xmm13, xmm8
shufps	xmm0, xmm1, 0x88
movdqu	xmm1, xmm12
paddq	xmm1, xmm9
shufps	xmm1, xmm13, 0x88
movdqu	xmm13, xmm0
punpcklwd	xmm0, xmm1
punpckhwd	xmm13, xmm1
movdqu	xmm1, xmm0
punpckhwd	xmm1, xmm13
punpcklwd	xmm0, xmm13
movdqu	xmm13, xmm12
punpcklwd	xmm0, xmm1
movdqu	xmm1, xmm12
paddq	xmm13, xmm6
paddq	xmm1, xmm7
pand	xmm0, xmm3
shufps	xmm1, xmm13, 0x88
movdqu	xmm13, xmm12
paddq	xmm12, xmm4
paddq	xmm13, xmm5
shufps	xmm13, xmm12, 0x88
movdqu	xmm12, xmm1
punpcklwd	xmm1, xmm13
punpckhwd	xmm12, xmm13
movdqu	xmm13, xmm1
punpckhwd	xmm13, xmm12
punpcklwd	xmm1, xmm12
punpcklwd	xmm1, xmm13
pand	xmm1, xmm3
packuswb	xmm0, xmm1
movups	xmmword ptr [rax - 0x10], xmm0
cmp	rax, rdx
jne	0x140021d70
jne	0x140021d70
mov	rax, qword ptr [rbx]
lea	rdx, [rip + 0x634]
lea	rdi, [rbx + 0x39]
mov	rax, qword ptr [rax + 0x38]
cmp	rax, rdx
jne	0x140021f9b
jne	0x140021f9b
movdqu	xmm4, xmmword ptr [rsp + 0x20]
movdqu	xmm5, xmmword ptr [rsp + 0x30]
movdqu	xmm6, xmmword ptr [rsp + 0x40]
movdqu	xmm7, xmmword ptr [rsp + 0x50]
movups	xmmword ptr [rbx + 0x39], xmm4
movdqu	xmm4, xmmword ptr [rsp + 0x60]
movups	xmmword ptr [rbx + 0x49], xmm5
movdqu	xmm5, xmmword ptr [rsp + 0x70]
movups	xmmword ptr [rbx + 0x59], xmm6
movdqu	xmm6, xmmword ptr [rsp + 0x80]
movups	xmmword ptr [rbx + 0x69], xmm7
movdqu	xmm7, xmmword ptr [rsp + 0x90]
movups	xmmword ptr [rbx + 0x79], xmm4
movdqu	xmm4, xmmword ptr [rsp + 0xa0]
movups	xmmword ptr [rbx + 0x89], xmm5
movdqu	xmm5, xmmword ptr [rsp + 0xb0]
movups	xmmword ptr [rbx + 0x99], xmm6
movdqu	xmm6, xmmword ptr [rsp + 0xc0]
movups	xmmword ptr [rbx + 0xa9], xmm7
movdqu	xmm7, xmmword ptr [rsp + 0xd0]
movups	xmmword ptr [rbx + 0xb9], xmm4
movdqu	xmm4, xmmword ptr [rsp + 0xe0]
movups	xmmword ptr [rbx + 0xc9], xmm5
movdqu	xmm5, xmmword ptr [rsp + 0xf0]
movups	xmmword ptr [rbx + 0xd9], xmm6
movdqu	xmm6, xmmword ptr [rsp + 0x100]
movups	xmmword ptr [rbx + 0xe9], xmm7
movdqu	xmm7, xmmword ptr [rsp + 0x110]
movups	xmmword ptr [rbx + 0xf9], xmm4
movups	xmmword ptr [rbx + 0x109], xmm5
movups	xmmword ptr [rbx + 0x119], xmm6
movups	xmmword ptr [rbx + 0x129], xmm7
mov	r8d, 0x100
mov	rdx, rdi
mov	rcx, rsi
call	0x140015990
call	0x140015990
cmp	eax, 1
mov	eax, 1
sbb	al, 0xff
mov	byte ptr [rbx + 0x38], al
movups	xmm6, xmmword ptr [rsp + 0x120]
movups	xmm7, xmmword ptr [rsp + 0x130]
movups	xmm8, xmmword ptr [rsp + 0x140]
movups	xmm9, xmmword ptr [rsp + 0x150]
movups	xmm10, xmmword ptr [rsp + 0x160]
movups	xmm11, xmmword ptr [rsp + 0x170]
movups	xmm12, xmmword ptr [rsp + 0x180]
movups	xmm13, xmmword ptr [rsp + 0x190]
add	rsp, 0x1a0
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	r9, rdi
lea	r8, [rsp + 0x120]
mov	rdx, rsi
mov	rcx, rbx
call	rax
call	rax
jmp	0x140021f2c
jmp	0x140021f2c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x1c8
movups	xmmword ptr [rsp + 0x140], xmm6
movups	xmmword ptr [rsp + 0x150], xmm7
movups	xmmword ptr [rsp + 0x160], xmm8
movups	xmmword ptr [rsp + 0x170], xmm9
movups	xmmword ptr [rsp + 0x180], xmm10
movups	xmmword ptr [rsp + 0x190], xmm11
movups	xmmword ptr [rsp + 0x1a0], xmm12
movups	xmmword ptr [rsp + 0x1b0], xmm13
movdqu	xmm2, xmmword ptr [rip + 0x97657]
movdqu	xmm11, xmmword ptr [rip + 0x9765e]
movdqu	xmm7, xmmword ptr [rip + 0x97696]
movdqu	xmm6, xmmword ptr [rip + 0x9769e]
movdqu	xmm5, xmmword ptr [rip + 0x976a6]
movdqu	xmm4, xmmword ptr [rip + 0x976ae]
movdqu	xmm10, xmmword ptr [rip + 0x97645]
movdqu	xmm3, xmmword ptr [rip + 0x976ad]
movdqu	xmm9, xmmword ptr [rip + 0x97644]
movdqu	xmm8, xmmword ptr [rip + 0x9764b]
lea	rbp, [rsp + 0x40]
mov	rbx, rcx
lea	rdx, [rsp + 0x140]
mov	rax, rbp
nop	dword ptr [rax + rax]
movdqu	xmm12, xmm2
add	rax, 0x10
paddq	xmm2, xmm11
movdqu	xmm1, xmm12
movdqu	xmm0, xmm12
movdqu	xmm13, xmm12
paddq	xmm1, xmm10
paddq	xmm13, xmm8
shufps	xmm0, xmm1, 0x88
movdqu	xmm1, xmm12
paddq	xmm1, xmm9
shufps	xmm1, xmm13, 0x88
movdqu	xmm13, xmm0
punpcklwd	xmm0, xmm1
punpckhwd	xmm13, xmm1
movdqu	xmm1, xmm0
punpckhwd	xmm1, xmm13
punpcklwd	xmm0, xmm13
movdqu	xmm13, xmm12
punpcklwd	xmm0, xmm1
movdqu	xmm1, xmm12
paddq	xmm13, xmm6
paddq	xmm1, xmm7
pand	xmm0, xmm3
shufps	xmm1, xmm13, 0x88
movdqu	xmm13, xmm12
paddq	xmm12, xmm4
paddq	xmm13, xmm5
shufps	xmm13, xmm12, 0x88
movdqu	xmm12, xmm1
punpcklwd	xmm1, xmm13
punpckhwd	xmm12, xmm13
movdqu	xmm13, xmm1
punpckhwd	xmm13, xmm12
punpcklwd	xmm1, xmm12
punpcklwd	xmm1, xmm13
pand	xmm1, xmm3
packuswb	xmm0, xmm1
movups	xmmword ptr [rax - 0x10], xmm0
cmp	rax, rdx
jne	0x140022080
jne	0x140022080
mov	rax, qword ptr [rbx]
lea	rsi, [rip + 0x364]
lea	rdi, [rbx + 0x139]
mov	rax, qword ptr [rax + 0x48]
cmp	rax, rsi
jne	0x1400222e9
jne	0x1400222e9
movdqu	xmm4, xmmword ptr [rsp + 0x40]
movdqu	xmm5, xmmword ptr [rsp + 0x50]
movdqu	xmm6, xmmword ptr [rsp + 0x60]
movdqu	xmm7, xmmword ptr [rsp + 0x70]
movups	xmmword ptr [rbx + 0x139], xmm4
movdqu	xmm4, xmmword ptr [rsp + 0x80]
movups	xmmword ptr [rbx + 0x149], xmm5
movdqu	xmm5, xmmword ptr [rsp + 0x90]
movups	xmmword ptr [rbx + 0x159], xmm6
movdqu	xmm6, xmmword ptr [rsp + 0xa0]
movups	xmmword ptr [rbx + 0x169], xmm7
movdqu	xmm7, xmmword ptr [rsp + 0xb0]
movups	xmmword ptr [rbx + 0x179], xmm4
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
movups	xmmword ptr [rbx + 0x189], xmm5
movdqu	xmm5, xmmword ptr [rsp + 0xd0]
movups	xmmword ptr [rbx + 0x199], xmm6
movdqu	xmm6, xmmword ptr [rsp + 0xe0]
movups	xmmword ptr [rbx + 0x1a9], xmm7
movdqu	xmm7, xmmword ptr [rsp + 0xf0]
movups	xmmword ptr [rbx + 0x1b9], xmm4
movdqu	xmm4, xmmword ptr [rsp + 0x100]
movups	xmmword ptr [rbx + 0x1c9], xmm5
movdqu	xmm5, xmmword ptr [rsp + 0x110]
movups	xmmword ptr [rbx + 0x1d9], xmm6
movdqu	xmm6, xmmword ptr [rsp + 0x120]
movups	xmmword ptr [rbx + 0x1e9], xmm7
movdqu	xmm7, xmmword ptr [rsp + 0x130]
movups	xmmword ptr [rbx + 0x1f9], xmm4
movups	xmmword ptr [rbx + 0x209], xmm5
movups	xmmword ptr [rbx + 0x219], xmm6
movups	xmmword ptr [rbx + 0x229], xmm7
mov	byte ptr [rbx + 0x239], 1
mov	r8d, 0x100
mov	rdx, rdi
mov	rcx, rbp
call	0x140015990
call	0x140015990
test	eax, eax
jne	0x140022290
jne	0x140022290
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 0x48]
cmp	rax, rsi
jne	0x140022306
jne	0x140022306
movzx	eax, byte ptr [rsp + 0x40]
mov	byte ptr [rsp + 0x3f], al
cmp	byte ptr [rsp + 0x3f], 1
jne	0x140022297
jne	0x140022297
mov	byte ptr [rbx + 0x239], 2
movups	xmm6, xmmword ptr [rsp + 0x140]
movups	xmm7, xmmword ptr [rsp + 0x150]
movups	xmm8, xmmword ptr [rsp + 0x160]
movups	xmm9, xmmword ptr [rsp + 0x170]
movups	xmm10, xmmword ptr [rsp + 0x180]
movups	xmm11, xmmword ptr [rsp + 0x190]
movups	xmm12, xmmword ptr [rsp + 0x1a0]
movups	xmm13, xmmword ptr [rsp + 0x1b0]
add	rsp, 0x1c8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	qword ptr [rsp + 0x20], rdi
xor	r9d, r9d
mov	rdx, rbp
mov	rcx, rbx
lea	r8, [rsp + 0x140]
call	rax
call	rax
jmp	0x140022254
jmp	0x140022254
lea	rdx, [rsp + 0x3f]
mov	r9d, 1
lea	r8, [rsp + 0x41]
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], rdx
mov	rdx, rbp
call	rax
call	rax
jmp	0x140022289
jmp	0x140022289
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
movzx	eax, byte ptr [rcx + 0x38]
mov	rbx, rcx
mov	rsi, r9
cmp	al, 1
je	0x14002235b
je	0x14002235b
test	al, al
je	0x140022378
je	0x140022378
mov	rax, qword ptr [rbx]
lea	rcx, [rip + 0x11e]
mov	rax, qword ptr [rax + 0x38]
cmp	rax, rcx
jne	0x140022398
jne	0x140022398
cmp	rdx, r8
je	0x1400223b0
je	0x1400223b0
sub	r8, rdx
mov	rcx, rsi
add	rsp, 0x38
pop	rbx
pop	rsi
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x28], r8
mov	qword ptr [rsp + 0x20], rdx
call	0x140021cb0
call	0x140021cb0
mov	r8, qword ptr [rsp + 0x28]
mov	rdx, qword ptr [rsp + 0x20]
jmp	0x140022348
jmp	0x140022348
nop	dword ptr [rax + rax]
mov	r9, rsi
mov	rcx, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
jmp	rax
jmp	rax
nop	word ptr [rax + rax]
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	esi, edx
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [rbx]
lea	rdx, [rip + 0xc5]
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rdx
jne	0x1400223f0
jne	0x1400223f0
mov	eax, esi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
movsx	edx, sil
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
movzx	edi, dl
mov	esi, r8d
mov	ecx, edx
movzx	eax, byte ptr [rbx + rdi + 0x139]
test	al, al
jne	0x14002244f
jne	0x14002244f
mov	rax, qword ptr [rbx]
lea	r8, [rip + 0xa8]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, r8
jne	0x140022460
jne	0x140022460
cmp	sil, cl
je	0x14002244d
je	0x14002244d
mov	byte ptr [rbx + rdi + 0x139], cl
mov	eax, ecx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
mov	rcx, rbx
movsx	edx, dl
movsx	r8d, sil
call	rax
call	rax
mov	ecx, eax
jmp	0x140022441
jmp	0x140022441
push	rbx
sub	rsp, 0x20
mov	rbx, r8
mov	rcx, r9
cmp	r8, rdx
je	0x140022488
je	0x140022488
sub	r8, rdx
call	0x140015998
call	0x140015998
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, edx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, r8
cmp	r8, rdx
je	0x1400224ca
je	0x1400224ca
mov	rcx, qword ptr [rsp + 0x50]
sub	r8, rdx
call	0x140015998
call	0x140015998
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, edx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbp, rcx
mov	rdi, r8
mov	r12, r9
mov	r15d, edx
cmp	r8, r9
jae	0x140022570
jae	0x140022570
movzx	eax, dx
lea	r13, [rip + 0x3b5]
lea	r14, [rcx + 0x2ba]
mov	dword ptr [rsp + 0x2c], eax
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbp]
movzx	esi, word ptr [rdi]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, r13
jne	0x140022588
jne	0x140022588
lea	rbx, [rbp + 0x29a]
jmp	0x140022559
jmp	0x140022559
nop	dword ptr [rax]
add	rbx, 2
cmp	rbx, r14
je	0x140022598
je	0x140022598
mov	eax, r15d
and	ax, word ptr [rbx]
je	0x140022550
je	0x140022550
movzx	edx, word ptr [rbx + 0x20]
mov	ecx, esi
call	0x140015970
call	0x140015970
test	eax, eax
je	0x140022550
je	0x140022550
mov	rax, rdi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rsp + 0x2c]
mov	r8d, esi
mov	rcx, rbp
call	rax
call	rax
test	al, al
jne	0x140022570
jne	0x140022570
add	rdi, 2
cmp	rdi, r12
jb	0x140022530
jb	0x140022530
jmp	0x140022570
jmp	0x140022570
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rdx
mov	rdi, r8
cmp	rdx, r8
jae	0x1400225ed
jae	0x1400225ed
lea	rax, [r8 - 1]
sub	rax, rdx
shr	rax, 1
lea	rsi, [rdx + rax*2 + 2]
nop	dword ptr [rax]
movzx	ecx, word ptr [rbx]
add	rbx, 2
call	0x140015a28
call	0x140015a28
mov	word ptr [rbx - 2], ax
cmp	rbx, rsi
jne	0x1400225d8
jne	0x1400225d8
mov	rax, rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movzx	ecx, dx
jmp	0x140015a28
jmp	0x140015a28
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rdx
mov	rdi, r8
cmp	rdx, r8
jae	0x14002264d
jae	0x14002264d
lea	rax, [r8 - 1]
sub	rax, rdx
shr	rax, 1
lea	rsi, [rdx + rax*2 + 2]
nop	dword ptr [rax]
movzx	ecx, word ptr [rbx]
add	rbx, 2
call	0x140015a30
call	0x140015a30
mov	word ptr [rbx - 2], ax
cmp	rbx, rsi
jne	0x140022638
jne	0x140022638
mov	rax, rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movzx	ecx, dx
jmp	0x140015a30
jmp	0x140015a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbp, rcx
mov	rdi, r8
mov	r13, r9
mov	r15d, edx
cmp	r8, r9
jae	0x1400226f9
jae	0x1400226f9
movzx	eax, dx
lea	r14, [rip + 0x235]
lea	r12, [rcx + 0x2ba]
mov	dword ptr [rsp + 0x2c], eax
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbp]
movzx	esi, word ptr [rdi]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, r14
jne	0x140022710
jne	0x140022710
lea	rbx, [rbp + 0x29a]
jmp	0x1400226d9
jmp	0x1400226d9
nop	dword ptr [rax]
add	rbx, 2
cmp	rbx, r12
je	0x1400226f9
je	0x1400226f9
mov	eax, r15d
and	ax, word ptr [rbx]
je	0x1400226d0
je	0x1400226d0
movzx	edx, word ptr [rbx + 0x20]
mov	ecx, esi
call	0x140015970
call	0x140015970
test	eax, eax
je	0x1400226d0
je	0x1400226d0
add	rdi, 2
cmp	rdi, r13
jb	0x1400226b0
jb	0x1400226b0
mov	rax, rdi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rsp + 0x2c]
mov	r8d, esi
mov	rcx, rbp
call	rax
call	rax
test	al, al
je	0x1400226f9
je	0x1400226f9
add	rdi, 2
cmp	rdi, r13
jb	0x1400226b0
jb	0x1400226b0
jmp	0x1400226f9
jmp	0x1400226f9
nop	
nop	
nop	
nop	
nop	
cmp	dx, 0x40
ja	0x140022760
ja	0x140022760
test	dx, dx
je	0x140022830
je	0x140022830
cmp	dx, 0x40
ja	0x140022838
ja	0x140022838
lea	rcx, [rip + 0x97010]
movzx	eax, dx
movsxd	rax, dword ptr [rcx + rax*4]
add	rax, rcx
jmp	rax
jmp	rax
nop	dword ptr [rax]
cmp	dx, 0x200
je	0x140022820
je	0x140022820
cmp	dx, 0x20c
je	0x140022790
je	0x140022790
cmp	dx, 0x100
jne	0x140022838
jne	0x140022838
lea	rcx, [rip + 0x96f9e]
jmp	0x14000d270
jmp	0x14000d270
nop	dword ptr [rax]
lea	rcx, [rip + 0x96fbc]
jmp	0x14000d270
jmp	0x14000d270
nop	dword ptr [rax]
lea	rcx, [rip + 0x96f75]
jmp	0x14000d270
jmp	0x14000d270
nop	dword ptr [rax]
lea	rcx, [rip + 0x96f5f]
jmp	0x14000d270
jmp	0x14000d270
nop	dword ptr [rax]
lea	rcx, [rip + 0x96f7f]
jmp	0x14000d270
jmp	0x14000d270
nop	dword ptr [rax]
lea	rcx, [rip + 0x96f76]
jmp	0x14000d270
jmp	0x14000d270
nop	dword ptr [rax]
lea	rcx, [rip + 0x96f53]
jmp	0x14000d270
jmp	0x14000d270
nop	dword ptr [rax]
lea	rcx, [rip + 0x96f3d]
jmp	0x14000d270
jmp	0x14000d270
nop	dword ptr [rax]
lea	rcx, [rip + 0x96f27]
jmp	0x14000d270
jmp	0x14000d270
nop	dword ptr [rax]
lea	rcx, [rip + 0x96f11]
jmp	0x14000d270
jmp	0x14000d270
nop	dword ptr [rax]
lea	rcx, [rip + 0x96f19]
jmp	0x14000d270
jmp	0x14000d270
nop	dword ptr [rax]
xor	eax, eax
ret	
ret	
nop	dword ptr [rax + rax]
cmp	dx, 0x400
jne	0x140022830
jne	0x140022830
lea	rcx, [rip + 0x96f13]
jmp	0x14000d270
jmp	0x14000d270
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rdx
mov	r13, r8
lea	r14, [rcx + 0x29a]
mov	r12, r9
lea	rbp, [rcx + 0x2ba]
cmp	rdx, r8
jae	0x1400228b6
jae	0x1400228b6
nop	word ptr [rax + rax]
mov	rbx, r14
xor	edi, edi
nop	dword ptr [rax]
movzx	edx, word ptr [rbx + 0x20]
movzx	ecx, word ptr [rsi]
call	0x140015970
call	0x140015970
test	eax, eax
je	0x14002289b
je	0x14002289b
or	di, word ptr [rbx]
add	rbx, 2
cmp	rbx, rbp
jne	0x140022888
jne	0x140022888
add	rsi, 2
mov	word ptr [r12], di
add	r12, 2
cmp	rsi, r13
jb	0x140022880
jb	0x140022880
mov	rax, r13
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	edi, edx
lea	rbx, [rcx + 0x29a]
lea	rsi, [rcx + 0x2ba]
movzx	ebp, r8w
jmp	0x1400228f9
jmp	0x1400228f9
nop	
add	rbx, 2
cmp	rbx, rsi
je	0x140022920
je	0x140022920
mov	eax, edi
and	ax, word ptr [rbx]
je	0x1400228f0
je	0x1400228f0
movzx	edx, word ptr [rbx + 0x20]
mov	ecx, ebp
call	0x140015970
call	0x140015970
test	eax, eax
je	0x1400228f0
je	0x1400228f0
mov	eax, 1
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
xor	eax, eax
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
cmp	rdx, r8
jae	0x14002295c
jae	0x14002295c
mov	rax, r8
xor	r10d, r10d
sub	rax, rdx
nop	
movzx	r11d, byte ptr [rdx + r10]
movzx	r11d, word ptr [rcx + r11*2 + 0x9a]
mov	word ptr [r9 + r10*2], r11w
add	r10, 1
cmp	rax, r10
jne	0x140022940
jne	0x140022940
mov	rax, r8
ret	
ret	
movzx	edx, dl
movzx	eax, word ptr [rcx + rdx*2 + 0x9a]
ret	
ret	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
cmp	byte ptr [rcx + 0x18], 0
mov	rbx, qword ptr [rsp + 0x80]
mov	r12, rcx
mov	rsi, rdx
mov	rbp, r8
mov	edi, r9d
jne	0x1400229e0
jne	0x1400229e0
cmp	rdx, r8
jae	0x1400229ce
jae	0x1400229ce
lea	rax, [r8 - 1]
sub	rax, rdx
shr	rax, 1
lea	r12, [rbx + rax + 1]
nop	word ptr [rax + rax]
movzx	ecx, word ptr [rsi]
call	0x14000d200
call	0x14000d200
cmp	eax, -1
cmove	eax, edi
add	rbx, 1
add	rsi, 2
mov	byte ptr [rbx - 1], al
cmp	rbx, r12
jne	0x1400229b0
jne	0x1400229b0
mov	rax, rbp
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	
cmp	rdx, r8
jae	0x1400229ce
jae	0x1400229ce
lea	rax, [r8 - 1]
sub	rax, rdx
shr	rax, 1
lea	r13, [rbx + rax + 1]
jmp	0x140022a18
jmp	0x140022a18
nop	word ptr cs:[rax + rax]
movsxd	rcx, ecx
movzx	eax, byte ptr [r12 + rcx + 0x19]
mov	byte ptr [rbx], al
add	rbx, 1
add	rsi, 2
cmp	r13, rbx
je	0x1400229ce
je	0x1400229ce
movzx	ecx, word ptr [rsi]
cmp	cx, 0x7f
jbe	0x140022a00
jbe	0x140022a00
call	0x14000d200
call	0x14000d200
cmp	eax, -1
cmove	eax, edi
jmp	0x140022a09
jmp	0x140022a09
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	ebx, r8d
movzx	eax, dx
cmp	dx, 0x7f
ja	0x140022a47
ja	0x140022a47
cmp	byte ptr [rcx + 0x18], 0
jne	0x140022a60
jne	0x140022a60
mov	ecx, eax
call	0x14000d200
call	0x14000d200
cmp	eax, -1
cmove	eax, ebx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rcx + rax + 0x19]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
test	rax, rax
jne	0x140022a99
jne	0x140022a99
mov	rdx, qword ptr [rip + 0x9bbb1]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x140022aa0
jne	0x140022aa0
mov	eax, dword ptr [rip + 0x948c5]
add	eax, 1
mov	dword ptr [rip + 0x948bc], eax
cdqe	
mov	qword ptr [rcx], rax
sub	rax, 1
ret	
ret	
nop	
mov	edx, 1
lock xadd	dword ptr [rip + 0x948a3], edx
add	edx, 1
movsxd	rdx, edx
lock cmpxchg	qword ptr [rcx], rdx
mov	rax, qword ptr [rcx]
sub	rax, 1
ret	
ret	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	byte ptr [rcx + 0x10], 0
mov	rax, qword ptr [rdx]
lea	rbp, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rbp
mov	r12, rdx
mov	rdi, qword ptr [rax + 0x20]
mov	qword ptr [rcx + 8], 0
mov	r13, qword ptr [rdi]
test	r13, r13
je	0x140022d60
je	0x140022d60
cmp	qword ptr [rdi + 8], 0
je	0x140022b28
je	0x140022b28
xor	esi, esi
nop	dword ptr [rax]
add	rsi, 1
mov	rdx, qword ptr [rdi + rsi*8]
mov	rcx, qword ptr [rdi + rsi*8 - 8]
call	0x1400159e8
call	0x1400159e8
test	eax, eax
jne	0x140022b60
jne	0x140022b60
cmp	rsi, 4
jbe	0x140022b08
jbe	0x140022b08
test	eax, eax
jne	0x140022b60
jne	0x140022b60
mov	rcx, r13
call	0x140015a08
call	0x140015a08
mov	r9, r13
xor	r8d, r8d
xor	edx, edx
mov	qword ptr [rsp + 0x20], rax
mov	rcx, rbx
call	0x14009cf70
call	0x14009cf70
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	edx, 0x80
mov	rcx, rbx
call	0x14009f7e0
call	0x14009f7e0
mov	rax, qword ptr [rip + 0x9bd8c]
mov	r13, qword ptr [rax]
mov	rsi, qword ptr [r13]
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	r8, rax
movabs	rax, 0x3fffffffffffffff
sub	rax, qword ptr [rbx + 8]
cmp	rax, r8
jb	0x140022dd6
jb	0x140022dd6
mov	rdx, rsi
mov	rcx, rbx
call	0x14009f920
call	0x14009f920
mov	rsi, qword ptr [rbx + 8]
mov	rax, qword ptr [rbx]
lea	rdi, [rsi + 1]
cmp	rbp, rax
je	0x140022da8
je	0x140022da8
mov	rdx, qword ptr [rbx + 0x10]
cmp	rdx, rdi
jb	0x140022d80
jb	0x140022d80
mov	byte ptr [rax + rsi], 0x3d
mov	rax, qword ptr [rbx]
mov	qword ptr [rbx + 8], rdi
mov	byte ptr [rax + rsi + 1], 0
mov	rax, qword ptr [r12]
mov	rax, qword ptr [rax + 0x20]
mov	rsi, qword ptr [rax]
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	r8, rax
movabs	rax, 0x3fffffffffffffff
sub	rax, qword ptr [rbx + 8]
cmp	rax, r8
jb	0x140022dca
jb	0x140022dca
mov	rdx, rsi
mov	rcx, rbx
call	0x14009f920
call	0x14009f920
movabs	rdi, 0x3fffffffffffffff
mov	esi, 8
jmp	0x140022cd8
jmp	0x140022cd8
nop	dword ptr [rax]
mov	byte ptr [rax + r14], 0x3b
mov	rax, qword ptr [rbx]
mov	qword ptr [rbx + 8], r15
mov	byte ptr [rax + r14 + 1], 0
mov	r14, qword ptr [r13 + rsi]
mov	rcx, r14
call	0x140015a08
call	0x140015a08
mov	r8, rax
mov	rax, rdi
sub	rax, qword ptr [rbx + 8]
cmp	rax, r8
jb	0x140022dbe
jb	0x140022dbe
mov	rdx, r14
mov	rcx, rbx
call	0x14009f920
call	0x14009f920
mov	r14, qword ptr [rbx + 8]
mov	rax, qword ptr [rbx]
lea	r15, [r14 + 1]
cmp	rbp, rax
je	0x140022d48
je	0x140022d48
mov	rdx, qword ptr [rbx + 0x10]
cmp	rdx, r15
jb	0x140022d20
jb	0x140022d20
mov	byte ptr [rax + r14], 0x3d
mov	rax, qword ptr [rbx]
mov	qword ptr [rbx + 8], r15
mov	byte ptr [rax + r14 + 1], 0
mov	rax, qword ptr [r12]
mov	rax, qword ptr [rax + 0x20]
mov	r14, qword ptr [rax + rsi]
mov	rcx, r14
call	0x140015a08
call	0x140015a08
mov	r8, rax
mov	rax, rdi
sub	rax, qword ptr [rbx + 8]
cmp	rax, r8
jb	0x140022db2
jb	0x140022db2
mov	rdx, r14
mov	rcx, rbx
call	0x14009f920
call	0x14009f920
add	rsi, 8
cmp	rsi, 0x30
je	0x140022b45
je	0x140022b45
mov	r14, qword ptr [rbx + 8]
mov	rax, qword ptr [rbx]
lea	r15, [r14 + 1]
cmp	rbp, rax
je	0x140022d58
je	0x140022d58
mov	rdx, qword ptr [rbx + 0x10]
cmp	rdx, r15
jae	0x140022c28
jae	0x140022c28
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, r14
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rbx]
jmp	0x140022c28
jmp	0x140022c28
nop	word ptr [rax + rax]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, r14
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rbx]
jmp	0x140022c86
jmp	0x140022c86
nop	word ptr [rax + rax]
mov	edx, 0xf
jmp	0x140022c7d
jmp	0x140022c7d
nop	word ptr [rax + rax]
mov	edx, 0xf
jmp	0x140022cec
jmp	0x140022cec
nop	
mov	dword ptr [rsp + 0x20], 0x2a
mov	r9d, 1
xor	r8d, r8d
xor	edx, edx
call	0x14009d910
call	0x14009d910
jmp	0x140022b45
jmp	0x140022b45
nop	dword ptr [rax]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rbx]
jmp	0x140022bc9
jmp	0x140022bc9
nop	word ptr [rax + rax]
mov	edx, 0xf
jmp	0x140022bc0
jmp	0x140022bc0
lea	rcx, [rip + 0x962a5]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rcx, [rip + 0x96299]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rcx, [rip + 0x9628d]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rcx, [rip + 0x96281]
call	0x1400b3ba0
call	0x1400b3ba0
mov	rsi, rax
mov	rcx, rbx
call	0x14009cf50
call	0x14009cf50
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
lea	rbp, [rsp + 0x3f]
mov	rbx, rcx
mov	rdi, rdx
xor	ecx, ecx
xor	edx, edx
mov	r8, rbp
call	0x140071d40
call	0x140071d40
mov	rdx, qword ptr [rdi]
mov	qword ptr [rbx], rax
mov	r12, qword ptr [rdx + 0x20]
mov	r13, qword ptr [r12]
test	r13, r13
je	0x140023090
je	0x140023090
cmp	qword ptr [r12 + 8], 0
je	0x140022e70
je	0x140022e70
xor	esi, esi
nop	word ptr cs:[rax + rax]
add	rsi, 1
mov	rdx, qword ptr [r12 + rsi*8]
mov	rcx, qword ptr [r12 + rsi*8 - 8]
call	0x1400159e8
call	0x1400159e8
test	eax, eax
jne	0x140022ea0
jne	0x140022ea0
cmp	rsi, 4
jbe	0x140022e50
jbe	0x140022e50
test	eax, eax
jne	0x140022ea0
jne	0x140022ea0
mov	rcx, r13
call	0x140015a08
call	0x140015a08
mov	rdx, r13
mov	rcx, rbx
mov	r8, rax
call	0x140072de0
call	0x140072de0
mov	rax, rbx
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax + rax]
mov	edx, 0x80
mov	rcx, rbx
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rip + 0x9ba4c]
mov	r13, qword ptr [rax]
mov	rsi, qword ptr [r13]
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
mov	r8, rax
call	0x1400729e0
call	0x1400729e0
mov	rax, qword ptr [rbx]
mov	r12, qword ptr [rax - 0x18]
lea	rsi, [r12 + 1]
cmp	qword ptr [rax - 0x10], rsi
jb	0x140022f04
jb	0x140022f04
mov	rdx, qword ptr [rip + 0x9b746]
mov	r10d, dword ptr [rdx]
test	r10d, r10d
jne	0x140023080
jne	0x140023080
mov	r9d, dword ptr [rax - 8]
test	r9d, r9d
setg	al
test	al, al
je	0x140022f0f
je	0x140022f0f
mov	rdx, rsi
mov	rcx, rbx
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], 0x3d
mov	rax, qword ptr [rbx]
mov	qword ptr [rax - 0x18], rsi
mov	dword ptr [rax - 8], 0
mov	byte ptr [rax + r12 + 1], 0
mov	rax, qword ptr [rdi]
mov	rax, qword ptr [rax + 0x20]
mov	rsi, qword ptr [rax]
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
mov	r8, rax
call	0x1400729e0
call	0x1400729e0
mov	esi, 8
jmp	0x140023032
jmp	0x140023032
nop	dword ptr [rax + rax]
mov	ecx, dword ptr [rax - 8]
test	ecx, ecx
jle	0x140022f79
jle	0x140022f79
mov	rdx, r12
mov	rcx, rbx
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], 0x3b
mov	rax, qword ptr [rbx]
mov	qword ptr [rax - 0x18], r12
mov	dword ptr [rax - 8], 0
mov	byte ptr [rax + r12], 0
mov	r12, qword ptr [r13 + rsi]
mov	rcx, r12
call	0x140015a08
call	0x140015a08
mov	rdx, r12
mov	rcx, rbx
mov	r8, rax
call	0x1400729e0
call	0x1400729e0
mov	rax, qword ptr [rbx]
mov	r14, qword ptr [rax - 0x18]
lea	r12, [r14 + 1]
cmp	qword ptr [rax - 0x10], r12
jb	0x140022fd9
jb	0x140022fd9
mov	rcx, qword ptr [rip + 0x9b66d]
mov	edx, dword ptr [rcx]
test	edx, edx
jne	0x140023070
jne	0x140023070
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
test	al, al
je	0x140022fe4
je	0x140022fe4
mov	rdx, r12
mov	rcx, rbx
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], 0x3d
mov	rax, qword ptr [rbx]
mov	qword ptr [rax - 0x18], r12
mov	dword ptr [rax - 8], 0
mov	byte ptr [rax + r14 + 1], 0
mov	rax, qword ptr [rdi]
mov	rax, qword ptr [rax + 0x20]
mov	r12, qword ptr [rax + rsi]
mov	rcx, r12
call	0x140015a08
call	0x140015a08
mov	rdx, r12
mov	rcx, rbx
mov	r8, rax
call	0x1400729e0
call	0x1400729e0
add	rsi, 8
cmp	rsi, 0x30
je	0x140022e86
je	0x140022e86
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
lea	r12, [rdx + 1]
cmp	qword ptr [rax - 0x10], r12
jb	0x140022f67
jb	0x140022f67
mov	rcx, qword ptr [rip + 0x9b5e2]
mov	r8d, dword ptr [rcx]
test	r8d, r8d
je	0x140022f60
je	0x140022f60
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x140022f67
jg	0x140022f67
jmp	0x140022f72
jmp	0x140022f72
nop	word ptr [rax + rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
jmp	0x140022fd5
jmp	0x140022fd5
nop	dword ptr [rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
jmp	0x140022f00
jmp	0x140022f00
nop	dword ptr [rax]
mov	r8, qword ptr [rax - 0x18]
mov	r9d, 1
xor	edx, edx
mov	rcx, rbx
mov	dword ptr [rsp + 0x20], 0x2a
call	0x140072270
call	0x140072270
jmp	0x140022e86
jmp	0x140022e86
mov	rcx, qword ptr [rbx]
mov	rsi, rax
mov	rdx, rbp
sub	rcx, 0x18
call	0x140072490
call	0x140072490
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	r9, 0xfffffffffffffffe
lea	r8, [rip + 0x9daab]
mov	rsi, rdx
lea	rdx, [rip + 0x9dab1]
mov	rbx, rcx
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x140023110
je	0x140023110
mov	rsi, qword ptr [rax]
mov	rax, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
cmp	rsi, qword ptr [rip + 0x9ba39]
je	0x140023220
je	0x140023220
cmp	rsi, qword ptr [rip + 0x9b97c]
je	0x1400233a0
je	0x1400233a0
cmp	rsi, qword ptr [rip + 0x9ba3f]
je	0x1400232f0
je	0x1400232f0
cmp	rsi, qword ptr [rip + 0x9ba82]
je	0x1400233f8
je	0x1400233f8
cmp	rsi, qword ptr [rip + 0x9ba95]
je	0x140023448
je	0x140023448
cmp	rsi, qword ptr [rip + 0x9b658]
je	0x140023498
je	0x140023498
cmp	rsi, qword ptr [rip + 0x9b63b]
je	0x140023588
je	0x140023588
cmp	rsi, qword ptr [rip + 0x9b9be]
je	0x140023688
je	0x140023688
cmp	rsi, qword ptr [rip + 0x9b9e1]
je	0x1400236e0
je	0x1400236e0
cmp	rsi, qword ptr [rip + 0x9b924]
je	0x140023347
je	0x140023347
cmp	rsi, qword ptr [rip + 0x9b9e7]
je	0x1400237c1
je	0x1400237c1
cmp	rsi, qword ptr [rip + 0x9ba2a]
je	0x140023817
je	0x140023817
cmp	rsi, qword ptr [rip + 0x9ba3d]
je	0x140023877
je	0x140023877
cmp	rsi, qword ptr [rip + 0x9b610]
je	0x1400238cd
je	0x1400238cd
cmp	rsi, qword ptr [rip + 0x9b5f3]
je	0x1400239c3
je	0x1400239c3
cmp	rsi, qword ptr [rip + 0x9b966]
jne	0x140023ae4
jne	0x140023ae4
mov	ecx, 0x28
call	0x1400b2c30
call	0x1400b2c30
xor	edx, edx
mov	rcx, rax
mov	rsi, rax
call	0x1400aa650
call	0x1400aa650
mov	rax, qword ptr [rip + 0x9b432]
mov	qword ptr [rsi + 0x20], rbx
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140023863
jne	0x140023863
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa1e19]
mov	qword ptr [rsi], rax
jmp	0x1400230ff
jmp	0x1400230ff
nop	
mov	ecx, 0x28
call	0x1400b2c30
call	0x1400b2c30
mov	ecx, 0x90
mov	rsi, rax
call	0x1400b2c30
call	0x1400b2c30
mov	rdi, rax
mov	dword ptr [rax + 8], 0
xor	edx, edx
mov	rcx, rsi
mov	rax, qword ptr [rip + 0x9bd13]
mov	qword ptr [rdi + 0x10], 0
mov	qword ptr [rdi + 0x18], 0
add	rax, 0x10
mov	byte ptr [rdi + 0x20], 0
mov	qword ptr [rdi], rax
xor	eax, eax
mov	word ptr [rdi + 0x48], ax
mov	rax, qword ptr [rip + 0x9be7b]
mov	qword ptr [rdi + 0x28], 0
add	rax, 0x10
mov	qword ptr [rdi + 0x30], 0
mov	qword ptr [rdi + 0x38], 0
mov	qword ptr [rdi + 0x40], 0
mov	byte ptr [rdi + 0x88], 0
mov	dword ptr [rsi + 8], 0
mov	qword ptr [rsi], rax
mov	qword ptr [rsi + 0x10], rdi
call	0x1400aa730
call	0x1400aa730
mov	rax, qword ptr [rip + 0x9b376]
mov	qword ptr [rsi + 0x18], rbx
mov	r11d, dword ptr [rax]
test	r11d, r11d
jne	0x140023340
jne	0x140023340
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa1ddf]
mov	qword ptr [rsi + 0x20], rdi
mov	r8, rdi
xor	ecx, ecx
mov	qword ptr [rsi], rax
mov	rdx, rbx
call	0x14007de30
call	0x14007de30
jmp	0x1400230ff
jmp	0x1400230ff
nop	word ptr [rax + rax]
mov	ecx, 0x18
call	0x1400b2c30
call	0x1400b2c30
mov	dword ptr [rax + 8], 0
mov	rsi, rax
mov	rax, qword ptr [rip + 0x9be05]
mov	qword ptr [rsi + 0x10], rbx
add	rax, 0x10
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rip + 0x9b313]
mov	r9d, dword ptr [rax]
test	r9d, r9d
jne	0x1400236d0
jne	0x1400236d0
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa1ebc]
mov	qword ptr [rsi], rax
jmp	0x1400230ff
jmp	0x1400230ff
nop	dword ptr [rax]
lock add	dword ptr [rbx + 8], 1
jmp	0x1400232ca
jmp	0x1400232ca
mov	ecx, 0x20
call	0x1400b2c30
call	0x1400b2c30
mov	dword ptr [rax + 8], 0
mov	rsi, rax
mov	rax, qword ptr [rip + 0x9bd2e]
add	rax, 0x10
mov	qword ptr [rsi], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rsi + 0x10], rax
mov	rax, qword ptr [rip + 0x9b2b7]
mov	qword ptr [rsi + 0x18], rbx
mov	r11d, dword ptr [rax]
test	r11d, r11d
jne	0x140023aab
jne	0x140023aab
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa1b9c]
mov	qword ptr [rsi], rax
jmp	0x1400230ff
jmp	0x1400230ff
nop	dword ptr [rax]
mov	ecx, 0x20
call	0x1400b2c30
call	0x1400b2c30
mov	dword ptr [rax + 8], 0
mov	rsi, rax
mov	rax, qword ptr [rip + 0x9bcc5]
add	rax, 0x10
mov	qword ptr [rsi], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rsi + 0x10], rax
mov	rax, qword ptr [rip + 0x9b25e]
mov	qword ptr [rsi + 0x18], rbx
mov	r10d, dword ptr [rax]
test	r10d, r10d
jne	0x140023678
jne	0x140023678
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa1ac3]
mov	qword ptr [rsi], rax
jmp	0x1400230ff
jmp	0x1400230ff
nop	dword ptr [rax]
mov	ecx, 0x18
call	0x1400b2c30
call	0x1400b2c30
mov	dword ptr [rax + 8], 0
mov	rsi, rax
mov	rax, qword ptr [rip + 0x9bd6d]
mov	qword ptr [rsi + 0x10], rbx
add	rax, 0x10
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rip + 0x9b20b]
mov	r8d, dword ptr [rax]
test	r8d, r8d
jne	0x1400237ad
jne	0x1400237ad
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa1f14]
mov	qword ptr [rsi], rax
jmp	0x1400230ff
jmp	0x1400230ff
nop	dword ptr [rax]
mov	ecx, 0x18
call	0x1400b2c30
call	0x1400b2c30
mov	dword ptr [rax + 8], 0
mov	rsi, rax
mov	rax, qword ptr [rip + 0x9bd3d]
mov	qword ptr [rsi + 0x10], rbx
add	rax, 0x10
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rip + 0x9b1bb]
mov	ecx, dword ptr [rax]
test	ecx, ecx
jne	0x1400237b7
jne	0x1400237b7
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa1f86]
mov	qword ptr [rsi], rax
jmp	0x1400230ff
jmp	0x1400230ff
nop	word ptr [rax + rax]
mov	ecx, 0x28
call	0x1400b2c30
call	0x1400b2c30
mov	ecx, 0x70
mov	rsi, rax
call	0x1400b2c30
call	0x1400b2c30
mov	rdi, rax
mov	dword ptr [rax + 8], 0
xor	edx, edx
xor	r8d, r8d
mov	rax, qword ptr [rip + 0x9bafb]
mov	word ptr [rdi + 0x21], dx
mov	rcx, rsi
xor	edx, edx
mov	qword ptr [rdi + 0x10], 0
add	rax, 0x10
mov	qword ptr [rdi + 0x18], 0
mov	qword ptr [rdi], rax
mov	rax, qword ptr [rip + 0x9b904]
mov	byte ptr [rdi + 0x20], 0
add	rax, 0x10
mov	qword ptr [rdi + 0x28], 0
mov	qword ptr [rdi + 0x30], 0
mov	qword ptr [rdi + 0x38], 0
mov	qword ptr [rdi + 0x40], 0
mov	qword ptr [rdi + 0x48], 0
mov	qword ptr [rdi + 0x50], 0
mov	dword ptr [rdi + 0x58], 0
mov	qword ptr [rdi + 0x5c], 0
mov	byte ptr [rdi + 0x6f], 0
mov	dword ptr [rsi + 8], 0
mov	qword ptr [rsi], rax
mov	qword ptr [rsi + 0x10], rdi
call	0x1400755a0
call	0x1400755a0
mov	rax, qword ptr [rip + 0x9b0df]
mov	qword ptr [rsi + 0x18], rbx
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14002380d
jne	0x14002380d
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa2046]
mov	qword ptr [rsi + 0x20], rdi
mov	r8, rdi
xor	ecx, ecx
mov	qword ptr [rsi], rax
mov	rdx, rbx
call	0x14007eb60
call	0x14007eb60
jmp	0x1400230ff
jmp	0x1400230ff
nop	dword ptr [rax + rax]
mov	ecx, 0x28
call	0x1400b2c30
call	0x1400b2c30
mov	ecx, 0x70
mov	rsi, rax
call	0x1400b2c30
call	0x1400b2c30
mov	rdi, rax
mov	dword ptr [rax + 8], 0
xor	r8d, r8d
xor	edx, edx
mov	rax, qword ptr [rip + 0x9b9fb]
mov	qword ptr [rdi + 0x10], 0
mov	rcx, rsi
mov	qword ptr [rdi + 0x18], 0
add	rax, 0x10
mov	byte ptr [rdi + 0x20], 0
mov	qword ptr [rdi], rax
xor	eax, eax
mov	word ptr [rdi + 0x21], ax
mov	rax, qword ptr [rip + 0x9b800]
mov	qword ptr [rdi + 0x28], 0
add	rax, 0x10
mov	qword ptr [rdi + 0x30], 0
mov	qword ptr [rdi + 0x38], 0
mov	qword ptr [rdi + 0x40], 0
mov	qword ptr [rdi + 0x48], 0
mov	qword ptr [rdi + 0x50], 0
mov	dword ptr [rdi + 0x58], 0
mov	qword ptr [rdi + 0x5c], 0
mov	byte ptr [rdi + 0x6f], 0
mov	dword ptr [rsi + 8], 0
mov	qword ptr [rsi], rax
mov	qword ptr [rsi + 0x10], rdi
call	0x1400751d0
call	0x1400751d0
mov	rax, qword ptr [rip + 0x9afef]
mov	qword ptr [rsi + 0x18], rbx
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14002386d
jne	0x14002386d
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa1e76]
mov	qword ptr [rsi + 0x20], rdi
mov	r8, rdi
xor	ecx, ecx
mov	qword ptr [rsi], rax
mov	rdx, rbx
call	0x14007e6b0
call	0x14007e6b0
jmp	0x1400230ff
jmp	0x1400230ff
nop	dword ptr [rax + rax]
lock add	dword ptr [rbx + 8], 1
jmp	0x1400233e6
jmp	0x1400233e6
nop	word ptr [rax + rax]
mov	ecx, 0x28
call	0x1400b2c30
call	0x1400b2c30
xor	edx, edx
mov	rcx, rax
mov	rsi, rax
call	0x1400aa480
call	0x1400aa480
mov	rax, qword ptr [rip + 0x9af8a]
mov	qword ptr [rsi + 0x20], rbx
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400238c3
jne	0x1400238c3
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa18f1]
mov	qword ptr [rsi], rax
jmp	0x1400230ff
jmp	0x1400230ff
nop	word ptr [rax + rax]
lock add	dword ptr [rbx + 8], 1
jmp	0x14002332d
jmp	0x14002332d
nop	word ptr [rax + rax]
mov	ecx, 0x28
call	0x1400b2c30
call	0x1400b2c30
mov	ecx, 0xd0
mov	rsi, rax
call	0x1400b2c30
call	0x1400b2c30
mov	rdi, rax
mov	dword ptr [rax + 8], 0
xor	edx, edx
mov	rcx, rsi
mov	rax, qword ptr [rip + 0x9b863]
mov	qword ptr [rdi + 0x10], 0
mov	qword ptr [rdi + 0x18], 0
add	rax, 0x10
mov	byte ptr [rdi + 0x20], 0
mov	qword ptr [rdi], rax
mov	rax, qword ptr [rip + 0x9b9d1]
mov	qword ptr [rdi + 0x28], 0
add	rax, 0x10
mov	qword ptr [rdi + 0x30], 0
mov	qword ptr [rdi + 0x38], 0
mov	qword ptr [rdi + 0x40], 0
mov	dword ptr [rdi + 0x48], 0
mov	byte ptr [rdi + 0xc8], 0
mov	dword ptr [rsi + 8], 0
mov	qword ptr [rsi], rax
mov	qword ptr [rsi + 0x10], rdi
call	0x1400aaaf0
call	0x1400aaaf0
mov	rax, qword ptr [rip + 0x9aeb5]
mov	qword ptr [rsi + 0x18], rbx
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400239b9
jne	0x1400239b9
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa19bc]
mov	qword ptr [rsi + 0x20], rdi
mov	r8, rdi
xor	ecx, ecx
mov	qword ptr [rsi], rax
mov	rdx, rbx
call	0x14007e220
call	0x14007e220
jmp	0x1400230ff
jmp	0x1400230ff
lock add	dword ptr [rbx + 8], 1
jmp	0x140023435
jmp	0x140023435
lock add	dword ptr [rbx + 8], 1
jmp	0x140023483
jmp	0x140023483
mov	ecx, 0x18
call	0x1400b2c30
call	0x1400b2c30
mov	dword ptr [rax + 8], 0
mov	rsi, rax
mov	rax, qword ptr [rip + 0x9b944]
mov	qword ptr [rsi + 0x10], rbx
add	rax, 0x10
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rip + 0x9ae42]
mov	r10d, dword ptr [rax]
test	r10d, r10d
jne	0x140023ab5
jne	0x140023ab5
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa1a9b]
mov	qword ptr [rsi], rax
jmp	0x1400230ff
jmp	0x1400230ff
lock add	dword ptr [rbx + 8], 1
jmp	0x140023563
jmp	0x140023563
mov	ecx, 0x18
call	0x1400b2c30
call	0x1400b2c30
mov	dword ptr [rax + 8], 0
mov	rsi, rax
mov	rax, qword ptr [rip + 0x9b95e]
mov	qword ptr [rsi + 0x10], rbx
add	rax, 0x10
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rip + 0x9adec]
mov	r9d, dword ptr [rax]
test	r9d, r9d
jne	0x140023abf
jne	0x140023abf
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa1b55]
mov	qword ptr [rsi], rax
jmp	0x1400230ff
jmp	0x1400230ff
lock add	dword ptr [rbx + 8], 1
jmp	0x140023210
jmp	0x140023210
lock add	dword ptr [rbx + 8], 1
jmp	0x140023653
jmp	0x140023653
mov	ecx, 0x18
call	0x1400b2c30
call	0x1400b2c30
mov	dword ptr [rax + 8], 0
mov	rsi, rax
mov	rax, qword ptr [rip + 0x9b91e]
mov	qword ptr [rsi + 0x10], rbx
add	rax, 0x10
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rip + 0x9ad8c]
mov	r8d, dword ptr [rax]
test	r8d, r8d
jne	0x140023ac9
jne	0x140023ac9
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa1bb5]
mov	qword ptr [rsi], rax
jmp	0x1400230ff
jmp	0x1400230ff
lock add	dword ptr [rbx + 8], 1
jmp	0x1400236b8
jmp	0x1400236b8
mov	ecx, 0x28
call	0x1400b2c30
call	0x1400b2c30
mov	ecx, 0x80
mov	rsi, rax
call	0x1400b2c30
call	0x1400b2c30
mov	rdi, rax
mov	dword ptr [rax + 8], 0
xor	r8d, r8d
xor	edx, edx
mov	rax, qword ptr [rip + 0x9b6e6]
mov	qword ptr [rdi + 0x10], 0
mov	rcx, rsi
mov	qword ptr [rdi + 0x18], 0
add	rax, 0x10
mov	byte ptr [rdi + 0x20], 0
mov	qword ptr [rdi], rax
mov	rax, qword ptr [rip + 0x9b4f1]
mov	dword ptr [rdi + 0x22], 0
add	rax, 0x10
mov	qword ptr [rdi + 0x28], 0
mov	qword ptr [rdi + 0x30], 0
mov	qword ptr [rdi + 0x38], 0
mov	qword ptr [rdi + 0x40], 0
mov	qword ptr [rdi + 0x48], 0
mov	qword ptr [rdi + 0x50], 0
mov	dword ptr [rdi + 0x58], 0
mov	qword ptr [rdi + 0x5c], 0
mov	byte ptr [rdi + 0x7a], 0
mov	dword ptr [rsi + 8], 0
mov	qword ptr [rsi], rax
mov	qword ptr [rsi + 0x10], rdi
call	0x140075d40
call	0x140075d40
mov	rax, qword ptr [rip + 0x9aca9]
mov	qword ptr [rsi + 0x18], rbx
mov	ecx, dword ptr [rax]
test	ecx, ecx
jne	0x140023ad3
jne	0x140023ad3
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa1dd0]
mov	qword ptr [rsi + 0x20], rdi
mov	r8, rdi
xor	ecx, ecx
mov	qword ptr [rsi], rax
mov	rdx, rbx
call	0x14007f640
call	0x14007f640
jmp	0x1400230ff
jmp	0x1400230ff
lock add	dword ptr [rbx + 8], 1
jmp	0x14002378d
jmp	0x14002378d
mov	ecx, 0x28
call	0x1400b2c30
call	0x1400b2c30
mov	ecx, 0x80
mov	rsi, rax
call	0x1400b2c30
call	0x1400b2c30
mov	rdi, rax
mov	dword ptr [rax + 8], 0
xor	r8d, r8d
xor	edx, edx
mov	rax, qword ptr [rip + 0x9b5e0]
mov	qword ptr [rdi + 0x10], 0
mov	rcx, rsi
mov	qword ptr [rdi + 0x18], 0
add	rax, 0x10
mov	byte ptr [rdi + 0x20], 0
mov	qword ptr [rdi], rax
mov	rax, qword ptr [rip + 0x9b3eb]
mov	dword ptr [rdi + 0x22], 0
add	rax, 0x10
mov	qword ptr [rdi + 0x28], 0
mov	qword ptr [rdi + 0x30], 0
mov	qword ptr [rdi + 0x38], 0
mov	qword ptr [rdi + 0x40], 0
mov	qword ptr [rdi + 0x48], 0
mov	qword ptr [rdi + 0x50], 0
mov	dword ptr [rdi + 0x58], 0
mov	qword ptr [rdi + 0x5c], 0
mov	byte ptr [rdi + 0x7a], 0
mov	dword ptr [rsi + 8], 0
mov	qword ptr [rsi], rax
mov	qword ptr [rsi + 0x10], rdi
call	0x140075970
call	0x140075970
mov	rax, qword ptr [rip + 0x9abb3]
mov	qword ptr [rsi + 0x18], rbx
mov	edx, dword ptr [rax]
test	edx, edx
jne	0x140023add
jne	0x140023add
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa1bfe]
mov	qword ptr [rsi + 0x20], rdi
mov	r8, rdi
xor	ecx, ecx
mov	qword ptr [rsi], rax
mov	rdx, rbx
call	0x14007f090
call	0x14007f090
jmp	0x1400230ff
jmp	0x1400230ff
lock add	dword ptr [rbx + 8], 1
jmp	0x14002338d
jmp	0x14002338d
lock add	dword ptr [rbx + 8], 1
jmp	0x1400237fe
jmp	0x1400237fe
lock add	dword ptr [rbx + 8], 1
jmp	0x140023854
jmp	0x140023854
lock add	dword ptr [rbx + 8], 1
jmp	0x1400238b4
jmp	0x1400238b4
lock add	dword ptr [rbx + 8], 1
jmp	0x140023999
jmp	0x140023999
lock add	dword ptr [rbx + 8], 1
jmp	0x140023a8b
jmp	0x140023a8b
lea	rcx, [rip + 0x957bd]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rcx, rsi
mov	rbx, rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x140023afb
jmp	0x140023afb
mov	rcx, qword ptr [rsi + 0x18]
mov	rbx, rax
call	0x1400246d0
call	0x1400246d0
mov	rcx, rsi
call	0x1400758e0
call	0x1400758e0
jmp	0x140023afb
jmp	0x140023afb
jmp	0x140023b0b
jmp	0x140023b0b
jmp	0x140023af0
jmp	0x140023af0
jmp	0x140023b0b
jmp	0x140023b0b
mov	rcx, qword ptr [rsi + 0x18]
mov	rbx, rax
call	0x1400246d0
call	0x1400246d0
mov	rcx, rsi
call	0x140075cb0
call	0x140075cb0
jmp	0x140023afb
jmp	0x140023afb
jmp	0x140023af0
jmp	0x140023af0
jmp	0x140023af0
jmp	0x140023af0
jmp	0x140023af0
jmp	0x140023af0
mov	rcx, qword ptr [rsi + 0x18]
mov	rbx, rax
call	0x1400246d0
call	0x1400246d0
mov	rcx, rsi
call	0x140075510
call	0x140075510
jmp	0x140023afb
jmp	0x140023afb
mov	rcx, qword ptr [rsi + 0x18]
mov	rbx, rax
call	0x1400246d0
call	0x1400246d0
mov	rcx, rsi
call	0x1400aae20
call	0x1400aae20
jmp	0x140023afb
jmp	0x140023afb
jmp	0x140023af0
jmp	0x140023af0
jmp	0x140023b0b
jmp	0x140023b0b
jmp	0x140023b0b
jmp	0x140023b0b
mov	rcx, qword ptr [rsi + 0x18]
mov	rbx, rax
call	0x1400246d0
call	0x1400246d0
mov	rcx, rsi
call	0x140076080
call	0x140076080
jmp	0x140023afb
jmp	0x140023afb
jmp	0x140023af0
jmp	0x140023af0
jmp	0x140023b0b
jmp	0x140023b0b
jmp	0x140023af0
jmp	0x140023af0
jmp	0x140023b0b
jmp	0x140023b0b
jmp	0x140023b0b
jmp	0x140023b0b
mov	rcx, qword ptr [rsi + 0x18]
mov	rbx, rax
call	0x1400246d0
call	0x1400246d0
mov	rcx, rsi
call	0x1400aaa60
call	0x1400aaa60
jmp	0x140023afb
jmp	0x140023afb
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	r9, 0xfffffffffffffffe
lea	r8, [rip + 0x9cfab]
mov	rsi, rdx
lea	rdx, [rip + 0x9cfb1]
mov	rbx, rcx
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x140023c10
je	0x140023c10
mov	rsi, qword ptr [rax]
mov	rax, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
cmp	rsi, qword ptr [rip + 0x9ada9]
je	0x140023d20
je	0x140023d20
cmp	rsi, qword ptr [rip + 0x9ad5c]
je	0x140023ea0
je	0x140023ea0
cmp	rsi, qword ptr [rip + 0x9adaf]
je	0x140023df0
je	0x140023df0
cmp	rsi, qword ptr [rip + 0x9adc2]
je	0x140023ef8
je	0x140023ef8
cmp	rsi, qword ptr [rip + 0x9add5]
je	0x140023f48
je	0x140023f48
cmp	rsi, qword ptr [rip + 0x9acf8]
je	0x140023f98
je	0x140023f98
cmp	rsi, qword ptr [rip + 0x9acdb]
je	0x140024088
je	0x140024088
cmp	rsi, qword ptr [rip + 0x9ad2e]
je	0x140024188
je	0x140024188
cmp	rsi, qword ptr [rip + 0x9ad51]
je	0x1400241e0
je	0x1400241e0
cmp	rsi, qword ptr [rip + 0x9ad04]
je	0x140023e47
je	0x140023e47
cmp	rsi, qword ptr [rip + 0x9ad57]
je	0x1400242c1
je	0x1400242c1
cmp	rsi, qword ptr [rip + 0x9ad6a]
je	0x140024317
je	0x140024317
cmp	rsi, qword ptr [rip + 0x9ad7d]
je	0x140024377
je	0x140024377
cmp	rsi, qword ptr [rip + 0x9acb0]
je	0x1400243cd
je	0x1400243cd
cmp	rsi, qword ptr [rip + 0x9ac93]
je	0x1400244c3
je	0x1400244c3
cmp	rsi, qword ptr [rip + 0x9acd6]
jne	0x1400245e4
jne	0x1400245e4
mov	ecx, 0x28
call	0x1400b2c30
call	0x1400b2c30
xor	edx, edx
mov	rcx, rax
mov	rsi, rax
call	0x1400a79f0
call	0x1400a79f0
mov	rax, qword ptr [rip + 0x9a932]
mov	qword ptr [rsi + 0x20], rbx
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140024363
jne	0x140024363
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa1359]
mov	qword ptr [rsi], rax
jmp	0x140023bff
jmp	0x140023bff
nop	
mov	ecx, 0x28
call	0x1400b2c30
call	0x1400b2c30
mov	ecx, 0x90
mov	rsi, rax
call	0x1400b2c30
call	0x1400b2c30
mov	rdi, rax
mov	dword ptr [rax + 8], 0
xor	edx, edx
mov	rcx, rsi
mov	rax, qword ptr [rip + 0x9b213]
mov	qword ptr [rdi + 0x10], 0
mov	qword ptr [rdi + 0x18], 0
add	rax, 0x10
mov	byte ptr [rdi + 0x20], 0
mov	qword ptr [rdi], rax
xor	eax, eax
mov	word ptr [rdi + 0x48], ax
mov	rax, qword ptr [rip + 0x9afbb]
mov	qword ptr [rdi + 0x28], 0
add	rax, 0x10
mov	qword ptr [rdi + 0x30], 0
mov	qword ptr [rdi + 0x38], 0
mov	qword ptr [rdi + 0x40], 0
mov	byte ptr [rdi + 0x88], 0
mov	dword ptr [rsi + 8], 0
mov	qword ptr [rsi], rax
mov	qword ptr [rsi + 0x10], rdi
call	0x1400a7ad0
call	0x1400a7ad0
mov	rax, qword ptr [rip + 0x9a876]
mov	qword ptr [rsi + 0x18], rbx
mov	r11d, dword ptr [rax]
test	r11d, r11d
jne	0x140023e40
jne	0x140023e40
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa132f]
mov	qword ptr [rsi + 0x20], rdi
mov	r8, rdi
xor	ecx, ecx
mov	qword ptr [rsi], rax
mov	rdx, rbx
call	0x14007dc10
call	0x14007dc10
jmp	0x140023bff
jmp	0x140023bff
nop	word ptr [rax + rax]
mov	ecx, 0x18
call	0x1400b2c30
call	0x1400b2c30
mov	dword ptr [rax + 8], 0
mov	rsi, rax
mov	rax, qword ptr [rip + 0x9af45]
mov	qword ptr [rsi + 0x10], rbx
add	rax, 0x10
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rip + 0x9a813]
mov	r9d, dword ptr [rax]
test	r9d, r9d
jne	0x1400241d0
jne	0x1400241d0
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa140c]
mov	qword ptr [rsi], rax
jmp	0x140023bff
jmp	0x140023bff
nop	dword ptr [rax]
lock add	dword ptr [rbx + 8], 1
jmp	0x140023dca
jmp	0x140023dca
mov	ecx, 0x20
call	0x1400b2c30
call	0x1400b2c30
mov	dword ptr [rax + 8], 0
mov	rsi, rax
mov	rax, qword ptr [rip + 0x9aebe]
add	rax, 0x10
mov	qword ptr [rsi], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rsi + 0x10], rax
mov	rax, qword ptr [rip + 0x9a7b7]
mov	qword ptr [rsi + 0x18], rbx
mov	r11d, dword ptr [rax]
test	r11d, r11d
jne	0x1400245ab
jne	0x1400245ab
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa10dc]
mov	qword ptr [rsi], rax
jmp	0x140023bff
jmp	0x140023bff
nop	dword ptr [rax]
mov	ecx, 0x20
call	0x1400b2c30
call	0x1400b2c30
mov	dword ptr [rax + 8], 0
mov	rsi, rax
mov	rax, qword ptr [rip + 0x9ae55]
add	rax, 0x10
mov	qword ptr [rsi], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rsi + 0x10], rax
mov	rax, qword ptr [rip + 0x9a75e]
mov	qword ptr [rsi + 0x18], rbx
mov	r10d, dword ptr [rax]
test	r10d, r10d
jne	0x140024178
jne	0x140024178
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa1003]
mov	qword ptr [rsi], rax
jmp	0x140023bff
jmp	0x140023bff
nop	dword ptr [rax]
mov	ecx, 0x18
call	0x1400b2c30
call	0x1400b2c30
mov	dword ptr [rax + 8], 0
mov	rsi, rax
mov	rax, qword ptr [rip + 0x9ae5d]
mov	qword ptr [rsi + 0x10], rbx
add	rax, 0x10
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rip + 0x9a70b]
mov	r8d, dword ptr [rax]
test	r8d, r8d
jne	0x1400242ad
jne	0x1400242ad
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa1444]
mov	qword ptr [rsi], rax
jmp	0x140023bff
jmp	0x140023bff
nop	dword ptr [rax]
mov	ecx, 0x18
call	0x1400b2c30
call	0x1400b2c30
mov	dword ptr [rax + 8], 0
mov	rsi, rax
mov	rax, qword ptr [rip + 0x9ae2d]
mov	qword ptr [rsi + 0x10], rbx
add	rax, 0x10
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rip + 0x9a6bb]
mov	ecx, dword ptr [rax]
test	ecx, ecx
jne	0x1400242b7
jne	0x1400242b7
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa14b6]
mov	qword ptr [rsi], rax
jmp	0x140023bff
jmp	0x140023bff
nop	word ptr [rax + rax]
mov	ecx, 0x28
call	0x1400b2c30
call	0x1400b2c30
mov	ecx, 0x70
mov	rsi, rax
call	0x1400b2c30
call	0x1400b2c30
mov	rdi, rax
mov	dword ptr [rax + 8], 0
xor	edx, edx
xor	r8d, r8d
mov	rax, qword ptr [rip + 0x9affb]
mov	word ptr [rdi + 0x21], dx
mov	rcx, rsi
xor	edx, edx
mov	qword ptr [rdi + 0x10], 0
add	rax, 0x10
mov	qword ptr [rdi + 0x18], 0
mov	qword ptr [rdi], rax
mov	rax, qword ptr [rip + 0x9acf4]
mov	byte ptr [rdi + 0x20], 0
add	rax, 0x10
mov	qword ptr [rdi + 0x28], 0
mov	qword ptr [rdi + 0x30], 0
mov	qword ptr [rdi + 0x38], 0
mov	qword ptr [rdi + 0x40], 0
mov	qword ptr [rdi + 0x48], 0
mov	qword ptr [rdi + 0x50], 0
mov	dword ptr [rdi + 0x58], 0
mov	qword ptr [rdi + 0x5c], 0
mov	byte ptr [rdi + 0x6f], 0
mov	dword ptr [rsi + 8], 0
mov	qword ptr [rsi], rax
mov	qword ptr [rsi + 0x10], rdi
call	0x14009c400
call	0x14009c400
mov	rax, qword ptr [rip + 0x9a5df]
mov	qword ptr [rsi + 0x18], rbx
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14002430d
jne	0x14002430d
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa15b6]
mov	qword ptr [rsi + 0x20], rdi
mov	r8, rdi
xor	ecx, ecx
mov	qword ptr [rsi], rax
mov	rdx, rbx
call	0x14007e880
call	0x14007e880
jmp	0x140023bff
jmp	0x140023bff
nop	dword ptr [rax + rax]
mov	ecx, 0x28
call	0x1400b2c30
call	0x1400b2c30
mov	ecx, 0x70
mov	rsi, rax
call	0x1400b2c30
call	0x1400b2c30
mov	rdi, rax
mov	dword ptr [rax + 8], 0
xor	r8d, r8d
xor	edx, edx
mov	rax, qword ptr [rip + 0x9aefb]
mov	qword ptr [rdi + 0x10], 0
mov	rcx, rsi
mov	qword ptr [rdi + 0x18], 0
add	rax, 0x10
mov	byte ptr [rdi + 0x20], 0
mov	qword ptr [rdi], rax
xor	eax, eax
mov	word ptr [rdi + 0x21], ax
mov	rax, qword ptr [rip + 0x9abf0]
mov	qword ptr [rdi + 0x28], 0
add	rax, 0x10
mov	qword ptr [rdi + 0x30], 0
mov	qword ptr [rdi + 0x38], 0
mov	qword ptr [rdi + 0x40], 0
mov	qword ptr [rdi + 0x48], 0
mov	qword ptr [rdi + 0x50], 0
mov	dword ptr [rdi + 0x58], 0
mov	qword ptr [rdi + 0x5c], 0
mov	byte ptr [rdi + 0x6f], 0
mov	dword ptr [rsi + 8], 0
mov	qword ptr [rsi], rax
mov	qword ptr [rsi + 0x10], rdi
call	0x14009c040
call	0x14009c040
mov	rax, qword ptr [rip + 0x9a4ef]
mov	qword ptr [rsi + 0x18], rbx
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14002436d
jne	0x14002436d
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa13e6]
mov	qword ptr [rsi + 0x20], rdi
mov	r8, rdi
xor	ecx, ecx
mov	qword ptr [rsi], rax
mov	rdx, rbx
call	0x14007e3d0
call	0x14007e3d0
jmp	0x140023bff
jmp	0x140023bff
nop	dword ptr [rax + rax]
lock add	dword ptr [rbx + 8], 1
jmp	0x140023ee6
jmp	0x140023ee6
nop	word ptr [rax + rax]
mov	ecx, 0x28
call	0x1400b2c30
call	0x1400b2c30
xor	edx, edx
mov	rcx, rax
mov	rsi, rax
call	0x1400a7820
call	0x1400a7820
mov	rax, qword ptr [rip + 0x9a48a]
mov	qword ptr [rsi + 0x20], rbx
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400243c3
jne	0x1400243c3
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa0e31]
mov	qword ptr [rsi], rax
jmp	0x140023bff
jmp	0x140023bff
nop	word ptr [rax + rax]
lock add	dword ptr [rbx + 8], 1
jmp	0x140023e2d
jmp	0x140023e2d
nop	word ptr [rax + rax]
mov	ecx, 0x28
call	0x1400b2c30
call	0x1400b2c30
mov	ecx, 0xd0
mov	rsi, rax
call	0x1400b2c30
call	0x1400b2c30
mov	rdi, rax
mov	dword ptr [rax + 8], 0
xor	edx, edx
mov	rcx, rsi
mov	rax, qword ptr [rip + 0x9ad63]
mov	qword ptr [rdi + 0x10], 0
mov	qword ptr [rdi + 0x18], 0
add	rax, 0x10
mov	byte ptr [rdi + 0x20], 0
mov	qword ptr [rdi], rax
mov	rax, qword ptr [rip + 0x9ab11]
mov	qword ptr [rdi + 0x28], 0
add	rax, 0x10
mov	qword ptr [rdi + 0x30], 0
mov	qword ptr [rdi + 0x38], 0
mov	qword ptr [rdi + 0x40], 0
mov	dword ptr [rdi + 0x48], 0
mov	byte ptr [rdi + 0xc8], 0
mov	dword ptr [rsi + 8], 0
mov	qword ptr [rsi], rax
mov	qword ptr [rsi + 0x10], rdi
call	0x1400a7e80
call	0x1400a7e80
mov	rax, qword ptr [rip + 0x9a3b5]
mov	qword ptr [rsi + 0x18], rbx
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400244b9
jne	0x1400244b9
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa0f0c]
mov	qword ptr [rsi + 0x20], rdi
mov	r8, rdi
xor	ecx, ecx
mov	qword ptr [rsi], rax
mov	rdx, rbx
call	0x14007df90
call	0x14007df90
jmp	0x140023bff
jmp	0x140023bff
lock add	dword ptr [rbx + 8], 1
jmp	0x140023f35
jmp	0x140023f35
lock add	dword ptr [rbx + 8], 1
jmp	0x140023f83
jmp	0x140023f83
mov	ecx, 0x18
call	0x1400b2c30
call	0x1400b2c30
mov	dword ptr [rax + 8], 0
mov	rsi, rax
mov	rax, qword ptr [rip + 0x9aa84]
mov	qword ptr [rsi + 0x10], rbx
add	rax, 0x10
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rip + 0x9a342]
mov	r10d, dword ptr [rax]
test	r10d, r10d
jne	0x1400245b5
jne	0x1400245b5
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa0feb]
mov	qword ptr [rsi], rax
jmp	0x140023bff
jmp	0x140023bff
lock add	dword ptr [rbx + 8], 1
jmp	0x140024063
jmp	0x140024063
mov	ecx, 0x18
call	0x1400b2c30
call	0x1400b2c30
mov	dword ptr [rax + 8], 0
mov	rsi, rax
mov	rax, qword ptr [rip + 0x9aa4e]
mov	qword ptr [rsi + 0x10], rbx
add	rax, 0x10
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rip + 0x9a2ec]
mov	r9d, dword ptr [rax]
test	r9d, r9d
jne	0x1400245bf
jne	0x1400245bf
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa1085]
mov	qword ptr [rsi], rax
jmp	0x140023bff
jmp	0x140023bff
lock add	dword ptr [rbx + 8], 1
jmp	0x140023d10
jmp	0x140023d10
lock add	dword ptr [rbx + 8], 1
jmp	0x140024153
jmp	0x140024153
mov	ecx, 0x18
call	0x1400b2c30
call	0x1400b2c30
mov	dword ptr [rax + 8], 0
mov	rsi, rax
mov	rax, qword ptr [rip + 0x9aa0e]
mov	qword ptr [rsi + 0x10], rbx
add	rax, 0x10
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rip + 0x9a28c]
mov	r8d, dword ptr [rax]
test	r8d, r8d
jne	0x1400245c9
jne	0x1400245c9
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa10e5]
mov	qword ptr [rsi], rax
jmp	0x140023bff
jmp	0x140023bff
lock add	dword ptr [rbx + 8], 1
jmp	0x1400241b8
jmp	0x1400241b8
mov	ecx, 0x28
call	0x1400b2c30
call	0x1400b2c30
mov	ecx, 0x80
mov	rsi, rax
call	0x1400b2c30
call	0x1400b2c30
mov	rdi, rax
mov	dword ptr [rax + 8], 0
xor	r8d, r8d
xor	edx, edx
mov	rax, qword ptr [rip + 0x9abe6]
mov	qword ptr [rdi + 0x10], 0
mov	rcx, rsi
mov	qword ptr [rdi + 0x18], 0
add	rax, 0x10
mov	byte ptr [rdi + 0x20], 0
mov	qword ptr [rdi], rax
mov	rax, qword ptr [rip + 0x9a8e1]
mov	dword ptr [rdi + 0x22], 0
add	rax, 0x10
mov	qword ptr [rdi + 0x28], 0
mov	qword ptr [rdi + 0x30], 0
mov	qword ptr [rdi + 0x38], 0
mov	qword ptr [rdi + 0x40], 0
mov	qword ptr [rdi + 0x48], 0
mov	qword ptr [rdi + 0x50], 0
mov	dword ptr [rdi + 0x58], 0
mov	qword ptr [rdi + 0x5c], 0
mov	byte ptr [rdi + 0x7a], 0
mov	dword ptr [rsi + 8], 0
mov	qword ptr [rsi], rax
mov	qword ptr [rsi + 0x10], rdi
call	0x14009cb80
call	0x14009cb80
mov	rax, qword ptr [rip + 0x9a1a9]
mov	qword ptr [rsi + 0x18], rbx
mov	ecx, dword ptr [rax]
test	ecx, ecx
jne	0x1400245d3
jne	0x1400245d3
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa1340]
mov	qword ptr [rsi + 0x20], rdi
mov	r8, rdi
xor	ecx, ecx
mov	qword ptr [rsi], rax
mov	rdx, rbx
call	0x14007f2e0
call	0x14007f2e0
jmp	0x140023bff
jmp	0x140023bff
lock add	dword ptr [rbx + 8], 1
jmp	0x14002428d
jmp	0x14002428d
mov	ecx, 0x28
call	0x1400b2c30
call	0x1400b2c30
mov	ecx, 0x80
mov	rsi, rax
call	0x1400b2c30
call	0x1400b2c30
mov	rdi, rax
mov	dword ptr [rax + 8], 0
xor	r8d, r8d
xor	edx, edx
mov	rax, qword ptr [rip + 0x9aae0]
mov	qword ptr [rdi + 0x10], 0
mov	rcx, rsi
mov	qword ptr [rdi + 0x18], 0
add	rax, 0x10
mov	byte ptr [rdi + 0x20], 0
mov	qword ptr [rdi], rax
mov	rax, qword ptr [rip + 0x9a7db]
mov	dword ptr [rdi + 0x22], 0
add	rax, 0x10
mov	qword ptr [rdi + 0x28], 0
mov	qword ptr [rdi + 0x30], 0
mov	qword ptr [rdi + 0x38], 0
mov	qword ptr [rdi + 0x40], 0
mov	qword ptr [rdi + 0x48], 0
mov	qword ptr [rdi + 0x50], 0
mov	dword ptr [rdi + 0x58], 0
mov	qword ptr [rdi + 0x5c], 0
mov	byte ptr [rdi + 0x7a], 0
mov	dword ptr [rsi + 8], 0
mov	qword ptr [rsi], rax
mov	qword ptr [rsi + 0x10], rdi
call	0x14009c7c0
call	0x14009c7c0
mov	rax, qword ptr [rip + 0x9a0b3]
mov	qword ptr [rsi + 0x18], rbx
mov	edx, dword ptr [rax]
test	edx, edx
jne	0x1400245dd
jne	0x1400245dd
add	dword ptr [rbx + 8], 1
lea	rax, [rip + 0xa116e]
mov	qword ptr [rsi + 0x20], rdi
mov	r8, rdi
xor	ecx, ecx
mov	qword ptr [rsi], rax
mov	rdx, rbx
call	0x14007ed30
call	0x14007ed30
jmp	0x140023bff
jmp	0x140023bff
lock add	dword ptr [rbx + 8], 1
jmp	0x140023e8d
jmp	0x140023e8d
lock add	dword ptr [rbx + 8], 1
jmp	0x1400242fe
jmp	0x1400242fe
lock add	dword ptr [rbx + 8], 1
jmp	0x140024354
jmp	0x140024354
lock add	dword ptr [rbx + 8], 1
jmp	0x1400243b4
jmp	0x1400243b4
lock add	dword ptr [rbx + 8], 1
jmp	0x140024499
jmp	0x140024499
lock add	dword ptr [rbx + 8], 1
jmp	0x14002458b
jmp	0x14002458b
lea	rcx, [rip + 0x955e5]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rcx, rsi
mov	rbx, rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x1400245fb
jmp	0x1400245fb
mov	rcx, qword ptr [rsi + 0x18]
mov	rbx, rax
call	0x1400246d0
call	0x1400246d0
mov	rcx, rsi
call	0x14009c770
call	0x14009c770
jmp	0x1400245fb
jmp	0x1400245fb
jmp	0x14002460b
jmp	0x14002460b
jmp	0x1400245f0
jmp	0x1400245f0
jmp	0x14002460b
jmp	0x14002460b
mov	rcx, qword ptr [rsi + 0x18]
mov	rbx, rax
call	0x1400246d0
call	0x1400246d0
mov	rcx, rsi
call	0x14009cb30
call	0x14009cb30
jmp	0x1400245fb
jmp	0x1400245fb
jmp	0x1400245f0
jmp	0x1400245f0
jmp	0x1400245f0
jmp	0x1400245f0
jmp	0x1400245f0
jmp	0x1400245f0
mov	rcx, qword ptr [rsi + 0x18]
mov	rbx, rax
call	0x1400246d0
call	0x1400246d0
mov	rcx, rsi
call	0x14009c3b0
call	0x14009c3b0
jmp	0x1400245fb
jmp	0x1400245fb
mov	rcx, qword ptr [rsi + 0x18]
mov	rbx, rax
call	0x1400246d0
call	0x1400246d0
mov	rcx, rsi
call	0x1400a81e0
call	0x1400a81e0
jmp	0x1400245fb
jmp	0x1400245fb
jmp	0x1400245f0
jmp	0x1400245f0
jmp	0x14002460b
jmp	0x14002460b
jmp	0x14002460b
jmp	0x14002460b
mov	rcx, qword ptr [rsi + 0x18]
mov	rbx, rax
call	0x1400246d0
call	0x1400246d0
mov	rcx, rsi
call	0x14009cef0
call	0x14009cef0
jmp	0x1400245fb
jmp	0x1400245fb
jmp	0x1400245f0
jmp	0x1400245f0
jmp	0x14002460b
jmp	0x14002460b
jmp	0x1400245f0
jmp	0x1400245f0
jmp	0x14002460b
jmp	0x14002460b
jmp	0x14002460b
jmp	0x14002460b
mov	rcx, qword ptr [rsi + 0x18]
mov	rbx, rax
call	0x1400246d0
call	0x1400246d0
mov	rcx, rsi
call	0x1400a7e30
call	0x1400a7e30
jmp	0x1400245fb
jmp	0x1400245fb
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x99f59]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140024700
jne	0x140024700
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
je	0x1400246f0
je	0x1400246f0
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
jmp	qword ptr [rax + 8]
jmp	qword ptr [rax + 8]
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x1400246e6
jmp	0x1400246e6
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x78
mov	rax, qword ptr [rcx]
mov	rsi, rdx
mov	rdx, qword ptr [rdx]
mov	rbx, rcx
cmp	rax, rdx
je	0x1400247fb
je	0x1400247fb
mov	rdi, qword ptr [rax + 0x20]
mov	rcx, qword ptr [rdi]
test	rcx, rcx
je	0x1400247e0
je	0x1400247e0
mov	rbp, qword ptr [rdx + 0x20]
mov	rdx, qword ptr [rbp]
test	rdx, rdx
je	0x1400247e0
je	0x1400247e0
call	0x1400159e8
call	0x1400159e8
test	eax, eax
jne	0x1400247e0
jne	0x1400247e0
cmp	qword ptr [rdi + 8], 0
je	0x1400247f0
je	0x1400247f0
lea	rdi, [rsp + 0x50]
mov	rdx, rsi
mov	rcx, rdi
call	0x140022ac0
call	0x140022ac0
lea	rcx, [rsp + 0x30]
mov	rdx, rbx
call	0x140022ac0
call	0x140022ac0
mov	r8, qword ptr [rsp + 0x38]
mov	rbx, qword ptr [rsp + 0x30]
xor	eax, eax
cmp	r8, qword ptr [rsp + 0x58]
je	0x140024810
je	0x140024810
lea	rdx, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0x50]
cmp	rbx, rdx
je	0x1400247bb
je	0x1400247bb
mov	rcx, rbx
mov	byte ptr [rsp + 0x2f], al
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, qword ptr [rsp + 0x50]
movzx	eax, byte ptr [rsp + 0x2f]
lea	rdx, [rsp + 0x60]
cmp	rcx, rdx
je	0x1400247e2
je	0x1400247e2
mov	byte ptr [rsp + 0x2f], al
call	0x1400b2be0
call	0x1400b2be0
movzx	eax, byte ptr [rsp + 0x2f]
add	rsp, 0x78
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
xor	eax, eax
add	rsp, 0x78
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
cmp	qword ptr [rbp + 8], 0
jne	0x140024766
jne	0x140024766
mov	eax, 1
add	rsp, 0x78
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x50]
test	r8, r8
je	0x140024830
je	0x140024830
mov	rdx, rcx
mov	rcx, rbx
call	0x140015990
call	0x140015990
test	eax, eax
sete	al
jmp	0x140024796
jmp	0x140024796
nop	
lea	rax, [rsp + 0x40]
cmp	rbx, rax
mov	eax, 1
jne	0x1400247a5
jne	0x1400247a5
jmp	0x1400247bb
jmp	0x1400247bb
mov	rbx, rax
mov	rsi, rdx
mov	rcx, rdi
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
mov	rax, rsi
add	rax, 1
jne	0x14002486f
jne	0x14002486f
call	0x1400b2e40
call	0x1400b2e40
mov	rcx, rax
mov	rax, rdx
jmp	0x14002485c
jmp	0x14002485c
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x189]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x50]
cmp	rax, rdx
jne	0x1400248a0
jne	0x1400248a0
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x60]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x169]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x48]
cmp	rax, rdx
jne	0x1400248d0
jne	0x1400248d0
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x5c]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x28]
mov	rbx, rcx
lea	rcx, [rip + 0x269]
cmp	rax, rcx
jne	0x140024938
jne	0x140024938
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x28]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140024947
je	0x140024947
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x94f22]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x10]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x14002499e
je	0x14002499e
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x94ecb]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x1f9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, rdx
jne	0x1400249d0
jne	0x1400249d0
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x58]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x1d9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x140024a00
jne	0x140024a00
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x21]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x60]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x5c]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x38]
mov	rbx, rcx
lea	rcx, [rip + 0x189]
cmp	rax, rcx
jne	0x140024a88
jne	0x140024a88
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x48]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140024a97
je	0x140024a97
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x94dd2]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x30]
mov	rbx, rcx
lea	rcx, [rip + 0x159]
cmp	rax, rcx
jne	0x140024b08
jne	0x140024b08
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x38]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140024b17
je	0x140024b17
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x94d52]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x139]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x18]
cmp	rax, rdx
jne	0x140024b50
jne	0x140024b50
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x22]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x28]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x140024b9e
je	0x140024b9e
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x94ccb]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x58]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x21]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x48]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x140024c0e
je	0x140024c0e
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x94c5b]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x38]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x140024c5e
je	0x140024c5e
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x94c0b]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x22]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x20]
mov	rbx, rcx
lea	rcx, [rip - 0x337]
cmp	rax, rcx
jne	0x140024cd8
jne	0x140024cd8
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x10]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140024ce7
je	0x140024ce7
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x94b82]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x189]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x50]
cmp	rax, rdx
jne	0x140024d20
jne	0x140024d20
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x60]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x169]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x48]
cmp	rax, rdx
jne	0x140024d50
jne	0x140024d50
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x5c]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x28]
mov	rbx, rcx
lea	rcx, [rip + 0x269]
cmp	rax, rcx
jne	0x140024db8
jne	0x140024db8
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x28]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140024dc7
je	0x140024dc7
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x94aa2]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x10]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x140024e1e
je	0x140024e1e
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x94a4b]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x1f9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, rdx
jne	0x140024e50
jne	0x140024e50
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x58]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x1d9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x140024e80
jne	0x140024e80
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x21]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x60]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x5c]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x38]
mov	rbx, rcx
lea	rcx, [rip + 0x189]
cmp	rax, rcx
jne	0x140024f08
jne	0x140024f08
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x48]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140024f17
je	0x140024f17
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x94952]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x30]
mov	rbx, rcx
lea	rcx, [rip + 0x159]
cmp	rax, rcx
jne	0x140024f88
jne	0x140024f88
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x38]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140024f97
je	0x140024f97
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x948d2]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x139]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x18]
cmp	rax, rdx
jne	0x140024fd0
jne	0x140024fd0
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x22]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x28]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x14002501e
je	0x14002501e
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x9484b]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x58]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x21]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x48]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x14002508e
je	0x14002508e
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x947db]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x38]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x1400250de
je	0x1400250de
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x9478b]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x22]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x20]
mov	rbx, rcx
lea	rcx, [rip - 0x337]
cmp	rax, rcx
jne	0x140025158
jne	0x140025158
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x10]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140025167
je	0x140025167
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x94702]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x189]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x50]
cmp	rax, rdx
jne	0x1400251a0
jne	0x1400251a0
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x60]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x169]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x48]
cmp	rax, rdx
jne	0x1400251d0
jne	0x1400251d0
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x5c]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x28]
mov	rbx, rcx
lea	rcx, [rip + 0x269]
cmp	rax, rcx
jne	0x140025238
jne	0x140025238
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x28]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140025247
je	0x140025247
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax*2]
call	0x1400a15c0
call	0x1400a15c0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x949b2]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x10]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x14002529e
je	0x14002529e
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d530
call	0x14009d530
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x9495b]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x1f9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, rdx
jne	0x1400252d0
jne	0x1400252d0
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x58]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x1d9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x140025300
jne	0x140025300
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x22]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x60]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x5c]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x38]
mov	rbx, rcx
lea	rcx, [rip + 0x189]
cmp	rax, rcx
jne	0x140025388
jne	0x140025388
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x48]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140025397
je	0x140025397
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax*2]
call	0x1400a15c0
call	0x1400a15c0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x94862]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x30]
mov	rbx, rcx
lea	rcx, [rip + 0x159]
cmp	rax, rcx
jne	0x140025408
jne	0x140025408
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x38]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140025417
je	0x140025417
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax*2]
call	0x1400a15c0
call	0x1400a15c0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x947e2]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x139]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x18]
cmp	rax, rdx
jne	0x140025450
jne	0x140025450
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x24]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x28]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x14002549e
je	0x14002549e
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax*2]
call	0x1400a15c0
call	0x1400a15c0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x9475b]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x58]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x22]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x48]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x14002550e
je	0x14002550e
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax*2]
call	0x1400a15c0
call	0x1400a15c0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x946eb]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x38]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x14002555e
je	0x14002555e
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax*2]
call	0x1400a15c0
call	0x1400a15c0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x9469b]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x24]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x20]
mov	rbx, rcx
lea	rcx, [rip - 0x337]
cmp	rax, rcx
jne	0x1400255d8
jne	0x1400255d8
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x10]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x1400255e7
je	0x1400255e7
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d530
call	0x14009d530
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x94612]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x189]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x50]
cmp	rax, rdx
jne	0x140025620
jne	0x140025620
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x60]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x169]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x48]
cmp	rax, rdx
jne	0x140025650
jne	0x140025650
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x5c]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x28]
mov	rbx, rcx
lea	rcx, [rip + 0x269]
cmp	rax, rcx
jne	0x1400256b8
jne	0x1400256b8
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x28]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x1400256c7
je	0x1400256c7
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax*2]
call	0x1400a15c0
call	0x1400a15c0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x94532]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x10]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x14002571e
je	0x14002571e
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d530
call	0x14009d530
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x944db]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x1f9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, rdx
jne	0x140025750
jne	0x140025750
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x58]
ret	
ret	
nop	dword ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x1d9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x140025780
jne	0x140025780
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x22]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x60]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x5c]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x38]
mov	rbx, rcx
lea	rcx, [rip + 0x189]
cmp	rax, rcx
jne	0x140025808
jne	0x140025808
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x48]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140025817
je	0x140025817
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax*2]
call	0x1400a15c0
call	0x1400a15c0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x943e2]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x30]
mov	rbx, rcx
lea	rcx, [rip + 0x159]
cmp	rax, rcx
jne	0x140025888
jne	0x140025888
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x38]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140025897
je	0x140025897
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax*2]
call	0x1400a15c0
call	0x1400a15c0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x94362]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x139]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x18]
cmp	rax, rdx
jne	0x1400258d0
jne	0x1400258d0
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x24]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x28]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x14002591e
je	0x14002591e
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax*2]
call	0x1400a15c0
call	0x1400a15c0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x942db]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax + 0x58]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x22]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x48]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x14002598e
je	0x14002598e
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax*2]
call	0x1400a15c0
call	0x1400a15c0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x9426b]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x38]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x1400259de
je	0x1400259de
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax*2]
call	0x1400a15c0
call	0x1400a15c0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x9421b]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x24]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x20]
mov	rbx, rcx
lea	rcx, [rip - 0x337]
cmp	rax, rcx
jne	0x140025a58
jne	0x140025a58
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x10]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140025a67
je	0x140025a67
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d530
call	0x14009d530
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x94192]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	r8d, 1
mov	rax, qword ptr [rcx]
cmp	rdx, rax
jb	0x140025a99
jb	0x140025a99
add	rax, qword ptr [rcx + 8]
cmp	rax, rdx
setb	r8b
mov	eax, r8d
ret	
ret	
nop	
nop	
nop	
lea	rax, [rcx + 0x10]
cmp	rax, qword ptr [rcx]
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbp, rcx
mov	rcx, rdx
mov	rsi, rdx
mov	r12, r8
call	0x140015a08
call	0x140015a08
mov	rbx, qword ptr [rbp + 8]
mov	rdi, rax
test	rbx, rbx
je	0x140025b20
je	0x140025b20
test	rax, rax
je	0x140025b20
je	0x140025b20
sub	rbx, 1
mov	rbp, qword ptr [rbp]
cmp	rbx, r12
cmova	rbx, r12
jmp	0x140025af6
jmp	0x140025af6
nop	dword ptr [rax]
sub	rbx, 1
jb	0x140025b0b
jb	0x140025b0b
movsx	edx, byte ptr [rbp + rbx]
mov	r8, rdi
mov	rcx, rsi
call	0x140015988
call	0x140015988
test	rax, rax
je	0x140025af0
je	0x140025af0
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	rbx, 0xffffffffffffffff
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, qword ptr [rcx + 8]
mov	rdi, rdx
mov	rsi, r9
test	rbx, rbx
je	0x140025ba0
je	0x140025ba0
test	r9, r9
je	0x140025ba0
je	0x140025ba0
sub	rbx, 1
mov	rbp, qword ptr [rcx]
cmp	rbx, r8
cmova	rbx, r8
jmp	0x140025b76
jmp	0x140025b76
nop	dword ptr [rax]
sub	rbx, 1
jb	0x140025b8b
jb	0x140025b8b
movsx	edx, byte ptr [rbp + rbx]
mov	r8, rsi
mov	rcx, rdi
call	0x140015988
call	0x140015988
test	rax, rax
je	0x140025b70
je	0x140025b70
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rbx, 0xffffffffffffffff
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, qword ptr [rcx + 8]
mov	rsi, qword ptr [rdx + 8]
test	rbx, rbx
je	0x140025c20
je	0x140025c20
test	rsi, rsi
je	0x140025c20
je	0x140025c20
sub	rbx, 1
mov	rbp, qword ptr [rdx]
mov	rdi, qword ptr [rcx]
cmp	rbx, r8
cmova	rbx, r8
jmp	0x140025bf6
jmp	0x140025bf6
nop	dword ptr [rax]
sub	rbx, 1
jb	0x140025c0a
jb	0x140025c0a
movsx	edx, byte ptr [rdi + rbx]
mov	r8, rsi
mov	rcx, rbp
call	0x140015988
call	0x140015988
test	rax, rax
je	0x140025bf0
je	0x140025bf0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rbx, 0xffffffffffffffff
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, 0xffffffffffffffff
mov	r9, qword ptr [rcx + 8]
test	r9, r9
je	0x140025c7e
je	0x140025c7e
sub	r9, 1
mov	rax, r8
cmp	r9, r8
mov	r8, qword ptr [rcx]
cmovbe	rax, r9
nop	dword ptr [rax]
movzx	ecx, byte ptr [r8 + rax]
mov	r9, rax
sub	rax, 1
cmp	dl, cl
je	0x140025c80
je	0x140025c80
cmp	rax, -1
jne	0x140025c68
jne	0x140025c68
ret	
ret	
nop	
mov	rax, r9
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rcx + 0x10]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbp, rcx
mov	rcx, rdx
mov	rsi, rdx
mov	rbx, r8
call	0x140015a08
call	0x140015a08
mov	rdi, rax
test	rax, rax
je	0x140025cf1
je	0x140025cf1
mov	r12, qword ptr [rbp + 8]
jmp	0x140025cec
jmp	0x140025cec
nop	dword ptr [rax]
mov	rax, qword ptr [rbp]
mov	r8, rdi
mov	rcx, rsi
movsx	edx, byte ptr [rax + rbx]
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x140025d08
jne	0x140025d08
add	rbx, 1
cmp	rbx, r12
jb	0x140025cd0
jb	0x140025cd0
mov	rax, 0xffffffffffffffff
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbp, rcx
mov	rdi, rdx
mov	rbx, r8
mov	rsi, r9
test	r9, r9
je	0x140025d69
je	0x140025d69
mov	r12, qword ptr [rcx + 8]
jmp	0x140025d64
jmp	0x140025d64
nop	dword ptr [rax]
mov	rax, qword ptr [rbp]
mov	r8, rsi
mov	rcx, rdi
movsx	edx, byte ptr [rax + rbx]
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x140025d80
jne	0x140025d80
add	rbx, 1
cmp	rbx, r12
jb	0x140025d48
jb	0x140025d48
mov	rax, 0xffffffffffffffff
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rdi, qword ptr [rdx + 8]
mov	r12, qword ptr [rdx]
mov	rsi, rcx
mov	rbx, r8
test	rdi, rdi
je	0x140025dd8
je	0x140025dd8
mov	rbp, qword ptr [rcx + 8]
jmp	0x140025dd3
jmp	0x140025dd3
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsi]
mov	r8, rdi
mov	rcx, r12
movsx	edx, byte ptr [rax + rbx]
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x140025df0
jne	0x140025df0
add	rbx, 1
cmp	rbx, rbp
jb	0x140025db8
jb	0x140025db8
mov	rax, 0xffffffffffffffff
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, 0xffffffffffffffff
mov	rax, r8
mov	r8, qword ptr [rcx + 8]
cmp	rax, r8
jae	0x140025e38
jae	0x140025e38
mov	rsi, qword ptr [rcx]
movsx	edx, dl
sub	r8, rax
lea	rcx, [rsi + rax]
call	0x140015988
call	0x140015988
mov	rdx, rax
sub	rdx, rsi
test	rax, rax
cmovne	rbx, rdx
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
movabs	rax, 0x3fffffffffffffff
add	rdx, rax
sub	rdx, qword ptr [rcx + 8]
cmp	rdx, r8
jb	0x140025e7f
jb	0x140025e7f
add	rsp, 0x28
ret	
ret	
mov	rcx, r9
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, 0xffffffffffffffff
mov	rbp, qword ptr [rcx + 8]
mov	r12, rcx
mov	rsi, rdx
mov	r13, r8
test	rbp, rbp
je	0x140025f0b
je	0x140025f0b
sub	rbp, 1
mov	rcx, rdx
mov	rbx, r13
call	0x140015a08
call	0x140015a08
cmp	rbp, r13
cmovbe	rbx, rbp
mov	rdi, rax
test	rax, rax
je	0x140025f0b
je	0x140025f0b
mov	rbp, qword ptr [r12]
jmp	0x140025ef6
jmp	0x140025ef6
nop	dword ptr [rax]
sub	rbx, 1
jb	0x140025f0b
jb	0x140025f0b
movsx	edx, byte ptr [rbp + rbx]
mov	r8, rdi
mov	rcx, rsi
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x140025ef0
jne	0x140025ef0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, 0xffffffffffffffff
mov	rax, qword ptr [rcx + 8]
mov	rdi, rdx
mov	rsi, r9
test	rax, rax
je	0x140025f7b
je	0x140025f7b
sub	rax, 1
mov	rbx, r8
cmp	rax, r8
cmovbe	rbx, rax
test	r9, r9
je	0x140025f7b
je	0x140025f7b
mov	rbp, qword ptr [rcx]
jmp	0x140025f66
jmp	0x140025f66
nop	word ptr cs:[rax + rax]
sub	rbx, 1
jb	0x140025f7b
jb	0x140025f7b
movsx	edx, byte ptr [rbp + rbx]
mov	r8, rsi
mov	rcx, rdi
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x140025f60
jne	0x140025f60
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, 0xffffffffffffffff
mov	rax, qword ptr [rcx + 8]
test	rax, rax
je	0x140025fea
je	0x140025fea
sub	rax, 1
mov	rsi, qword ptr [rdx + 8]
mov	rbx, r8
cmp	rax, r8
cmovbe	rbx, rax
test	rsi, rsi
je	0x140025fea
je	0x140025fea
mov	rbp, qword ptr [rdx]
mov	rdi, qword ptr [rcx]
jmp	0x140025fd6
jmp	0x140025fd6
nop	word ptr [rax + rax]
sub	rbx, 1
jb	0x140025fea
jb	0x140025fea
movsx	edx, byte ptr [rdi + rbx]
mov	r8, rsi
mov	rcx, rbp
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x140025fd0
jne	0x140025fd0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, 0xffffffffffffffff
mov	r9, qword ptr [rcx + 8]
test	r9, r9
je	0x140026033
je	0x140026033
sub	r9, 1
mov	rax, r8
mov	rcx, qword ptr [rcx]
cmp	r9, r8
cmovbe	rax, r9
jmp	0x14002602e
jmp	0x14002602e
nop	dword ptr [rax + rax]
sub	rax, 1
jb	0x140026033
jb	0x140026033
cmp	byte ptr [rcx + rax], dl
je	0x140026028
je	0x140026028
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	r12, rcx
mov	rcx, rdx
mov	rsi, rdx
mov	rbx, r8
call	0x140015a08
call	0x140015a08
mov	rbp, qword ptr [r12 + 8]
mov	rdi, rax
cmp	rbx, rbp
jae	0x1400260a8
jae	0x1400260a8
mov	r12, qword ptr [r12]
test	rax, rax
jne	0x140026081
jne	0x140026081
jmp	0x140026096
jmp	0x140026096
nop	dword ptr [rax + rax]
add	rbx, 1
cmp	rbx, rbp
je	0x1400260a8
je	0x1400260a8
movsx	edx, byte ptr [r12 + rbx]
mov	r8, rdi
mov	rcx, rsi
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x140026078
jne	0x140026078
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	rax, 0xffffffffffffffff
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbp, qword ptr [rcx + 8]
mov	rdi, rdx
mov	rbx, r8
mov	rsi, r9
cmp	r8, rbp
jae	0x140026120
jae	0x140026120
mov	r12, qword ptr [rcx]
test	r9, r9
jne	0x1400260f9
jne	0x1400260f9
jmp	0x14002610e
jmp	0x14002610e
nop	word ptr cs:[rax + rax]
add	rbx, 1
cmp	rbx, rbp
je	0x140026120
je	0x140026120
movsx	edx, byte ptr [r12 + rbx]
mov	r8, rsi
mov	rcx, rdi
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x1400260f0
jne	0x1400260f0
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	rax, 0xffffffffffffffff
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rdi, qword ptr [rcx + 8]
mov	rsi, qword ptr [rdx + 8]
mov	rbx, r8
cmp	r8, rdi
jae	0x1400261a0
jae	0x1400261a0
mov	rbp, qword ptr [rcx]
test	rsi, rsi
je	0x14002618e
je	0x14002618e
mov	r12, qword ptr [rdx]
jmp	0x140026179
jmp	0x140026179
nop	word ptr [rax + rax]
add	rbx, 1
cmp	rbx, rdi
je	0x1400261a0
je	0x1400261a0
movsx	edx, byte ptr [rbp + rbx]
mov	r8, rsi
mov	rcx, r12
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x140026170
jne	0x140026170
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	rax, 0xffffffffffffffff
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, r8
mov	r8, qword ptr [rcx + 8]
cmp	rax, r8
jae	0x1400261f0
jae	0x1400261f0
mov	rcx, qword ptr [rcx]
jmp	0x1400261e1
jmp	0x1400261e1
nop	dword ptr [rax]
add	rax, 1
cmp	rax, r8
je	0x1400261f0
je	0x1400261f0
cmp	byte ptr [rcx + rax], dl
je	0x1400261d8
je	0x1400261d8
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, 0xffffffffffffffff
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r8, qword ptr [rcx + 8]
cmp	rdx, r8
jae	0x140026218
jae	0x140026218
mov	rax, qword ptr [rcx]
add	rax, rdx
add	rsp, 0x28
ret	
ret	
lea	rcx, [rip + 0x94241]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rax, qword ptr [rcx + 8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 8]
mov	rdx, qword ptr [rcx]
lea	rax, [rdx + rax - 1]
ret	
ret	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rax, qword ptr [rcx + 8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, rcx
mov	rcx, rdx
mov	rdx, r9
mov	rbx, qword ptr [rax + 8]
cmp	rbx, r9
jb	0x1400262ae
jb	0x1400262ae
sub	rbx, r9
cmp	rbx, r8
cmova	rbx, r8
test	rbx, rbx
je	0x140026297
je	0x140026297
add	rdx, qword ptr [rax]
cmp	rbx, 1
je	0x1400262a0
je	0x1400262a0
mov	r8, rbx
call	0x140015998
call	0x140015998
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	r8, rdx
mov	r9, rbx
lea	rdx, [rip + 0x94288]
lea	rcx, [rip + 0x94166]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
mov	rdi, r8
call	0x140015a08
call	0x140015a08
mov	r8, rdi
mov	rdx, rbx
mov	rcx, rsi
mov	r9, rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x140026310
jmp	0x140026310
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx + 8]
mov	rbp, rdx
mov	rsi, r9
test	r9, r9
je	0x1400263b8
je	0x1400263b8
mov	rbx, 0xffffffffffffffff
cmp	r8, rax
jae	0x1400263a1
jae	0x1400263a1
mov	r14, qword ptr [rcx]
lea	r12, [r14 + rax]
sub	rax, r8
lea	rcx, [r14 + r8]
cmp	rax, r9
jb	0x1400263a1
jb	0x1400263a1
mov	edi, 1
sub	rdi, r9
add	rax, rdi
mov	r8, rax
je	0x1400263a1
je	0x1400263a1
movsx	r13d, byte ptr [rdx]
mov	edx, r13d
call	0x140015988
call	0x140015988
mov	rbx, rax
test	rax, rax
je	0x14002639a
je	0x14002639a
mov	r8, rsi
mov	rdx, rbp
mov	rcx, rax
call	0x140015990
call	0x140015990
test	eax, eax
je	0x1400263d0
je	0x1400263d0
lea	rcx, [rbx + 1]
mov	r8, r12
sub	r8, rcx
cmp	r8, rsi
jb	0x14002639a
jb	0x14002639a
add	r8, rdi
jne	0x140026364
jne	0x140026364
mov	rbx, 0xffffffffffffffff
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax + rax]
cmp	rax, r8
mov	rdx, 0xffffffffffffffff
cmovae	rdx, r8
mov	rbx, rdx
jmp	0x1400263a1
jmp	0x1400263a1
nop	dword ptr [rax + rax]
sub	rbx, r14
jmp	0x1400263a1
jmp	0x1400263a1
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	r9, qword ptr [rdx + 8]
mov	rdx, rax
jmp	0x140026310
jmp	0x140026310
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, 0xffffffffffffffff
mov	rax, r8
mov	r8, qword ptr [rcx + 8]
cmp	rax, r8
jae	0x140026428
jae	0x140026428
mov	rsi, qword ptr [rcx]
movsx	edx, dl
sub	r8, rax
lea	rcx, [rsi + rax]
call	0x140015988
call	0x140015988
mov	rdx, rax
sub	rdx, rsi
test	rax, rax
cmovne	rbx, rdx
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	rax, rcx
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	rax, rcx
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
cmp	qword ptr [rcx + 8], 0
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
mov	rdi, r8
call	0x140015a08
call	0x140015a08
mov	r8, rdi
mov	rdx, rbx
mov	rcx, rsi
mov	r9, rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x1400264e0
jmp	0x1400264e0
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, 0xffffffffffffffff
mov	rax, qword ptr [rcx + 8]
mov	rdi, rdx
mov	rsi, r9
cmp	rax, r9
jb	0x140026510
jb	0x140026510
sub	rax, r9
mov	rbx, r8
cmp	rax, r8
cmovbe	rbx, rax
test	r9, r9
jne	0x140026520
jne	0x140026520
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	rbp, qword ptr [rcx]
jmp	0x140026534
jmp	0x140026534
nop	dword ptr [rax]
lea	rax, [rbx - 1]
test	rbx, rbx
je	0x140026550
je	0x140026550
mov	rbx, rax
lea	rcx, [rbp + rbx]
mov	r8, rsi
mov	rdx, rdi
call	0x140015990
call	0x140015990
test	eax, eax
jne	0x140026528
jne	0x140026528
jmp	0x140026510
jmp	0x140026510
nop	word ptr [rax + rax]
mov	rbx, 0xffffffffffffffff
jmp	0x140026510
jmp	0x140026510
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, 0xffffffffffffffff
mov	rsi, qword ptr [rdx + 8]
mov	rax, qword ptr [rcx + 8]
cmp	rax, rsi
jb	0x14002658e
jb	0x14002658e
sub	rax, rsi
mov	rbx, r8
cmp	rax, r8
cmovbe	rbx, rax
test	rsi, rsi
jne	0x1400265a0
jne	0x1400265a0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rbp, qword ptr [rdx]
mov	rdi, qword ptr [rcx]
jmp	0x1400265bc
jmp	0x1400265bc
nop	dword ptr [rax + rax]
lea	rax, [rbx - 1]
test	rbx, rbx
je	0x1400265d8
je	0x1400265d8
mov	rbx, rax
lea	rcx, [rdi + rbx]
mov	r8, rsi
mov	rdx, rbp
call	0x140015990
call	0x140015990
test	eax, eax
jne	0x1400265b0
jne	0x1400265b0
jmp	0x14002658e
jmp	0x14002658e
nop	dword ptr [rax]
mov	rbx, 0xffffffffffffffff
jmp	0x14002658e
jmp	0x14002658e
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, 0xffffffffffffffff
mov	r9, qword ptr [rcx + 8]
test	r9, r9
je	0x14002662e
je	0x14002662e
sub	r9, 1
mov	rax, r8
cmp	r9, r8
mov	r8, qword ptr [rcx]
cmovbe	rax, r9
nop	dword ptr [rax]
movzx	ecx, byte ptr [r8 + rax]
mov	r9, rax
sub	rax, 1
cmp	cl, dl
je	0x140026630
je	0x140026630
cmp	rax, -1
jne	0x140026618
jne	0x140026618
ret	
ret	
nop	
mov	rax, r9
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rdx]
add	rcx, qword ptr [rdx + 8]
mov	qword ptr [rax], rcx
ret	
ret	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	r10, qword ptr [rdx + 8]
mov	rbx, rcx
cmp	r10, r8
jb	0x1400266b0
jb	0x1400266b0
lea	rax, [rcx + 0x10]
sub	r10, r8
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
add	rax, r8
cmp	r10, r9
cmova	r10, r9
mov	rdx, rax
xor	r9d, r9d
lea	r8, [rax + r10]
call	0x14009d340
call	0x14009d340
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	r9, r10
lea	rdx, [rip + 0x93f10]
lea	rcx, [rip + 0x93d67]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, qword ptr [rcx + 8]
mov	rbp, rcx
mov	rcx, rdx
mov	rdi, rdx
call	0x140015a08
call	0x140015a08
mov	r8, rbx
cmp	rax, rbx
mov	rsi, rax
cmovbe	r8, rax
test	r8, r8
je	0x14002671c
je	0x14002671c
mov	rcx, qword ptr [rbp]
mov	rdx, rdi
call	0x140015990
call	0x140015990
test	eax, eax
jne	0x14002673c
jne	0x14002673c
sub	rbx, rsi
mov	eax, 0x7fffffff
cmp	rbx, 0x7fffffff
jg	0x14002673c
jg	0x14002673c
cmp	rbx, -0x80000000
mov	eax, 0x80000000
cmovge	eax, ebx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, qword ptr [rcx + 8]
mov	rsi, qword ptr [rdx + 8]
mov	r8, rbx
cmp	rsi, rbx
cmovbe	r8, rsi
test	r8, r8
je	0x14002677c
je	0x14002677c
mov	rdx, qword ptr [rdx]
mov	rcx, qword ptr [rcx]
call	0x140015990
call	0x140015990
test	eax, eax
jne	0x14002679c
jne	0x14002679c
sub	rbx, rsi
mov	eax, 0x7fffffff
cmp	rbx, 0x7fffffff
jg	0x14002679c
jg	0x14002679c
cmp	rbx, -0x80000000
mov	eax, 0x80000000
cmovge	eax, ebx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, qword ptr [rcx + 8]
mov	rbp, rcx
mov	rsi, rdx
mov	r12, r9
cmp	rbx, rdx
jb	0x14002682e
jb	0x14002682e
sub	rbx, rdx
mov	rcx, r9
cmp	rbx, r8
cmova	rbx, r8
call	0x140015a08
call	0x140015a08
cmp	rax, rbx
mov	r8, rbx
mov	rdi, rax
cmovbe	r8, rax
test	r8, r8
je	0x140026803
je	0x140026803
add	rsi, qword ptr [rbp]
mov	rdx, r12
mov	rcx, rsi
call	0x140015990
call	0x140015990
test	eax, eax
jne	0x140026823
jne	0x140026823
sub	rbx, rdi
mov	eax, 0x7fffffff
cmp	rbx, 0x7fffffff
jg	0x140026823
jg	0x140026823
cmp	rbx, -0x80000000
mov	eax, 0x80000000
cmovge	eax, ebx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	r8, rdx
mov	r9, rbx
lea	rdx, [rip + 0x93d1b]
lea	rcx, [rip + 0x93be6]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, qword ptr [rcx + 8]
mov	rsi, qword ptr [rsp + 0x60]
cmp	rbx, rdx
jb	0x1400268b6
jb	0x1400268b6
sub	rbx, rdx
cmp	rbx, r8
cmova	rbx, r8
cmp	rsi, rbx
mov	r8, rbx
cmovbe	r8, rsi
test	r8, r8
je	0x14002688f
je	0x14002688f
add	rdx, qword ptr [rcx]
mov	rcx, rdx
mov	rdx, r9
call	0x140015990
call	0x140015990
test	eax, eax
jne	0x1400268af
jne	0x1400268af
sub	rbx, rsi
mov	eax, 0x7fffffff
cmp	rbx, 0x7fffffff
jg	0x1400268af
jg	0x1400268af
cmp	rbx, -0x80000000
mov	eax, 0x80000000
cmovge	eax, ebx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	r8, rdx
mov	r9, rbx
lea	rdx, [rip + 0x93c93]
lea	rcx, [rip + 0x93b5e]
call	0x1400aed20
call	0x1400aed20
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, qword ptr [rcx + 8]
cmp	rbx, rdx
jb	0x140026938
jb	0x140026938
sub	rbx, rdx
mov	rsi, qword ptr [r9 + 8]
cmp	rbx, r8
cmova	rbx, r8
cmp	rsi, rbx
mov	r8, rbx
cmovbe	r8, rsi
test	r8, r8
je	0x140026911
je	0x140026911
mov	r9, qword ptr [r9]
mov	rcx, qword ptr [rcx]
add	rcx, rdx
mov	rdx, r9
call	0x140015990
call	0x140015990
test	eax, eax
jne	0x140026931
jne	0x140026931
sub	rbx, rsi
mov	eax, 0x7fffffff
cmp	rbx, 0x7fffffff
jg	0x140026931
jg	0x140026931
cmp	rbx, -0x80000000
mov	eax, 0x80000000
cmovge	eax, ebx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	r8, rdx
mov	r9, rbx
lea	rdx, [rip + 0x93c11]
lea	rcx, [rip + 0x93adc]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	r10, qword ptr [rsp + 0x68]
mov	rax, rcx
mov	rcx, rdx
mov	rdx, qword ptr [rsp + 0x60]
mov	rbx, qword ptr [rax + 8]
cmp	rbx, rcx
jb	0x1400269e1
jb	0x1400269e1
mov	rsi, qword ptr [r9 + 8]
cmp	rsi, rdx
jb	0x1400269fa
jb	0x1400269fa
sub	rbx, rcx
cmp	rbx, r8
cmova	rbx, r8
sub	rsi, rdx
cmp	rsi, r10
cmova	rsi, r10
mov	r8, rbx
cmp	rsi, rbx
cmovbe	r8, rsi
test	r8, r8
je	0x1400269ba
je	0x1400269ba
add	rdx, qword ptr [r9]
add	rcx, qword ptr [rax]
call	0x140015990
call	0x140015990
test	eax, eax
jne	0x1400269da
jne	0x1400269da
sub	rbx, rsi
mov	eax, 0x7fffffff
cmp	rbx, 0x7fffffff
jg	0x1400269da
jg	0x1400269da
cmp	rbx, -0x80000000
mov	eax, 0x80000000
cmovge	eax, ebx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	r8, rcx
mov	r9, rbx
lea	rdx, [rip + 0x93b68]
lea	rcx, [rip + 0x93a33]
call	0x1400aed20
call	0x1400aed20
mov	r8, rdx
mov	r9, rsi
lea	rdx, [rip + 0x93b4f]
lea	rcx, [rip + 0x93a1a]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rdx]
add	rcx, qword ptr [rdx + 8]
mov	qword ptr [rax], rcx
ret	
ret	
nop	
nop	
sub	rsp, 0x28
mov	r9, qword ptr [rcx + 8]
mov	rax, rdx
mov	rdx, r8
cmp	r9, rax
jb	0x140026a48
jb	0x140026a48
add	rsp, 0x28
ret	
ret	
mov	r8, rax
lea	rcx, [rip + 0x939d6]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 8]
sub	rax, rdx
cmp	rax, r8
cmova	rax, r8
ret	
ret	
nop	
lea	rax, [rcx + 0x10]
cmp	qword ptr [rcx], rax
je	0x140026a80
je	0x140026a80
mov	rax, qword ptr [rcx + 0x10]
ret	
ret	
nop	
mov	eax, 0xf
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movabs	rax, 0x3fffffffffffffff
ret	
ret	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rax, rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, 1
mov	r8, qword ptr [rcx]
cmp	rdx, r8
jb	0x140026acb
jb	0x140026acb
mov	rax, qword ptr [rcx + 8]
lea	rax, [r8 + rax*2]
cmp	rax, rdx
setb	al
ret	
ret	
nop	
nop	
nop	
nop	
lea	rax, [rcx + 0x10]
cmp	rax, qword ptr [rcx]
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
mov	rdi, r8
call	0x140015a60
call	0x140015a60
mov	r8, rdi
mov	rdx, rbx
mov	rcx, rsi
mov	r9, rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x140026b10
jmp	0x140026b10
mov	r10, qword ptr [rcx + 8]
test	r10, r10
je	0x140026b7a
je	0x140026b7a
test	r9, r9
je	0x140026b7a
je	0x140026b7a
sub	r10, 1
mov	r11, qword ptr [rcx]
cmp	r10, r8
cmova	r10, r8
test	rdx, rdx
je	0x140026b58
je	0x140026b58
movzx	r8d, word ptr [r11 + r10*2]
mov	rcx, r9
mov	rax, rdx
jmp	0x140026b4a
jmp	0x140026b4a
nop	
add	rax, 2
sub	rcx, 1
je	0x140026b70
je	0x140026b70
cmp	r8w, word ptr [rax]
jne	0x140026b40
jne	0x140026b40
mov	rax, r10
ret	
ret	
nop	dword ptr [rax]
sub	r10, 1
jb	0x140026b50
jb	0x140026b50
sub	r10, 1
jae	0x140026b58
jae	0x140026b58
jmp	0x140026b50
jmp	0x140026b50
nop	word ptr cs:[rax + rax]
sub	r10, 1
jae	0x140026b31
jae	0x140026b31
mov	rax, r10
ret	
ret	
mov	r10, 0xffffffffffffffff
mov	rax, r10
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	r9, qword ptr [rdx + 8]
mov	rdx, rax
jmp	0x140026b10
jmp	0x140026b10
nop	
mov	rax, 0xffffffffffffffff
mov	r9, qword ptr [rcx + 8]
test	r9, r9
je	0x140026bdf
je	0x140026bdf
sub	r9, 1
mov	rax, r8
cmp	r9, r8
mov	r8, qword ptr [rcx]
cmovbe	rax, r9
nop	dword ptr [rax]
movzx	ecx, word ptr [r8 + rax*2]
mov	r9, rax
sub	rax, 1
cmp	dx, cx
je	0x140026be0
je	0x140026be0
cmp	rax, -1
jne	0x140026bc8
jne	0x140026bc8
ret	
ret	
mov	rax, r9
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rcx + 0x10]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
mov	rdi, r8
call	0x140015a60
call	0x140015a60
mov	r8, rdi
mov	rdx, rbx
mov	rcx, rsi
mov	r9, rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x140026c30
jmp	0x140026c30
push	rbx
mov	r11, rcx
test	r9, r9
je	0x140026c81
je	0x140026c81
mov	rbx, qword ptr [rcx + 8]
cmp	r8, rbx
jae	0x140026c81
jae	0x140026c81
nop	word ptr [rax + rax]
mov	rax, qword ptr [r11]
movzx	r10d, word ptr [rax + r8*2]
test	rdx, rdx
je	0x140026c78
je	0x140026c78
mov	rcx, r9
mov	rax, rdx
jmp	0x140026c6a
jmp	0x140026c6a
nop	dword ptr [rax]
add	rax, 2
sub	rcx, 1
je	0x140026c78
je	0x140026c78
cmp	r10w, word ptr [rax]
jne	0x140026c60
jne	0x140026c60
mov	rax, r8
pop	rbx
ret	
ret	
nop	dword ptr [rax]
add	r8, 1
cmp	r8, rbx
jb	0x140026c48
jb	0x140026c48
mov	r8, 0xffffffffffffffff
mov	rax, r8
pop	rbx
ret	
ret	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	r9, qword ptr [rdx + 8]
mov	rdx, rax
jmp	0x140026c30
jmp	0x140026c30
nop	
movzx	edx, dx
jmp	0x140027180
jmp	0x140027180
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
movabs	rax, 0x1fffffffffffffff
add	rdx, rax
sub	rdx, qword ptr [rcx + 8]
cmp	rdx, r8
jb	0x140026cdf
jb	0x140026cdf
add	rsp, 0x28
ret	
ret	
mov	rcx, r9
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
mov	rdi, r8
call	0x140015a60
call	0x140015a60
mov	r8, rdi
mov	rdx, rbx
mov	rcx, rsi
mov	r9, rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x140026d30
jmp	0x140026d30
mov	r10, 0xffffffffffffffff
mov	rax, qword ptr [rcx + 8]
test	rax, rax
je	0x140026d86
je	0x140026d86
sub	rax, 1
mov	r10, r8
cmp	rax, r8
cmovbe	r10, rax
test	r9, r9
je	0x140026d86
je	0x140026d86
test	rdx, rdx
je	0x140026d86
je	0x140026d86
mov	r11, qword ptr [rcx]
nop	dword ptr [rax + rax]
movzx	r8d, word ptr [r11 + r10*2]
mov	rcx, r9
mov	rax, rdx
jmp	0x140026d7a
jmp	0x140026d7a
nop	dword ptr [rax]
add	rax, 2
sub	rcx, 1
je	0x140026d86
je	0x140026d86
cmp	r8w, word ptr [rax]
jne	0x140026d70
jne	0x140026d70
sub	r10, 1
jae	0x140026d60
jae	0x140026d60
mov	rax, r10
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	r9, qword ptr [rdx + 8]
mov	rdx, rax
jmp	0x140026d30
jmp	0x140026d30
nop	
mov	rax, 0xffffffffffffffff
mov	r9, qword ptr [rcx + 8]
test	r9, r9
je	0x140026dd4
je	0x140026dd4
sub	r9, 1
mov	rax, r8
mov	rcx, qword ptr [rcx]
cmp	r9, r8
cmovbe	rax, r9
jmp	0x140026dce
jmp	0x140026dce
nop	dword ptr [rax + rax]
sub	rax, 1
jb	0x140026dd4
jb	0x140026dd4
cmp	word ptr [rcx + rax*2], dx
je	0x140026dc8
je	0x140026dc8
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rdi, rcx
mov	rcx, rdx
mov	rsi, rdx
mov	rbx, r8
call	0x140015a60
call	0x140015a60
mov	rdx, qword ptr [rdi + 8]
mov	r8, rax
cmp	rbx, rdx
jae	0x140026e50
jae	0x140026e50
test	rsi, rsi
je	0x140026e5f
je	0x140026e5f
test	rax, rax
je	0x140026e5f
je	0x140026e5f
mov	r11, qword ptr [rdi]
mov	rax, rbx
movzx	r10d, word ptr [r11 + rbx*2]
nop	dword ptr [rax]
mov	r9, r8
mov	rcx, rsi
jmp	0x140026e3a
jmp	0x140026e3a
nop	dword ptr [rax + rax]
add	rcx, 2
sub	r9, 1
je	0x140026e57
je	0x140026e57
cmp	word ptr [rcx], r10w
jne	0x140026e30
jne	0x140026e30
add	rax, 1
cmp	rax, rdx
je	0x140026e50
je	0x140026e50
movzx	r10d, word ptr [r11 + rax*2]
jmp	0x140026e20
jmp	0x140026e20
mov	rax, 0xffffffffffffffff
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
mov	r11, qword ptr [rcx + 8]
cmp	r8, r11
jae	0x140026ec0
jae	0x140026ec0
test	rdx, rdx
je	0x140026ec7
je	0x140026ec7
test	r9, r9
je	0x140026ec7
je	0x140026ec7
mov	rbx, qword ptr [rcx]
movzx	r10d, word ptr [rbx + r8*2]
nop	dword ptr [rax]
mov	rcx, r9
mov	rax, rdx
jmp	0x140026eaa
jmp	0x140026eaa
nop	dword ptr [rax + rax]
add	rax, 2
sub	rcx, 1
je	0x140026ec7
je	0x140026ec7
cmp	word ptr [rax], r10w
jne	0x140026ea0
jne	0x140026ea0
add	r8, 1
cmp	r8, r11
je	0x140026ec0
je	0x140026ec0
movzx	r10d, word ptr [rbx + r8*2]
jmp	0x140026e90
jmp	0x140026e90
mov	r8, 0xffffffffffffffff
mov	rax, r8
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
mov	r9, qword ptr [rcx + 8]
mov	rbx, qword ptr [rdx + 8]
mov	r11, qword ptr [rdx]
cmp	r8, r9
jae	0x140026f1f
jae	0x140026f1f
test	r11, r11
je	0x140026f26
je	0x140026f26
test	rbx, rbx
je	0x140026f26
je	0x140026f26
mov	r10, qword ptr [rcx]
movzx	ecx, word ptr [r10 + r8*2]
nop	dword ptr [rax + rax]
mov	rdx, rbx
mov	rax, r11
jmp	0x140026f0a
jmp	0x140026f0a
add	rax, 2
sub	rdx, 1
je	0x140026f26
je	0x140026f26
cmp	word ptr [rax], cx
jne	0x140026f00
jne	0x140026f00
add	r8, 1
cmp	r8, r9
je	0x140026f1f
je	0x140026f1f
movzx	ecx, word ptr [r10 + r8*2]
jmp	0x140026ef8
jmp	0x140026ef8
mov	r8, 0xffffffffffffffff
mov	rax, r8
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
mov	rax, r8
mov	r8, qword ptr [rcx + 8]
cmp	rax, r8
jae	0x140026f60
jae	0x140026f60
mov	rcx, qword ptr [rcx]
jmp	0x140026f51
jmp	0x140026f51
nop	dword ptr [rax]
add	rax, 1
cmp	rax, r8
je	0x140026f60
je	0x140026f60
cmp	word ptr [rcx + rax*2], dx
je	0x140026f48
je	0x140026f48
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, 0xffffffffffffffff
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r8, qword ptr [rcx + 8]
cmp	rdx, r8
jae	0x140026f89
jae	0x140026f89
mov	rax, qword ptr [rcx]
lea	rax, [rax + rdx*2]
add	rsp, 0x28
ret	
ret	
lea	rcx, [rip + 0x93958]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rcx + 8]
mov	rax, qword ptr [rcx]
lea	rax, [rax + rdx*2]
ret	
ret	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rcx + 8]
mov	rax, qword ptr [rcx]
lea	rax, [rax + rdx*2 - 2]
ret	
ret	
nop	
nop	
nop	
mov	rdx, qword ptr [rcx + 8]
mov	rax, qword ptr [rcx]
lea	rax, [rax + rdx*2]
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	r10, rcx
mov	rax, r9
mov	rcx, rdx
mov	rbx, qword ptr [r10 + 8]
cmp	rbx, r9
jb	0x140027027
jb	0x140027027
sub	rbx, r9
cmp	rbx, r8
cmova	rbx, r8
test	rbx, rbx
je	0x14002700c
je	0x14002700c
mov	rdx, qword ptr [r10]
lea	rdx, [rdx + r9*2]
cmp	rbx, 1
je	0x140027018
je	0x140027018
lea	r8, [rbx + rbx]
call	0x140015998
call	0x140015998
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	r9, rbx
mov	r8, rax
lea	rdx, [rip + 0x93997]
lea	rcx, [rip + 0x9380d]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
mov	rdi, r8
call	0x140015a60
call	0x140015a60
mov	r8, rdi
mov	rdx, rbx
mov	rcx, rsi
mov	r9, rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x140027090
jmp	0x140027090
push	rsi
push	rbx
mov	rsi, qword ptr [rcx + 8]
mov	r10, rdx
test	r9, r9
je	0x140027140
je	0x140027140
mov	r11, 0xffffffffffffffff
cmp	r8, rsi
jae	0x140027132
jae	0x140027132
mov	rbx, qword ptr [rcx]
mov	rdx, rsi
sub	rdx, r8
lea	rax, [rbx + r8*2]
cmp	rdx, r9
jb	0x140027132
jb	0x140027132
mov	r8d, 1
sub	r8, r9
add	rdx, r8
je	0x14002712b
je	0x14002712b
test	rax, rax
je	0x14002712b
je	0x14002712b
movzx	ecx, word ptr [r10]
lea	r11, [rbx + rsi*2]
jmp	0x1400270f2
jmp	0x1400270f2
nop	dword ptr [rax]
add	rax, 2
sub	rdx, 1
je	0x14002712b
je	0x14002712b
cmp	cx, word ptr [rax]
jne	0x1400270e8
jne	0x1400270e8
cmp	r10, rax
je	0x140027158
je	0x140027158
xor	edx, edx
jmp	0x140027109
jmp	0x140027109
add	rdx, 1
cmp	rdx, r9
je	0x140027158
je	0x140027158
movzx	esi, word ptr [r10 + rdx*2]
cmp	word ptr [rax + rdx*2], si
je	0x140027100
je	0x140027100
add	rax, 2
mov	rdx, r11
sub	rdx, rax
sar	rdx, 1
cmp	rdx, r9
jb	0x14002712b
jb	0x14002712b
add	rdx, r8
jne	0x1400270f2
jne	0x1400270f2
mov	r11, 0xffffffffffffffff
mov	rax, r11
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
cmp	rsi, r8
mov	r11, 0xffffffffffffffff
cmovae	r11, r8
mov	rax, r11
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
sub	rax, rbx
mov	r11, rax
sar	r11, 1
mov	rax, r11
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	r9, qword ptr [rdx + 8]
mov	rdx, rax
jmp	0x140027090
jmp	0x140027090
nop	
mov	r9, 0xffffffffffffffff
mov	rax, rcx
mov	rcx, qword ptr [rcx + 8]
cmp	r8, rcx
jae	0x1400271c8
jae	0x1400271c8
mov	r10, qword ptr [rax]
lea	rax, [r10 + r8*2]
test	rax, rax
je	0x1400271c8
je	0x1400271c8
sub	rcx, r8
cmp	word ptr [rax], dx
je	0x1400271bf
je	0x1400271bf
nop	word ptr [rax + rax]
add	rax, 2
sub	rcx, 1
je	0x1400271d0
je	0x1400271d0
cmp	word ptr [rax], dx
jne	0x1400271b0
jne	0x1400271b0
sub	rax, r10
sar	rax, 1
mov	r9, rax
mov	rax, r9
ret	
ret	
nop	dword ptr [rax]
mov	r9, 0xffffffffffffffff
mov	rax, r9
ret	
ret	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	rax, rcx
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	rax, rcx
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
cmp	qword ptr [rcx + 8], 0
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
mov	rdi, r8
call	0x140015a60
call	0x140015a60
mov	r8, rdi
mov	rdx, rbx
mov	rcx, rsi
mov	r9, rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x140027280
jmp	0x140027280
mov	r10, 0xffffffffffffffff
mov	rax, qword ptr [rcx + 8]
cmp	rax, r9
jb	0x1400272fa
jb	0x1400272fa
sub	rax, r9
mov	r10, r8
cmp	rax, r8
cmovbe	r10, rax
mov	rax, qword ptr [rcx]
test	r9, r9
sete	r8b
lea	rcx, [rax + r10*2]
cmp	rdx, rcx
je	0x1400272fa
je	0x1400272fa
test	r8b, r8b
jne	0x1400272fa
jne	0x1400272fa
test	rdx, rdx
setne	r11b
test	rcx, rcx
setne	al
cmp	r11b, al
jne	0x1400272e5
jne	0x1400272e5
xor	eax, eax
jmp	0x1400272d9
jmp	0x1400272d9
nop	dword ptr [rax + rax]
add	rax, 1
cmp	r9, rax
je	0x1400272fa
je	0x1400272fa
movzx	r11d, word ptr [rdx + rax*2]
cmp	word ptr [rcx + rax*2], r11w
je	0x1400272d0
je	0x1400272d0
lea	rax, [r10 - 1]
sub	rcx, 2
test	r10, r10
je	0x140027300
je	0x140027300
mov	r10, rax
cmp	rdx, rcx
jne	0x1400272b0
jne	0x1400272b0
mov	rax, r10
ret	
ret	
nop	
mov	r10, 0xffffffffffffffff
jmp	0x1400272fa
jmp	0x1400272fa
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	r9, qword ptr [rdx + 8]
mov	rdx, rax
jmp	0x140027280
jmp	0x140027280
nop	
mov	rax, 0xffffffffffffffff
mov	r9, qword ptr [rcx + 8]
test	r9, r9
je	0x14002735f
je	0x14002735f
sub	r9, 1
mov	rax, r8
cmp	r9, r8
mov	r8, qword ptr [rcx]
cmovbe	rax, r9
nop	dword ptr [rax]
movzx	ecx, word ptr [r8 + rax*2]
mov	r9, rax
sub	rax, 1
cmp	cx, dx
je	0x140027360
je	0x140027360
cmp	rax, -1
jne	0x140027348
jne	0x140027348
ret	
ret	
mov	rax, r9
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rdx + 8]
mov	rdx, qword ptr [rdx]
lea	rdx, [rdx + rcx*2]
mov	qword ptr [rax], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, qword ptr [rdx + 8]
mov	rsi, rcx
cmp	rbx, r8
jb	0x140027476
jb	0x140027476
sub	rbx, r8
lea	rcx, [rcx + 0x10]
cmp	rbx, r9
mov	qword ptr [rsi], rcx
mov	rax, qword ptr [rdx]
cmova	rbx, r9
lea	r12, [rax + r8*2]
add	rbx, rbx
mov	rdi, rbx
sar	rdi, 1
mov	qword ptr [rsp + 0x28], rdi
cmp	rbx, 0xe
ja	0x140027450
ja	0x140027450
cmp	rdi, 1
jne	0x140027430
jne	0x140027430
movzx	eax, word ptr [r12]
mov	ebp, 1
mov	r13d, 2
mov	word ptr [rsi + 0x10], ax
xor	eax, eax
mov	qword ptr [rsi + 8], rbp
mov	word ptr [rcx + r13], ax
mov	rax, rsi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	r13, rbx
mov	rbp, rdi
test	rdi, rdi
je	0x140027446
je	0x140027446
mov	r8, rbx
mov	rdx, r12
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
jmp	0x140027412
jmp	0x140027412
nop	dword ptr [rax + rax]
mov	rcx, rsi
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	rbp, qword ptr [rsp + 0x28]
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	qword ptr [rsi + 0x10], rbp
lea	r13, [rbp + rbp]
jmp	0x140027436
jmp	0x140027436
mov	r9, rbx
lea	rdx, [rip + 0x9355e]
lea	rcx, [rip + 0x933c1]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, qword ptr [rcx + 8]
mov	rdi, rcx
mov	rcx, rdx
mov	rbx, rdx
call	0x140015a60
call	0x140015a60
mov	rdx, qword ptr [rdi]
mov	r8, rsi
cmp	rax, rsi
cmovbe	r8, rax
cmp	rbx, rdx
je	0x1400274f8
je	0x1400274f8
test	r8, r8
je	0x1400274f8
je	0x1400274f8
test	rbx, rbx
setne	r9b
test	rdx, rdx
setne	cl
cmp	r9b, cl
je	0x140027520
je	0x140027520
neg	rbx
sbb	eax, eax
or	eax, 1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
sub	rsi, rax
mov	eax, 0x7fffffff
cmp	rsi, 0x7fffffff
jg	0x140027518
jg	0x140027518
cmp	rsi, -0x80000000
mov	eax, 0x80000000
cmovge	eax, esi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
xor	ecx, ecx
jmp	0x140027531
jmp	0x140027531
nop	dword ptr [rax]
add	rcx, 1
cmp	r8, rcx
je	0x1400274f8
je	0x1400274f8
movzx	edi, word ptr [rbx + rcx*2]
cmp	word ptr [rdx + rcx*2], di
je	0x140027528
je	0x140027528
sbb	eax, eax
or	eax, 1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	r8, qword ptr [rcx + 8]
mov	r9, qword ptr [rdx + 8]
mov	rcx, qword ptr [rcx]
mov	rdx, qword ptr [rdx]
cmp	r9, r8
mov	r10, r8
cmovbe	r10, r9
cmp	rdx, rcx
je	0x140027590
je	0x140027590
test	r10, r10
je	0x140027590
je	0x140027590
test	rdx, rdx
setne	r11b
test	rcx, rcx
setne	al
cmp	r11b, al
je	0x1400275b8
je	0x1400275b8
neg	rdx
sbb	eax, eax
or	eax, 1
ret	
ret	
nop	dword ptr [rax]
sub	r8, r9
mov	eax, 0x7fffffff
cmp	r8, 0x7fffffff
jg	0x14002758c
jg	0x14002758c
cmp	r8, -0x80000000
mov	eax, 0x80000000
cmovge	eax, r8d
ret	
ret	
nop	word ptr [rax + rax]
xor	eax, eax
jmp	0x1400275c9
jmp	0x1400275c9
nop	dword ptr [rax]
add	rax, 1
cmp	r10, rax
je	0x140027590
je	0x140027590
movzx	r11d, word ptr [rdx + rax*2]
cmp	word ptr [rcx + rax*2], r11w
je	0x1400275c0
je	0x1400275c0
sbb	eax, eax
or	eax, 1
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, qword ptr [rcx + 8]
mov	rbp, rcx
mov	rdi, rdx
mov	rsi, r9
cmp	rbx, rdx
jb	0x1400276a9
jb	0x1400276a9
sub	rbx, rdx
mov	rcx, r9
cmp	rbx, r8
cmova	rbx, r8
call	0x140015a60
call	0x140015a60
mov	rdx, qword ptr [rbp]
cmp	rax, rbx
mov	r8, rbx
cmovbe	r8, rax
lea	rcx, [rdx + rdi*2]
test	r8, r8
je	0x140027650
je	0x140027650
cmp	rcx, rsi
je	0x140027650
je	0x140027650
test	rsi, rsi
setne	r9b
test	rcx, rcx
setne	dl
cmp	r9b, dl
je	0x140027680
je	0x140027680
neg	rsi
sbb	eax, eax
or	eax, 1
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
sub	rbx, rax
mov	eax, 0x7fffffff
cmp	rbx, 0x7fffffff
jg	0x140027670
jg	0x140027670
cmp	rbx, -0x80000000
mov	eax, 0x80000000
cmovge	eax, ebx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
xor	edx, edx
jmp	0x140027691
jmp	0x140027691
nop	dword ptr [rax]
add	rdx, 1
cmp	r8, rdx
je	0x140027650
je	0x140027650
movzx	edi, word ptr [rsi + rdx*2]
cmp	word ptr [rcx + rdx*2], di
je	0x140027688
je	0x140027688
sbb	eax, eax
or	eax, 1
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	r8, rdx
mov	r9, rbx
lea	rdx, [rip + 0x9333d]
lea	rcx, [rip + 0x9318b]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rcx + 8]
mov	r11, qword ptr [rsp + 0x50]
cmp	rax, rdx
jb	0x140027786
jb	0x140027786
sub	rax, rdx
mov	r10, r11
cmp	rax, r8
cmovbe	r8, rax
mov	rax, qword ptr [rcx]
cmp	r8, r11
lea	rdx, [rax + rdx*2]
cmovbe	r10, r8
test	r10, r10
je	0x140027730
je	0x140027730
cmp	rdx, r9
je	0x140027730
je	0x140027730
test	r9, r9
setne	cl
test	rdx, rdx
setne	al
cmp	cl, al
je	0x140027760
je	0x140027760
neg	r9
sbb	eax, eax
or	eax, 1
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax + rax]
sub	r8, r11
mov	eax, 0x7fffffff
cmp	r8, 0x7fffffff
jg	0x140027751
jg	0x140027751
cmp	r8, -0x80000000
mov	eax, 0x80000000
cmovge	eax, r8d
add	rsp, 0x28
ret	
ret	
nop	word ptr cs:[rax + rax]
xor	eax, eax
jmp	0x140027771
jmp	0x140027771
nop	dword ptr [rax]
add	rax, 1
cmp	r10, rax
je	0x140027730
je	0x140027730
movzx	ecx, word ptr [r9 + rax*2]
cmp	word ptr [rdx + rax*2], cx
je	0x140027768
je	0x140027768
sbb	eax, eax
or	eax, 1
add	rsp, 0x28
ret	
ret	
mov	r8, rdx
mov	r9, rax
lea	rdx, [rip + 0x93260]
lea	rcx, [rip + 0x930ae]
call	0x1400aed20
call	0x1400aed20
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rcx + 8]
cmp	rax, rdx
jb	0x140027856
jb	0x140027856
sub	rax, rdx
mov	r11, qword ptr [r9 + 8]
mov	r9, qword ptr [r9]
cmp	rax, r8
cmovbe	r8, rax
mov	rax, qword ptr [rcx]
cmp	r11, r8
mov	r10, r8
lea	rdx, [rax + rdx*2]
cmovbe	r10, r11
test	r10, r10
je	0x140027800
je	0x140027800
cmp	rdx, r9
je	0x140027800
je	0x140027800
test	r9, r9
setne	cl
test	rdx, rdx
setne	al
cmp	cl, al
je	0x140027830
je	0x140027830
neg	r9
sbb	eax, eax
or	eax, 1
add	rsp, 0x28
ret	
ret	
nop	word ptr [rax + rax]
sub	r8, r11
mov	eax, 0x7fffffff
cmp	r8, 0x7fffffff
jg	0x140027821
jg	0x140027821
cmp	r8, -0x80000000
mov	eax, 0x80000000
cmovge	eax, r8d
add	rsp, 0x28
ret	
ret	
nop	word ptr cs:[rax + rax]
xor	eax, eax
jmp	0x140027841
jmp	0x140027841
nop	dword ptr [rax]
add	rax, 1
cmp	r10, rax
je	0x140027800
je	0x140027800
movzx	ecx, word ptr [r9 + rax*2]
cmp	word ptr [rdx + rax*2], cx
je	0x140027838
je	0x140027838
sbb	eax, eax
or	eax, 1
add	rsp, 0x28
ret	
ret	
mov	r8, rdx
mov	r9, rax
lea	rdx, [rip + 0x93190]
lea	rcx, [rip + 0x92fde]
call	0x1400aed20
call	0x1400aed20
nop	
push	rbx
sub	rsp, 0x20
mov	r11, qword ptr [rsp + 0x50]
mov	rbx, qword ptr [rsp + 0x58]
mov	r10, rcx
mov	rcx, rdx
mov	rdx, qword ptr [r10 + 8]
cmp	rdx, rcx
jb	0x140027948
jb	0x140027948
mov	rax, qword ptr [r9 + 8]
cmp	rax, r11
jb	0x140027961
jb	0x140027961
sub	rdx, rcx
cmp	rdx, r8
cmovbe	r8, rdx
mov	rdx, qword ptr [r9]
sub	rax, r11
cmp	rax, rbx
cmova	rax, rbx
lea	r9, [rdx + r11*2]
mov	rdx, qword ptr [r10]
mov	rbx, r8
cmp	rax, r8
lea	rcx, [rdx + rcx*2]
cmovbe	rbx, rax
cmp	r9, rcx
je	0x1400278f8
je	0x1400278f8
test	rbx, rbx
je	0x1400278f8
je	0x1400278f8
test	r9, r9
setne	r10b
test	rcx, rcx
setne	dl
cmp	r10b, dl
je	0x140027920
je	0x140027920
neg	r9
sbb	eax, eax
or	eax, 1
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
sub	r8, rax
mov	eax, 0x7fffffff
cmp	r8, 0x7fffffff
jg	0x140027919
jg	0x140027919
cmp	r8, -0x80000000
mov	eax, 0x80000000
cmovge	eax, r8d
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
xor	edx, edx
jmp	0x140027931
jmp	0x140027931
nop	dword ptr [rax]
add	rdx, 1
cmp	rbx, rdx
je	0x1400278f8
je	0x1400278f8
movzx	r10d, word ptr [r9 + rdx*2]
cmp	word ptr [rcx + rdx*2], r10w
je	0x140027928
je	0x140027928
sbb	eax, eax
or	eax, 1
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	r9, rdx
mov	r8, rcx
lea	rdx, [rip + 0x9309e]
lea	rcx, [rip + 0x92eec]
call	0x1400aed20
call	0x1400aed20
mov	r9, rax
mov	r8, r11
lea	rdx, [rip + 0x93085]
lea	rcx, [rip + 0x92ed3]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rdx + 8]
mov	rdx, qword ptr [rdx]
lea	rdx, [rdx + rcx*2]
mov	qword ptr [rax], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r9, qword ptr [rcx + 8]
mov	rax, rdx
mov	rdx, r8
cmp	r9, rax
jb	0x1400279b8
jb	0x1400279b8
add	rsp, 0x28
ret	
ret	
mov	r8, rax
lea	rcx, [rip + 0x92e86]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 8]
sub	rax, rdx
cmp	rax, r8
cmova	rax, r8
ret	
ret	
nop	
lea	rax, [rcx + 0x10]
cmp	qword ptr [rcx], rax
je	0x1400279f0
je	0x1400279f0
mov	rax, qword ptr [rcx + 0x10]
ret	
ret	
nop	
mov	eax, 7
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movabs	rax, 0x1fffffffffffffff
ret	
ret	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
lea	rax, [rax + rdx*2]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rcx, rdx
mov	rdx, r8
call	0x1400159f0
call	0x1400159f0
mov	edx, eax
sar	eax, 0x1e
test	edx, edx
setne	dl
movzx	edx, dl
or	eax, edx
add	rsp, 0x28
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x68
lea	rsi, [rsp + 0x20]
mov	r13, rcx
lea	r14, [rsp + 0x30]
mov	rbx, r9
mov	rcx, rsi
mov	qword ptr [rsp + 0x20], r14
lea	r15, [rsp + 0x50]
mov	qword ptr [rsp + 0x28], 0
call	0x14009d3f0
call	0x14009d3f0
mov	r8, qword ptr [rsp + 0xd0]
lea	rcx, [rsp + 0x40]
mov	rdx, rbx
mov	qword ptr [rsp + 0x40], r15
mov	qword ptr [rsp + 0x48], 0
call	0x14009d3f0
call	0x14009d3f0
mov	rbx, qword ptr [rsp + 0x20]
mov	rbp, qword ptr [rsp + 0x28]
mov	rdi, qword ptr [rsp + 0x40]
mov	r12, qword ptr [rsp + 0x48]
add	rbp, rbx
add	r12, rdi
jmp	0x140027add
jmp	0x140027add
nop	word ptr [rax + rax]
cmp	r12, rax
je	0x140027b50
je	0x140027b50
add	rbx, 1
lea	rdi, [rax + 1]
mov	r8, rdi
mov	rdx, rbx
mov	rcx, r13
call	0x140027a20
call	0x140027a20
mov	esi, eax
test	eax, eax
jne	0x140027b1b
jne	0x140027b1b
mov	rcx, rbx
call	0x140015a08
call	0x140015a08
mov	rcx, rdi
add	rbx, rax
call	0x140015a08
call	0x140015a08
add	rax, rdi
cmp	rbp, rbx
jne	0x140027ad0
jne	0x140027ad0
cmp	r12, rax
je	0x140027b1b
je	0x140027b1b
cmp	rbp, rbx
jne	0x140027ad0
jne	0x140027ad0
mov	esi, 0xffffffff
mov	rcx, qword ptr [rsp + 0x40]
cmp	rcx, r15
je	0x140027b2a
je	0x140027b2a
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, qword ptr [rsp + 0x20]
cmp	rcx, r14
je	0x140027b39
je	0x140027b39
call	0x1400b2be0
call	0x1400b2be0
mov	eax, esi
add	rsp, 0x68
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	esi, 1
jmp	0x140027b1b
jmp	0x140027b1b
mov	rbx, rax
mov	rcx, rsi
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
mov	rcx, rdx
mov	rdx, r8
mov	r8, r9
jmp	0x140015a20
jmp	0x140015a20
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x78
lea	rax, [rcx + 0x10]
mov	byte ptr [rcx + 0x10], 0
mov	rsi, r8
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	r14, rdx
mov	r8, r9
mov	rdx, rsi
mov	qword ptr [rcx + 8], 0
lea	rcx, [rsp + 0x50]
mov	rdi, r9
mov	qword ptr [rsp + 0x38], rax
lea	rax, [rsp + 0x60]
mov	qword ptr [rsp + 0x48], rcx
mov	qword ptr [rsp + 0x40], rax
mov	qword ptr [rsp + 0x50], rax
mov	qword ptr [rsp + 0x58], 0
call	0x14009d3f0
call	0x14009d3f0
mov	rbp, qword ptr [rsp + 0x50]
mov	rax, qword ptr [rsp + 0x58]
sub	rdi, rsi
add	rdi, rdi
add	rax, rbp
mov	rcx, rdi
mov	qword ptr [rsp + 0x30], rax
call	0x1400b2c00
call	0x1400b2c00
movabs	r15, 0x3fffffffffffffff
mov	rsi, rax
jmp	0x140027c22
jmp	0x140027c22
mov	byte ptr [rax + r12], 0
mov	rax, qword ptr [rbx]
mov	qword ptr [rbx + 8], r13
mov	byte ptr [rax + r12 + 1], 0
mov	r8, rbp
mov	r9, rdi
mov	rdx, rsi
mov	rcx, r14
call	0x140027b70
call	0x140027b70
mov	r8, rax
cmp	rax, rdi
jb	0x140027c6b
jb	0x140027c6b
lea	rdi, [rax + 1]
test	rsi, rsi
je	0x140027c4c
je	0x140027c4c
mov	rcx, rsi
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rdi
call	0x1400b2c00
call	0x1400b2c00
mov	r8, rbp
mov	r9, rdi
mov	rdx, rax
mov	rcx, r14
mov	rsi, rax
call	0x140027b70
call	0x140027b70
mov	r8, rax
mov	rax, r15
sub	rax, qword ptr [rbx + 8]
cmp	rax, r8
jb	0x140027d25
jb	0x140027d25
mov	rdx, rsi
mov	rcx, rbx
call	0x14009f920
call	0x14009f920
mov	rcx, rbp
call	0x140015a08
call	0x140015a08
add	rax, rbp
cmp	qword ptr [rsp + 0x30], rax
je	0x140027cf0
je	0x140027cf0
mov	r12, qword ptr [rbx + 8]
lea	rbp, [rax + 1]
mov	rax, qword ptr [rbx]
lea	r13, [r12 + 1]
cmp	qword ptr [rsp + 0x38], rax
je	0x140027ce0
je	0x140027ce0
mov	rdx, qword ptr [rbx + 0x10]
cmp	rdx, r13
jae	0x140027c10
jae	0x140027c10
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, r12
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rbx]
jmp	0x140027c10
jmp	0x140027c10
nop	
mov	edx, 0xf
jmp	0x140027cb3
jmp	0x140027cb3
nop	word ptr [rax + rax]
test	rsi, rsi
je	0x140027cfd
je	0x140027cfd
mov	rcx, rsi
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rsp + 0x50]
mov	rax, qword ptr [rsp + 0x40]
cmp	rcx, rax
je	0x140027d11
je	0x140027d11
call	0x1400b2be0
call	0x1400b2be0
mov	rax, rbx
add	rsp, 0x78
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
lea	rcx, [rip + 0x91b76]
call	0x1400b3ba0
call	0x1400b3ba0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b3540
call	0x1400b3540
mov	rsi, rax
jmp	0x140027d4b
jmp	0x140027d4b
mov	rsi, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, qword ptr [rsp + 0x48]
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14009cf50
call	0x14009cf50
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
jmp	0x140027d55
jmp	0x140027d55
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
test	rsi, rsi
je	0x140027d39
je	0x140027d39
mov	rcx, rsi
call	0x1400b2bd0
call	0x1400b2bd0
jmp	0x140027d39
jmp	0x140027d39
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	r9, [rip + 0x49]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x20]
cmp	rax, r9
jne	0x140027dc8
jne	0x140027dc8
xor	eax, eax
cmp	rdx, r8
jae	0x140027dc1
jae	0x140027dc1
nop	word ptr [rax + rax]
movsx	ecx, byte ptr [rdx]
rol	eax, 7
add	rdx, 1
add	eax, ecx
cmp	r8, rdx
jne	0x140027db0
jne	0x140027db0
ret	
ret	
nop	word ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
jmp	qword ptr [rax + 0x10]
jmp	qword ptr [rax + 0x10]
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
cmp	rdx, r8
jae	0x140027e01
jae	0x140027e01
nop	word ptr [rax + rax]
movsx	ecx, byte ptr [rdx]
rol	eax, 7
add	rdx, 1
add	eax, ecx
cmp	r8, rdx
jne	0x140027df0
jne	0x140027df0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx]
mov	rbx, rcx
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rcx, rdx
mov	rdx, r8
call	0x140015a50
call	0x140015a50
mov	edx, eax
sar	eax, 0x1e
test	edx, edx
setne	dl
movzx	edx, dl
or	eax, edx
add	rsp, 0x28
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x68
lea	rsi, [rsp + 0x20]
mov	r13, rcx
lea	r14, [rsp + 0x30]
mov	rbx, r9
mov	rcx, rsi
mov	qword ptr [rsp + 0x20], r14
lea	r15, [rsp + 0x50]
mov	qword ptr [rsp + 0x28], 0
call	0x1400a15c0
call	0x1400a15c0
mov	r8, qword ptr [rsp + 0xd0]
lea	rcx, [rsp + 0x40]
mov	rdx, rbx
mov	qword ptr [rsp + 0x40], r15
mov	qword ptr [rsp + 0x48], 0
call	0x1400a15c0
call	0x1400a15c0
mov	rax, qword ptr [rsp + 0x28]
mov	rbx, qword ptr [rsp + 0x20]
mov	rsi, qword ptr [rsp + 0x40]
lea	rbp, [rbx + rax*2]
mov	rax, qword ptr [rsp + 0x48]
lea	r12, [rsi + rax*2]
jmp	0x140027eed
jmp	0x140027eed
nop	dword ptr [rax]
cmp	r12, rsi
je	0x140027f60
je	0x140027f60
add	rbx, 2
add	rsi, 2
mov	r8, rsi
mov	rdx, rbx
mov	rcx, r13
call	0x140027e30
call	0x140027e30
mov	edi, eax
test	eax, eax
jne	0x140027f2d
jne	0x140027f2d
mov	rcx, rbx
call	0x140015a60
call	0x140015a60
mov	rcx, rsi
lea	rbx, [rbx + rax*2]
call	0x140015a60
call	0x140015a60
lea	rsi, [rsi + rax*2]
cmp	rbp, rbx
jne	0x140027ee0
jne	0x140027ee0
cmp	r12, rsi
je	0x140027f2d
je	0x140027f2d
cmp	rbp, rbx
jne	0x140027ee0
jne	0x140027ee0
mov	edi, 0xffffffff
mov	rcx, qword ptr [rsp + 0x40]
cmp	rcx, r15
je	0x140027f3c
je	0x140027f3c
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, qword ptr [rsp + 0x20]
cmp	rcx, r14
je	0x140027f4b
je	0x140027f4b
call	0x1400b2be0
call	0x1400b2be0
mov	eax, edi
add	rsp, 0x68
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	
mov	edi, 1
jmp	0x140027f2d
jmp	0x140027f2d
mov	rbx, rax
mov	rcx, rsi
call	0x1400a1050
call	0x1400a1050
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
mov	rcx, rdx
mov	rdx, r8
mov	r8, r9
jmp	0x140015a68
jmp	0x140015a68
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x78
lea	rax, [rcx + 0x10]
mov	rdi, r8
xor	r8d, r8d
mov	rsi, rcx
mov	qword ptr [rcx], rax
mov	r14, rdx
mov	rdx, rdi
mov	rbp, r9
mov	word ptr [rcx + 0x10], r8w
mov	r8, r9
mov	qword ptr [rcx + 8], 0
lea	rcx, [rsp + 0x50]
mov	qword ptr [rsp + 0x38], rax
lea	rax, [rsp + 0x60]
mov	qword ptr [rsp + 0x48], rcx
mov	qword ptr [rsp + 0x40], rax
mov	qword ptr [rsp + 0x50], rax
mov	qword ptr [rsp + 0x58], 0
call	0x1400a15c0
call	0x1400a15c0
mov	rbx, qword ptr [rsp + 0x50]
mov	rax, qword ptr [rsp + 0x58]
sub	rbp, rdi
lea	rax, [rbx + rax*2]
mov	qword ptr [rsp + 0x30], rax
movabs	rax, 0x3ffffffffffffffc
cmp	rax, rbp
jb	0x1400281aa
jb	0x1400281aa
lea	rcx, [rbp + rbp]
call	0x1400b2c00
call	0x1400b2c00
movabs	r15, 0x1fffffffffffffff
mov	rdi, rax
jmp	0x140028053
jmp	0x140028053
nop	word ptr [rax + rax]
xor	edx, edx
xor	ecx, ecx
mov	word ptr [rax + r12*2], dx
mov	qword ptr [rsi + 8], r13
mov	word ptr [rax + r12*2 + 2], cx
mov	r8, rbx
mov	r9, rbp
mov	rdx, rdi
mov	rcx, r14
call	0x140027f80
call	0x140027f80
mov	r8, rax
cmp	rax, rbp
jb	0x1400280b1
jb	0x1400280b1
lea	rbp, [rax + 1]
test	rdi, rdi
je	0x14002807d
je	0x14002807d
mov	rcx, rdi
call	0x1400b2bd0
call	0x1400b2bd0
movabs	rax, 0x3ffffffffffffffc
cmp	rax, rbp
jb	0x14002817e
jb	0x14002817e
lea	rcx, [rbp + rbp]
call	0x1400b2c00
call	0x1400b2c00
mov	r8, rbx
mov	r9, rbp
mov	rdx, rax
mov	rcx, r14
mov	rdi, rax
call	0x140027f80
call	0x140027f80
mov	r8, rax
mov	rax, r15
sub	rax, qword ptr [rsi + 8]
cmp	rax, r8
jb	0x140028165
jb	0x140028165
mov	rdx, rdi
mov	rcx, rsi
call	0x1400a3660
call	0x1400a3660
mov	rcx, rbx
call	0x140015a60
call	0x140015a60
lea	rbx, [rbx + rax*2]
cmp	qword ptr [rsp + 0x30], rbx
je	0x140028130
je	0x140028130
mov	r12, qword ptr [rsi + 8]
mov	rax, qword ptr [rsi]
add	rbx, 2
lea	r13, [r12 + 1]
cmp	qword ptr [rsp + 0x38], rax
je	0x140028128
je	0x140028128
mov	rdx, qword ptr [rsi + 0x10]
cmp	rdx, r13
jae	0x140028040
jae	0x140028040
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, r12
mov	rcx, rsi
mov	qword ptr [rsp + 0x20], 1
call	0x1400a3830
call	0x1400a3830
mov	rax, qword ptr [rsi]
jmp	0x140028040
jmp	0x140028040
nop	dword ptr [rax]
mov	edx, 7
jmp	0x1400280fa
jmp	0x1400280fa
nop	
test	rdi, rdi
je	0x14002813d
je	0x14002813d
mov	rcx, rdi
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rsp + 0x50]
mov	rax, qword ptr [rsp + 0x40]
cmp	rcx, rax
je	0x140028151
je	0x140028151
call	0x1400b2be0
call	0x1400b2be0
mov	rax, rsi
add	rsp, 0x78
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
lea	rcx, [rip + 0x91ac6]
call	0x1400b3ba0
call	0x1400b3ba0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b3540
call	0x1400b3540
call	0x1400b41c0
call	0x1400b41c0
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, qword ptr [rsp + 0x48]
call	0x1400a1050
call	0x1400a1050
mov	rcx, rsi
call	0x1400a1050
call	0x1400a1050
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x14002818b
jmp	0x14002818b
call	0x1400b41c0
call	0x1400b41c0
mov	rbx, rax
jmp	0x140028195
jmp	0x140028195
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
test	rdi, rdi
je	0x140028179
je	0x140028179
mov	rcx, rdi
call	0x1400b2bd0
call	0x1400b2bd0
jmp	0x140028179
jmp	0x140028179
nop	
nop	
nop	
nop	
nop	
lea	r9, [rip + 0x49]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x20]
cmp	rax, r9
jne	0x140028208
jne	0x140028208
xor	eax, eax
cmp	rdx, r8
jae	0x140028201
jae	0x140028201
nop	word ptr [rax + rax]
movzx	ecx, word ptr [rdx]
rol	eax, 7
add	rdx, 2
add	eax, ecx
cmp	rdx, r8
jb	0x1400281f0
jb	0x1400281f0
ret	
ret	
nop	word ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
jmp	qword ptr [rax + 0x10]
jmp	qword ptr [rax + 0x10]
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
cmp	rdx, r8
jae	0x140028241
jae	0x140028241
nop	word ptr [rax + rax]
movzx	ecx, word ptr [rdx]
rol	eax, 7
add	rdx, 2
add	eax, ecx
cmp	rdx, r8
jb	0x140028230
jb	0x140028230
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx]
mov	rbx, rcx
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
lea	rdx, [rcx + 0x10]
mov	qword ptr [rcx + 8], 0
mov	qword ptr [rcx], rdx
mov	byte ptr [rcx + 0x10], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	rcx, qword ptr [rsp + 0x68]
mov	qword ptr [rsp + 0x28], rcx
mov	ecx, dword ptr [rsp + 0x60]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
lea	r9, [rip + 0x119]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, r9
jne	0x1400282f0
jne	0x1400282f0
xor	eax, eax
ret	
ret	
nop	word ptr cs:[rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	r9, [rip + 0xe9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, r9
jne	0x140028320
jne	0x140028320
xor	eax, eax
ret	
ret	
nop	word ptr cs:[rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	r8, [rip + 0xc9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x20]
cmp	rax, r8
jne	0x140028348
jne	0x140028348
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rsp + 0x78]
mov	rsi, qword ptr [rax + 8]
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	qword ptr [rsp + 0x28], rsi
mov	qword ptr [rbx], rcx
mov	rdi, qword ptr [rax]
cmp	rsi, 0xf
ja	0x1400283b0
ja	0x1400283b0
cmp	rsi, 1
jne	0x1400283a0
jne	0x1400283a0
movzx	eax, byte ptr [rdi]
mov	byte ptr [rbx + 0x10], al
mov	rax, rbx
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
test	rsi, rsi
je	0x140028384
je	0x140028384
jmp	0x1400283cf
jmp	0x1400283cf
nop	word ptr [rax + rax]
mov	rcx, rbx
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x14009fa70
call	0x14009fa70
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x10], rax
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rsi, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rbx]
jmp	0x140028384
jmp	0x140028384
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rcx + 0x10]
mov	rax, rcx
mov	qword ptr [rcx + 8], 0
mov	qword ptr [rcx], rdx
xor	edx, edx
mov	word ptr [rcx + 0x10], dx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	rcx, qword ptr [rsp + 0x68]
mov	qword ptr [rsp + 0x28], rcx
mov	ecx, dword ptr [rsp + 0x60]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
lea	r9, [rip + 0x129]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, r9
jne	0x140028490
jne	0x140028490
xor	eax, eax
ret	
ret	
nop	word ptr cs:[rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	r9, [rip + 0xf9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, r9
jne	0x1400284c0
jne	0x1400284c0
xor	eax, eax
ret	
ret	
nop	word ptr cs:[rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	r8, [rip + 0xd9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x20]
cmp	rax, r8
jne	0x1400284e8
jne	0x1400284e8
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rsp + 0x88]
mov	rsi, qword ptr [rax + 8]
add	rsi, rsi
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	rdi, rsi
mov	qword ptr [rbx], rcx
mov	rbp, qword ptr [rax]
sar	rdi, 1
mov	qword ptr [rsp + 0x28], rdi
mov	rax, rdi
cmp	rsi, 0xe
ja	0x140028540
ja	0x140028540
cmp	rdi, 1
jne	0x14002855f
jne	0x14002855f
movzx	edx, word ptr [rbp]
mov	word ptr [rbx + 0x10], dx
mov	edx, 2
jmp	0x140028570
jmp	0x140028570
nop	dword ptr [rax]
mov	rcx, rbx
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x10], rax
test	rdi, rdi
jne	0x140028590
jne	0x140028590
mov	rax, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rbx]
lea	rdx, [rax + rax]
mov	qword ptr [rbx + 8], rax
xor	eax, eax
mov	word ptr [rcx + rdx], ax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	r8, rsi
mov	rdx, rbp
call	0x140015998
call	0x140015998
jmp	0x140028564
jmp	0x140028564
nop	
nop	
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x10]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x1400285fe
je	0x1400285fe
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x9126b]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x28]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x14002864e
je	0x14002864e
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x9121b]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x38]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x14002869e
je	0x14002869e
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x911cb]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x59]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x1400286d0
jne	0x1400286d0
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x48]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x39]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x18]
cmp	rax, rdx
jne	0x140028700
jne	0x140028700
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x49]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x48]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x49]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x20]
mov	rbx, rcx
lea	rcx, [rip - 0x187]
cmp	rax, rcx
jne	0x140028788
jne	0x140028788
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x10]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140028797
je	0x140028797
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x910d2]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x28]
mov	rbx, rcx
lea	rcx, [rip - 0x1b7]
cmp	rax, rcx
jne	0x140028808
jne	0x140028808
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x28]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140028817
je	0x140028817
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x91052]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x30]
mov	rbx, rcx
lea	rcx, [rip - 0x1e7]
cmp	rax, rcx
jne	0x140028888
jne	0x140028888
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x38]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140028897
je	0x140028897
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d3f0
call	0x14009d3f0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x90fd2]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x10]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x1400288ee
je	0x1400288ee
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d530
call	0x14009d530
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x9130b]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x28]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x14002893e
je	0x14002893e
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax*2]
call	0x1400a15c0
call	0x1400a15c0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x912bb]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x38]
lea	rax, [rcx + 0x10]
mov	rbx, rcx
mov	qword ptr [rcx], rax
test	rsi, rsi
je	0x14002898e
je	0x14002898e
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax*2]
call	0x1400a15c0
call	0x1400a15c0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x9126b]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x59]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x1400289c0
jne	0x1400289c0
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x48]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x39]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x18]
cmp	rax, rdx
jne	0x1400289f0
jne	0x1400289f0
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x4a]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x48]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x4a]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x20]
mov	rbx, rcx
lea	rcx, [rip - 0x187]
cmp	rax, rcx
jne	0x140028a78
jne	0x140028a78
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x10]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140028a87
je	0x140028a87
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax]
call	0x14009d530
call	0x14009d530
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x91172]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x28]
mov	rbx, rcx
lea	rcx, [rip - 0x1b7]
cmp	rax, rcx
jne	0x140028af8
jne	0x140028af8
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x28]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140028b07
je	0x140028b07
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax*2]
call	0x1400a15c0
call	0x1400a15c0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x910f2]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x30]
mov	rbx, rcx
lea	rcx, [rip - 0x1e7]
cmp	rax, rcx
jne	0x140028b78
jne	0x140028b78
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, qword ptr [rax + 0x38]
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
test	rsi, rsi
je	0x140028b87
je	0x140028b87
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
mov	rdx, rsi
mov	rcx, rbx
lea	r8, [rsi + rax*2]
call	0x1400a15c0
call	0x1400a15c0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x91072]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0xb49]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x140028bc0
jne	0x140028bc0
xor	eax, eax
ret	
ret	
nop	word ptr cs:[rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	r12, qword ptr [rsp + 0x100]
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [r9 + 8]
mov	r14, qword ptr [rsp + 0x108]
mov	rsi, rcx
mov	rcx, qword ptr [rip + 0x95bd5]
mov	rdi, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [r12 + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x140028d9b
jae	0x140028d9b
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x140028d9b
je	0x140028d9b
mov	r8, qword ptr [rip + 0x96053]
xor	r9d, r9d
lea	rdx, [rip + 0x97f59]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x140028d9b
je	0x140028d9b
mov	rax, qword ptr [rax + 0x10]
mov	rdx, rdi
lea	rcx, [rsp + 0x70]
lea	r9, [rsp + 0x50]
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x84], 0
mov	rax, qword ptr [rax + 0x10]
mov	qword ptr [rsp + 0x60], r15
lea	r15, [rsp + 0x84]
mov	qword ptr [rsp + 0x40], r15
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x110]
mov	qword ptr [rsp + 0x20], r12
mov	qword ptr [rsp + 0x30], rax
mov	qword ptr [rsp + 0x28], r14
mov	qword ptr [rsp + 0x68], rbx
mov	dword ptr [rsp + 0x8c], 0
mov	qword ptr [rsp + 0x50], rbp
mov	qword ptr [rsp + 0x58], r13
call	0x14002ad90
call	0x14002ad90
mov	r12, qword ptr [rsp + 0x78]
mov	rdi, qword ptr [rsp + 0x70]
mov	rcx, r15
movabs	rdx, 0xffffffff00000000
and	rbx, rdx
mov	rdx, qword ptr [rsp + 0x110]
mov	eax, r12d
mov	qword ptr [rsp + 0x78], r12
or	rbx, rax
mov	qword ptr [rsp + 0x70], rdi
call	0x140094930
call	0x140094930
cmp	r12d, -1
sete	r12b
test	rdi, rdi
setne	al
and	al, r12b
mov	r15d, eax
jne	0x140028d70
jne	0x140028d70
cmp	r13d, -1
sete	al
test	rbp, rbp
je	0x140028d25
je	0x140028d25
test	al, al
jne	0x140028d50
jne	0x140028d50
cmp	al, r12b
jne	0x140028d2e
jne	0x140028d2e
or	dword ptr [r14], 2
mov	rax, rsi
mov	qword ptr [rsi], rdi
mov	qword ptr [rsi + 8], rbx
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rdx, qword ptr [rbp + 0x18]
xor	eax, eax
cmp	qword ptr [rbp + 0x10], rdx
jb	0x140028d25
jb	0x140028d25
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jmp	0x140028d25
jmp	0x140028d25
nop	
mov	rax, qword ptr [rdi + 0x18]
xor	r12d, r12d
cmp	qword ptr [rdi + 0x10], rax
jb	0x140028d15
jb	0x140028d15
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmove	r12d, r15d
cmove	rdi, rax
jmp	0x140028d15
jmp	0x140028d15
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	r12, qword ptr [rsp + 0x100]
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [r9 + 8]
mov	r14, qword ptr [rsp + 0x108]
mov	rsi, rcx
mov	rcx, qword ptr [rip + 0x959f5]
mov	rdi, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [r12 + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x140028f7b
jae	0x140028f7b
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x140028f7b
je	0x140028f7b
mov	r8, qword ptr [rip + 0x95e73]
xor	r9d, r9d
lea	rdx, [rip + 0x97d79]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x140028f7b
je	0x140028f7b
mov	rax, qword ptr [rax + 0x10]
mov	rdx, rdi
lea	rcx, [rsp + 0x70]
lea	r9, [rsp + 0x50]
mov	dword ptr [rsp + 0x8c], 0
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x84], 0
mov	rax, qword ptr [rax + 0x20]
mov	qword ptr [rsp + 0x60], r15
lea	r15, [rsp + 0x84]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x110]
mov	qword ptr [rsp + 0x40], r15
mov	qword ptr [rsp + 0x30], rax
mov	qword ptr [rsp + 0x20], r12
mov	qword ptr [rsp + 0x28], r14
mov	qword ptr [rsp + 0x68], rbx
mov	qword ptr [rsp + 0x50], rbp
mov	qword ptr [rsp + 0x58], r13
call	0x14002ad90
call	0x14002ad90
mov	r12, qword ptr [rsp + 0x78]
mov	rdi, qword ptr [rsp + 0x70]
mov	rcx, r15
movabs	rdx, 0xffffffff00000000
and	rbx, rdx
mov	rdx, qword ptr [rsp + 0x110]
mov	eax, r12d
mov	qword ptr [rsp + 0x78], r12
or	rbx, rax
mov	qword ptr [rsp + 0x70], rdi
call	0x140094930
call	0x140094930
cmp	r12d, -1
sete	r12b
test	rdi, rdi
setne	al
and	al, r12b
mov	r15d, eax
jne	0x140028f50
jne	0x140028f50
cmp	r13d, -1
sete	al
test	rbp, rbp
je	0x140028f05
je	0x140028f05
test	al, al
jne	0x140028f30
jne	0x140028f30
cmp	al, r12b
jne	0x140028f0e
jne	0x140028f0e
or	dword ptr [r14], 2
mov	rax, rsi
mov	qword ptr [rsi], rdi
mov	qword ptr [rsi + 8], rbx
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rdx, qword ptr [rbp + 0x18]
xor	eax, eax
cmp	qword ptr [rbp + 0x10], rdx
jb	0x140028f05
jb	0x140028f05
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jmp	0x140028f05
jmp	0x140028f05
nop	
mov	rax, qword ptr [rdi + 0x18]
xor	r12d, r12d
cmp	qword ptr [rdi + 0x10], rax
jb	0x140028ef5
jb	0x140028ef5
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmove	r12d, r15d
cmove	rdi, rax
jmp	0x140028ef5
jmp	0x140028ef5
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xb8
mov	rbx, qword ptr [rsp + 0x120]
mov	r14, qword ptr [r9]
mov	r12, qword ptr [r8]
mov	rsi, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9 + 8]
mov	r13, r14
mov	rdi, rcx
mov	rcx, qword ptr [rip + 0x9590a]
mov	qword ptr [rsp + 0x108], rdx
mov	dword ptr [rsp + 0xac], 0
call	0x140022a70
call	0x140022a70
mov	rcx, rax
mov	rax, qword ptr [rbx + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r15, qword ptr [rax + rcx*8]
test	r15, r15
je	0x14002966f
je	0x14002966f
lea	rax, [rsp + 0xac]
mov	qword ptr [rsp + 0x40], rbx
mov	rdx, qword ptr [rsp + 0x108]
lea	rcx, [rsp + 0x90]
mov	qword ptr [rsp + 0x48], rax
lea	rax, [rsp + 0xa8]
lea	r9, [rsp + 0x70]
mov	qword ptr [rsp + 0x20], rax
lea	r8, [rsp + 0x80]
mov	qword ptr [rsp + 0x38], 2
mov	dword ptr [rsp + 0x30], 0x63
mov	dword ptr [rsp + 0x28], 0
mov	qword ptr [rsp + 0x80], r12
mov	qword ptr [rsp + 0x88], rsi
mov	qword ptr [rsp + 0x70], r14
mov	qword ptr [rsp + 0x78], rbp
call	0x140029770
call	0x140029770
mov	rdx, qword ptr [rsp + 0x98]
movabs	rcx, 0xffffffff00000000
mov	rbx, qword ptr [rsp + 0x90]
and	rsi, rcx
mov	eax, edx
mov	qword ptr [rsp + 0x90], rbx
mov	r9d, edx
or	rsi, rax
cmp	ebp, -1
mov	eax, dword ptr [rsp + 0xac]
mov	qword ptr [rsp + 0x98], rdx
sete	r11b
test	r14, r14
setne	r12b
and	r12d, r11d
test	eax, eax
je	0x140029130
je	0x140029130
mov	rax, qword ptr [rsp + 0x128]
or	dword ptr [rax], 4
cmp	edx, -1
sete	r10b
test	rbx, rbx
setne	bpl
and	ebp, r10d
test	bpl, bpl
jne	0x14002918d
jne	0x14002918d
test	r12b, r12b
jne	0x1400291e0
jne	0x1400291e0
cmp	r10b, r11b
jne	0x1400290fc
jne	0x1400290fc
mov	rax, qword ptr [rsp + 0x128]
or	dword ptr [rax], 2
movabs	rax, 0xffffffff00000000
mov	qword ptr [rdi], rbx
and	rsi, rax
mov	rax, rdi
or	rsi, r9
mov	qword ptr [rdi + 8], rsi
add	rsp, 0xb8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
cmp	edx, -1
sete	r10b
test	rbx, rbx
setne	bpl
mov	byte ptr [rsp + 0x5e], r10b
and	bpl, r10b
jne	0x1400293b0
jne	0x1400293b0
mov	r8d, r11d
test	r12b, r12b
jne	0x140029340
jne	0x140029340
mov	eax, dword ptr [rsp + 0xa8]
cmp	byte ptr [rsp + 0x5e], r8b
jne	0x140029220
jne	0x140029220
cmp	eax, 0x44
jg	0x140029179
jg	0x140029179
add	eax, 0x64
mov	dword ptr [rsp + 0xa8], eax
mov	rdx, qword ptr [rsp + 0x130]
mov	dword ptr [rdx + 0x14], eax
test	bpl, bpl
je	0x1400290e3
je	0x1400290e3
mov	rax, qword ptr [rbx + 0x18]
xor	r10d, r10d
cmp	qword ptr [rbx + 0x10], rax
jb	0x1400290e3
jb	0x1400290e3
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x58], r11b
mov	rcx, rbx
mov	dword ptr [rsp + 0x50], r9d
mov	byte ptr [rsp + 0x5e], r10b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r10d, byte ptr [rsp + 0x5e]
movzx	r11d, byte ptr [rsp + 0x58]
cmp	eax, -1
mov	eax, 0
mov	r9d, dword ptr [rsp + 0x50]
cmove	r10d, ebp
cmove	rbx, rax
jmp	0x1400290e3
jmp	0x1400290e3
nop	dword ptr [rax]
mov	rax, qword ptr [r13 + 0x18]
xor	r11d, r11d
cmp	qword ptr [r13 + 0x10], rax
jb	0x1400290ec
jb	0x1400290ec
mov	rax, qword ptr [r13]
mov	dword ptr [rsp + 0x50], r9d
mov	rcx, r13
mov	byte ptr [rsp + 0x5e], r10b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r9d, dword ptr [rsp + 0x50]
movzx	r10d, byte ptr [rsp + 0x5e]
cmp	eax, -1
sete	r11b
jmp	0x1400290ec
jmp	0x1400290ec
nop	dword ptr [rax]
test	bpl, bpl
jne	0x1400294a0
jne	0x1400294a0
mov	ecx, edx
movzx	edx, dl
movsxd	rbp, edx
movsx	edx, byte ptr [r15 + rbp + 0x139]
test	dl, dl
jne	0x140029269
jne	0x140029269
mov	rax, qword ptr [r15]
lea	rdx, [rip - 0x6d68]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, rdx
jne	0x140029508
jne	0x140029508
cmp	cl, 0x2a
je	0x140029300
je	0x140029300
mov	byte ptr [r15 + rbp + 0x139], cl
movsx	edx, cl
lea	ecx, [rdx - 0x30]
mov	eax, dword ptr [rsp + 0xa8]
cmp	cl, 9
ja	0x140029488
ja	0x140029488
mov	rcx, qword ptr [rbx + 0x10]
mov	r8, qword ptr [rbx + 0x18]
lea	eax, [rax + rax*4]
lea	r14d, [rdx + rax*2 - 0x30]
cmp	rcx, r8
jae	0x140029568
jae	0x140029568
add	rcx, 1
mov	dword ptr [rsp + 0xa8], r14d
mov	qword ptr [rbx + 0x10], rcx
cmp	rcx, r8
jae	0x140029316
jae	0x140029316
xor	edx, edx
mov	ebp, r11d
test	r12b, r12b
jne	0x1400294c0
jne	0x1400294c0
cmp	bpl, dl
jne	0x140029410
jne	0x140029410
test	rbx, rbx
mov	eax, dword ptr [rsp + 0xa8]
setne	bpl
mov	rdx, qword ptr [rsp + 0x130]
sub	eax, 0x76c
mov	r10d, 1
mov	r9d, 0xffffffff
mov	dword ptr [rsp + 0xa8], eax
mov	dword ptr [rdx + 0x14], eax
jmp	0x140029184
jmp	0x140029184
nop	word ptr [rax + rax]
test	rbx, rbx
mov	eax, dword ptr [rsp + 0xa8]
setne	bpl
and	ebp, r10d
jmp	0x14002916a
jmp	0x14002916a
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x5e], r11b
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r11d, byte ptr [rsp + 0x5e]
cmp	eax, -1
jne	0x1400292aa
jne	0x1400292aa
mov	edx, 1
xor	ebx, ebx
jmp	0x1400292ac
jmp	0x1400292ac
nop	
mov	rax, qword ptr [r14 + 0x18]
xor	r8d, r8d
cmp	qword ptr [r14 + 0x10], rax
jb	0x140029158
jb	0x140029158
mov	rax, qword ptr [r14]
mov	qword ptr [rsp + 0x68], rdx
mov	rcx, r14
mov	byte ptr [rsp + 0x60], r8b
mov	byte ptr [rsp + 0x5f], r11b
mov	dword ptr [rsp + 0x58], r9d
mov	byte ptr [rsp + 0x50], r10b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r10d, byte ptr [rsp + 0x50]
mov	r9d, dword ptr [rsp + 0x58]
cmp	eax, -1
movzx	r11d, byte ptr [rsp + 0x5f]
movzx	r8d, byte ptr [rsp + 0x60]
mov	rdx, qword ptr [rsp + 0x68]
jne	0x140029158
jne	0x140029158
mov	r8d, r12d
xor	r13d, r13d
xor	r12d, r12d
jmp	0x140029158
jmp	0x140029158
nop	word ptr cs:[rax + rax]
mov	byte ptr [rsp + 0x5e], 0
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jb	0x14002914c
jb	0x14002914c
mov	rax, qword ptr [rbx]
mov	qword ptr [rsp + 0x60], rdx
mov	rcx, rbx
mov	byte ptr [rsp + 0x5f], r11b
mov	dword ptr [rsp + 0x58], r9d
mov	byte ptr [rsp + 0x50], r10b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r10d, byte ptr [rsp + 0x50]
mov	r9d, dword ptr [rsp + 0x58]
cmp	eax, -1
movzx	r11d, byte ptr [rsp + 0x5f]
mov	rdx, qword ptr [rsp + 0x60]
jne	0x14002914c
jne	0x14002914c
mov	byte ptr [rsp + 0x5e], bpl
xor	ebx, ebx
xor	ebp, ebp
jmp	0x14002914c
jmp	0x14002914c
nop	dword ptr [rax]
test	rbx, rbx
je	0x140029598
je	0x140029598
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140029642
jae	0x140029642
movzx	r9d, byte ptr [rax]
mov	ebp, 1
mov	ecx, r9d
movsxd	r9, r9d
movsx	edx, byte ptr [r15 + r9 + 0x139]
test	dl, dl
jne	0x14002946a
jne	0x14002946a
mov	rax, qword ptr [r15]
lea	rdx, [rip - 0x6f6d]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, rdx
jne	0x1400295ac
jne	0x1400295ac
cmp	cl, 0x2a
je	0x140029475
je	0x140029475
mov	byte ptr [r15 + r9 + 0x139], cl
movsx	edx, cl
lea	eax, [rdx - 0x30]
cmp	al, 9
jbe	0x140029540
jbe	0x140029540
mov	eax, dword ptr [rsp + 0xa8]
jmp	0x1400292cf
jmp	0x1400292cf
nop	dword ptr [rax]
test	rbx, rbx
setne	bpl
and	ebp, r10d
jmp	0x14002916a
jmp	0x14002916a
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400295d6
jae	0x1400295d6
movzx	edx, byte ptr [rax]
mov	ecx, edx
jmp	0x14002922e
jmp	0x14002922e
nop	dword ptr [rax + rax]
mov	rax, qword ptr [r13 + 0x18]
xor	ebp, ebp
cmp	qword ptr [r13 + 0x10], rax
jb	0x1400292b8
jb	0x1400292b8
mov	rax, qword ptr [r13]
mov	byte ptr [rsp + 0x50], dl
mov	rcx, r13
mov	byte ptr [rsp + 0x5e], r11b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r11d, byte ptr [rsp + 0x5e]
movzx	edx, byte ptr [rsp + 0x50]
cmp	eax, -1
jne	0x1400292b8
jne	0x1400292b8
mov	ebp, r12d
xor	r13d, r13d
xor	r12d, r12d
jmp	0x1400292b8
jmp	0x1400292b8
nop	dword ptr [rax]
mov	byte ptr [rsp + 0x58], r11b
movsx	edx, cl
mov	r8d, 0x2a
mov	rcx, r15
mov	dword ptr [rsp + 0x50], r9d
mov	byte ptr [rsp + 0x5e], r10b
call	rax
call	rax
movzx	r11d, byte ptr [rsp + 0x58]
mov	r9d, dword ptr [rsp + 0x50]
movzx	r10d, byte ptr [rsp + 0x5e]
mov	ecx, eax
jmp	0x140029255
jmp	0x140029255
nop	dword ptr [rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140029620
jae	0x140029620
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
lea	eax, [r14 + r14*4]
lea	eax, [rdx + rax*2 - 0x30]
jmp	0x1400292cf
jmp	0x1400292cf
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x5e], r11b
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	dword ptr [rsp + 0xa8], r14d
mov	rcx, qword ptr [rbx + 0x10]
mov	r8, qword ptr [rbx + 0x18]
movzx	r11d, byte ptr [rsp + 0x5e]
jmp	0x1400292a5
jmp	0x1400292a5
nop	dword ptr [rax]
xor	ebp, ebp
mov	r9d, 0xff
mov	ecx, 0xffffffff
xor	ebx, ebx
jmp	0x140029433
jmp	0x140029433
mov	qword ptr [rsp + 0x50], r9
movsx	edx, cl
mov	r8d, 0x2a
mov	rcx, r15
mov	byte ptr [rsp + 0x5e], r11b
call	rax
call	rax
mov	r9, qword ptr [rsp + 0x50]
movzx	r11d, byte ptr [rsp + 0x5e]
mov	ecx, eax
jmp	0x14002945a
jmp	0x14002945a
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x58], r11b
mov	rcx, rbx
mov	dword ptr [rsp + 0x50], r9d
mov	byte ptr [rsp + 0x5e], r10b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r10d, byte ptr [rsp + 0x5e]
mov	r9d, dword ptr [rsp + 0x50]
cmp	eax, -1
movzx	r11d, byte ptr [rsp + 0x58]
mov	edx, eax
jne	0x140029229
jne	0x140029229
mov	edx, 0xff
mov	ecx, 0xffffffff
xor	ebx, ebx
jmp	0x14002922e
jmp	0x14002922e
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x50], r11b
mov	rcx, rbx
mov	byte ptr [rsp + 0x5e], dl
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
movzx	r11d, byte ptr [rsp + 0x50]
movsx	edx, byte ptr [rsp + 0x5e]
jmp	0x140029556
jmp	0x140029556
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x5e], r11b
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r11d, byte ptr [rsp + 0x5e]
cmp	eax, -1
je	0x140029598
je	0x140029598
mov	ecx, eax
movzx	r9d, al
mov	ebp, 1
jmp	0x140029433
jmp	0x140029433
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
mov	rax, qword ptr [r8 + 8]
mov	rdi, qword ptr [r9 + 8]
mov	esi, dword ptr [rsp + 0xc0]
mov	rbx, qword ptr [r8]
mov	r15, qword ptr [r9]
mov	ebp, eax
mov	qword ptr [rsp + 0x90], rcx
mov	rcx, qword ptr [rip + 0x9512a]
mov	qword ptr [rsp + 0x30], rax
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0xd0]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r13, qword ptr [rax + rdx*8]
test	r13, r13
je	0x140029afd
je	0x140029afd
cmp	edi, -1
mov	r11d, esi
mov	r10, qword ptr [rsp + 0xc8]
mov	rsi, r15
sete	r14b
lea	r9, [rip - 0x730f]
xor	edi, edi
xor	r12d, r12d
mov	r15d, r14d
mov	r14, r13
jmp	0x140029846
jmp	0x140029846
nop	dword ptr [rax]
mov	byte ptr [r14 + r13 + 0x139], dl
movsx	eax, dl
lea	edx, [rax - 0x30]
cmp	dl, 9
ja	0x1400298ba
ja	0x1400298ba
lea	edx, [rdi + rdi*4]
lea	edi, [rax + rdx*2 - 0x30]
cmp	edi, r11d
jg	0x1400298d7
jg	0x1400298d7
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140029a00
jae	0x140029a00
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
add	r12, 1
mov	ebp, 0xffffffff
cmp	ebp, -1
sete	dl
test	rbx, rbx
setne	r13b
and	r13b, dl
jne	0x140029920
jne	0x140029920
mov	r13d, edx
test	rsi, rsi
je	0x14002986d
je	0x14002986d
test	r15b, r15b
jne	0x140029940
jne	0x140029940
xor	r13d, r15d
cmp	r12, r10
jae	0x1400298ba
jae	0x1400298ba
test	r13b, r13b
je	0x1400298ba
je	0x1400298ba
test	rbx, rbx
je	0x140029887
je	0x140029887
test	dl, dl
jne	0x1400299a0
jne	0x1400299a0
mov	edx, ebp
movzx	r13d, bpl
movsxd	r13, r13d
movsx	eax, byte ptr [r14 + r13 + 0x139]
test	al, al
jne	0x14002980b
jne	0x14002980b
mov	rax, qword ptr [r14]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, r9
jne	0x1400299c0
jne	0x1400299c0
cmp	dl, 0x2a
jne	0x140029800
jne	0x140029800
test	r12, r12
setne	dl
cmp	edi, dword ptr [rsp + 0xb8]
setge	al
test	dl, al
je	0x1400298d7
je	0x1400298d7
cmp	edi, r11d
jle	0x140029a40
jle	0x140029a40
mov	rax, qword ptr [rsp + 0xd8]
or	dword ptr [rax], 4
mov	rcx, qword ptr [rsp + 0x90]
movabs	rax, 0xffffffff00000000
and	rax, qword ptr [rsp + 0x30]
or	rax, rbp
mov	qword ptr [rcx + 8], rax
mov	rax, rcx
mov	qword ptr [rcx], rbx
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x140029a50
jae	0x140029a50
xor	r13d, r13d
jmp	0x14002985f
jmp	0x14002985f
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rsi + 0x18]
cmp	qword ptr [rsi + 0x10], rax
jb	0x140029870
jb	0x140029870
mov	rax, qword ptr [rsi]
mov	qword ptr [rsp + 0x38], r9
mov	rcx, rsi
mov	qword ptr [rsp + 0xc8], r10
mov	dword ptr [rsp + 0xc0], r11d
mov	byte ptr [rsp + 0x28], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x28]
mov	r11d, dword ptr [rsp + 0xc0]
cmp	eax, -1
mov	r10, qword ptr [rsp + 0xc8]
mov	r9, qword ptr [rsp + 0x38]
jne	0x140029870
jne	0x140029870
xor	r13d, 1
xor	esi, esi
jmp	0x140029870
jmp	0x140029870
nop	
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140029aa8
jae	0x140029aa8
movzx	r13d, byte ptr [rax]
mov	edx, r13d
jmp	0x14002988d
jmp	0x14002988d
nop	word ptr [rax + rax]
mov	qword ptr [rsp + 0x28], r9
movsx	edx, dl
mov	r8d, 0x2a
mov	rcx, r14
mov	qword ptr [rsp + 0xc8], r10
mov	dword ptr [rsp + 0xc0], r11d
call	rax
call	rax
mov	r9, qword ptr [rsp + 0x28]
mov	r10, qword ptr [rsp + 0xc8]
mov	r11d, dword ptr [rsp + 0xc0]
mov	edx, eax
jmp	0x1400298b1
jmp	0x1400298b1
nop	
mov	rax, qword ptr [rbx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
mov	qword ptr [rsp + 0xc8], r10
mov	dword ptr [rsp + 0xc0], r11d
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	r9, qword ptr [rsp + 0x28]
mov	r10, qword ptr [rsp + 0xc8]
mov	r11d, dword ptr [rsp + 0xc0]
jmp	0x14002983d
jmp	0x14002983d
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsp + 0xb0]
mov	dword ptr [rax], edi
jmp	0x1400298e2
jmp	0x1400298e2
nop	
mov	rax, qword ptr [rbx]
mov	qword ptr [rsp + 0x38], r9
mov	rcx, rbx
mov	qword ptr [rsp + 0xc8], r10
mov	dword ptr [rsp + 0xc0], r11d
mov	byte ptr [rsp + 0x28], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x28]
mov	r11d, dword ptr [rsp + 0xc0]
cmp	eax, -1
mov	eax, 0
mov	r10, qword ptr [rsp + 0xc8]
mov	r9, qword ptr [rsp + 0x38]
cmove	rbx, rax
cmovne	r13d, eax
jmp	0x14002985f
jmp	0x14002985f
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
mov	qword ptr [rsp + 0xc8], r10
mov	dword ptr [rsp + 0xc0], r11d
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r11d, dword ptr [rsp + 0xc0]
mov	r10, qword ptr [rsp + 0xc8]
cmp	eax, -1
mov	r9, qword ptr [rsp + 0x28]
je	0x140029aeb
je	0x140029aeb
mov	edx, eax
movzx	r13d, al
jmp	0x14002988d
jmp	0x14002988d
mov	r13d, 0xff
mov	edx, 0xffffffff
xor	ebx, ebx
jmp	0x14002988d
jmp	0x14002988d
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x138
movups	xmmword ptr [rsp + 0x110], xmm6
movups	xmmword ptr [rsp + 0x120], xmm7
mov	r12, qword ptr [rsp + 0x1a0]
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [r9 + 8]
mov	r14, qword ptr [rsp + 0x1a8]
mov	rsi, rcx
mov	rcx, qword ptr [rip + 0x94c85]
mov	rdi, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [r12 + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x140029dcf
jae	0x140029dcf
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x140029dcf
je	0x140029dcf
mov	r8, qword ptr [rip + 0x95103]
xor	r9d, r9d
lea	rdx, [rip + 0x97009]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x140029dcf
je	0x140029dcf
mov	rax, qword ptr [rax + 0x10]
mov	rdx, rdi
lea	r9, [rsp + 0x60]
lea	rcx, [rsp + 0x80]
mov	dword ptr [rsp + 0x9c], 0
lea	r8, [rsp + 0x70]
movdqu	xmm2, xmmword ptr [rax + 0x58]
movdqu	xmm1, xmmword ptr [rax + 0x68]
movdqu	xmm0, xmmword ptr [rax + 0x78]
movdqu	xmm6, xmmword ptr [rax + 0x88]
movdqu	xmm5, xmmword ptr [rax + 0x98]
movdqu	xmm4, xmmword ptr [rax + 0xa8]
movdqu	xmm3, xmmword ptr [rax + 0xb8]
lea	rax, [rsp + 0x9c]
mov	qword ptr [rsp + 0x38], r12
movdqu	xmm7, xmm6
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xa0]
shufpd	xmm7, xmm5, 1
shufpd	xmm5, xmm4, 1
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x98]
shufpd	xmm4, xmm3, 1
shufpd	xmm3, xmm2, 1
mov	qword ptr [rsp + 0x20], rax
shufpd	xmm2, xmm1, 1
shufpd	xmm1, xmm0, 1
shufpd	xmm0, xmm6, 1
mov	qword ptr [rsp + 0x30], 7
mov	qword ptr [rsp + 0x78], rbx
mov	qword ptr [rsp + 0x70], r15
mov	qword ptr [rsp + 0x60], rbp
mov	qword ptr [rsp + 0x68], r13
movups	xmmword ptr [rsp + 0xa0], xmm7
movups	xmmword ptr [rsp + 0xb0], xmm5
movups	xmmword ptr [rsp + 0xc0], xmm4
movups	xmmword ptr [rsp + 0xd0], xmm3
movups	xmmword ptr [rsp + 0xe0], xmm2
movups	xmmword ptr [rsp + 0xf0], xmm1
movups	xmmword ptr [rsp + 0x100], xmm0
call	0x14002d180
call	0x14002d180
mov	rax, qword ptr [rsp + 0x88]
movabs	rcx, 0xffffffff00000000
mov	rdi, qword ptr [rsp + 0x80]
and	rbx, rcx
mov	ecx, dword ptr [rsp + 0x9c]
mov	edx, eax
mov	qword ptr [rsp + 0x80], rdi
or	rbx, rdx
mov	qword ptr [rsp + 0x88], rax
mov	rdx, rdi
test	ecx, ecx
je	0x140029d50
je	0x140029d50
or	dword ptr [r14], 4
cmp	eax, -1
sete	r12b
test	rdi, rdi
setne	al
and	al, r12b
mov	r15d, eax
jne	0x140029d70
jne	0x140029d70
cmp	r13d, -1
sete	al
test	rbp, rbp
je	0x140029d12
je	0x140029d12
test	al, al
jne	0x140029da0
jne	0x140029da0
cmp	al, r12b
jne	0x140029d1b
jne	0x140029d1b
or	dword ptr [r14], 2
mov	qword ptr [rsi], rdx
mov	rax, rsi
mov	qword ptr [rsi + 8], rbx
movups	xmm6, xmmword ptr [rsp + 0x110]
movups	xmm7, xmmword ptr [rsp + 0x120]
add	rsp, 0x138
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x1b0]
mov	r8d, dword ptr [rsp + 0x98]
mov	dword ptr [rcx + 0x18], r8d
jmp	0x140029ce9
jmp	0x140029ce9
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rdi + 0x18]
xor	r12d, r12d
cmp	qword ptr [rdi + 0x10], rax
jb	0x140029cfe
jb	0x140029cfe
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, 0
cmp	eax, -1
cmove	r12d, r15d
cmovne	rdx, rdi
jmp	0x140029cfe
jmp	0x140029cfe
nop	dword ptr [rax + rax]
mov	rdi, qword ptr [rbp + 0x18]
xor	eax, eax
cmp	qword ptr [rbp + 0x10], rdi
jb	0x140029d12
jb	0x140029d12
mov	rax, qword ptr [rbp]
mov	qword ptr [rsp + 0x58], rdx
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rdx, qword ptr [rsp + 0x58]
cmp	eax, -1
sete	al
jmp	0x140029d12
jmp	0x140029d12
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x88
lea	rbp, [rsp + 0x80]
mov	rdi, qword ptr [r8 + 8]
mov	r15, qword ptr [r9]
mov	r11, qword ptr [r8]
mov	rsi, qword ptr [r9 + 8]
mov	rbx, qword ptr [rbp + 0x80]
mov	qword ptr [rbp + 0x50], rcx
mov	rcx, qword ptr [rip + 0x94ab5]
mov	qword ptr [rbp - 0x50], rdi
mov	qword ptr [rbp - 0x10], r11
mov	dword ptr [rbp - 8], edi
mov	qword ptr [rbp - 0x38], r15
call	0x140022a70
call	0x140022a70
mov	rcx, rax
mov	rax, qword ptr [rbp + 0x88]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r14, qword ptr [rax + rcx*8]
test	r14, r14
je	0x14002a980
je	0x14002a980
mov	rax, rbx
shl	rax, 4
call	0x14000c150
call	0x14000c150
mov	r11, qword ptr [rbp - 0x10]
mov	r8d, dword ptr [rbp - 8]
sub	rsp, rax
cmp	edi, -1
sete	r13b
test	r11, r11
lea	r12, [rsp + 0x20]
setne	dil
and	dil, r13b
jne	0x14002a6f5
jne	0x14002a6f5
mov	edi, r13d
cmp	esi, -1
sete	byte ptr [rbp - 0x1d]
test	r15, r15
movzx	eax, byte ptr [rbp - 0x1d]
setne	sil
and	sil, al
jne	0x14002a70a
jne	0x14002a70a
movzx	esi, byte ptr [rbp - 0x1d]
cmp	dil, sil
jne	0x140029ee8
jne	0x140029ee8
mov	rax, qword ptr [rbp + 0x90]
or	dword ptr [rax], 4
mov	rsi, qword ptr [rbp + 0x50]
mov	r15d, r8d
movabs	rax, 0xffffffff00000000
and	rax, qword ptr [rbp - 0x50]
or	rax, r15
mov	qword ptr [rsi + 8], rax
mov	rax, rsi
mov	qword ptr [rsi], r11
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
test	r11, r11
je	0x140029ef6
je	0x140029ef6
test	r13b, r13b
jne	0x14002a71f
jne	0x14002a71f
mov	edi, r8d
mov	rax, qword ptr [r14]
movsx	edi, dil
mov	qword ptr [rbp - 0x10], r11
mov	rcx, r14
mov	dword ptr [rbp - 8], r8d
mov	edx, edi
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	edx, edi
mov	rcx, r14
mov	esi, eax
mov	rax, qword ptr [r14]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
test	rbx, rbx
mov	r8d, dword ptr [rbp - 8]
mov	r11, qword ptr [rbp - 0x10]
mov	r13d, eax
je	0x140029eab
je	0x140029eab
lea	rax, [r12 + rbx*8]
xor	r9d, r9d
mov	byte ptr [rbp - 8], r13b
mov	rdi, qword ptr [rbp + 0x78]
mov	r13, r14
mov	qword ptr [rbp - 0x18], rax
xor	r15d, r15d
mov	r14, r9
mov	dword ptr [rbp - 0x1c], r8d
mov	qword ptr [rbp - 0x28], r11
mov	qword ptr [rbp - 0x10], r12
jmp	0x140029f7f
jmp	0x140029f7f
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi + r14*8]
mov	rcx, r13
movsx	edx, byte ptr [rax]
mov	rax, qword ptr [r13]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
cmp	byte ptr [rbp - 8], al
je	0x140029f95
je	0x140029f95
add	r14, 1
cmp	rbx, r14
je	0x140029fc3
je	0x140029fc3
mov	rax, qword ptr [rdi + r14*8]
mov	rcx, r13
movsx	edx, byte ptr [rax]
mov	rax, qword ptr [r13]
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	sil, al
jne	0x140029f60
jne	0x140029f60
mov	rcx, qword ptr [rdi + r14*8]
lea	r12, [r15*8]
call	0x140015a08
call	0x140015a08
mov	rdx, qword ptr [rbp - 0x18]
mov	qword ptr [rdx + r15*8], rax
mov	rax, qword ptr [rbp - 0x10]
add	r15, 1
mov	qword ptr [rax + r12], r14
add	r14, 1
cmp	rbx, r14
jne	0x140029f7f
jne	0x140029f7f
mov	r9, r14
mov	r8d, dword ptr [rbp - 0x1c]
mov	r11, qword ptr [rbp - 0x28]
mov	r14, r13
mov	r12, qword ptr [rbp - 0x10]
cmp	r15, 1
jbe	0x14002a985
jbe	0x14002a985
mov	rax, qword ptr [rbp - 0x18]
xor	edi, edi
mov	qword ptr [rbp - 0x48], r9
lea	rsi, [r15*8]
mov	qword ptr [rbp - 8], rdi
mov	r8, qword ptr [rax]
add	rax, 8
mov	qword ptr [rbp - 0x28], rsi
mov	rsi, r11
mov	qword ptr [rbp - 0x40], rax
mov	rbx, r8
nop	word ptr [rax + rax]
mov	rdx, qword ptr [rbp - 0x18]
mov	rcx, qword ptr [rbp - 0x28]
mov	r14, rbx
mov	rdi, qword ptr [rbp - 0x40]
add	rcx, rdx
mov	rdx, rcx
mov	rax, rdi
sub	rdx, rdi
and	edx, 8
je	0x14002a050
je	0x14002a050
mov	rax, qword ptr [rbp - 0x40]
mov	r14, qword ptr [rax]
mov	rax, qword ptr [rbp - 0x18]
cmp	rbx, r14
cmovbe	r14, rbx
add	rax, 0x10
cmp	rcx, rax
je	0x14002a06e
je	0x14002a06e
nop	dword ptr [rax + rax]
mov	rdx, qword ptr [rax]
cmp	r14, rdx
cmova	r14, rdx
mov	rdx, qword ptr [rax + 8]
cmp	r14, rdx
cmova	r14, rdx
add	rax, 0x10
cmp	rcx, rax
jne	0x14002a050
jne	0x14002a050
add	qword ptr [rbp - 8], 1
mov	rax, qword ptr [rsi + 0x10]
mov	rdi, qword ptr [rbp - 8]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x14002a3a0
jae	0x14002a3a0
add	rax, 1
mov	qword ptr [rsi + 0x10], rax
cmp	rdi, r14
je	0x14002a3b3
je	0x14002a3b3
jae	0x14002a5b0
jae	0x14002a5b0
mov	rax, qword ptr [rsi + 0x18]
cmp	qword ptr [rsi + 0x10], rax
jae	0x14002a587
jae	0x14002a587
xor	r14d, r14d
cmp	qword ptr [rbp - 0x38], 0
setne	bl
and	bl, byte ptr [rbp - 0x1d]
jne	0x14002a220
jne	0x14002a220
movzx	ebx, byte ptr [rbp - 0x1d]
cmp	bl, r14b
je	0x14002a23d
je	0x14002a23d
test	rsi, rsi
je	0x14002a1e0
je	0x14002a1e0
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x14002a1c2
jae	0x14002a1c2
movzx	edx, byte ptr [rax]
mov	rax, qword ptr [r13]
movsx	edx, dl
mov	rcx, r13
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	byte ptr [rbp - 0x10], al
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x14002a6c0
jae	0x14002a6c0
movsx	edx, byte ptr [rax]
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
test	r15, r15
je	0x14002a20c
je	0x14002a20c
mov	qword ptr [rbp - 0x30], rsi
xor	ebx, ebx
mov	rdi, r15
mov	r14, r13
mov	byte ptr [rbp - 0x1c], al
jmp	0x14002a16b
jmp	0x14002a16b
nop	word ptr [rax + rax]
mov	rax, qword ptr [r14]
movsx	edx, byte ptr [r13]
mov	rcx, r14
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
cmp	byte ptr [rbp - 0x1c], al
je	0x14002a199
je	0x14002a199
sub	rdi, 1
mov	rcx, qword ptr [rbp - 0x18]
lea	rax, [rdi*8]
mov	qword ptr [rbp - 0x28], rax
mov	rax, qword ptr [r12 + rdi*8]
mov	qword ptr [r15], rax
mov	rax, qword ptr [rcx + rdi*8]
mov	qword ptr [rcx + rsi], rax
cmp	rbx, rdi
jae	0x14002a1a2
jae	0x14002a1a2
lea	rsi, [rbx*8]
mov	rcx, qword ptr [rbp + 0x78]
mov	r13, qword ptr [rbp - 8]
lea	r15, [r12 + rsi]
mov	rax, qword ptr [r15]
add	r13, qword ptr [rcx + rax*8]
mov	rax, qword ptr [r14]
mov	rcx, r14
movsx	edx, byte ptr [r13]
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	byte ptr [rbp - 0x10], al
jne	0x14002a130
jne	0x14002a130
add	rbx, 1
cmp	rbx, rdi
jb	0x14002a16b
jb	0x14002a16b
mov	rsi, qword ptr [rbp - 0x30]
mov	r15, rdi
mov	r13, r14
cmp	rdi, 1
jbe	0x14002a23d
jbe	0x14002a23d
mov	rax, qword ptr [rbp - 0x18]
mov	rbx, qword ptr [rax]
jmp	0x14002a010
jmp	0x14002a010
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, eax
cmp	eax, -1
jne	0x14002a0e5
jne	0x14002a0e5
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [r13]
mov	edx, 0xffffffff
mov	rcx, r13
xor	esi, esi
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	edx, 0xffffffff
mov	rcx, r13
mov	byte ptr [rbp - 0x10], al
mov	rax, qword ptr [r13]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
test	r15, r15
jne	0x14002a119
jne	0x14002a119
mov	r11, rsi
mov	r8d, 0xffffffff
jmp	0x140029eab
jmp	0x140029eab
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbp - 0x38]
mov	rdi, qword ptr [rax + 0x18]
cmp	qword ptr [rax + 0x10], rdi
jae	0x14002a697
jae	0x14002a697
xor	ebx, ebx
cmp	bl, r14b
jne	0x14002a0cb
jne	0x14002a0cb
mov	rdi, qword ptr [rbp - 8]
mov	r11, rsi
mov	r14, r13
mov	r8d, 0xffffffff
cmp	r15, 1
jne	0x140029eab
jne	0x140029eab
mov	rax, qword ptr [r11 + 0x10]
cmp	rax, qword ptr [r11 + 0x18]
jae	0x14002a735
jae	0x14002a735
add	rax, 1
mov	qword ptr [r11 + 0x10], rax
add	rdi, 1
mov	rbx, qword ptr [r12]
mov	rax, qword ptr [rbp + 0x78]
mov	r12, qword ptr [rax + rbx*8]
mov	rax, qword ptr [rbp - 0x18]
mov	r13, qword ptr [rax]
cmp	rdi, r13
jae	0x14002a382
jae	0x14002a382
test	r11, r11
jne	0x14002a341
jne	0x14002a341
mov	r15d, 1
cmp	qword ptr [rbp - 0x38], 0
setne	sil
and	sil, byte ptr [rbp - 0x1d]
jne	0x14002a365
jne	0x14002a365
movzx	esi, byte ptr [rbp - 0x1d]
cmp	r15b, sil
je	0x14002a382
je	0x14002a382
mov	rax, qword ptr [r14]
movsx	edx, byte ptr [r12 + rdi]
mov	qword ptr [rbp - 8], r11
mov	rcx, r14
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	r11, qword ptr [rbp - 8]
mov	esi, eax
test	r11, r11
jne	0x14002a5f8
jne	0x14002a5f8
mov	rax, qword ptr [r14]
mov	edx, 0xffffffff
mov	rcx, r14
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	sil, al
je	0x14002a5be
je	0x14002a5be
mov	rax, qword ptr [r14]
movsx	edx, byte ptr [r12 + rdi]
mov	rcx, r14
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	edx, 0xffffffff
xor	r11d, r11d
mov	esi, eax
mov	rax, qword ptr [r14]
mov	qword ptr [rbp - 8], r11
mov	rcx, r14
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	r11, qword ptr [rbp - 8]
cmp	sil, al
jne	0x14002a382
jne	0x14002a382
mov	rax, qword ptr [r11 + 0x10]
cmp	rax, qword ptr [r11 + 0x18]
jae	0x14002a5cf
jae	0x14002a5cf
add	rax, 1
add	rdi, 1
mov	qword ptr [r11 + 0x10], rax
cmp	r13, rdi
je	0x14002a38b
je	0x14002a38b
mov	rax, qword ptr [r11 + 0x18]
cmp	qword ptr [r11 + 0x10], rax
jae	0x14002a77d
jae	0x14002a77d
xor	r15d, r15d
cmp	qword ptr [rbp - 0x38], 0
setne	sil
and	sil, byte ptr [rbp - 0x1d]
je	0x14002a2af
je	0x14002a2af
mov	rax, qword ptr [rbp - 0x38]
mov	rdx, qword ptr [rax + 0x18]
cmp	qword ptr [rax + 0x10], rdx
jae	0x14002a74b
jae	0x14002a74b
xor	esi, esi
cmp	r15b, sil
jne	0x14002a2bc
jne	0x14002a2bc
cmp	r13, rdi
jne	0x14002a5b3
jne	0x14002a5b3
mov	rax, qword ptr [rbp + 0x70]
mov	r8d, 0xffffffff
mov	dword ptr [rax], ebx
jmp	0x140029eb5
jmp	0x140029eb5
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	qword ptr [rbp - 8], r14
jne	0x14002a096
jne	0x14002a096
mov	rax, qword ptr [rsi + 0x18]
cmp	qword ptr [rsi + 0x10], rax
jae	0x14002a903
jae	0x14002a903
xor	r8d, r8d
cmp	qword ptr [rbp - 0x38], 0
setne	dl
and	dl, byte ptr [rbp - 0x1d]
jne	0x14002a6dc
jne	0x14002a6dc
movzx	edx, byte ptr [rbp - 0x1d]
xor	r14d, r14d
cmp	dl, r8b
je	0x14002a4a9
je	0x14002a4a9
test	rsi, rsi
je	0x14002a679
je	0x14002a679
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x14002a667
jae	0x14002a667
movzx	eax, byte ptr [rax]
mov	r8, qword ptr [r13]
movsx	edx, al
mov	rcx, r13
call	qword ptr [r8 + 0x20]
call	qword ptr [r8 + 0x20]
mov	byte ptr [rbp - 0x1c], al
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x14002a84b
jae	0x14002a84b
movsx	edx, byte ptr [rax]
mov	rax, qword ptr [r13]
mov	rcx, r13
xor	r14d, r14d
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	qword ptr [rbp - 0x58], rbx
mov	rdi, qword ptr [rbp - 8]
mov	byte ptr [rbp - 0x10], al
mov	qword ptr [rbp - 0x30], rsi
mov	rsi, r12
mov	r12, r14
mov	r14, qword ptr [rbp - 0x18]
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsi + r12*8]
mov	rbx, qword ptr [rbp + 0x78]
mov	rax, qword ptr [rbx + rax*8]
cmp	rdi, qword ptr [r14 + r12*8]
jae	0x14002a492
jae	0x14002a492
lea	rbx, [rax + rdi]
mov	rax, qword ptr [r13]
mov	rcx, r13
movsx	edx, byte ptr [rbx]
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	al, byte ptr [rbp - 0x1c]
je	0x14002a651
je	0x14002a651
mov	rax, qword ptr [r13]
movsx	edx, byte ptr [rbx]
mov	rcx, r13
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
cmp	byte ptr [rbp - 0x10], al
je	0x14002a651
je	0x14002a651
add	r12, 1
cmp	r12, r15
jne	0x14002a450
jne	0x14002a450
mov	r12, rsi
mov	rbx, qword ptr [rbp - 0x58]
mov	rsi, qword ptr [rbp - 0x30]
xor	r14d, r14d
mov	rcx, qword ptr [rbp - 0x18]
mov	r8, qword ptr [rbp - 8]
xor	eax, eax
mov	r9, qword ptr [rbp - 0x28]
jmp	0x14002a4cd
jmp	0x14002a4cd
nop	dword ptr [rax]
add	rax, 1
cmp	rax, r15
jae	0x14002a4f9
jae	0x14002a4f9
mov	rbx, qword ptr [rcx + rax*8]
cmp	r8, rbx
sete	dl
cmp	dl, r14b
jne	0x14002a4c0
jne	0x14002a4c0
sub	r15, 1
mov	rdx, qword ptr [r12 + r15*8]
lea	r9, [r15*8]
mov	qword ptr [r12 + rax*8], rdx
mov	rdx, qword ptr [rcx + r15*8]
mov	qword ptr [rcx + rax*8], rdx
cmp	rax, r15
jb	0x14002a4c9
jb	0x14002a4c9
mov	qword ptr [rbp - 0x28], r9
test	r14b, r14b
je	0x14002a7ca
je	0x14002a7ca
mov	rbx, qword ptr [rbp - 0x18]
mov	rax, qword ptr [rbx]
cmp	r15, 1
jbe	0x14002a566
jbe	0x14002a566
mov	rdi, qword ptr [rbp - 0x40]
lea	r8, [rbx + r9]
mov	rcx, r8
sub	rcx, rdi
mov	rdx, rdi
and	ecx, 8
je	0x14002a548
je	0x14002a548
mov	rbx, qword ptr [rbp - 0x40]
mov	rdx, qword ptr [rbx]
mov	rbx, qword ptr [rbp - 0x18]
cmp	rax, rdx
cmova	rax, rdx
lea	rdx, [rbx + 0x10]
cmp	rdx, r8
je	0x14002a566
je	0x14002a566
nop	dword ptr [rax]
mov	rcx, qword ptr [rdx]
cmp	rax, rcx
cmova	rax, rcx
mov	rcx, qword ptr [rdx + 8]
cmp	rax, rcx
cmova	rax, rcx
add	rdx, 0x10
cmp	rdx, r8
jne	0x14002a548
jne	0x14002a548
cmp	qword ptr [rbp - 8], rax
jae	0x14002a23d
jae	0x14002a23d
test	rsi, rsi
je	0x14002a0ad
je	0x14002a0ad
mov	rax, qword ptr [rsi + 0x18]
cmp	qword ptr [rsi + 0x10], rax
jb	0x14002a0aa
jb	0x14002a0aa
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x14002a0aa
jne	0x14002a0aa
mov	r14d, 1
xor	esi, esi
jmp	0x14002a0ad
jmp	0x14002a0ad
nop	word ptr cs:[rax + rax]
mov	r11, rsi
mov	r8d, 0xffffffff
jmp	0x140029eab
jmp	0x140029eab
xor	r11d, r11d
mov	rax, qword ptr [r11 + 0x10]
cmp	rax, qword ptr [r11 + 0x18]
jb	0x14002a330
jb	0x14002a330
mov	rax, qword ptr [r11]
add	rdi, 1
mov	qword ptr [rbp - 8], r11
mov	rcx, r11
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	r13, rdi
mov	r11, qword ptr [rbp - 8]
jne	0x14002a341
jne	0x14002a341
jmp	0x14002a38b
jmp	0x14002a38b
nop	word ptr [rax + rax]
mov	rax, qword ptr [r11 + 0x10]
cmp	rax, qword ptr [r11 + 0x18]
jae	0x14002a7a8
jae	0x14002a7a8
movsx	edx, byte ptr [rax]
mov	rax, qword ptr [r14]
mov	qword ptr [rbp - 8], r11
mov	rcx, r14
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	r11, qword ptr [rbp - 8]
cmp	al, sil
je	0x14002a322
je	0x14002a322
mov	rax, qword ptr [r14]
movsx	edx, byte ptr [r12 + rdi]
mov	qword ptr [rbp - 8], r11
mov	rcx, r14
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	r11, qword ptr [rbp - 8]
mov	esi, eax
mov	rax, qword ptr [r11 + 0x10]
cmp	rax, qword ptr [r11 + 0x18]
jae	0x14002a7ed
jae	0x14002a7ed
movsx	edx, byte ptr [rax]
jmp	0x14002a30c
jmp	0x14002a30c
mov	r12, rsi
mov	rbx, qword ptr [rbp - 0x58]
mov	rsi, qword ptr [rbp - 0x30]
mov	r14d, 1
jmp	0x14002a4a9
jmp	0x14002a4a9
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x14002a3ff
jne	0x14002a3ff
mov	rax, qword ptr [r13]
mov	edx, 0xffffffff
mov	rcx, r13
xor	esi, esi
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	edx, 0xffffffff
mov	byte ptr [rbp - 0x1c], al
jmp	0x14002a421
jmp	0x14002a421
mov	rdi, rax
mov	rax, qword ptr [rax]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	rax, rdi
mov	qword ptr [rbp - 0x38], rax
mov	eax, 0
cmovne	ebx, eax
jmp	0x14002a0c2
jmp	0x14002a0c2
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, eax
cmp	eax, -1
je	0x14002a844
je	0x14002a844
movsx	edx, al
jmp	0x14002a106
jmp	0x14002a106
mov	rax, qword ptr [rbp - 0x38]
mov	rdi, qword ptr [rax + 0x18]
cmp	qword ptr [rax + 0x10], rdi
jae	0x14002a8ca
jae	0x14002a8ca
xor	edx, edx
jmp	0x14002a3d9
jmp	0x14002a3d9
mov	rax, qword ptr [r11 + 0x18]
cmp	qword ptr [r11 + 0x10], rax
jae	0x14002a89d
jae	0x14002a89d
xor	edi, edi
jmp	0x140029e87
jmp	0x140029e87
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x14002a867
jae	0x14002a867
xor	esi, esi
jmp	0x140029ea6
jmp	0x140029ea6
mov	rax, qword ptr [r11 + 0x10]
cmp	rax, qword ptr [r11 + 0x18]
jae	0x14002a922
jae	0x14002a922
movzx	edi, byte ptr [rax]
jmp	0x140029ef9
jmp	0x140029ef9
mov	rax, qword ptr [r11]
mov	qword ptr [rbp - 8], r11
mov	rcx, r11
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	r11, qword ptr [rbp - 8]
jmp	0x14002a26d
jmp	0x14002a26d
mov	rdx, rax
mov	rax, qword ptr [rax]
mov	qword ptr [rbp - 8], r11
mov	rcx, rdx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r11, qword ptr [rbp - 8]
cmp	eax, -1
mov	eax, 0
cmovne	rax, qword ptr [rbp - 0x38]
mov	qword ptr [rbp - 0x38], rax
mov	eax, 0
cmovne	esi, eax
jmp	0x14002a2b3
jmp	0x14002a2b3
mov	rax, qword ptr [r11]
mov	qword ptr [rbp - 8], r11
mov	rcx, r11
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r11, qword ptr [rbp - 8]
cmp	eax, -1
jne	0x14002a34f
jne	0x14002a34f
mov	r15d, 1
xor	r11d, r11d
jmp	0x14002a29c
jmp	0x14002a29c
nop	dword ptr [rax]
mov	rax, qword ptr [r11]
mov	qword ptr [rbp - 8], r11
mov	rcx, r11
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
je	0x14002a2dd
je	0x14002a2dd
mov	r11, qword ptr [rbp - 8]
movsx	edx, al
jmp	0x14002a609
jmp	0x14002a609
mov	r9, qword ptr [rbp - 0x48]
mov	rdi, qword ptr [rbp - 8]
mov	r11, rsi
mov	r14, r13
cmp	r15, 2
je	0x14002a811
je	0x14002a811
cmp	r15, 1
jne	0x14002a5b3
jne	0x14002a5b3
jmp	0x14002a271
jmp	0x14002a271
mov	rax, qword ptr [r11]
mov	qword ptr [rbp - 8], r11
mov	rcx, r11
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, eax
cmp	eax, -1
je	0x14002a98c
je	0x14002a98c
mov	r11, qword ptr [rbp - 8]
movsx	edx, al
jmp	0x14002a30c
jmp	0x14002a30c
test	r9b, 1
jne	0x14002a5b3
jne	0x14002a5b3
mov	r10, r9
mov	rbx, qword ptr [r12]
mov	rax, qword ptr [r12 + 8]
shr	r10, 1
cmp	rbx, r10
jae	0x14002a956
jae	0x14002a956
add	r10, rbx
cmp	r10, rax
jne	0x14002a5b3
jne	0x14002a5b3
jmp	0x14002a275
jmp	0x14002a275
xor	esi, esi
jmp	0x14002a106
jmp	0x14002a106
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, eax
cmp	eax, -1
je	0x14002a994
je	0x14002a994
movsx	edx, al
jmp	0x14002a421
jmp	0x14002a421
mov	rax, qword ptr [r15]
mov	qword ptr [rbp - 0x10], r11
mov	rcx, r15
mov	dword ptr [rbp - 8], r8d
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rbp - 8]
mov	r11, qword ptr [rbp - 0x10]
cmp	eax, -1
mov	eax, 0
cmovne	rax, r15
mov	qword ptr [rbp - 0x38], rax
mov	eax, 0
cmovne	esi, eax
jmp	0x140029ea6
jmp	0x140029ea6
mov	rax, qword ptr [r11]
mov	dword ptr [rbp - 0x10], r8d
mov	rcx, r11
mov	qword ptr [rbp - 8], r11
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r11, qword ptr [rbp - 8]
mov	r8d, dword ptr [rbp - 0x10]
cmp	eax, -1
mov	eax, 0
cmove	r11, rax
cmovne	edi, eax
jmp	0x140029e87
jmp	0x140029e87
mov	rdi, rax
mov	rax, qword ptr [rax]
mov	byte ptr [rbp - 0x1c], r8b
mov	byte ptr [rbp - 0x10], dl
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rbp - 0x10]
movzx	r8d, byte ptr [rbp - 0x1c]
cmp	eax, -1
mov	eax, 0
cmovne	rax, rdi
mov	qword ptr [rbp - 0x38], rax
mov	eax, 0
cmovne	edx, eax
jmp	0x14002a3d9
jmp	0x14002a3d9
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x14002a3c1
jne	0x14002a3c1
mov	r8d, 1
xor	esi, esi
jmp	0x14002a3c4
jmp	0x14002a3c4
mov	rax, qword ptr [r11]
mov	dword ptr [rbp - 0x10], r8d
mov	rcx, r11
mov	qword ptr [rbp - 8], r11
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r11, qword ptr [rbp - 8]
mov	r8d, dword ptr [rbp - 0x10]
cmp	eax, -1
mov	edi, eax
mov	eax, 0xffffffff
cmove	edi, eax
mov	eax, 0
cmove	r11, rax
jmp	0x140029ef9
jmp	0x140029ef9
sub	rbx, r10
mov	r8d, 0xffffffff
cmp	rbx, rax
jne	0x140029eab
jne	0x140029eab
mov	rsi, qword ptr [rbp - 0x18]
mov	qword ptr [r12], rbx
mov	rax, qword ptr [rsi + 8]
mov	qword ptr [rsi], rax
mov	rbx, qword ptr [r12]
jmp	0x14002a275
jmp	0x14002a275
call	0x1400b3a30
call	0x1400b3a30
xor	edi, edi
jmp	0x14002a24d
jmp	0x14002a24d
xor	r11d, r11d
jmp	0x14002a30c
jmp	0x14002a30c
xor	esi, esi
jmp	0x14002a421
jmp	0x14002a421
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x1c8
movups	xmmword ptr [rsp + 0x160], xmm6
movups	xmmword ptr [rsp + 0x170], xmm7
movups	xmmword ptr [rsp + 0x180], xmm8
movups	xmmword ptr [rsp + 0x190], xmm9
movups	xmmword ptr [rsp + 0x1a0], xmm10
movups	xmmword ptr [rsp + 0x1b0], xmm11
mov	r12, qword ptr [rsp + 0x230]
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [r9 + 8]
mov	r14, qword ptr [rsp + 0x238]
mov	rsi, rcx
mov	rcx, qword ptr [rip + 0x93dd1]
mov	rdi, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [r12 + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x14002acef
jae	0x14002acef
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x14002acef
je	0x14002acef
mov	r8, qword ptr [rip + 0x9424f]
xor	r9d, r9d
lea	rdx, [rip + 0x96155]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x14002acef
je	0x14002acef
mov	rax, qword ptr [rax + 0x10]
mov	rdx, rdi
mov	dword ptr [rsp + 0x9c], 0
lea	rcx, [rsp + 0x80]
lea	r9, [rsp + 0x60]
lea	r8, [rsp + 0x70]
movdqu	xmm5, xmmword ptr [rax + 0xc8]
movdqu	xmm4, xmmword ptr [rax + 0xd8]
movdqu	xmm3, xmmword ptr [rax + 0xe8]
movdqu	xmm2, xmmword ptr [rax + 0xf8]
movdqu	xmm1, xmmword ptr [rax + 0x108]
movdqu	xmm0, xmmword ptr [rax + 0x118]
movups	xmmword ptr [rsp + 0x100], xmm5
movdqu	xmm7, xmmword ptr [rax + 0x168]
movdqu	xmm6, xmmword ptr [rax + 0x178]
movups	xmmword ptr [rsp + 0x110], xmm4
movdqu	xmm10, xmmword ptr [rax + 0x138]
movdqu	xmm9, xmmword ptr [rax + 0x148]
movups	xmmword ptr [rsp + 0x120], xmm3
movdqu	xmm8, xmmword ptr [rax + 0x158]
movups	xmmword ptr [rsp + 0x130], xmm2
movdqu	xmm11, xmmword ptr [rax + 0x128]
lea	rax, [rsp + 0x9c]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xa0]
mov	qword ptr [rsp + 0x78], rbx
movups	xmmword ptr [rsp + 0x140], xmm1
movups	xmmword ptr [rsp + 0x150], xmm0
mov	qword ptr [rsp + 0x70], r15
mov	qword ptr [rsp + 0x60], rbp
mov	qword ptr [rsp + 0x68], r13
mov	qword ptr [rsp + 0x38], r12
movups	xmmword ptr [rsp + 0xa0], xmm11
movups	xmmword ptr [rsp + 0xb0], xmm10
movups	xmmword ptr [rsp + 0xc0], xmm9
movups	xmmword ptr [rsp + 0xd0], xmm8
movups	xmmword ptr [rsp + 0xe0], xmm7
movups	xmmword ptr [rsp + 0xf0], xmm6
mov	qword ptr [rsp + 0x30], 0xc
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x98]
mov	qword ptr [rsp + 0x20], rax
call	0x14002d180
call	0x14002d180
mov	rax, qword ptr [rsp + 0x88]
movabs	rcx, 0xffffffff00000000
mov	rdi, qword ptr [rsp + 0x80]
and	rbx, rcx
mov	ecx, dword ptr [rsp + 0x9c]
mov	edx, eax
mov	qword ptr [rsp + 0x80], rdi
or	rbx, rdx
mov	qword ptr [rsp + 0x88], rax
mov	rdx, rdi
test	ecx, ecx
je	0x14002ac68
je	0x14002ac68
or	dword ptr [r14], 4
cmp	eax, -1
sete	r12b
test	rdi, rdi
setne	al
and	al, r12b
mov	r15d, eax
jne	0x14002ac88
jne	0x14002ac88
cmp	r13d, -1
sete	al
test	rbp, rbp
je	0x14002ac08
je	0x14002ac08
test	al, al
jne	0x14002acc0
jne	0x14002acc0
cmp	al, r12b
jne	0x14002ac11
jne	0x14002ac11
or	dword ptr [r14], 2
mov	qword ptr [rsi], rdx
mov	rax, rsi
mov	qword ptr [rsi + 8], rbx
movups	xmm6, xmmword ptr [rsp + 0x160]
movups	xmm7, xmmword ptr [rsp + 0x170]
movups	xmm8, xmmword ptr [rsp + 0x180]
movups	xmm9, xmmword ptr [rsp + 0x190]
movups	xmm10, xmmword ptr [rsp + 0x1a0]
movups	xmm11, xmmword ptr [rsp + 0x1b0]
add	rsp, 0x1c8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x240]
mov	r8d, dword ptr [rsp + 0x98]
mov	dword ptr [rcx + 0x10], r8d
jmp	0x14002abdb
jmp	0x14002abdb
nop	dword ptr [rax]
mov	rax, qword ptr [rdi + 0x18]
xor	r12d, r12d
cmp	qword ptr [rdi + 0x10], rax
jb	0x14002abf4
jb	0x14002abf4
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, 0
cmp	eax, -1
cmove	r12d, r15d
cmovne	rdx, rdi
jmp	0x14002abf4
jmp	0x14002abf4
nop	word ptr [rax + rax]
mov	rdi, qword ptr [rbp + 0x18]
xor	eax, eax
cmp	qword ptr [rbp + 0x10], rdi
jb	0x14002ac08
jb	0x14002ac08
mov	rax, qword ptr [rbp]
mov	qword ptr [rsp + 0x58], rdx
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rdx, qword ptr [rsp + 0x58]
cmp	eax, -1
sete	al
jmp	0x14002ac08
jmp	0x14002ac08
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
add	rsp, -0x80
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
lea	rax, [rsp + 0x74]
mov	rbx, rcx
lea	r9, [rsp + 0x50]
mov	qword ptr [rsp + 0x74], 0
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0xc8]
lea	r8, [rsp + 0x60]
mov	dword ptr [rsp + 0x7c], 0
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xb8]
mov	qword ptr [rsp + 0x68], r11
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0xb0]
movups	xmmword ptr [rsp + 0x50], xmm0
mov	qword ptr [rsp + 0x20], rax
call	0x14002ad90
call	0x14002ad90
mov	rax, rbx
sub	rsp, -0x80
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x208
movups	xmmword ptr [rsp + 0x1a0], xmm6
movups	xmmword ptr [rsp + 0x1b0], xmm7
movups	xmmword ptr [rsp + 0x1c0], xmm8
movups	xmmword ptr [rsp + 0x1d0], xmm9
movups	xmmword ptr [rsp + 0x1e0], xmm10
movups	xmmword ptr [rsp + 0x1f0], xmm11
movdqu	xmm6, xmmword ptr [r8]
movdqu	xmm7, xmmword ptr [r9]
mov	r15, qword ptr [rsp + 0x278]
mov	r14, rcx
mov	rcx, qword ptr [rip + 0x939ed]
mov	qword ptr [rsp + 0x258], rdx
movups	xmmword ptr [rsp + 0xc0], xmm6
movups	xmmword ptr [rsp + 0xb0], xmm7
call	0x140022a70
call	0x140022a70
mov	rsi, qword ptr [rsp + 0x270]
mov	rdx, qword ptr [rsi + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x14002d09a
jae	0x14002d09a
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x14002d09a
je	0x14002d09a
mov	r8, qword ptr [rip + 0x93e4f]
xor	r9d, r9d
lea	rdx, [rip + 0x95d55]
call	0x1400b35e0
call	0x1400b35e0
mov	qword ptr [rsp + 0x70], rax
test	rax, rax
je	0x14002d09a
je	0x14002d09a
mov	rcx, qword ptr [rip + 0x93a6b]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x270]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r13, qword ptr [rax + rdx*8]
test	r13, r13
je	0x14002d09a
je	0x14002d09a
mov	rcx, qword ptr [rsp + 0x288]
xor	esi, esi
call	0x140015a08
call	0x140015a08
mov	rdx, qword ptr [rsp + 0xb0]
mov	dword ptr [rsp + 0xd8], 0
mov	r10, rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0x60], 0
mov	qword ptr [rsp + 0x58], r10
mov	r12d, dword ptr [rsp + 0xc8]
mov	dword ptr [rsp + 0x64], eax
lea	rax, [rip - 0x89f9]
mov	rbx, qword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x68], rax
mov	qword ptr [rsp + 0x250], r14
mov	r14, r13
mov	qword ptr [rsp + 0x278], r15
mov	r15, rdx
cmp	r12d, -1
sete	r13b
test	rbx, rbx
setne	r8b
and	r8b, r13b
jne	0x14002b230
jne	0x14002b230
mov	r8d, r13d
cmp	dword ptr [rsp + 0x64], -1
sete	dil
test	r15, r15
je	0x14002af2e
je	0x14002af2e
test	dil, dil
jne	0x14002b250
jne	0x14002b250
xor	r8d, edi
mov	rax, qword ptr [rsp + 0x58]
cmp	rsi, rax
setb	bpl
and	bpl, r8b
je	0x14002b290
je	0x14002b290
mov	edx, dword ptr [rsp + 0x60]
test	edx, edx
jne	0x14002b3a0
jne	0x14002b3a0
mov	r15, qword ptr [rsp + 0x288]
add	r15, rsi
movzx	ebx, byte ptr [r15]
movzx	eax, byte ptr [r14 + rbx + 0x139]
mov	rdx, rbx
test	al, al
jne	0x14002af94
jne	0x14002af94
mov	rax, qword ptr [r14]
mov	rcx, qword ptr [rsp + 0x68]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, rcx
jne	0x14002b310
jne	0x14002b310
test	dl, dl
je	0x14002af9c
je	0x14002af9c
mov	byte ptr [r14 + rbx + 0x139], dl
mov	eax, edx
cmp	al, 0x25
je	0x14002b150
je	0x14002b150
movzx	ecx, byte ptr [r15]
mov	rax, qword ptr [r14 + 0x30]
mov	rbx, qword ptr [rsp + 0xc0]
test	byte ptr [rax + rcx*2], 0x20
jne	0x14002b088
jne	0x14002b088
mov	rax, qword ptr [r14]
test	rbx, rbx
movsx	edx, cl
mov	rcx, r14
setne	bpl
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	r8d, r13d
mov	edi, eax
and	r8b, bpl
jne	0x14002b380
jne	0x14002b380
mov	edx, r12d
mov	rax, qword ptr [r14]
movsx	edx, dl
mov	rcx, r14
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	dil, al
je	0x14002b050
je	0x14002b050
mov	rax, qword ptr [r14]
movsx	edx, byte ptr [r15]
mov	rcx, r14
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	edi, eax
test	r13b, r13b
je	0x14002b008
je	0x14002b008
test	bpl, bpl
jne	0x14002b3b8
jne	0x14002b3b8
mov	edx, r12d
mov	rax, qword ptr [r14]
movsx	edx, dl
mov	rcx, r14
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rbx, qword ptr [rsp + 0xc0]
cmp	dil, al
je	0x14002b050
je	0x14002b050
mov	dword ptr [rsp + 0x60], 4
mov	rbx, qword ptr [rsp + 0xc0]
mov	dword ptr [rsp + 0xd8], 4
mov	r15, qword ptr [rsp + 0xb0]
add	rsi, 1
jmp	0x14002aefc
jmp	0x14002aefc
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14002b440
jae	0x14002b440
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
mov	r15, qword ptr [rsp + 0xb0]
mov	r12d, 0xffffffff
mov	dword ptr [rsp + 0xc8], 0xffffffff
jmp	0x14002b047
jmp	0x14002b047
nop	dword ptr [rax]
test	rbx, rbx
mov	r15, qword ptr [rsp + 0xb0]
setne	r11b
and	r11b, r13b
jne	0x14002b0e6
jne	0x14002b0e6
test	r15, r15
setne	r8b
and	r8b, dil
jne	0x14002b110
jne	0x14002b110
mov	r8d, edi
cmp	r13b, r8b
je	0x14002b047
je	0x14002b047
mov	eax, r12d
test	r11b, r11b
jne	0x14002b128
jne	0x14002b128
mov	rcx, qword ptr [r14 + 0x30]
movzx	eax, al
test	byte ptr [rcx + rax*2], 0x20
je	0x14002b047
je	0x14002b047
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14002b1e0
jae	0x14002b1e0
mov	dword ptr [rsp + 0xc8], 0xffffffff
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x14002b202
jae	0x14002b202
xor	r13d, r13d
test	r15, r15
mov	r11d, ebp
mov	r12d, 0xffffffff
setne	r8b
and	r8b, dil
je	0x14002b0a8
je	0x14002b0a8
nop	dword ptr [rax]
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x14002b400
jae	0x14002b400
xor	r8d, r8d
jmp	0x14002b0ab
jmp	0x14002b0ab
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14002b450
jae	0x14002b450
movzx	r8d, byte ptr [rax]
mov	rcx, qword ptr [r14 + 0x30]
test	byte ptr [rcx + r8*2], 0x20
jne	0x14002b0d3
jne	0x14002b0d3
jmp	0x14002b047
jmp	0x14002b047
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x288]
lea	r15, [rsi + 1]
movzx	ebx, byte ptr [rax + rsi + 1]
movzx	edx, byte ptr [r14 + rbx + 0x139]
mov	rcx, rbx
test	dl, dl
jne	0x14002b19a
jne	0x14002b19a
mov	rax, qword ptr [r14]
lea	rdx, [rip - 0x8c9b]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, rdx
jne	0x14002b3e0
jne	0x14002b3e0
test	cl, cl
je	0x14002b3d0
je	0x14002b3d0
mov	byte ptr [r14 + rbx + 0x139], cl
mov	edx, ecx
mov	dword ptr [rsp + 0xdc], 0
cmp	dl, 0x45
je	0x14002b328
je	0x14002b328
cmp	dl, 0x4f
je	0x14002b328
je	0x14002b328
mov	rsi, r15
lea	eax, [rdx - 0x25]
cmp	al, 0x54
ja	0x14002b024
ja	0x14002b024
lea	rcx, [rip + 0x8e7b0]
movzx	eax, al
movsxd	rax, dword ptr [rcx + rax*4]
add	rax, rcx
jmp	rax
jmp	rax
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x18]
mov	dword ptr [rsp + 0xc8], 0xffffffff
cmp	qword ptr [rbx + 0x10], rax
jb	0x14002b0f4
jb	0x14002b0f4
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r12d, eax
cmp	eax, -1
jne	0x14002b0f4
jne	0x14002b0f4
mov	r13d, ebp
xor	r11d, r11d
xor	ebx, ebx
mov	qword ptr [rsp + 0xc0], 0
jmp	0x14002b09c
jmp	0x14002b09c
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x14002b475
jae	0x14002b475
xor	r8d, r8d
jmp	0x14002af17
jmp	0x14002af17
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jb	0x14002af31
jb	0x14002af31
mov	rax, qword ptr [r15]
mov	byte ptr [rsp + 0x78], r8b
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, byte ptr [rsp + 0x78]
cmp	eax, -1
jne	0x14002af31
jne	0x14002af31
mov	qword ptr [rsp + 0xb0], 0
xor	r8d, 1
jmp	0x14002af31
jmp	0x14002af31
mov	r10, qword ptr [rsp + 0x58]
mov	r14, qword ptr [rsp + 0x250]
mov	r15, qword ptr [rsp + 0x278]
cmp	rsi, r10
jne	0x14002b2b2
jne	0x14002b2b2
mov	eax, dword ptr [rsp + 0x60]
test	eax, eax
je	0x14002b2b6
je	0x14002b2b6
or	dword ptr [r15], 4
movdqu	xmm1, xmmword ptr [rsp + 0xc0]
mov	rax, r14
movups	xmmword ptr [r14], xmm1
movups	xmm6, xmmword ptr [rsp + 0x1a0]
movups	xmm7, xmmword ptr [rsp + 0x1b0]
movups	xmm8, xmmword ptr [rsp + 0x1c0]
movups	xmm9, xmmword ptr [rsp + 0x1d0]
movups	xmm10, xmmword ptr [rsp + 0x1e0]
movups	xmm11, xmmword ptr [rsp + 0x1f0]
add	rsp, 0x208
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	
movsx	edx, bl
xor	r8d, r8d
mov	rcx, r14
call	rax
call	rax
mov	edx, eax
jmp	0x14002af86
jmp	0x14002af86
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x288]
add	rsi, 2
movzx	ebx, byte ptr [rax + rsi]
movzx	edx, byte ptr [r14 + rbx + 0x139]
mov	rcx, rbx
test	dl, dl
jne	0x14002b1ba
jne	0x14002b1ba
mov	rax, qword ptr [r14]
lea	rdx, [rip - 0x8e76]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, rdx
jne	0x14002ca90
jne	0x14002ca90
test	cl, cl
je	0x14002b024
je	0x14002b024
mov	byte ptr [r14 + rbx + 0x139], cl
mov	edx, ecx
jmp	0x14002b1ba
jmp	0x14002b1ba
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14002caa2
jae	0x14002caa2
movzx	edx, byte ptr [rax]
mov	ebp, r8d
jmp	0x14002afda
jmp	0x14002afda
nop	dword ptr [rax]
mov	r14, qword ptr [rsp + 0x250]
mov	r15, qword ptr [rsp + 0x278]
jmp	0x14002b2b2
jmp	0x14002b2b2
nop	dword ptr [rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14002cac5
jae	0x14002cac5
movzx	edx, byte ptr [rax]
jmp	0x14002b00b
jmp	0x14002b00b
nop	
mov	rsi, r15
jmp	0x14002b024
jmp	0x14002b024
nop	dword ptr [rax + rax]
mov	rcx, r14
movsx	edx, bl
xor	r8d, r8d
call	rax
call	rax
mov	ecx, eax
test	cl, cl
jne	0x14002b190
jne	0x14002b190
jmp	0x14002b3d0
jmp	0x14002b3d0
nop	word ptr [rax + rax]
mov	rax, qword ptr [r15]
mov	byte ptr [rsp + 0x7f], r8b
mov	rcx, r15
mov	byte ptr [rsp + 0x78], r11b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r11d, byte ptr [rsp + 0x78]
movzx	r8d, byte ptr [rsp + 0x7f]
cmp	eax, -1
jne	0x14002b11e
jne	0x14002b11e
mov	qword ptr [rsp + 0xb0], 0
xor	r15d, r15d
jmp	0x14002b0ab
jmp	0x14002b0ab
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x14002b066
jmp	0x14002b066
nop	
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x14002b0b8
jne	0x14002b0b8
mov	qword ptr [rsp + 0xc0], 0
xor	ebx, ebx
jmp	0x14002b0b8
jmp	0x14002b0b8
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x78], r8b
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, byte ptr [rsp + 0x78]
cmp	eax, -1
jne	0x14002b23e
jne	0x14002b23e
mov	qword ptr [rsp + 0xc0], 0
jmp	0x14002af17
jmp	0x14002af17
mov	rax, qword ptr [rsp + 0x70]
lea	rcx, [rsp + 0xa0]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	rax, qword ptr [rax + 0x10]
movdqu	xmm5, xmmword ptr [rax + 0x128]
movdqu	xmm4, xmmword ptr [rax + 0x138]
movdqu	xmm3, xmmword ptr [rax + 0x148]
movdqu	xmm2, xmmword ptr [rax + 0x158]
movdqu	xmm1, xmmword ptr [rax + 0x168]
movdqu	xmm0, xmmword ptr [rax + 0x178]
movdqu	xmm7, xmmword ptr [rax + 0x108]
movdqu	xmm6, xmmword ptr [rax + 0x118]
movdqu	xmm10, xmmword ptr [rax + 0xd8]
movdqu	xmm9, xmmword ptr [rax + 0xe8]
movdqu	xmm8, xmmword ptr [rax + 0xf8]
movdqu	xmm11, xmmword ptr [rax + 0xc8]
lea	rax, [rsp + 0xd8]
movups	xmmword ptr [rsp + 0x140], xmm5
movdqu	xmm5, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
movups	xmmword ptr [rsp + 0x150], xmm4
mov	rax, qword ptr [rsp + 0x270]
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
movups	xmmword ptr [rsp + 0x160], xmm3
movups	xmmword ptr [rsp + 0x170], xmm2
movups	xmmword ptr [rsp + 0x180], xmm1
movups	xmmword ptr [rsp + 0x190], xmm0
movups	xmmword ptr [rsp + 0x90], xmm4
movups	xmmword ptr [rsp + 0x80], xmm5
movups	xmmword ptr [rsp + 0xe0], xmm11
movups	xmmword ptr [rsp + 0xf0], xmm10
movups	xmmword ptr [rsp + 0x100], xmm9
movups	xmmword ptr [rsp + 0x110], xmm8
movups	xmmword ptr [rsp + 0x120], xmm7
movups	xmmword ptr [rsp + 0x130], xmm6
mov	qword ptr [rsp + 0x38], rax
lea	rax, [rsp + 0xe0]
mov	rdx, qword ptr [rsp + 0x258]
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x30], 0x18
call	0x140029de0
call	0x140029de0
mov	rax, qword ptr [rsp + 0xa0]
mov	r12d, dword ptr [rsp + 0xa8]
mov	r15, qword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0xa0], rax
mov	rbx, rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0xc8], r12d
mov	dword ptr [rsp + 0x60], eax
test	eax, eax
jne	0x14002b047
jne	0x14002b047
movsxd	rax, dword ptr [rsp + 0xdc]
mov	rcx, rax
imul	rax, rax, 0x2aaaaaab
mov	r8d, ecx
sar	r8d, 0x1f
sar	rax, 0x21
sub	eax, r8d
lea	eax, [rax + rax*2]
shl	eax, 2
sub	ecx, eax
mov	rax, qword ptr [rsp + 0x280]
mov	dword ptr [rax + 0x10], ecx
mov	rax, qword ptr [rsp + 0x290]
or	word ptr [rax], 0x408
jmp	0x14002b047
jmp	0x14002b047
mov	rcx, qword ptr [rsp + 0xc0]
test	rcx, rcx
je	0x14002b699
je	0x14002b699
test	r13b, r13b
jne	0x14002cdf0
jne	0x14002cdf0
mov	rax, qword ptr [r14 + 0x30]
movzx	r12d, r12b
test	byte ptr [rax + r12*2], 0x20
jne	0x14002cc3a
jne	0x14002cc3a
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x1f
movdqu	xmm0, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 1
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm2, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm0
movups	xmmword ptr [rsp + 0x80], xmm2
call	0x140029770
call	0x140029770
mov	rax, qword ptr [rsp + 0xa0]
mov	r12d, dword ptr [rsp + 0xa8]
mov	r15, qword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0xa0], rax
mov	rbx, rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0xc8], r12d
mov	dword ptr [rsp + 0x60], eax
test	eax, eax
jne	0x14002b047
jne	0x14002b047
mov	eax, dword ptr [rsp + 0xdc]
mov	rdi, qword ptr [rsp + 0x280]
mov	dword ptr [rdi + 0xc], eax
mov	rax, qword ptr [rsp + 0x290]
or	word ptr [rax], 0x410
jmp	0x14002b047
jmp	0x14002b047
mov	rax, qword ptr [rsp + 0x70]
mov	rdx, qword ptr [rsp + 0x258]
lea	rcx, [rsp + 0xa0]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	rax, qword ptr [rax + 0x10]
movdqu	xmm3, xmmword ptr [rax + 0x88]
movdqu	xmm2, xmmword ptr [rax + 0x98]
movdqu	xmm5, xmmword ptr [rax + 0x68]
movdqu	xmm4, xmmword ptr [rax + 0x78]
movdqu	xmm1, xmmword ptr [rax + 0xa8]
movdqu	xmm0, xmmword ptr [rax + 0xb8]
movdqu	xmm6, xmmword ptr [rax + 0x58]
lea	rax, [rsp + 0xd8]
mov	qword ptr [rsp + 0x30], 0xe
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x270]
movups	xmmword ptr [rsp + 0x110], xmm3
movdqu	xmm3, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x38], rax
lea	rax, [rsp + 0xe0]
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x120], xmm2
movdqu	xmm2, xmmword ptr [rsp + 0xc0]
movups	xmmword ptr [rsp + 0xe0], xmm6
movups	xmmword ptr [rsp + 0xf0], xmm5
movups	xmmword ptr [rsp + 0x100], xmm4
movups	xmmword ptr [rsp + 0x130], xmm1
movups	xmmword ptr [rsp + 0x140], xmm0
movups	xmmword ptr [rsp + 0x90], xmm2
movups	xmmword ptr [rsp + 0x80], xmm3
call	0x140029de0
call	0x140029de0
mov	rax, qword ptr [rsp + 0xa0]
mov	r12d, dword ptr [rsp + 0xa8]
mov	r15, qword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0xa0], rax
mov	rbx, rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0xc8], r12d
mov	dword ptr [rsp + 0x60], eax
test	eax, eax
jne	0x14002b047
jne	0x14002b047
movsxd	rax, dword ptr [rsp + 0xdc]
mov	rcx, rax
imul	rax, rax, -0x6db6db6d
mov	r8d, ecx
sar	r8d, 0x1f
shr	rax, 0x20
add	eax, ecx
sar	eax, 2
sub	eax, r8d
lea	r8d, [rax*8]
sub	r8d, eax
mov	rax, qword ptr [rsp + 0x280]
sub	ecx, r8d
mov	dword ptr [rax + 0x18], ecx
mov	rax, qword ptr [rsp + 0x290]
or	byte ptr [rax], 2
jmp	0x14002b047
jmp	0x14002b047
mov	rbx, qword ptr [rsp + 0xc0]
mov	r15, qword ptr [rsp + 0xb0]
test	rbx, rbx
setne	r11b
and	r11b, r13b
jne	0x14002b997
jne	0x14002b997
test	r15, r15
setne	r8b
and	r8b, dil
jne	0x14002b9bd
jne	0x14002b9bd
mov	r8d, edi
cmp	r13b, r8b
je	0x14002b047
je	0x14002b047
mov	eax, r12d
test	r11b, r11b
jne	0x14002ca69
jne	0x14002ca69
mov	rcx, qword ptr [r14 + 0x30]
movzx	eax, al
test	byte ptr [rcx + rax*2], 0x20
je	0x14002b047
je	0x14002b047
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14002caea
jae	0x14002caea
mov	dword ptr [rsp + 0xc8], 0xffffffff
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x14002ce6b
jae	0x14002ce6b
xor	r13d, r13d
test	r15, r15
mov	r11d, ebp
mov	r12d, 0xffffffff
setne	r8b
and	r8b, dil
je	0x14002b94d
je	0x14002b94d
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x14002ce30
jae	0x14002ce30
xor	r8d, r8d
jmp	0x14002b950
jmp	0x14002b950
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x16e
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 1
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm5, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 3
movups	xmmword ptr [rsp + 0x90], xmm4
movups	xmmword ptr [rsp + 0x80], xmm5
call	0x140029770
call	0x140029770
mov	rax, qword ptr [rsp + 0xa0]
mov	r12d, dword ptr [rsp + 0xa8]
mov	r15, qword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0xa0], rax
mov	rbx, rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0xc8], r12d
mov	dword ptr [rsp + 0x60], eax
test	eax, eax
jne	0x14002b047
jne	0x14002b047
mov	eax, dword ptr [rsp + 0xdc]
mov	rdi, qword ptr [rsp + 0x280]
sub	eax, 1
mov	dword ptr [rdi + 0x1c], eax
mov	rax, qword ptr [rsp + 0x290]
or	byte ptr [rax], 4
jmp	0x14002b047
jmp	0x14002b047
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x270f
movdqu	xmm5, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm0, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 4
movups	xmmword ptr [rsp + 0x90], xmm5
movups	xmmword ptr [rsp + 0x80], xmm0
call	0x140029770
call	0x140029770
mov	rax, qword ptr [rsp + 0xa0]
mov	r12d, dword ptr [rsp + 0xa8]
mov	r15, qword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0xa0], rax
mov	rbx, rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0xc8], r12d
mov	dword ptr [rsp + 0x60], eax
test	eax, eax
jne	0x14002b047
jne	0x14002b047
mov	eax, dword ptr [rsp + 0xdc]
mov	rdi, qword ptr [rsp + 0x280]
sub	eax, 0x76c
mov	dword ptr [rdi + 0x14], eax
mov	rax, qword ptr [rsp + 0x290]
mov	rdi, qword ptr [rsp + 0x290]
movzx	eax, byte ptr [rax + 1]
mov	byte ptr [rsp + 0x78], al
and	eax, 0xfffffff9
or	eax, 4
mov	byte ptr [rdi + 1], al
jmp	0x14002b047
jmp	0x14002b047
lea	rbx, [rsp + 0xc0]
mov	rcx, rbx
call	0x1400208f0
call	0x1400208f0
mov	rdx, qword ptr [r14 + 0x30]
movzx	eax, al
test	byte ptr [rdx + rax*2], 1
jne	0x14002cb3c
jne	0x14002cb3c
mov	dword ptr [rsp + 0x60], 4
mov	r12d, dword ptr [rsp + 0xc8]
mov	rbx, qword ptr [rsp + 0xc0]
mov	r15, qword ptr [rsp + 0xb0]
mov	dword ptr [rsp + 0xd8], 4
jmp	0x14002b047
jmp	0x14002b047
mov	rax, qword ptr [rsp + 0x290]
lea	rcx, [rsp + 0xa0]
movdqu	xmm2, xmmword ptr [rsp + 0xc0]
movdqu	xmm3, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x70]
movups	xmmword ptr [rsp + 0x90], xmm2
mov	rax, qword ptr [rax + 0x10]
movups	xmmword ptr [rsp + 0x80], xmm3
mov	rax, qword ptr [rax + 0x30]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x280]
mov	rdx, qword ptr [rsp + 0x258]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	qword ptr [rsp + 0x30], rax
lea	rax, [rsp + 0xd8]
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x270]
mov	qword ptr [rsp + 0x20], rax
call	0x14002ad90
call	0x14002ad90
mov	rax, qword ptr [rsp + 0xa0]
mov	r12d, dword ptr [rsp + 0xa8]
mov	r15, qword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0xa0], rax
mov	rbx, rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0xc8], r12d
mov	dword ptr [rsp + 0x60], eax
test	eax, eax
jne	0x14002b047
jne	0x14002b047
mov	rax, qword ptr [rsp + 0x290]
or	byte ptr [rax + 1], 4
jmp	0x14002b047
jmp	0x14002b047
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0xc
movdqu	xmm0, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 1
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm2, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm0
movups	xmmword ptr [rsp + 0x80], xmm2
call	0x140029770
call	0x140029770
mov	rax, qword ptr [rsp + 0xa0]
mov	r12d, dword ptr [rsp + 0xa8]
mov	r15, qword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0xa0], rax
mov	rbx, rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0xc8], r12d
mov	dword ptr [rsp + 0x60], eax
test	eax, eax
jne	0x14002b047
jne	0x14002b047
mov	eax, dword ptr [rsp + 0xdc]
mov	rdi, qword ptr [rsp + 0x280]
sub	eax, 1
mov	dword ptr [rdi + 0x10], eax
mov	rax, qword ptr [rsp + 0x290]
or	byte ptr [rax], 8
jmp	0x14002b047
jmp	0x14002b047
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0xc
movdqu	xmm2, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 1
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm3, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm2
movups	xmmword ptr [rsp + 0x80], xmm3
call	0x140029770
call	0x140029770
mov	rax, qword ptr [rsp + 0xa0]
mov	r12d, dword ptr [rsp + 0xa8]
mov	r15, qword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0xa0], rax
mov	rbx, rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0xc8], r12d
mov	dword ptr [rsp + 0x60], eax
test	eax, eax
jne	0x14002b047
jne	0x14002b047
movsxd	rax, dword ptr [rsp + 0xdc]
mov	rcx, rax
imul	rax, rax, 0x2aaaaaab
mov	r8d, ecx
sar	r8d, 0x1f
sar	rax, 0x21
sub	eax, r8d
lea	eax, [rax + rax*2]
shl	eax, 2
sub	ecx, eax
mov	rax, qword ptr [rsp + 0x280]
mov	dword ptr [rax + 8], ecx
mov	rax, qword ptr [rsp + 0x290]
or	byte ptr [rax], 1
jmp	0x14002b047
jmp	0x14002b047
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x3b
movdqu	xmm3, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm4, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm3
movups	xmmword ptr [rsp + 0x80], xmm4
call	0x140029770
call	0x140029770
mov	rax, qword ptr [rsp + 0xa0]
mov	r12d, dword ptr [rsp + 0xa8]
mov	r15, qword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0xa0], rax
mov	rbx, rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0xc8], r12d
mov	dword ptr [rsp + 0x60], eax
test	eax, eax
jne	0x14002b047
jne	0x14002b047
mov	eax, dword ptr [rsp + 0xdc]
mov	rdi, qword ptr [rsp + 0x280]
mov	dword ptr [rdi + 4], eax
jmp	0x14002b047
jmp	0x14002b047
movzx	eax, byte ptr [r14 + 0x38]
cmp	al, 1
je	0x14002c00f
je	0x14002c00f
test	al, al
je	0x14002cc64
je	0x14002cc64
mov	rax, qword ptr [r14]
lea	rdx, [rip - 0x9b92]
mov	rax, qword ptr [rax + 0x38]
cmp	rax, rdx
jne	0x14002cdd0
jne	0x14002cdd0
mov	r9d, 0x4d
lea	r15, [rsp + 0xe0]
mov	dword ptr [rsp + 0xe0], 0x253a4825
mov	word ptr [rsp + 0xe4], r9w
movdqu	xmm2, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
movdqu	xmm3, xmmword ptr [rsp + 0xb0]
movups	xmmword ptr [rsp + 0x90], xmm2
movups	xmmword ptr [rsp + 0x80], xmm3
mov	rax, qword ptr [rsp + 0x290]
mov	qword ptr [rsp + 0x38], r15
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x280]
mov	rdx, qword ptr [rsp + 0x258]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	qword ptr [rsp + 0x30], rax
lea	rax, [rsp + 0xd8]
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x270]
mov	qword ptr [rsp + 0x20], rax
call	0x14002ad90
call	0x14002ad90
mov	rax, qword ptr [rsp + 0xa0]
mov	r12d, dword ptr [rsp + 0xa8]
mov	qword ptr [rsp + 0xa0], rax
mov	rbx, rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0xc8], r12d
mov	dword ptr [rsp + 0x60], eax
mov	r15, qword ptr [rsp + 0xb0]
jmp	0x14002b047
jmp	0x14002b047
mov	rax, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rax + 0x10]
movdqu	xmm0, xmmword ptr [rax + 0x40]
movq	rax, xmm0
movups	xmmword ptr [rsp + 0xe0], xmm0
cmp	byte ptr [rax], 0
je	0x14002c125
je	0x14002c125
movhlps	xmm2, xmm0
movq	rax, xmm2
cmp	byte ptr [rax], 0
jne	0x14002cca4
jne	0x14002cca4
mov	rbx, qword ptr [rsp + 0xc0]
mov	r15, qword ptr [rsp + 0xb0]
jmp	0x14002b047
jmp	0x14002b047
movzx	eax, byte ptr [r14 + 0x38]
cmp	al, 1
je	0x14002c162
je	0x14002c162
test	al, al
je	0x14002cc57
je	0x14002cc57
mov	rax, qword ptr [r14]
lea	rdx, [rip - 0x9ce5]
mov	rax, qword ptr [rax + 0x38]
cmp	rax, rdx
jne	0x14002cdb0
jne	0x14002cdb0
mov	byte ptr [rsp + 0xe8], 0
lea	r15, [rsp + 0xe0]
movabs	rax, 0x53253a4d253a4825
mov	qword ptr [rsp + 0xe0], rax
movdqu	xmm0, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
movdqu	xmm2, xmmword ptr [rsp + 0xb0]
movups	xmmword ptr [rsp + 0x90], xmm0
movups	xmmword ptr [rsp + 0x80], xmm2
jmp	0x14002c05b
jmp	0x14002c05b
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x35
movdqu	xmm3, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm4, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm3
movups	xmmword ptr [rsp + 0x80], xmm4
call	0x140029770
call	0x140029770
mov	rax, qword ptr [rsp + 0xa0]
mov	r12d, dword ptr [rsp + 0xa8]
mov	r15, qword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0xa0], rax
mov	rbx, rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0xc8], r12d
mov	dword ptr [rsp + 0x60], eax
test	eax, eax
jne	0x14002b047
jne	0x14002b047
mov	rdi, qword ptr [rsp + 0x290]
mov	eax, dword ptr [rsp + 0xdc]
mov	edi, dword ptr [rdi]
shl	eax, 0x10
and	eax, 0x3f0000
mov	ecx, edi
mov	dword ptr [rsp + 0x78], edi
or	eax, 0x20
mov	rdi, qword ptr [rsp + 0x290]
and	ecx, 0xffc0ffdf
or	eax, ecx
mov	dword ptr [rdi], eax
jmp	0x14002b047
jmp	0x14002b047
mov	rax, qword ptr [rsp + 0x290]
lea	rcx, [rsp + 0xa0]
movdqu	xmm5, xmmword ptr [rsp + 0xc0]
movdqu	xmm0, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x70]
movups	xmmword ptr [rsp + 0x90], xmm5
mov	rax, qword ptr [rax + 0x10]
movups	xmmword ptr [rsp + 0x80], xmm0
mov	rax, qword ptr [rax + 0x50]
mov	qword ptr [rsp + 0x38], rax
jmp	0x14002c06d
jmp	0x14002c06d
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 6
movdqu	xmm5, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm0, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 1
movups	xmmword ptr [rsp + 0x90], xmm5
movups	xmmword ptr [rsp + 0x80], xmm0
call	0x140029770
call	0x140029770
mov	rax, qword ptr [rsp + 0xa0]
mov	r12d, dword ptr [rsp + 0xa8]
mov	r15, qword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0xa0], rax
mov	rbx, rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0xc8], r12d
mov	dword ptr [rsp + 0x60], eax
test	eax, eax
jne	0x14002b047
jne	0x14002b047
mov	eax, dword ptr [rsp + 0xdc]
mov	rdi, qword ptr [rsp + 0x280]
mov	dword ptr [rdi + 0x18], eax
mov	rax, qword ptr [rsp + 0x290]
or	byte ptr [rax], 2
jmp	0x14002b047
jmp	0x14002b047
mov	rax, qword ptr [rsp + 0x290]
lea	rcx, [rsp + 0xa0]
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
movdqu	xmm5, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x70]
movups	xmmword ptr [rsp + 0x90], xmm4
mov	rax, qword ptr [rax + 0x10]
movups	xmmword ptr [rsp + 0x80], xmm5
mov	rax, qword ptr [rax + 0x10]
mov	qword ptr [rsp + 0x38], rax
jmp	0x14002c06d
jmp	0x14002c06d
lea	rcx, [rsp + 0xc0]
mov	byte ptr [rsp + 0x78], dl
call	0x1400208f0
call	0x1400208f0
cmp	byte ptr [r14 + 0x38], 0
movzx	edx, byte ptr [rsp + 0x78]
mov	edi, eax
je	0x14002cb03
je	0x14002cb03
movzx	edx, byte ptr [r14 + 0x5e]
mov	rbx, qword ptr [rsp + 0xc0]
cmp	dil, dl
je	0x14002cc7e
je	0x14002cc7e
mov	dword ptr [rsp + 0x60], 4
mov	r12d, dword ptr [rsp + 0xc8]
mov	dword ptr [rsp + 0xd8], 4
mov	r15, qword ptr [rsp + 0xb0]
jmp	0x14002b047
jmp	0x14002b047
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x63
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm5, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm4
movups	xmmword ptr [rsp + 0x80], xmm5
call	0x140029770
call	0x140029770
mov	rax, qword ptr [rsp + 0xa0]
mov	r12d, dword ptr [rsp + 0xa8]
mov	r15, qword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0xa0], rax
mov	rbx, rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0xc8], r12d
mov	dword ptr [rsp + 0x60], eax
test	eax, eax
jne	0x14002b047
jne	0x14002b047
mov	rdi, qword ptr [rsp + 0x290]
mov	eax, dword ptr [rsp + 0xdc]
or	word ptr [rdi], 0x480
mov	dword ptr [rdi + 4], eax
jmp	0x14002b047
jmp	0x14002b047
movzx	eax, byte ptr [r14 + 0x38]
cmp	al, 1
je	0x14002c5b6
je	0x14002c5b6
test	al, al
je	0x14002cc71
je	0x14002cc71
mov	rax, qword ptr [r14]
lea	rdx, [rip - 0xa139]
mov	rax, qword ptr [rax + 0x38]
cmp	rax, rdx
jne	0x14002cd90
jne	0x14002cd90
mov	byte ptr [rsp + 0xe8], 0
lea	r15, [rsp + 0xe0]
movabs	rax, 0x79252f64252f6d25
mov	qword ptr [rsp + 0xe0], rax
movdqu	xmm3, xmmword ptr [rsp + 0xc0]
mov	rax, qword ptr [rsp + 0x290]
mov	qword ptr [rsp + 0x38], r15
lea	rcx, [rsp + 0xa0]
movdqu	xmm4, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
movups	xmmword ptr [rsp + 0x90], xmm3
movups	xmmword ptr [rsp + 0x80], xmm4
jmp	0x14002bc66
jmp	0x14002bc66
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x63
movdqu	xmm3, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm4, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm3
movups	xmmword ptr [rsp + 0x80], xmm4
call	0x140029770
call	0x140029770
mov	rax, qword ptr [rsp + 0xa0]
mov	r12d, dword ptr [rsp + 0xa8]
mov	qword ptr [rsp + 0xa0], rax
mov	rbx, rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0xc8], r12d
mov	dword ptr [rsp + 0x60], eax
test	eax, eax
jne	0x14002c0e7
jne	0x14002c0e7
mov	rax, qword ptr [rsp + 0x290]
lea	rbp, [rsp + 0xb0]
lea	rdi, [rsp + 0xc0]
mov	rdx, rbp
mov	rcx, rdi
or	byte ptr [rax + 1], 6
call	0x140020830
call	0x140020830
mov	ebx, dword ptr [rsp + 0xdc]
test	al, al
je	0x14002ce97
je	0x14002ce97
lea	eax, [rbx + 0x64]
cmp	ebx, 0x45
cmovl	ebx, eax
mov	rax, qword ptr [rsp + 0x280]
mov	r12d, dword ptr [rsp + 0xc8]
mov	dword ptr [rax + 0x14], ebx
mov	eax, dword ptr [rsp + 0xb8]
mov	rbx, qword ptr [rsp + 0xc0]
mov	dword ptr [rsp + 0x64], eax
jmp	0x14002c0e7
jmp	0x14002c0e7
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x17
movdqu	xmm5, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm0, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm5
movups	xmmword ptr [rsp + 0x80], xmm0
call	0x140029770
call	0x140029770
mov	rax, qword ptr [rsp + 0xa0]
mov	r12d, dword ptr [rsp + 0xa8]
mov	r15, qword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0xa0], rax
mov	rbx, rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0xc8], r12d
mov	dword ptr [rsp + 0x60], eax
test	eax, eax
jne	0x14002b047
jne	0x14002b047
mov	eax, dword ptr [rsp + 0xdc]
mov	rdi, qword ptr [rsp + 0x280]
mov	dword ptr [rdi + 8], eax
mov	rax, qword ptr [rsp + 0x290]
and	byte ptr [rax], 0xfe
jmp	0x14002b047
jmp	0x14002b047
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x3c
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm5, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm4
movups	xmmword ptr [rsp + 0x80], xmm5
call	0x140029770
call	0x140029770
mov	rax, qword ptr [rsp + 0xa0]
mov	r12d, dword ptr [rsp + 0xa8]
mov	r15, qword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0xa0], rax
mov	rbx, rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0xc8], r12d
mov	dword ptr [rsp + 0x60], eax
test	eax, eax
jne	0x14002b047
jne	0x14002b047
mov	eax, dword ptr [rsp + 0xdc]
mov	rdi, qword ptr [rsp + 0x280]
mov	dword ptr [rdi], eax
jmp	0x14002b047
jmp	0x14002b047
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x35
movdqu	xmm2, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm3, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm2
movups	xmmword ptr [rsp + 0x80], xmm3
call	0x140029770
call	0x140029770
mov	rax, qword ptr [rsp + 0xa0]
mov	r12d, dword ptr [rsp + 0xa8]
mov	r15, qword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0xa0], rax
mov	rbx, rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0xc8], r12d
mov	dword ptr [rsp + 0x60], eax
test	eax, eax
jne	0x14002b047
jne	0x14002b047
mov	rdi, qword ptr [rsp + 0x290]
mov	eax, dword ptr [rsp + 0xdc]
mov	edi, dword ptr [rdi]
shl	eax, 0x10
and	eax, 0x3f0000
mov	ecx, edi
mov	dword ptr [rsp + 0x78], edi
or	eax, 0x40
mov	rdi, qword ptr [rsp + 0x290]
and	ecx, 0xffc0ffbf
or	eax, ecx
mov	dword ptr [rdi], eax
jmp	0x14002b047
jmp	0x14002b047
mov	rax, qword ptr [rsp + 0x290]
lea	rcx, [rsp + 0xa0]
movdqu	xmm0, xmmword ptr [rsp + 0xc0]
movdqu	xmm2, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x70]
movups	xmmword ptr [rsp + 0x90], xmm0
mov	rax, qword ptr [rax + 0x10]
movups	xmmword ptr [rsp + 0x80], xmm2
mov	rax, qword ptr [rax + 0x20]
jmp	0x14002c43a
jmp	0x14002c43a
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14002ce07
jae	0x14002ce07
movzx	r8d, byte ptr [rax]
mov	rcx, qword ptr [r14 + 0x30]
test	byte ptr [rcx + r8*2], 0x20
jne	0x14002b984
jne	0x14002b984
jmp	0x14002b047
jmp	0x14002b047
nop	
mov	rcx, r14
movsx	edx, bl
xor	r8d, r8d
call	rax
call	rax
mov	ecx, eax
jmp	0x14002b363
jmp	0x14002b363
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x78], r8b
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, eax
cmp	eax, -1
je	0x14002cf12
je	0x14002cf12
movzx	ebp, byte ptr [rsp + 0x78]
jmp	0x14002afda
jmp	0x14002afda
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, eax
cmp	eax, -1
jne	0x14002b00b
jne	0x14002b00b
mov	qword ptr [rsp + 0xc0], 0
jmp	0x14002b00b
jmp	0x14002b00b
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	dword ptr [rsp + 0xc8], 0xffffffff
jmp	0x14002b997
jmp	0x14002b997
mov	rcx, r14
mov	byte ptr [rsp + 0x78], dl
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [r14]
movzx	edx, byte ptr [rsp + 0x78]
lea	rcx, [rip - 0xa67e]
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rcx
je	0x14002c46c
je	0x14002c46c
mov	edx, 0x25
mov	rcx, r14
call	rax
call	rax
mov	edx, eax
jmp	0x14002c46c
jmp	0x14002c46c
mov	rax, qword ptr [rsp + 0x270]
lea	rdi, [rsp + 0xd8]
lea	r15, [rsp + 0xe0]
mov	qword ptr [rsp + 0x30], 0xe
mov	qword ptr [rsp + 0x40], rdi
movdqu	xmm5, xmmword ptr [rsp + 0xc0]
lea	rbp, [rsp + 0xa0]
lea	r13, [rsp + 0x80]
mov	qword ptr [rsp + 0x38], rax
mov	r9, r13
mov	rcx, rbp
mov	rax, qword ptr [rip + 0x91d13]
mov	qword ptr [rsp + 0x20], r15
mov	rdx, qword ptr [rsp + 0x258]
lea	r12, [rsp + 0x90]
mov	qword ptr [rsp + 0x28], rax
mov	r8, r12
movdqu	xmm2, xmmword ptr [rsp + 0xb0]
movups	xmmword ptr [rsp + 0x90], xmm5
movups	xmmword ptr [rsp + 0x80], xmm2
call	0x140029de0
call	0x140029de0
mov	rax, qword ptr [rsp + 0xa0]
lea	rdx, [rsp + 0xb0]
mov	rcx, rbx
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xa8]
mov	dword ptr [rsp + 0xc8], eax
call	0x140020830
call	0x140020830
test	al, al
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0x60], eax
jne	0x14002cc1a
jne	0x14002cc1a
or	eax, dword ptr [rsp + 0xe0]
je	0x14002cf2c
je	0x14002cf2c
mov	eax, dword ptr [rsp + 0xb8]
mov	r12d, dword ptr [rsp + 0xc8]
mov	rbx, qword ptr [rsp + 0xc0]
mov	dword ptr [rsp + 0x64], eax
jmp	0x14002c0e7
jmp	0x14002c0e7
mov	rcx, qword ptr [rsp + 0xc0]
call	0x1400919e0
call	0x1400919e0
mov	dword ptr [rsp + 0xc8], 0xffffffff
jmp	0x14002b6ac
jmp	0x14002b6ac
mov	rcx, r14
call	0x140021cb0
call	0x140021cb0
jmp	0x14002c14b
jmp	0x14002c14b
mov	rcx, r14
call	0x140021cb0
call	0x140021cb0
jmp	0x14002bff8
jmp	0x14002bff8
mov	rcx, r14
call	0x140021cb0
call	0x140021cb0
jmp	0x14002c59f
jmp	0x14002c59f
mov	rcx, rbx
mov	r12d, 0xffffffff
call	0x1400919e0
call	0x1400919e0
mov	r15, qword ptr [rsp + 0xb0]
mov	dword ptr [rsp + 0xc8], 0xffffffff
jmp	0x14002b047
jmp	0x14002b047
lea	rax, [rsp + 0xd8]
mov	qword ptr [rsp + 0x30], 2
movdqu	xmm3, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	rdx, qword ptr [rsp + 0x258]
movups	xmmword ptr [rsp + 0x90], xmm3
movdqu	xmm4, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x38], rax
lea	rax, [rsp + 0xe0]
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x80], xmm4
call	0x140029de0
call	0x140029de0
mov	rax, qword ptr [rsp + 0xa0]
mov	r12d, dword ptr [rsp + 0xa8]
mov	qword ptr [rsp + 0xa0], rax
mov	rbx, rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0xc8], r12d
mov	dword ptr [rsp + 0x60], eax
test	eax, eax
jne	0x14002c0e7
jne	0x14002c0e7
mov	r10d, dword ptr [rsp + 0xdc]
test	r10d, r10d
je	0x14002c0e7
je	0x14002c0e7
mov	rax, qword ptr [rsp + 0x290]
mov	r15, qword ptr [rsp + 0xb0]
or	byte ptr [rax + 1], 1
jmp	0x14002b047
jmp	0x14002b047
lea	r15, [rsp + 0xe0]
lea	r8, [rip + 0x8cbce]
mov	rcx, r14
mov	r9, r15
lea	rdx, [r8 - 9]
call	rax
call	rax
jmp	0x14002c5d8
jmp	0x14002c5d8
lea	r15, [rsp + 0xe0]
lea	r8, [rip + 0x8cbbd]
mov	rcx, r14
mov	r9, r15
lea	rdx, [r8 - 9]
call	rax
call	rax
jmp	0x14002c184
jmp	0x14002c184
lea	r15, [rsp + 0xe0]
lea	r8, [rip + 0x8cb94]
mov	rcx, r14
mov	r9, r15
lea	rdx, [r8 - 6]
call	rax
call	rax
jmp	0x14002c031
jmp	0x14002c031
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14002d0ea
jae	0x14002d0ea
movzx	r12d, byte ptr [rax]
jmp	0x14002b699
jmp	0x14002b699
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x14002b965
jne	0x14002b965
xor	r11d, r11d
xor	ebx, ebx
mov	qword ptr [rsp + 0xc0], r11
jmp	0x14002b965
jmp	0x14002b965
nop	dword ptr [rax + rax]
mov	rax, qword ptr [r15]
mov	byte ptr [rsp + 0x7f], r8b
mov	rcx, r15
mov	byte ptr [rsp + 0x78], r11b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r11d, byte ptr [rsp + 0x78]
movzx	r8d, byte ptr [rsp + 0x7f]
cmp	eax, -1
jne	0x14002b9cb
jne	0x14002b9cb
xor	r15d, r15d
mov	qword ptr [rsp + 0xb0], r15
xor	r15d, r15d
jmp	0x14002b950
jmp	0x14002b950
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r12d, eax
cmp	eax, -1
jne	0x14002b9a5
jne	0x14002b9a5
xor	eax, eax
mov	r13d, ebp
xor	r11d, r11d
xor	ebx, ebx
mov	qword ptr [rsp + 0xc0], rax
jmp	0x14002b941
jmp	0x14002b941
mov	rcx, rdi
call	0x1400208f0
call	0x1400208f0
mov	r8d, 0x2a
mov	rcx, r14
movsx	edx, al
call	0x140022410
call	0x140022410
movsx	r12d, al
lea	eax, [r12 - 0x30]
cmp	al, 9
ja	0x14002c714
ja	0x14002c714
mov	rcx, qword ptr [rsp + 0xc0]
call	0x1400919e0
call	0x1400919e0
lea	eax, [rbx + rbx*4]
mov	rdx, rbp
mov	rcx, rdi
mov	dword ptr [rsp + 0xc8], 0xffffffff
lea	ebx, [r12 + rax*2 - 0x30]
mov	dword ptr [rsp + 0xdc], ebx
call	0x140020830
call	0x140020830
test	al, al
je	0x14002d09f
je	0x14002d09f
mov	rax, qword ptr [rsp + 0x290]
sub	ebx, 0x76c
and	byte ptr [rax + 1], 0xfd
jmp	0x14002c71d
jmp	0x14002c71d
mov	qword ptr [rsp + 0xc0], 0
xor	ebp, ebp
xor	ebx, ebx
mov	edx, 0xffffffff
jmp	0x14002afda
jmp	0x14002afda
mov	rcx, rbx
call	0x1400208f0
call	0x1400208f0
cmp	byte ptr [r14 + 0x38], 0
mov	dword ptr [rsp + 0x64], eax
je	0x14002d10b
je	0x14002d10b
movzx	eax, byte ptr [r14 + 0x66]
cmp	byte ptr [rsp + 0x64], al
je	0x14002cf70
je	0x14002cf70
mov	rcx, rbx
call	0x1400208f0
call	0x1400208f0
cmp	byte ptr [r14 + 0x38], 0
mov	ebx, eax
je	0x14002d13f
je	0x14002d13f
movzx	eax, byte ptr [r14 + 0x64]
cmp	bl, al
jne	0x14002cc1a
jne	0x14002cc1a
mov	rax, qword ptr [rsp + 0x270]
xor	ecx, ecx
mov	r9, r13
mov	r8, r12
mov	dword ptr [rsp + 0x28], ecx
mov	rdx, qword ptr [rsp + 0x258]
mov	rcx, rbp
mov	qword ptr [rsp + 0x40], rax
movdqu	xmm3, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x48], rdi
movdqu	xmm4, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x38], 2
mov	dword ptr [rsp + 0x30], 0x17
mov	qword ptr [rsp + 0x20], r15
movups	xmmword ptr [rsp + 0x90], xmm3
movups	xmmword ptr [rsp + 0x80], xmm4
call	0x140029770
call	0x140029770
xor	r8d, r8d
mov	qword ptr [rsp + 0x48], rdi
mov	r9, r13
mov	rax, qword ptr [rsp + 0xa0]
mov	dword ptr [rsp + 0x28], r8d
mov	rcx, rbp
mov	r8, r12
mov	dword ptr [rsp + 0x30], 0x3b
movdqu	xmm0, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0xc0], rax
mov	rdx, qword ptr [rsp + 0x258]
mov	qword ptr [rsp + 0xa0], rax
mov	eax, dword ptr [rsp + 0xa8]
mov	qword ptr [rsp + 0x38], 2
mov	dword ptr [rsp + 0xc8], eax
mov	rax, qword ptr [rsp + 0x270]
movdqu	xmm5, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x20], r15
mov	qword ptr [rsp + 0x40], rax
movups	xmmword ptr [rsp + 0x90], xmm5
movups	xmmword ptr [rsp + 0x80], xmm0
call	0x140029770
call	0x140029770
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
mov	eax, dword ptr [rsp + 0xa8]
mov	dword ptr [rsp + 0xc8], eax
mov	eax, dword ptr [rsp + 0xd8]
mov	dword ptr [rsp + 0x60], eax
jmp	0x14002cc1a
jmp	0x14002cc1a
call	0x1400b3a30
call	0x1400b3a30
mov	rcx, rdi
call	0x1400208f0
call	0x1400208f0
mov	r8d, 0x2a
mov	rcx, r14
movsx	edx, al
call	0x140022410
call	0x140022410
movsx	edi, al
lea	eax, [rdi - 0x30]
cmp	al, 9
ja	0x14002cefb
ja	0x14002cefb
imul	ebx, ebx, 0xa
mov	rcx, qword ptr [rsp + 0xc0]
call	0x1400919e0
call	0x1400919e0
mov	dword ptr [rsp + 0xc8], 0xffffffff
lea	ebx, [rbx + rdi - 0x30]
jmp	0x14002cefb
jmp	0x14002cefb
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r12d, eax
cmp	eax, -1
jne	0x14002b699
jne	0x14002b699
xor	eax, eax
mov	qword ptr [rsp + 0xc0], rax
jmp	0x14002b699
jmp	0x14002b699
mov	rcx, r14
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [r14]
lea	rdx, [rip - 0xac7d]
mov	r8, qword ptr [rax + 0x30]
mov	eax, 0x2d
cmp	r8, rdx
je	0x14002cf48
je	0x14002cf48
mov	edx, 0x2d
mov	rcx, r14
call	r8
call	r8
jmp	0x14002cf48
jmp	0x14002cf48
mov	rcx, r14
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [r14]
lea	rdx, [rip - 0xacb1]
mov	r8, qword ptr [rax + 0x30]
mov	eax, 0x2b
cmp	r8, rdx
je	0x14002cf68
je	0x14002cf68
mov	edx, 0x2b
mov	rcx, r14
call	r8
call	r8
jmp	0x14002cf68
jmp	0x14002cf68
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
lea	rbp, [rsp + 0x50]
mov	rdi, qword ptr [r8 + 8]
mov	rdx, qword ptr [r9]
mov	r13, qword ptr [r8]
mov	rbx, qword ptr [r9 + 8]
mov	r14, qword ptr [rbp + 0x78]
mov	qword ptr [rbp + 0x50], rcx
mov	rcx, qword ptr [rip + 0x9171e]
mov	qword ptr [rbp - 0x10], rdi
mov	dword ptr [rbp - 0x20], edi
mov	qword ptr [rbp - 0x18], rdx
mov	qword ptr [rbp - 8], rdx
call	0x140022a70
call	0x140022a70
mov	rcx, rax
mov	rax, qword ptr [rbp + 0x88]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r8, qword ptr [rax + rcx*8]
test	r8, r8
je	0x14002d712
je	0x14002d712
mov	rax, qword ptr [rbp + 0x80]
lea	rax, [rax*8 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
mov	r10, qword ptr [rbp - 8]
mov	rdx, qword ptr [rbp - 0x18]
mov	r9d, dword ptr [rbp - 0x20]
sub	rsp, rax
cmp	edi, -1
sete	dil
test	r13, r13
lea	r12, [rsp + 0x20]
setne	sil
and	sil, dil
jne	0x14002d555
jne	0x14002d555
cmp	ebx, -1
sete	r15b
test	rdx, rdx
setne	bl
and	bl, r15b
jne	0x14002d5a8
jne	0x14002d5a8
mov	ebx, r15d
cmp	bl, dil
jne	0x14002d438
jne	0x14002d438
mov	qword ptr [rbp - 8], r10
xor	ebx, ebx
xor	esi, esi
xor	edi, edi
nop	word ptr [rax + rax]
cmp	r9d, -1
sete	r8b
test	r13, r13
setne	dl
and	dl, r8b
jne	0x14002d3c8
jne	0x14002d3c8
mov	edx, r8d
cmp	qword ptr [rbp - 8], 0
setne	al
and	al, r15b
mov	r11d, eax
jne	0x14002d340
jne	0x14002d340
mov	r11d, r15d
cmp	dl, r11b
je	0x14002d35e
je	0x14002d35e
test	r13, r13
je	0x14002d2a8
je	0x14002d2a8
test	r8b, r8b
jne	0x14002d3e0
jne	0x14002d3e0
mov	r11d, r9d
test	rbx, rbx
je	0x14002d388
je	0x14002d388
xor	eax, eax
xor	r8d, r8d
jmp	0x14002d2cd
jmp	0x14002d2cd
nop	dword ptr [rax + rax]
add	r8, 1
add	rax, 1
cmp	rax, rbx
jae	0x14002d2fe
jae	0x14002d2fe
lea	rdx, [rdi + rax*8]
cmp	rsi, qword ptr [rdx]
jae	0x14002d2c0
jae	0x14002d2c0
lea	rcx, [r12 + rax*4]
movsxd	r10, dword ptr [rcx]
mov	r10, qword ptr [r14 + r10*8]
cmp	byte ptr [r10 + rsi], r11b
je	0x14002d330
je	0x14002d330
sub	rbx, 1
mov	r10d, dword ptr [r12 + rbx*4]
mov	dword ptr [rcx], r10d
mov	rcx, qword ptr [rdi + rbx*8]
mov	qword ptr [rdx], rcx
cmp	rax, rbx
jb	0x14002d2cd
jb	0x14002d2cd
cmp	rbx, r8
je	0x14002d35e
je	0x14002d35e
mov	rax, qword ptr [r13 + 0x10]
cmp	rax, qword ptr [r13 + 0x18]
jae	0x14002d400
jae	0x14002d400
add	rax, 1
mov	qword ptr [r13 + 0x10], rax
add	rsi, 1
mov	r9d, 0xffffffff
jmp	0x14002d260
jmp	0x14002d260
nop	dword ptr [rax + rax]
add	rax, 1
jmp	0x14002d2c8
jmp	0x14002d2c8
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbp - 8]
mov	rcx, qword ptr [rax + 0x18]
cmp	qword ptr [rax + 0x10], rcx
jae	0x14002d5bd
jae	0x14002d5bd
xor	r11d, r11d
cmp	dl, r11b
jne	0x14002d29a
jne	0x14002d29a
cmp	rbx, 1
je	0x14002d40f
je	0x14002d40f
cmp	rbx, 2
jne	0x14002d388
jne	0x14002d388
cmp	qword ptr [rdi], rsi
je	0x14002d418
je	0x14002d418
cmp	qword ptr [rdi + 8], rsi
je	0x14002d418
je	0x14002d418
nop	dword ptr [rax]
mov	rax, qword ptr [rbp + 0x90]
or	dword ptr [rax], 4
movabs	rax, 0xffffffff00000000
mov	rdi, qword ptr [rbp + 0x50]
and	rax, qword ptr [rbp - 0x10]
or	rax, r9
mov	qword ptr [rdi + 8], rax
mov	rax, rdi
mov	qword ptr [rdi], r13
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [r13 + 0x18]
cmp	qword ptr [r13 + 0x10], rax
jae	0x14002d606
jae	0x14002d606
xor	edx, edx
jmp	0x14002d27a
jmp	0x14002d27a
nop	dword ptr [rax]
mov	rax, qword ptr [r13 + 0x10]
cmp	rax, qword ptr [r13 + 0x18]
jae	0x14002d63c
jae	0x14002d63c
movzx	r11d, byte ptr [rax]
jmp	0x14002d2ab
jmp	0x14002d2ab
nop	word ptr [rax + rax]
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x14002d319
jmp	0x14002d319
cmp	qword ptr [rdi], rsi
jne	0x14002d388
jne	0x14002d388
mov	eax, dword ptr [r12]
mov	edx, eax
sub	edx, dword ptr [rbp + 0x80]
cmp	eax, dword ptr [rbp + 0x80]
cmovge	eax, edx
mov	rdx, qword ptr [rbp + 0x70]
mov	dword ptr [rdx], eax
jmp	0x14002d392
jmp	0x14002d392
test	sil, sil
jne	0x14002d66b
jne	0x14002d66b
mov	esi, r9d
mov	rax, qword ptr [rbp + 0x80]
add	rax, rax
je	0x14002d24d
je	0x14002d24d
mov	qword ptr [rbp - 0x20], r13
xor	edi, edi
mov	r13d, esi
xor	ebx, ebx
mov	byte ptr [rbp - 0x28], r15b
mov	rsi, rax
mov	r15, r14
mov	r14, r8
mov	qword ptr [rbp - 8], r10
mov	dword ptr [rbp - 0x18], r9d
jmp	0x14002d497
jmp	0x14002d497
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [r14]
mov	rcx, r14
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
cmp	al, r13b
je	0x14002d4a3
je	0x14002d4a3
add	rdi, 1
cmp	rdi, rsi
je	0x14002d4b4
je	0x14002d4b4
mov	rax, qword ptr [r15 + rdi*8]
movsx	edx, byte ptr [rax]
cmp	dl, r13b
jne	0x14002d480
jne	0x14002d480
mov	dword ptr [r12 + rbx*4], edi
add	rdi, 1
add	rbx, 1
cmp	rdi, rsi
jne	0x14002d497
jne	0x14002d497
mov	r14, r15
mov	r10, qword ptr [rbp - 8]
mov	r9d, dword ptr [rbp - 0x18]
mov	r13, qword ptr [rbp - 0x20]
movzx	r15d, byte ptr [rbp - 0x28]
test	rbx, rbx
je	0x14002d24d
je	0x14002d24d
mov	rax, qword ptr [r13 + 0x10]
cmp	rax, qword ptr [r13 + 0x18]
jae	0x14002d6fb
jae	0x14002d6fb
add	rax, 1
mov	qword ptr [r13 + 0x10], rax
lea	rax, [rbx*8 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
mov	qword ptr [rbp - 8], r10
lea	rax, [r12 + rbx*4]
mov	rsi, r12
lea	rdi, [rsp + 0x20]
mov	qword ptr [rbp - 0x18], rbx
mov	rbx, rax
mov	qword ptr [rbp - 0x20], rdi
nop	word ptr cs:[rax + rax]
movsxd	rax, dword ptr [rsi]
add	rsi, 4
add	rdi, 8
mov	rcx, qword ptr [r14 + rax*8]
call	0x140015a08
call	0x140015a08
mov	qword ptr [rdi - 8], rax
cmp	rsi, rbx
jne	0x14002d520
jne	0x14002d520
mov	rbx, qword ptr [rbp - 0x18]
mov	rdi, qword ptr [rbp - 0x20]
mov	r9d, 0xffffffff
mov	esi, 1
jmp	0x14002d260
jmp	0x14002d260
mov	rax, qword ptr [r13 + 0x18]
xor	edi, edi
cmp	qword ptr [r13 + 0x10], rax
jb	0x14002d22b
jb	0x14002d22b
mov	rax, qword ptr [r13]
mov	qword ptr [rbp - 0x28], rdx
mov	rcx, r13
mov	qword ptr [rbp - 0x20], r8
mov	dword ptr [rbp - 0x18], r9d
mov	qword ptr [rbp - 8], r10
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r10, qword ptr [rbp - 8]
mov	r9d, dword ptr [rbp - 0x18]
cmp	eax, -1
mov	r8, qword ptr [rbp - 0x20]
mov	rdx, qword ptr [rbp - 0x28]
jne	0x14002d22b
jne	0x14002d22b
mov	edi, esi
xor	r13d, r13d
xor	esi, esi
jmp	0x14002d22b
jmp	0x14002d22b
nop	dword ptr [rax]
mov	rax, qword ptr [rdx + 0x18]
cmp	qword ptr [rdx + 0x10], rax
jae	0x14002d67d
jae	0x14002d67d
xor	ebx, ebx
jmp	0x14002d244
jmp	0x14002d244
mov	rcx, rax
mov	rax, qword ptr [rax]
mov	dword ptr [rbp - 0x2c], r9d
mov	byte ptr [rbp - 0x28], r11b
mov	byte ptr [rbp - 0x20], r8b
mov	byte ptr [rbp - 0x18], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r11d, byte ptr [rbp - 0x28]
movzx	edx, byte ptr [rbp - 0x18]
cmp	eax, -1
mov	eax, 0
cmovne	rax, qword ptr [rbp - 8]
mov	r9d, dword ptr [rbp - 0x2c]
movzx	r8d, byte ptr [rbp - 0x20]
mov	qword ptr [rbp - 8], rax
mov	eax, 0
cmovne	r11d, eax
jmp	0x14002d291
jmp	0x14002d291
mov	rax, qword ptr [r13]
mov	dword ptr [rbp - 0x28], r9d
mov	rcx, r13
mov	byte ptr [rbp - 0x20], r8b
mov	byte ptr [rbp - 0x18], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rbp - 0x18]
movzx	r8d, byte ptr [rbp - 0x20]
cmp	eax, -1
mov	eax, 0
mov	r9d, dword ptr [rbp - 0x28]
cmove	r13, rax
cmovne	edx, eax
jmp	0x14002d27a
jmp	0x14002d27a
mov	rax, qword ptr [r13]
mov	dword ptr [rbp - 0x18], r9d
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r9d, dword ptr [rbp - 0x18]
cmp	eax, -1
mov	r11d, eax
mov	eax, 0xffffffff
cmove	r11d, eax
mov	eax, 0
cmove	r13, rax
jmp	0x14002d2ab
jmp	0x14002d2ab
mov	rax, qword ptr [r13 + 0x10]
cmp	rax, qword ptr [r13 + 0x18]
jae	0x14002d6ba
jae	0x14002d6ba
movzx	esi, byte ptr [rax]
jmp	0x14002d444
jmp	0x14002d444
mov	rax, qword ptr [rdx]
mov	qword ptr [rbp - 0x20], r8
mov	rcx, rdx
mov	dword ptr [rbp - 0x18], r9d
mov	qword ptr [rbp - 8], rdx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rdx, qword ptr [rbp - 8]
mov	r9d, dword ptr [rbp - 0x18]
cmp	eax, -1
mov	eax, 0
mov	r8, qword ptr [rbp - 0x20]
cmovne	rax, rdx
mov	r10, rax
mov	eax, 0
cmovne	ebx, eax
jmp	0x14002d244
jmp	0x14002d244
mov	rax, qword ptr [r13]
mov	qword ptr [rbp - 0x20], r8
mov	rcx, r13
mov	dword ptr [rbp - 0x18], r9d
mov	qword ptr [rbp - 8], r10
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8, qword ptr [rbp - 0x20]
mov	r9d, dword ptr [rbp - 0x18]
cmp	eax, -1
mov	r11d, eax
mov	eax, 0xffffffff
mov	r10, qword ptr [rbp - 8]
cmovne	eax, r11d
mov	esi, eax
mov	eax, 0
cmove	r13, rax
jmp	0x14002d444
jmp	0x14002d444
mov	rax, qword ptr [r13]
mov	qword ptr [rbp - 8], r10
mov	rcx, r13
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	r10, qword ptr [rbp - 8]
jmp	0x14002d4e7
jmp	0x14002d4e7
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xf8
mov	rax, qword ptr [r8 + 8]
mov	rbx, qword ptr [rsp + 0x178]
mov	r13, qword ptr [rsp + 0x180]
mov	rsi, qword ptr [r8]
mov	r12, qword ptr [r9]
mov	r15d, eax
mov	rdi, rcx
mov	rcx, qword ptr [r9 + 8]
mov	qword ptr [rsp + 0x60], rax
mov	qword ptr [rsp + 0x148], rdx
mov	qword ptr [rsp + 0x68], rcx
mov	dword ptr [rsp + 0x98], ecx
mov	rcx, qword ptr [rip + 0x91159]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x160]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rbp, qword ptr [rax + rdx*8]
test	rbp, rbp
je	0x14002e3f9
je	0x14002e3f9
mov	rax, qword ptr [rsp + 0x168]
mov	qword ptr [rsp + 0xd8], 0
mov	dword ptr [rsp + 0xe0], 0
mov	dword ptr [rax], 0
mov	rax, qword ptr [rsp + 0x148]
mov	rax, qword ptr [rax]
mov	rax, qword ptr [rax + 0x40]
mov	qword ptr [rsp + 0x80], rax
lea	rax, [rip + 0xf2e]
mov	qword ptr [rsp + 0x70], rax
cmp	rbx, r13
je	0x14002dab8
je	0x14002dab8
lea	rax, [rip - 0xb317]
mov	qword ptr [rsp + 0x140], rdi
mov	qword ptr [rsp + 0x58], rax
nop	dword ptr [rax]
cmp	r15d, -1
sete	r9b
test	rsi, rsi
setne	r14b
and	r14b, r9b
jne	0x14002df80
jne	0x14002df80
mov	r14d, r9d
cmp	dword ptr [rsp + 0x98], -1
sete	dil
test	r12, r12
setne	dl
and	dl, dil
jne	0x14002df18
jne	0x14002df18
mov	edx, edi
cmp	dl, r14b
je	0x14002df33
je	0x14002df33
movzx	r10d, byte ptr [rbx]
movzx	r14d, byte ptr [rbp + r10 + 0x139]
mov	rax, r10
test	r14b, r14b
jne	0x14002d887
jne	0x14002d887
mov	rdx, qword ptr [rbp]
mov	rcx, qword ptr [rsp + 0x58]
mov	r11, qword ptr [rdx + 0x40]
cmp	r11, rcx
jne	0x14002dfa0
jne	0x14002dfa0
test	al, al
je	0x14002db00
je	0x14002db00
mov	byte ptr [rbp + r10 + 0x139], al
mov	r14d, eax
cmp	r14b, 0x25
jne	0x14002db00
jne	0x14002db00
lea	r10, [rbx + 1]
cmp	r13, r10
je	0x14002e32a
je	0x14002e32a
movzx	r11d, byte ptr [rbx + 1]
movsx	r9d, byte ptr [rbp + r11 + 0x139]
mov	rax, r11
test	r9b, r9b
jne	0x14002d8de
jne	0x14002d8de
mov	rdx, qword ptr [rbp]
mov	rcx, qword ptr [rsp + 0x58]
mov	r9, qword ptr [rdx + 0x40]
cmp	r9, rcx
jne	0x14002e080
jne	0x14002e080
test	al, al
je	0x14002dcd0
je	0x14002dcd0
mov	byte ptr [rbp + r11 + 0x139], al
movsx	r9d, al
cmp	r9b, 0x45
je	0x14002d8ee
je	0x14002d8ee
cmp	r9b, 0x4f
jne	0x14002dcd3
jne	0x14002dcd3
lea	r10, [rbx + 2]
cmp	r13, r10
je	0x14002e32a
je	0x14002e32a
movzx	r11d, byte ptr [rbx + 2]
movzx	eax, byte ptr [rbp + r11 + 0x139]
mov	rdx, r11
test	al, al
jne	0x14002d934
jne	0x14002d934
mov	rax, qword ptr [rbp]
mov	rcx, qword ptr [rsp + 0x58]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, rcx
jne	0x14002e274
jne	0x14002e274
test	dl, dl
je	0x14002d932
je	0x14002d932
mov	byte ptr [rbp + r11 + 0x139], dl
mov	eax, edx
mov	rdx, qword ptr [rsp + 0x70]
cmp	qword ptr [rsp + 0x80], rdx
jne	0x14002dd00
jne	0x14002dd00
movzx	eax, word ptr [rbx]
mov	byte ptr [rsp + 0xe7], 0
mov	word ptr [rsp + 0xe4], ax
movzx	eax, byte ptr [rbx + 2]
mov	byte ptr [rsp + 0xe6], al
mov	eax, r15d
movabs	r15, 0xffffffff00000000
and	r15, qword ptr [rsp + 0x60]
or	r15, rax
mov	eax, dword ptr [rsp + 0x98]
movabs	rdx, 0xffffffff00000000
and	rdx, qword ptr [rsp + 0x68]
lea	rcx, [rsp + 0xc0]
lea	r9, [rsp + 0xa0]
mov	qword ptr [rsp + 0x78], r10
movabs	rbx, 0xffffffff00000000
or	rdx, rax
lea	rax, [rsp + 0xd8]
lea	r8, [rsp + 0xb0]
mov	qword ptr [rsp + 0xb0], rsi
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xe4]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x170]
mov	qword ptr [rsp + 0x68], rdx
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x168]
mov	qword ptr [rsp + 0xa8], rdx
mov	rdx, qword ptr [rsp + 0x148]
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x160]
mov	qword ptr [rsp + 0xb8], r15
and	r15, rbx
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0xa0], r12
call	0x14002ad90
call	0x14002ad90
mov	rdx, qword ptr [rsp + 0xc8]
mov	r10, qword ptr [rsp + 0x78]
mov	rax, qword ptr [rsp + 0xc0]
mov	ecx, edx
mov	qword ptr [rsp + 0xc8], rdx
or	r15, rcx
cmp	edx, -1
mov	qword ptr [rsp + 0xc0], rax
mov	rsi, rax
sete	bl
test	rax, rax
mov	qword ptr [rsp + 0x60], r15
mov	r15d, edx
setne	r14b
and	r14b, bl
jne	0x14002e241
jne	0x14002e241
test	r12, r12
setne	al
and	al, dil
mov	r14d, eax
jne	0x14002e206
jne	0x14002e206
cmp	dil, bl
jne	0x14002da9d
jne	0x14002da9d
mov	rax, qword ptr [rsp + 0x168]
or	dword ptr [rax], 2
lea	rbx, [r10 + 1]
cmp	rbx, r13
jne	0x14002dbad
jne	0x14002dbad
nop	word ptr [rax + rax]
mov	rdi, qword ptr [rsp + 0x140]
mov	rcx, qword ptr [rsp + 0x70]
cmp	qword ptr [rsp + 0x80], rcx
je	0x14002df5c
je	0x14002df5c
movabs	rax, 0xffffffff00000000
and	rax, qword ptr [rsp + 0x60]
mov	qword ptr [rdi], rsi
or	rax, r15
mov	qword ptr [rdi + 8], rax
mov	rax, rdi
add	rsp, 0xf8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
mov	rdx, qword ptr [rbp + 0x30]
movzx	eax, byte ptr [rbx]
test	byte ptr [rdx + rax*2], 0x20
jne	0x14002dbd1
jne	0x14002dbd1
test	rsi, rsi
je	0x14002db1f
je	0x14002db1f
test	r9b, r9b
jne	0x14002e068
jne	0x14002e068
mov	edx, r15d
mov	rax, qword ptr [rbp]
movsx	edx, dl
mov	rcx, rbp
mov	byte ptr [rsp + 0x78], r9b
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
movsx	edx, byte ptr [rbx]
mov	rcx, rbp
mov	edi, eax
mov	rax, qword ptr [rbp]
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	dil, al
je	0x14002db84
je	0x14002db84
test	rsi, rsi
je	0x14002db5c
je	0x14002db5c
movzx	r9d, byte ptr [rsp + 0x78]
test	r9b, r9b
jne	0x14002e120
jne	0x14002e120
mov	edx, r15d
mov	rax, qword ptr [rbp]
movsx	edx, dl
mov	rcx, rbp
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
movsx	edx, byte ptr [rbx]
mov	rcx, rbp
mov	edi, eax
mov	rax, qword ptr [rbp]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
cmp	dil, al
jne	0x14002e32a
jne	0x14002e32a
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x14002e0f0
jae	0x14002e0f0
add	rax, 1
mov	qword ptr [rsi + 0x10], rax
add	rbx, 1
mov	r15d, 0xffffffff
cmp	rbx, r13
je	0x14002dab0
je	0x14002dab0
mov	rax, qword ptr [rsp + 0x168]
mov	eax, dword ptr [rax]
test	eax, eax
je	0x14002d808
je	0x14002d808
jmp	0x14002dab0
jmp	0x14002dab0
nop	dword ptr [rax]
movzx	eax, byte ptr [rbx]
test	byte ptr [rdx + rax*2], 0x20
je	0x14002dbda
je	0x14002dbda
add	rbx, 1
cmp	r13, rbx
jne	0x14002dbc8
jne	0x14002dbc8
test	rsi, rsi
je	0x14002dbe4
je	0x14002dbe4
test	r9b, r9b
jne	0x14002dc26
jne	0x14002dc26
mov	edx, r9d
test	r12, r12
setne	r14b
and	r14b, dil
jne	0x14002dc50
jne	0x14002dc50
mov	r14d, edi
cmp	r9b, r14b
je	0x14002dba4
je	0x14002dba4
test	rsi, rsi
je	0x14002dc04
je	0x14002dc04
test	dl, dl
jne	0x14002dc68
jne	0x14002dc68
mov	eax, r15d
mov	rdx, qword ptr [rbp + 0x30]
movzx	eax, al
test	byte ptr [rdx + rax*2], 0x20
je	0x14002dba4
je	0x14002dba4
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x14002dc90
jae	0x14002dc90
add	rax, 1
mov	qword ptr [rsi + 0x10], rax
mov	rax, qword ptr [rsi + 0x18]
cmp	qword ptr [rsi + 0x10], rax
jae	0x14002dca3
jae	0x14002dca3
xor	r9d, r9d
test	r12, r12
mov	r15d, 0xffffffff
mov	edx, 1
setne	r14b
and	r14b, dil
je	0x14002dbf3
je	0x14002dbf3
nop	word ptr [rax + rax]
mov	rax, qword ptr [r12 + 0x18]
cmp	qword ptr [r12 + 0x10], rax
jae	0x14002e0b0
jae	0x14002e0b0
xor	r14d, r14d
jmp	0x14002dbf6
jmp	0x14002dbf6
nop	dword ptr [rax]
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x14002e100
jae	0x14002e100
movzx	ecx, byte ptr [rax]
mov	rdx, qword ptr [rbp + 0x30]
test	byte ptr [rdx + rcx*2], 0x20
jne	0x14002dc1e
jne	0x14002dc1e
jmp	0x14002dba4
jmp	0x14002dba4
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rsi + 0x18]
cmp	qword ptr [rsi + 0x10], rax
jb	0x14002dc30
jb	0x14002dc30
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r15d, eax
cmp	r15d, -1
jne	0x14002dc30
jne	0x14002dc30
mov	edx, 1
mov	r9d, 1
xor	esi, esi
jmp	0x14002dbe7
jmp	0x14002dbe7
nop	dword ptr [rax + rax]
xor	r9d, r9d
mov	rcx, qword ptr [rsp + 0x70]
xor	edx, edx
xor	r8d, r8d
cmp	qword ptr [rsp + 0x80], rcx
jne	0x14002dd0b
jne	0x14002dd0b
movzx	eax, word ptr [rbx]
mov	word ptr [rsp + 0xe4], ax
xor	eax, eax
jmp	0x14002d95e
jmp	0x14002d95e
nop	dword ptr [rax]
movsx	edx, r9b
mov	r8d, r9d
movsx	r9d, al
mov	rax, qword ptr [rsp + 0x148]
mov	rcx, qword ptr [rsp + 0x70]
mov	byte ptr [rsp + 0x78], r8b
mov	rax, qword ptr [rax]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, rcx
jne	0x14002e140
jne	0x14002e140
mov	eax, r15d
mov	rcx, qword ptr [rip + 0x90b99]
movabs	r15, 0xffffffff00000000
and	r15, qword ptr [rsp + 0x60]
or	r15, rax
mov	eax, dword ptr [rsp + 0x98]
movabs	rbx, 0xffffffff00000000
and	rbx, qword ptr [rsp + 0x68]
mov	byte ptr [rsp + 0x90], r9b
or	rbx, rax
mov	qword ptr [rsp + 0x88], r10
mov	qword ptr [rsp + 0x60], r15
mov	qword ptr [rsp + 0x68], rbx
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x160]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rcx, qword ptr [rax + rdx*8]
test	rcx, rcx
je	0x14002e3f9
je	0x14002e3f9
mov	rax, qword ptr [rsp + 0x168]
mov	r10, qword ptr [rsp + 0x88]
movzx	r9d, byte ptr [rsp + 0x90]
movzx	r8d, byte ptr [rsp + 0x78]
mov	dword ptr [rax], 0
cmp	byte ptr [rcx + 0x38], 0
je	0x14002dfd0
je	0x14002dfd0
movzx	r14d, byte ptr [rcx + 0x5e]
mov	byte ptr [rsp + 0xd4], r14b
test	r8b, r8b
je	0x14002ddf6
je	0x14002ddf6
mov	byte ptr [rsp + 0xd7], 0
mov	eax, r9d
mov	r9d, r8d
mov	r8d, eax
lea	rax, [rsp + 0xd4]
mov	qword ptr [rsp + 0xa8], rbx
lea	rbx, [rsp + 0xe4]
mov	rdx, qword ptr [rsp + 0x148]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x170]
lea	rcx, [rsp + 0xc0]
mov	qword ptr [rsp + 0x40], rbx
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x168]
mov	byte ptr [rsp + 0xd6], r8b
lea	r8, [rsp + 0xb0]
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x160]
mov	byte ptr [rsp + 0xd5], r9b
lea	r9, [rsp + 0xa0]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x88], r10
mov	qword ptr [rsp + 0xb0], rsi
mov	qword ptr [rsp + 0xb8], r15
mov	qword ptr [rsp + 0xe4], 0
mov	dword ptr [rsp + 0xec], 0
mov	qword ptr [rsp + 0xa0], r12
call	0x14002ad90
call	0x14002ad90
mov	rax, qword ptr [rsp + 0xc8]
mov	rcx, rbx
mov	rdx, qword ptr [rsp + 0x170]
mov	r14, qword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x78], rax
mov	r15d, eax
call	0x140094930
call	0x140094930
mov	rax, qword ptr [rsp + 0x78]
mov	rsi, r14
mov	r10, qword ptr [rsp + 0x88]
cmp	eax, -1
sete	bl
test	r14, r14
setne	dl
and	dl, bl
jne	0x14002e2e4
jne	0x14002e2e4
test	r12, r12
je	0x14002df05
je	0x14002df05
test	dil, dil
jne	0x14002e2b2
jne	0x14002e2b2
cmp	bl, dil
jne	0x14002da9d
jne	0x14002da9d
jmp	0x14002da92
jmp	0x14002da92
nop	dword ptr [rax + rax]
mov	rax, qword ptr [r12 + 0x18]
cmp	qword ptr [r12 + 0x10], rax
jae	0x14002e36e
jae	0x14002e36e
xor	edx, edx
cmp	dl, r14b
jne	0x14002d849
jne	0x14002d849
mov	rax, qword ptr [rsp + 0x168]
mov	rdi, qword ptr [rsp + 0x140]
mov	rcx, qword ptr [rsp + 0x70]
mov	dword ptr [rax], 6
cmp	qword ptr [rsp + 0x80], rcx
jne	0x14002dacb
jne	0x14002dacb
mov	rdx, qword ptr [rsp + 0x170]
lea	rcx, [rsp + 0xd8]
call	0x140094930
call	0x140094930
jmp	0x14002dacb
jmp	0x14002dacb
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rsi + 0x18]
cmp	qword ptr [rsi + 0x10], rax
jae	0x14002e345
jae	0x14002e345
xor	r14d, r14d
jmp	0x14002d823
jmp	0x14002d823
nop	word ptr cs:[rax + rax]
mov	byte ptr [rsp + 0x78], r9b
movsx	edx, r10b
xor	r8d, r8d
mov	rcx, rbp
mov	qword ptr [rsp + 0x88], r10
call	r11
call	r11
mov	r10, qword ptr [rsp + 0x88]
movzx	r9d, byte ptr [rsp + 0x78]
jmp	0x14002d874
jmp	0x14002d874
nop	dword ptr [rax]
mov	byte ptr [rsp + 0x9f], r8b
mov	byte ptr [rsp + 0x90], r9b
mov	qword ptr [rsp + 0x88], r10
mov	qword ptr [rsp + 0x78], rcx
call	0x140021cb0
call	0x140021cb0
mov	rcx, qword ptr [rsp + 0x78]
lea	rdx, [rip - 0xbb5e]
mov	r10, qword ptr [rsp + 0x88]
movzx	r9d, byte ptr [rsp + 0x90]
movzx	r8d, byte ptr [rsp + 0x9f]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rdx
je	0x14002ddd8
je	0x14002ddd8
mov	byte ptr [rsp + 0x90], r8b
mov	edx, 0x25
mov	byte ptr [rsp + 0x88], r9b
mov	qword ptr [rsp + 0x78], r10
call	rax
call	rax
mov	r10, qword ptr [rsp + 0x78]
movzx	r8d, byte ptr [rsp + 0x90]
movzx	r9d, byte ptr [rsp + 0x88]
mov	r14d, eax
jmp	0x14002ddd8
jmp	0x14002ddd8
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x14002e3a6
jae	0x14002e3a6
movzx	edx, byte ptr [rax]
jmp	0x14002db22
jmp	0x14002db22
nop	
mov	qword ptr [rsp + 0x78], r10
movsx	edx, r11b
xor	r8d, r8d
mov	rcx, rbp
mov	qword ptr [rsp + 0x88], r11
call	r9
call	r9
mov	r11, qword ptr [rsp + 0x88]
mov	r10, qword ptr [rsp + 0x78]
jmp	0x14002d8ca
jmp	0x14002d8ca
nop	dword ptr [rax]
mov	rax, qword ptr [r12]
mov	byte ptr [rsp + 0x88], r9b
mov	rcx, r12
mov	byte ptr [rsp + 0x78], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x78]
movzx	r9d, byte ptr [rsp + 0x88]
cmp	eax, -1
mov	eax, 0
cmove	r12, rax
cmovne	r14d, eax
jmp	0x14002dbf6
jmp	0x14002dbf6
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x14002db9a
jmp	0x14002db9a
nop	
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
xor	edx, edx
cmp	eax, -1
cmove	rsi, rdx
jmp	0x14002dc07
jmp	0x14002dc07
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x14002e3d5
jae	0x14002e3d5
movzx	edx, byte ptr [rax]
jmp	0x14002db5f
jmp	0x14002db5f
nop	word ptr cs:[rax + rax]
mov	r8, qword ptr [rsp + 0x60]
mov	qword ptr [rsp + 0x78], r10
movabs	rcx, 0xffffffff00000000
mov	qword ptr [rsp + 0xb0], rsi
and	r8, rcx
and	rcx, qword ptr [rsp + 0x68]
mov	dword ptr [rsp + 0x40], edx
mov	rdi, r8
mov	r8d, dword ptr [rsp + 0x98]
mov	dword ptr [rsp + 0x38], r9d
lea	r9, [rsp + 0xa0]
or	rdi, r15
mov	qword ptr [rsp + 0xa0], r12
mov	rdx, qword ptr [rsp + 0x148]
mov	qword ptr [rsp + 0x60], rdi
or	rcx, r8
lea	r8, [rsp + 0xb0]
mov	qword ptr [rsp + 0xb8], rdi
mov	rdi, qword ptr [rsp + 0x170]
mov	rbx, rcx
mov	qword ptr [rsp + 0x68], rcx
lea	rcx, [rsp + 0xc0]
mov	qword ptr [rsp + 0x30], rdi
mov	rdi, qword ptr [rsp + 0x168]
mov	qword ptr [rsp + 0xa8], rbx
mov	qword ptr [rsp + 0x28], rdi
mov	rdi, qword ptr [rsp + 0x160]
mov	qword ptr [rsp + 0x20], rdi
call	rax
call	rax
mov	rsi, qword ptr [rsp + 0xc0]
mov	r15d, dword ptr [rsp + 0xc8]
mov	r10, qword ptr [rsp + 0x78]
jmp	0x14002da9d
jmp	0x14002da9d
mov	rax, qword ptr [r12 + 0x18]
xor	edi, edi
cmp	qword ptr [r12 + 0x10], rax
jb	0x14002da8d
jb	0x14002da8d
mov	rax, qword ptr [r12]
mov	qword ptr [rsp + 0x78], r10
mov	rcx, r12
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r10, qword ptr [rsp + 0x78]
cmp	eax, -1
mov	eax, 0
cmove	edi, r14d
cmove	r12, rax
jmp	0x14002da8d
jmp	0x14002da8d
mov	rcx, qword ptr [rax + 0x18]
xor	ebx, ebx
cmp	qword ptr [rax + 0x10], rcx
jb	0x14002da7b
jb	0x14002da7b
mov	rax, qword ptr [rax]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r10, qword ptr [rsp + 0x78]
cmp	eax, -1
mov	eax, 0
cmove	ebx, r14d
cmove	rsi, rax
jmp	0x14002da7b
jmp	0x14002da7b
movsx	edx, r11b
mov	qword ptr [rsp + 0x78], r10
xor	r8d, r8d
mov	rcx, rbp
mov	qword ptr [rsp + 0x90], r11
mov	byte ptr [rsp + 0x88], r9b
call	rax
call	rax
mov	r11, qword ptr [rsp + 0x90]
mov	r10, qword ptr [rsp + 0x78]
movzx	r9d, byte ptr [rsp + 0x88]
mov	edx, eax
jmp	0x14002d926
jmp	0x14002d926
mov	rax, qword ptr [r12 + 0x18]
xor	edi, edi
cmp	qword ptr [r12 + 0x10], rax
jb	0x14002df05
jb	0x14002df05
mov	rax, qword ptr [r12]
mov	qword ptr [rsp + 0x78], r10
mov	rcx, r12
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r10, qword ptr [rsp + 0x78]
cmp	eax, -1
sete	dil
jmp	0x14002df05
jmp	0x14002df05
mov	rax, qword ptr [r14 + 0x18]
xor	ebx, ebx
cmp	qword ptr [r14 + 0x10], rax
jb	0x14002def7
jb	0x14002def7
mov	rax, qword ptr [r14]
mov	byte ptr [rsp + 0x88], dl
mov	rcx, r14
mov	qword ptr [rsp + 0x78], r10
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x88]
mov	r10, qword ptr [rsp + 0x78]
cmp	eax, -1
mov	eax, 0
cmove	ebx, edx
cmove	rsi, rax
jmp	0x14002def7
jmp	0x14002def7
mov	rax, qword ptr [rsp + 0x168]
mov	rdi, qword ptr [rsp + 0x140]
mov	dword ptr [rax], 4
jmp	0x14002dab8
jmp	0x14002dab8
mov	rax, qword ptr [rsi]
mov	byte ptr [rsp + 0x78], r9b
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r9d, byte ptr [rsp + 0x78]
cmp	eax, -1
mov	eax, 0
cmove	rsi, rax
cmovne	r14d, eax
jmp	0x14002d823
jmp	0x14002d823
mov	rax, qword ptr [r12]
mov	byte ptr [rsp + 0x88], r9b
mov	rcx, r12
mov	byte ptr [rsp + 0x78], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x78]
movzx	r9d, byte ptr [rsp + 0x88]
cmp	eax, -1
mov	eax, 0
cmove	r12, rax
cmovne	edx, eax
jmp	0x14002d840
jmp	0x14002d840
mov	rax, qword ptr [rsi]
mov	byte ptr [rsp + 0x78], r9b
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r9d, byte ptr [rsp + 0x78]
cmp	eax, -1
mov	edx, eax
mov	eax, 0xffffffff
cmove	edx, eax
mov	eax, 0
cmove	rsi, rax
jmp	0x14002db22
jmp	0x14002db22
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	edx, eax
mov	eax, 0xffffffff
cmove	edx, eax
mov	eax, 0
cmove	rsi, rax
jmp	0x14002db5f
jmp	0x14002db5f
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
mov	rax, qword ptr [rdx]
mov	r14d, dword ptr [rsp + 0x128]
mov	r15d, dword ptr [rsp + 0x130]
mov	rdi, qword ptr [r8]
mov	rax, qword ptr [rax + 0x40]
mov	rbx, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [r9 + 8]
mov	r12, rdx
lea	rdx, [rip + 0x2ce]
mov	byte ptr [rsp + 0x56], r14b
mov	rsi, rcx
mov	byte ptr [rsp + 0x57], r15b
cmp	rax, rdx
jne	0x14002e640
jne	0x14002e640
mov	rcx, qword ptr [rip + 0x90471]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x110]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rcx, qword ptr [rax + rdx*8]
test	rcx, rcx
je	0x14002e707
je	0x14002e707
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 0
cmp	byte ptr [rcx + 0x38], 0
je	0x14002e600
je	0x14002e600
movzx	eax, byte ptr [rcx + 0x5e]
mov	byte ptr [rsp + 0x90], al
test	r15b, r15b
je	0x14002e4c1
je	0x14002e4c1
mov	byte ptr [rsp + 0x93], 0
mov	byte ptr [rsp + 0x56], r15b
mov	byte ptr [rsp + 0x57], r14b
movzx	eax, byte ptr [rsp + 0x57]
mov	rdx, r12
lea	r14, [rsp + 0x94]
lea	rcx, [rsp + 0x80]
mov	qword ptr [rsp + 0x40], r14
lea	r9, [rsp + 0x60]
lea	r8, [rsp + 0x70]
mov	byte ptr [rsp + 0x92], al
movzx	eax, byte ptr [rsp + 0x56]
mov	qword ptr [rsp + 0x70], rdi
mov	byte ptr [rsp + 0x91], al
lea	rax, [rsp + 0x90]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x120]
mov	qword ptr [rsp + 0x78], rbx
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x118]
mov	qword ptr [rsp + 0x94], 0
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x110]
mov	dword ptr [rsp + 0x9c], 0
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x60], rbp
mov	qword ptr [rsp + 0x68], r13
call	0x14002ad90
call	0x14002ad90
mov	r12, qword ptr [rsp + 0x88]
mov	rdi, qword ptr [rsp + 0x80]
mov	rcx, r14
movabs	rdx, 0xffffffff00000000
and	rbx, rdx
mov	rdx, qword ptr [rsp + 0x120]
mov	eax, r12d
mov	qword ptr [rsp + 0x88], r12
or	rbx, rax
mov	qword ptr [rsp + 0x80], rdi
call	0x140094930
call	0x140094930
cmp	r12d, -1
sete	r12b
test	rdi, rdi
setne	al
and	al, r12b
mov	r14d, eax
jne	0x14002e6d8
jne	0x14002e6d8
cmp	r13d, -1
sete	al
test	rbp, rbp
je	0x14002e5d0
je	0x14002e5d0
test	al, al
jne	0x14002e6b0
jne	0x14002e6b0
cmp	r12b, al
jne	0x14002e5e0
jne	0x14002e5e0
mov	rax, qword ptr [rsp + 0x118]
or	dword ptr [rax], 2
mov	qword ptr [rsi], rdi
mov	qword ptr [rsi + 8], rbx
mov	rax, rsi
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	
mov	qword ptr [rsp + 0x58], rcx
call	0x140021cb0
call	0x140021cb0
mov	rcx, qword ptr [rsp + 0x58]
lea	rdx, [rip - 0xc176]
mov	rax, qword ptr [rcx]
mov	r11, qword ptr [rax + 0x30]
mov	eax, 0x25
cmp	r11, rdx
je	0x14002e4a3
je	0x14002e4a3
mov	edx, 0x25
call	r11
call	r11
jmp	0x14002e4a3
jmp	0x14002e4a3
nop	dword ptr [rax + rax]
movsx	r8d, r15b
movsx	r9d, r14b
mov	qword ptr [rsp + 0x70], rbp
mov	rdx, r12
mov	qword ptr [rsp + 0x88], rbx
mov	rbx, qword ptr [rsp + 0x120]
mov	dword ptr [rsp + 0x40], r8d
lea	r8, [rsp + 0x80]
mov	qword ptr [rsp + 0x30], rbx
mov	rbx, qword ptr [rsp + 0x118]
mov	dword ptr [rsp + 0x38], r9d
lea	r9, [rsp + 0x70]
mov	qword ptr [rsp + 0x28], rbx
mov	rbx, qword ptr [rsp + 0x110]
mov	qword ptr [rsp + 0x80], rdi
mov	qword ptr [rsp + 0x78], r13
mov	qword ptr [rsp + 0x20], rbx
call	rax
call	rax
jmp	0x14002e5e7
jmp	0x14002e5e7
nop	word ptr [rax + rax]
mov	rdx, qword ptr [rbp + 0x18]
xor	eax, eax
cmp	qword ptr [rbp + 0x10], rdx
jb	0x14002e5d0
jb	0x14002e5d0
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jmp	0x14002e5d0
jmp	0x14002e5d0
nop	dword ptr [rax]
mov	rax, qword ptr [rdi + 0x18]
xor	r12d, r12d
cmp	qword ptr [rdi + 0x10], rax
jb	0x14002e5bc
jb	0x14002e5bc
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmove	r12d, r14d
cmove	rdi, rax
jmp	0x14002e5bc
jmp	0x14002e5bc
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
mov	rax, qword ptr [r8]
mov	r12d, dword ptr [rsp + 0x128]
mov	r15d, dword ptr [rsp + 0x130]
mov	rbx, qword ptr [r8 + 8]
mov	rdi, qword ptr [r9]
mov	rbp, qword ptr [r9 + 8]
mov	r13d, r12d
mov	r14d, r15d
mov	rsi, rcx
mov	rcx, qword ptr [rip + 0x9017f]
mov	qword ptr [rsp + 0x50], rax
mov	qword ptr [rsp + 0xf8], rdx
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x110]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rcx, qword ptr [rax + rdx*8]
test	rcx, rcx
je	0x14002e99a
je	0x14002e99a
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 0
cmp	byte ptr [rcx + 0x38], 0
je	0x14002e908
je	0x14002e908
movzx	eax, byte ptr [rcx + 0x5e]
mov	byte ptr [rsp + 0x90], al
test	r15b, r15b
jne	0x14002e8f0
jne	0x14002e8f0
mov	rax, qword ptr [rsp + 0x50]
mov	byte ptr [rsp + 0x91], r13b
lea	r13, [rsp + 0x94]
lea	rcx, [rsp + 0x80]
mov	qword ptr [rsp + 0x40], r13
lea	r9, [rsp + 0x60]
lea	r8, [rsp + 0x70]
mov	rdx, qword ptr [rsp + 0xf8]
mov	qword ptr [rsp + 0x70], rax
lea	rax, [rsp + 0x90]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x120]
mov	byte ptr [rsp + 0x92], r14b
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x118]
mov	qword ptr [rsp + 0x78], rbx
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x110]
mov	qword ptr [rsp + 0x94], 0
mov	qword ptr [rsp + 0x20], rax
mov	dword ptr [rsp + 0x9c], 0
mov	qword ptr [rsp + 0x60], rdi
mov	qword ptr [rsp + 0x68], rbp
call	0x14002ad90
call	0x14002ad90
mov	r14, qword ptr [rsp + 0x88]
mov	r12, qword ptr [rsp + 0x80]
mov	rcx, r13
movabs	rdx, 0xffffffff00000000
and	rbx, rdx
mov	rdx, qword ptr [rsp + 0x120]
mov	eax, r14d
mov	qword ptr [rsp + 0x88], r14
or	rbx, rax
mov	qword ptr [rsp + 0x80], r12
call	0x140094930
call	0x140094930
cmp	r14d, -1
sete	r13b
test	r12, r12
setne	al
and	al, r13b
mov	r14d, eax
jne	0x14002e968
jne	0x14002e968
cmp	ebp, -1
sete	al
test	rdi, rdi
je	0x14002e8c2
je	0x14002e8c2
test	al, al
jne	0x14002e940
jne	0x14002e940
cmp	al, r13b
jne	0x14002e8d2
jne	0x14002e8d2
mov	rax, qword ptr [rsp + 0x118]
or	dword ptr [rax], 2
mov	rax, rsi
mov	qword ptr [rsi], r12
mov	qword ptr [rsi + 8], rbx
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
mov	byte ptr [rsp + 0x93], 0
mov	r13d, r15d
mov	r14d, r12d
jmp	0x14002e7b2
jmp	0x14002e7b2
nop	dword ptr [rax + rax]
mov	qword ptr [rsp + 0x58], rcx
call	0x140021cb0
call	0x140021cb0
mov	rcx, qword ptr [rsp + 0x58]
lea	rdx, [rip - 0xc47e]
mov	rax, qword ptr [rcx]
mov	r9, qword ptr [rax + 0x30]
mov	eax, 0x25
cmp	r9, rdx
je	0x14002e7a2
je	0x14002e7a2
mov	edx, 0x25
call	r9
call	r9
jmp	0x14002e7a2
jmp	0x14002e7a2
mov	rdx, qword ptr [rdi + 0x18]
xor	eax, eax
cmp	qword ptr [rdi + 0x10], rdx
jb	0x14002e8c2
jb	0x14002e8c2
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jmp	0x14002e8c2
jmp	0x14002e8c2
nop	dword ptr [rax]
mov	rax, qword ptr [r12 + 0x18]
xor	r13d, r13d
cmp	qword ptr [r12 + 0x10], rax
jb	0x14002e8af
jb	0x14002e8af
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmove	r13d, r14d
cmove	r12, rax
jmp	0x14002e8af
jmp	0x14002e8af
call	0x1400b3a30
call	0x1400b3a30
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0xa69]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x14002eb10
jne	0x14002eb10
xor	eax, eax
ret	
ret	
nop	word ptr cs:[rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	r12, qword ptr [rsp + 0x100]
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [r9 + 8]
mov	rsi, rcx
mov	rcx, qword ptr [rip + 0x8fc9d]
mov	rdi, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [r12 + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x14002ed0b
jae	0x14002ed0b
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x14002ed0b
je	0x14002ed0b
mov	r8, qword ptr [rip + 0x9011b]
xor	r9d, r9d
lea	rdx, [rip + 0x92011]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x14002ed0b
je	0x14002ed0b
mov	rax, qword ptr [rax + 0x10]
mov	rdx, rdi
lea	rcx, [rsp + 0x70]
lea	r9, [rsp + 0x50]
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x84], 0
mov	rax, qword ptr [rax + 0x10]
mov	qword ptr [rsp + 0x60], r15
lea	r15, [rsp + 0x84]
mov	qword ptr [rsp + 0x40], r15
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x110]
mov	qword ptr [rsp + 0x20], r12
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x108]
mov	qword ptr [rsp + 0x68], rbx
xor	bx, bx
mov	qword ptr [rsp + 0x28], rax
mov	dword ptr [rsp + 0x8c], 0
mov	qword ptr [rsp + 0x50], rbp
mov	qword ptr [rsp + 0x58], r13
call	0x140030b70
call	0x140030b70
mov	r12, qword ptr [rsp + 0x78]
mov	rdi, qword ptr [rsp + 0x70]
mov	rcx, r15
mov	rdx, qword ptr [rsp + 0x110]
movzx	eax, r12w
mov	qword ptr [rsp + 0x78], r12
mov	r14, rdi
or	rbx, rax
mov	qword ptr [rsp + 0x70], rdi
call	0x140094930
call	0x140094930
cmp	r12w, -1
sete	r12b
test	rdi, rdi
setne	al
and	al, r12b
mov	r15d, eax
jne	0x14002ecc8
jne	0x14002ecc8
cmp	r13w, -1
sete	al
mov	edx, eax
test	rbp, rbp
je	0x14002ec73
je	0x14002ec73
test	al, al
jne	0x14002eca8
jne	0x14002eca8
cmp	r12b, dl
jne	0x14002ec83
jne	0x14002ec83
mov	rax, qword ptr [rsp + 0x108]
or	dword ptr [rax], 2
mov	rax, rsi
mov	qword ptr [rsi], r14
mov	qword ptr [rsi + 8], rbx
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x14002ecf0
jae	0x14002ecf0
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	dl
cmp	r12b, dl
jne	0x14002ec83
jne	0x14002ec83
jmp	0x14002ec78
jmp	0x14002ec78
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x14002ed00
jae	0x14002ed00
movzx	eax, word ptr [rax]
xor	r12d, r12d
mov	r14d, 0
cmp	ax, -1
cmove	r12d, r15d
cmovne	r14, rdi
jmp	0x14002ec60
jmp	0x14002ec60
nop	
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14002ecb5
jmp	0x14002ecb5
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14002ecd5
jmp	0x14002ecd5
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	r12, qword ptr [rsp + 0x100]
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [r9 + 8]
mov	rsi, rcx
mov	rcx, qword ptr [rip + 0x8fa9d]
mov	rdi, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [r12 + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x14002ef0b
jae	0x14002ef0b
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x14002ef0b
je	0x14002ef0b
mov	r8, qword ptr [rip + 0x8ff1b]
xor	r9d, r9d
lea	rdx, [rip + 0x91e11]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x14002ef0b
je	0x14002ef0b
mov	rax, qword ptr [rax + 0x10]
mov	rdx, rdi
lea	rcx, [rsp + 0x70]
lea	r9, [rsp + 0x50]
mov	dword ptr [rsp + 0x8c], 0
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x84], 0
mov	rax, qword ptr [rax + 0x20]
mov	qword ptr [rsp + 0x60], r15
lea	r15, [rsp + 0x84]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x110]
mov	qword ptr [rsp + 0x40], r15
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x108]
mov	qword ptr [rsp + 0x20], r12
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x68], rbx
xor	bx, bx
mov	qword ptr [rsp + 0x50], rbp
mov	qword ptr [rsp + 0x58], r13
call	0x140030b70
call	0x140030b70
mov	r12, qword ptr [rsp + 0x78]
mov	rdi, qword ptr [rsp + 0x70]
mov	rcx, r15
mov	rdx, qword ptr [rsp + 0x110]
movzx	eax, r12w
mov	qword ptr [rsp + 0x78], r12
mov	r14, rdi
or	rbx, rax
mov	qword ptr [rsp + 0x70], rdi
call	0x140094930
call	0x140094930
cmp	r12w, -1
sete	r12b
test	rdi, rdi
setne	al
and	al, r12b
mov	r15d, eax
jne	0x14002eec8
jne	0x14002eec8
cmp	r13w, -1
sete	al
mov	edx, eax
test	rbp, rbp
je	0x14002ee73
je	0x14002ee73
test	al, al
jne	0x14002eea8
jne	0x14002eea8
cmp	r12b, dl
jne	0x14002ee83
jne	0x14002ee83
mov	rax, qword ptr [rsp + 0x108]
or	dword ptr [rax], 2
mov	rax, rsi
mov	qword ptr [rsi], r14
mov	qword ptr [rsi + 8], rbx
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x14002eef0
jae	0x14002eef0
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	dl
cmp	r12b, dl
jne	0x14002ee83
jne	0x14002ee83
jmp	0x14002ee78
jmp	0x14002ee78
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x14002ef00
jae	0x14002ef00
movzx	eax, word ptr [rax]
xor	r12d, r12d
mov	r14d, 0
cmp	ax, -1
cmove	r12d, r15d
cmovne	r14, rdi
jmp	0x14002ee60
jmp	0x14002ee60
nop	
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14002eeb5
jmp	0x14002eeb5
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14002eed5
jmp	0x14002eed5
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xb8
mov	r14, qword ptr [r9]
mov	rbx, qword ptr [rsp + 0x120]
mov	r12, qword ptr [r8]
mov	rdi, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9 + 8]
mov	rsi, rcx
mov	r13, rdx
mov	rcx, qword ptr [rip + 0x8f98a]
mov	qword ptr [rsp + 0x50], r14
mov	dword ptr [rsp + 0xac], 0
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r15, qword ptr [rax + rdx*8]
test	r15, r15
je	0x14002f4e3
je	0x14002f4e3
lea	rax, [rsp + 0xac]
mov	qword ptr [rsp + 0x40], rbx
mov	rdx, r13
lea	r9, [rsp + 0x70]
mov	qword ptr [rsp + 0x48], rax
lea	rax, [rsp + 0xa8]
lea	rcx, [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rax
lea	r8, [rsp + 0x80]
mov	qword ptr [rsp + 0x38], 2
mov	dword ptr [rsp + 0x30], 0x63
mov	dword ptr [rsp + 0x28], 0
mov	qword ptr [rsp + 0x80], r12
mov	qword ptr [rsp + 0x88], rdi
mov	qword ptr [rsp + 0x70], r14
mov	qword ptr [rsp + 0x78], rbp
call	0x14002f5e0
call	0x14002f5e0
cmp	bp, -1
mov	rdx, qword ptr [rsp + 0x98]
mov	rbx, qword ptr [rsp + 0x90]
sete	r9b
mov	eax, dword ptr [rsp + 0xac]
test	r14, r14
setne	r12b
mov	qword ptr [rsp + 0x90], rbx
mov	di, dx
mov	r11d, edx
mov	qword ptr [rsp + 0x98], rdx
and	r12d, r9d
test	eax, eax
je	0x14002f0a0
je	0x14002f0a0
mov	rax, qword ptr [rsp + 0x128]
or	dword ptr [rax], 4
cmp	dx, -1
sete	r13b
test	rbx, rbx
setne	bpl
and	ebp, r13d
test	bpl, bpl
jne	0x14002f0f0
jne	0x14002f0f0
test	r12b, r12b
jne	0x14002f120
jne	0x14002f120
cmp	r13b, r9b
jne	0x14002f077
jne	0x14002f077
mov	rax, qword ptr [rsp + 0x128]
or	dword ptr [rax], 2
mov	di, r11w
mov	rax, rsi
mov	qword ptr [rsi], rbx
mov	qword ptr [rsi + 8], rdi
add	rsp, 0xb8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
cmp	dx, -1
sete	r13b
test	rbx, rbx
setne	bpl
mov	r8d, r13d
and	bpl, r13b
jne	0x14002f250
jne	0x14002f250
mov	eax, r9d
test	r12b, r12b
jne	0x14002f220
jne	0x14002f220
mov	ecx, dword ptr [rsp + 0xa8]
cmp	al, r8b
jne	0x14002f140
jne	0x14002f140
lea	eax, [rcx + 0x64]
cmp	ecx, 0x45
cmovge	eax, ecx
mov	rdx, qword ptr [rsp + 0x130]
mov	dword ptr [rdx + 0x14], eax
test	bpl, bpl
je	0x14002f05e
je	0x14002f05e
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14002f340
jae	0x14002f340
movzx	eax, word ptr [rax]
xor	r13d, r13d
cmp	ax, -1
mov	eax, 0
cmove	r13d, ebp
cmove	rbx, rax
test	r12b, r12b
je	0x14002f067
je	0x14002f067
nop	
mov	rax, qword ptr [r14 + 0x10]
cmp	rax, qword ptr [r14 + 0x18]
jae	0x14002f368
jae	0x14002f368
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	r9b
jmp	0x14002f067
jmp	0x14002f067
nop	
test	bpl, bpl
jne	0x14002f318
jne	0x14002f318
mov	rax, qword ptr [r15]
mov	byte ptr [rsp + 0x58], r9b
movzx	edx, dx
mov	rcx, r15
mov	dword ptr [rsp + 0x50], r11d
mov	r8d, 0x2a
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
mov	ecx, dword ptr [rsp + 0xa8]
mov	r11d, dword ptr [rsp + 0x50]
lea	edx, [rax - 0x30]
movzx	r9d, byte ptr [rsp + 0x58]
cmp	dl, 9
ja	0x14002f280
ja	0x14002f280
mov	rdx, qword ptr [rbx + 0x10]
mov	r8, qword ptr [rbx + 0x18]
movsx	eax, al
lea	ecx, [rcx + rcx*4]
lea	r13d, [rax + rcx*2 - 0x30]
cmp	rdx, r8
jae	0x14002f3a8
jae	0x14002f3a8
add	rdx, 2
mov	dword ptr [rsp + 0xa8], r13d
mov	qword ptr [rbx + 0x10], rdx
cmp	rdx, r8
jae	0x14002f201
jae	0x14002f201
movzx	eax, word ptr [rdx]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	bpl
mov	eax, r9d
test	r12b, r12b
jne	0x14002f2f2
jne	0x14002f2f2
cmp	bpl, al
jne	0x14002f290
jne	0x14002f290
test	rbx, rbx
mov	eax, dword ptr [rsp + 0xa8]
setne	bpl
sub	eax, 0x76c
mov	r13d, 1
mov	r11d, 0xffffffff
jmp	0x14002f0dc
jmp	0x14002f0dc
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x50], r9b
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r9d, byte ptr [rsp + 0x50]
jmp	0x14002f1b7
jmp	0x14002f1b7
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x50]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14002f3fe
jae	0x14002f3fe
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14002f3f0
je	0x14002f3f0
xor	eax, eax
jmp	0x14002f0c7
jmp	0x14002f0c7
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14002f438
jae	0x14002f438
movzx	eax, word ptr [rax]
xor	r8d, r8d
cmp	ax, -1
jne	0x14002f0bb
jne	0x14002f0bb
mov	r8d, ebp
xor	ebx, ebx
xor	ebp, ebp
jmp	0x14002f0bb
jmp	0x14002f0bb
nop	word ptr [rax + rax]
test	rbx, rbx
setne	bpl
and	ebp, r13d
jmp	0x14002f0d3
jmp	0x14002f0d3
nop	
test	rbx, rbx
je	0x14002f3d8
je	0x14002f3d8
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14002f4ca
jae	0x14002f4ca
movzx	eax, word ptr [rax]
movzx	edx, ax
cmp	ax, -1
je	0x14002f3d8
je	0x14002f3d8
mov	ebp, 1
mov	rax, qword ptr [r15]
mov	byte ptr [rsp + 0x50], r9b
mov	rcx, r15
mov	r8d, 0x2a
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
movzx	r9d, byte ptr [rsp + 0x50]
movsx	r15d, al
lea	eax, [r15 - 0x30]
cmp	al, 9
jbe	0x14002f380
jbe	0x14002f380
mov	eax, dword ptr [rsp + 0xa8]
jmp	0x14002f1eb
jmp	0x14002f1eb
mov	rax, qword ptr [r14 + 0x10]
cmp	rax, qword ptr [r14 + 0x18]
jae	0x14002f473
jae	0x14002f473
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14002f465
je	0x14002f465
xor	eax, eax
jmp	0x14002f1d4
jmp	0x14002f1d4
nop	dword ptr [rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14002f48c
jae	0x14002f48c
movzx	edx, word ptr [rax]
xor	eax, eax
cmp	dx, -1
cmove	rbx, rax
jmp	0x14002f149
jmp	0x14002f149
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x58], r9b
mov	rcx, rbx
mov	dword ptr [rsp + 0x50], r11d
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r9d, byte ptr [rsp + 0x58]
mov	r11d, dword ptr [rsp + 0x50]
jmp	0x14002f101
jmp	0x14002f101
nop	dword ptr [rax + rax]
mov	rax, qword ptr [r14]
mov	dword ptr [rsp + 0x50], r11d
mov	rcx, r14
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r11d, dword ptr [rsp + 0x50]
jmp	0x14002f131
jmp	0x14002f131
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14002f4b1
jae	0x14002f4b1
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
lea	eax, [r13 + r13*4]
lea	eax, [r15 + rax*2 - 0x30]
jmp	0x14002f1eb
jmp	0x14002f1eb
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x50], r9b
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	dword ptr [rsp + 0xa8], r13d
mov	rdx, qword ptr [rbx + 0x10]
mov	r8, qword ptr [rbx + 0x18]
movzx	r9d, byte ptr [rsp + 0x50]
jmp	0x14002f1af
jmp	0x14002f1af
nop	dword ptr [rax]
xor	ebp, ebp
mov	edx, 0xffff
xor	ebx, ebx
jmp	0x14002f2bc
jmp	0x14002f2bc
nop	word ptr cs:[rax + rax]
mov	eax, r12d
xor	r14d, r14d
xor	r12d, r12d
jmp	0x14002f0c7
jmp	0x14002f0c7
mov	rcx, qword ptr [rsp + 0x50]
mov	qword ptr [rsp + 0x68], rdx
mov	byte ptr [rsp + 0x60], r9b
mov	rax, qword ptr [rcx]
mov	byte ptr [rsp + 0x5f], r8b
mov	dword ptr [rsp + 0x58], r11d
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rdx, qword ptr [rsp + 0x68]
movzx	r9d, byte ptr [rsp + 0x60]
movzx	r8d, byte ptr [rsp + 0x5f]
mov	r11d, dword ptr [rsp + 0x58]
jmp	0x14002f236
jmp	0x14002f236
mov	rax, qword ptr [rbx]
mov	qword ptr [rsp + 0x60], rdx
mov	rcx, rbx
mov	byte ptr [rsp + 0x5f], r9b
mov	dword ptr [rsp + 0x58], r11d
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rdx, qword ptr [rsp + 0x60]
movzx	r9d, byte ptr [rsp + 0x5f]
mov	r11d, dword ptr [rsp + 0x58]
jmp	0x14002f261
jmp	0x14002f261
mov	eax, r12d
xor	r14d, r14d
xor	r12d, r12d
jmp	0x14002f1d4
jmp	0x14002f1d4
mov	rax, qword ptr [r14]
mov	byte ptr [rsp + 0x50], r9b
mov	rcx, r14
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r9d, byte ptr [rsp + 0x50]
jmp	0x14002f303
jmp	0x14002f303
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x58], r9b
mov	rcx, rbx
mov	dword ptr [rsp + 0x50], r11d
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r9d, byte ptr [rsp + 0x58]
mov	r11d, dword ptr [rsp + 0x50]
mov	edx, eax
jmp	0x14002f329
jmp	0x14002f329
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x50], r9b
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
movzx	r9d, byte ptr [rsp + 0x50]
jmp	0x14002f396
jmp	0x14002f396
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x50], r9b
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r9d, byte ptr [rsp + 0x50]
jmp	0x14002f2aa
jmp	0x14002f2aa
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9 + 8]
mov	rdi, qword ptr [r8]
mov	r13, qword ptr [r9]
mov	qword ptr [rsp + 0x80], rcx
mov	rcx, qword ptr [rip + 0x8f2d3]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0xc0]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r15, qword ptr [rax + rdx*8]
test	r15, r15
je	0x14002f889
je	0x14002f889
cmp	bp, -1
mov	eax, esi
mov	qword ptr [rsp + 0x20], rsi
mov	rsi, r15
sete	r12b
xor	r14d, r14d
mov	r15, qword ptr [rsp + 0xb8]
xor	ebp, ebp
mov	rbx, r14
mov	r14d, eax
jmp	0x14002f6ec
jmp	0x14002f6ec
nop	
test	r13, r13
mov	r8d, r11d
setne	dl
and	dl, r12b
jne	0x14002f740
jne	0x14002f740
mov	edx, r12d
cmp	r8b, dl
je	0x14002f770
je	0x14002f770
cmp	rbx, r15
jae	0x14002f770
jae	0x14002f770
test	rdi, rdi
je	0x14002f695
je	0x14002f695
test	r11b, r11b
jne	0x14002f7d0
jne	0x14002f7d0
movzx	edx, r14w
mov	rax, qword ptr [rsi]
mov	r8d, 0x2a
mov	rcx, rsi
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
lea	edx, [rax - 0x30]
cmp	dl, 9
ja	0x14002f770
ja	0x14002f770
lea	edx, [rbp + rbp*4]
movsx	eax, al
lea	ebp, [rax + rdx*2 - 0x30]
cmp	ebp, dword ptr [rsp + 0xb0]
jg	0x14002f810
jg	0x14002f810
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x14002f7f0
jae	0x14002f7f0
add	rax, 2
mov	qword ptr [rdi + 0x10], rax
add	rbx, 1
mov	r14d, 0xffffffff
cmp	r14w, -1
sete	r11b
test	rdi, rdi
setne	r8b
and	r8b, r11b
je	0x14002f660
je	0x14002f660
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x14002f850
jae	0x14002f850
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r8d, eax
mov	eax, 0
cmove	rdi, rax
test	r13, r13
setne	dl
and	dl, r12b
je	0x14002f672
je	0x14002f672
nop	dword ptr [rax + rax]
mov	rax, qword ptr [r13 + 0x10]
cmp	rax, qword ptr [r13 + 0x18]
jae	0x14002f820
jae	0x14002f820
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edx, eax
mov	eax, 0
cmove	r13, rax
cmp	r8b, dl
jne	0x14002f67e
jne	0x14002f67e
nop	
mov	eax, r14d
mov	r14, rbx
mov	rsi, qword ptr [rsp + 0x20]
test	r14, r14
mov	ebx, eax
setne	dl
cmp	ebp, dword ptr [rsp + 0xa8]
setge	al
test	dl, al
je	0x14002f79a
je	0x14002f79a
cmp	ebp, dword ptr [rsp + 0xb0]
jle	0x14002f800
jle	0x14002f800
mov	rax, qword ptr [rsp + 0xc8]
or	dword ptr [rax], 4
mov	rax, qword ptr [rsp + 0x80]
mov	si, bx
mov	qword ptr [rax], rdi
mov	qword ptr [rax + 8], rsi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x14002f878
jae	0x14002f878
movzx	edx, word ptr [rax]
xor	eax, eax
cmp	dx, -1
cmove	rdi, rax
jmp	0x14002f699
jmp	0x14002f699
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x14002f6e2
jmp	0x14002f6e2
nop	
mov	rax, qword ptr [rsp + 0xa0]
mov	dword ptr [rax], ebp
jmp	0x14002f7a5
jmp	0x14002f7a5
nop	dword ptr [rax]
mov	rsi, qword ptr [rsp + 0x20]
mov	ebx, r14d
jmp	0x14002f79a
jmp	0x14002f79a
nop	word ptr [rax + rax]
mov	rax, qword ptr [r13]
mov	byte ptr [rsp + 0x2f], dl
mov	rcx, r13
mov	byte ptr [rsp + 0x2e], r8b
mov	byte ptr [rsp + 0x2d], r11b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x2f]
movzx	r8d, byte ptr [rsp + 0x2e]
movzx	r11d, byte ptr [rsp + 0x2d]
jmp	0x14002f751
jmp	0x14002f751
nop	
mov	rax, qword ptr [rdi]
mov	byte ptr [rsp + 0x2e], r8b
mov	rcx, rdi
mov	byte ptr [rsp + 0x2d], r11b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, byte ptr [rsp + 0x2e]
movzx	r11d, byte ptr [rsp + 0x2d]
jmp	0x14002f716
jmp	0x14002f716
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, ax
jmp	0x14002f7e1
jmp	0x14002f7e1
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x138
movups	xmmword ptr [rsp + 0x110], xmm6
movups	xmmword ptr [rsp + 0x120], xmm7
mov	r12, qword ptr [rsp + 0x1a0]
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [r9 + 8]
mov	r14, qword ptr [rsp + 0x1a8]
mov	rsi, rcx
mov	rcx, qword ptr [rip + 0x8ef15]
mov	rdi, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [r12 + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x14002fb56
jae	0x14002fb56
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x14002fb56
je	0x14002fb56
mov	r8, qword ptr [rip + 0x8f393]
xor	r9d, r9d
lea	rdx, [rip + 0x91289]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x14002fb56
je	0x14002fb56
mov	rax, qword ptr [rax + 0x10]
mov	rdx, rdi
lea	r9, [rsp + 0x60]
lea	rcx, [rsp + 0x80]
mov	dword ptr [rsp + 0x9c], 0
lea	r8, [rsp + 0x70]
movdqu	xmm2, xmmword ptr [rax + 0x58]
movdqu	xmm1, xmmword ptr [rax + 0x68]
movdqu	xmm0, xmmword ptr [rax + 0x78]
movdqu	xmm6, xmmword ptr [rax + 0x88]
movdqu	xmm5, xmmword ptr [rax + 0x98]
movdqu	xmm4, xmmword ptr [rax + 0xa8]
movdqu	xmm3, xmmword ptr [rax + 0xb8]
lea	rax, [rsp + 0x9c]
mov	qword ptr [rsp + 0x38], r12
movdqu	xmm7, xmm6
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xa0]
shufpd	xmm7, xmm5, 1
shufpd	xmm5, xmm4, 1
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x98]
shufpd	xmm4, xmm3, 1
shufpd	xmm3, xmm2, 1
mov	qword ptr [rsp + 0x20], rax
shufpd	xmm2, xmm1, 1
shufpd	xmm1, xmm0, 1
shufpd	xmm0, xmm6, 1
mov	qword ptr [rsp + 0x30], 7
mov	qword ptr [rsp + 0x78], rbx
xor	bx, bx
mov	qword ptr [rsp + 0x70], r15
mov	qword ptr [rsp + 0x60], rbp
mov	qword ptr [rsp + 0x68], r13
movups	xmmword ptr [rsp + 0xa0], xmm7
movups	xmmword ptr [rsp + 0xb0], xmm5
movups	xmmword ptr [rsp + 0xc0], xmm4
movups	xmmword ptr [rsp + 0xd0], xmm3
movups	xmmword ptr [rsp + 0xe0], xmm2
movups	xmmword ptr [rsp + 0xf0], xmm1
movups	xmmword ptr [rsp + 0x100], xmm0
call	0x140032cf0
call	0x140032cf0
mov	rax, qword ptr [rsp + 0x88]
mov	rdi, qword ptr [rsp + 0x80]
mov	ecx, dword ptr [rsp + 0x9c]
movzx	edx, ax
mov	qword ptr [rsp + 0x80], rdi
or	rbx, rdx
mov	qword ptr [rsp + 0x88], rax
mov	rdx, rdi
test	ecx, ecx
je	0x14002fac8
je	0x14002fac8
or	dword ptr [r14], 4
cmp	ax, -1
sete	r12b
test	rdi, rdi
setne	al
and	al, r12b
mov	r15d, eax
jne	0x14002fae0
jne	0x14002fae0
cmp	r13w, -1
sete	al
mov	ecx, eax
test	rbp, rbp
je	0x14002fa8d
je	0x14002fa8d
test	al, al
jne	0x14002fb10
jne	0x14002fb10
cmp	cl, r12b
jne	0x14002fa96
jne	0x14002fa96
or	dword ptr [r14], 2
mov	qword ptr [rsi], rdx
mov	rax, rsi
mov	qword ptr [rsi + 8], rbx
movups	xmm6, xmmword ptr [rsp + 0x110]
movups	xmm7, xmmword ptr [rsp + 0x120]
add	rsp, 0x138
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x1b0]
mov	r8d, dword ptr [rsp + 0x98]
mov	dword ptr [rcx + 0x18], r8d
jmp	0x14002fa60
jmp	0x14002fa60
nop	
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x14002fb30
jae	0x14002fb30
movzx	eax, word ptr [rax]
xor	r12d, r12d
mov	edx, 0
cmp	ax, -1
cmove	r12d, r15d
cmovne	rdx, rdi
jmp	0x14002fa76
jmp	0x14002fa76
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x14002fb40
jae	0x14002fb40
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	cl
jmp	0x14002fa8d
jmp	0x14002fa8d
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14002faed
jmp	0x14002faed
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbp]
mov	qword ptr [rsp + 0x58], rdx
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rdx, qword ptr [rsp + 0x58]
jmp	0x14002fb1d
jmp	0x14002fb1d
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x88
lea	rbp, [rsp + 0x80]
mov	r15, qword ptr [r8 + 8]
mov	rbx, qword ptr [r8]
mov	rdx, qword ptr [r9]
mov	r13, qword ptr [r9 + 8]
mov	r8d, r15d
mov	rsi, qword ptr [rbp + 0x80]
mov	qword ptr [rbp + 0x50], rcx
mov	rcx, qword ptr [rip + 0x8ed42]
mov	qword ptr [rbp - 0x58], r15
mov	qword ptr [rbp - 0x18], rbx
mov	dword ptr [rbp - 0x10], r8d
mov	qword ptr [rbp - 0x38], rdx
mov	qword ptr [rbp - 8], rdx
call	0x140022a70
call	0x140022a70
mov	rcx, rax
mov	rax, qword ptr [rbp + 0x88]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r14, qword ptr [rax + rcx*8]
test	r14, r14
je	0x14003076f
je	0x14003076f
mov	rax, rsi
shl	rax, 4
call	0x14000c150
call	0x14000c150
mov	r10, qword ptr [rbp - 0x18]
mov	rdx, qword ptr [rbp - 8]
mov	r8d, dword ptr [rbp - 0x10]
sub	rsp, rax
cmp	r15w, -1
sete	r15b
test	r10, r10
lea	rdi, [rsp + 0x20]
setne	r12b
and	r12b, r15b
jne	0x14003054e
jne	0x14003054e
mov	r12d, r15d
cmp	r13w, -1
sete	byte ptr [rbp - 0x23]
test	rdx, rdx
movzx	eax, byte ptr [rbp - 0x23]
setne	bl
and	bl, al
jne	0x14003057d
jne	0x14003057d
movzx	ebx, byte ptr [rbp - 0x23]
cmp	bl, r12b
jne	0x14002fc6a
jne	0x14002fc6a
mov	rax, qword ptr [rbp + 0x90]
or	dword ptr [rax], 4
mov	rax, qword ptr [rbp - 0x58]
mov	rdi, qword ptr [rbp + 0x50]
mov	ax, r8w
mov	qword ptr [rdi], r10
mov	qword ptr [rdi + 8], rax
mov	rax, rdi
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
test	r10, r10
je	0x14002fc78
je	0x14002fc78
test	r15b, r15b
jne	0x1400305ac
jne	0x1400305ac
movzx	r12d, r8w
mov	rax, qword ptr [r14]
mov	qword ptr [rbp - 0x10], r10
mov	edx, r12d
mov	rcx, r14
mov	dword ptr [rbp - 8], r8d
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	edx, r12d
mov	rcx, r14
mov	ebx, eax
mov	rax, qword ptr [r14]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
test	rsi, rsi
mov	r8d, dword ptr [rbp - 8]
mov	r10, qword ptr [rbp - 0x10]
mov	r12d, eax
je	0x14002fc39
je	0x14002fc39
lea	rax, [rdi + rsi*8]
xor	r9d, r9d
mov	qword ptr [rbp - 0x18], rdi
mov	r13, qword ptr [rbp + 0x78]
mov	rdi, r14
mov	qword ptr [rbp - 0x20], rax
xor	r15d, r15d
mov	r14, r9
mov	word ptr [rbp - 0x22], r8w
mov	qword ptr [rbp - 0x30], r10
mov	word ptr [rbp - 0x10], r12w
jmp	0x14002fce9
jmp	0x14002fce9
nop	word ptr [rax + rax]
add	r14, 1
cmp	rsi, r14
je	0x14002fd50
je	0x14002fd50
mov	rax, qword ptr [r13 + r14*8]
mov	rcx, rdi
movzx	edx, word ptr [rax]
mov	rax, qword ptr [rdi]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
cmp	bx, ax
je	0x14002fd16
je	0x14002fd16
mov	rax, qword ptr [r13 + r14*8]
mov	rcx, rdi
movzx	edx, word ptr [rax]
mov	rax, qword ptr [rdi]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	word ptr [rbp - 0x10], ax
jne	0x14002fce0
jne	0x14002fce0
mov	rax, qword ptr [rbp - 0x20]
lea	r12, [r15*8]
mov	rcx, qword ptr [r13 + r14*8]
add	r15, 1
lea	r10, [rax + r12]
mov	qword ptr [rbp - 8], r10
call	0x140015a60
call	0x140015a60
mov	r10, qword ptr [rbp - 8]
mov	qword ptr [r10], rax
mov	rax, qword ptr [rbp - 0x18]
mov	qword ptr [rax + r12], r14
add	r14, 1
cmp	rsi, r14
jne	0x14002fce9
jne	0x14002fce9
mov	r9, r14
movzx	r8d, word ptr [rbp - 0x22]
mov	r14, rdi
mov	r10, qword ptr [rbp - 0x30]
mov	rdi, qword ptr [rbp - 0x18]
cmp	r15, 1
jbe	0x14003071a
jbe	0x14003071a
mov	rax, qword ptr [rbp - 0x20]
mov	qword ptr [rbp - 0x50], r9
mov	r13, r14
lea	rsi, [r15*8]
mov	qword ptr [rbp - 0x18], 0
mov	r11, qword ptr [rax]
add	rax, 8
mov	qword ptr [rbp - 0x30], rsi
mov	rsi, r10
mov	qword ptr [rbp - 0x48], rax
mov	r14, r11
nop	dword ptr [rax]
mov	rbx, qword ptr [rbp - 0x20]
mov	rdx, qword ptr [rbp - 0x30]
mov	r11, qword ptr [rbp - 0x48]
lea	rcx, [rbx + rdx]
mov	rbx, r14
mov	rdx, rcx
mov	rax, r11
sub	rdx, r11
and	edx, 8
je	0x14002fde0
je	0x14002fde0
mov	rax, qword ptr [rbp - 0x48]
mov	rbx, qword ptr [rax]
mov	rax, qword ptr [rbp - 0x20]
cmp	r14, rbx
cmovbe	rbx, r14
add	rax, 0x10
cmp	rcx, rax
je	0x14002fdfe
je	0x14002fdfe
nop	dword ptr [rax]
mov	rdx, qword ptr [rax]
cmp	rbx, rdx
cmova	rbx, rdx
mov	rdx, qword ptr [rax + 8]
cmp	rbx, rdx
cmova	rbx, rdx
add	rax, 0x10
cmp	rcx, rax
jne	0x14002fde0
jne	0x14002fde0
add	qword ptr [rbp - 0x18], 1
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, qword ptr [rbp - 0x18]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x1400301a0
jae	0x1400301a0
add	rax, 2
mov	qword ptr [rsi + 0x10], rax
cmp	rdx, rbx
je	0x1400301b3
je	0x1400301b3
jae	0x1400303e5
jae	0x1400303e5
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x1400303d7
jae	0x1400303d7
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rsi, rax
sete	bl
cmp	qword ptr [rbp - 0x38], 0
setne	al
and	al, byte ptr [rbp - 0x23]
mov	r12d, eax
jne	0x14002ffb0
jne	0x14002ffb0
movzx	r12d, byte ptr [rbp - 0x23]
cmp	bl, r12b
je	0x14002ffe9
je	0x14002ffe9
test	rsi, rsi
je	0x14002ff90
je	0x14002ff90
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x140030508
jae	0x140030508
movzx	edx, word ptr [rax]
mov	rax, qword ptr [r13]
mov	r10, qword ptr [rax + 0x40]
cmp	dx, -1
je	0x14002ff94
je	0x14002ff94
mov	rcx, r13
call	r10
call	r10
mov	word ptr [rbp - 0x10], ax
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x1400304fa
jae	0x1400304fa
movzx	eax, word ptr [rax]
cmp	ax, -1
movzx	edx, ax
mov	eax, 0xffff
cmove	edx, eax
mov	eax, 0
cmove	rsi, rax
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	ecx, eax
test	r15, r15
je	0x140030188
je	0x140030188
mov	rax, qword ptr [rbp - 0x18]
mov	qword ptr [rbp - 0x40], rsi
xor	ebx, ebx
mov	r14, r13
mov	word ptr [rbp - 0x22], cx
add	rax, rax
mov	qword ptr [rbp - 8], rax
jmp	0x14002ff3d
jmp	0x14002ff3d
nop	dword ptr [rax]
mov	rax, qword ptr [r14]
movzx	edx, word ptr [r13]
mov	rcx, r14
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	word ptr [rbp - 0x22], ax
je	0x14002ff6d
je	0x14002ff6d
sub	r15, 1
mov	rcx, qword ptr [rbp - 0x20]
lea	rax, [r15*8]
mov	qword ptr [rbp - 0x30], rax
mov	rax, qword ptr [rdi + r15*8]
mov	qword ptr [r12], rax
mov	rax, qword ptr [rcx + r15*8]
mov	qword ptr [rcx + rsi], rax
cmp	rbx, r15
jae	0x14002ff76
jae	0x14002ff76
lea	rsi, [rbx*8]
mov	rcx, qword ptr [rbp + 0x78]
mov	r13, qword ptr [rbp - 8]
lea	r12, [rdi + rsi]
mov	rax, qword ptr [r12]
add	r13, qword ptr [rcx + rax*8]
mov	rax, qword ptr [r14]
mov	rcx, r14
movzx	edx, word ptr [r13]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
cmp	word ptr [rbp - 0x10], ax
jne	0x14002ff00
jne	0x14002ff00
add	rbx, 1
cmp	rbx, r15
jb	0x14002ff3d
jb	0x14002ff3d
mov	rsi, qword ptr [rbp - 0x40]
mov	r13, r14
cmp	r15, 1
jbe	0x14002ffe9
jbe	0x14002ffe9
mov	rax, qword ptr [rbp - 0x20]
mov	r14, qword ptr [rax]
jmp	0x14002fda0
jmp	0x14002fda0
nop	
mov	rax, qword ptr [r13]
mov	edx, 0xffff
mov	rcx, r13
xor	esi, esi
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	edx, 0xffff
mov	word ptr [rbp - 0x10], ax
jmp	0x14002fece
jmp	0x14002fece
nop	
mov	rdx, qword ptr [rbp - 0x38]
mov	rax, qword ptr [rdx + 0x10]
cmp	rax, qword ptr [rdx + 0x18]
jae	0x1400304eb
jae	0x1400304eb
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r12d, eax
mov	eax, 0
cmovne	rax, qword ptr [rbp - 0x38]
mov	qword ptr [rbp - 0x38], rax
cmp	bl, r12b
jne	0x14002fe6f
jne	0x14002fe6f
mov	r10, rsi
mov	r14, r13
mov	r8d, 0xffffffff
cmp	r15, 1
jne	0x14002fc39
jne	0x14002fc39
mov	rax, qword ptr [r10 + 0x10]
cmp	rax, qword ptr [r10 + 0x18]
jae	0x1400305ce
jae	0x1400305ce
add	rax, 2
mov	qword ptr [r10 + 0x10], rax
add	qword ptr [rbp - 0x18], 1
mov	rbx, qword ptr [rdi]
mov	rax, qword ptr [rbp + 0x78]
mov	rdi, qword ptr [rax + rbx*8]
mov	rax, qword ptr [rbp - 0x20]
mov	r12, qword ptr [rax]
cmp	qword ptr [rbp - 0x18], r12
jae	0x140030166
jae	0x140030166
test	r10, r10
jne	0x1400300f9
jne	0x1400300f9
cmp	qword ptr [rbp - 0x38], 0
mov	r13d, 1
setne	sil
and	sil, byte ptr [rbp - 0x23]
jne	0x14003012e
jne	0x14003012e
movzx	esi, byte ptr [rbp - 0x23]
cmp	sil, r13b
je	0x140030166
je	0x140030166
mov	rax, qword ptr [rbp - 0x18]
mov	qword ptr [rbp - 8], r10
mov	rcx, r14
movzx	edx, word ptr [rdi + rax*2]
mov	rax, qword ptr [r14]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	r10, qword ptr [rbp - 8]
mov	esi, eax
test	r10, r10
jne	0x140030430
jne	0x140030430
mov	rax, qword ptr [r14]
mov	edx, 0xffff
mov	rcx, r14
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
cmp	ax, si
je	0x1400303f3
je	0x1400303f3
mov	rax, qword ptr [rbp - 0x18]
mov	rcx, r14
movzx	edx, word ptr [rdi + rax*2]
mov	rax, qword ptr [r14]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	edx, 0xffff
xor	r10d, r10d
mov	esi, eax
mov	rax, qword ptr [r14]
mov	qword ptr [rbp - 8], r10
mov	rcx, r14
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	r10, qword ptr [rbp - 8]
cmp	ax, si
jne	0x140030166
jne	0x140030166
mov	rax, qword ptr [r10 + 0x10]
cmp	rax, qword ptr [r10 + 0x18]
jae	0x140030404
jae	0x140030404
add	rax, 2
add	qword ptr [rbp - 0x18], 1
mov	qword ptr [r10 + 0x10], rax
mov	rax, qword ptr [rbp - 0x18]
cmp	r12, rax
je	0x140030173
je	0x140030173
mov	rax, qword ptr [r10 + 0x10]
cmp	rax, qword ptr [r10 + 0x18]
jae	0x140030611
jae	0x140030611
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	r10, rax
sete	r13b
cmp	qword ptr [rbp - 0x38], 0
setne	sil
and	sil, byte ptr [rbp - 0x23]
je	0x140030058
je	0x140030058
mov	rdx, qword ptr [rbp - 0x38]
mov	rax, qword ptr [rdx + 0x10]
cmp	rax, qword ptr [rdx + 0x18]
jae	0x1400305fa
jae	0x1400305fa
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	esi, eax
mov	eax, 0
cmovne	rax, qword ptr [rbp - 0x38]
mov	qword ptr [rbp - 0x38], rax
cmp	sil, r13b
jne	0x140030065
jne	0x140030065
mov	rax, qword ptr [rbp - 0x18]
cmp	r12, rax
jne	0x1400303e8
jne	0x1400303e8
mov	rax, qword ptr [rbp + 0x70]
mov	r8d, 0xffffffff
mov	dword ptr [rax], ebx
jmp	0x14002fc43
jmp	0x14002fc43
nop	dword ptr [rax]
mov	r10, rsi
mov	r8d, 0xffffffff
jmp	0x14002fc39
jmp	0x14002fc39
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	qword ptr [rbp - 0x18], rbx
jne	0x14002fe26
jne	0x14002fe26
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x140030666
jae	0x140030666
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rsi, rax
sete	dl
cmp	qword ptr [rbp - 0x38], 0
setne	al
and	al, byte ptr [rbp - 0x23]
mov	r12d, eax
jne	0x140030519
jne	0x140030519
movzx	r12d, byte ptr [rbp - 0x23]
xor	ebx, ebx
cmp	dl, r12b
je	0x1400302fa
je	0x1400302fa
test	rsi, rsi
je	0x1400304cc
je	0x1400304cc
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x140030682
jae	0x140030682
movzx	edx, word ptr [rax]
mov	rax, qword ptr [r13]
mov	r10, qword ptr [rax + 0x40]
cmp	dx, -1
je	0x1400304d0
je	0x1400304d0
mov	rcx, r13
call	r10
call	r10
mov	word ptr [rbp - 0x22], ax
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x140030674
jae	0x140030674
movzx	eax, word ptr [rax]
cmp	ax, -1
movzx	edx, ax
mov	eax, 0xffff
cmove	edx, eax
mov	eax, 0
cmove	rsi, rax
mov	rax, qword ptr [r13]
mov	rcx, r13
xor	ebx, ebx
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	qword ptr [rbp - 0x40], rsi
mov	rsi, qword ptr [rbp - 0x20]
mov	r12d, eax
mov	rax, qword ptr [rbp - 0x18]
mov	qword ptr [rbp - 0x60], r14
mov	r14, rbx
mov	word ptr [rbp - 0x10], r12w
mov	r12, qword ptr [rbp + 0x78]
add	rax, rax
mov	qword ptr [rbp - 8], rax
mov	rax, rdi
mov	rdi, r13
mov	r13, rax
nop	word ptr [rax + rax]
mov	rax, qword ptr [r13 + r14*8]
mov	rbx, qword ptr [rbp - 0x18]
mov	rax, qword ptr [r12 + rax*8]
cmp	rbx, qword ptr [rsi + r14*8]
jae	0x1400302de
jae	0x1400302de
mov	rbx, qword ptr [rbp - 8]
mov	rcx, rdi
add	rbx, rax
mov	rax, qword ptr [rdi]
movzx	edx, word ptr [rbx]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
cmp	ax, word ptr [rbp - 0x22]
je	0x1400304b1
je	0x1400304b1
mov	rax, qword ptr [rdi]
movzx	edx, word ptr [rbx]
mov	rcx, rdi
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	word ptr [rbp - 0x10], ax
je	0x1400304b1
je	0x1400304b1
add	r14, 1
cmp	r14, r15
jne	0x140030298
jne	0x140030298
mov	rax, r13
mov	rsi, qword ptr [rbp - 0x40]
mov	r14, qword ptr [rbp - 0x60]
mov	r13, rdi
xor	ebx, ebx
mov	rdi, rax
mov	rcx, qword ptr [rbp - 0x20]
mov	r8, qword ptr [rbp - 0x18]
xor	eax, eax
mov	r9, qword ptr [rbp - 0x30]
jmp	0x14003031d
jmp	0x14003031d
nop	word ptr [rax + rax]
add	rax, 1
cmp	rax, r15
jae	0x140030348
jae	0x140030348
mov	r14, qword ptr [rcx + rax*8]
cmp	r8, r14
sete	dl
cmp	dl, bl
jne	0x140030310
jne	0x140030310
sub	r15, 1
mov	rdx, qword ptr [rdi + r15*8]
lea	r9, [r15*8]
mov	qword ptr [rdi + rax*8], rdx
mov	rdx, qword ptr [rcx + r15*8]
mov	qword ptr [rcx + rax*8], rdx
cmp	rax, r15
jb	0x140030319
jb	0x140030319
mov	qword ptr [rbp - 0x30], r9
test	bl, bl
je	0x14003063d
je	0x14003063d
mov	rcx, qword ptr [rbp - 0x20]
mov	rax, qword ptr [rcx]
cmp	r15, 1
jbe	0x1400303b6
jbe	0x1400303b6
mov	r8, qword ptr [rbp - 0x48]
lea	r10, [rcx + r9]
mov	rcx, r10
sub	rcx, r8
mov	rdx, r8
and	ecx, 8
je	0x140030398
je	0x140030398
mov	rdx, qword ptr [rbp - 0x48]
mov	rdx, qword ptr [rdx]
cmp	rax, rdx
cmova	rax, rdx
mov	rdx, qword ptr [rbp - 0x20]
add	rdx, 0x10
cmp	rdx, r10
je	0x1400303b6
je	0x1400303b6
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rdx]
cmp	rax, rcx
cmova	rax, rcx
mov	rcx, qword ptr [rdx + 8]
cmp	rax, rcx
cmova	rax, rcx
add	rdx, 0x10
cmp	rdx, r10
jne	0x140030398
jne	0x140030398
cmp	qword ptr [rbp - 0x18], rax
jae	0x14002ffe9
jae	0x14002ffe9
test	rsi, rsi
je	0x14002fe4d
je	0x14002fe4d
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jb	0x14002fe3a
jb	0x14002fe3a
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14002fe3d
jmp	0x14002fe3d
mov	r10, rsi
mov	r8d, 0xffffffff
jmp	0x14002fc39
jmp	0x14002fc39
xor	r10d, r10d
mov	rax, qword ptr [r10 + 0x10]
cmp	rax, qword ptr [r10 + 0x18]
jb	0x1400300e3
jb	0x1400300e3
mov	rax, qword ptr [r10]
mov	qword ptr [rbp - 8], r10
mov	rcx, r10
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
add	qword ptr [rbp - 0x18], 1
mov	rax, qword ptr [rbp - 0x18]
mov	r10, qword ptr [rbp - 8]
cmp	rax, r12
jne	0x1400300f9
jne	0x1400300f9
jmp	0x140030173
jmp	0x140030173
nop	dword ptr [rax]
mov	rax, qword ptr [r10 + 0x10]
cmp	rax, qword ptr [r10 + 0x18]
jae	0x1400305e4
jae	0x1400305e4
movzx	eax, word ptr [rax]
movzx	edx, ax
cmp	ax, -1
je	0x140030089
je	0x140030089
mov	rax, qword ptr [r14]
mov	qword ptr [rbp - 8], r10
mov	rcx, r14
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	r10, qword ptr [rbp - 8]
cmp	si, ax
je	0x1400300d5
je	0x1400300d5
mov	rax, qword ptr [rbp - 0x18]
mov	qword ptr [rbp - 8], r10
mov	rcx, r14
movzx	edx, word ptr [rdi + rax*2]
mov	rax, qword ptr [r14]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	r10, qword ptr [rbp - 8]
mov	esi, eax
mov	rax, qword ptr [r10 + 0x10]
cmp	rax, qword ptr [r10 + 0x18]
jae	0x140030627
jae	0x140030627
movzx	eax, word ptr [rax]
cmp	ax, -1
movzx	edx, ax
mov	eax, 0xffff
cmove	edx, eax
mov	eax, 0
cmove	r10, rax
jmp	0x1400300bb
jmp	0x1400300bb
mov	rax, r13
mov	rsi, qword ptr [rbp - 0x40]
mov	r13, rdi
mov	r14, qword ptr [rbp - 0x60]
mov	rdi, rax
mov	ebx, 1
jmp	0x1400302fa
jmp	0x1400302fa
mov	rax, qword ptr [r13]
mov	edx, 0xffff
mov	rcx, r13
xor	esi, esi
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	edx, 0xffff
mov	word ptr [rbp - 0x22], ax
jmp	0x140030257
jmp	0x140030257
mov	rcx, qword ptr [rbp - 0x38]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14002ffc5
jmp	0x14002ffc5
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14002feb6
jmp	0x14002feb6
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, ax
jmp	0x14002fe89
jmp	0x14002fe89
mov	rbx, qword ptr [rbp - 0x38]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400306b1
jae	0x1400306b1
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r12d, eax
mov	eax, 0
cmovne	rax, qword ptr [rbp - 0x38]
mov	qword ptr [rbp - 0x38], rax
jmp	0x1400301ed
jmp	0x1400301ed
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140030693
jae	0x140030693
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r12d, eax
mov	eax, 0
cmovne	rax, rbx
mov	r10, rax
jmp	0x14002fc15
jmp	0x14002fc15
mov	rax, qword ptr [rdx + 0x10]
cmp	rax, qword ptr [rdx + 0x18]
jae	0x1400306c7
jae	0x1400306c7
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	ebx, eax
mov	eax, 0
cmovne	rax, rdx
mov	qword ptr [rbp - 0x38], rax
jmp	0x14002fc34
jmp	0x14002fc34
mov	rax, qword ptr [r10 + 0x10]
cmp	rax, qword ptr [r10 + 0x18]
jae	0x14003074d
jae	0x14003074d
movzx	r12d, word ptr [rax]
xor	eax, eax
cmp	r12w, -1
cmove	r10, rax
jmp	0x14002fc7c
jmp	0x14002fc7c
mov	rax, qword ptr [r10]
mov	qword ptr [rbp - 8], r10
mov	rcx, r10
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	r10, qword ptr [rbp - 8]
jmp	0x140030015
jmp	0x140030015
mov	rax, qword ptr [r10]
mov	qword ptr [rbp - 8], r10
mov	rcx, r10
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r10, qword ptr [rbp - 8]
jmp	0x140030441
jmp	0x140030441
mov	rcx, qword ptr [rbp - 0x38]
mov	qword ptr [rbp - 8], r10
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r10, qword ptr [rbp - 8]
jmp	0x140030143
jmp	0x140030143
mov	rax, qword ptr [r10]
mov	qword ptr [rbp - 8], r10
mov	rcx, r10
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r10, qword ptr [rbp - 8]
jmp	0x14003010a
jmp	0x14003010a
mov	rax, qword ptr [r10]
mov	qword ptr [rbp - 8], r10
mov	rcx, r10
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r10, qword ptr [rbp - 8]
jmp	0x140030494
jmp	0x140030494
mov	r9, qword ptr [rbp - 0x50]
mov	r10, rsi
mov	r14, r13
cmp	r15, 2
je	0x1400306ed
je	0x1400306ed
mov	r8d, 0xffffffff
cmp	r15, 1
jne	0x14002fc39
jne	0x14002fc39
jmp	0x14003001a
jmp	0x14003001a
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400301c4
jmp	0x1400301c4
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14003023f
jmp	0x14003023f
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, ax
jmp	0x140030212
jmp	0x140030212
mov	rax, qword ptr [rbx]
mov	qword ptr [rbp - 0x10], rdx
mov	rcx, rbx
mov	dword ptr [rbp - 8], r8d
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rdx, qword ptr [rbp - 0x10]
mov	r8d, dword ptr [rbp - 8]
jmp	0x14003055f
jmp	0x14003055f
mov	rcx, qword ptr [rbp - 0x38]
mov	byte ptr [rbp - 8], dl
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rbp - 8]
jmp	0x14003052e
jmp	0x14003052e
mov	rax, qword ptr [rdx]
mov	qword ptr [rbp - 0x18], r10
mov	rcx, rdx
mov	dword ptr [rbp - 0x10], r8d
mov	qword ptr [rbp - 8], rdx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r10, qword ptr [rbp - 0x18]
mov	r8d, dword ptr [rbp - 0x10]
mov	rdx, qword ptr [rbp - 8]
jmp	0x14003058e
jmp	0x14003058e
test	r9b, 1
jne	0x1400303e8
jne	0x1400303e8
mov	rax, r9
mov	rbx, qword ptr [rdi]
mov	rdx, qword ptr [rdi + 8]
shr	rax, 1
cmp	rbx, rax
jae	0x140030725
jae	0x140030725
add	rax, rbx
cmp	rax, rdx
jne	0x1400303e8
jne	0x1400303e8
jmp	0x14003001d
jmp	0x14003001d
xor	eax, eax
mov	qword ptr [rbp - 0x18], rax
jmp	0x14002fff5
jmp	0x14002fff5
sub	rbx, rax
mov	r8d, 0xffffffff
cmp	rbx, rdx
jne	0x14002fc39
jne	0x14002fc39
mov	rsi, qword ptr [rbp - 0x20]
mov	qword ptr [rdi], rbx
mov	rax, qword ptr [rsi + 8]
mov	qword ptr [rsi], rax
mov	rbx, qword ptr [rdi]
jmp	0x14003001d
jmp	0x14003001d
mov	rax, qword ptr [r10]
mov	dword ptr [rbp - 0x10], r8d
mov	rcx, r10
mov	qword ptr [rbp - 8], r10
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rbp - 0x10]
mov	r10, qword ptr [rbp - 8]
movzx	r12d, ax
jmp	0x1400305be
jmp	0x1400305be
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x1c8
movups	xmmword ptr [rsp + 0x160], xmm6
movups	xmmword ptr [rsp + 0x170], xmm7
movups	xmmword ptr [rsp + 0x180], xmm8
movups	xmmword ptr [rsp + 0x190], xmm9
movups	xmmword ptr [rsp + 0x1a0], xmm10
movups	xmmword ptr [rsp + 0x1b0], xmm11
mov	r12, qword ptr [rsp + 0x230]
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [r9 + 8]
mov	r14, qword ptr [rsp + 0x238]
mov	rsi, rcx
mov	rcx, qword ptr [rip + 0x8e001]
mov	rdi, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [r12 + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x140030ad6
jae	0x140030ad6
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x140030ad6
je	0x140030ad6
mov	r8, qword ptr [rip + 0x8e47f]
xor	r9d, r9d
lea	rdx, [rip + 0x90375]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x140030ad6
je	0x140030ad6
mov	rax, qword ptr [rax + 0x10]
mov	rdx, rdi
mov	dword ptr [rsp + 0x9c], 0
lea	rcx, [rsp + 0x80]
lea	r9, [rsp + 0x60]
lea	r8, [rsp + 0x70]
movdqu	xmm5, xmmword ptr [rax + 0xc8]
movdqu	xmm4, xmmword ptr [rax + 0xd8]
movdqu	xmm3, xmmword ptr [rax + 0xe8]
movdqu	xmm2, xmmword ptr [rax + 0xf8]
movdqu	xmm1, xmmword ptr [rax + 0x108]
movdqu	xmm0, xmmword ptr [rax + 0x118]
movups	xmmword ptr [rsp + 0x100], xmm5
movdqu	xmm7, xmmword ptr [rax + 0x168]
movdqu	xmm6, xmmword ptr [rax + 0x178]
movups	xmmword ptr [rsp + 0x110], xmm4
movdqu	xmm10, xmmword ptr [rax + 0x138]
movdqu	xmm9, xmmword ptr [rax + 0x148]
movups	xmmword ptr [rsp + 0x120], xmm3
movdqu	xmm8, xmmword ptr [rax + 0x158]
movups	xmmword ptr [rsp + 0x130], xmm2
movdqu	xmm11, xmmword ptr [rax + 0x128]
lea	rax, [rsp + 0x9c]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xa0]
mov	qword ptr [rsp + 0x78], rbx
xor	bx, bx
movups	xmmword ptr [rsp + 0x140], xmm1
movups	xmmword ptr [rsp + 0x150], xmm0
mov	qword ptr [rsp + 0x70], r15
mov	qword ptr [rsp + 0x60], rbp
mov	qword ptr [rsp + 0x68], r13
mov	qword ptr [rsp + 0x38], r12
movups	xmmword ptr [rsp + 0xa0], xmm11
movups	xmmword ptr [rsp + 0xb0], xmm10
movups	xmmword ptr [rsp + 0xc0], xmm9
movups	xmmword ptr [rsp + 0xd0], xmm8
movups	xmmword ptr [rsp + 0xe0], xmm7
movups	xmmword ptr [rsp + 0xf0], xmm6
mov	qword ptr [rsp + 0x30], 0xc
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x98]
mov	qword ptr [rsp + 0x20], rax
call	0x140032cf0
call	0x140032cf0
mov	rax, qword ptr [rsp + 0x88]
mov	rdi, qword ptr [rsp + 0x80]
mov	ecx, dword ptr [rsp + 0x9c]
movzx	edx, ax
mov	qword ptr [rsp + 0x80], rdi
or	rbx, rdx
mov	qword ptr [rsp + 0x88], rax
mov	rdx, rdi
test	ecx, ecx
je	0x140030a40
je	0x140030a40
or	dword ptr [r14], 4
cmp	ax, -1
sete	r12b
test	rdi, rdi
setne	al
and	al, r12b
mov	r15d, eax
jne	0x140030a60
jne	0x140030a60
cmp	r13w, -1
sete	al
mov	ecx, eax
test	rbp, rbp
je	0x1400309e3
je	0x1400309e3
test	al, al
jne	0x140030a90
jne	0x140030a90
cmp	cl, r12b
jne	0x1400309ec
jne	0x1400309ec
or	dword ptr [r14], 2
mov	qword ptr [rsi], rdx
mov	rax, rsi
mov	qword ptr [rsi + 8], rbx
movups	xmm6, xmmword ptr [rsp + 0x160]
movups	xmm7, xmmword ptr [rsp + 0x170]
movups	xmm8, xmmword ptr [rsp + 0x180]
movups	xmm9, xmmword ptr [rsp + 0x190]
movups	xmm10, xmmword ptr [rsp + 0x1a0]
movups	xmm11, xmmword ptr [rsp + 0x1b0]
add	rsp, 0x1c8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	
mov	rcx, qword ptr [rsp + 0x240]
mov	r8d, dword ptr [rsp + 0x98]
mov	dword ptr [rcx + 0x10], r8d
jmp	0x1400309b2
jmp	0x1400309b2
nop	dword ptr [rax]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140030ab0
jae	0x140030ab0
movzx	eax, word ptr [rax]
xor	r12d, r12d
mov	edx, 0
cmp	ax, -1
cmove	r12d, r15d
cmovne	rdx, rdi
jmp	0x1400309cc
jmp	0x1400309cc
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140030ac0
jae	0x140030ac0
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	cl
jmp	0x1400309e3
jmp	0x1400309e3
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140030a6d
jmp	0x140030a6d
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbp]
mov	qword ptr [rsp + 0x58], rdx
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rdx, qword ptr [rsp + 0x58]
jmp	0x140030a9d
jmp	0x140030a9d
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
push	rbx
add	rsp, -0x80
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
lea	rax, [rsp + 0x74]
mov	rbx, rcx
lea	r9, [rsp + 0x50]
mov	qword ptr [rsp + 0x74], 0
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0xc8]
lea	r8, [rsp + 0x60]
mov	dword ptr [rsp + 0x7c], 0
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xb8]
mov	qword ptr [rsp + 0x68], r11
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0xb0]
movups	xmmword ptr [rsp + 0x50], xmm0
mov	qword ptr [rsp + 0x20], rax
call	0x140030b70
call	0x140030b70
mov	rax, rbx
sub	rsp, -0x80
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x1f8
movups	xmmword ptr [rsp + 0x190], xmm6
movups	xmmword ptr [rsp + 0x1a0], xmm7
movups	xmmword ptr [rsp + 0x1b0], xmm8
movups	xmmword ptr [rsp + 0x1c0], xmm9
movups	xmmword ptr [rsp + 0x1d0], xmm10
movups	xmmword ptr [rsp + 0x1e0], xmm11
movdqu	xmm6, xmmword ptr [r8]
movdqu	xmm7, xmmword ptr [r9]
mov	rbx, qword ptr [rsp + 0x268]
mov	rdi, rcx
mov	rcx, qword ptr [rip + 0x8dc1d]
mov	qword ptr [rsp + 0x248], rdx
movups	xmmword ptr [rsp + 0xb0], xmm6
movups	xmmword ptr [rsp + 0xa0], xmm7
call	0x140022a70
call	0x140022a70
mov	rcx, qword ptr [rsp + 0x260]
mov	rdx, qword ptr [rcx + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x140032ce7
jae	0x140032ce7
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x140032ce7
je	0x140032ce7
mov	r8, qword ptr [rip + 0x8e07f]
xor	r9d, r9d
lea	rdx, [rip + 0x8ff75]
call	0x1400b35e0
call	0x1400b35e0
mov	qword ptr [rsp + 0x60], rax
test	rax, rax
je	0x140032ce7
je	0x140032ce7
mov	rcx, qword ptr [rip + 0x8dc9b]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x260]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rsi, qword ptr [rax + rdx*8]
test	rsi, rsi
je	0x140032ce7
je	0x140032ce7
mov	rcx, qword ptr [rsp + 0x278]
xor	r15d, r15d
call	0x140015a60
call	0x140015a60
mov	dword ptr [rsp + 0x54], 0
movzx	ebp, word ptr [rsp + 0xb8]
mov	r10, rax
movzx	eax, word ptr [rsp + 0xa8]
mov	dword ptr [rsp + 0xc8], 0
mov	qword ptr [rsp + 0x58], r10
mov	r14, qword ptr [rsp + 0xb0]
mov	word ptr [rsp + 0x6c], ax
mov	r13, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x240], rdi
mov	qword ptr [rsp + 0x268], rbx
cmp	bp, -1
sete	dil
test	r14, r14
je	0x140030ce3
je	0x140030ce3
test	dil, dil
jne	0x140030ff0
jne	0x140030ff0
mov	r14d, edi
cmp	word ptr [rsp + 0x6c], -1
sete	bl
test	r13, r13
je	0x140030cfc
je	0x140030cfc
test	bl, bl
jne	0x140030e10
jne	0x140030e10
mov	eax, ebx
mov	rcx, qword ptr [rsp + 0x58]
cmp	r15, rcx
setb	r12b
xor	eax, r14d
and	r12b, al
je	0x140031020
je	0x140031020
mov	edx, dword ptr [rsp + 0x54]
test	edx, edx
jne	0x1400310e8
jne	0x1400310e8
lea	r14, [r15 + r15]
mov	rax, qword ptr [rsi]
xor	r8d, r8d
mov	rcx, rsi
mov	r13, qword ptr [rsp + 0x278]
add	r13, r14
movzx	edx, word ptr [r13]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	al, 0x25
je	0x140030e40
je	0x140030e40
mov	rax, qword ptr [rsi]
movzx	r8d, word ptr [r13]
mov	edx, 0x20
mov	rcx, rsi
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	r14, qword ptr [rsp + 0xb0]
mov	r12d, eax
test	al, al
jne	0x140030ed8
jne	0x140030ed8
mov	rax, qword ptr [rsi]
test	r14, r14
movzx	edx, word ptr [r13]
mov	rcx, rsi
setne	r12b
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	r8d, edi
movzx	edx, bp
mov	ebx, eax
and	r8b, r12b
jne	0x140031100
jne	0x140031100
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
cmp	bx, ax
je	0x140030ea0
je	0x140030ea0
mov	rax, qword ptr [rsi]
movzx	edx, word ptr [r13]
mov	rcx, rsi
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	ebx, eax
test	dil, dil
je	0x140030dc6
je	0x140030dc6
test	r12b, r12b
jne	0x140031138
jne	0x140031138
movzx	edx, bp
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	r14, qword ptr [rsp + 0xb0]
cmp	bx, ax
je	0x140030ea0
je	0x140030ea0
mov	dword ptr [rsp + 0x54], 4
mov	r14, qword ptr [rsp + 0xb0]
mov	dword ptr [rsp + 0xc8], 4
mov	r13, qword ptr [rsp + 0xa0]
add	r15, 1
jmp	0x140030ccd
jmp	0x140030ccd
nop	
mov	rax, qword ptr [r13 + 0x10]
cmp	rax, qword ptr [r13 + 0x18]
jae	0x140031250
jae	0x140031250
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x1400311a0
je	0x1400311a0
cmp	ax, -1
sete	al
jmp	0x140030cfe
jmp	0x140030cfe
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x278]
xor	r8d, r8d
mov	rcx, rsi
movzx	edx, word ptr [rax + r14 + 2]
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
mov	dword ptr [rsp + 0xcc], 0
cmp	al, 0x45
je	0x1400310a0
je	0x1400310a0
cmp	al, 0x4f
je	0x1400310a0
je	0x1400310a0
add	r15, 1
sub	eax, 0x25
cmp	al, 0x54
ja	0x140030de3
ja	0x140030de3
lea	rdx, [rip + 0x88e81]
movzx	eax, al
movsxd	rax, dword ptr [rdx + rax*4]
add	rax, rdx
jmp	rax
jmp	rax
nop	word ptr [rax + rax]
mov	rax, qword ptr [r14 + 0x10]
cmp	rax, qword ptr [r14 + 0x18]
jae	0x140031210
jae	0x140031210
add	rax, 2
mov	qword ptr [r14 + 0x10], rax
mov	ecx, 0xffffffff
mov	r13, qword ptr [rsp + 0xa0]
mov	ebp, 0xffffffff
mov	word ptr [rsp + 0xb8], cx
jmp	0x140030e06
jmp	0x140030e06
nop	dword ptr [rax]
test	r14, r14
mov	r13, qword ptr [rsp + 0xa0]
setne	dl
and	dl, dil
jne	0x140030f50
jne	0x140030f50
test	r13, r13
setne	al
and	al, bl
mov	r8d, eax
jne	0x140030f90
jne	0x140030f90
mov	r8d, ebx
cmp	dil, r8b
je	0x140030e06
je	0x140030e06
movzx	r8d, bp
test	dl, dl
jne	0x140030fb8
jne	0x140030fb8
mov	r9, qword ptr [rsi]
mov	edx, 0x20
mov	rcx, rsi
call	qword ptr [r9 + 0x10]
call	qword ptr [r9 + 0x10]
test	al, al
je	0x140030e06
je	0x140030e06
mov	rax, qword ptr [r14 + 0x10]
cmp	rax, qword ptr [r14 + 0x18]
jae	0x1400310c8
jae	0x1400310c8
add	rax, 2
mov	r9d, 0xffffffff
mov	qword ptr [r14 + 0x10], rax
mov	word ptr [rsp + 0xb8], r9w
mov	rax, qword ptr [r14 + 0x10]
cmp	rax, qword ptr [r14 + 0x18]
jae	0x1400311f8
jae	0x1400311f8
movzx	ebp, word ptr [rax]
cmp	bp, -1
je	0x140031168
je	0x140031168
xor	edi, edi
test	r13, r13
mov	edx, r12d
mov	ebp, 0xffffffff
setne	al
and	al, bl
mov	r8d, eax
je	0x140030efc
je	0x140030efc
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [r13 + 0x10]
cmp	rax, qword ptr [r13 + 0x18]
jae	0x1400311d0
jae	0x1400311d0
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140031188
je	0x140031188
xor	r8d, r8d
jmp	0x140030eff
jmp	0x140030eff
nop	dword ptr [rax + rax]
mov	rax, qword ptr [r14 + 0x10]
cmp	rax, qword ptr [r14 + 0x18]
jae	0x140031220
jae	0x140031220
movzx	r8d, word ptr [rax]
cmp	r8w, -1
jne	0x140030f14
jne	0x140030f14
mov	qword ptr [rsp + 0xb0], 0
xor	r14d, r14d
jmp	0x140030f14
jmp	0x140030f14
nop	dword ptr [rax]
mov	rax, qword ptr [r14 + 0x10]
cmp	rax, qword ptr [r14 + 0x18]
jae	0x140031238
jae	0x140031238
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x1400311b8
je	0x1400311b8
cmp	ax, -1
sete	r14b
jmp	0x140030ce6
jmp	0x140030ce6
nop	dword ptr [rax + rax]
mov	r10, qword ptr [rsp + 0x58]
mov	rdi, qword ptr [rsp + 0x240]
mov	rbx, qword ptr [rsp + 0x268]
cmp	r15, r10
jne	0x140031042
jne	0x140031042
mov	eax, dword ptr [rsp + 0x54]
test	eax, eax
je	0x140031045
je	0x140031045
or	dword ptr [rbx], 4
movdqu	xmm1, xmmword ptr [rsp + 0xb0]
mov	rax, rdi
movups	xmmword ptr [rdi], xmm1
movups	xmm6, xmmword ptr [rsp + 0x190]
movups	xmm7, xmmword ptr [rsp + 0x1a0]
movups	xmm8, xmmword ptr [rsp + 0x1b0]
movups	xmm9, xmmword ptr [rsp + 0x1c0]
movups	xmm10, xmmword ptr [rsp + 0x1d0]
movups	xmm11, xmmword ptr [rsp + 0x1e0]
add	rsp, 0x1f8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x278]
add	r15, 2
xor	r8d, r8d
mov	rcx, rsi
movzx	edx, word ptr [rax + r14 + 4]
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
jmp	0x140030e79
jmp	0x140030e79
nop	dword ptr [rax + rax]
mov	rax, qword ptr [r14]
mov	rcx, r14
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	r8d, 0xffffffff
mov	word ptr [rsp + 0xb8], r8w
jmp	0x140030f50
jmp	0x140030f50
nop	dword ptr [rax]
mov	rdi, qword ptr [rsp + 0x240]
mov	rbx, qword ptr [rsp + 0x268]
jmp	0x140031042
jmp	0x140031042
nop	dword ptr [rax]
mov	rax, qword ptr [r14 + 0x10]
cmp	rax, qword ptr [r14 + 0x18]
jae	0x1400328fa
jae	0x1400328fa
movzx	edx, word ptr [rax]
mov	r12d, r8d
cmp	dx, -1
jne	0x140030d96
jne	0x140030d96
mov	qword ptr [rsp + 0xb0], 0
xor	r12d, r12d
xor	r14d, r14d
jmp	0x140030d96
jmp	0x140030d96
nop	dword ptr [rax]
mov	rax, qword ptr [r14 + 0x10]
cmp	rax, qword ptr [r14 + 0x18]
jae	0x1400317a3
jae	0x1400317a3
movzx	edx, word ptr [rax]
cmp	dx, -1
jne	0x140030dc9
jne	0x140030dc9
mov	qword ptr [rsp + 0xb0], 0
jmp	0x140030dc9
jmp	0x140030dc9
nop	dword ptr [rax]
mov	edi, r12d
xor	edx, edx
xor	r14d, r14d
mov	qword ptr [rsp + 0xb0], 0
jmp	0x140030eeb
jmp	0x140030eeb
nop	dword ptr [rax]
mov	qword ptr [rsp + 0xa0], 0
xor	r13d, r13d
jmp	0x140030eff
jmp	0x140030eff
nop	dword ptr [rax]
mov	qword ptr [rsp + 0xa0], 0
jmp	0x140030e2b
jmp	0x140030e2b
nop	dword ptr [rax]
mov	qword ptr [rsp + 0xb0], 0
jmp	0x14003100b
jmp	0x14003100b
nop	dword ptr [rax]
mov	rax, qword ptr [r13]
mov	byte ptr [rsp + 0x6f], r8b
mov	rcx, r13
mov	byte ptr [rsp + 0x68], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, byte ptr [rsp + 0x6f]
movzx	edx, byte ptr [rsp + 0x68]
jmp	0x140030fa1
jmp	0x140030fa1
nop	dword ptr [rax + rax]
mov	rax, qword ptr [r14]
mov	rcx, r14
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
jmp	0x140030f61
jmp	0x140030f61
nop	dword ptr [rax + rax]
mov	rax, qword ptr [r14]
mov	rcx, r14
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140030eb6
jmp	0x140030eb6
nop	
mov	rax, qword ptr [r14]
mov	rcx, r14
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, ax
jmp	0x140030fca
jmp	0x140030fca
nop	word ptr [rax + rax]
mov	rax, qword ptr [r14]
mov	rcx, r14
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140031001
jmp	0x140031001
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140030e21
jmp	0x140030e21
mov	rax, qword ptr [rsp + 0x60]
lea	rcx, [rsp + 0x90]
lea	r9, [rsp + 0x70]
lea	r8, [rsp + 0x80]
mov	rax, qword ptr [rax + 0x10]
movdqu	xmm5, xmmword ptr [rax + 0x128]
movdqu	xmm4, xmmword ptr [rax + 0x138]
movdqu	xmm3, xmmword ptr [rax + 0x148]
movdqu	xmm2, xmmword ptr [rax + 0x158]
movdqu	xmm1, xmmword ptr [rax + 0x168]
movdqu	xmm0, xmmword ptr [rax + 0x178]
movdqu	xmm7, xmmword ptr [rax + 0x108]
movdqu	xmm6, xmmword ptr [rax + 0x118]
movdqu	xmm10, xmmword ptr [rax + 0xd8]
movdqu	xmm9, xmmword ptr [rax + 0xe8]
movdqu	xmm8, xmmword ptr [rax + 0xf8]
movdqu	xmm11, xmmword ptr [rax + 0xc8]
lea	rax, [rsp + 0xc8]
movups	xmmword ptr [rsp + 0x130], xmm5
movdqu	xmm5, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
movups	xmmword ptr [rsp + 0x140], xmm4
mov	rax, qword ptr [rsp + 0x260]
movdqu	xmm4, xmmword ptr [rsp + 0xb0]
movups	xmmword ptr [rsp + 0x150], xmm3
movups	xmmword ptr [rsp + 0x160], xmm2
movups	xmmword ptr [rsp + 0x170], xmm1
movups	xmmword ptr [rsp + 0x180], xmm0
movups	xmmword ptr [rsp + 0x80], xmm4
movups	xmmword ptr [rsp + 0x70], xmm5
movups	xmmword ptr [rsp + 0xd0], xmm11
movups	xmmword ptr [rsp + 0xe0], xmm10
movups	xmmword ptr [rsp + 0xf0], xmm9
movups	xmmword ptr [rsp + 0x100], xmm8
movups	xmmword ptr [rsp + 0x110], xmm7
movups	xmmword ptr [rsp + 0x120], xmm6
mov	qword ptr [rsp + 0x38], rax
lea	rax, [rsp + 0xd0]
mov	rdx, qword ptr [rsp + 0x248]
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0xcc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x30], 0x18
call	0x14002fb60
call	0x14002fb60
mov	rax, qword ptr [rsp + 0x90]
movzx	ebp, word ptr [rsp + 0x98]
mov	r13, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x90], rax
mov	r14, rax
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xc8]
mov	word ptr [rsp + 0xb8], bp
mov	dword ptr [rsp + 0x54], eax
test	eax, eax
jne	0x140030e06
jne	0x140030e06
movsxd	rax, dword ptr [rsp + 0xcc]
mov	rdx, rax
imul	rax, rax, 0x2aaaaaab
mov	ecx, edx
sar	ecx, 0x1f
sar	rax, 0x21
sub	eax, ecx
lea	eax, [rax + rax*2]
shl	eax, 2
sub	edx, eax
mov	rax, qword ptr [rsp + 0x270]
mov	dword ptr [rax + 0x10], edx
mov	rax, qword ptr [rsp + 0x280]
or	word ptr [rax], 0x408
jmp	0x140030e06
jmp	0x140030e06
lea	rcx, [rsp + 0xb0]
call	0x1400209f0
call	0x1400209f0
mov	r9, qword ptr [rsi]
mov	edx, 0x20
mov	rcx, rsi
movzx	r8d, ax
call	qword ptr [r9 + 0x10]
call	qword ptr [r9 + 0x10]
test	al, al
jne	0x140032916
jne	0x140032916
lea	rax, [rsp + 0xc8]
mov	dword ptr [rsp + 0x30], 0x1f
movdqu	xmm0, xmmword ptr [rsp + 0xb0]
lea	rcx, [rsp + 0x90]
mov	qword ptr [rsp + 0x48], rax
lea	r9, [rsp + 0x70]
mov	rax, qword ptr [rsp + 0x260]
lea	r8, [rsp + 0x80]
mov	dword ptr [rsp + 0x28], 1
mov	rdx, qword ptr [rsp + 0x248]
movdqu	xmm2, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xcc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x80], xmm0
movups	xmmword ptr [rsp + 0x70], xmm2
call	0x14002f5e0
call	0x14002f5e0
mov	rax, qword ptr [rsp + 0x90]
movzx	ebp, word ptr [rsp + 0x98]
mov	r13, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x90], rax
mov	r14, rax
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xc8]
mov	word ptr [rsp + 0xb8], bp
mov	dword ptr [rsp + 0x54], eax
test	eax, eax
jne	0x140030e06
jne	0x140030e06
mov	eax, dword ptr [rsp + 0xcc]
mov	rdi, qword ptr [rsp + 0x270]
mov	dword ptr [rdi + 0xc], eax
mov	rax, qword ptr [rsp + 0x280]
or	word ptr [rax], 0x410
jmp	0x140030e06
jmp	0x140030e06
mov	rax, qword ptr [rsp + 0x60]
mov	rdx, qword ptr [rsp + 0x248]
lea	rcx, [rsp + 0x90]
lea	r9, [rsp + 0x70]
lea	r8, [rsp + 0x80]
mov	rax, qword ptr [rax + 0x10]
movdqu	xmm3, xmmword ptr [rax + 0x88]
movdqu	xmm2, xmmword ptr [rax + 0x98]
movdqu	xmm5, xmmword ptr [rax + 0x68]
movdqu	xmm4, xmmword ptr [rax + 0x78]
movdqu	xmm1, xmmword ptr [rax + 0xa8]
movdqu	xmm0, xmmword ptr [rax + 0xb8]
movdqu	xmm6, xmmword ptr [rax + 0x58]
lea	rax, [rsp + 0xc8]
mov	qword ptr [rsp + 0x30], 0xe
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x260]
movups	xmmword ptr [rsp + 0x100], xmm3
movdqu	xmm3, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x38], rax
lea	rax, [rsp + 0xd0]
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0xcc]
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x110], xmm2
movdqu	xmm2, xmmword ptr [rsp + 0xb0]
movups	xmmword ptr [rsp + 0xd0], xmm6
movups	xmmword ptr [rsp + 0xe0], xmm5
movups	xmmword ptr [rsp + 0xf0], xmm4
movups	xmmword ptr [rsp + 0x120], xmm1
movups	xmmword ptr [rsp + 0x130], xmm0
movups	xmmword ptr [rsp + 0x80], xmm2
movups	xmmword ptr [rsp + 0x70], xmm3
call	0x14002fb60
call	0x14002fb60
mov	rax, qword ptr [rsp + 0x90]
movzx	ebp, word ptr [rsp + 0x98]
mov	r13, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x90], rax
mov	r14, rax
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xc8]
mov	word ptr [rsp + 0xb8], bp
mov	dword ptr [rsp + 0x54], eax
test	eax, eax
jne	0x140030e06
jne	0x140030e06
movsxd	rax, dword ptr [rsp + 0xcc]
mov	rdx, rax
imul	rax, rax, -0x6db6db6d
mov	ecx, edx
sar	ecx, 0x1f
shr	rax, 0x20
add	eax, edx
sar	eax, 2
sub	eax, ecx
lea	ecx, [rax*8]
sub	ecx, eax
mov	rax, qword ptr [rsp + 0x270]
sub	edx, ecx
mov	dword ptr [rax + 0x18], edx
mov	rax, qword ptr [rsp + 0x280]
or	byte ptr [rax], 2
jmp	0x140030e06
jmp	0x140030e06
mov	r14, qword ptr [rsp + 0xb0]
mov	r13, qword ptr [rsp + 0xa0]
test	r14, r14
setne	dl
and	dl, dil
jne	0x140031742
jne	0x140031742
test	r13, r13
setne	al
and	al, bl
mov	r8d, eax
jne	0x140031780
jne	0x140031780
mov	r8d, ebx
cmp	dil, r8b
je	0x140030e06
je	0x140030e06
movzx	r8d, bp
test	dl, dl
jne	0x1400328ae
jne	0x1400328ae
mov	rax, qword ptr [rsi]
mov	edx, 0x20
mov	rcx, rsi
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
test	al, al
je	0x140030e06
je	0x140030e06
mov	rax, qword ptr [r14 + 0x10]
cmp	rax, qword ptr [r14 + 0x18]
jae	0x1400328df
jae	0x1400328df
add	rax, 2
mov	qword ptr [r14 + 0x10], rax
mov	eax, 0xffffffff
mov	word ptr [rsp + 0xb8], ax
mov	rax, qword ptr [r14 + 0x10]
cmp	rax, qword ptr [r14 + 0x18]
jae	0x140032a9a
jae	0x140032a9a
movzx	ebp, word ptr [rax]
cmp	bp, -1
je	0x140032949
je	0x140032949
xor	edi, edi
test	r13, r13
mov	edx, r12d
mov	ebp, 0xffffffff
setne	al
and	al, bl
mov	r8d, eax
je	0x1400316f1
je	0x1400316f1
nop	dword ptr [rax + rax]
mov	rax, qword ptr [r13 + 0x10]
cmp	rax, qword ptr [r13 + 0x18]
jae	0x140032a77
jae	0x140032a77
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140032935
je	0x140032935
xor	r8d, r8d
jmp	0x1400316f4
jmp	0x1400316f4
mov	rax, qword ptr [r14]
mov	rcx, r14
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, ax
jmp	0x140031149
jmp	0x140031149
lea	rax, [rsp + 0xc8]
mov	dword ptr [rsp + 0x30], 0x35
movdqu	xmm2, xmmword ptr [rsp + 0xb0]
lea	rcx, [rsp + 0x90]
mov	qword ptr [rsp + 0x48], rax
lea	r9, [rsp + 0x70]
mov	rax, qword ptr [rsp + 0x260]
lea	r8, [rsp + 0x80]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x248]
movdqu	xmm3, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xcc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x80], xmm2
movups	xmmword ptr [rsp + 0x70], xmm3
call	0x14002f5e0
call	0x14002f5e0
mov	rax, qword ptr [rsp + 0x90]
movzx	ebp, word ptr [rsp + 0x98]
mov	r13, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x90], rax
mov	r14, rax
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xc8]
mov	word ptr [rsp + 0xb8], bp
mov	dword ptr [rsp + 0x54], eax
test	eax, eax
jne	0x140030e06
jne	0x140030e06
mov	rdi, qword ptr [rsp + 0x280]
mov	eax, dword ptr [rsp + 0xcc]
mov	edi, dword ptr [rdi]
shl	eax, 0x10
and	eax, 0x3f0000
mov	edx, edi
mov	dword ptr [rsp + 0x68], edi
or	eax, 0x40
mov	rdi, qword ptr [rsp + 0x280]
and	edx, 0xffc0ffbf
or	eax, edx
mov	dword ptr [rdi], eax
jmp	0x140030e06
jmp	0x140030e06
lea	rax, [rsp + 0xc8]
mov	dword ptr [rsp + 0x30], 0x35
movdqu	xmm3, xmmword ptr [rsp + 0xb0]
lea	rcx, [rsp + 0x90]
mov	qword ptr [rsp + 0x48], rax
lea	r9, [rsp + 0x70]
mov	rax, qword ptr [rsp + 0x260]
lea	r8, [rsp + 0x80]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x248]
movdqu	xmm4, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xcc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x80], xmm3
movups	xmmword ptr [rsp + 0x70], xmm4
call	0x14002f5e0
call	0x14002f5e0
mov	rax, qword ptr [rsp + 0x90]
movzx	ebp, word ptr [rsp + 0x98]
mov	r13, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x90], rax
mov	r14, rax
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xc8]
mov	word ptr [rsp + 0xb8], bp
mov	dword ptr [rsp + 0x54], eax
test	eax, eax
jne	0x140030e06
jne	0x140030e06
mov	rdi, qword ptr [rsp + 0x280]
mov	eax, dword ptr [rsp + 0xcc]
mov	edi, dword ptr [rdi]
shl	eax, 0x10
and	eax, 0x3f0000
mov	edx, edi
mov	dword ptr [rsp + 0x68], edi
or	eax, 0x20
mov	rdi, qword ptr [rsp + 0x280]
and	edx, 0xffc0ffdf
or	eax, edx
mov	dword ptr [rdi], eax
jmp	0x140030e06
jmp	0x140030e06
mov	rax, qword ptr [rsi]
lea	r8, [rip + 0x8834e]
lea	rbx, [rsp + 0xd0]
mov	rcx, rsi
lea	rdx, [r8 - 9]
mov	r9, rbx
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
mov	rax, qword ptr [rsp + 0x280]
mov	qword ptr [rsp + 0x38], rbx
lea	rcx, [rsp + 0x90]
movdqu	xmm0, xmmword ptr [rsp + 0xb0]
mov	rdx, qword ptr [rsp + 0x248]
lea	r9, [rsp + 0x70]
lea	r8, [rsp + 0x80]
movdqu	xmm2, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x270]
movups	xmmword ptr [rsp + 0x80], xmm0
movups	xmmword ptr [rsp + 0x70], xmm2
mov	qword ptr [rsp + 0x30], rax
lea	rax, [rsp + 0xc8]
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x260]
mov	qword ptr [rsp + 0x20], rax
call	0x140030b70
call	0x140030b70
mov	rax, qword ptr [rsp + 0x90]
movzx	ebp, word ptr [rsp + 0x98]
mov	r13, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x90], rax
mov	r14, rax
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xc8]
mov	word ptr [rsp + 0xb8], bp
mov	dword ptr [rsp + 0x54], eax
jmp	0x140030e06
jmp	0x140030e06
lea	rax, [rsp + 0xc8]
mov	dword ptr [rsp + 0x30], 0x17
movdqu	xmm5, xmmword ptr [rsp + 0xb0]
lea	rcx, [rsp + 0x90]
mov	qword ptr [rsp + 0x48], rax
lea	r9, [rsp + 0x70]
mov	rax, qword ptr [rsp + 0x260]
lea	r8, [rsp + 0x80]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x248]
movdqu	xmm0, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xcc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x80], xmm5
movups	xmmword ptr [rsp + 0x70], xmm0
call	0x14002f5e0
call	0x14002f5e0
mov	rax, qword ptr [rsp + 0x90]
movzx	ebp, word ptr [rsp + 0x98]
mov	r13, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x90], rax
mov	r14, rax
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xc8]
mov	word ptr [rsp + 0xb8], bp
mov	dword ptr [rsp + 0x54], eax
test	eax, eax
jne	0x140030e06
jne	0x140030e06
mov	eax, dword ptr [rsp + 0xcc]
mov	rdi, qword ptr [rsp + 0x270]
mov	dword ptr [rdi + 8], eax
mov	rax, qword ptr [rsp + 0x280]
and	byte ptr [rax], 0xfe
jmp	0x140030e06
jmp	0x140030e06
mov	rax, qword ptr [rsi]
lea	rbx, [rsp + 0xd0]
lea	r8, [rip + 0x88172]
mov	rcx, rsi
mov	r9, rbx
lea	rdx, [r8 - 9]
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
mov	rax, qword ptr [rsp + 0x280]
mov	qword ptr [rsp + 0x38], rbx
lea	rcx, [rsp + 0x90]
movdqu	xmm3, xmmword ptr [rsp + 0xb0]
movdqu	xmm4, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
movups	xmmword ptr [rsp + 0x80], xmm3
movups	xmmword ptr [rsp + 0x70], xmm4
mov	rax, qword ptr [rsp + 0x270]
mov	rdx, qword ptr [rsp + 0x248]
lea	r9, [rsp + 0x70]
lea	r8, [rsp + 0x80]
mov	qword ptr [rsp + 0x30], rax
lea	rax, [rsp + 0xc8]
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x260]
mov	qword ptr [rsp + 0x20], rax
call	0x140030b70
call	0x140030b70
mov	rax, qword ptr [rsp + 0x90]
movzx	ebp, word ptr [rsp + 0x98]
mov	r13, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x90], rax
mov	r14, rax
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xc8]
mov	word ptr [rsp + 0xb8], bp
mov	dword ptr [rsp + 0x54], eax
test	eax, eax
jne	0x140030e06
jne	0x140030e06
mov	rax, qword ptr [rsp + 0x280]
or	byte ptr [rax + 1], 4
jmp	0x140030e06
jmp	0x140030e06
lea	rax, [rsp + 0xc8]
mov	dword ptr [rsp + 0x30], 0xc
movdqu	xmm0, xmmword ptr [rsp + 0xb0]
lea	rcx, [rsp + 0x90]
mov	qword ptr [rsp + 0x48], rax
lea	r9, [rsp + 0x70]
mov	rax, qword ptr [rsp + 0x260]
lea	r8, [rsp + 0x80]
mov	dword ptr [rsp + 0x28], 1
mov	rdx, qword ptr [rsp + 0x248]
movdqu	xmm2, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xcc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x80], xmm0
movups	xmmword ptr [rsp + 0x70], xmm2
call	0x14002f5e0
call	0x14002f5e0
mov	rax, qword ptr [rsp + 0x90]
movzx	ebp, word ptr [rsp + 0x98]
mov	r13, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x90], rax
mov	r14, rax
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xc8]
mov	word ptr [rsp + 0xb8], bp
mov	dword ptr [rsp + 0x54], eax
test	eax, eax
jne	0x140030e06
jne	0x140030e06
mov	eax, dword ptr [rsp + 0xcc]
mov	rdi, qword ptr [rsp + 0x270]
sub	eax, 1
mov	dword ptr [rdi + 0x10], eax
mov	rax, qword ptr [rsp + 0x280]
or	byte ptr [rax], 8
jmp	0x140030e06
jmp	0x140030e06
lea	rax, [rsp + 0xc8]
mov	dword ptr [rsp + 0x30], 0xc
movdqu	xmm2, xmmword ptr [rsp + 0xb0]
lea	rcx, [rsp + 0x90]
mov	qword ptr [rsp + 0x48], rax
lea	r9, [rsp + 0x70]
mov	rax, qword ptr [rsp + 0x260]
lea	r8, [rsp + 0x80]
mov	dword ptr [rsp + 0x28], 1
mov	rdx, qword ptr [rsp + 0x248]
movdqu	xmm3, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xcc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x80], xmm2
movups	xmmword ptr [rsp + 0x70], xmm3
call	0x14002f5e0
call	0x14002f5e0
mov	rax, qword ptr [rsp + 0x90]
movzx	ebp, word ptr [rsp + 0x98]
mov	r13, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x90], rax
mov	r14, rax
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xc8]
mov	word ptr [rsp + 0xb8], bp
mov	dword ptr [rsp + 0x54], eax
test	eax, eax
jne	0x140030e06
jne	0x140030e06
movsxd	rax, dword ptr [rsp + 0xcc]
mov	rdx, rax
imul	rax, rax, 0x2aaaaaab
mov	ecx, edx
sar	ecx, 0x1f
sar	rax, 0x21
sub	eax, ecx
lea	eax, [rax + rax*2]
shl	eax, 2
sub	edx, eax
mov	rax, qword ptr [rsp + 0x270]
mov	dword ptr [rax + 8], edx
mov	rax, qword ptr [rsp + 0x280]
or	byte ptr [rax], 1
jmp	0x140030e06
jmp	0x140030e06
mov	rax, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rax + 0x10]
movdqu	xmm0, xmmword ptr [rax + 0x40]
movq	rax, xmm0
movups	xmmword ptr [rsp + 0xd0], xmm0
cmp	word ptr [rax], 0
je	0x140031e8f
je	0x140031e8f
movhlps	xmm2, xmm0
movq	rax, xmm2
cmp	word ptr [rax], 0
jne	0x140032993
jne	0x140032993
mov	r14, qword ptr [rsp + 0xb0]
mov	r13, qword ptr [rsp + 0xa0]
jmp	0x140030e06
jmp	0x140030e06
lea	rax, [rsp + 0xc8]
mov	dword ptr [rsp + 0x30], 0x270f
movdqu	xmm5, xmmword ptr [rsp + 0xb0]
lea	rcx, [rsp + 0x90]
mov	qword ptr [rsp + 0x48], rax
lea	r9, [rsp + 0x70]
mov	rax, qword ptr [rsp + 0x260]
lea	r8, [rsp + 0x80]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x248]
movdqu	xmm0, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xcc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 4
movups	xmmword ptr [rsp + 0x80], xmm5
movups	xmmword ptr [rsp + 0x70], xmm0
call	0x14002f5e0
call	0x14002f5e0
mov	rax, qword ptr [rsp + 0x90]
movzx	ebp, word ptr [rsp + 0x98]
mov	r13, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x90], rax
mov	r14, rax
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xc8]
mov	word ptr [rsp + 0xb8], bp
mov	dword ptr [rsp + 0x54], eax
test	eax, eax
jne	0x140030e06
jne	0x140030e06
mov	eax, dword ptr [rsp + 0xcc]
mov	rdi, qword ptr [rsp + 0x270]
sub	eax, 0x76c
mov	dword ptr [rdi + 0x14], eax
mov	rax, qword ptr [rsp + 0x280]
mov	rdi, qword ptr [rsp + 0x280]
movzx	eax, byte ptr [rax + 1]
mov	byte ptr [rsp + 0x68], al
and	eax, 0xfffffff9
or	eax, 4
mov	byte ptr [rdi + 1], al
jmp	0x140030e06
jmp	0x140030e06
mov	rax, qword ptr [rsp + 0x280]
lea	rcx, [rsp + 0x90]
movdqu	xmm0, xmmword ptr [rsp + 0xb0]
movdqu	xmm2, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x60]
movups	xmmword ptr [rsp + 0x80], xmm0
mov	rax, qword ptr [rax + 0x10]
movups	xmmword ptr [rsp + 0x70], xmm2
mov	rax, qword ptr [rax + 0x20]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x270]
mov	rdx, qword ptr [rsp + 0x248]
lea	r9, [rsp + 0x70]
lea	r8, [rsp + 0x80]
mov	qword ptr [rsp + 0x30], rax
lea	rax, [rsp + 0xc8]
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x260]
mov	qword ptr [rsp + 0x20], rax
call	0x140030b70
call	0x140030b70
mov	rax, qword ptr [rsp + 0x90]
movzx	ebp, word ptr [rsp + 0x98]
mov	qword ptr [rsp + 0x90], rax
mov	r14, rax
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xc8]
mov	word ptr [rsp + 0xb8], bp
mov	dword ptr [rsp + 0x54], eax
mov	r13, qword ptr [rsp + 0xa0]
jmp	0x140030e06
jmp	0x140030e06
lea	rcx, [rsp + 0xb0]
call	0x1400209f0
call	0x1400209f0
mov	edx, 0x25
mov	rcx, rsi
mov	ebx, eax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	bx, ax
je	0x140032962
je	0x140032962
mov	dword ptr [rsp + 0x54], 4
movzx	ebp, word ptr [rsp + 0xb8]
mov	r14, qword ptr [rsp + 0xb0]
mov	r13, qword ptr [rsp + 0xa0]
mov	dword ptr [rsp + 0xc8], 4
jmp	0x140030e06
jmp	0x140030e06
lea	rax, [rsp + 0xc8]
mov	dword ptr [rsp + 0x30], 0x3c
movdqu	xmm4, xmmword ptr [rsp + 0xb0]
lea	rcx, [rsp + 0x90]
mov	qword ptr [rsp + 0x48], rax
lea	r9, [rsp + 0x70]
mov	rax, qword ptr [rsp + 0x260]
lea	r8, [rsp + 0x80]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x248]
movdqu	xmm5, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xcc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x80], xmm4
movups	xmmword ptr [rsp + 0x70], xmm5
call	0x14002f5e0
call	0x14002f5e0
mov	rax, qword ptr [rsp + 0x90]
movzx	ebp, word ptr [rsp + 0x98]
mov	r13, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x90], rax
mov	r14, rax
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xc8]
mov	word ptr [rsp + 0xb8], bp
mov	dword ptr [rsp + 0x54], eax
test	eax, eax
jne	0x140030e06
jne	0x140030e06
mov	eax, dword ptr [rsp + 0xcc]
mov	rdi, qword ptr [rsp + 0x270]
mov	dword ptr [rdi], eax
jmp	0x140030e06
jmp	0x140030e06
mov	rax, qword ptr [rsp + 0x280]
lea	rcx, [rsp + 0x90]
movdqu	xmm2, xmmword ptr [rsp + 0xb0]
movdqu	xmm3, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x60]
movups	xmmword ptr [rsp + 0x80], xmm2
mov	rax, qword ptr [rax + 0x10]
movups	xmmword ptr [rsp + 0x70], xmm3
mov	rax, qword ptr [rax + 0x30]
mov	qword ptr [rsp + 0x38], rax
jmp	0x140031bd1
jmp	0x140031bd1
lea	rbx, [rsp + 0xb0]
mov	rcx, rbx
call	0x1400209f0
call	0x1400209f0
mov	r9, qword ptr [rsi]
mov	edx, 1
mov	rcx, rsi
movzx	r8d, ax
call	qword ptr [r9 + 0x10]
call	qword ptr [r9 + 0x10]
test	al, al
je	0x140032098
je	0x140032098
mov	rax, qword ptr [rsp + 0x260]
lea	r14, [rsp + 0x70]
lea	rbp, [rsp + 0xc8]
mov	qword ptr [rsp + 0x30], 0xe
lea	rdi, [rsp + 0xd0]
mov	qword ptr [rsp + 0x40], rbp
mov	r9, r14
movdqu	xmm3, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rip + 0x8c652]
lea	r12, [rsp + 0x90]
lea	r13, [rsp + 0x80]
mov	qword ptr [rsp + 0x20], rdi
mov	rdx, qword ptr [rsp + 0x248]
mov	r8, r13
mov	rcx, r12
movdqu	xmm4, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x28], rax
movups	xmmword ptr [rsp + 0x80], xmm3
movups	xmmword ptr [rsp + 0x70], xmm4
call	0x14002fb60
call	0x14002fb60
mov	rax, qword ptr [rsp + 0x90]
lea	rdx, [rsp + 0xa0]
mov	rcx, rbx
mov	qword ptr [rsp + 0x90], rax
mov	qword ptr [rsp + 0xb0], rax
movzx	eax, word ptr [rsp + 0x98]
mov	word ptr [rsp + 0xb8], ax
call	0x140020940
call	0x140020940
test	al, al
mov	eax, dword ptr [rsp + 0xc8]
mov	dword ptr [rsp + 0x54], eax
jne	0x1400322f5
jne	0x1400322f5
or	eax, dword ptr [rsp + 0xd0]
je	0x140032b7c
je	0x140032b7c
movzx	eax, word ptr [rsp + 0xa8]
movzx	ebp, word ptr [rsp + 0xb8]
mov	r14, qword ptr [rsp + 0xb0]
mov	word ptr [rsp + 0x6c], ax
jmp	0x140032065
jmp	0x140032065
lea	rax, [rsp + 0xc8]
mov	dword ptr [rsp + 0x30], 0x16e
movdqu	xmm4, xmmword ptr [rsp + 0xb0]
lea	rcx, [rsp + 0x90]
mov	qword ptr [rsp + 0x48], rax
lea	r9, [rsp + 0x70]
mov	rax, qword ptr [rsp + 0x260]
lea	r8, [rsp + 0x80]
mov	dword ptr [rsp + 0x28], 1
mov	rdx, qword ptr [rsp + 0x248]
movdqu	xmm5, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xcc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 3
movups	xmmword ptr [rsp + 0x80], xmm4
movups	xmmword ptr [rsp + 0x70], xmm5
call	0x14002f5e0
call	0x14002f5e0
mov	rax, qword ptr [rsp + 0x90]
movzx	ebp, word ptr [rsp + 0x98]
mov	r13, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x90], rax
mov	r14, rax
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xc8]
mov	word ptr [rsp + 0xb8], bp
mov	dword ptr [rsp + 0x54], eax
test	eax, eax
jne	0x140030e06
jne	0x140030e06
mov	eax, dword ptr [rsp + 0xcc]
mov	rdi, qword ptr [rsp + 0x270]
sub	eax, 1
mov	dword ptr [rdi + 0x1c], eax
mov	rax, qword ptr [rsp + 0x280]
or	byte ptr [rax], 4
jmp	0x140030e06
jmp	0x140030e06
lea	rax, [rsp + 0xc8]
mov	dword ptr [rsp + 0x30], 0x63
movdqu	xmm3, xmmword ptr [rsp + 0xb0]
lea	rcx, [rsp + 0x90]
mov	qword ptr [rsp + 0x48], rax
lea	r9, [rsp + 0x70]
mov	rax, qword ptr [rsp + 0x260]
lea	r8, [rsp + 0x80]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x248]
movdqu	xmm4, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xcc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x80], xmm3
movups	xmmword ptr [rsp + 0x70], xmm4
call	0x14002f5e0
call	0x14002f5e0
mov	rax, qword ptr [rsp + 0x90]
movzx	ebp, word ptr [rsp + 0x98]
mov	qword ptr [rsp + 0x90], rax
mov	r14, rax
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xc8]
mov	word ptr [rsp + 0xb8], bp
mov	dword ptr [rsp + 0x54], eax
test	eax, eax
jne	0x140032065
jne	0x140032065
mov	rax, qword ptr [rsp + 0x280]
lea	rbp, [rsp + 0xa0]
lea	rdi, [rsp + 0xb0]
mov	rdx, rbp
mov	rcx, rdi
or	byte ptr [rax + 1], 6
call	0x140020940
call	0x140020940
mov	ebx, dword ptr [rsp + 0xcc]
test	al, al
je	0x140032abc
je	0x140032abc
lea	eax, [rbx + 0x64]
cmp	ebx, 0x45
cmovl	ebx, eax
mov	rax, qword ptr [rsp + 0x270]
mov	dword ptr [rax + 0x14], ebx
jmp	0x1400322f5
jmp	0x1400322f5
mov	rax, qword ptr [rsp + 0x280]
lea	rcx, [rsp + 0x90]
movdqu	xmm4, xmmword ptr [rsp + 0xb0]
movdqu	xmm5, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x60]
movups	xmmword ptr [rsp + 0x80], xmm4
mov	rax, qword ptr [rax + 0x10]
movups	xmmword ptr [rsp + 0x70], xmm5
mov	rax, qword ptr [rax + 0x10]
mov	qword ptr [rsp + 0x38], rax
jmp	0x140031fee
jmp	0x140031fee
mov	rax, qword ptr [rsi]
lea	rbx, [rsp + 0xd0]
lea	r8, [rip + 0x87795]
mov	rcx, rsi
mov	r9, rbx
lea	rdx, [r8 - 6]
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
mov	rax, qword ptr [rsp + 0x280]
mov	qword ptr [rsp + 0x38], rbx
lea	rcx, [rsp + 0x90]
movdqu	xmm2, xmmword ptr [rsp + 0xb0]
movdqu	xmm3, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
movups	xmmword ptr [rsp + 0x80], xmm2
movups	xmmword ptr [rsp + 0x70], xmm3
jmp	0x140031fee
jmp	0x140031fee
lea	rax, [rsp + 0xc8]
mov	dword ptr [rsp + 0x30], 0x3b
movdqu	xmm3, xmmword ptr [rsp + 0xb0]
lea	rcx, [rsp + 0x90]
mov	qword ptr [rsp + 0x48], rax
lea	r9, [rsp + 0x70]
mov	rax, qword ptr [rsp + 0x260]
lea	r8, [rsp + 0x80]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x248]
movdqu	xmm4, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xcc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x80], xmm3
movups	xmmword ptr [rsp + 0x70], xmm4
call	0x14002f5e0
call	0x14002f5e0
mov	rax, qword ptr [rsp + 0x90]
movzx	ebp, word ptr [rsp + 0x98]
mov	r13, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x90], rax
mov	r14, rax
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xc8]
mov	word ptr [rsp + 0xb8], bp
mov	dword ptr [rsp + 0x54], eax
test	eax, eax
jne	0x140030e06
jne	0x140030e06
mov	eax, dword ptr [rsp + 0xcc]
mov	rdi, qword ptr [rsp + 0x270]
mov	dword ptr [rdi + 4], eax
jmp	0x140030e06
jmp	0x140030e06
mov	rax, qword ptr [rsp + 0x280]
lea	rcx, [rsp + 0x90]
movdqu	xmm5, xmmword ptr [rsp + 0xb0]
movdqu	xmm0, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x60]
movups	xmmword ptr [rsp + 0x80], xmm5
mov	rax, qword ptr [rax + 0x10]
movups	xmmword ptr [rsp + 0x70], xmm0
mov	rax, qword ptr [rax + 0x50]
mov	qword ptr [rsp + 0x38], rax
jmp	0x140031fee
jmp	0x140031fee
lea	rax, [rsp + 0xc8]
mov	dword ptr [rsp + 0x30], 0x63
movdqu	xmm4, xmmword ptr [rsp + 0xb0]
lea	rcx, [rsp + 0x90]
mov	qword ptr [rsp + 0x48], rax
lea	r9, [rsp + 0x70]
mov	rax, qword ptr [rsp + 0x260]
lea	r8, [rsp + 0x80]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x248]
movdqu	xmm5, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xcc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x80], xmm4
movups	xmmword ptr [rsp + 0x70], xmm5
call	0x14002f5e0
call	0x14002f5e0
mov	rax, qword ptr [rsp + 0x90]
movzx	ebp, word ptr [rsp + 0x98]
mov	r13, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x90], rax
mov	r14, rax
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xc8]
mov	word ptr [rsp + 0xb8], bp
mov	dword ptr [rsp + 0x54], eax
test	eax, eax
jne	0x140030e06
jne	0x140030e06
mov	rdi, qword ptr [rsp + 0x280]
mov	eax, dword ptr [rsp + 0xcc]
or	word ptr [rdi], 0x480
mov	dword ptr [rdi + 4], eax
jmp	0x140030e06
jmp	0x140030e06
lea	rax, [rsp + 0xc8]
mov	dword ptr [rsp + 0x30], 6
movdqu	xmm5, xmmword ptr [rsp + 0xb0]
lea	rcx, [rsp + 0x90]
mov	qword ptr [rsp + 0x48], rax
lea	r9, [rsp + 0x70]
mov	rax, qword ptr [rsp + 0x260]
lea	r8, [rsp + 0x80]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x248]
movdqu	xmm0, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xcc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 1
movups	xmmword ptr [rsp + 0x80], xmm5
movups	xmmword ptr [rsp + 0x70], xmm0
call	0x14002f5e0
call	0x14002f5e0
mov	rax, qword ptr [rsp + 0x90]
movzx	ebp, word ptr [rsp + 0x98]
mov	r13, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x90], rax
mov	r14, rax
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xc8]
mov	word ptr [rsp + 0xb8], bp
mov	dword ptr [rsp + 0x54], eax
test	eax, eax
jne	0x140030e06
jne	0x140030e06
mov	eax, dword ptr [rsp + 0xcc]
mov	rdi, qword ptr [rsp + 0x270]
mov	dword ptr [rdi + 0x18], eax
mov	rax, qword ptr [rsp + 0x280]
or	byte ptr [rax], 2
jmp	0x140030e06
jmp	0x140030e06
mov	rax, qword ptr [r14 + 0x10]
cmp	rax, qword ptr [r14 + 0x18]
jae	0x140032aaa
jae	0x140032aaa
movzx	r8d, word ptr [rax]
cmp	r8w, -1
jne	0x140031709
jne	0x140031709
mov	qword ptr [rsp + 0xb0], 0
xor	r14d, r14d
jmp	0x140031709
jmp	0x140031709
mov	rax, qword ptr [r14]
mov	rcx, r14
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	eax, 0xffffffff
mov	word ptr [rsp + 0xb8], ax
jmp	0x140031742
jmp	0x140031742
mov	rax, qword ptr [r14]
mov	byte ptr [rsp + 0x68], r8b
mov	rcx, r14
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, byte ptr [rsp + 0x68]
movzx	edx, ax
jmp	0x140031111
jmp	0x140031111
mov	rcx, qword ptr [rsp + 0xb0]
call	0x140092470
call	0x140092470
mov	eax, 0xffffffff
mov	word ptr [rsp + 0xb8], ax
jmp	0x14003145e
jmp	0x14003145e
mov	qword ptr [rsp + 0xa0], 0
xor	r13d, r13d
jmp	0x1400316f4
jmp	0x1400316f4
mov	edi, r12d
xor	edx, edx
xor	r14d, r14d
mov	qword ptr [rsp + 0xb0], 0
jmp	0x1400316e0
jmp	0x1400316e0
mov	r14, qword ptr [rsp + 0xb0]
mov	ebp, 0xffffffff
mov	rcx, r14
call	0x140092470
call	0x140092470
mov	r10d, 0xffffffff
mov	r13, qword ptr [rsp + 0xa0]
mov	word ptr [rsp + 0xb8], r10w
jmp	0x140030e06
jmp	0x140030e06
lea	rax, [rsp + 0xc8]
mov	rdx, qword ptr [rsp + 0x248]
movdqu	xmm5, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x30], 2
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x260]
lea	rcx, [rsp + 0x90]
lea	r9, [rsp + 0x70]
movups	xmmword ptr [rsp + 0x80], xmm5
lea	r8, [rsp + 0x80]
movdqu	xmm5, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x38], rax
lea	rax, [rsp + 0xd0]
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0xcc]
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x70], xmm5
call	0x14002fb60
call	0x14002fb60
mov	rax, qword ptr [rsp + 0x90]
movzx	ebp, word ptr [rsp + 0x98]
mov	qword ptr [rsp + 0x90], rax
mov	r14, rax
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xc8]
mov	word ptr [rsp + 0xb8], bp
mov	dword ptr [rsp + 0x54], eax
test	eax, eax
jne	0x140032065
jne	0x140032065
mov	eax, dword ptr [rsp + 0xcc]
test	eax, eax
je	0x140032065
je	0x140032065
mov	rax, qword ptr [rsp + 0x280]
mov	r13, qword ptr [rsp + 0xa0]
or	byte ptr [rax + 1], 1
jmp	0x140030e06
jmp	0x140030e06
mov	rax, qword ptr [r13]
mov	byte ptr [rsp + 0x6f], dl
mov	rcx, r13
mov	byte ptr [rsp + 0x68], r8b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x6f]
movzx	r8d, byte ptr [rsp + 0x68]
jmp	0x140031791
jmp	0x140031791
mov	rax, qword ptr [r14]
mov	rcx, r14
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
jmp	0x140031753
jmp	0x140031753
mov	rax, qword ptr [r14]
mov	rcx, r14
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, ax
jmp	0x1400328c0
jmp	0x1400328c0
mov	rcx, rdi
call	0x1400209f0
call	0x1400209f0
mov	r8d, 0x2a
mov	rcx, rsi
movzx	edx, ax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
movsx	r12d, al
lea	eax, [r12 - 0x30]
cmp	al, 9
ja	0x1400324f8
ja	0x1400324f8
mov	rcx, qword ptr [rsp + 0xb0]
mov	r13d, 0xffffffff
call	0x140092470
call	0x140092470
lea	eax, [rbx + rbx*4]
mov	rdx, rbp
mov	rcx, rdi
mov	word ptr [rsp + 0xb8], r13w
lea	ebx, [r12 + rax*2 - 0x30]
mov	dword ptr [rsp + 0xcc], ebx
call	0x140020940
call	0x140020940
test	al, al
je	0x140032b38
je	0x140032b38
mov	rax, qword ptr [rsp + 0x280]
sub	ebx, 0x76c
and	byte ptr [rax + 1], 0xfd
jmp	0x140032501
jmp	0x140032501
mov	rcx, rdi
call	0x1400209f0
call	0x1400209f0
mov	r8d, 0x2a
mov	rcx, rsi
movzx	edx, ax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
movsx	edi, al
lea	eax, [rdi - 0x30]
cmp	al, 9
ja	0x140032b21
ja	0x140032b21
imul	ebx, ebx, 0xa
mov	rcx, qword ptr [rsp + 0xb0]
call	0x140092470
call	0x140092470
mov	word ptr [rsp + 0xb8], 0xffff
lea	ebx, [rbx + rdi - 0x30]
jmp	0x140032b21
jmp	0x140032b21
mov	rcx, rbx
call	0x1400209f0
call	0x1400209f0
mov	edx, 0x2d
mov	rcx, rsi
mov	word ptr [rsp + 0x6c], ax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	word ptr [rsp + 0x6c], ax
je	0x140032bbf
je	0x140032bbf
mov	rcx, rbx
call	0x1400209f0
call	0x1400209f0
mov	edx, 0x2b
mov	rcx, rsi
mov	ebx, eax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	bx, ax
jne	0x1400322f5
jne	0x1400322f5
mov	rax, qword ptr [rsp + 0x260]
xor	r11d, r11d
mov	r9, r14
xor	ebx, ebx
mov	dword ptr [rsp + 0x28], r11d
mov	r8, r13
mov	rcx, r12
movdqu	xmm3, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
mov	rdx, qword ptr [rsp + 0x248]
mov	qword ptr [rsp + 0x48], rbp
movdqu	xmm4, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x38], 2
mov	dword ptr [rsp + 0x30], 0x17
mov	qword ptr [rsp + 0x20], rdi
movups	xmmword ptr [rsp + 0x80], xmm3
movups	xmmword ptr [rsp + 0x70], xmm4
call	0x14002f5e0
call	0x14002f5e0
mov	qword ptr [rsp + 0x48], rbp
mov	r9, r14
mov	r8, r13
mov	rax, qword ptr [rsp + 0x90]
mov	dword ptr [rsp + 0x30], 0x3b
mov	rcx, r12
mov	dword ptr [rsp + 0x28], ebx
movdqu	xmm2, xmmword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0xb0], rax
mov	rdx, qword ptr [rsp + 0x248]
mov	qword ptr [rsp + 0x90], rax
movzx	eax, word ptr [rsp + 0x98]
mov	qword ptr [rsp + 0x38], 2
mov	word ptr [rsp + 0xb8], ax
mov	rax, qword ptr [rsp + 0x260]
movdqu	xmm5, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x20], rdi
mov	qword ptr [rsp + 0x40], rax
movups	xmmword ptr [rsp + 0x80], xmm5
movups	xmmword ptr [rsp + 0x70], xmm2
call	0x14002f5e0
call	0x14002f5e0
mov	rax, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x90], rax
mov	qword ptr [rsp + 0xb0], rax
movzx	eax, word ptr [rsp + 0x98]
mov	word ptr [rsp + 0xb8], ax
mov	eax, dword ptr [rsp + 0xc8]
mov	dword ptr [rsp + 0x54], eax
jmp	0x1400322f5
jmp	0x1400322f5
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
lea	rbp, [rsp + 0x50]
mov	r11, qword ptr [r8 + 8]
mov	r10, qword ptr [r9]
mov	rbx, qword ptr [r9 + 8]
mov	r14, qword ptr [rbp + 0x78]
mov	r13, qword ptr [r8]
mov	r15d, r11d
mov	qword ptr [rbp + 0x50], rcx
mov	rcx, qword ptr [rip + 0x8bbbb]
mov	qword ptr [rbp - 0x18], r11
mov	qword ptr [rbp - 0x10], r10
mov	qword ptr [rbp - 8], r10
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp + 0x88]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rdi, qword ptr [rax + rdx*8]
test	rdi, rdi
je	0x140033271
je	0x140033271
mov	rax, qword ptr [rbp + 0x80]
lea	rax, [rax*8 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
mov	r11, qword ptr [rbp - 0x18]
mov	r10, qword ptr [rbp - 8]
sub	rsp, rax
cmp	r11w, -1
sete	dl
test	r13, r13
lea	r12, [rsp + 0x20]
setne	sil
and	sil, dl
jne	0x1400330f3
jne	0x1400330f3
cmp	bx, -1
sete	r9b
test	r10, r10
setne	bl
and	bl, r9b
jne	0x14003311c
jne	0x14003311c
mov	ebx, r9d
cmp	bl, dl
jne	0x140032fe2
jne	0x140032fe2
xor	ebx, ebx
xor	esi, esi
xor	edi, edi
mov	qword ptr [rbp - 0x18], r11
nop	dword ptr [rax]
cmp	r15w, -1
sete	r10b
test	r13, r13
setne	r8b
and	r8b, r10b
jne	0x140032f30
jne	0x140032f30
mov	r8d, r10d
cmp	qword ptr [rbp - 0x10], 0
setne	dl
and	dl, r9b
jne	0x140032eb0
jne	0x140032eb0
mov	edx, r9d
cmp	r8b, dl
je	0x140032ee8
je	0x140032ee8
test	r13, r13
je	0x140032e0f
je	0x140032e0f
test	r10b, r10b
jne	0x140032f60
jne	0x140032f60
mov	r10d, r15d
test	rbx, rbx
je	0x140032f90
je	0x140032f90
mov	word ptr [rbp - 8], r15w
lea	r11, [rsi + rsi]
xor	eax, eax
xor	r8d, r8d
jmp	0x140032e3d
jmp	0x140032e3d
nop	dword ptr [rax + rax]
add	r8, 1
add	rax, 1
cmp	rax, rbx
jae	0x140032e6f
jae	0x140032e6f
lea	rdx, [rdi + rax*8]
cmp	rsi, qword ptr [rdx]
jae	0x140032e30
jae	0x140032e30
lea	rcx, [r12 + rax*4]
movsxd	r15, dword ptr [rcx]
mov	r15, qword ptr [r14 + r15*8]
cmp	word ptr [r15 + r11], r10w
je	0x140032ea0
je	0x140032ea0
sub	rbx, 1
mov	r15d, dword ptr [r12 + rbx*4]
mov	dword ptr [rcx], r15d
mov	rcx, qword ptr [rdi + rbx*8]
mov	qword ptr [rdx], rcx
cmp	rax, rbx
jb	0x140032e3d
jb	0x140032e3d
movzx	r15d, word ptr [rbp - 8]
cmp	rbx, r8
je	0x140032ee8
je	0x140032ee8
mov	rax, qword ptr [r13 + 0x10]
cmp	rax, qword ptr [r13 + 0x18]
jae	0x140032fc0
jae	0x140032fc0
add	rax, 2
mov	qword ptr [r13 + 0x10], rax
add	rsi, 1
mov	r15d, 0xffffffff
jmp	0x140032dc8
jmp	0x140032dc8
nop	
add	rax, 1
jmp	0x140032e38
jmp	0x140032e38
nop	word ptr cs:[rax + rax]
mov	rcx, qword ptr [rbp - 0x10]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14003314b
jae	0x14003314b
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edx, eax
mov	eax, 0
cmovne	rax, qword ptr [rbp - 0x10]
mov	qword ptr [rbp - 0x10], rax
cmp	r8b, dl
jne	0x140032e01
jne	0x140032e01
mov	r11, qword ptr [rbp - 0x18]
cmp	rbx, 1
je	0x140032fd8
je	0x140032fd8
cmp	rbx, 2
jne	0x140032f94
jne	0x140032f94
cmp	qword ptr [rdi], rsi
je	0x140032f0f
je	0x140032f0f
cmp	qword ptr [rdi + 8], rsi
jne	0x140032f94
jne	0x140032f94
mov	eax, dword ptr [r12]
mov	edx, eax
sub	edx, dword ptr [rbp + 0x80]
cmp	eax, dword ptr [rbp + 0x80]
cmovge	eax, edx
mov	rdx, qword ptr [rbp + 0x70]
mov	dword ptr [rdx], eax
jmp	0x140032f9e
jmp	0x140032f9e
nop	dword ptr [rax]
mov	rax, qword ptr [r13 + 0x10]
cmp	rax, qword ptr [r13 + 0x18]
jae	0x14003317c
jae	0x14003317c
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r8d, eax
mov	eax, 0
cmove	r13, rax
jmp	0x140032de4
jmp	0x140032de4
nop	dword ptr [rax]
mov	rax, qword ptr [r13 + 0x10]
cmp	rax, qword ptr [r13 + 0x18]
jae	0x1400331a6
jae	0x1400331a6
movzx	r10d, word ptr [rax]
xor	eax, eax
cmp	r10w, -1
cmove	r13, rax
test	rbx, rbx
jne	0x140032e1b
jne	0x140032e1b
nop	word ptr cs:[rax + rax]
mov	r11, qword ptr [rbp - 0x18]
mov	rax, qword ptr [rbp + 0x90]
or	dword ptr [rax], 4
mov	rax, qword ptr [rbp + 0x50]
mov	r11w, r15w
mov	qword ptr [rax], r13
mov	qword ptr [rax + 8], r11
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	
mov	rax, qword ptr [r13]
mov	byte ptr [rbp - 8], r9b
mov	rcx, r13
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
movzx	r9d, byte ptr [rbp - 8]
jmp	0x140032e8f
jmp	0x140032e8f
cmp	qword ptr [rdi], rsi
jne	0x140032f94
jne	0x140032f94
jmp	0x140032f0f
jmp	0x140032f0f
mov	ebx, r15d
test	sil, sil
jne	0x1400331c1
jne	0x1400331c1
mov	rax, qword ptr [rbp + 0x80]
add	rax, rax
je	0x140032dba
je	0x140032dba
xor	r8d, r8d
mov	word ptr [rbp - 8], r15w
xor	esi, esi
mov	r15, r14
mov	qword ptr [rbp - 0x18], r13
mov	r14d, ebx
mov	r13, rdi
mov	rbx, rax
mov	byte ptr [rbp - 0x20], r9b
mov	rdi, r8
mov	qword ptr [rbp - 0x28], r11
jmp	0x140033041
jmp	0x140033041
nop	dword ptr [rax]
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	ax, r14w
je	0x14003304e
je	0x14003304e
add	rsi, 1
cmp	rsi, rbx
je	0x14003305f
je	0x14003305f
mov	rax, qword ptr [r15 + rsi*8]
movzx	edx, word ptr [rax]
cmp	dx, r14w
jne	0x140033028
jne	0x140033028
mov	dword ptr [r12 + rdi*4], esi
add	rsi, 1
add	rdi, 1
cmp	rsi, rbx
jne	0x140033041
jne	0x140033041
mov	r14, r15
mov	r13, qword ptr [rbp - 0x18]
movzx	r9d, byte ptr [rbp - 0x20]
mov	r8, rdi
movzx	r15d, word ptr [rbp - 8]
mov	r11, qword ptr [rbp - 0x28]
test	rdi, rdi
je	0x140032dba
je	0x140032dba
mov	rax, qword ptr [r13 + 0x10]
cmp	rax, qword ptr [r13 + 0x18]
jae	0x140033249
jae	0x140033249
add	rax, 2
mov	qword ptr [r13 + 0x10], rax
lea	rax, [r8*8 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
xor	ebx, ebx
sub	rsp, rax
mov	byte ptr [rbp - 8], r9b
mov	r15, r8
mov	qword ptr [rbp - 0x18], r11
lea	rsi, [rsp + 0x20]
mov	rdi, rsi
nop	
movsxd	rax, dword ptr [r12 + rbx*4]
mov	rcx, qword ptr [r14 + rax*8]
call	0x140015a60
call	0x140015a60
mov	qword ptr [rsi + rbx*8], rax
add	rbx, 1
cmp	r15, rbx
jne	0x1400330c0
jne	0x1400330c0
movzx	r9d, byte ptr [rbp - 8]
mov	r11, qword ptr [rbp - 0x18]
mov	r15d, 0xffffffff
mov	esi, 1
jmp	0x140032dc0
jmp	0x140032dc0
mov	rax, qword ptr [r13 + 0x10]
cmp	rax, qword ptr [r13 + 0x18]
jae	0x1400331dd
jae	0x1400331dd
movzx	eax, word ptr [rax]
xor	edx, edx
cmp	ax, -1
jne	0x140032d98
jne	0x140032d98
mov	edx, esi
xor	r13d, r13d
xor	esi, esi
jmp	0x140032d98
jmp	0x140032d98
mov	rax, qword ptr [r10 + 0x10]
cmp	rax, qword ptr [r10 + 0x18]
jae	0x1400331fc
jae	0x1400331fc
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	ebx, eax
mov	eax, 0
cmovne	rax, r10
mov	qword ptr [rbp - 0x10], rax
jmp	0x140032db2
jmp	0x140032db2
mov	rcx, qword ptr [rbp - 0x10]
mov	byte ptr [rbp - 0x29], r9b
mov	byte ptr [rbp - 0x28], dl
mov	rax, qword ptr [rcx]
mov	byte ptr [rbp - 0x20], r10b
mov	byte ptr [rbp - 8], r8b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r9d, byte ptr [rbp - 0x29]
movzx	edx, byte ptr [rbp - 0x28]
movzx	r10d, byte ptr [rbp - 0x20]
movzx	r8d, byte ptr [rbp - 8]
jmp	0x140032ec5
jmp	0x140032ec5
mov	rax, qword ptr [r13]
mov	byte ptr [rbp - 0x28], r9b
mov	rcx, r13
mov	byte ptr [rbp - 0x20], r10b
mov	byte ptr [rbp - 8], r8b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r9d, byte ptr [rbp - 0x28]
movzx	r10d, byte ptr [rbp - 0x20]
movzx	r8d, byte ptr [rbp - 8]
jmp	0x140032f41
jmp	0x140032f41
mov	rax, qword ptr [r13]
mov	byte ptr [rbp - 8], r9b
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r9d, byte ptr [rbp - 8]
mov	r10d, eax
jmp	0x140032f72
jmp	0x140032f72
mov	rax, qword ptr [r13 + 0x10]
cmp	rax, qword ptr [r13 + 0x18]
jae	0x14003322a
jae	0x14003322a
movzx	ebx, word ptr [rax]
xor	eax, eax
cmp	bx, -1
cmove	r13, rax
jmp	0x140032fee
jmp	0x140032fee
mov	rax, qword ptr [r13]
mov	qword ptr [rbp - 0x18], r10
mov	rcx, r13
mov	qword ptr [rbp - 8], r11
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r10, qword ptr [rbp - 0x18]
mov	r11, qword ptr [rbp - 8]
jmp	0x140033104
jmp	0x140033104
mov	rax, qword ptr [r10]
mov	qword ptr [rbp - 0x20], r11
mov	rcx, r10
mov	byte ptr [rbp - 0x18], r9b
mov	byte ptr [rbp - 0x10], dl
mov	qword ptr [rbp - 8], r10
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r11, qword ptr [rbp - 0x20]
movzx	r9d, byte ptr [rbp - 0x18]
movzx	edx, byte ptr [rbp - 0x10]
mov	r10, qword ptr [rbp - 8]
jmp	0x14003312d
jmp	0x14003312d
mov	rax, qword ptr [r13]
mov	qword ptr [rbp - 0x18], r11
mov	rcx, r13
mov	byte ptr [rbp - 8], r9b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r11, qword ptr [rbp - 0x18]
movzx	r9d, byte ptr [rbp - 8]
mov	ebx, eax
jmp	0x1400331ce
jmp	0x1400331ce
mov	rax, qword ptr [r13]
mov	qword ptr [rbp - 0x20], r11
mov	rcx, r13
mov	byte ptr [rbp - 0x18], r9b
mov	qword ptr [rbp - 8], rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	r11, qword ptr [rbp - 0x20]
movzx	r9d, byte ptr [rbp - 0x18]
mov	r8, qword ptr [rbp - 8]
jmp	0x140033096
jmp	0x140033096
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xe8
mov	r10, qword ptr [r8 + 8]
mov	rax, qword ptr [r9 + 8]
mov	rsi, qword ptr [rsp + 0x168]
mov	rbx, qword ptr [r8]
mov	rbp, qword ptr [r9]
mov	r12d, r10d
mov	rdi, rcx
mov	rcx, qword ptr [rip + 0x8b62a]
mov	qword ptr [rsp + 0x68], rax
mov	qword ptr [rsp + 0x138], rdx
mov	qword ptr [rsp + 0x60], r10
mov	word ptr [rsp + 0x58], ax
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x150]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r15, qword ptr [rax + rdx*8]
test	r15, r15
je	0x140033d7e
je	0x140033d7e
mov	rax, qword ptr [rsp + 0x158]
mov	r10, qword ptr [rsp + 0x60]
mov	qword ptr [rsp + 0xc8], 0
lea	r11, [rip + 0xd5b]
cmp	rsi, qword ptr [rsp + 0x170]
mov	dword ptr [rsp + 0xd0], 0
mov	dword ptr [rax], 0
mov	rax, qword ptr [rsp + 0x138]
mov	rax, qword ptr [rax]
mov	rax, qword ptr [rax + 0x40]
mov	qword ptr [rsp + 0x80], rax
je	0x1400336d5
je	0x1400336d5
mov	rax, r15
mov	qword ptr [rsp + 0x130], rdi
mov	r15, rbx
mov	qword ptr [rsp + 0x60], r10
mov	rbx, rax
mov	qword ptr [rsp + 0x70], r11
jmp	0x14003342d
jmp	0x14003342d
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
movzx	r8d, word ptr [rsi]
mov	edx, 0x20
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	r14d, eax
test	al, al
jne	0x140033708
jne	0x140033708
test	r15, r15
je	0x14003339b
je	0x14003339b
test	r13b, r13b
jne	0x140033ad0
jne	0x140033ad0
movzx	edx, r12w
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
movzx	edx, word ptr [rsi]
mov	rcx, rbx
mov	edi, eax
mov	rax, qword ptr [rbx]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
cmp	di, ax
je	0x1400333ed
je	0x1400333ed
test	r15, r15
je	0x1400333c9
je	0x1400333c9
test	r13b, r13b
jne	0x140033b48
jne	0x140033b48
movzx	edx, r12w
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
movzx	edx, word ptr [rsi]
mov	rcx, rbx
mov	edi, eax
mov	rax, qword ptr [rbx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	di, ax
jne	0x140033cb5
jne	0x140033cb5
mov	rax, qword ptr [r15 + 0x10]
cmp	rax, qword ptr [r15 + 0x18]
jae	0x140033b20
jae	0x140033b20
add	rax, 2
mov	qword ptr [r15 + 0x10], rax
add	rsi, 2
mov	r12d, 0xffffffff
cmp	rsi, qword ptr [rsp + 0x170]
je	0x1400336c0
je	0x1400336c0
mov	rax, qword ptr [rsp + 0x158]
mov	ecx, dword ptr [rax]
test	ecx, ecx
jne	0x1400336c0
jne	0x1400336c0
cmp	r12w, -1
sete	r13b
test	r15, r15
setne	dl
and	dl, r13b
jne	0x140033a78
jne	0x140033a78
mov	edx, r13d
cmp	word ptr [rsp + 0x58], -1
sete	dil
test	rbp, rbp
setne	r14b
and	r14b, dil
jne	0x1400339f0
jne	0x1400339f0
mov	r14d, edi
cmp	dl, r14b
je	0x140033a20
je	0x140033a20
mov	rax, qword ptr [rbx]
xor	r8d, r8d
movzx	edx, word ptr [rsi]
mov	rcx, rbx
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	al, 0x25
jne	0x140033370
jne	0x140033370
lea	r14, [rsi + 2]
cmp	qword ptr [rsp + 0x170], r14
je	0x140033cb5
je	0x140033cb5
mov	rax, qword ptr [rbx]
movzx	edx, word ptr [rsi + 2]
xor	r8d, r8d
mov	rcx, rbx
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
movsx	r11d, al
cmp	r11b, 0x45
je	0x140033890
je	0x140033890
cmp	r11b, 0x4f
je	0x140033890
je	0x140033890
mov	rcx, qword ptr [rsp + 0x70]
cmp	qword ptr [rsp + 0x80], rcx
je	0x140033aa8
je	0x140033aa8
xor	edx, edx
xor	esi, esi
mov	rax, qword ptr [rsp + 0x138]
mov	rcx, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rax]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, rcx
jne	0x140033b70
jne	0x140033b70
mov	rax, qword ptr [rsp + 0x60]
mov	rcx, qword ptr [rip + 0x8b3e1]
mov	byte ptr [rsp + 0x78], r11b
mov	ax, r12w
mov	qword ptr [rsp + 0x60], rax
mov	rax, qword ptr [rsp + 0x68]
mov	ax, word ptr [rsp + 0x58]
mov	qword ptr [rsp + 0x68], rax
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x150]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rcx, qword ptr [rax + rdx*8]
test	rcx, rcx
je	0x140033d7e
je	0x140033d7e
mov	rax, qword ptr [rsp + 0x158]
mov	edx, 0x25
mov	dword ptr [rax], 0
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
movsx	r11w, byte ptr [rsp + 0x78]
mov	word ptr [rsp + 0xc0], ax
xor	eax, eax
test	sil, sil
je	0x140033587
je	0x140033587
xor	r8d, r8d
mov	eax, r11d
movsx	r11w, sil
mov	word ptr [rsp + 0xc6], r8w
mov	word ptr [rsp + 0xc4], ax
mov	rax, qword ptr [rsp + 0x60]
lea	rsi, [rsp + 0xd4]
lea	rcx, [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rsi
mov	rdx, qword ptr [rsp + 0x138]
lea	r9, [rsp + 0x90]
lea	r8, [rsp + 0xa0]
mov	qword ptr [rsp + 0xa8], rax
mov	rax, qword ptr [rsp + 0x68]
mov	word ptr [rsp + 0xc2], r11w
mov	qword ptr [rsp + 0x98], rax
lea	rax, [rsp + 0xc0]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x160]
mov	qword ptr [rsp + 0xa0], r15
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x158]
mov	qword ptr [rsp + 0xd4], 0
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x150]
mov	dword ptr [rsp + 0xdc], 0
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x90], rbp
call	0x140030b70
call	0x140030b70
mov	rax, qword ptr [rsp + 0xb8]
mov	rcx, rsi
mov	rdx, qword ptr [rsp + 0x160]
mov	r13, qword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x78], rax
mov	r12d, eax
call	0x140094930
call	0x140094930
mov	rax, qword ptr [rsp + 0x78]
mov	r15, r13
cmp	ax, -1
sete	sil
test	r13, r13
setne	al
and	al, sil
mov	edx, eax
jne	0x140033c89
jne	0x140033c89
test	rbp, rbp
je	0x140033696
je	0x140033696
test	dil, dil
jne	0x140033c6b
jne	0x140033c6b
cmp	dil, sil
jne	0x1400336a6
jne	0x1400336a6
mov	rax, qword ptr [rsp + 0x158]
or	dword ptr [rax], 2
lea	rsi, [r14 + 2]
cmp	rsi, qword ptr [rsp + 0x170]
jne	0x14003341b
jne	0x14003341b
nop	dword ptr [rax + rax]
mov	rdi, qword ptr [rsp + 0x130]
mov	r10, qword ptr [rsp + 0x60]
mov	rbx, r15
mov	r11, qword ptr [rsp + 0x70]
cmp	qword ptr [rsp + 0x80], r11
je	0x140033a51
je	0x140033a51
mov	r10w, r12w
mov	rax, rdi
mov	qword ptr [rdi], rbx
mov	qword ptr [rdi + 8], r10
add	rsp, 0xe8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
add	rsi, 2
cmp	qword ptr [rsp + 0x170], rsi
je	0x140033757
je	0x140033757
mov	byte ptr [rsp + 0x78], dil
mov	rdi, rbx
mov	rbx, qword ptr [rsp + 0x170]
jmp	0x140033739
jmp	0x140033739
nop	dword ptr [rax + rax]
add	rsi, 2
cmp	rbx, rsi
je	0x14003374f
je	0x14003374f
mov	rax, qword ptr [rdi]
movzx	r8d, word ptr [rsi]
mov	edx, 0x20
mov	rcx, rdi
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
test	al, al
jne	0x140033730
jne	0x140033730
mov	rbx, rdi
movzx	edi, byte ptr [rsp + 0x78]
test	r15, r15
je	0x140033761
je	0x140033761
test	r13b, r13b
jne	0x1400337bc
jne	0x1400337bc
mov	r8d, r13d
test	rbp, rbp
setne	dl
and	dl, dil
jne	0x1400337f0
jne	0x1400337f0
mov	edx, edi
cmp	r13b, dl
je	0x14003340d
je	0x14003340d
test	r15, r15
je	0x14003378c
je	0x14003378c
test	r8b, r8b
jne	0x140033820
jne	0x140033820
movzx	r8d, r12w
mov	rax, qword ptr [rbx]
mov	edx, 0x20
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
test	al, al
je	0x14003340d
je	0x14003340d
mov	rax, qword ptr [r15 + 0x10]
cmp	rax, qword ptr [r15 + 0x18]
jae	0x140033848
jae	0x140033848
add	rax, 2
mov	qword ptr [r15 + 0x10], rax
mov	rax, qword ptr [r15 + 0x10]
cmp	rax, qword ptr [r15 + 0x18]
jae	0x14003385f
jae	0x14003385f
movzx	r12d, word ptr [rax]
mov	r8d, r14d
cmp	r12w, -1
je	0x140033880
je	0x140033880
xor	r13d, r13d
test	rbp, rbp
mov	r12d, 0xffffffff
setne	dl
and	dl, dil
je	0x140033773
je	0x140033773
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140033af0
jae	0x140033af0
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edx, eax
mov	eax, 0
cmove	rbp, rax
jmp	0x140033775
jmp	0x140033775
nop	dword ptr [rax + rax]
mov	rax, qword ptr [r15 + 0x10]
cmp	rax, qword ptr [r15 + 0x18]
jae	0x140033b30
jae	0x140033b30
movzx	r8d, word ptr [rax]
xor	eax, eax
cmp	r8w, -1
cmove	r15, rax
jmp	0x140033790
jmp	0x140033790
nop	word ptr [rax + rax]
mov	rax, qword ptr [r15]
mov	rcx, r15
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [r15 + 0x10]
cmp	rax, qword ptr [r15 + 0x18]
jb	0x1400337ca
jb	0x1400337ca
mov	rax, qword ptr [r15]
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, r14d
mov	r12d, eax
cmp	r12w, -1
jne	0x1400337dc
jne	0x1400337dc
nop	dword ptr [rax]
mov	r13d, r14d
xor	r15d, r15d
jmp	0x140033764
jmp	0x140033764
nop	dword ptr [rax + rax]
mov	byte ptr [rsp + 0x78], r11b
lea	r14, [rsi + 4]
cmp	qword ptr [rsp + 0x170], r14
je	0x140033cb5
je	0x140033cb5
mov	rax, qword ptr [rbx]
movzx	edx, word ptr [rsi + 4]
xor	r8d, r8d
mov	rcx, rbx
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
mov	rdx, qword ptr [rsp + 0x70]
cmp	qword ptr [rsp + 0x80], rdx
jne	0x140033ac0
jne	0x140033ac0
mov	eax, dword ptr [rsi]
xor	edx, edx
mov	word ptr [rsp + 0xda], dx
mov	dword ptr [rsp + 0xd4], eax
movzx	eax, word ptr [rsi + 4]
mov	word ptr [rsp + 0xd8], ax
mov	rax, qword ptr [rsp + 0x68]
lea	r8, [rsp + 0xa0]
lea	rcx, [rsp + 0xb0]
mov	ax, word ptr [rsp + 0x58]
mov	rsi, qword ptr [rsp + 0x60]
lea	r9, [rsp + 0x90]
mov	qword ptr [rsp + 0xa0], r15
mov	rdx, qword ptr [rsp + 0x138]
mov	qword ptr [rsp + 0x90], rbp
mov	qword ptr [rsp + 0x68], rax
mov	si, r12w
mov	qword ptr [rsp + 0x98], rax
lea	rax, [rsp + 0xc8]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xd4]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x160]
mov	qword ptr [rsp + 0xa8], rsi
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x158]
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x150]
mov	qword ptr [rsp + 0x20], rax
call	0x140030b70
call	0x140030b70
mov	rax, qword ptr [rsp + 0xb8]
mov	r13, qword ptr [rsp + 0xb0]
mov	si, ax
cmp	ax, -1
mov	r12d, eax
mov	r15, r13
mov	qword ptr [rsp + 0x60], rsi
sete	sil
test	r13, r13
mov	qword ptr [rsp + 0xb8], rax
setne	al
and	al, sil
mov	qword ptr [rsp + 0xb0], r13
mov	r8d, eax
jne	0x140033c3e
jne	0x140033c3e
test	rbp, rbp
setne	al
and	al, dil
mov	r13d, eax
jne	0x140033c15
jne	0x140033c15
cmp	sil, dil
jne	0x1400336a6
jne	0x1400336a6
jmp	0x14003369b
jmp	0x14003369b
nop	
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140033cdd
jae	0x140033cdd
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r14d, eax
mov	eax, 0
cmove	rbp, rax
cmp	dl, r14b
jne	0x14003346e
jne	0x14003346e
mov	rax, qword ptr [rsp + 0x158]
mov	rdi, qword ptr [rsp + 0x130]
mov	rbx, r15
mov	r10, qword ptr [rsp + 0x60]
mov	r11, qword ptr [rsp + 0x70]
mov	dword ptr [rax], 6
cmp	qword ptr [rsp + 0x80], r11
jne	0x1400336e3
jne	0x1400336e3
mov	rdx, qword ptr [rsp + 0x160]
lea	rcx, [rsp + 0xc8]
mov	qword ptr [rsp + 0x58], r10
call	0x140094930
call	0x140094930
mov	r10, qword ptr [rsp + 0x58]
jmp	0x1400336e3
jmp	0x1400336e3
nop	dword ptr [rax]
mov	rax, qword ptr [r15 + 0x10]
cmp	rax, qword ptr [r15 + 0x18]
jae	0x140033cf5
jae	0x140033cf5
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edx, eax
mov	eax, 0
cmove	r15, rax
jmp	0x140033448
jmp	0x140033448
nop	dword ptr [rax + rax]
mov	eax, dword ptr [rsi]
mov	dword ptr [rsp + 0xd4], eax
xor	eax, eax
jmp	0x1400338e1
jmp	0x1400338e1
nop	dword ptr [rax + rax]
movsx	edx, byte ptr [rsp + 0x78]
movsx	r11d, al
mov	esi, edx
jmp	0x1400334d6
jmp	0x1400334d6
mov	rax, qword ptr [r15 + 0x10]
cmp	rax, qword ptr [r15 + 0x18]
jae	0x140033d0c
jae	0x140033d0c
movzx	edx, word ptr [rax]
xor	eax, eax
cmp	dx, -1
cmove	r15, rax
jmp	0x14003339f
jmp	0x14003339f
mov	rax, qword ptr [rbp]
mov	byte ptr [rsp + 0x8f], r8b
mov	rcx, rbp
mov	byte ptr [rsp + 0x78], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x78]
movzx	r8d, byte ptr [rsp + 0x8f]
jmp	0x140033801
jmp	0x140033801
nop	dword ptr [rax]
mov	rax, qword ptr [r15]
mov	rcx, r15
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140033403
jmp	0x140033403
nop	
mov	rax, qword ptr [r15]
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, ax
jmp	0x140033832
jmp	0x140033832
nop	word ptr [rax + rax]
mov	rax, qword ptr [r15 + 0x10]
cmp	rax, qword ptr [r15 + 0x18]
jae	0x140033d1d
jae	0x140033d1d
movzx	edx, word ptr [rax]
xor	eax, eax
cmp	dx, -1
cmove	r15, rax
jmp	0x1400333cd
jmp	0x1400333cd
nop	dword ptr [rax + rax]
mov	rdi, qword ptr [rsp + 0x60]
mov	rsi, qword ptr [rsp + 0x68]
mov	dword ptr [rsp + 0x40], edx
lea	rcx, [rsp + 0xb0]
mov	si, word ptr [rsp + 0x58]
mov	qword ptr [rsp + 0xa0], r15
lea	r9, [rsp + 0x90]
lea	r8, [rsp + 0xa0]
mov	di, r12w
mov	qword ptr [rsp + 0x90], rbp
mov	rdx, qword ptr [rsp + 0x138]
mov	qword ptr [rsp + 0x60], rdi
mov	qword ptr [rsp + 0xa8], rdi
mov	rdi, qword ptr [rsp + 0x160]
mov	qword ptr [rsp + 0x68], rsi
mov	qword ptr [rsp + 0x30], rdi
mov	rdi, qword ptr [rsp + 0x158]
mov	qword ptr [rsp + 0x98], rsi
mov	qword ptr [rsp + 0x28], rdi
mov	rdi, qword ptr [rsp + 0x150]
mov	dword ptr [rsp + 0x38], r11d
mov	qword ptr [rsp + 0x20], rdi
call	rax
call	rax
mov	r15, qword ptr [rsp + 0xb0]
movzx	r12d, word ptr [rsp + 0xb8]
jmp	0x1400336a6
jmp	0x1400336a6
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140033d48
jae	0x140033d48
movzx	eax, word ptr [rax]
xor	edi, edi
cmp	ax, -1
mov	eax, 0
cmove	edi, r13d
cmove	rbp, rax
jmp	0x1400339e1
jmp	0x1400339e1
mov	rax, qword ptr [r13 + 0x10]
cmp	rax, qword ptr [r13 + 0x18]
jae	0x140033d2e
jae	0x140033d2e
movzx	eax, word ptr [rax]
xor	esi, esi
mov	r9d, 0
cmp	ax, -1
cmovne	r9, r13
cmove	esi, r8d
mov	r15, r9
jmp	0x1400339cf
jmp	0x1400339cf
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140033d6f
jae	0x140033d6f
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	dil
jmp	0x140033696
jmp	0x140033696
mov	rax, qword ptr [r13 + 0x10]
cmp	rax, qword ptr [r13 + 0x18]
jae	0x140033d57
jae	0x140033d57
movzx	eax, word ptr [rax]
xor	esi, esi
mov	r9d, 0
cmp	ax, -1
cmovne	r9, r13
cmove	esi, edx
mov	r15, r9
jmp	0x140033688
jmp	0x140033688
mov	rax, qword ptr [rsp + 0x158]
mov	rdi, qword ptr [rsp + 0x130]
mov	rbx, r15
mov	r10, qword ptr [rsp + 0x60]
mov	r11, qword ptr [rsp + 0x70]
mov	dword ptr [rax], 4
jmp	0x1400336d5
jmp	0x1400336d5
mov	rax, qword ptr [rbp]
mov	byte ptr [rsp + 0x78], dl
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x78]
jmp	0x140033a01
jmp	0x140033a01
mov	rax, qword ptr [r15]
mov	byte ptr [rsp + 0x78], dl
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x78]
jmp	0x140033a89
jmp	0x140033a89
mov	rax, qword ptr [r15]
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, ax
jmp	0x140033ae1
jmp	0x140033ae1
mov	rax, qword ptr [r15]
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, ax
jmp	0x140033b59
jmp	0x140033b59
mov	rax, qword ptr [r13]
mov	byte ptr [rsp + 0x78], r8b
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, byte ptr [rsp + 0x78]
jmp	0x140033c4f
jmp	0x140033c4f
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140033c26
jmp	0x140033c26
mov	rax, qword ptr [r13]
mov	byte ptr [rsp + 0x78], dl
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x78]
jmp	0x140033c9a
jmp	0x140033c9a
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140033c7c
jmp	0x140033c7c
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
mov	rax, qword ptr [rdx]
mov	rbp, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	r13, qword ptr [r9]
mov	rax, qword ptr [rax + 0x40]
mov	r15, qword ptr [r9 + 8]
mov	edi, dword ptr [rsp + 0x128]
mov	r12d, dword ptr [rsp + 0x130]
mov	r14, rdx
lea	rdx, [rip + 0x29f]
mov	rsi, rcx
cmp	rax, rdx
jne	0x140033f90
jne	0x140033f90
mov	rcx, qword ptr [rip + 0x8aafc]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x110]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rcx, qword ptr [rax + rdx*8]
test	rcx, rcx
je	0x14003405c
je	0x14003405c
mov	rax, qword ptr [rsp + 0x118]
mov	edx, 0x25
movsx	di, dil
mov	dword ptr [rax], 0
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	word ptr [rsp + 0x8c], ax
xor	eax, eax
test	r12b, r12b
jne	0x140033f60
jne	0x140033f60
mov	word ptr [rsp + 0x90], ax
lea	rax, [rsp + 0x8c]
mov	rdx, r14
lea	rcx, [rsp + 0x70]
mov	qword ptr [rsp + 0x38], rax
lea	r9, [rsp + 0x50]
lea	r8, [rsp + 0x60]
mov	rax, qword ptr [rsp + 0x120]
mov	word ptr [rsp + 0x8e], di
lea	rdi, [rsp + 0x94]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x118]
mov	qword ptr [rsp + 0x40], rdi
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x110]
mov	qword ptr [rsp + 0x60], rbp
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x68], rbx
xor	bx, bx
mov	qword ptr [rsp + 0x94], 0
mov	dword ptr [rsp + 0x9c], 0
mov	qword ptr [rsp + 0x50], r13
mov	qword ptr [rsp + 0x58], r15
call	0x140030b70
call	0x140030b70
mov	r12, qword ptr [rsp + 0x78]
mov	rbp, qword ptr [rsp + 0x70]
mov	rcx, rdi
mov	rdx, qword ptr [rsp + 0x120]
movzx	eax, r12w
mov	qword ptr [rsp + 0x78], r12
mov	r14, rbp
or	rbx, rax
mov	qword ptr [rsp + 0x70], rbp
call	0x140094930
call	0x140094930
cmp	r12w, -1
sete	dil
test	rbp, rbp
setne	al
and	al, dil
mov	r12d, eax
jne	0x140034018
jne	0x140034018
cmp	r15w, -1
sete	al
mov	edx, eax
test	r13, r13
je	0x140033f33
je	0x140033f33
test	al, al
jne	0x140033ff0
jne	0x140033ff0
cmp	dl, dil
je	0x140033f80
je	0x140033f80
mov	qword ptr [rsi], r14
mov	qword ptr [rsi + 8], rbx
mov	rax, rsi
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr cs:[rax + rax]
xor	eax, eax
movsx	r12w, r12b
mov	word ptr [rsp + 0x92], ax
mov	eax, edi
mov	edi, r12d
jmp	0x140033e3d
jmp	0x140033e3d
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x118]
or	dword ptr [rax], 2
jmp	0x140033f38
jmp	0x140033f38
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x78], rbx
movsx	r12d, r12b
movsx	edi, dil
mov	rdx, r14
mov	qword ptr [rsp + 0x70], rbp
lea	r9, [rsp + 0x60]
lea	r8, [rsp + 0x70]
mov	rbx, qword ptr [rsp + 0x120]
mov	qword ptr [rsp + 0x60], r13
mov	qword ptr [rsp + 0x30], rbx
mov	rbx, qword ptr [rsp + 0x118]
mov	qword ptr [rsp + 0x68], r15
mov	qword ptr [rsp + 0x28], rbx
mov	rbx, qword ptr [rsp + 0x110]
mov	dword ptr [rsp + 0x40], r12d
mov	dword ptr [rsp + 0x38], edi
mov	qword ptr [rsp + 0x20], rbx
call	rax
call	rax
jmp	0x140033f3f
jmp	0x140033f3f
mov	rax, qword ptr [r13 + 0x10]
cmp	rax, qword ptr [r13 + 0x18]
jae	0x140034040
jae	0x140034040
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	dl
cmp	dl, dil
jne	0x140033f38
jne	0x140033f38
jmp	0x140033f80
jmp	0x140033f80
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140034050
jae	0x140034050
movzx	eax, word ptr [rax]
xor	edi, edi
mov	r14d, 0
cmp	ax, -1
cmove	edi, r12d
cmovne	r14, rbp
jmp	0x140033f1c
jmp	0x140033f1c
nop	
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140033ffd
jmp	0x140033ffd
nop	dword ptr [rax]
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140034025
jmp	0x140034025
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
mov	r13, qword ptr [rsp + 0x110]
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	r12, qword ptr [r9]
mov	r14, qword ptr [r9 + 8]
mov	edi, dword ptr [rsp + 0x128]
mov	ebp, dword ptr [rsp + 0x130]
mov	rsi, rcx
mov	rcx, qword ptr [rip + 0x8a82f]
mov	qword ptr [rsp + 0xf8], rdx
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [r13 + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rcx, qword ptr [rax + rdx*8]
test	rcx, rcx
je	0x1400342ac
je	0x1400342ac
mov	rax, qword ptr [rsp + 0x118]
mov	edx, 0x25
mov	dword ptr [rax], 0
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
xor	edx, edx
mov	word ptr [rsp + 0x8c], ax
movsx	ax, dil
test	bpl, bpl
jne	0x140034228
jne	0x140034228
mov	qword ptr [rsp + 0x60], r15
lea	r15, [rsp + 0x94]
lea	rcx, [rsp + 0x70]
mov	qword ptr [rsp + 0x40], r15
lea	r9, [rsp + 0x50]
lea	r8, [rsp + 0x60]
mov	word ptr [rsp + 0x8e], ax
lea	rax, [rsp + 0x8c]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x120]
mov	qword ptr [rsp + 0x20], r13
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x118]
mov	word ptr [rsp + 0x90], dx
mov	rdx, qword ptr [rsp + 0xf8]
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x68], rbx
xor	bx, bx
mov	qword ptr [rsp + 0x94], 0
mov	dword ptr [rsp + 0x9c], 0
mov	qword ptr [rsp + 0x50], r12
mov	qword ptr [rsp + 0x58], r14
call	0x140030b70
call	0x140030b70
mov	r13, qword ptr [rsp + 0x78]
mov	rbp, qword ptr [rsp + 0x70]
mov	rcx, r15
mov	rdx, qword ptr [rsp + 0x120]
movzx	eax, r13w
mov	qword ptr [rsp + 0x78], r13
mov	rdi, rbp
or	rbx, rax
mov	qword ptr [rsp + 0x70], rbp
call	0x140094930
call	0x140094930
cmp	r13w, -1
sete	r13b
test	rbp, rbp
setne	al
and	al, r13b
mov	r15d, eax
jne	0x140034260
jne	0x140034260
cmp	r14w, -1
sete	al
mov	edx, eax
test	r12, r12
je	0x1400341f5
je	0x1400341f5
test	al, al
jne	0x140034240
jne	0x140034240
cmp	dl, r13b
jne	0x140034205
jne	0x140034205
mov	rax, qword ptr [rsp + 0x118]
or	dword ptr [rax], 2
mov	rax, rsi
mov	qword ptr [rsi], rdi
mov	qword ptr [rsi + 8], rbx
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
xor	edx, edx
movsx	bp, bpl
mov	word ptr [rsp + 0x92], dx
mov	edx, eax
mov	eax, ebp
jmp	0x14003410a
jmp	0x14003410a
mov	rax, qword ptr [r12 + 0x10]
cmp	rax, qword ptr [r12 + 0x18]
jae	0x140034290
jae	0x140034290
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	dl
cmp	dl, r13b
jne	0x140034205
jne	0x140034205
jmp	0x1400341fa
jmp	0x1400341fa
nop	dword ptr [rax]
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x1400342a0
jae	0x1400342a0
movzx	eax, word ptr [rax]
xor	r13d, r13d
mov	edi, 0
cmp	ax, -1
cmove	r13d, r15d
cmovne	rdi, rbp
jmp	0x1400341e2
jmp	0x1400341e2
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14003424f
jmp	0x14003424f
nop	dword ptr [rax]
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14003426d
jmp	0x14003426d
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x108
mov	rdx, qword ptr [r9 + 8]
mov	rax, qword ptr [r8 + 8]
mov	rbx, qword ptr [r8]
mov	r13, qword ptr [r9]
mov	ebp, eax
mov	qword ptr [rsp + 0x150], rcx
mov	rcx, qword ptr [rip + 0x8a48e]
mov	qword ptr [rsp + 0x70], rdx
mov	dword ptr [rsp + 0x38], edx
mov	qword ptr [rsp + 0xa0], rax
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x170]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
mov	qword ptr [rsp + 0x78], rax
test	rax, rax
je	0x140035632
je	0x140035632
lea	rcx, [rip + 0x82f19]
call	0x140022a70
call	0x140022a70
mov	rsi, rax
mov	rax, qword ptr [rsp + 0x170]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	rdi, [rax + rsi*8]
mov	r14, qword ptr [rdi]
test	r14, r14
je	0x140035180
je	0x140035180
lea	rax, [r14 + 0x64]
cmp	qword ptr [r14 + 0x40], 0
mov	qword ptr [rsp + 0x58], rax
jne	0x140034ae8
jne	0x140034ae8
mov	byte ptr [rsp + 0xaf], 0
lea	rax, [rsp + 0xc0]
cmp	byte ptr [r14 + 0x20], 0
mov	qword ptr [rsp + 0xc8], 0
mov	qword ptr [rsp + 0x98], rax
lea	rax, [rsp + 0xd0]
mov	qword ptr [rsp + 0x68], rax
mov	qword ptr [rsp + 0xc0], rax
mov	byte ptr [rsp + 0xd0], 0
je	0x140034520
je	0x140034520
mov	rcx, qword ptr [rsp + 0x98]
mov	edx, 0x20
call	0x14009f7e0
call	0x14009f7e0
lea	rax, [rsp + 0xf0]
lea	rcx, [rsp + 0xe0]
mov	edx, 0x20
mov	qword ptr [rsp + 0xe8], 0
mov	qword ptr [rsp + 0x90], rcx
mov	qword ptr [rsp + 0x50], rax
mov	qword ptr [rsp + 0xe0], rax
mov	byte ptr [rsp + 0xf0], 0
call	0x14009f7e0
call	0x14009f7e0
lea	rax, [r14 + 0x65]
xor	r15d, r15d
mov	qword ptr [rsp + 0x48], 0
mov	qword ptr [rsp + 0x40], rax
mov	eax, dword ptr [r14 + 0x60]
mov	byte ptr [rsp + 0x8b], 0
mov	dword ptr [rsp + 0xbc], eax
lea	rax, [rsp + 0xbc]
mov	dword ptr [rsp + 0xa8], 0
mov	qword ptr [rsp + 0x60], 0
mov	byte ptr [rsp + 0xae], 0
mov	qword ptr [rsp + 0x80], rax
mov	rax, qword ptr [rsp + 0x80]
mov	rcx, qword ptr [rsp + 0x48]
cmp	byte ptr [rax + rcx], 4
ja	0x140034f85
ja	0x140034f85
movzx	eax, byte ptr [rax + rcx]
lea	rdi, [rip + 0x852f7]
movsxd	rax, dword ptr [rdi + rax*4]
add	rax, rdi
jmp	rax
jmp	rax
nop	word ptr [rax + rax]
mov	esi, ebp
mov	rcx, qword ptr [rsp + 0x40]
movsx	edx, sil
mov	r8d, 0xa
call	0x140015988
call	0x140015988
test	rax, rax
je	0x140034b00
je	0x140034b00
mov	rcx, qword ptr [rsp + 0x58]
mov	rsi, qword ptr [rsp + 0xe8]
sub	rax, rcx
mov	rcx, qword ptr [rip + 0x8a172]
lea	rdi, [rsi + 1]
mov	rdx, qword ptr [rcx]
mov	rcx, qword ptr [rsp + 0x50]
movzx	ebp, byte ptr [rdx + rax]
mov	rax, qword ptr [rsp + 0xe0]
cmp	rax, rcx
je	0x140034ca8
je	0x140034ca8
mov	rdx, qword ptr [rsp + 0xf0]
cmp	rdx, rdi
jb	0x140034ba8
jb	0x140034ba8
mov	byte ptr [rax + rsi], bpl
mov	rax, qword ptr [rsp + 0xe0]
add	r15d, 1
mov	qword ptr [rsp + 0xe8], rdi
mov	byte ptr [rax + rsi + 1], 0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140034b96
jae	0x140034b96
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
mov	ebp, 0xffffffff
cmp	ebp, -1
sete	dil
test	rbx, rbx
setne	sil
and	sil, dil
jne	0x140034c60
jne	0x140034c60
mov	esi, edi
cmp	dword ptr [rsp + 0x38], -1
sete	al
test	r13, r13
setne	r12b
and	r12b, al
jne	0x140034c10
jne	0x140034c10
cmp	sil, al
je	0x140034c50
je	0x140034c50
test	rbx, rbx
je	0x1400345e8
je	0x1400345e8
test	dil, dil
je	0x1400345e8
je	0x1400345e8
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140035158
jae	0x140035158
movzx	esi, byte ptr [rax]
jmp	0x1400345ea
jmp	0x1400345ea
nop	word ptr [rax + rax]
mov	edi, 1
cmp	qword ptr [rsp + 0x48], 3
jne	0x140034cf0
jne	0x140034cf0
cmp	qword ptr [rsp + 0x60], 1
seta	al
and	eax, edi
mov	byte ptr [rsp + 0x40], al
cmp	byte ptr [rsp + 0x40], 0
je	0x140035624
je	0x140035624
cmp	byte ptr [rsp + 0xae], 0
je	0x140034f90
je	0x140034f90
mov	rax, qword ptr [r14 + 0x48]
mov	qword ptr [rsp + 0x38], rax
cmp	ebp, -1
mov	esi, 1
sete	r12b
mov	edi, r12d
test	rbx, rbx
je	0x14003474b
je	0x14003474b
test	r12b, r12b
jne	0x1400347b1
jne	0x1400347b1
cmp	dword ptr [rsp + 0x70], -1
sete	al
test	r13, r13
je	0x140034760
je	0x140034760
test	al, al
jne	0x140034a90
jne	0x140034a90
xor	edi, eax
mov	rax, qword ptr [rsp + 0x60]
cmp	rsi, rax
jae	0x140034f50
jae	0x140034f50
test	dil, dil
je	0x140034f50
je	0x140034f50
test	rbx, rbx
je	0x140034787
je	0x140034787
test	r12b, r12b
jne	0x140034ac0
jne	0x140034ac0
mov	eax, ebp
mov	rcx, qword ptr [rsp + 0x38]
cmp	byte ptr [rcx + rsi], al
jne	0x1400349e0
jne	0x1400349e0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140034e00
jae	0x140034e00
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
add	rsi, 1
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x1400353a0
jae	0x1400353a0
movzx	r12d, byte ptr [rsp + 0x40]
mov	ebp, 0xffffffff
xor	edi, edi
jmp	0x14003474b
jmp	0x14003474b
nop	dword ptr [rax]
cmp	ebp, -1
sete	r12b
test	rbx, rbx
setne	sil
and	sil, r12b
jne	0x140035275
jne	0x140035275
mov	esi, r12d
cmp	dword ptr [rsp + 0x38], -1
sete	al
test	r13, r13
setne	dil
and	dil, al
jne	0x14003528a
jne	0x14003528a
xor	edi, edi
cmp	sil, al
je	0x1400346f5
je	0x1400346f5
test	rbx, rbx
je	0x140034823
je	0x140034823
test	r12b, r12b
jne	0x14003544d
jne	0x14003544d
mov	eax, ebp
mov	rcx, qword ptr [rsp + 0x78]
movzx	eax, al
xor	edi, edi
mov	rdx, qword ptr [rcx + 0x30]
test	byte ptr [rdx + rax*2], 0x20
je	0x1400346f5
je	0x1400346f5
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140035577
jae	0x140035577
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
mov	ebp, 0xffffffff
mov	edi, 1
jmp	0x1400346f5
jmp	0x1400346f5
nop	word ptr [rax + rax]
cmp	qword ptr [r14 + 0x40], 0
jne	0x140034fa0
jne	0x140034fa0
cmp	qword ptr [r14 + 0x50], 0
jne	0x140035000
jne	0x140035000
movzx	edi, byte ptr [rsp + 0xaf]
xor	edi, 1
mov	rcx, qword ptr [rsp + 0x48]
mov	eax, ecx
add	eax, 1
cmp	eax, 3
setle	al
add	rcx, 1
mov	qword ptr [rsp + 0x48], rcx
test	al, dil
jne	0x1400345b7
jne	0x1400345b7
jmp	0x140034701
jmp	0x140034701
mov	rax, qword ptr [rsp + 0x170]
test	byte ptr [rax + 0x19], 2
jne	0x140034e30
jne	0x140034e30
cmp	qword ptr [rsp + 0x60], 1
ja	0x140034e30
ja	0x140034e30
mov	rax, qword ptr [rsp + 0x48]
test	eax, eax
je	0x140034e30
je	0x140034e30
cmp	rax, 1
je	0x140034e0e
je	0x140034e0e
cmp	qword ptr [rsp + 0x48], 2
je	0x1400350a3
je	0x1400350a3
cmp	qword ptr [rsp + 0xe8], 1
ja	0x140035058
ja	0x140035058
cmp	byte ptr [rsp + 0xae], 0
je	0x140034937
je	0x140034937
mov	rax, qword ptr [rsp + 0xe0]
cmp	byte ptr [rax], 0x30
je	0x140034937
je	0x140034937
mov	dword ptr [rsp + 0x20], 0x2d
mov	rcx, qword ptr [rsp + 0x90]
xor	r8d, r8d
xor	edx, edx
mov	r9d, 1
call	0x14009d910
call	0x14009d910
mov	rsi, qword ptr [rsp + 0xc8]
test	rsi, rsi
je	0x1400349c1
je	0x1400349c1
movzx	r12d, byte ptr [rsp + 0xa8]
mov	rax, qword ptr [rsp + 0xc0]
lea	rdi, [rsi + 1]
mov	rcx, qword ptr [rsp + 0x68]
cmp	byte ptr [rsp + 0x8b], 0
cmove	r12d, r15d
cmp	rax, rcx
je	0x14003553b
je	0x14003553b
mov	rdx, qword ptr [rsp + 0xd0]
cmp	rdx, rdi
jb	0x1400353df
jb	0x1400353df
mov	byte ptr [rax + rsi], r12b
mov	rax, qword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0xc8], rdi
mov	r8, qword ptr [rsp + 0x98]
mov	byte ptr [rax + rsi + 1], 0
mov	rdx, qword ptr [r14 + 0x18]
mov	rcx, qword ptr [r14 + 0x10]
call	0x1400ae850
call	0x1400ae850
test	al, al
jne	0x1400349c1
jne	0x1400349c1
mov	rax, qword ptr [rsp + 0x178]
or	dword ptr [rax], 4
cmp	ebp, -1
sete	r12b
cmp	byte ptr [rsp + 0x8b], 0
je	0x1400350d0
je	0x1400350d0
cmp	dword ptr [r14 + 0x58], r15d
je	0x1400350d0
je	0x1400350d0
mov	rax, qword ptr [rsp + 0x178]
or	dword ptr [rax], 4
test	rbx, rbx
setne	sil
and	sil, r12b
jne	0x1400350f8
jne	0x1400350f8
cmp	dword ptr [rsp + 0x70], -1
sete	al
test	r13, r13
je	0x140034a10
je	0x140034a10
test	al, al
jne	0x140035250
jne	0x140035250
cmp	al, r12b
jne	0x140034a20
jne	0x140034a20
mov	rax, qword ptr [rsp + 0x178]
or	dword ptr [rax], 2
mov	eax, ebp
mov	rcx, qword ptr [rsp + 0xe0]
movabs	rbp, 0xffffffff00000000
and	rbp, qword ptr [rsp + 0xa0]
or	rbp, rax
mov	rax, qword ptr [rsp + 0x150]
mov	qword ptr [rax], rbx
mov	qword ptr [rax + 8], rbp
mov	rax, qword ptr [rsp + 0x50]
cmp	rcx, rax
je	0x140034a5d
je	0x140034a5d
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, qword ptr [rsp + 0xc0]
mov	rax, qword ptr [rsp + 0x68]
cmp	rcx, rax
je	0x140034a74
je	0x140034a74
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0x150]
add	rsp, 0x108
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
mov	rax, qword ptr [r13 + 0x18]
cmp	qword ptr [r13 + 0x10], rax
jb	0x140034762
jb	0x140034762
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x140034762
jne	0x140034762
xor	edi, 1
xor	r13d, r13d
jmp	0x140034762
jmp	0x140034762
nop	dword ptr [rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400353c8
jae	0x1400353c8
mov	rdi, qword ptr [rsp + 0x38]
movzx	edi, byte ptr [rdi + rsi]
cmp	byte ptr [rax], dil
je	0x1400347a5
je	0x1400347a5
jmp	0x1400349e0
jmp	0x1400349e0
nop	dword ptr [rax]
cmp	qword ptr [r14 + 0x50], 0
setne	byte ptr [rsp + 0xaf]
jmp	0x1400344ce
jmp	0x1400344ce
nop	word ptr [rax + rax]
cmp	byte ptr [r14 + 0x21], sil
je	0x140034bd8
je	0x140034bd8
movzx	edi, byte ptr [r14 + 0x20]
test	dil, dil
je	0x140034c50
je	0x140034c50
cmp	byte ptr [r14 + 0x22], sil
jne	0x140034cc0
jne	0x140034cc0
cmp	byte ptr [rsp + 0x8b], 0
jne	0x140034cb8
jne	0x140034cb8
test	r15d, r15d
je	0x1400352bd
je	0x1400352bd
mov	rsi, qword ptr [rsp + 0xc8]
mov	rax, qword ptr [rsp + 0xc0]
mov	rcx, qword ptr [rsp + 0x68]
lea	rdi, [rsi + 1]
cmp	rax, rcx
je	0x140034ce0
je	0x140034ce0
mov	rdx, qword ptr [rsp + 0xd0]
cmp	rdx, rdi
jb	0x140034c78
jb	0x140034c78
mov	byte ptr [rax + rsi], r15b
mov	rax, qword ptr [rsp + 0xc0]
xor	r15d, r15d
mov	qword ptr [rsp + 0xc8], rdi
mov	byte ptr [rax + rsi + 1], 0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jb	0x14003467b
jb	0x14003467b
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140034683
jmp	0x140034683
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x20], 1
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, qword ptr [rsp + 0x90]
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0xe0]
jmp	0x140034650
jmp	0x140034650
nop	dword ptr [rax]
cmp	byte ptr [rsp + 0x8b], 0
jne	0x140034cb8
jne	0x140034cb8
mov	eax, dword ptr [r14 + 0x58]
test	eax, eax
jle	0x140034c50
jle	0x140034c50
mov	dword ptr [rsp + 0xa8], r15d
xor	r15d, r15d
mov	byte ptr [rsp + 0x8b], 1
jmp	0x14003466d
jmp	0x14003466d
nop	word ptr cs:[rax + rax]
mov	rdx, qword ptr [r13 + 0x18]
xor	eax, eax
cmp	qword ptr [r13 + 0x10], rdx
jb	0x1400346b9
jb	0x1400346b9
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
mov	edx, 0
cmove	eax, r12d
cmove	r13, rdx
cmp	sil, al
jne	0x1400346c2
jne	0x1400346c2
nop	dword ptr [rax + rax]
mov	edi, 1
jmp	0x140034cc0
jmp	0x140034cc0
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x140035130
jae	0x140035130
xor	esi, esi
jmp	0x1400346a1
jmp	0x1400346a1
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x20], 1
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, qword ptr [rsp + 0x98]
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0xc0]
jmp	0x140034b6c
jmp	0x140034b6c
nop	dword ptr [rax]
mov	edx, 0xf
jmp	0x140034647
jmp	0x140034647
nop	word ptr [rax + rax]
movzx	edi, byte ptr [rsp + 0x8b]
cmp	qword ptr [rsp + 0xe8], 0
jne	0x140034889
jne	0x140034889
cmp	ebp, -1
sete	r12b
jmp	0x1400349e0
jmp	0x1400349e0
nop	dword ptr [rax + rax]
mov	edx, 0xf
jmp	0x140034b63
jmp	0x140034b63
nop	word ptr [rax + rax]
cmp	ebp, -1
sete	r12b
test	rbx, rbx
je	0x140034d01
je	0x140034d01
test	r12b, r12b
jne	0x140034d67
jne	0x140034d67
mov	byte ptr [rsp + 0x8c], r12b
cmp	dword ptr [rsp + 0x38], -1
sete	al
test	r13, r13
setne	sil
and	sil, al
jne	0x140034db8
jne	0x140034db8
cmp	al, r12b
je	0x140034889
je	0x140034889
test	rbx, rbx
je	0x140034d39
je	0x140034d39
cmp	byte ptr [rsp + 0x8c], 0
jne	0x140034d90
jne	0x140034d90
mov	eax, ebp
mov	rdx, qword ptr [rsp + 0x78]
movzx	eax, al
mov	rdx, qword ptr [rdx + 0x30]
test	byte ptr [rdx + rax*2], 0x20
je	0x140034889
je	0x140034889
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140034df0
jae	0x140034df0
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x1400352c4
jae	0x1400352c4
mov	byte ptr [rsp + 0x8c], 1
mov	ebp, 0xffffffff
xor	r12d, r12d
jmp	0x140034d09
jmp	0x140034d09
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140035389
jae	0x140035389
mov	rdx, qword ptr [rsp + 0x78]
movzx	ecx, byte ptr [rax]
mov	rdx, qword ptr [rdx + 0x30]
test	byte ptr [rdx + rcx*2], 0x20
jne	0x140034d5f
jne	0x140034d5f
jmp	0x140034889
jmp	0x140034889
nop	dword ptr [rax]
mov	rdx, qword ptr [r13 + 0x18]
xor	eax, eax
cmp	qword ptr [r13 + 0x10], rdx
jb	0x140034d21
jb	0x140034d21
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	edx, 0
mov	eax, 0
cmove	eax, esi
cmove	r13, rdx
jmp	0x140034d21
jmp	0x140034d21
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140034d67
jmp	0x140034d67
nop	
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x1400347ad
jmp	0x1400347ad
cmp	byte ptr [rsp + 0xaf], 0
jne	0x140034e30
jne	0x140034e30
cmp	byte ptr [rsp + 0xbc], 3
je	0x140034e30
je	0x140034e30
cmp	byte ptr [rsp + 0xbe], 1
jne	0x140034f85
jne	0x140034f85
cmp	ebp, -1
mov	r12, qword ptr [r14 + 0x30]
sete	al
mov	edi, eax
test	rbx, rbx
je	0x140034e49
je	0x140034e49
test	al, al
jne	0x1400354b7
jne	0x1400354b7
mov	byte ptr [rsp + 0x8c], al
xor	esi, esi
cmp	dword ptr [rsp + 0x38], -1
sete	al
test	r13, r13
je	0x140034e63
je	0x140034e63
test	al, al
jne	0x140034ed0
jne	0x140034ed0
xor	edi, eax
cmp	rsi, r12
jae	0x140034f80
jae	0x140034f80
test	dil, dil
je	0x140034f80
je	0x140034f80
test	rbx, rbx
je	0x140034e86
je	0x140034e86
cmp	byte ptr [rsp + 0x8c], 0
jne	0x140034f00
jne	0x140034f00
mov	eax, ebp
mov	rdx, qword ptr [r14 + 0x28]
cmp	byte ptr [rdx + rsi], al
jne	0x140034f20
jne	0x140034f20
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140034f70
jae	0x140034f70
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
add	rsi, 1
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x14003540b
jae	0x14003540b
mov	byte ptr [rsp + 0x8c], 1
mov	ebp, 0xffffffff
xor	edi, edi
jmp	0x140034e52
jmp	0x140034e52
nop	
mov	rax, qword ptr [r13 + 0x18]
cmp	qword ptr [r13 + 0x10], rax
jb	0x140034e65
jb	0x140034e65
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x140034e65
jne	0x140034e65
xor	edi, 1
xor	r13d, r13d
jmp	0x140034e65
jmp	0x140034e65
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400354be
jae	0x1400354be
mov	rdx, qword ptr [r14 + 0x28]
movzx	ecx, byte ptr [rdx + rsi]
cmp	byte ptr [rax], cl
je	0x140034ea3
je	0x140034ea3
nop	word ptr [rax + rax]
test	rsi, rsi
jne	0x140034ccf
jne	0x140034ccf
mov	rax, qword ptr [rsp + 0x170]
mov	eax, dword ptr [rax + 0x18]
mov	edi, eax
mov	dword ptr [rsp + 0x8c], eax
shr	edi, 9
xor	edi, 1
and	edi, 1
jmp	0x140034889
jmp	0x140034889
nop	dword ptr [rax + rax]
cmp	qword ptr [rsp + 0x60], rsi
jne	0x1400349e0
jne	0x1400349e0
cmp	qword ptr [rsp + 0xe8], 1
jbe	0x140034900
jbe	0x140034900
jmp	0x140035058
jmp	0x140035058
nop	
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140034eab
jmp	0x140034eab
nop	
cmp	r12, rsi
jne	0x140034f20
jne	0x140034f20
mov	edi, 1
jmp	0x140034889
jmp	0x140034889
nop	
mov	rax, qword ptr [r14 + 0x38]
mov	qword ptr [rsp + 0x38], rax
jmp	0x140034732
jmp	0x140034732
nop	
cmp	ebp, -1
sete	r12b
test	rbx, rbx
setne	al
and	al, r12b
mov	esi, eax
jne	0x140035438
jne	0x140035438
mov	esi, r12d
cmp	dword ptr [rsp + 0x38], -1
sete	al
test	r13, r13
setne	dl
and	dl, al
mov	edi, edx
jne	0x1400354d5
jne	0x1400354d5
cmp	al, sil
jne	0x1400352f0
jne	0x1400352f0
cmp	qword ptr [r14 + 0x50], 0
jne	0x140035000
jne	0x140035000
cmp	qword ptr [r14 + 0x40], 0
je	0x14003487e
je	0x14003487e
mov	byte ptr [rsp + 0xae], 1
mov	edi, 1
jmp	0x140034889
jmp	0x140034889
cmp	ebp, -1
sete	r12b
test	rbx, rbx
setne	al
and	al, r12b
mov	esi, eax
jne	0x140035487
jne	0x140035487
mov	esi, r12d
cmp	dword ptr [rsp + 0x38], -1
sete	al
test	r13, r13
setne	dl
mov	edi, edx
and	dil, al
jne	0x140035508
jne	0x140035508
cmp	al, sil
jne	0x140035336
jne	0x140035336
cmp	qword ptr [r14 + 0x40], 0
je	0x14003487e
je	0x14003487e
cmp	qword ptr [r14 + 0x50], 0
jne	0x14003487e
jne	0x14003487e
jmp	0x140034fee
jmp	0x140034fee
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x90]
xor	r8d, r8d
mov	edx, 0x30
call	0x1400261c0
call	0x1400261c0
test	rax, rax
je	0x140034900
je	0x140034900
mov	r8, qword ptr [rsp + 0xe8]
cmp	rax, -1
je	0x14003549c
je	0x14003549c
cmp	rax, r8
mov	rcx, qword ptr [rsp + 0x90]
cmovbe	r8, rax
xor	edx, edx
call	0x14009f890
call	0x14009f890
jmp	0x140034900
jmp	0x140034900
movzx	eax, byte ptr [rsp + 0xbf]
cmp	al, 4
je	0x140034e30
je	0x140034e30
cmp	al, 3
jne	0x140034f85
jne	0x140034f85
cmp	byte ptr [rsp + 0xaf], 0
je	0x140034f85
je	0x140034f85
jmp	0x140034e30
jmp	0x140034e30
nop	
mov	rdx, qword ptr [rsp + 0x90]
mov	rcx, qword ptr [rsp + 0x180]
call	0x14009dc50
call	0x14009dc50
test	rbx, rbx
setne	sil
and	sil, r12b
je	0x1400349fb
je	0x1400349fb
nop	dword ptr [rax]
mov	rax, qword ptr [rbx + 0x18]
xor	r12d, r12d
cmp	qword ptr [rbx + 0x10], rax
jb	0x1400349fb
jb	0x1400349fb
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmove	r12d, esi
cmove	rbx, rax
jmp	0x1400349fb
jmp	0x1400349fb
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	esi, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x1400346a1
jmp	0x1400346a1
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	edx, 0xffffffff
cmovne	edx, eax
mov	eax, 0
cmove	rbx, rax
mov	esi, edx
jmp	0x1400345ea
jmp	0x1400345ea
nop	dword ptr [rax]
mov	ecx, 0x70
call	0x1400b2c30
call	0x1400b2c30
mov	r12, rax
mov	dword ptr [rax + 8], 0
xor	edx, edx
mov	rax, qword ptr [rip + 0x89e13]
mov	word ptr [r12 + 0x21], dx
mov	rcx, r12
add	rax, 0x10
mov	byte ptr [r12 + 0x20], 0
mov	qword ptr [r12], rax
mov	rax, qword ptr [rsp + 0x170]
mov	qword ptr [r12 + 0x10], 0
mov	qword ptr [r12 + 0x18], 0
lea	rdx, [rax + 0xd0]
mov	qword ptr [r12 + 0x28], 0
mov	qword ptr [r12 + 0x30], 0
mov	qword ptr [r12 + 0x38], 0
mov	qword ptr [r12 + 0x40], 0
mov	qword ptr [r12 + 0x48], 0
mov	qword ptr [r12 + 0x50], 0
mov	dword ptr [r12 + 0x58], 0
mov	qword ptr [r12 + 0x5c], 0
mov	byte ptr [r12 + 0x6f], 0
call	0x1400961b0
call	0x1400961b0
mov	rax, qword ptr [rsp + 0x170]
mov	r8, rsi
mov	rdx, r12
mov	rcx, qword ptr [rax + 0xd0]
call	0x140099d30
call	0x140099d30
mov	r14, qword ptr [rdi]
jmp	0x1400344b2
jmp	0x1400344b2
nop	word ptr [rax + rax]
mov	rdx, qword ptr [r13 + 0x18]
xor	eax, eax
cmp	qword ptr [r13 + 0x10], rdx
jb	0x140034a10
jb	0x140034a10
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jmp	0x140034a10
jmp	0x140034a10
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x140035555
jae	0x140035555
xor	esi, esi
jmp	0x1400347f2
jmp	0x1400347f2
mov	rcx, qword ptr [r13 + 0x18]
xor	eax, eax
cmp	qword ptr [r13 + 0x10], rcx
jb	0x14003480a
jb	0x14003480a
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	edx, 0
mov	eax, 0
cmove	eax, edi
cmove	r13, rdx
jmp	0x14003480a
jmp	0x14003480a
xor	edi, edi
jmp	0x140034cc0
jmp	0x140034cc0
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x140034d75
jne	0x140034d75
mov	byte ptr [rsp + 0x8c], 1
mov	r12d, 1
xor	ebx, ebx
jmp	0x140034d09
jmp	0x140034d09
nop	dword ptr [rax]
test	rbx, rbx
je	0x14003530d
je	0x14003530d
test	r12b, r12b
je	0x14003530d
je	0x14003530d
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140035602
jae	0x140035602
movzx	eax, byte ptr [rax]
jmp	0x14003530f
jmp	0x14003530f
mov	eax, ebp
mov	rdx, qword ptr [r14 + 0x38]
cmp	byte ptr [rdx], al
jne	0x140034fdc
jne	0x140034fdc
mov	rax, qword ptr [r14 + 0x40]
mov	rcx, rbx
mov	qword ptr [rsp + 0x60], rax
call	0x1400919e0
call	0x1400919e0
mov	ebp, 0xffffffff
jmp	0x140034f85
jmp	0x140034f85
test	rbx, rbx
je	0x140035353
je	0x140035353
test	r12b, r12b
je	0x140035353
je	0x140035353
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400355e0
jae	0x1400355e0
movzx	eax, byte ptr [rax]
jmp	0x140035355
jmp	0x140035355
mov	eax, ebp
mov	rdx, qword ptr [r14 + 0x48]
cmp	byte ptr [rdx], al
jne	0x14003503d
jne	0x14003503d
mov	rax, qword ptr [r14 + 0x50]
mov	rcx, rbx
mov	qword ptr [rsp + 0x60], rax
call	0x1400919e0
call	0x1400919e0
mov	byte ptr [rsp + 0xae], 1
mov	ebp, 0xffffffff
mov	edi, 1
jmp	0x140034889
jmp	0x140034889
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
xor	edx, edx
cmp	eax, -1
cmove	rbx, rdx
jmp	0x140034d3b
jmp	0x140034d3b
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x1400347bf
jne	0x1400347bf
movzx	edi, byte ptr [rsp + 0x40]
xor	ebx, ebx
mov	r12d, edi
jmp	0x14003474b
jmp	0x14003474b
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
xor	edx, edx
cmp	eax, -1
cmove	rbx, rdx
jmp	0x140034789
jmp	0x140034789
mov	qword ptr [rsp + 0x20], 1
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, qword ptr [rsp + 0x98]
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0xc0]
jmp	0x140034984
jmp	0x140034984
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x140034ebd
jne	0x140034ebd
mov	byte ptr [rsp + 0x8c], 1
mov	edi, 1
xor	ebx, ebx
jmp	0x140034e52
jmp	0x140034e52
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x140035585
jae	0x140035585
xor	esi, esi
jmp	0x140034fbb
jmp	0x140034fbb
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400355a7
jae	0x1400355a7
mov	rdx, qword ptr [rsp + 0x78]
movzx	ecx, byte ptr [rax]
mov	rdx, qword ptr [rdx + 0x30]
test	byte ptr [rdx + rcx*2], 0x20
jne	0x14003484b
jne	0x14003484b
cmp	qword ptr [rsp + 0x48], 3
jne	0x140034d67
jne	0x140034d67
mov	ebp, 0xffffffff
jmp	0x140034701
jmp	0x140034701
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x1400355be
jae	0x1400355be
xor	esi, esi
jmp	0x14003501b
jmp	0x14003501b
lea	rax, [r8 - 1]
test	r8, r8
je	0x140035545
je	0x140035545
test	rax, rax
je	0x140034900
je	0x140034900
jmp	0x140035088
jmp	0x140035088
xor	esi, esi
jmp	0x140034eaf
jmp	0x140034eaf
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
xor	edx, edx
cmp	eax, -1
cmove	rbx, rdx
jmp	0x140034e88
jmp	0x140034e88
mov	rdx, qword ptr [r13 + 0x18]
xor	eax, eax
cmp	qword ptr [r13 + 0x10], rdx
jb	0x140034fd3
jb	0x140034fd3
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	edx, 0
mov	eax, 0
cmove	eax, edi
cmove	r13, rdx
jmp	0x140034fd3
jmp	0x140034fd3
mov	rdx, qword ptr [r13 + 0x18]
xor	eax, eax
cmp	qword ptr [r13 + 0x10], rdx
jb	0x140035034
jb	0x140035034
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	edx, 0
mov	eax, 0
cmove	eax, edi
cmove	r13, rdx
jmp	0x140035034
jmp	0x140035034
mov	edx, 0xf
jmp	0x14003497b
jmp	0x14003497b
mov	rax, qword ptr [rsp + 0xe0]
mov	byte ptr [rax], 0
jmp	0x140034900
jmp	0x140034900
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	esi, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x1400347f2
jmp	0x1400347f2
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140034853
jmp	0x140034853
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	esi, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x140034fbb
jmp	0x140034fbb
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
xor	edx, edx
cmp	eax, -1
cmove	rbx, rdx
jmp	0x140034825
jmp	0x140034825
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	esi, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x14003501b
jmp	0x14003501b
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	edx, 0xffffffff
cmove	eax, edx
mov	edx, 0
cmove	rbx, rdx
jmp	0x140035355
jmp	0x140035355
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	edx, 0xffffffff
cmove	eax, edx
mov	edx, 0
cmove	rbx, rdx
jmp	0x14003530f
jmp	0x14003530f
test	dil, dil
je	0x140034ccf
je	0x140034ccf
jmp	0x1400348f1
jmp	0x1400348f1
call	0x1400b3a30
call	0x1400b3a30
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x140035649
jmp	0x140035649
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x14003567d
jmp	0x14003567d
mov	rcx, qword ptr [rsp + 0x90]
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, qword ptr [rsp + 0x98]
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x108
mov	rdx, qword ptr [r9 + 8]
mov	rax, qword ptr [r8 + 8]
mov	rbx, qword ptr [r8]
mov	r13, qword ptr [r9]
mov	ebp, eax
mov	qword ptr [rsp + 0x150], rcx
mov	rcx, qword ptr [rip + 0x891fe]
mov	qword ptr [rsp + 0x70], rdx
mov	dword ptr [rsp + 0x38], edx
mov	qword ptr [rsp + 0xa0], rax
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x170]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
mov	qword ptr [rsp + 0x78], rax
test	rax, rax
je	0x1400368c2
je	0x1400368c2
lea	rcx, [rip + 0x81c99]
call	0x140022a70
call	0x140022a70
mov	rsi, rax
mov	rax, qword ptr [rsp + 0x170]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	rdi, [rax + rsi*8]
mov	r14, qword ptr [rdi]
test	r14, r14
je	0x140036410
je	0x140036410
lea	rax, [r14 + 0x64]
cmp	qword ptr [r14 + 0x40], 0
mov	qword ptr [rsp + 0x58], rax
jne	0x140035d78
jne	0x140035d78
mov	byte ptr [rsp + 0xaf], 0
lea	rax, [rsp + 0xc0]
cmp	byte ptr [r14 + 0x20], 0
mov	qword ptr [rsp + 0xc8], 0
mov	qword ptr [rsp + 0x98], rax
lea	rax, [rsp + 0xd0]
mov	qword ptr [rsp + 0x68], rax
mov	qword ptr [rsp + 0xc0], rax
mov	byte ptr [rsp + 0xd0], 0
je	0x1400357b0
je	0x1400357b0
mov	rcx, qword ptr [rsp + 0x98]
mov	edx, 0x20
call	0x14009f7e0
call	0x14009f7e0
lea	rax, [rsp + 0xf0]
lea	rcx, [rsp + 0xe0]
mov	edx, 0x20
mov	qword ptr [rsp + 0xe8], 0
mov	qword ptr [rsp + 0x90], rcx
mov	qword ptr [rsp + 0x50], rax
mov	qword ptr [rsp + 0xe0], rax
mov	byte ptr [rsp + 0xf0], 0
call	0x14009f7e0
call	0x14009f7e0
lea	rax, [r14 + 0x65]
xor	r15d, r15d
mov	qword ptr [rsp + 0x48], 0
mov	qword ptr [rsp + 0x40], rax
mov	eax, dword ptr [r14 + 0x60]
mov	byte ptr [rsp + 0x8b], 0
mov	dword ptr [rsp + 0xbc], eax
lea	rax, [rsp + 0xbc]
mov	dword ptr [rsp + 0xa8], 0
mov	qword ptr [rsp + 0x60], 0
mov	byte ptr [rsp + 0xae], 0
mov	qword ptr [rsp + 0x80], rax
mov	rax, qword ptr [rsp + 0x80]
mov	rcx, qword ptr [rsp + 0x48]
cmp	byte ptr [rax + rcx], 4
ja	0x140036215
ja	0x140036215
movzx	eax, byte ptr [rax + rcx]
lea	rdi, [rip + 0x84053]
movsxd	rax, dword ptr [rdi + rax*4]
add	rax, rdi
jmp	rax
jmp	rax
nop	word ptr [rax + rax]
mov	esi, ebp
mov	rcx, qword ptr [rsp + 0x40]
movsx	edx, sil
mov	r8d, 0xa
call	0x140015988
call	0x140015988
test	rax, rax
je	0x140035d90
je	0x140035d90
mov	rcx, qword ptr [rsp + 0x58]
mov	rsi, qword ptr [rsp + 0xe8]
sub	rax, rcx
mov	rcx, qword ptr [rip + 0x88ee2]
lea	rdi, [rsi + 1]
mov	rdx, qword ptr [rcx]
mov	rcx, qword ptr [rsp + 0x50]
movzx	ebp, byte ptr [rdx + rax]
mov	rax, qword ptr [rsp + 0xe0]
cmp	rax, rcx
je	0x140035f38
je	0x140035f38
mov	rdx, qword ptr [rsp + 0xf0]
cmp	rdx, rdi
jb	0x140035e38
jb	0x140035e38
mov	byte ptr [rax + rsi], bpl
mov	rax, qword ptr [rsp + 0xe0]
add	r15d, 1
mov	qword ptr [rsp + 0xe8], rdi
mov	byte ptr [rax + rsi + 1], 0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140035e26
jae	0x140035e26
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
mov	ebp, 0xffffffff
cmp	ebp, -1
sete	dil
test	rbx, rbx
setne	sil
and	sil, dil
jne	0x140035ef0
jne	0x140035ef0
mov	esi, edi
cmp	dword ptr [rsp + 0x38], -1
sete	al
test	r13, r13
setne	r12b
and	r12b, al
jne	0x140035ea0
jne	0x140035ea0
cmp	sil, al
je	0x140035ee0
je	0x140035ee0
test	rbx, rbx
je	0x140035878
je	0x140035878
test	dil, dil
je	0x140035878
je	0x140035878
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400363e8
jae	0x1400363e8
movzx	esi, byte ptr [rax]
jmp	0x14003587a
jmp	0x14003587a
nop	word ptr [rax + rax]
mov	edi, 1
cmp	qword ptr [rsp + 0x48], 3
jne	0x140035f80
jne	0x140035f80
cmp	qword ptr [rsp + 0x60], 1
seta	al
and	eax, edi
mov	byte ptr [rsp + 0x40], al
cmp	byte ptr [rsp + 0x40], 0
je	0x1400368b4
je	0x1400368b4
cmp	byte ptr [rsp + 0xae], 0
je	0x140036220
je	0x140036220
mov	rax, qword ptr [r14 + 0x48]
mov	qword ptr [rsp + 0x38], rax
cmp	ebp, -1
mov	esi, 1
sete	r12b
mov	edi, r12d
test	rbx, rbx
je	0x1400359db
je	0x1400359db
test	r12b, r12b
jne	0x140035a41
jne	0x140035a41
cmp	dword ptr [rsp + 0x70], -1
sete	al
test	r13, r13
je	0x1400359f0
je	0x1400359f0
test	al, al
jne	0x140035d20
jne	0x140035d20
xor	edi, eax
mov	rax, qword ptr [rsp + 0x60]
cmp	rsi, rax
jae	0x1400361e0
jae	0x1400361e0
test	dil, dil
je	0x1400361e0
je	0x1400361e0
test	rbx, rbx
je	0x140035a17
je	0x140035a17
test	r12b, r12b
jne	0x140035d50
jne	0x140035d50
mov	eax, ebp
mov	rcx, qword ptr [rsp + 0x38]
cmp	byte ptr [rcx + rsi], al
jne	0x140035c70
jne	0x140035c70
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140036090
jae	0x140036090
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
add	rsi, 1
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x140036630
jae	0x140036630
movzx	r12d, byte ptr [rsp + 0x40]
mov	ebp, 0xffffffff
xor	edi, edi
jmp	0x1400359db
jmp	0x1400359db
nop	dword ptr [rax]
cmp	ebp, -1
sete	r12b
test	rbx, rbx
setne	sil
and	sil, r12b
jne	0x140036505
jne	0x140036505
mov	esi, r12d
cmp	dword ptr [rsp + 0x38], -1
sete	al
test	r13, r13
setne	dil
and	dil, al
jne	0x14003651a
jne	0x14003651a
xor	edi, edi
cmp	sil, al
je	0x140035985
je	0x140035985
test	rbx, rbx
je	0x140035ab3
je	0x140035ab3
test	r12b, r12b
jne	0x1400366dd
jne	0x1400366dd
mov	eax, ebp
mov	rcx, qword ptr [rsp + 0x78]
movzx	eax, al
xor	edi, edi
mov	rdx, qword ptr [rcx + 0x30]
test	byte ptr [rdx + rax*2], 0x20
je	0x140035985
je	0x140035985
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140036807
jae	0x140036807
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
mov	ebp, 0xffffffff
mov	edi, 1
jmp	0x140035985
jmp	0x140035985
nop	word ptr [rax + rax]
cmp	qword ptr [r14 + 0x40], 0
jne	0x140036230
jne	0x140036230
cmp	qword ptr [r14 + 0x50], 0
jne	0x140036290
jne	0x140036290
movzx	edi, byte ptr [rsp + 0xaf]
xor	edi, 1
mov	rcx, qword ptr [rsp + 0x48]
mov	eax, ecx
add	eax, 1
cmp	eax, 3
setle	al
add	rcx, 1
mov	qword ptr [rsp + 0x48], rcx
test	al, dil
jne	0x140035847
jne	0x140035847
jmp	0x140035991
jmp	0x140035991
mov	rax, qword ptr [rsp + 0x170]
test	byte ptr [rax + 0x19], 2
jne	0x1400360c0
jne	0x1400360c0
cmp	qword ptr [rsp + 0x60], 1
ja	0x1400360c0
ja	0x1400360c0
mov	rax, qword ptr [rsp + 0x48]
test	eax, eax
je	0x1400360c0
je	0x1400360c0
cmp	rax, 1
je	0x14003609e
je	0x14003609e
cmp	qword ptr [rsp + 0x48], 2
je	0x140036333
je	0x140036333
cmp	qword ptr [rsp + 0xe8], 1
ja	0x1400362e8
ja	0x1400362e8
cmp	byte ptr [rsp + 0xae], 0
je	0x140035bc7
je	0x140035bc7
mov	rax, qword ptr [rsp + 0xe0]
cmp	byte ptr [rax], 0x30
je	0x140035bc7
je	0x140035bc7
mov	dword ptr [rsp + 0x20], 0x2d
mov	rcx, qword ptr [rsp + 0x90]
xor	r8d, r8d
xor	edx, edx
mov	r9d, 1
call	0x14009d910
call	0x14009d910
mov	rsi, qword ptr [rsp + 0xc8]
test	rsi, rsi
je	0x140035c51
je	0x140035c51
movzx	r12d, byte ptr [rsp + 0xa8]
mov	rax, qword ptr [rsp + 0xc0]
lea	rdi, [rsi + 1]
mov	rcx, qword ptr [rsp + 0x68]
cmp	byte ptr [rsp + 0x8b], 0
cmove	r12d, r15d
cmp	rax, rcx
je	0x1400367cb
je	0x1400367cb
mov	rdx, qword ptr [rsp + 0xd0]
cmp	rdx, rdi
jb	0x14003666f
jb	0x14003666f
mov	byte ptr [rax + rsi], r12b
mov	rax, qword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0xc8], rdi
mov	r8, qword ptr [rsp + 0x98]
mov	byte ptr [rax + rsi + 1], 0
mov	rdx, qword ptr [r14 + 0x18]
mov	rcx, qword ptr [r14 + 0x10]
call	0x1400ae850
call	0x1400ae850
test	al, al
jne	0x140035c51
jne	0x140035c51
mov	rax, qword ptr [rsp + 0x178]
or	dword ptr [rax], 4
cmp	ebp, -1
sete	r12b
cmp	byte ptr [rsp + 0x8b], 0
je	0x140036360
je	0x140036360
cmp	dword ptr [r14 + 0x58], r15d
je	0x140036360
je	0x140036360
mov	rax, qword ptr [rsp + 0x178]
or	dword ptr [rax], 4
test	rbx, rbx
setne	sil
and	sil, r12b
jne	0x140036388
jne	0x140036388
cmp	dword ptr [rsp + 0x70], -1
sete	al
test	r13, r13
je	0x140035ca0
je	0x140035ca0
test	al, al
jne	0x1400364e0
jne	0x1400364e0
cmp	al, r12b
jne	0x140035cb0
jne	0x140035cb0
mov	rax, qword ptr [rsp + 0x178]
or	dword ptr [rax], 2
mov	eax, ebp
mov	rcx, qword ptr [rsp + 0xe0]
movabs	rbp, 0xffffffff00000000
and	rbp, qword ptr [rsp + 0xa0]
or	rbp, rax
mov	rax, qword ptr [rsp + 0x150]
mov	qword ptr [rax], rbx
mov	qword ptr [rax + 8], rbp
mov	rax, qword ptr [rsp + 0x50]
cmp	rcx, rax
je	0x140035ced
je	0x140035ced
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, qword ptr [rsp + 0xc0]
mov	rax, qword ptr [rsp + 0x68]
cmp	rcx, rax
je	0x140035d04
je	0x140035d04
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0x150]
add	rsp, 0x108
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
mov	rax, qword ptr [r13 + 0x18]
cmp	qword ptr [r13 + 0x10], rax
jb	0x1400359f2
jb	0x1400359f2
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x1400359f2
jne	0x1400359f2
xor	edi, 1
xor	r13d, r13d
jmp	0x1400359f2
jmp	0x1400359f2
nop	dword ptr [rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140036658
jae	0x140036658
mov	rdi, qword ptr [rsp + 0x38]
movzx	edi, byte ptr [rdi + rsi]
cmp	byte ptr [rax], dil
je	0x140035a35
je	0x140035a35
jmp	0x140035c70
jmp	0x140035c70
nop	dword ptr [rax]
cmp	qword ptr [r14 + 0x50], 0
setne	byte ptr [rsp + 0xaf]
jmp	0x14003575e
jmp	0x14003575e
nop	word ptr [rax + rax]
cmp	byte ptr [r14 + 0x21], sil
je	0x140035e68
je	0x140035e68
movzx	edi, byte ptr [r14 + 0x20]
test	dil, dil
je	0x140035ee0
je	0x140035ee0
cmp	byte ptr [r14 + 0x22], sil
jne	0x140035f50
jne	0x140035f50
cmp	byte ptr [rsp + 0x8b], 0
jne	0x140035f48
jne	0x140035f48
test	r15d, r15d
je	0x14003654d
je	0x14003654d
mov	rsi, qword ptr [rsp + 0xc8]
mov	rax, qword ptr [rsp + 0xc0]
mov	rcx, qword ptr [rsp + 0x68]
lea	rdi, [rsi + 1]
cmp	rax, rcx
je	0x140035f70
je	0x140035f70
mov	rdx, qword ptr [rsp + 0xd0]
cmp	rdx, rdi
jb	0x140035f08
jb	0x140035f08
mov	byte ptr [rax + rsi], r15b
mov	rax, qword ptr [rsp + 0xc0]
xor	r15d, r15d
mov	qword ptr [rsp + 0xc8], rdi
mov	byte ptr [rax + rsi + 1], 0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jb	0x14003590b
jb	0x14003590b
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140035913
jmp	0x140035913
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x20], 1
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, qword ptr [rsp + 0x90]
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0xe0]
jmp	0x1400358e0
jmp	0x1400358e0
nop	dword ptr [rax]
cmp	byte ptr [rsp + 0x8b], 0
jne	0x140035f48
jne	0x140035f48
mov	eax, dword ptr [r14 + 0x58]
test	eax, eax
jle	0x140035ee0
jle	0x140035ee0
mov	dword ptr [rsp + 0xa8], r15d
xor	r15d, r15d
mov	byte ptr [rsp + 0x8b], 1
jmp	0x1400358fd
jmp	0x1400358fd
nop	word ptr cs:[rax + rax]
mov	rdx, qword ptr [r13 + 0x18]
xor	eax, eax
cmp	qword ptr [r13 + 0x10], rdx
jb	0x140035949
jb	0x140035949
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
mov	edx, 0
cmove	eax, r12d
cmove	r13, rdx
cmp	sil, al
jne	0x140035952
jne	0x140035952
nop	dword ptr [rax + rax]
mov	edi, 1
jmp	0x140035f50
jmp	0x140035f50
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x1400363c0
jae	0x1400363c0
xor	esi, esi
jmp	0x140035931
jmp	0x140035931
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x20], 1
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, qword ptr [rsp + 0x98]
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0xc0]
jmp	0x140035dfc
jmp	0x140035dfc
nop	dword ptr [rax]
mov	edx, 0xf
jmp	0x1400358d7
jmp	0x1400358d7
nop	word ptr [rax + rax]
movzx	edi, byte ptr [rsp + 0x8b]
cmp	qword ptr [rsp + 0xe8], 0
jne	0x140035b19
jne	0x140035b19
cmp	ebp, -1
sete	r12b
jmp	0x140035c70
jmp	0x140035c70
nop	dword ptr [rax + rax]
mov	edx, 0xf
jmp	0x140035df3
jmp	0x140035df3
nop	word ptr [rax + rax]
cmp	ebp, -1
sete	r12b
test	rbx, rbx
je	0x140035f91
je	0x140035f91
test	r12b, r12b
jne	0x140035ff7
jne	0x140035ff7
mov	byte ptr [rsp + 0x8c], r12b
cmp	dword ptr [rsp + 0x38], -1
sete	al
test	r13, r13
setne	sil
and	sil, al
jne	0x140036048
jne	0x140036048
cmp	al, r12b
je	0x140035b19
je	0x140035b19
test	rbx, rbx
je	0x140035fc9
je	0x140035fc9
cmp	byte ptr [rsp + 0x8c], 0
jne	0x140036020
jne	0x140036020
mov	eax, ebp
mov	rdx, qword ptr [rsp + 0x78]
movzx	eax, al
mov	rdx, qword ptr [rdx + 0x30]
test	byte ptr [rdx + rax*2], 0x20
je	0x140035b19
je	0x140035b19
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140036080
jae	0x140036080
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x140036554
jae	0x140036554
mov	byte ptr [rsp + 0x8c], 1
mov	ebp, 0xffffffff
xor	r12d, r12d
jmp	0x140035f99
jmp	0x140035f99
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140036619
jae	0x140036619
mov	rdx, qword ptr [rsp + 0x78]
movzx	ecx, byte ptr [rax]
mov	rdx, qword ptr [rdx + 0x30]
test	byte ptr [rdx + rcx*2], 0x20
jne	0x140035fef
jne	0x140035fef
jmp	0x140035b19
jmp	0x140035b19
nop	dword ptr [rax]
mov	rdx, qword ptr [r13 + 0x18]
xor	eax, eax
cmp	qword ptr [r13 + 0x10], rdx
jb	0x140035fb1
jb	0x140035fb1
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	edx, 0
mov	eax, 0
cmove	eax, esi
cmove	r13, rdx
jmp	0x140035fb1
jmp	0x140035fb1
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140035ff7
jmp	0x140035ff7
nop	
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140035a3d
jmp	0x140035a3d
cmp	byte ptr [rsp + 0xaf], 0
jne	0x1400360c0
jne	0x1400360c0
cmp	byte ptr [rsp + 0xbc], 3
je	0x1400360c0
je	0x1400360c0
cmp	byte ptr [rsp + 0xbe], 1
jne	0x140036215
jne	0x140036215
cmp	ebp, -1
mov	r12, qword ptr [r14 + 0x30]
sete	al
mov	edi, eax
test	rbx, rbx
je	0x1400360d9
je	0x1400360d9
test	al, al
jne	0x140036747
jne	0x140036747
mov	byte ptr [rsp + 0x8c], al
xor	esi, esi
cmp	dword ptr [rsp + 0x38], -1
sete	al
test	r13, r13
je	0x1400360f3
je	0x1400360f3
test	al, al
jne	0x140036160
jne	0x140036160
xor	edi, eax
cmp	rsi, r12
jae	0x140036210
jae	0x140036210
test	dil, dil
je	0x140036210
je	0x140036210
test	rbx, rbx
je	0x140036116
je	0x140036116
cmp	byte ptr [rsp + 0x8c], 0
jne	0x140036190
jne	0x140036190
mov	eax, ebp
mov	rdx, qword ptr [r14 + 0x28]
cmp	byte ptr [rdx + rsi], al
jne	0x1400361b0
jne	0x1400361b0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140036200
jae	0x140036200
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
add	rsi, 1
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x14003669b
jae	0x14003669b
mov	byte ptr [rsp + 0x8c], 1
mov	ebp, 0xffffffff
xor	edi, edi
jmp	0x1400360e2
jmp	0x1400360e2
nop	
mov	rax, qword ptr [r13 + 0x18]
cmp	qword ptr [r13 + 0x10], rax
jb	0x1400360f5
jb	0x1400360f5
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x1400360f5
jne	0x1400360f5
xor	edi, 1
xor	r13d, r13d
jmp	0x1400360f5
jmp	0x1400360f5
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14003674e
jae	0x14003674e
mov	rdx, qword ptr [r14 + 0x28]
movzx	ecx, byte ptr [rdx + rsi]
cmp	byte ptr [rax], cl
je	0x140036133
je	0x140036133
nop	word ptr [rax + rax]
test	rsi, rsi
jne	0x140035f5f
jne	0x140035f5f
mov	rax, qword ptr [rsp + 0x170]
mov	eax, dword ptr [rax + 0x18]
mov	edi, eax
mov	dword ptr [rsp + 0x8c], eax
shr	edi, 9
xor	edi, 1
and	edi, 1
jmp	0x140035b19
jmp	0x140035b19
nop	dword ptr [rax + rax]
cmp	qword ptr [rsp + 0x60], rsi
jne	0x140035c70
jne	0x140035c70
cmp	qword ptr [rsp + 0xe8], 1
jbe	0x140035b90
jbe	0x140035b90
jmp	0x1400362e8
jmp	0x1400362e8
nop	
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x14003613b
jmp	0x14003613b
nop	
cmp	r12, rsi
jne	0x1400361b0
jne	0x1400361b0
mov	edi, 1
jmp	0x140035b19
jmp	0x140035b19
nop	
mov	rax, qword ptr [r14 + 0x38]
mov	qword ptr [rsp + 0x38], rax
jmp	0x1400359c2
jmp	0x1400359c2
nop	
cmp	ebp, -1
sete	r12b
test	rbx, rbx
setne	al
and	al, r12b
mov	esi, eax
jne	0x1400366c8
jne	0x1400366c8
mov	esi, r12d
cmp	dword ptr [rsp + 0x38], -1
sete	al
test	r13, r13
setne	dl
and	dl, al
mov	edi, edx
jne	0x140036765
jne	0x140036765
cmp	al, sil
jne	0x140036580
jne	0x140036580
cmp	qword ptr [r14 + 0x50], 0
jne	0x140036290
jne	0x140036290
cmp	qword ptr [r14 + 0x40], 0
je	0x140035b0e
je	0x140035b0e
mov	byte ptr [rsp + 0xae], 1
mov	edi, 1
jmp	0x140035b19
jmp	0x140035b19
cmp	ebp, -1
sete	r12b
test	rbx, rbx
setne	al
and	al, r12b
mov	esi, eax
jne	0x140036717
jne	0x140036717
mov	esi, r12d
cmp	dword ptr [rsp + 0x38], -1
sete	al
test	r13, r13
setne	dl
mov	edi, edx
and	dil, al
jne	0x140036798
jne	0x140036798
cmp	al, sil
jne	0x1400365c6
jne	0x1400365c6
cmp	qword ptr [r14 + 0x40], 0
je	0x140035b0e
je	0x140035b0e
cmp	qword ptr [r14 + 0x50], 0
jne	0x140035b0e
jne	0x140035b0e
jmp	0x14003627e
jmp	0x14003627e
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x90]
xor	r8d, r8d
mov	edx, 0x30
call	0x1400261c0
call	0x1400261c0
test	rax, rax
je	0x140035b90
je	0x140035b90
mov	r8, qword ptr [rsp + 0xe8]
cmp	rax, -1
je	0x14003672c
je	0x14003672c
cmp	rax, r8
mov	rcx, qword ptr [rsp + 0x90]
cmovbe	r8, rax
xor	edx, edx
call	0x14009f890
call	0x14009f890
jmp	0x140035b90
jmp	0x140035b90
movzx	eax, byte ptr [rsp + 0xbf]
cmp	al, 4
je	0x1400360c0
je	0x1400360c0
cmp	al, 3
jne	0x140036215
jne	0x140036215
cmp	byte ptr [rsp + 0xaf], 0
je	0x140036215
je	0x140036215
jmp	0x1400360c0
jmp	0x1400360c0
nop	
mov	rdx, qword ptr [rsp + 0x90]
mov	rcx, qword ptr [rsp + 0x180]
call	0x14009dc50
call	0x14009dc50
test	rbx, rbx
setne	sil
and	sil, r12b
je	0x140035c8b
je	0x140035c8b
nop	dword ptr [rax]
mov	rax, qword ptr [rbx + 0x18]
xor	r12d, r12d
cmp	qword ptr [rbx + 0x10], rax
jb	0x140035c8b
jb	0x140035c8b
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmove	r12d, esi
cmove	rbx, rax
jmp	0x140035c8b
jmp	0x140035c8b
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	esi, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x140035931
jmp	0x140035931
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	edx, 0xffffffff
cmovne	edx, eax
mov	eax, 0
cmove	rbx, rax
mov	esi, edx
jmp	0x14003587a
jmp	0x14003587a
nop	dword ptr [rax]
mov	ecx, 0x70
call	0x1400b2c30
call	0x1400b2c30
mov	r12, rax
mov	dword ptr [rax + 8], 0
xor	edx, edx
mov	rax, qword ptr [rip + 0x88b93]
mov	word ptr [r12 + 0x21], dx
mov	rcx, r12
add	rax, 0x10
mov	byte ptr [r12 + 0x20], 0
mov	qword ptr [r12], rax
mov	rax, qword ptr [rsp + 0x170]
mov	qword ptr [r12 + 0x10], 0
mov	qword ptr [r12 + 0x18], 0
lea	rdx, [rax + 0xd0]
mov	qword ptr [r12 + 0x28], 0
mov	qword ptr [r12 + 0x30], 0
mov	qword ptr [r12 + 0x38], 0
mov	qword ptr [r12 + 0x40], 0
mov	qword ptr [r12 + 0x48], 0
mov	qword ptr [r12 + 0x50], 0
mov	dword ptr [r12 + 0x58], 0
mov	qword ptr [r12 + 0x5c], 0
mov	byte ptr [r12 + 0x6f], 0
call	0x1400969b0
call	0x1400969b0
mov	rax, qword ptr [rsp + 0x170]
mov	r8, rsi
mov	rdx, r12
mov	rcx, qword ptr [rax + 0xd0]
call	0x140099d30
call	0x140099d30
mov	r14, qword ptr [rdi]
jmp	0x140035742
jmp	0x140035742
nop	word ptr [rax + rax]
mov	rdx, qword ptr [r13 + 0x18]
xor	eax, eax
cmp	qword ptr [r13 + 0x10], rdx
jb	0x140035ca0
jb	0x140035ca0
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jmp	0x140035ca0
jmp	0x140035ca0
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x1400367e5
jae	0x1400367e5
xor	esi, esi
jmp	0x140035a82
jmp	0x140035a82
mov	rcx, qword ptr [r13 + 0x18]
xor	eax, eax
cmp	qword ptr [r13 + 0x10], rcx
jb	0x140035a9a
jb	0x140035a9a
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	edx, 0
mov	eax, 0
cmove	eax, edi
cmove	r13, rdx
jmp	0x140035a9a
jmp	0x140035a9a
xor	edi, edi
jmp	0x140035f50
jmp	0x140035f50
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x140036005
jne	0x140036005
mov	byte ptr [rsp + 0x8c], 1
mov	r12d, 1
xor	ebx, ebx
jmp	0x140035f99
jmp	0x140035f99
nop	dword ptr [rax]
test	rbx, rbx
je	0x14003659d
je	0x14003659d
test	r12b, r12b
je	0x14003659d
je	0x14003659d
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140036892
jae	0x140036892
movzx	eax, byte ptr [rax]
jmp	0x14003659f
jmp	0x14003659f
mov	eax, ebp
mov	rdx, qword ptr [r14 + 0x38]
cmp	byte ptr [rdx], al
jne	0x14003626c
jne	0x14003626c
mov	rax, qword ptr [r14 + 0x40]
mov	rcx, rbx
mov	qword ptr [rsp + 0x60], rax
call	0x1400919e0
call	0x1400919e0
mov	ebp, 0xffffffff
jmp	0x140036215
jmp	0x140036215
test	rbx, rbx
je	0x1400365e3
je	0x1400365e3
test	r12b, r12b
je	0x1400365e3
je	0x1400365e3
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140036870
jae	0x140036870
movzx	eax, byte ptr [rax]
jmp	0x1400365e5
jmp	0x1400365e5
mov	eax, ebp
mov	rdx, qword ptr [r14 + 0x48]
cmp	byte ptr [rdx], al
jne	0x1400362cd
jne	0x1400362cd
mov	rax, qword ptr [r14 + 0x50]
mov	rcx, rbx
mov	qword ptr [rsp + 0x60], rax
call	0x1400919e0
call	0x1400919e0
mov	byte ptr [rsp + 0xae], 1
mov	ebp, 0xffffffff
mov	edi, 1
jmp	0x140035b19
jmp	0x140035b19
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
xor	edx, edx
cmp	eax, -1
cmove	rbx, rdx
jmp	0x140035fcb
jmp	0x140035fcb
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x140035a4f
jne	0x140035a4f
movzx	edi, byte ptr [rsp + 0x40]
xor	ebx, ebx
mov	r12d, edi
jmp	0x1400359db
jmp	0x1400359db
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
xor	edx, edx
cmp	eax, -1
cmove	rbx, rdx
jmp	0x140035a19
jmp	0x140035a19
mov	qword ptr [rsp + 0x20], 1
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, qword ptr [rsp + 0x98]
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0xc0]
jmp	0x140035c14
jmp	0x140035c14
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x14003614d
jne	0x14003614d
mov	byte ptr [rsp + 0x8c], 1
mov	edi, 1
xor	ebx, ebx
jmp	0x1400360e2
jmp	0x1400360e2
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x140036815
jae	0x140036815
xor	esi, esi
jmp	0x14003624b
jmp	0x14003624b
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140036837
jae	0x140036837
mov	rdx, qword ptr [rsp + 0x78]
movzx	ecx, byte ptr [rax]
mov	rdx, qword ptr [rdx + 0x30]
test	byte ptr [rdx + rcx*2], 0x20
jne	0x140035adb
jne	0x140035adb
cmp	qword ptr [rsp + 0x48], 3
jne	0x140035ff7
jne	0x140035ff7
mov	ebp, 0xffffffff
jmp	0x140035991
jmp	0x140035991
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x14003684e
jae	0x14003684e
xor	esi, esi
jmp	0x1400362ab
jmp	0x1400362ab
lea	rax, [r8 - 1]
test	r8, r8
je	0x1400367d5
je	0x1400367d5
test	rax, rax
je	0x140035b90
je	0x140035b90
jmp	0x140036318
jmp	0x140036318
xor	esi, esi
jmp	0x14003613f
jmp	0x14003613f
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
xor	edx, edx
cmp	eax, -1
cmove	rbx, rdx
jmp	0x140036118
jmp	0x140036118
mov	rdx, qword ptr [r13 + 0x18]
xor	eax, eax
cmp	qword ptr [r13 + 0x10], rdx
jb	0x140036263
jb	0x140036263
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	edx, 0
mov	eax, 0
cmove	eax, edi
cmove	r13, rdx
jmp	0x140036263
jmp	0x140036263
mov	rdx, qword ptr [r13 + 0x18]
xor	eax, eax
cmp	qword ptr [r13 + 0x10], rdx
jb	0x1400362c4
jb	0x1400362c4
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	edx, 0
mov	eax, 0
cmove	eax, edi
cmove	r13, rdx
jmp	0x1400362c4
jmp	0x1400362c4
mov	edx, 0xf
jmp	0x140035c0b
jmp	0x140035c0b
mov	rax, qword ptr [rsp + 0xe0]
mov	byte ptr [rax], 0
jmp	0x140035b90
jmp	0x140035b90
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	esi, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x140035a82
jmp	0x140035a82
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140035ae3
jmp	0x140035ae3
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	esi, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x14003624b
jmp	0x14003624b
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
xor	edx, edx
cmp	eax, -1
cmove	rbx, rdx
jmp	0x140035ab5
jmp	0x140035ab5
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	esi, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x1400362ab
jmp	0x1400362ab
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	edx, 0xffffffff
cmove	eax, edx
mov	edx, 0
cmove	rbx, rdx
jmp	0x1400365e5
jmp	0x1400365e5
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	edx, 0xffffffff
cmove	eax, edx
mov	edx, 0
cmove	rbx, rdx
jmp	0x14003659f
jmp	0x14003659f
test	dil, dil
je	0x140035f5f
je	0x140035f5f
jmp	0x140035b81
jmp	0x140035b81
call	0x1400b3a30
call	0x1400b3a30
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x1400368d9
jmp	0x1400368d9
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x14003690d
jmp	0x14003690d
mov	rcx, qword ptr [rsp + 0x90]
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, qword ptr [rsp + 0x98]
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa8]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x38], rcx
mov	rcx, qword ptr [rsp + 0xa0]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
mov	qword ptr [rsp + 0x28], rcx
movzx	ecx, byte ptr [rsp + 0x90]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa8]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x38], rcx
mov	rcx, qword ptr [rsp + 0xa0]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
mov	qword ptr [rsp + 0x28], rcx
movzx	ecx, byte ptr [rsp + 0x90]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xb8
movups	xmmword ptr [rsp + 0xa0], xmm6
mov	rbp, qword ptr [rsp + 0x128]
mov	rdi, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
movdqu	xmm6, xmmword ptr [r9]
mov	r12d, dword ptr [rsp + 0x120]
mov	rsi, rcx
mov	rcx, qword ptr [rip + 0x87e5f]
mov	qword ptr [rsp + 0x108], rdx
call	0x140022a70
call	0x140022a70
mov	rcx, rax
mov	rax, qword ptr [rbp + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r13, qword ptr [rax + rcx*8]
test	r13, r13
je	0x140036c98
je	0x140036c98
lea	r14, [rsp + 0x90]
test	r12b, r12b
mov	qword ptr [rsp + 0x88], 0
mov	rdx, qword ptr [rsp + 0x108]
mov	qword ptr [rsp + 0x80], r14
lea	r15, [rsp + 0x80]
mov	byte ptr [rsp + 0x90], 0
jne	0x140036c08
jne	0x140036c08
mov	qword ptr [rsp + 0x30], r15
lea	rcx, [rsp + 0x70]
lea	r9, [rsp + 0x50]
mov	rax, qword ptr [rsp + 0x130]
mov	qword ptr [rsp + 0x20], rbp
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x60], rdi
mov	qword ptr [rsp + 0x68], rbx
movups	xmmword ptr [rsp + 0x50], xmm6
call	0x140034410
call	0x140034410
mov	rax, qword ptr [rsp + 0x70]
mov	rdx, qword ptr [rsp + 0x78]
mov	r12, qword ptr [rsp + 0x88]
mov	qword ptr [rsp + 0x78], rdx
mov	rdi, rax
movabs	rdx, 0xffffffff00000000
mov	qword ptr [rsp + 0x70], rax
mov	eax, dword ptr [rsp + 0x78]
and	rbx, rdx
or	rbx, rax
test	r12, r12
je	0x140036c68
je	0x140036c68
mov	rcx, qword ptr [rsp + 0x138]
xor	r8d, r8d
mov	rdx, r12
call	0x14009ede0
call	0x14009ede0
mov	rax, qword ptr [rsp + 0x138]
mov	rbp, qword ptr [rsp + 0x80]
mov	rax, qword ptr [rax]
mov	qword ptr [rsp + 0x48], rax
lea	rax, [rbp + r12]
mov	qword ptr [rsp + 0x40], rax
movzx	eax, byte ptr [r13 + 0x38]
cmp	al, 1
je	0x140036c88
je	0x140036c88
test	al, al
je	0x140036c78
je	0x140036c78
mov	rax, qword ptr [r13]
lea	rdx, [rip - 0x14731]
mov	rax, qword ptr [rax + 0x38]
cmp	rax, rdx
jne	0x140036c50
jne	0x140036c50
cmp	qword ptr [rsp + 0x40], rbp
je	0x140036c68
je	0x140036c68
mov	rcx, qword ptr [rsp + 0x48]
mov	rdx, rbp
mov	r8, r12
call	0x140015998
call	0x140015998
mov	rbp, qword ptr [rsp + 0x80]
mov	qword ptr [rsi], rdi
mov	qword ptr [rsi + 8], rbx
cmp	rbp, r14
je	0x140036be6
je	0x140036be6
mov	rcx, rbp
call	0x1400b2be0
call	0x1400b2be0
nop	
movups	xmm6, xmmword ptr [rsp + 0xa0]
mov	rax, rsi
add	rsp, 0xb8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x30], r15
lea	rcx, [rsp + 0x70]
lea	r9, [rsp + 0x50]
mov	rax, qword ptr [rsp + 0x130]
mov	qword ptr [rsp + 0x20], rbp
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x60], rdi
mov	qword ptr [rsp + 0x68], rbx
movups	xmmword ptr [rsp + 0x50], xmm6
call	0x1400356a0
call	0x1400356a0
jmp	0x140036b10
jmp	0x140036b10
nop	word ptr [rax + rax]
mov	r9, qword ptr [rsp + 0x48]
mov	r8, qword ptr [rsp + 0x40]
mov	rdx, rbp
mov	rcx, r13
call	rax
call	rax
nop	word ptr [rax + rax]
mov	rbp, qword ptr [rsp + 0x80]
jmp	0x140036bd1
jmp	0x140036bd1
nop	dword ptr [rax]
mov	rcx, r13
call	0x140021cb0
call	0x140021cb0
jmp	0x140036b96
jmp	0x140036b96
nop	dword ptr [rax]
cmp	qword ptr [rsp + 0x40], rbp
jne	0x140036bb9
jne	0x140036bb9
jmp	0x140036bd1
jmp	0x140036bd1
call	0x1400b3a30
call	0x1400b3a30
mov	rbx, rax
mov	rcx, r15
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa0
mov	rsi, qword ptr [r8]
mov	r14, qword ptr [r8 + 8]
mov	rax, qword ptr [rsp + 0x108]
mov	r8, qword ptr [r9]
mov	rbp, qword ptr [rsp + 0x110]
mov	r9, qword ptr [r9 + 8]
cmp	byte ptr [rsp + 0x100], 0
lea	r13, [rsp + 0x80]
lea	r12, [rsp + 0x90]
mov	qword ptr [rsp + 0x40], r8
mov	rbx, rcx
mov	qword ptr [rsp + 0x48], r9
lea	rcx, [rsp + 0x60]
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x80], r12
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x88], 0
mov	byte ptr [rsp + 0x90], 0
mov	qword ptr [rsp + 0x50], rsi
mov	qword ptr [rsp + 0x58], r14
mov	qword ptr [rsp + 0x30], r13
mov	qword ptr [rsp + 0x28], rbp
mov	qword ptr [rsp + 0x20], rax
je	0x140036de8
je	0x140036de8
call	0x1400356a0
call	0x1400356a0
mov	rax, qword ptr [rsp + 0x60]
mov	rdx, qword ptr [rsp + 0x68]
movabs	rdi, 0xffffffff00000000
and	rdi, r14
mov	qword ptr [rsp + 0x60], rax
mov	rsi, rax
mov	qword ptr [rsp + 0x68], rdx
mov	eax, dword ptr [rsp + 0x68]
or	rdi, rax
call	0x14009baf0
call	0x14009baf0
mov	rcx, qword ptr [rsp + 0x80]
lea	r9, [rsp + 0x78]
mov	r8, rbp
mov	qword ptr [rsp + 0x78], rax
mov	rdx, qword ptr [rsp + 0x118]
call	0x1400ace20
call	0x1400ace20
mov	rcx, qword ptr [rsp + 0x80]
mov	qword ptr [rbx], rsi
mov	qword ptr [rbx + 8], rdi
cmp	rcx, r12
je	0x140036dce
je	0x140036dce
call	0x1400b2be0
call	0x1400b2be0
mov	rax, rbx
add	rsp, 0xa0
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax + rax]
call	0x140034410
call	0x140034410
jmp	0x140036d63
jmp	0x140036d63
mov	rbx, rax
mov	rcx, r13
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x108
mov	rax, qword ptr [r8 + 8]
mov	rsi, qword ptr [r9 + 8]
mov	rbx, qword ptr [r8]
mov	rbp, qword ptr [r9]
mov	edi, eax
mov	qword ptr [rsp + 0x150], rcx
mov	rcx, qword ptr [rip + 0x87a9e]
mov	qword ptr [rsp + 0x98], rax
mov	qword ptr [rsp + 0xa0], rsi
mov	word ptr [rsp + 0x3a], si
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x170]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
mov	qword ptr [rsp + 0x70], rax
test	rax, rax
je	0x14003809e
je	0x14003809e
lea	rcx, [rip + 0x80535]
call	0x140022a70
call	0x140022a70
mov	rsi, rax
mov	rax, qword ptr [rsp + 0x170]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	r12, [rax + rsi*8]
mov	rax, qword ptr [r12]
mov	qword ptr [rsp + 0x30], rax
test	rax, rax
je	0x140037c07
je	0x140037c07
mov	rax, qword ptr [rsp + 0x30]
lea	rsi, [rax + 0x64]
cmp	qword ptr [rax + 0x40], 0
mov	qword ptr [rsp + 0x58], rsi
jne	0x1400374ea
jne	0x1400374ea
mov	byte ptr [rsp + 0xaf], 0
lea	rax, [rsp + 0xc0]
mov	byte ptr [rsp + 0xd0], 0
mov	qword ptr [rsp + 0x90], rax
lea	rax, [rsp + 0xd0]
mov	qword ptr [rsp + 0x68], rax
mov	qword ptr [rsp + 0xc0], rax
mov	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rsp + 0xc8], 0
cmp	byte ptr [rax + 0x20], 0
je	0x140036f33
je	0x140036f33
mov	rcx, qword ptr [rsp + 0x90]
mov	edx, 0x20
call	0x14009f7e0
call	0x14009f7e0
lea	rax, [rsp + 0xf0]
lea	rcx, [rsp + 0xe0]
mov	edx, 0x20
mov	qword ptr [rsp + 0xe8], 0
mov	qword ptr [rsp + 0x88], rcx
mov	qword ptr [rsp + 0x50], rax
mov	qword ptr [rsp + 0xe0], rax
mov	byte ptr [rsp + 0xf0], 0
call	0x14009f7e0
call	0x14009f7e0
mov	rcx, qword ptr [rsp + 0x30]
mov	byte ptr [rsp + 0xad], 0
mov	qword ptr [rsp + 0x48], 0
lea	rax, [rcx + 0x66]
lea	rsi, [rcx + 0x7a]
mov	dword ptr [rsp + 0x3c], 0
mov	qword ptr [rsp + 0x40], rax
mov	eax, dword ptr [rcx + 0x60]
mov	dword ptr [rsp + 0xa8], 0
mov	dword ptr [rsp + 0xbc], eax
lea	rax, [rsp + 0xbc]
mov	qword ptr [rsp + 0x60], 0
mov	byte ptr [rsp + 0xae], 0
mov	qword ptr [rsp + 0x78], rax
mov	rax, qword ptr [rsp + 0x78]
mov	rcx, qword ptr [rsp + 0x48]
cmp	byte ptr [rax + rcx], 4
ja	0x140037a2d
ja	0x140037a2d
movzx	eax, byte ptr [rax + rcx]
lea	rcx, [rip + 0x82c6d]
movsxd	rax, dword ptr [rcx + rax*4]
add	rax, rcx
jmp	rax
jmp	rax
mov	r13d, 1
cmp	qword ptr [rsp + 0x48], 3
jne	0x140037786
jne	0x140037786
cmp	qword ptr [rsp + 0x60], 1
seta	al
and	eax, r13d
test	al, al
je	0x1400380a3
je	0x1400380a3
cmp	byte ptr [rsp + 0xae], 0
mov	rax, qword ptr [rsp + 0x30]
je	0x140037a46
je	0x140037a46
mov	r15, qword ptr [rax + 0x48]
mov	r14d, 1
nop	
cmp	di, -1
sete	r12b
test	rbx, rbx
setne	sil
and	sil, r12b
jne	0x140037709
jne	0x140037709
mov	esi, r12d
cmp	word ptr [rsp + 0x3a], -1
sete	al
test	rbp, rbp
setne	r13b
and	r13b, al
jne	0x140037734
jne	0x140037734
cmp	sil, al
je	0x140037764
je	0x140037764
mov	rax, qword ptr [rsp + 0x60]
cmp	r14, rax
jae	0x140037764
jae	0x140037764
test	rbx, rbx
je	0x140037099
je	0x140037099
test	r12b, r12b
jne	0x1400374ca
jne	0x1400374ca
mov	eax, edi
cmp	word ptr [r15 + r14*2], ax
jne	0x140037390
jne	0x140037390
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140037883
jae	0x140037883
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
add	r14, 1
mov	edi, 0xffffffff
jmp	0x140037040
jmp	0x140037040
mov	r15, qword ptr [rip + 0x876bf]
nop	dword ptr [rax]
cmp	di, -1
sete	r13b
test	rbx, rbx
setne	r12b
and	r12b, r13b
jne	0x140037670
jne	0x140037670
mov	r12d, r13d
cmp	word ptr [rsp + 0x3a], -1
sete	al
test	rbp, rbp
setne	r14b
and	r14b, al
jne	0x140037638
jne	0x140037638
cmp	r12b, al
je	0x140037668
je	0x140037668
test	rbx, rbx
je	0x140037123
je	0x140037123
test	r13b, r13b
jne	0x1400371d0
jne	0x1400371d0
mov	edx, edi
mov	rax, qword ptr [rsp + 0x40]
jmp	0x14003713d
jmp	0x14003713d
nop	dword ptr [rax]
add	rax, 2
cmp	rax, rsi
je	0x140037508
je	0x140037508
cmp	dx, word ptr [rax]
jne	0x140037130
jne	0x140037130
mov	rcx, qword ptr [rsp + 0x58]
mov	rdx, qword ptr [r15]
mov	rdi, qword ptr [rsp + 0xe8]
sub	rax, rcx
mov	rcx, qword ptr [rsp + 0x50]
sar	rax, 1
lea	r12, [rdi + 1]
movzx	r13d, byte ptr [rdx + rax]
mov	rax, qword ptr [rsp + 0xe0]
mov	rdx, qword ptr [rsp + 0xf0]
cmp	rax, rcx
je	0x1400376d0
je	0x1400376d0
cmp	rdx, r12
jb	0x1400375c8
jb	0x1400375c8
mov	byte ptr [rax + rdi], r13b
mov	rax, qword ptr [rsp + 0xe0]
add	dword ptr [rsp + 0x3c], 1
mov	qword ptr [rsp + 0xe8], r12
mov	byte ptr [rax + rdi + 1], 0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400375b3
jae	0x1400375b3
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
mov	edi, 0xffffffff
jmp	0x1400370d8
jmp	0x1400370d8
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140037bf7
jae	0x140037bf7
movzx	edx, word ptr [rax]
xor	eax, eax
cmp	dx, -1
cmove	rbx, rax
jmp	0x140037125
jmp	0x140037125
mov	rax, qword ptr [rsp + 0x30]
cmp	qword ptr [rax + 0x40], 0
jne	0x140037ab8
jne	0x140037ab8
mov	rax, qword ptr [rsp + 0x30]
cmp	qword ptr [rax + 0x50], 0
jne	0x140037a4f
jne	0x140037a4f
movzx	r13d, byte ptr [rsp + 0xaf]
xor	r13d, 1
mov	rcx, qword ptr [rsp + 0x48]
mov	eax, ecx
add	eax, 1
cmp	eax, 3
setle	al
add	rcx, 1
mov	qword ptr [rsp + 0x48], rcx
test	al, r13b
jne	0x140036fd4
jne	0x140036fd4
jmp	0x14003700e
jmp	0x14003700e
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x170]
test	byte ptr [rax + 0x19], 2
jne	0x1400378b3
jne	0x1400378b3
cmp	qword ptr [rsp + 0x60], 1
ja	0x1400378b3
ja	0x1400378b3
mov	rax, qword ptr [rsp + 0x48]
test	eax, eax
je	0x1400378b3
je	0x1400378b3
cmp	rax, 1
je	0x140037891
je	0x140037891
cmp	qword ptr [rsp + 0x48], 2
je	0x140037b76
je	0x140037b76
cmp	qword ptr [rsp + 0xe8], 1
ja	0x140037b2b
ja	0x140037b2b
cmp	byte ptr [rsp + 0xae], 0
je	0x1400372cf
je	0x1400372cf
mov	rax, qword ptr [rsp + 0xe0]
cmp	byte ptr [rax], 0x30
je	0x1400372cf
je	0x1400372cf
mov	dword ptr [rsp + 0x20], 0x2d
mov	rcx, qword ptr [rsp + 0x88]
xor	r8d, r8d
xor	edx, edx
mov	r9d, 1
call	0x14009d910
call	0x14009d910
mov	r13, qword ptr [rsp + 0xc8]
test	r13, r13
je	0x140037368
je	0x140037368
movzx	eax, byte ptr [rsp + 0x3c]
mov	rcx, qword ptr [rsp + 0x68]
lea	rsi, [r13 + 1]
movzx	r12d, byte ptr [rsp + 0xa8]
cmp	byte ptr [rsp + 0xad], 0
cmove	r12d, eax
mov	rax, qword ptr [rsp + 0xc0]
cmp	rax, rcx
je	0x140037f5e
je	0x140037f5e
mov	rdx, qword ptr [rsp + 0xd0]
cmp	rdx, rsi
jb	0x140037e92
jb	0x140037e92
mov	byte ptr [rax + r13], r12b
mov	rax, qword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0xc8], rsi
mov	r8, qword ptr [rsp + 0x90]
mov	byte ptr [rax + r13 + 1], 0
mov	rax, qword ptr [rsp + 0x30]
mov	rdx, qword ptr [rax + 0x18]
mov	rcx, qword ptr [rax + 0x10]
call	0x1400ae850
call	0x1400ae850
test	al, al
jne	0x140037368
jne	0x140037368
mov	rax, qword ptr [rsp + 0x178]
or	dword ptr [rax], 4
cmp	di, -1
sete	r12b
cmp	byte ptr [rsp + 0xad], 0
je	0x140037ba8
je	0x140037ba8
mov	rax, qword ptr [rsp + 0x30]
mov	esi, dword ptr [rsp + 0x3c]
cmp	dword ptr [rax + 0x58], esi
je	0x140037ba8
je	0x140037ba8
mov	rax, qword ptr [rsp + 0x178]
or	dword ptr [rax], 4
test	rbx, rbx
setne	sil
and	sil, r12b
jne	0x140037bcd
jne	0x140037bcd
cmp	word ptr [rsp + 0xa0], -1
sete	al
mov	edx, eax
test	rbp, rbp
je	0x1400373c6
je	0x1400373c6
test	al, al
jne	0x140037cf5
jne	0x140037cf5
cmp	dl, r12b
jne	0x1400373d6
jne	0x1400373d6
mov	rax, qword ptr [rsp + 0x178]
or	dword ptr [rax], 2
mov	rax, qword ptr [rsp + 0x98]
mov	rcx, qword ptr [rsp + 0xe0]
mov	ax, di
mov	rdi, qword ptr [rsp + 0x150]
mov	qword ptr [rdi + 8], rax
mov	rax, qword ptr [rsp + 0x50]
mov	qword ptr [rdi], rbx
cmp	rcx, rax
je	0x140037407
je	0x140037407
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, qword ptr [rsp + 0xc0]
mov	rax, qword ptr [rsp + 0x68]
cmp	rcx, rax
je	0x14003741e
je	0x14003741e
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0x150]
add	rsp, 0x108
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
cmp	di, -1
sete	r14b
test	rbx, rbx
setne	al
and	al, r14b
mov	r12d, eax
jne	0x140037d3e
jne	0x140037d3e
mov	r12d, r14d
cmp	word ptr [rsp + 0x3a], -1
sete	al
test	rbp, rbp
setne	dl
and	dl, al
mov	r13d, edx
jne	0x140037d12
jne	0x140037d12
xor	r13d, r13d
cmp	r12b, al
je	0x140037002
je	0x140037002
test	rbx, rbx
je	0x14003748b
je	0x14003748b
test	r14b, r14b
jne	0x140037fc0
jne	0x140037fc0
movzx	r8d, di
mov	rcx, qword ptr [rsp + 0x70]
mov	edx, 0x20
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	r13d, eax
test	al, al
je	0x140037002
je	0x140037002
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140037fec
jae	0x140037fec
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
mov	edi, 0xffffffff
jmp	0x140037002
jmp	0x140037002
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140037e84
jae	0x140037e84
movzx	eax, word ptr [rax]
xor	esi, esi
cmp	ax, -1
cmove	rbx, rsi
jmp	0x14003709b
jmp	0x14003709b
mov	rax, qword ptr [rsp + 0x30]
cmp	qword ptr [rax + 0x50], 0
setne	byte ptr [rsp + 0xaf]
jmp	0x140036edd
jmp	0x140036edd
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x30]
cmp	word ptr [rax + 0x22], dx
je	0x1400375f8
je	0x1400375f8
mov	rax, qword ptr [rsp + 0x30]
movzx	r13d, byte ptr [rax + 0x20]
test	r13b, r13b
je	0x140037668
je	0x140037668
cmp	word ptr [rax + 0x24], dx
jne	0x1400376e3
jne	0x1400376e3
cmp	byte ptr [rsp + 0xad], 0
jne	0x1400376da
jne	0x1400376da
mov	eax, dword ptr [rsp + 0x3c]
test	eax, eax
je	0x140037d6a
je	0x140037d6a
mov	rdi, qword ptr [rsp + 0xc8]
mov	r13d, eax
mov	rcx, qword ptr [rsp + 0x68]
mov	rax, qword ptr [rsp + 0xc0]
lea	r12, [rdi + 1]
cmp	rax, rcx
je	0x1400376ff
je	0x1400376ff
mov	rdx, qword ptr [rsp + 0xd0]
cmp	rdx, r12
jb	0x1400376a0
jb	0x1400376a0
mov	byte ptr [rax + rdi], r13b
mov	rax, qword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0xc8], r12
mov	dword ptr [rsp + 0x3c], 0
mov	byte ptr [rax + rdi + 1], 0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jb	0x1400371b4
jb	0x1400371b4
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x1400371bc
jmp	0x1400371bc
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x20], 1
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	rcx, qword ptr [rsp + 0x88]
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0xe0]
jmp	0x140037188
jmp	0x140037188
nop	dword ptr [rax]
cmp	byte ptr [rsp + 0xad], 0
jne	0x1400376da
jne	0x1400376da
mov	rax, qword ptr [rsp + 0x30]
mov	eax, dword ptr [rax + 0x58]
test	eax, eax
jle	0x140037668
jle	0x140037668
mov	eax, dword ptr [rsp + 0x3c]
mov	byte ptr [rsp + 0xad], 1
mov	dword ptr [rsp + 0x3c], 0
mov	dword ptr [rsp + 0xa8], eax
jmp	0x1400371a6
jmp	0x1400371a6
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140037cd9
jae	0x140037cd9
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
mov	ecx, 0
cmove	eax, r14d
cmove	rbp, rcx
cmp	r12b, al
jne	0x140037115
jne	0x140037115
mov	r13d, 1
jmp	0x1400376e3
jmp	0x1400376e3
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140037ccb
jae	0x140037ccb
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r12d, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x1400370f3
jmp	0x1400370f3
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x20], 1
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	rcx, qword ptr [rsp + 0x90]
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0xc0]
jmp	0x140037584
jmp	0x140037584
nop	dword ptr [rax]
mov	edx, 0xf
jmp	0x14003717f
jmp	0x14003717f
movzx	r13d, byte ptr [rsp + 0xad]
cmp	qword ptr [rsp + 0xe8], 0
jne	0x14003721d
jne	0x14003721d
cmp	di, -1
sete	r12b
jmp	0x140037390
jmp	0x140037390
mov	edx, 0xf
jmp	0x14003757b
jmp	0x14003757b
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140037e76
jae	0x140037e76
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	esi, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x14003705b
jmp	0x14003705b
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140037e67
jae	0x140037e67
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
mov	ecx, 0
cmove	eax, r13d
cmove	rbp, rcx
cmp	sil, al
jne	0x14003707d
jne	0x14003707d
mov	rax, qword ptr [rsp + 0x60]
cmp	r14, rax
jne	0x140037390
jne	0x140037390
cmp	qword ptr [rsp + 0xe8], 1
jbe	0x140037298
jbe	0x140037298
jmp	0x140037b2b
jmp	0x140037b2b
cmp	di, -1
sete	r14b
test	rbx, rbx
je	0x140037798
je	0x140037798
test	r14b, r14b
jne	0x1400377f9
jne	0x1400377f9
mov	r15d, r14d
cmp	word ptr [rsp + 0x3a], -1
sete	al
test	rbp, rbp
setne	r12b
and	r12b, al
jne	0x140037827
jne	0x140037827
cmp	r14b, al
je	0x14003721d
je	0x14003721d
test	rbx, rbx
je	0x1400377c7
je	0x1400377c7
test	r15b, r15b
jne	0x140037853
jne	0x140037853
movzx	r8d, di
mov	rcx, qword ptr [rsp + 0x70]
mov	edx, 0x20
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
test	al, al
je	0x14003721d
je	0x14003721d
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140037875
jae	0x140037875
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140037ddb
jae	0x140037ddb
movzx	edi, word ptr [rax]
mov	r15d, 1
cmp	di, -1
je	0x140037ce8
je	0x140037ce8
mov	edi, 0xffffffff
xor	r14d, r14d
jmp	0x14003779b
jmp	0x14003779b
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140037dfd
jae	0x140037dfd
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	edx, 0
mov	eax, 0
cmove	eax, r12d
cmove	rbp, rdx
jmp	0x1400377b0
jmp	0x1400377b0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140037deb
jae	0x140037deb
movzx	r8d, word ptr [rax]
xor	eax, eax
cmp	r8w, -1
cmove	rbx, rax
jmp	0x1400377cb
jmp	0x1400377cb
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x1400377f9
jmp	0x1400377f9
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x1400370bc
jmp	0x1400370bc
cmp	byte ptr [rsp + 0xaf], 0
jne	0x1400378b3
jne	0x1400378b3
cmp	byte ptr [rsp + 0xbc], 3
je	0x1400378b3
je	0x1400378b3
cmp	byte ptr [rsp + 0xbe], 1
jne	0x140037a2d
jne	0x140037a2d
mov	rax, qword ptr [rsp + 0x30]
xor	r15d, r15d
mov	rax, qword ptr [rax + 0x30]
mov	qword ptr [rsp + 0x80], rax
nop	word ptr [rax + rax]
cmp	di, -1
sete	r13b
test	rbx, rbx
setne	r12b
and	r12b, r13b
jne	0x1400379b8
jne	0x1400379b8
mov	r12d, r13d
cmp	word ptr [rsp + 0x3a], -1
sete	al
test	rbp, rbp
setne	r14b
and	r14b, al
jne	0x1400379e4
jne	0x1400379e4
mov	rcx, qword ptr [rsp + 0x80]
cmp	r15, rcx
jae	0x140037a1c
jae	0x140037a1c
cmp	r12b, al
je	0x140037a1c
je	0x140037a1c
test	rbx, rbx
je	0x140037928
je	0x140037928
test	r13b, r13b
jne	0x14003795e
jne	0x14003795e
mov	rcx, qword ptr [rsp + 0x30]
mov	eax, edi
mov	rdx, qword ptr [rcx + 0x28]
cmp	word ptr [rdx + r15*2], ax
jne	0x140037989
jne	0x140037989
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140037a38
jae	0x140037a38
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
add	r15, 1
mov	edi, 0xffffffff
jmp	0x1400378d0
jmp	0x1400378d0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140037f50
jae	0x140037f50
movzx	eax, word ptr [rax]
xor	ecx, ecx
cmp	ax, -1
cmove	rbx, rcx
mov	rcx, qword ptr [rsp + 0x30]
mov	rdx, qword ptr [rcx + 0x28]
cmp	word ptr [rdx + r15*2], ax
je	0x14003793a
je	0x14003793a
test	r15, r15
jne	0x1400376f2
jne	0x1400376f2
mov	rax, qword ptr [rsp + 0x170]
mov	eax, dword ptr [rax + 0x18]
mov	r13d, eax
mov	dword ptr [rsp + 0x80], eax
shr	r13d, 9
xor	r13d, 1
and	r13d, 1
jmp	0x14003721d
jmp	0x14003721d
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140037ecd
jae	0x140037ecd
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r12d, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x1400378eb
jmp	0x1400378eb
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140037ebe
jae	0x140037ebe
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	ecx, 0
mov	eax, 0
cmove	rbp, rcx
mov	rcx, qword ptr [rsp + 0x80]
cmove	eax, r14d
cmp	r15, rcx
jb	0x140037915
jb	0x140037915
mov	rax, qword ptr [rsp + 0x80]
cmp	r15, rax
jne	0x140037989
jne	0x140037989
mov	r13d, 1
jmp	0x14003721d
jmp	0x14003721d
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140037950
jmp	0x140037950
mov	r15, qword ptr [rax + 0x38]
jmp	0x140037039
jmp	0x140037039
cmp	di, -1
sete	r13b
test	rbx, rbx
setne	al
and	al, r13b
mov	r12d, eax
jne	0x140037edb
jne	0x140037edb
mov	r12d, r13d
cmp	word ptr [rsp + 0x3a], -1
sete	al
test	rbp, rbp
setne	dl
and	dl, al
mov	r14d, edx
jne	0x140037f68
jne	0x140037f68
cmp	r12b, al
jne	0x140037d72
jne	0x140037d72
mov	rax, qword ptr [rsp + 0x30]
cmp	qword ptr [rax + 0x40], 0
je	0x140037210
je	0x140037210
mov	rax, qword ptr [rsp + 0x30]
cmp	qword ptr [rax + 0x50], 0
jne	0x140037210
jne	0x140037210
jmp	0x140037b18
jmp	0x140037b18
nop	dword ptr [rax]
cmp	di, -1
sete	r13b
test	rbx, rbx
setne	al
and	al, r13b
mov	r12d, eax
jne	0x140037f07
jne	0x140037f07
mov	r12d, r13d
cmp	word ptr [rsp + 0x3a], -1
sete	al
test	rbp, rbp
setne	dl
and	dl, al
mov	r14d, edx
jne	0x140037f94
jne	0x140037f94
cmp	r12b, al
jne	0x140037e0c
jne	0x140037e0c
mov	rax, qword ptr [rsp + 0x30]
cmp	qword ptr [rax + 0x50], 0
jne	0x140037a4f
jne	0x140037a4f
mov	rax, qword ptr [rsp + 0x30]
cmp	qword ptr [rax + 0x40], 0
je	0x140037210
je	0x140037210
mov	byte ptr [rsp + 0xae], 1
mov	r13d, 1
jmp	0x14003721d
jmp	0x14003721d
mov	rcx, qword ptr [rsp + 0x88]
xor	r8d, r8d
mov	edx, 0x30
call	0x1400261c0
call	0x1400261c0
test	rax, rax
je	0x140037298
je	0x140037298
mov	r8, qword ptr [rsp + 0xe8]
cmp	rax, -1
je	0x140037f33
je	0x140037f33
cmp	rax, r8
mov	rcx, qword ptr [rsp + 0x88]
cmovbe	r8, rax
xor	edx, edx
call	0x14009f890
call	0x14009f890
jmp	0x140037298
jmp	0x140037298
movzx	eax, byte ptr [rsp + 0xbf]
cmp	al, 4
je	0x1400378b3
je	0x1400378b3
cmp	al, 3
jne	0x140037a2d
jne	0x140037a2d
cmp	byte ptr [rsp + 0xaf], 0
je	0x140037a2d
je	0x140037a2d
jmp	0x1400378b3
jmp	0x1400378b3
nop	dword ptr [rax]
mov	rdx, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x180]
call	0x14009dc50
call	0x14009dc50
test	rbx, rbx
setne	sil
and	sil, r12b
je	0x1400373ab
je	0x1400373ab
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140037ffa
jae	0x140037ffa
movzx	eax, word ptr [rax]
xor	r12d, r12d
cmp	ax, -1
mov	eax, 0
cmove	r12d, esi
cmove	rbx, rax
jmp	0x1400373ab
jmp	0x1400373ab
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, eax
jmp	0x1400371e1
jmp	0x1400371e1
mov	ecx, 0x80
call	0x1400b2c30
call	0x1400b2c30
mov	r13, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x873ae]
mov	qword ptr [r13 + 0x10], 0
mov	rcx, r13
add	rax, 0x10
mov	qword ptr [r13 + 0x18], 0
mov	qword ptr [r13], rax
mov	rax, qword ptr [rsp + 0x170]
mov	byte ptr [r13 + 0x20], 0
mov	dword ptr [r13 + 0x22], 0
lea	rdx, [rax + 0xd0]
mov	qword ptr [r13 + 0x28], 0
mov	qword ptr [r13 + 0x30], 0
mov	qword ptr [r13 + 0x38], 0
mov	qword ptr [r13 + 0x40], 0
mov	qword ptr [r13 + 0x48], 0
mov	qword ptr [r13 + 0x50], 0
mov	dword ptr [r13 + 0x58], 0
mov	qword ptr [r13 + 0x5c], 0
mov	byte ptr [r13 + 0x7a], 0
call	0x1400971b0
call	0x1400971b0
mov	rax, qword ptr [rsp + 0x170]
mov	r8, rsi
mov	rdx, r13
mov	rcx, qword ptr [rax + 0xd0]
call	0x140099d30
call	0x140099d30
mov	rax, qword ptr [r12]
mov	qword ptr [rsp + 0x30], rax
jmp	0x140036ebc
jmp	0x140036ebc
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140037681
jmp	0x140037681
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140037649
jmp	0x140037649
mov	r14d, 1
xor	ebx, ebx
jmp	0x14003779b
jmp	0x14003779b
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140038008
jae	0x140038008
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	dl
jmp	0x1400373c6
jmp	0x1400373c6
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140038017
jae	0x140038017
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	edx, 0
mov	eax, 0
cmove	eax, r13d
cmove	rbp, rdx
jmp	0x140037471
jmp	0x140037471
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140037fde
jae	0x140037fde
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r12d, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x140037457
jmp	0x140037457
xor	r13d, r13d
jmp	0x1400376e3
jmp	0x1400376e3
test	rbx, rbx
je	0x140037d99
je	0x140037d99
test	r13b, r13b
je	0x140037d99
je	0x140037d99
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140038044
jae	0x140038044
movzx	eax, word ptr [rax]
xor	edx, edx
cmp	ax, -1
cmove	rbx, rdx
jmp	0x140037d9b
jmp	0x140037d9b
mov	eax, edi
mov	rcx, qword ptr [rsp + 0x30]
mov	rdx, qword ptr [rcx + 0x48]
cmp	word ptr [rdx], ax
jne	0x140037a8f
jne	0x140037a8f
mov	rax, qword ptr [rsp + 0x30]
mov	rcx, rbx
mov	rax, qword ptr [rax + 0x50]
mov	qword ptr [rsp + 0x60], rax
call	0x140092470
call	0x140092470
mov	byte ptr [rsp + 0xae], 1
mov	edi, 0xffffffff
mov	r13d, 1
jmp	0x14003721d
jmp	0x14003721d
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edi, eax
jmp	0x14003780a
jmp	0x14003780a
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, ax
jmp	0x140037865
jmp	0x140037865
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140037838
jmp	0x140037838
test	rbx, rbx
je	0x140037e33
je	0x140037e33
test	r13b, r13b
je	0x140037e33
je	0x140037e33
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14003806f
jae	0x14003806f
movzx	eax, word ptr [rax]
xor	edx, edx
cmp	ax, -1
cmove	rbx, rdx
jmp	0x140037e35
jmp	0x140037e35
mov	eax, edi
mov	rcx, qword ptr [rsp + 0x30]
mov	rdx, qword ptr [rcx + 0x38]
cmp	word ptr [rdx], ax
jne	0x140037af8
jne	0x140037af8
mov	rax, qword ptr [rsp + 0x30]
mov	rcx, rbx
mov	rax, qword ptr [rax + 0x40]
mov	qword ptr [rsp + 0x60], rax
call	0x140092470
call	0x140092470
mov	edi, 0xffffffff
jmp	0x140037a2d
jmp	0x140037a2d
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140037745
jmp	0x140037745
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14003771a
jmp	0x14003771a
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400374db
jmp	0x1400374db
mov	qword ptr [rsp + 0x20], 1
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, r13
mov	rcx, qword ptr [rsp + 0x90]
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0xc0]
jmp	0x140037325
jmp	0x140037325
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400379f5
jmp	0x1400379f5
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400379c9
jmp	0x1400379c9
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140038052
jae	0x140038052
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r12d, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x140037a6c
jmp	0x140037a6c
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140038090
jae	0x140038090
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r12d, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x140037ad5
jmp	0x140037ad5
lea	rax, [r8 - 1]
test	r8, r8
jne	0x14003807d
jne	0x14003807d
mov	rax, qword ptr [rsp + 0xe0]
mov	byte ptr [rax], 0
jmp	0x140037298
jmp	0x140037298
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14003796f
jmp	0x14003796f
mov	edx, 0xf
jmp	0x14003731c
jmp	0x14003731c
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140038060
jae	0x140038060
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	edx, 0
mov	eax, 0
cmove	eax, r14d
cmove	rbp, rdx
jmp	0x140037a86
jmp	0x140037a86
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140038026
jae	0x140038026
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	edx, 0
mov	eax, 0
cmove	eax, r14d
cmove	rbp, rdx
jmp	0x140037aef
jmp	0x140037aef
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140038035
jae	0x140038035
movzx	r8d, word ptr [rax]
xor	eax, eax
cmp	r8w, -1
cmove	rbx, rax
jmp	0x14003748f
jmp	0x14003748f
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140037d4f
jmp	0x140037d4f
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x1400374c0
jmp	0x1400374c0
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140037bde
jmp	0x140037bde
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140037d06
jmp	0x140037d06
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140037d23
jmp	0x140037d23
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140037fa5
jmp	0x140037fa5
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, ax
jmp	0x140037fce
jmp	0x140037fce
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140037d8d
jmp	0x140037d8d
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140037eec
jmp	0x140037eec
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140037f79
jmp	0x140037f79
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140037e27
jmp	0x140037e27
test	rax, rax
je	0x140037298
je	0x140037298
jmp	0x140037b5b
jmp	0x140037b5b
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140037f18
jmp	0x140037f18
call	0x1400b3a30
call	0x1400b3a30
test	r13b, r13b
jne	0x140037289
jne	0x140037289
jmp	0x1400376f2
jmp	0x1400376f2
mov	rbx, rax
jmp	0x1400380c6
jmp	0x1400380c6
mov	rcx, qword ptr [rsp + 0x88]
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, qword ptr [rsp + 0x90]
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x1400380ed
jmp	0x1400380ed
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x108
mov	rax, qword ptr [r8 + 8]
mov	rsi, qword ptr [r9 + 8]
mov	rbx, qword ptr [r8]
mov	rbp, qword ptr [r9]
mov	edi, eax
mov	qword ptr [rsp + 0x150], rcx
mov	rcx, qword ptr [rip + 0x8679e]
mov	qword ptr [rsp + 0x98], rax
mov	qword ptr [rsp + 0xa0], rsi
mov	word ptr [rsp + 0x3a], si
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x170]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
mov	qword ptr [rsp + 0x70], rax
test	rax, rax
je	0x14003939e
je	0x14003939e
lea	rcx, [rip + 0x7f245]
call	0x140022a70
call	0x140022a70
mov	rsi, rax
mov	rax, qword ptr [rsp + 0x170]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	r12, [rax + rsi*8]
mov	rax, qword ptr [r12]
mov	qword ptr [rsp + 0x30], rax
test	rax, rax
je	0x140038f07
je	0x140038f07
mov	rax, qword ptr [rsp + 0x30]
lea	rsi, [rax + 0x64]
cmp	qword ptr [rax + 0x40], 0
mov	qword ptr [rsp + 0x58], rsi
jne	0x1400387ea
jne	0x1400387ea
mov	byte ptr [rsp + 0xaf], 0
lea	rax, [rsp + 0xc0]
mov	byte ptr [rsp + 0xd0], 0
mov	qword ptr [rsp + 0x90], rax
lea	rax, [rsp + 0xd0]
mov	qword ptr [rsp + 0x68], rax
mov	qword ptr [rsp + 0xc0], rax
mov	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rsp + 0xc8], 0
cmp	byte ptr [rax + 0x20], 0
je	0x140038233
je	0x140038233
mov	rcx, qword ptr [rsp + 0x90]
mov	edx, 0x20
call	0x14009f7e0
call	0x14009f7e0
lea	rax, [rsp + 0xf0]
lea	rcx, [rsp + 0xe0]
mov	edx, 0x20
mov	qword ptr [rsp + 0xe8], 0
mov	qword ptr [rsp + 0x88], rcx
mov	qword ptr [rsp + 0x50], rax
mov	qword ptr [rsp + 0xe0], rax
mov	byte ptr [rsp + 0xf0], 0
call	0x14009f7e0
call	0x14009f7e0
mov	rcx, qword ptr [rsp + 0x30]
mov	byte ptr [rsp + 0xad], 0
mov	qword ptr [rsp + 0x48], 0
lea	rax, [rcx + 0x66]
lea	rsi, [rcx + 0x7a]
mov	dword ptr [rsp + 0x3c], 0
mov	qword ptr [rsp + 0x40], rax
mov	eax, dword ptr [rcx + 0x60]
mov	dword ptr [rsp + 0xa8], 0
mov	dword ptr [rsp + 0xbc], eax
lea	rax, [rsp + 0xbc]
mov	qword ptr [rsp + 0x60], 0
mov	byte ptr [rsp + 0xae], 0
mov	qword ptr [rsp + 0x78], rax
mov	rax, qword ptr [rsp + 0x78]
mov	rcx, qword ptr [rsp + 0x48]
cmp	byte ptr [rax + rcx], 4
ja	0x140038d2d
ja	0x140038d2d
movzx	eax, byte ptr [rax + rcx]
lea	rcx, [rip + 0x81959]
movsxd	rax, dword ptr [rcx + rax*4]
add	rax, rcx
jmp	rax
jmp	rax
mov	r13d, 1
cmp	qword ptr [rsp + 0x48], 3
jne	0x140038a86
jne	0x140038a86
cmp	qword ptr [rsp + 0x60], 1
seta	al
and	eax, r13d
test	al, al
je	0x1400393a3
je	0x1400393a3
cmp	byte ptr [rsp + 0xae], 0
mov	rax, qword ptr [rsp + 0x30]
je	0x140038d46
je	0x140038d46
mov	r15, qword ptr [rax + 0x48]
mov	r14d, 1
nop	
cmp	di, -1
sete	r12b
test	rbx, rbx
setne	sil
and	sil, r12b
jne	0x140038a09
jne	0x140038a09
mov	esi, r12d
cmp	word ptr [rsp + 0x3a], -1
sete	al
test	rbp, rbp
setne	r13b
and	r13b, al
jne	0x140038a34
jne	0x140038a34
cmp	sil, al
je	0x140038a64
je	0x140038a64
mov	rax, qword ptr [rsp + 0x60]
cmp	r14, rax
jae	0x140038a64
jae	0x140038a64
test	rbx, rbx
je	0x140038399
je	0x140038399
test	r12b, r12b
jne	0x1400387ca
jne	0x1400387ca
mov	eax, edi
cmp	word ptr [r15 + r14*2], ax
jne	0x140038690
jne	0x140038690
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140038b83
jae	0x140038b83
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
add	r14, 1
mov	edi, 0xffffffff
jmp	0x140038340
jmp	0x140038340
mov	r15, qword ptr [rip + 0x863bf]
nop	dword ptr [rax]
cmp	di, -1
sete	r13b
test	rbx, rbx
setne	r12b
and	r12b, r13b
jne	0x140038970
jne	0x140038970
mov	r12d, r13d
cmp	word ptr [rsp + 0x3a], -1
sete	al
test	rbp, rbp
setne	r14b
and	r14b, al
jne	0x140038938
jne	0x140038938
cmp	r12b, al
je	0x140038968
je	0x140038968
test	rbx, rbx
je	0x140038423
je	0x140038423
test	r13b, r13b
jne	0x1400384d0
jne	0x1400384d0
mov	edx, edi
mov	rax, qword ptr [rsp + 0x40]
jmp	0x14003843d
jmp	0x14003843d
nop	dword ptr [rax]
add	rax, 2
cmp	rax, rsi
je	0x140038808
je	0x140038808
cmp	dx, word ptr [rax]
jne	0x140038430
jne	0x140038430
mov	rcx, qword ptr [rsp + 0x58]
mov	rdx, qword ptr [r15]
mov	rdi, qword ptr [rsp + 0xe8]
sub	rax, rcx
mov	rcx, qword ptr [rsp + 0x50]
sar	rax, 1
lea	r12, [rdi + 1]
movzx	r13d, byte ptr [rdx + rax]
mov	rax, qword ptr [rsp + 0xe0]
mov	rdx, qword ptr [rsp + 0xf0]
cmp	rax, rcx
je	0x1400389d0
je	0x1400389d0
cmp	rdx, r12
jb	0x1400388c8
jb	0x1400388c8
mov	byte ptr [rax + rdi], r13b
mov	rax, qword ptr [rsp + 0xe0]
add	dword ptr [rsp + 0x3c], 1
mov	qword ptr [rsp + 0xe8], r12
mov	byte ptr [rax + rdi + 1], 0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400388b3
jae	0x1400388b3
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
mov	edi, 0xffffffff
jmp	0x1400383d8
jmp	0x1400383d8
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140038ef7
jae	0x140038ef7
movzx	edx, word ptr [rax]
xor	eax, eax
cmp	dx, -1
cmove	rbx, rax
jmp	0x140038425
jmp	0x140038425
mov	rax, qword ptr [rsp + 0x30]
cmp	qword ptr [rax + 0x40], 0
jne	0x140038db8
jne	0x140038db8
mov	rax, qword ptr [rsp + 0x30]
cmp	qword ptr [rax + 0x50], 0
jne	0x140038d4f
jne	0x140038d4f
movzx	r13d, byte ptr [rsp + 0xaf]
xor	r13d, 1
mov	rcx, qword ptr [rsp + 0x48]
mov	eax, ecx
add	eax, 1
cmp	eax, 3
setle	al
add	rcx, 1
mov	qword ptr [rsp + 0x48], rcx
test	al, r13b
jne	0x1400382d4
jne	0x1400382d4
jmp	0x14003830e
jmp	0x14003830e
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x170]
test	byte ptr [rax + 0x19], 2
jne	0x140038bb3
jne	0x140038bb3
cmp	qword ptr [rsp + 0x60], 1
ja	0x140038bb3
ja	0x140038bb3
mov	rax, qword ptr [rsp + 0x48]
test	eax, eax
je	0x140038bb3
je	0x140038bb3
cmp	rax, 1
je	0x140038b91
je	0x140038b91
cmp	qword ptr [rsp + 0x48], 2
je	0x140038e76
je	0x140038e76
cmp	qword ptr [rsp + 0xe8], 1
ja	0x140038e2b
ja	0x140038e2b
cmp	byte ptr [rsp + 0xae], 0
je	0x1400385cf
je	0x1400385cf
mov	rax, qword ptr [rsp + 0xe0]
cmp	byte ptr [rax], 0x30
je	0x1400385cf
je	0x1400385cf
mov	dword ptr [rsp + 0x20], 0x2d
mov	rcx, qword ptr [rsp + 0x88]
xor	r8d, r8d
xor	edx, edx
mov	r9d, 1
call	0x14009d910
call	0x14009d910
mov	r13, qword ptr [rsp + 0xc8]
test	r13, r13
je	0x140038668
je	0x140038668
movzx	eax, byte ptr [rsp + 0x3c]
mov	rcx, qword ptr [rsp + 0x68]
lea	rsi, [r13 + 1]
movzx	r12d, byte ptr [rsp + 0xa8]
cmp	byte ptr [rsp + 0xad], 0
cmove	r12d, eax
mov	rax, qword ptr [rsp + 0xc0]
cmp	rax, rcx
je	0x14003925e
je	0x14003925e
mov	rdx, qword ptr [rsp + 0xd0]
cmp	rdx, rsi
jb	0x140039192
jb	0x140039192
mov	byte ptr [rax + r13], r12b
mov	rax, qword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0xc8], rsi
mov	r8, qword ptr [rsp + 0x90]
mov	byte ptr [rax + r13 + 1], 0
mov	rax, qword ptr [rsp + 0x30]
mov	rdx, qword ptr [rax + 0x18]
mov	rcx, qword ptr [rax + 0x10]
call	0x1400ae850
call	0x1400ae850
test	al, al
jne	0x140038668
jne	0x140038668
mov	rax, qword ptr [rsp + 0x178]
or	dword ptr [rax], 4
cmp	di, -1
sete	r12b
cmp	byte ptr [rsp + 0xad], 0
je	0x140038ea8
je	0x140038ea8
mov	rax, qword ptr [rsp + 0x30]
mov	esi, dword ptr [rsp + 0x3c]
cmp	dword ptr [rax + 0x58], esi
je	0x140038ea8
je	0x140038ea8
mov	rax, qword ptr [rsp + 0x178]
or	dword ptr [rax], 4
test	rbx, rbx
setne	sil
and	sil, r12b
jne	0x140038ecd
jne	0x140038ecd
cmp	word ptr [rsp + 0xa0], -1
sete	al
mov	edx, eax
test	rbp, rbp
je	0x1400386c6
je	0x1400386c6
test	al, al
jne	0x140038ff5
jne	0x140038ff5
cmp	dl, r12b
jne	0x1400386d6
jne	0x1400386d6
mov	rax, qword ptr [rsp + 0x178]
or	dword ptr [rax], 2
mov	rax, qword ptr [rsp + 0x98]
mov	rcx, qword ptr [rsp + 0xe0]
mov	ax, di
mov	rdi, qword ptr [rsp + 0x150]
mov	qword ptr [rdi + 8], rax
mov	rax, qword ptr [rsp + 0x50]
mov	qword ptr [rdi], rbx
cmp	rcx, rax
je	0x140038707
je	0x140038707
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, qword ptr [rsp + 0xc0]
mov	rax, qword ptr [rsp + 0x68]
cmp	rcx, rax
je	0x14003871e
je	0x14003871e
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0x150]
add	rsp, 0x108
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
cmp	di, -1
sete	r14b
test	rbx, rbx
setne	al
and	al, r14b
mov	r12d, eax
jne	0x14003903e
jne	0x14003903e
mov	r12d, r14d
cmp	word ptr [rsp + 0x3a], -1
sete	al
test	rbp, rbp
setne	dl
and	dl, al
mov	r13d, edx
jne	0x140039012
jne	0x140039012
xor	r13d, r13d
cmp	r12b, al
je	0x140038302
je	0x140038302
test	rbx, rbx
je	0x14003878b
je	0x14003878b
test	r14b, r14b
jne	0x1400392c0
jne	0x1400392c0
movzx	r8d, di
mov	rcx, qword ptr [rsp + 0x70]
mov	edx, 0x20
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	r13d, eax
test	al, al
je	0x140038302
je	0x140038302
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400392ec
jae	0x1400392ec
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
mov	edi, 0xffffffff
jmp	0x140038302
jmp	0x140038302
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140039184
jae	0x140039184
movzx	eax, word ptr [rax]
xor	esi, esi
cmp	ax, -1
cmove	rbx, rsi
jmp	0x14003839b
jmp	0x14003839b
mov	rax, qword ptr [rsp + 0x30]
cmp	qword ptr [rax + 0x50], 0
setne	byte ptr [rsp + 0xaf]
jmp	0x1400381dd
jmp	0x1400381dd
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x30]
cmp	word ptr [rax + 0x22], dx
je	0x1400388f8
je	0x1400388f8
mov	rax, qword ptr [rsp + 0x30]
movzx	r13d, byte ptr [rax + 0x20]
test	r13b, r13b
je	0x140038968
je	0x140038968
cmp	word ptr [rax + 0x24], dx
jne	0x1400389e3
jne	0x1400389e3
cmp	byte ptr [rsp + 0xad], 0
jne	0x1400389da
jne	0x1400389da
mov	eax, dword ptr [rsp + 0x3c]
test	eax, eax
je	0x14003906a
je	0x14003906a
mov	rdi, qword ptr [rsp + 0xc8]
mov	r13d, eax
mov	rcx, qword ptr [rsp + 0x68]
mov	rax, qword ptr [rsp + 0xc0]
lea	r12, [rdi + 1]
cmp	rax, rcx
je	0x1400389ff
je	0x1400389ff
mov	rdx, qword ptr [rsp + 0xd0]
cmp	rdx, r12
jb	0x1400389a0
jb	0x1400389a0
mov	byte ptr [rax + rdi], r13b
mov	rax, qword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0xc8], r12
mov	dword ptr [rsp + 0x3c], 0
mov	byte ptr [rax + rdi + 1], 0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jb	0x1400384b4
jb	0x1400384b4
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x1400384bc
jmp	0x1400384bc
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x20], 1
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	rcx, qword ptr [rsp + 0x88]
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0xe0]
jmp	0x140038488
jmp	0x140038488
nop	dword ptr [rax]
cmp	byte ptr [rsp + 0xad], 0
jne	0x1400389da
jne	0x1400389da
mov	rax, qword ptr [rsp + 0x30]
mov	eax, dword ptr [rax + 0x58]
test	eax, eax
jle	0x140038968
jle	0x140038968
mov	eax, dword ptr [rsp + 0x3c]
mov	byte ptr [rsp + 0xad], 1
mov	dword ptr [rsp + 0x3c], 0
mov	dword ptr [rsp + 0xa8], eax
jmp	0x1400384a6
jmp	0x1400384a6
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140038fd9
jae	0x140038fd9
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
mov	ecx, 0
cmove	eax, r14d
cmove	rbp, rcx
cmp	r12b, al
jne	0x140038415
jne	0x140038415
mov	r13d, 1
jmp	0x1400389e3
jmp	0x1400389e3
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140038fcb
jae	0x140038fcb
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r12d, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x1400383f3
jmp	0x1400383f3
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x20], 1
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	rcx, qword ptr [rsp + 0x90]
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0xc0]
jmp	0x140038884
jmp	0x140038884
nop	dword ptr [rax]
mov	edx, 0xf
jmp	0x14003847f
jmp	0x14003847f
movzx	r13d, byte ptr [rsp + 0xad]
cmp	qword ptr [rsp + 0xe8], 0
jne	0x14003851d
jne	0x14003851d
cmp	di, -1
sete	r12b
jmp	0x140038690
jmp	0x140038690
mov	edx, 0xf
jmp	0x14003887b
jmp	0x14003887b
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140039176
jae	0x140039176
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	esi, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x14003835b
jmp	0x14003835b
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140039167
jae	0x140039167
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
mov	ecx, 0
cmove	eax, r13d
cmove	rbp, rcx
cmp	sil, al
jne	0x14003837d
jne	0x14003837d
mov	rax, qword ptr [rsp + 0x60]
cmp	r14, rax
jne	0x140038690
jne	0x140038690
cmp	qword ptr [rsp + 0xe8], 1
jbe	0x140038598
jbe	0x140038598
jmp	0x140038e2b
jmp	0x140038e2b
cmp	di, -1
sete	r14b
test	rbx, rbx
je	0x140038a98
je	0x140038a98
test	r14b, r14b
jne	0x140038af9
jne	0x140038af9
mov	r15d, r14d
cmp	word ptr [rsp + 0x3a], -1
sete	al
test	rbp, rbp
setne	r12b
and	r12b, al
jne	0x140038b27
jne	0x140038b27
cmp	r14b, al
je	0x14003851d
je	0x14003851d
test	rbx, rbx
je	0x140038ac7
je	0x140038ac7
test	r15b, r15b
jne	0x140038b53
jne	0x140038b53
movzx	r8d, di
mov	rcx, qword ptr [rsp + 0x70]
mov	edx, 0x20
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
test	al, al
je	0x14003851d
je	0x14003851d
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140038b75
jae	0x140038b75
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400390db
jae	0x1400390db
movzx	edi, word ptr [rax]
mov	r15d, 1
cmp	di, -1
je	0x140038fe8
je	0x140038fe8
mov	edi, 0xffffffff
xor	r14d, r14d
jmp	0x140038a9b
jmp	0x140038a9b
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x1400390fd
jae	0x1400390fd
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	edx, 0
mov	eax, 0
cmove	eax, r12d
cmove	rbp, rdx
jmp	0x140038ab0
jmp	0x140038ab0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400390eb
jae	0x1400390eb
movzx	r8d, word ptr [rax]
xor	eax, eax
cmp	r8w, -1
cmove	rbx, rax
jmp	0x140038acb
jmp	0x140038acb
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140038af9
jmp	0x140038af9
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x1400383bc
jmp	0x1400383bc
cmp	byte ptr [rsp + 0xaf], 0
jne	0x140038bb3
jne	0x140038bb3
cmp	byte ptr [rsp + 0xbc], 3
je	0x140038bb3
je	0x140038bb3
cmp	byte ptr [rsp + 0xbe], 1
jne	0x140038d2d
jne	0x140038d2d
mov	rax, qword ptr [rsp + 0x30]
xor	r15d, r15d
mov	rax, qword ptr [rax + 0x30]
mov	qword ptr [rsp + 0x80], rax
nop	word ptr [rax + rax]
cmp	di, -1
sete	r13b
test	rbx, rbx
setne	r12b
and	r12b, r13b
jne	0x140038cb8
jne	0x140038cb8
mov	r12d, r13d
cmp	word ptr [rsp + 0x3a], -1
sete	al
test	rbp, rbp
setne	r14b
and	r14b, al
jne	0x140038ce4
jne	0x140038ce4
mov	rcx, qword ptr [rsp + 0x80]
cmp	r15, rcx
jae	0x140038d1c
jae	0x140038d1c
cmp	r12b, al
je	0x140038d1c
je	0x140038d1c
test	rbx, rbx
je	0x140038c28
je	0x140038c28
test	r13b, r13b
jne	0x140038c5e
jne	0x140038c5e
mov	rcx, qword ptr [rsp + 0x30]
mov	eax, edi
mov	rdx, qword ptr [rcx + 0x28]
cmp	word ptr [rdx + r15*2], ax
jne	0x140038c89
jne	0x140038c89
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140038d38
jae	0x140038d38
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
add	r15, 1
mov	edi, 0xffffffff
jmp	0x140038bd0
jmp	0x140038bd0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140039250
jae	0x140039250
movzx	eax, word ptr [rax]
xor	ecx, ecx
cmp	ax, -1
cmove	rbx, rcx
mov	rcx, qword ptr [rsp + 0x30]
mov	rdx, qword ptr [rcx + 0x28]
cmp	word ptr [rdx + r15*2], ax
je	0x140038c3a
je	0x140038c3a
test	r15, r15
jne	0x1400389f2
jne	0x1400389f2
mov	rax, qword ptr [rsp + 0x170]
mov	eax, dword ptr [rax + 0x18]
mov	r13d, eax
mov	dword ptr [rsp + 0x80], eax
shr	r13d, 9
xor	r13d, 1
and	r13d, 1
jmp	0x14003851d
jmp	0x14003851d
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400391cd
jae	0x1400391cd
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r12d, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x140038beb
jmp	0x140038beb
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x1400391be
jae	0x1400391be
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	ecx, 0
mov	eax, 0
cmove	rbp, rcx
mov	rcx, qword ptr [rsp + 0x80]
cmove	eax, r14d
cmp	r15, rcx
jb	0x140038c15
jb	0x140038c15
mov	rax, qword ptr [rsp + 0x80]
cmp	r15, rax
jne	0x140038c89
jne	0x140038c89
mov	r13d, 1
jmp	0x14003851d
jmp	0x14003851d
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140038c50
jmp	0x140038c50
mov	r15, qword ptr [rax + 0x38]
jmp	0x140038339
jmp	0x140038339
cmp	di, -1
sete	r13b
test	rbx, rbx
setne	al
and	al, r13b
mov	r12d, eax
jne	0x1400391db
jne	0x1400391db
mov	r12d, r13d
cmp	word ptr [rsp + 0x3a], -1
sete	al
test	rbp, rbp
setne	dl
and	dl, al
mov	r14d, edx
jne	0x140039268
jne	0x140039268
cmp	r12b, al
jne	0x140039072
jne	0x140039072
mov	rax, qword ptr [rsp + 0x30]
cmp	qword ptr [rax + 0x40], 0
je	0x140038510
je	0x140038510
mov	rax, qword ptr [rsp + 0x30]
cmp	qword ptr [rax + 0x50], 0
jne	0x140038510
jne	0x140038510
jmp	0x140038e18
jmp	0x140038e18
nop	dword ptr [rax]
cmp	di, -1
sete	r13b
test	rbx, rbx
setne	al
and	al, r13b
mov	r12d, eax
jne	0x140039207
jne	0x140039207
mov	r12d, r13d
cmp	word ptr [rsp + 0x3a], -1
sete	al
test	rbp, rbp
setne	dl
and	dl, al
mov	r14d, edx
jne	0x140039294
jne	0x140039294
cmp	r12b, al
jne	0x14003910c
jne	0x14003910c
mov	rax, qword ptr [rsp + 0x30]
cmp	qword ptr [rax + 0x50], 0
jne	0x140038d4f
jne	0x140038d4f
mov	rax, qword ptr [rsp + 0x30]
cmp	qword ptr [rax + 0x40], 0
je	0x140038510
je	0x140038510
mov	byte ptr [rsp + 0xae], 1
mov	r13d, 1
jmp	0x14003851d
jmp	0x14003851d
mov	rcx, qword ptr [rsp + 0x88]
xor	r8d, r8d
mov	edx, 0x30
call	0x1400261c0
call	0x1400261c0
test	rax, rax
je	0x140038598
je	0x140038598
mov	r8, qword ptr [rsp + 0xe8]
cmp	rax, -1
je	0x140039233
je	0x140039233
cmp	rax, r8
mov	rcx, qword ptr [rsp + 0x88]
cmovbe	r8, rax
xor	edx, edx
call	0x14009f890
call	0x14009f890
jmp	0x140038598
jmp	0x140038598
movzx	eax, byte ptr [rsp + 0xbf]
cmp	al, 4
je	0x140038bb3
je	0x140038bb3
cmp	al, 3
jne	0x140038d2d
jne	0x140038d2d
cmp	byte ptr [rsp + 0xaf], 0
je	0x140038d2d
je	0x140038d2d
jmp	0x140038bb3
jmp	0x140038bb3
nop	dword ptr [rax]
mov	rdx, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x180]
call	0x14009dc50
call	0x14009dc50
test	rbx, rbx
setne	sil
and	sil, r12b
je	0x1400386ab
je	0x1400386ab
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400392fa
jae	0x1400392fa
movzx	eax, word ptr [rax]
xor	r12d, r12d
cmp	ax, -1
mov	eax, 0
cmove	r12d, esi
cmove	rbx, rax
jmp	0x1400386ab
jmp	0x1400386ab
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, eax
jmp	0x1400384e1
jmp	0x1400384e1
mov	ecx, 0x80
call	0x1400b2c30
call	0x1400b2c30
mov	r13, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x860be]
mov	qword ptr [r13 + 0x10], 0
mov	rcx, r13
add	rax, 0x10
mov	qword ptr [r13 + 0x18], 0
mov	qword ptr [r13], rax
mov	rax, qword ptr [rsp + 0x170]
mov	byte ptr [r13 + 0x20], 0
mov	dword ptr [r13 + 0x22], 0
lea	rdx, [rax + 0xd0]
mov	qword ptr [r13 + 0x28], 0
mov	qword ptr [r13 + 0x30], 0
mov	qword ptr [r13 + 0x38], 0
mov	qword ptr [r13 + 0x40], 0
mov	qword ptr [r13 + 0x48], 0
mov	qword ptr [r13 + 0x50], 0
mov	dword ptr [r13 + 0x58], 0
mov	qword ptr [r13 + 0x5c], 0
mov	byte ptr [r13 + 0x7a], 0
call	0x1400979c0
call	0x1400979c0
mov	rax, qword ptr [rsp + 0x170]
mov	r8, rsi
mov	rdx, r13
mov	rcx, qword ptr [rax + 0xd0]
call	0x140099d30
call	0x140099d30
mov	rax, qword ptr [r12]
mov	qword ptr [rsp + 0x30], rax
jmp	0x1400381bc
jmp	0x1400381bc
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140038981
jmp	0x140038981
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140038949
jmp	0x140038949
mov	r14d, 1
xor	ebx, ebx
jmp	0x140038a9b
jmp	0x140038a9b
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140039308
jae	0x140039308
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	dl
jmp	0x1400386c6
jmp	0x1400386c6
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140039317
jae	0x140039317
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	edx, 0
mov	eax, 0
cmove	eax, r13d
cmove	rbp, rdx
jmp	0x140038771
jmp	0x140038771
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400392de
jae	0x1400392de
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r12d, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x140038757
jmp	0x140038757
xor	r13d, r13d
jmp	0x1400389e3
jmp	0x1400389e3
test	rbx, rbx
je	0x140039099
je	0x140039099
test	r13b, r13b
je	0x140039099
je	0x140039099
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140039344
jae	0x140039344
movzx	eax, word ptr [rax]
xor	edx, edx
cmp	ax, -1
cmove	rbx, rdx
jmp	0x14003909b
jmp	0x14003909b
mov	eax, edi
mov	rcx, qword ptr [rsp + 0x30]
mov	rdx, qword ptr [rcx + 0x48]
cmp	word ptr [rdx], ax
jne	0x140038d8f
jne	0x140038d8f
mov	rax, qword ptr [rsp + 0x30]
mov	rcx, rbx
mov	rax, qword ptr [rax + 0x50]
mov	qword ptr [rsp + 0x60], rax
call	0x140092470
call	0x140092470
mov	byte ptr [rsp + 0xae], 1
mov	edi, 0xffffffff
mov	r13d, 1
jmp	0x14003851d
jmp	0x14003851d
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edi, eax
jmp	0x140038b0a
jmp	0x140038b0a
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, ax
jmp	0x140038b65
jmp	0x140038b65
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140038b38
jmp	0x140038b38
test	rbx, rbx
je	0x140039133
je	0x140039133
test	r13b, r13b
je	0x140039133
je	0x140039133
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14003936f
jae	0x14003936f
movzx	eax, word ptr [rax]
xor	edx, edx
cmp	ax, -1
cmove	rbx, rdx
jmp	0x140039135
jmp	0x140039135
mov	eax, edi
mov	rcx, qword ptr [rsp + 0x30]
mov	rdx, qword ptr [rcx + 0x38]
cmp	word ptr [rdx], ax
jne	0x140038df8
jne	0x140038df8
mov	rax, qword ptr [rsp + 0x30]
mov	rcx, rbx
mov	rax, qword ptr [rax + 0x40]
mov	qword ptr [rsp + 0x60], rax
call	0x140092470
call	0x140092470
mov	edi, 0xffffffff
jmp	0x140038d2d
jmp	0x140038d2d
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140038a45
jmp	0x140038a45
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140038a1a
jmp	0x140038a1a
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400387db
jmp	0x1400387db
mov	qword ptr [rsp + 0x20], 1
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, r13
mov	rcx, qword ptr [rsp + 0x90]
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0xc0]
jmp	0x140038625
jmp	0x140038625
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140038cf5
jmp	0x140038cf5
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140038cc9
jmp	0x140038cc9
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140039352
jae	0x140039352
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r12d, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x140038d6c
jmp	0x140038d6c
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140039390
jae	0x140039390
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r12d, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x140038dd5
jmp	0x140038dd5
lea	rax, [r8 - 1]
test	r8, r8
jne	0x14003937d
jne	0x14003937d
mov	rax, qword ptr [rsp + 0xe0]
mov	byte ptr [rax], 0
jmp	0x140038598
jmp	0x140038598
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140038c6f
jmp	0x140038c6f
mov	edx, 0xf
jmp	0x14003861c
jmp	0x14003861c
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140039360
jae	0x140039360
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	edx, 0
mov	eax, 0
cmove	eax, r14d
cmove	rbp, rdx
jmp	0x140038d86
jmp	0x140038d86
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140039326
jae	0x140039326
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	edx, 0
mov	eax, 0
cmove	eax, r14d
cmove	rbp, rdx
jmp	0x140038def
jmp	0x140038def
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140039335
jae	0x140039335
movzx	r8d, word ptr [rax]
xor	eax, eax
cmp	r8w, -1
cmove	rbx, rax
jmp	0x14003878f
jmp	0x14003878f
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14003904f
jmp	0x14003904f
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x1400387c0
jmp	0x1400387c0
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140038ede
jmp	0x140038ede
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140039006
jmp	0x140039006
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140039023
jmp	0x140039023
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400392a5
jmp	0x1400392a5
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, ax
jmp	0x1400392ce
jmp	0x1400392ce
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14003908d
jmp	0x14003908d
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400391ec
jmp	0x1400391ec
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140039279
jmp	0x140039279
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140039127
jmp	0x140039127
test	rax, rax
je	0x140038598
je	0x140038598
jmp	0x140038e5b
jmp	0x140038e5b
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140039218
jmp	0x140039218
call	0x1400b3a30
call	0x1400b3a30
test	r13b, r13b
jne	0x140038589
jne	0x140038589
jmp	0x1400389f2
jmp	0x1400389f2
mov	rbx, rax
jmp	0x1400393c6
jmp	0x1400393c6
mov	rcx, qword ptr [rsp + 0x88]
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, qword ptr [rsp + 0x90]
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x1400393ed
jmp	0x1400393ed
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa8]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x38], rcx
mov	rcx, qword ptr [rsp + 0xa0]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
mov	qword ptr [rsp + 0x28], rcx
movzx	ecx, byte ptr [rsp + 0x90]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa8]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x38], rcx
mov	rcx, qword ptr [rsp + 0xa0]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
mov	qword ptr [rsp + 0x28], rcx
movzx	ecx, byte ptr [rsp + 0x90]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
movups	xmmword ptr [rsp + 0x90], xmm6
mov	r12, qword ptr [rsp + 0x118]
mov	rdi, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
movdqu	xmm6, xmmword ptr [r9]
mov	r14d, dword ptr [rsp + 0x110]
mov	rsi, rcx
mov	rcx, qword ptr [rip + 0x8538f]
mov	qword ptr [rsp + 0xf8], rdx
call	0x140022a70
call	0x140022a70
mov	rcx, rax
mov	rax, qword ptr [r12 + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rbp, qword ptr [rax + rcx*8]
test	rbp, rbp
je	0x1400396bf
je	0x1400396bf
lea	r13, [rsp + 0x80]
test	r14b, r14b
mov	qword ptr [rsp + 0x78], 0
mov	rdx, qword ptr [rsp + 0xf8]
mov	qword ptr [rsp + 0x70], r13
lea	r15, [rsp + 0x70]
mov	byte ptr [rsp + 0x80], 0
jne	0x140039680
jne	0x140039680
mov	qword ptr [rsp + 0x30], r15
lea	rcx, [rsp + 0x60]
lea	r9, [rsp + 0x40]
mov	rax, qword ptr [rsp + 0x120]
mov	qword ptr [rsp + 0x20], r12
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x50], rdi
mov	qword ptr [rsp + 0x58], rbx
movups	xmmword ptr [rsp + 0x40], xmm6
call	0x140036e10
call	0x140036e10
mov	rax, qword ptr [rsp + 0x60]
mov	rdx, qword ptr [rsp + 0x68]
xor	bx, bx
mov	r12, qword ptr [rsp + 0x78]
mov	qword ptr [rsp + 0x60], rax
mov	rdi, rax
mov	qword ptr [rsp + 0x68], rdx
movzx	eax, word ptr [rsp + 0x68]
or	rbx, rax
test	r12, r12
je	0x140039645
je	0x140039645
mov	rcx, qword ptr [rsp + 0x128]
xor	r8d, r8d
mov	rdx, r12
call	0x1400a2b10
call	0x1400a2b10
mov	rcx, qword ptr [rsp + 0x128]
mov	rdx, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rbp]
mov	r9, qword ptr [rcx]
lea	r8, [rdx + r12]
mov	rcx, rbp
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
mov	rcx, qword ptr [rsp + 0x70]
mov	qword ptr [rsi], rdi
mov	qword ptr [rsi + 8], rbx
cmp	rcx, r13
je	0x14003965c
je	0x14003965c
call	0x1400b2be0
call	0x1400b2be0
nop	
movups	xmm6, xmmword ptr [rsp + 0x90]
mov	rax, rsi
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
mov	qword ptr [rsp + 0x30], r15
lea	rcx, [rsp + 0x60]
lea	r9, [rsp + 0x40]
mov	rax, qword ptr [rsp + 0x120]
mov	qword ptr [rsp + 0x20], r12
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x50], rdi
mov	qword ptr [rsp + 0x58], rbx
movups	xmmword ptr [rsp + 0x40], xmm6
call	0x140038110
call	0x140038110
jmp	0x1400395e8
jmp	0x1400395e8
call	0x1400b3a30
call	0x1400b3a30
mov	rbx, rax
mov	rcx, r15
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
mov	rdi, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rax, qword ptr [rsp + 0x108]
mov	r8, qword ptr [r9]
mov	rbp, qword ptr [rsp + 0x110]
mov	r9, qword ptr [r9 + 8]
cmp	byte ptr [rsp + 0x100], 0
lea	r13, [rsp + 0x80]
lea	r12, [rsp + 0x90]
mov	qword ptr [rsp + 0x40], r8
mov	rsi, rcx
mov	qword ptr [rsp + 0x48], r9
lea	rcx, [rsp + 0x60]
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x80], r12
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x88], 0
mov	byte ptr [rsp + 0x90], 0
mov	qword ptr [rsp + 0x50], rdi
mov	qword ptr [rsp + 0x58], rbx
mov	qword ptr [rsp + 0x30], r13
mov	qword ptr [rsp + 0x28], rbp
mov	qword ptr [rsp + 0x20], rax
je	0x140039800
je	0x140039800
call	0x140038110
call	0x140038110
mov	rax, qword ptr [rsp + 0x60]
mov	rdx, qword ptr [rsp + 0x68]
xor	bx, bx
mov	qword ptr [rsp + 0x60], rax
mov	rdi, rax
mov	qword ptr [rsp + 0x68], rdx
movzx	eax, word ptr [rsp + 0x68]
or	rbx, rax
call	0x14009baf0
call	0x14009baf0
mov	rcx, qword ptr [rsp + 0x80]
lea	r9, [rsp + 0x78]
mov	r8, rbp
mov	qword ptr [rsp + 0x78], rax
mov	rdx, qword ptr [rsp + 0x118]
call	0x1400ace20
call	0x1400ace20
mov	rcx, qword ptr [rsp + 0x80]
mov	qword ptr [rsi], rdi
mov	qword ptr [rsi + 8], rbx
cmp	rcx, r12
je	0x1400397e3
je	0x1400397e3
call	0x1400b2be0
call	0x1400b2be0
mov	rax, rsi
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr cs:[rax + rax]
call	0x140036e10
call	0x140036e10
jmp	0x140039781
jmp	0x140039781
mov	rbx, rax
mov	rcx, r13
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x58
lea	rsi, [rip + 0x113]
mov	rax, qword ptr [rdx]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
mov	r8, qword ptr [rsp + 0xa0]
mov	rax, qword ptr [rax + 0x18]
mov	rbx, rcx
mov	qword ptr [rsp + 0x40], r10
movsx	ecx, byte ptr [rsp + 0x98]
mov	qword ptr [rsp + 0x48], r11
cmp	rax, rsi
jne	0x1400398a0
jne	0x1400398a0
test	r9b, r9b
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
mov	r9, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x40]
jne	0x140039890
jne	0x140039890
call	0x140039bf0
call	0x140039bf0
mov	rax, rbx
add	rsp, 0x58
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
call	0x14003a4c0
call	0x14003a4c0
mov	rax, rbx
add	rsp, 0x58
pop	rbx
pop	rsi
ret	
ret	
nop	
mov	rsi, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x30], r8
movzx	r9d, r9b
lea	r8, [rsp + 0x40]
mov	dword ptr [rsp + 0x28], ecx
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], rsi
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x58
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0xa0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
fld	xword ptr [rax]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
lea	rcx, [rsp + 0x40]
mov	qword ptr [rsp + 0x50], r10
movzx	r9d, r9b
mov	qword ptr [rsp + 0x30], rcx
movsx	ecx, byte ptr [rsp + 0x98]
lea	r8, [rsp + 0x50]
fstp	xword ptr [rsp + 0x40]
mov	dword ptr [rsp + 0x28], ecx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x58], r11
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x40
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movsx	eax, byte ptr [rsp + 0x78]
mov	rbx, rcx
test	r9b, r9b
mov	qword ptr [rsp + 0x30], r10
mov	r9, qword ptr [rsp + 0x70]
mov	rcx, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x38], r11
lea	r8, [rsp + 0x30]
mov	dword ptr [rsp + 0x20], eax
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, rbx
je	0x140039990
je	0x140039990
call	0x14003a4c0
call	0x14003a4c0
mov	rax, rbx
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
call	0x140039bf0
call	0x140039bf0
mov	rax, rbx
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0xb8
lea	rbp, [rsp + 0xa0]
movups	xmmword ptr [rbp], xmm6
mov	eax, dword ptr [rbp + 0x88]
movdqu	xmm6, xmmword ptr [r8]
mov	dword ptr [rbp - 0x68], eax
mov	rax, qword ptr [rbp + 0x90]
lea	r13, [rbp - 0x28]
mov	qword ptr [rbp + 0x60], rcx
mov	rcx, r13
fld	xword ptr [rax]
mov	rax, qword ptr [rbp + 0x80]
mov	qword ptr [rbp + 0x68], rdx
mov	dword ptr [rbp - 0x64], r9d
lea	rdx, [rax + 0xd0]
fstp	xword ptr [rbp - 0x60]
call	0x14009be20
call	0x14009be20
mov	rcx, qword ptr [rip + 0x84eca]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp - 0x28]
mov	rax, qword ptr [rax + 8]
mov	r12, qword ptr [rax + rdx*8]
test	r12, r12
je	0x140039bbc
je	0x140039bbc
sub	rsp, 0x40
lea	rbx, [rsp + 0x30]
mov	rdi, rbx
call	0x14009baf0
call	0x14009baf0
fld	xword ptr [rbp - 0x60]
lea	r14, [rbp - 0x40]
mov	qword ptr [rbp - 0x20], rax
lea	rsi, [rbp - 0x20]
lea	r9, [rip + 0x7ff0e]
mov	r8d, 0x40
mov	rdx, rbx
mov	rcx, rsi
fstp	xword ptr [rbp - 0x40]
mov	qword ptr [rsp + 0x28], r14
mov	dword ptr [rsp + 0x20], 0
call	0x1400ad890
call	0x1400ad890
cmp	eax, 0x3f
jg	0x140039b40
jg	0x140039b40
movsxd	rbx, eax
lea	r14, [rbp - 0x10]
xor	r8d, r8d
mov	rcx, rsi
mov	rdx, rbx
mov	qword ptr [rbp - 0x20], r14
call	0x14009d160
call	0x14009d160
mov	rax, qword ptr [rbp - 0x20]
lea	r15, [rdi + rbx]
mov	qword ptr [rbp - 0x60], rax
movzx	eax, byte ptr [r12 + 0x38]
cmp	al, 1
je	0x140039ac3
je	0x140039ac3
test	al, al
je	0x140039b98
je	0x140039b98
mov	rax, qword ptr [r12]
lea	rdx, [rip - 0x17646]
mov	rax, qword ptr [rax + 0x38]
cmp	rax, rdx
jne	0x140039ba8
jne	0x140039ba8
cmp	r15, rdi
je	0x140039ad7
je	0x140039ad7
mov	rcx, qword ptr [rbp - 0x60]
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
movsx	eax, byte ptr [rbp - 0x68]
cmp	byte ptr [rbp - 0x64], 0
movups	xmmword ptr [rbp - 0x50], xmm6
lea	r8, [rbp - 0x50]
mov	qword ptr [rsp + 0x28], rsi
mov	dword ptr [rsp + 0x20], eax
mov	r9, qword ptr [rbp + 0x80]
mov	rdx, qword ptr [rbp + 0x68]
mov	rcx, qword ptr [rbp + 0x60]
jne	0x140039b38
jne	0x140039b38
call	0x140039bf0
call	0x140039bf0
mov	rcx, qword ptr [rbp - 0x20]
cmp	rcx, r14
je	0x140039b14
je	0x140039b14
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, r13
call	0x14009bf30
call	0x14009bf30
mov	rax, qword ptr [rbp + 0x60]
movups	xmm6, xmmword ptr [rbp]
lea	rsp, [rbp + 0x18]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax]
call	0x14003a4c0
call	0x14003a4c0
jmp	0x140039b06
jmp	0x140039b06
nop	
lea	ebx, [rax + 1]
movsxd	rax, ebx
add	rax, 0xf
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
lea	r15, [rsp + 0x30]
mov	rdi, r15
call	0x14009baf0
call	0x14009baf0
fld	xword ptr [rbp - 0x60]
mov	qword ptr [rbp - 0x20], rax
mov	r8d, ebx
mov	rdx, r15
lea	r9, [rip + 0x7fde1]
mov	rcx, rsi
fstp	xword ptr [rbp - 0x40]
mov	qword ptr [rsp + 0x28], r14
mov	dword ptr [rsp + 0x20], 0
call	0x1400ad890
call	0x1400ad890
jmp	0x140039a74
jmp	0x140039a74
nop	dword ptr [rax]
mov	rcx, r12
call	0x140021cb0
call	0x140021cb0
jmp	0x140039aab
jmp	0x140039aab
nop	dword ptr [rax]
mov	r9, qword ptr [rbp - 0x60]
mov	r8, r15
mov	rdx, rdi
mov	rcx, r12
call	rax
call	rax
jmp	0x140039ad7
jmp	0x140039ad7
call	0x1400b3a30
call	0x1400b3a30
mov	rbx, rax
jmp	0x140039bd1
jmp	0x140039bd1
mov	rcx, rsi
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, r13
call	0x14009bf30
call	0x14009bf30
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xf8
mov	rax, qword ptr [r8]
mov	r12, qword ptr [r8 + 8]
mov	r13, qword ptr [rsp + 0x168]
mov	qword ptr [rsp + 0x38], rax
mov	r15, rcx
mov	eax, dword ptr [rsp + 0x160]
mov	rbp, r9
mov	rcx, qword ptr [rip + 0x84ca5]
mov	dword ptr [rsp + 0x4c], eax
mov	byte ptr [rsp + 0x8d], al
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r14, qword ptr [rax + rdx*8]
test	r14, r14
je	0x14003a454
je	0x14003a454
lea	rcx, [rip + 0x7d743]
call	0x140022a70
call	0x140022a70
mov	rbx, rax
mov	rax, qword ptr [rbp + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	rdi, [rax + rbx*8]
mov	rsi, qword ptr [rdi]
test	rsi, rsi
je	0x14003a270
je	0x14003a270
mov	rdi, qword ptr [r13]
mov	rdx, qword ptr [r13 + 8]
movzx	eax, byte ptr [rsi + 0x64]
cmp	byte ptr [rdi], al
je	0x140039d08
je	0x140039d08
mov	eax, dword ptr [rsi + 0x5c]
mov	dword ptr [rsp + 0xac], eax
mov	rax, qword ptr [rsi + 0x38]
mov	qword ptr [rsp + 0x50], rax
mov	rax, qword ptr [rsi + 0x40]
mov	qword ptr [rsp + 0x40], rax
add	rdx, rdi
cmp	rdi, rdx
jae	0x140039cd7
jae	0x140039cd7
mov	rcx, qword ptr [r14 + 0x30]
mov	rbx, rdi
jmp	0x140039cc9
jmp	0x140039cc9
nop	dword ptr [rax]
add	rbx, 1
cmp	rdx, rbx
je	0x140039cd2
je	0x140039cd2
movzx	eax, byte ptr [rbx]
test	byte ptr [rcx + rax*2], 8
jne	0x140039cc0
jne	0x140039cc0
sub	rbx, rdi
jne	0x140039d38
jne	0x140039d38
mov	rax, qword ptr [rsp + 0x38]
mov	qword ptr [rbp + 0x10], 0
mov	qword ptr [r15 + 8], r12
mov	qword ptr [r15], rax
mov	rax, r15
add	rsp, 0xf8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, dword ptr [rsi + 0x60]
mov	dword ptr [rsp + 0xac], eax
mov	rax, qword ptr [rsi + 0x48]
mov	qword ptr [rsp + 0x50], rax
mov	rax, qword ptr [rsi + 0x50]
mov	qword ptr [rsp + 0x40], rax
test	rdx, rdx
je	0x140039cd7
je	0x140039cd7
add	rdi, 1
jmp	0x140039cac
jmp	0x140039cac
nop	word ptr [rax + rax]
lea	r14, [rsp + 0xb0]
lea	rdx, [rbx + rbx]
mov	qword ptr [rsp + 0xb8], 0
lea	rax, [rsp + 0xc0]
mov	rcx, r14
mov	byte ptr [rsp + 0xc0], 0
mov	qword ptr [rsp + 0x78], rax
mov	qword ptr [rsp + 0xb0], rax
call	0x14009f7e0
call	0x14009f7e0
mov	eax, dword ptr [rsi + 0x58]
mov	r13d, ebx
sub	r13d, eax
test	r13d, r13d
jle	0x140039e0d
jle	0x140039e0d
test	eax, eax
mov	r8, qword ptr [rsp + 0xb8]
cmovs	r13d, ebx
cmp	qword ptr [rsi + 0x18], 0
je	0x14003a320
je	0x14003a320
mov	dword ptr [rsp + 0x20], 0
lea	r9d, [r13 + r13]
xor	edx, edx
mov	rcx, r14
movsxd	r9, r9d
call	0x14009d910
call	0x14009d910
movsxd	rax, r13d
mov	r9, qword ptr [rsi + 0x18]
mov	r8, qword ptr [rsi + 0x10]
add	rax, rdi
movsx	edx, byte ptr [rsi + 0x22]
mov	qword ptr [rsp + 0x20], rdi
mov	qword ptr [rsp + 0x28], rax
mov	rcx, qword ptr [rsp + 0xb0]
call	0x1400aca30
call	0x1400aca30
mov	r9, qword ptr [rsp + 0xb8]
mov	r8, rax
sub	r8, qword ptr [rsp + 0xb0]
cmp	r9, r8
jb	0x14003a435
jb	0x14003a435
mov	qword ptr [rsp + 0xb8], r8
mov	byte ptr [rax], 0
mov	eax, dword ptr [rsi + 0x58]
mov	rdx, qword ptr [rsp + 0xb8]
mov	qword ptr [rsp + 0x58], rdx
test	eax, eax
jg	0x14003a1a8
jg	0x14003a1a8
mov	eax, dword ptr [rbp + 0x18]
mov	rcx, qword ptr [rsp + 0x40]
mov	edi, eax
and	edi, 0xb0
mov	dword ptr [rsp + 0x88], edi
mov	rdi, qword ptr [rsp + 0x58]
add	rdi, rcx
mov	qword ptr [rsp + 0x60], rdi
test	ah, 2
jne	0x14003a150
jne	0x14003a150
mov	rdi, qword ptr [rsp + 0x60]
lea	rax, [rsp + 0xe0]
lea	rcx, [rsp + 0xd0]
mov	qword ptr [rsp + 0xd8], 0
mov	qword ptr [rsp + 0x58], rcx
lea	rdx, [rdi + rdi]
mov	qword ptr [rsp + 0x70], rax
mov	qword ptr [rsp + 0xd0], rax
mov	byte ptr [rsp + 0xe0], 0
call	0x14009f7e0
call	0x14009f7e0
mov	rax, qword ptr [rbp + 0x10]
cmp	dword ptr [rsp + 0x88], 0x10
lea	rbx, [rsp + 0xac]
lea	r13, [rip + 0x7fa96]
sete	dl
cmp	rdi, rax
mov	qword ptr [rsp + 0x68], rax
mov	rdi, qword ptr [rsp + 0xd8]
setb	al
and	edx, eax
mov	byte ptr [rsp + 0x8e], dl
cmp	byte ptr [rbx], 4
ja	0x14003a070
ja	0x14003a070
movzx	eax, byte ptr [rbx]
movsxd	rax, dword ptr [r13 + rax*4]
add	rax, r13
jmp	rax
jmp	rax
nop	dword ptr [rax + rax]
cmp	qword ptr [rsp + 0x40], 0
je	0x14003a070
je	0x14003a070
mov	rax, qword ptr [rsp + 0x50]
mov	rdx, qword ptr [rsp + 0x70]
movzx	eax, byte ptr [rax]
mov	byte ptr [rsp + 0x8f], al
lea	rax, [rdi + 1]
mov	qword ptr [rsp + 0x80], rax
mov	rax, qword ptr [rsp + 0xd0]
cmp	rax, rdx
je	0x14003a413
je	0x14003a413
mov	rdx, qword ptr [rsp + 0xe0]
mov	rcx, qword ptr [rsp + 0x80]
cmp	rdx, rcx
jb	0x14003a384
jb	0x14003a384
movzx	edx, byte ptr [rsp + 0x8f]
jmp	0x140039fd5
jmp	0x140039fd5
nop	dword ptr [rax + rax]
test	byte ptr [rbp + 0x19], 2
je	0x14003a070
je	0x14003a070
movabs	rax, 0x3fffffffffffffff
mov	r8, qword ptr [rsi + 0x30]
mov	rdx, qword ptr [rsi + 0x28]
sub	rax, rdi
cmp	rax, r8
jae	0x14003a05e
jae	0x14003a05e
lea	rcx, [rip + 0x7f923]
call	0x1400b3ba0
call	0x1400b3ba0
nop	dword ptr [rax]
cmp	byte ptr [rsp + 0x8e], 0
jne	0x14003a00a
jne	0x14003a00a
lea	rax, [rdi + 1]
mov	rcx, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x80], rax
mov	rax, qword ptr [rsp + 0xd0]
cmp	rax, rcx
je	0x14003a409
je	0x14003a409
mov	rdx, qword ptr [rsp + 0xe0]
mov	rcx, qword ptr [rsp + 0x80]
cmp	rdx, rcx
jb	0x14003a3d6
jb	0x14003a3d6
movzx	edx, byte ptr [rsp + 0x8d]
mov	byte ptr [rax + rdi], dl
mov	rdi, qword ptr [rsp + 0x80]
mov	rax, qword ptr [rsp + 0xd0]
mov	qword ptr [rsp + 0xd8], rdi
mov	byte ptr [rax + rdi], 0
mov	rdi, qword ptr [rsp + 0xd8]
jmp	0x14003a070
jmp	0x14003a070
nop	
cmp	byte ptr [rsp + 0x8e], 0
je	0x14003a070
je	0x14003a070
mov	r9, qword ptr [rsp + 0x68]
mov	rcx, qword ptr [rsp + 0x58]
xor	r8d, r8d
mov	rdx, rdi
movsx	eax, byte ptr [rsp + 0x8d]
mov	dword ptr [rsp + 0x20], eax
mov	rax, qword ptr [rsp + 0x60]
sub	r9, rax
call	0x14009d910
call	0x14009d910
jmp	0x14003a068
jmp	0x14003a068
nop	dword ptr [rax]
mov	r8, qword ptr [rsp + 0xb8]
mov	rdx, qword ptr [rsp + 0xb0]
movabs	rax, 0x3fffffffffffffff
sub	rax, rdi
cmp	rax, r8
jb	0x14003a448
jb	0x14003a448
mov	rcx, qword ptr [rsp + 0x58]
call	0x14009f920
call	0x14009f920
mov	rdi, qword ptr [rsp + 0xd8]
add	rbx, 1
cmp	rbx, r14
jne	0x140039ecd
jne	0x140039ecd
mov	rax, qword ptr [rsp + 0x40]
cmp	rax, 1
ja	0x14003a168
ja	0x14003a168
mov	rax, qword ptr [rsp + 0x68]
mov	rbx, rdi
cmp	rdi, rax
jae	0x14003a0cd
jae	0x14003a0cd
mov	r9, rax
movsx	eax, byte ptr [rsp + 0x4c]
mov	r8d, 0
sub	r9, rdi
cmp	dword ptr [rsp + 0x88], 0x20
mov	dword ptr [rsp + 0x20], eax
je	0x14003a254
je	0x14003a254
mov	rcx, qword ptr [rsp + 0x58]
xor	edx, edx
call	0x14009d910
call	0x14009d910
mov	rbx, qword ptr [rsp + 0x68]
mov	rdx, qword ptr [rsp + 0xd0]
mov	esi, r12d
movsxd	rbx, ebx
test	r12b, r12b
jne	0x14003a101
jne	0x14003a101
mov	rcx, qword ptr [rsp + 0x38]
mov	r8, rbx
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	rbx, rax
mov	eax, 1
mov	rdx, qword ptr [rsp + 0xd0]
cmovne	esi, eax
movzx	eax, sil
mov	rsi, qword ptr [rsp + 0x38]
mov	qword ptr [rsp + 0x98], rax
mov	r12b, al
mov	rax, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x90], rsi
cmp	rdx, rax
je	0x14003a12f
je	0x14003a12f
mov	rcx, rdx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, qword ptr [rsp + 0xb0]
mov	rax, qword ptr [rsp + 0x78]
cmp	rcx, rax
je	0x140039cd7
je	0x140039cd7
call	0x1400b2be0
call	0x1400b2be0
jmp	0x140039cd7
jmp	0x140039cd7
nop	
mov	rax, qword ptr [rsi + 0x30]
add	rdi, rax
mov	qword ptr [rsp + 0x60], rdi
jmp	0x140039e4f
jmp	0x140039e4f
nop	dword ptr [rax]
mov	r8, rax
mov	rdx, qword ptr [rsp + 0x50]
movabs	rax, 0x3fffffffffffffff
sub	r8, 1
sub	rax, rdi
add	rdx, 1
cmp	rax, r8
jb	0x14003a429
jb	0x14003a429
mov	rcx, qword ptr [rsp + 0x58]
call	0x14009f920
call	0x14009f920
mov	rdi, qword ptr [rsp + 0xd8]
jmp	0x14003a08c
jmp	0x14003a08c
nop	dword ptr [rax]
movzx	eax, byte ptr [rsi + 0x21]
mov	rcx, qword ptr [rsp + 0x78]
mov	byte ptr [rsp + 0x68], al
lea	rax, [rdx + 1]
mov	qword ptr [rsp + 0x60], rax
mov	rax, qword ptr [rsp + 0xb0]
cmp	rax, rcx
je	0x14003a3ff
je	0x14003a3ff
mov	rdx, qword ptr [rsp + 0xc0]
mov	rcx, qword ptr [rsp + 0x60]
cmp	rdx, rcx
jb	0x14003a3ad
jb	0x14003a3ad
mov	rdx, qword ptr [rsp + 0x58]
movzx	ecx, byte ptr [rsp + 0x68]
mov	byte ptr [rax + rdx], cl
mov	rax, qword ptr [rsp + 0x60]
mov	qword ptr [rsp + 0xb8], rax
mov	rax, qword ptr [rsp + 0xb0]
mov	byte ptr [rax + rdx + 1], 0
test	r13d, r13d
js	0x14003a33d
js	0x14003a33d
movsxd	r8, dword ptr [rsi + 0x58]
movsxd	rdx, r13d
movabs	rax, 0x3fffffffffffffff
sub	rax, qword ptr [rsp + 0xb8]
add	rdx, rdi
cmp	rax, r8
jb	0x14003a41d
jb	0x14003a41d
mov	rcx, r14
call	0x14009f920
call	0x14009f920
mov	rax, qword ptr [rsp + 0xb8]
mov	qword ptr [rsp + 0x58], rax
jmp	0x140039e22
jmp	0x140039e22
mov	rcx, qword ptr [rsp + 0x58]
mov	rdx, rdi
call	0x14009d910
call	0x14009d910
jmp	0x14003a0c8
jmp	0x14003a0c8
nop	word ptr cs:[rax + rax]
mov	ecx, 0x70
call	0x1400b2c30
call	0x1400b2c30
mov	rsi, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x84d25]
lea	rdx, [rbp + 0xd0]
mov	qword ptr [rsi + 0x10], 0
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rsi + 0x18], 0
mov	qword ptr [rsi], rax
xor	eax, eax
mov	byte ptr [rsi + 0x20], 0
mov	word ptr [rsi + 0x21], ax
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
mov	qword ptr [rsi + 0x38], 0
mov	qword ptr [rsi + 0x40], 0
mov	qword ptr [rsi + 0x48], 0
mov	qword ptr [rsi + 0x50], 0
mov	dword ptr [rsi + 0x58], 0
mov	qword ptr [rsi + 0x5c], 0
mov	byte ptr [rsi + 0x6f], 0
call	0x1400961b0
call	0x1400961b0
mov	rcx, qword ptr [rbp + 0xd0]
mov	rdx, rsi
mov	r8, rbx
call	0x140099d30
call	0x140099d30
mov	rsi, qword ptr [rdi]
jmp	0x140039c80
jmp	0x140039c80
nop	dword ptr [rax + rax]
movsxd	rax, r13d
mov	r9, rdi
xor	edx, edx
mov	rcx, r14
mov	qword ptr [rsp + 0x20], rax
call	0x14009cf70
call	0x14009cf70
mov	eax, dword ptr [rsi + 0x58]
jmp	0x140039e0d
jmp	0x140039e0d
movsx	eax, byte ptr [rsi + 0x65]
neg	r13d
xor	r8d, r8d
mov	rcx, r14
mov	rdx, qword ptr [rsp + 0xb8]
movsxd	r9, r13d
mov	dword ptr [rsp + 0x20], eax
call	0x14009d910
call	0x14009d910
movabs	rax, 0x3fffffffffffffff
sub	rax, qword ptr [rsp + 0xb8]
cmp	rax, rbx
jb	0x14003a459
jb	0x14003a459
mov	r8, rbx
mov	rdx, rdi
jmp	0x14003a23a
jmp	0x14003a23a
mov	rcx, qword ptr [rsp + 0x58]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0xd0]
jmp	0x140039f3e
jmp	0x140039f3e
mov	rdx, qword ptr [rsp + 0x58]
xor	r9d, r9d
xor	r8d, r8d
mov	rcx, r14
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0xb0]
jmp	0x14003a1e5
jmp	0x14003a1e5
mov	rcx, qword ptr [rsp + 0x58]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0xd0]
jmp	0x140039fcd
jmp	0x140039fcd
mov	edx, 0xf
jmp	0x14003a1d7
jmp	0x14003a1d7
mov	edx, 0xf
jmp	0x140039fbc
jmp	0x140039fbc
mov	edx, 0xf
jmp	0x140039f2d
jmp	0x140039f2d
lea	rcx, [rip + 0x7f47e]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rcx, [rip + 0x7f472]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rdx, [rip + 0x7f4a8]
lea	rcx, [rip + 0x7f4b5]
call	0x1400aed20
call	0x1400aed20
lea	rcx, [rip + 0x7f453]
call	0x1400b3ba0
call	0x1400b3ba0
call	0x1400b3a30
call	0x1400b3a30
lea	rcx, [rip + 0x7f442]
call	0x1400b3ba0
call	0x1400b3ba0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x14003a476
jmp	0x14003a476
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x14003a4a7
jmp	0x14003a4a7
mov	rcx, qword ptr [rsp + 0x58]
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, r14
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xf8
mov	rax, qword ptr [r8]
mov	r12, qword ptr [r8 + 8]
mov	r13, qword ptr [rsp + 0x168]
mov	qword ptr [rsp + 0x38], rax
mov	r15, rcx
mov	eax, dword ptr [rsp + 0x160]
mov	rbp, r9
mov	rcx, qword ptr [rip + 0x843d5]
mov	dword ptr [rsp + 0x4c], eax
mov	byte ptr [rsp + 0x8d], al
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r14, qword ptr [rax + rdx*8]
test	r14, r14
je	0x14003ad24
je	0x14003ad24
lea	rcx, [rip + 0x7ce83]
call	0x140022a70
call	0x140022a70
mov	rbx, rax
mov	rax, qword ptr [rbp + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	rdi, [rax + rbx*8]
mov	rsi, qword ptr [rdi]
test	rsi, rsi
je	0x14003ab40
je	0x14003ab40
mov	rdi, qword ptr [r13]
mov	rdx, qword ptr [r13 + 8]
movzx	eax, byte ptr [rsi + 0x64]
cmp	byte ptr [rdi], al
je	0x14003a5d8
je	0x14003a5d8
mov	eax, dword ptr [rsi + 0x5c]
mov	dword ptr [rsp + 0xac], eax
mov	rax, qword ptr [rsi + 0x38]
mov	qword ptr [rsp + 0x50], rax
mov	rax, qword ptr [rsi + 0x40]
mov	qword ptr [rsp + 0x40], rax
add	rdx, rdi
cmp	rdi, rdx
jae	0x14003a5a7
jae	0x14003a5a7
mov	rcx, qword ptr [r14 + 0x30]
mov	rbx, rdi
jmp	0x14003a599
jmp	0x14003a599
nop	dword ptr [rax]
add	rbx, 1
cmp	rdx, rbx
je	0x14003a5a2
je	0x14003a5a2
movzx	eax, byte ptr [rbx]
test	byte ptr [rcx + rax*2], 8
jne	0x14003a590
jne	0x14003a590
sub	rbx, rdi
jne	0x14003a608
jne	0x14003a608
mov	rax, qword ptr [rsp + 0x38]
mov	qword ptr [rbp + 0x10], 0
mov	qword ptr [r15 + 8], r12
mov	qword ptr [r15], rax
mov	rax, r15
add	rsp, 0xf8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, dword ptr [rsi + 0x60]
mov	dword ptr [rsp + 0xac], eax
mov	rax, qword ptr [rsi + 0x48]
mov	qword ptr [rsp + 0x50], rax
mov	rax, qword ptr [rsi + 0x50]
mov	qword ptr [rsp + 0x40], rax
test	rdx, rdx
je	0x14003a5a7
je	0x14003a5a7
add	rdi, 1
jmp	0x14003a57c
jmp	0x14003a57c
nop	word ptr [rax + rax]
lea	r14, [rsp + 0xb0]
lea	rdx, [rbx + rbx]
mov	qword ptr [rsp + 0xb8], 0
lea	rax, [rsp + 0xc0]
mov	rcx, r14
mov	byte ptr [rsp + 0xc0], 0
mov	qword ptr [rsp + 0x78], rax
mov	qword ptr [rsp + 0xb0], rax
call	0x14009f7e0
call	0x14009f7e0
mov	eax, dword ptr [rsi + 0x58]
mov	r13d, ebx
sub	r13d, eax
test	r13d, r13d
jle	0x14003a6dd
jle	0x14003a6dd
test	eax, eax
mov	r8, qword ptr [rsp + 0xb8]
cmovs	r13d, ebx
cmp	qword ptr [rsi + 0x18], 0
je	0x14003abf0
je	0x14003abf0
mov	dword ptr [rsp + 0x20], 0
lea	r9d, [r13 + r13]
xor	edx, edx
mov	rcx, r14
movsxd	r9, r9d
call	0x14009d910
call	0x14009d910
movsxd	rax, r13d
mov	r9, qword ptr [rsi + 0x18]
mov	r8, qword ptr [rsi + 0x10]
add	rax, rdi
movsx	edx, byte ptr [rsi + 0x22]
mov	qword ptr [rsp + 0x20], rdi
mov	qword ptr [rsp + 0x28], rax
mov	rcx, qword ptr [rsp + 0xb0]
call	0x1400aca30
call	0x1400aca30
mov	r9, qword ptr [rsp + 0xb8]
mov	r8, rax
sub	r8, qword ptr [rsp + 0xb0]
cmp	r9, r8
jb	0x14003ad05
jb	0x14003ad05
mov	qword ptr [rsp + 0xb8], r8
mov	byte ptr [rax], 0
mov	eax, dword ptr [rsi + 0x58]
mov	rdx, qword ptr [rsp + 0xb8]
mov	qword ptr [rsp + 0x58], rdx
test	eax, eax
jg	0x14003aa78
jg	0x14003aa78
mov	eax, dword ptr [rbp + 0x18]
mov	rcx, qword ptr [rsp + 0x40]
mov	edi, eax
and	edi, 0xb0
mov	dword ptr [rsp + 0x88], edi
mov	rdi, qword ptr [rsp + 0x58]
add	rdi, rcx
mov	qword ptr [rsp + 0x60], rdi
test	ah, 2
jne	0x14003aa20
jne	0x14003aa20
mov	rdi, qword ptr [rsp + 0x60]
lea	rax, [rsp + 0xe0]
lea	rcx, [rsp + 0xd0]
mov	qword ptr [rsp + 0xd8], 0
mov	qword ptr [rsp + 0x58], rcx
lea	rdx, [rdi + rdi]
mov	qword ptr [rsp + 0x70], rax
mov	qword ptr [rsp + 0xd0], rax
mov	byte ptr [rsp + 0xe0], 0
call	0x14009f7e0
call	0x14009f7e0
mov	rax, qword ptr [rbp + 0x10]
cmp	dword ptr [rsp + 0x88], 0x10
lea	rbx, [rsp + 0xac]
lea	r13, [rip + 0x7f1b2]
sete	dl
cmp	rdi, rax
mov	qword ptr [rsp + 0x68], rax
mov	rdi, qword ptr [rsp + 0xd8]
setb	al
and	edx, eax
mov	byte ptr [rsp + 0x8e], dl
cmp	byte ptr [rbx], 4
ja	0x14003a940
ja	0x14003a940
movzx	eax, byte ptr [rbx]
movsxd	rax, dword ptr [r13 + rax*4]
add	rax, r13
jmp	rax
jmp	rax
nop	dword ptr [rax + rax]
cmp	qword ptr [rsp + 0x40], 0
je	0x14003a940
je	0x14003a940
mov	rax, qword ptr [rsp + 0x50]
mov	rdx, qword ptr [rsp + 0x70]
movzx	eax, byte ptr [rax]
mov	byte ptr [rsp + 0x8f], al
lea	rax, [rdi + 1]
mov	qword ptr [rsp + 0x80], rax
mov	rax, qword ptr [rsp + 0xd0]
cmp	rax, rdx
je	0x14003ace3
je	0x14003ace3
mov	rdx, qword ptr [rsp + 0xe0]
mov	rcx, qword ptr [rsp + 0x80]
cmp	rdx, rcx
jb	0x14003ac54
jb	0x14003ac54
movzx	edx, byte ptr [rsp + 0x8f]
jmp	0x14003a8a5
jmp	0x14003a8a5
nop	dword ptr [rax + rax]
test	byte ptr [rbp + 0x19], 2
je	0x14003a940
je	0x14003a940
movabs	rax, 0x3fffffffffffffff
mov	r8, qword ptr [rsi + 0x30]
mov	rdx, qword ptr [rsi + 0x28]
sub	rax, rdi
cmp	rax, r8
jae	0x14003a92e
jae	0x14003a92e
lea	rcx, [rip + 0x7f053]
call	0x1400b3ba0
call	0x1400b3ba0
nop	dword ptr [rax]
cmp	byte ptr [rsp + 0x8e], 0
jne	0x14003a8da
jne	0x14003a8da
lea	rax, [rdi + 1]
mov	rcx, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x80], rax
mov	rax, qword ptr [rsp + 0xd0]
cmp	rax, rcx
je	0x14003acd9
je	0x14003acd9
mov	rdx, qword ptr [rsp + 0xe0]
mov	rcx, qword ptr [rsp + 0x80]
cmp	rdx, rcx
jb	0x14003aca6
jb	0x14003aca6
movzx	edx, byte ptr [rsp + 0x8d]
mov	byte ptr [rax + rdi], dl
mov	rdi, qword ptr [rsp + 0x80]
mov	rax, qword ptr [rsp + 0xd0]
mov	qword ptr [rsp + 0xd8], rdi
mov	byte ptr [rax + rdi], 0
mov	rdi, qword ptr [rsp + 0xd8]
jmp	0x14003a940
jmp	0x14003a940
nop	
cmp	byte ptr [rsp + 0x8e], 0
je	0x14003a940
je	0x14003a940
mov	r9, qword ptr [rsp + 0x68]
mov	rcx, qword ptr [rsp + 0x58]
xor	r8d, r8d
mov	rdx, rdi
movsx	eax, byte ptr [rsp + 0x8d]
mov	dword ptr [rsp + 0x20], eax
mov	rax, qword ptr [rsp + 0x60]
sub	r9, rax
call	0x14009d910
call	0x14009d910
jmp	0x14003a938
jmp	0x14003a938
nop	dword ptr [rax]
mov	r8, qword ptr [rsp + 0xb8]
mov	rdx, qword ptr [rsp + 0xb0]
movabs	rax, 0x3fffffffffffffff
sub	rax, rdi
cmp	rax, r8
jb	0x14003ad18
jb	0x14003ad18
mov	rcx, qword ptr [rsp + 0x58]
call	0x14009f920
call	0x14009f920
mov	rdi, qword ptr [rsp + 0xd8]
add	rbx, 1
cmp	rbx, r14
jne	0x14003a79d
jne	0x14003a79d
mov	rax, qword ptr [rsp + 0x40]
cmp	rax, 1
ja	0x14003aa38
ja	0x14003aa38
mov	rax, qword ptr [rsp + 0x68]
mov	rbx, rdi
cmp	rdi, rax
jae	0x14003a99d
jae	0x14003a99d
mov	r9, rax
movsx	eax, byte ptr [rsp + 0x4c]
mov	r8d, 0
sub	r9, rdi
cmp	dword ptr [rsp + 0x88], 0x20
mov	dword ptr [rsp + 0x20], eax
je	0x14003ab24
je	0x14003ab24
mov	rcx, qword ptr [rsp + 0x58]
xor	edx, edx
call	0x14009d910
call	0x14009d910
mov	rbx, qword ptr [rsp + 0x68]
mov	rdx, qword ptr [rsp + 0xd0]
mov	esi, r12d
movsxd	rbx, ebx
test	r12b, r12b
jne	0x14003a9d1
jne	0x14003a9d1
mov	rcx, qword ptr [rsp + 0x38]
mov	r8, rbx
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	rbx, rax
mov	eax, 1
mov	rdx, qword ptr [rsp + 0xd0]
cmovne	esi, eax
movzx	eax, sil
mov	rsi, qword ptr [rsp + 0x38]
mov	qword ptr [rsp + 0x98], rax
mov	r12b, al
mov	rax, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x90], rsi
cmp	rdx, rax
je	0x14003a9ff
je	0x14003a9ff
mov	rcx, rdx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, qword ptr [rsp + 0xb0]
mov	rax, qword ptr [rsp + 0x78]
cmp	rcx, rax
je	0x14003a5a7
je	0x14003a5a7
call	0x1400b2be0
call	0x1400b2be0
jmp	0x14003a5a7
jmp	0x14003a5a7
nop	
mov	rax, qword ptr [rsi + 0x30]
add	rdi, rax
mov	qword ptr [rsp + 0x60], rdi
jmp	0x14003a71f
jmp	0x14003a71f
nop	dword ptr [rax]
mov	r8, rax
mov	rdx, qword ptr [rsp + 0x50]
movabs	rax, 0x3fffffffffffffff
sub	r8, 1
sub	rax, rdi
add	rdx, 1
cmp	rax, r8
jb	0x14003acf9
jb	0x14003acf9
mov	rcx, qword ptr [rsp + 0x58]
call	0x14009f920
call	0x14009f920
mov	rdi, qword ptr [rsp + 0xd8]
jmp	0x14003a95c
jmp	0x14003a95c
nop	dword ptr [rax]
movzx	eax, byte ptr [rsi + 0x21]
mov	rcx, qword ptr [rsp + 0x78]
mov	byte ptr [rsp + 0x68], al
lea	rax, [rdx + 1]
mov	qword ptr [rsp + 0x60], rax
mov	rax, qword ptr [rsp + 0xb0]
cmp	rax, rcx
je	0x14003accf
je	0x14003accf
mov	rdx, qword ptr [rsp + 0xc0]
mov	rcx, qword ptr [rsp + 0x60]
cmp	rdx, rcx
jb	0x14003ac7d
jb	0x14003ac7d
mov	rdx, qword ptr [rsp + 0x58]
movzx	ecx, byte ptr [rsp + 0x68]
mov	byte ptr [rax + rdx], cl
mov	rax, qword ptr [rsp + 0x60]
mov	qword ptr [rsp + 0xb8], rax
mov	rax, qword ptr [rsp + 0xb0]
mov	byte ptr [rax + rdx + 1], 0
test	r13d, r13d
js	0x14003ac0d
js	0x14003ac0d
movsxd	r8, dword ptr [rsi + 0x58]
movsxd	rdx, r13d
movabs	rax, 0x3fffffffffffffff
sub	rax, qword ptr [rsp + 0xb8]
add	rdx, rdi
cmp	rax, r8
jb	0x14003aced
jb	0x14003aced
mov	rcx, r14
call	0x14009f920
call	0x14009f920
mov	rax, qword ptr [rsp + 0xb8]
mov	qword ptr [rsp + 0x58], rax
jmp	0x14003a6f2
jmp	0x14003a6f2
mov	rcx, qword ptr [rsp + 0x58]
mov	rdx, rdi
call	0x14009d910
call	0x14009d910
jmp	0x14003a998
jmp	0x14003a998
nop	word ptr cs:[rax + rax]
mov	ecx, 0x70
call	0x1400b2c30
call	0x1400b2c30
mov	rsi, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x84465]
lea	rdx, [rbp + 0xd0]
mov	qword ptr [rsi + 0x10], 0
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rsi + 0x18], 0
mov	qword ptr [rsi], rax
xor	eax, eax
mov	byte ptr [rsi + 0x20], 0
mov	word ptr [rsi + 0x21], ax
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
mov	qword ptr [rsi + 0x38], 0
mov	qword ptr [rsi + 0x40], 0
mov	qword ptr [rsi + 0x48], 0
mov	qword ptr [rsi + 0x50], 0
mov	dword ptr [rsi + 0x58], 0
mov	qword ptr [rsi + 0x5c], 0
mov	byte ptr [rsi + 0x6f], 0
call	0x1400969b0
call	0x1400969b0
mov	rcx, qword ptr [rbp + 0xd0]
mov	rdx, rsi
mov	r8, rbx
call	0x140099d30
call	0x140099d30
mov	rsi, qword ptr [rdi]
jmp	0x14003a550
jmp	0x14003a550
nop	dword ptr [rax + rax]
movsxd	rax, r13d
mov	r9, rdi
xor	edx, edx
mov	rcx, r14
mov	qword ptr [rsp + 0x20], rax
call	0x14009cf70
call	0x14009cf70
mov	eax, dword ptr [rsi + 0x58]
jmp	0x14003a6dd
jmp	0x14003a6dd
movsx	eax, byte ptr [rsi + 0x65]
neg	r13d
xor	r8d, r8d
mov	rcx, r14
mov	rdx, qword ptr [rsp + 0xb8]
movsxd	r9, r13d
mov	dword ptr [rsp + 0x20], eax
call	0x14009d910
call	0x14009d910
movabs	rax, 0x3fffffffffffffff
sub	rax, qword ptr [rsp + 0xb8]
cmp	rax, rbx
jb	0x14003ad29
jb	0x14003ad29
mov	r8, rbx
mov	rdx, rdi
jmp	0x14003ab0a
jmp	0x14003ab0a
mov	rcx, qword ptr [rsp + 0x58]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0xd0]
jmp	0x14003a80e
jmp	0x14003a80e
mov	rdx, qword ptr [rsp + 0x58]
xor	r9d, r9d
xor	r8d, r8d
mov	rcx, r14
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0xb0]
jmp	0x14003aab5
jmp	0x14003aab5
mov	rcx, qword ptr [rsp + 0x58]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0xd0]
jmp	0x14003a89d
jmp	0x14003a89d
mov	edx, 0xf
jmp	0x14003aaa7
jmp	0x14003aaa7
mov	edx, 0xf
jmp	0x14003a88c
jmp	0x14003a88c
mov	edx, 0xf
jmp	0x14003a7fd
jmp	0x14003a7fd
lea	rcx, [rip + 0x7ebae]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rcx, [rip + 0x7eba2]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rdx, [rip + 0x7ebd8]
lea	rcx, [rip + 0x7ebe5]
call	0x1400aed20
call	0x1400aed20
lea	rcx, [rip + 0x7eb83]
call	0x1400b3ba0
call	0x1400b3ba0
call	0x1400b3a30
call	0x1400b3a30
lea	rcx, [rip + 0x7eb72]
call	0x1400b3ba0
call	0x1400b3ba0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x14003ad46
jmp	0x14003ad46
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x14003ad77
jmp	0x14003ad77
mov	rcx, qword ptr [rsp + 0x58]
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, r14
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x58
lea	rsi, [rip + 0x113]
mov	rax, qword ptr [rdx]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
mov	r8, qword ptr [rsp + 0xa0]
mov	rax, qword ptr [rax + 0x18]
mov	rbx, rcx
mov	qword ptr [rsp + 0x40], r10
movzx	ecx, word ptr [rsp + 0x98]
mov	qword ptr [rsp + 0x48], r11
cmp	rax, rsi
jne	0x14003ae10
jne	0x14003ae10
test	r9b, r9b
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
mov	r9, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x40]
jne	0x14003ae00
jne	0x14003ae00
call	0x14003b100
call	0x14003b100
mov	rax, rbx
add	rsp, 0x58
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
call	0x14003b9f0
call	0x14003b9f0
mov	rax, rbx
add	rsp, 0x58
pop	rbx
pop	rsi
ret	
ret	
nop	
mov	rsi, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x30], r8
movzx	r9d, r9b
lea	r8, [rsp + 0x40]
mov	dword ptr [rsp + 0x28], ecx
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], rsi
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x58
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0xa0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
fld	xword ptr [rax]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
lea	rcx, [rsp + 0x40]
mov	qword ptr [rsp + 0x50], r10
movzx	r9d, r9b
mov	qword ptr [rsp + 0x30], rcx
movzx	ecx, word ptr [rsp + 0x98]
lea	r8, [rsp + 0x50]
fstp	xword ptr [rsp + 0x40]
mov	dword ptr [rsp + 0x28], ecx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x58], r11
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x40
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movzx	eax, word ptr [rsp + 0x78]
mov	rbx, rcx
test	r9b, r9b
mov	qword ptr [rsp + 0x30], r10
mov	r9, qword ptr [rsp + 0x70]
mov	rcx, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x38], r11
lea	r8, [rsp + 0x30]
mov	dword ptr [rsp + 0x20], eax
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, rbx
je	0x14003af00
je	0x14003af00
call	0x14003b9f0
call	0x14003b9f0
mov	rax, rbx
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
call	0x14003b100
call	0x14003b100
mov	rax, rbx
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0xb8
lea	rbp, [rsp + 0xa0]
movups	xmmword ptr [rbp], xmm6
mov	eax, dword ptr [rbp + 0x88]
movdqu	xmm6, xmmword ptr [r8]
mov	dword ptr [rbp - 0x68], eax
mov	rax, qword ptr [rbp + 0x90]
lea	r13, [rbp - 0x28]
mov	r15, rcx
mov	qword ptr [rbp + 0x68], rdx
mov	rcx, r13
fld	xword ptr [rax]
mov	rax, qword ptr [rbp + 0x80]
mov	dword ptr [rbp - 0x64], r9d
lea	rdx, [rax + 0xd0]
fstp	xword ptr [rbp - 0x60]
call	0x14009be20
call	0x14009be20
mov	rcx, qword ptr [rip + 0x8396b]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp - 0x28]
mov	rax, qword ptr [rax + 8]
mov	rdi, qword ptr [rax + rdx*8]
test	rdi, rdi
je	0x14003b0d7
je	0x14003b0d7
sub	rsp, 0x40
lea	rbx, [rsp + 0x30]
mov	r12, rbx
call	0x14009baf0
call	0x14009baf0
fld	xword ptr [rbp - 0x60]
lea	r14, [rbp - 0x40]
mov	qword ptr [rbp - 0x20], rax
lea	rsi, [rbp - 0x20]
lea	r9, [rip + 0x7ed2f]
mov	r8d, 0x40
mov	rdx, rbx
mov	rcx, rsi
fstp	xword ptr [rbp - 0x40]
mov	qword ptr [rsp + 0x28], r14
mov	dword ptr [rsp + 0x20], 0
call	0x1400ad890
call	0x1400ad890
cmp	eax, 0x3f
jg	0x14003b080
jg	0x14003b080
movsxd	rbx, eax
lea	r14, [rbp - 0x10]
xor	r8d, r8d
mov	rcx, rsi
mov	rdx, rbx
mov	qword ptr [rbp - 0x20], r14
call	0x1400a1290
call	0x1400a1290
mov	rax, qword ptr [rdi]
mov	r9, qword ptr [rbp - 0x20]
lea	r8, [r12 + rbx]
mov	rdx, r12
mov	rcx, rdi
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
movzx	eax, word ptr [rbp - 0x68]
cmp	byte ptr [rbp - 0x64], 0
movups	xmmword ptr [rbp - 0x50], xmm6
lea	r8, [rbp - 0x50]
mov	qword ptr [rsp + 0x28], rsi
mov	rcx, r15
mov	dword ptr [rsp + 0x20], eax
mov	r9, qword ptr [rbp + 0x80]
mov	rdx, qword ptr [rbp + 0x68]
jne	0x14003b070
jne	0x14003b070
call	0x14003b100
call	0x14003b100
mov	rcx, qword ptr [rbp - 0x20]
cmp	rcx, r14
je	0x14003b04c
je	0x14003b04c
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, r13
call	0x14009bf30
call	0x14009bf30
nop	
movups	xmm6, xmmword ptr [rbp]
mov	rax, r15
lea	rsp, [rbp + 0x18]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax]
call	0x14003b9f0
call	0x14003b9f0
jmp	0x14003b03e
jmp	0x14003b03e
nop	word ptr [rax + rax]
add	eax, 1
mov	dword ptr [rbp - 0x6c], eax
cdqe	
add	rax, 0xf
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
lea	rbx, [rsp + 0x30]
mov	r12, rbx
call	0x14009baf0
call	0x14009baf0
fld	xword ptr [rbp - 0x60]
mov	qword ptr [rbp - 0x20], rax
mov	rdx, rbx
mov	rcx, rsi
lea	r9, [rip + 0x7ec2f]
fstp	xword ptr [rbp - 0x40]
mov	qword ptr [rsp + 0x28], r14
mov	dword ptr [rsp + 0x20], 0
mov	r8d, dword ptr [rbp - 0x6c]
call	0x1400ad890
call	0x1400ad890
jmp	0x14003afe3
jmp	0x14003afe3
call	0x1400b3a30
call	0x1400b3a30
mov	rcx, rsi
mov	rbx, rax
call	0x1400a1050
call	0x1400a1050
mov	rcx, r13
call	0x14009bf30
call	0x14009bf30
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x14003b0e7
jmp	0x14003b0e7
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xf8
mov	rax, qword ptr [r8]
mov	rbp, qword ptr [r8 + 8]
mov	r13, qword ptr [rsp + 0x168]
mov	qword ptr [rsp + 0x38], rax
mov	r15, rcx
mov	eax, dword ptr [rsp + 0x160]
mov	rsi, r9
mov	rcx, qword ptr [rip + 0x837a5]
mov	dword ptr [rsp + 0x54], eax
mov	word ptr [rsp + 0x52], ax
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsi + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r12, qword ptr [rax + rdx*8]
test	r12, r12
je	0x14003b954
je	0x14003b954
lea	rcx, [rip + 0x7c255]
call	0x140022a70
call	0x140022a70
mov	rdi, rax
mov	rax, qword ptr [rsi + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	r14, [rax + rdi*8]
mov	rbx, qword ptr [r14]
test	rbx, rbx
je	0x14003b778
je	0x14003b778
mov	rdi, qword ptr [r13]
mov	rax, qword ptr [r13 + 8]
movzx	edx, word ptr [rbx + 0x64]
cmp	word ptr [rdi], dx
je	0x14003b210
je	0x14003b210
mov	edx, dword ptr [rbx + 0x5c]
mov	rcx, qword ptr [rbx + 0x40]
mov	dword ptr [rsp + 0xac], edx
mov	rdx, qword ptr [rbx + 0x38]
mov	qword ptr [rsp + 0x40], rcx
mov	qword ptr [rsp + 0x58], rdx
mov	r10, qword ptr [r12]
mov	rcx, r12
lea	r9, [rdi + rax*2]
mov	r8, rdi
mov	edx, 8
call	qword ptr [r10 + 0x28]
call	qword ptr [r10 + 0x28]
sub	rax, rdi
mov	rcx, rax
sar	rcx, 1
mov	qword ptr [rsp + 0x48], rcx
jne	0x14003b240
jne	0x14003b240
mov	rax, qword ptr [rsp + 0x38]
mov	qword ptr [rsi + 0x10], 0
mov	qword ptr [r15 + 8], rbp
mov	qword ptr [r15], rax
mov	rax, r15
add	rsp, 0xf8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rbx + 0x60]
test	rax, rax
mov	dword ptr [rsp + 0xac], edx
mov	rdx, qword ptr [rbx + 0x48]
mov	qword ptr [rsp + 0x58], rdx
mov	rdx, qword ptr [rbx + 0x50]
mov	qword ptr [rsp + 0x40], rdx
lea	rdx, [rdi + 2]
cmovne	rdi, rdx
jmp	0x14003b1bb
jmp	0x14003b1bb
nop	dword ptr [rax]
lea	rdx, [rsp + 0xc0]
xor	r11d, r11d
lea	r14, [rsp + 0xb0]
mov	qword ptr [rsp + 0xb8], 0
mov	qword ptr [rsp + 0x78], rdx
mov	rcx, r14
mov	qword ptr [rsp + 0xb0], rdx
mov	rdx, rax
mov	word ptr [rsp + 0xc0], r11w
call	0x1400a3520
call	0x1400a3520
mov	rcx, qword ptr [rsp + 0x48]
mov	eax, dword ptr [rbx + 0x58]
mov	r13, qword ptr [rsp + 0xb8]
mov	r12d, ecx
sub	r12d, eax
test	r12d, r12d
jle	0x14003b339
jle	0x14003b339
test	eax, eax
cmovs	r12d, ecx
cmp	qword ptr [rbx + 0x18], 0
je	0x14003b828
je	0x14003b828
lea	eax, [r12 + r12]
mov	r8, r13
xor	edx, edx
mov	rcx, r14
mov	dword ptr [rsp + 0x20], 0
cdqe	
mov	r9, rax
mov	qword ptr [rsp + 0x60], rax
call	0x1400a1880
call	0x1400a1880
mov	rax, qword ptr [rsp + 0x60]
mov	r13, qword ptr [rsp + 0xb0]
mov	r9, qword ptr [rbx + 0x18]
mov	r8, qword ptr [rbx + 0x10]
add	rax, rdi
movzx	edx, word ptr [rbx + 0x24]
mov	qword ptr [rsp + 0x20], rdi
mov	rcx, r13
mov	qword ptr [rsp + 0x28], rax
call	0x1400acbc0
call	0x1400acbc0
mov	r9, qword ptr [rsp + 0xb8]
sub	rax, r13
mov	r8, rax
sar	r8, 1
mov	r13, r8
cmp	r9, r8
jb	0x14003b97d
jb	0x14003b97d
mov	rdx, qword ptr [rsp + 0xb0]
xor	r10d, r10d
mov	qword ptr [rsp + 0xb8], r8
mov	word ptr [rdx + rax], r10w
mov	eax, dword ptr [rbx + 0x58]
test	eax, eax
jg	0x14003b6c0
jg	0x14003b6c0
mov	eax, dword ptr [rsi + 0x18]
mov	edi, eax
and	edi, 0xb0
mov	dword ptr [rsp + 0x88], edi
mov	rdi, qword ptr [rsp + 0x40]
add	rdi, r13
mov	qword ptr [rsp + 0x60], rdi
test	ah, 2
jne	0x14003b668
jne	0x14003b668
mov	rdi, qword ptr [rsp + 0x60]
lea	rax, [rsp + 0xe0]
lea	rcx, [rsp + 0xd0]
xor	r8d, r8d
mov	qword ptr [rsp + 0x48], rcx
lea	rdx, [rdi + rdi]
mov	qword ptr [rsp + 0x70], rax
mov	qword ptr [rsp + 0xd0], rax
mov	qword ptr [rsp + 0xd8], 0
mov	word ptr [rsp + 0xe0], r8w
call	0x1400a3520
call	0x1400a3520
mov	rax, qword ptr [rsi + 0x10]
cmp	dword ptr [rsp + 0x88], 0x10
lea	r13, [rip + 0x7e910]
sete	dl
mov	r12, qword ptr [rsp + 0xd8]
cmp	rdi, rax
mov	qword ptr [rsp + 0x68], rax
lea	rdi, [rsp + 0xac]
setb	al
and	edx, eax
mov	byte ptr [rsp + 0x8d], dl
cmp	byte ptr [rdi], 4
ja	0x14003b588
ja	0x14003b588
movzx	eax, byte ptr [rdi]
movsxd	rax, dword ptr [r13 + rax*4]
add	rax, r13
jmp	rax
jmp	rax
nop	dword ptr [rax]
cmp	qword ptr [rsp + 0x40], 0
je	0x14003b588
je	0x14003b588
mov	rax, qword ptr [rsp + 0x58]
mov	rdx, qword ptr [rsp + 0x70]
movzx	eax, word ptr [rax]
mov	word ptr [rsp + 0x8e], ax
lea	rax, [r12 + 1]
mov	qword ptr [rsp + 0x80], rax
mov	rax, qword ptr [rsp + 0xd0]
cmp	rax, rdx
je	0x14003b94a
je	0x14003b94a
mov	rdx, qword ptr [rsp + 0xe0]
mov	rcx, qword ptr [rsp + 0x80]
cmp	rdx, rcx
jb	0x14003b8a0
jb	0x14003b8a0
movzx	edx, word ptr [rsp + 0x8e]
jmp	0x14003b4f3
jmp	0x14003b4f3
nop	dword ptr [rax]
test	byte ptr [rsi + 0x19], 2
je	0x14003b588
je	0x14003b588
movabs	rax, 0x1fffffffffffffff
mov	r8, qword ptr [rbx + 0x30]
mov	rdx, qword ptr [rbx + 0x28]
sub	rax, r12
cmp	rax, r8
jae	0x14003b576
jae	0x14003b576
lea	rcx, [rip + 0x7e793]
call	0x1400b3ba0
call	0x1400b3ba0
nop	dword ptr [rax]
cmp	byte ptr [rsp + 0x8d], 0
jne	0x14003b522
jne	0x14003b522
lea	rax, [r12 + 1]
mov	rcx, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x80], rax
mov	rax, qword ptr [rsp + 0xd0]
cmp	rax, rcx
je	0x14003b940
je	0x14003b940
mov	rdx, qword ptr [rsp + 0xe0]
mov	rcx, qword ptr [rsp + 0x80]
cmp	rdx, rcx
jb	0x14003b900
jb	0x14003b900
movzx	edx, word ptr [rsp + 0x52]
mov	word ptr [rax + r12*2], dx
mov	rdx, qword ptr [rsp + 0x80]
xor	ecx, ecx
mov	qword ptr [rsp + 0xd8], rdx
mov	word ptr [rax + r12*2 + 2], cx
mov	r12, rdx
jmp	0x14003b588
jmp	0x14003b588
nop	dword ptr [rax]
cmp	byte ptr [rsp + 0x8d], 0
je	0x14003b588
je	0x14003b588
movzx	eax, word ptr [rsp + 0x52]
mov	r9, qword ptr [rsp + 0x68]
xor	r8d, r8d
mov	rdx, r12
mov	rcx, qword ptr [rsp + 0x48]
mov	dword ptr [rsp + 0x20], eax
mov	rax, qword ptr [rsp + 0x60]
sub	r9, rax
call	0x1400a1880
call	0x1400a1880
jmp	0x14003b580
jmp	0x14003b580
nop	word ptr [rax + rax]
mov	r8, qword ptr [rsp + 0xb8]
mov	rdx, qword ptr [rsp + 0xb0]
movabs	rax, 0x1fffffffffffffff
sub	rax, r12
cmp	rax, r8
jb	0x14003b959
jb	0x14003b959
mov	rcx, qword ptr [rsp + 0x48]
call	0x1400a3660
call	0x1400a3660
mov	r12, qword ptr [rsp + 0xd8]
add	rdi, 1
cmp	rdi, r14
jne	0x14003b3eb
jne	0x14003b3eb
mov	rax, qword ptr [rsp + 0x40]
cmp	rax, 1
ja	0x14003b680
ja	0x14003b680
mov	rax, qword ptr [rsp + 0x68]
cmp	r12, rax
jae	0x14003b5e2
jae	0x14003b5e2
mov	r9, rax
movzx	eax, word ptr [rsp + 0x54]
mov	r8d, 0
sub	r9, r12
cmp	dword ptr [rsp + 0x88], 0x20
mov	dword ptr [rsp + 0x20], eax
je	0x14003b760
je	0x14003b760
mov	rcx, qword ptr [rsp + 0x48]
xor	edx, edx
call	0x1400a1880
call	0x1400a1880
mov	r12, qword ptr [rsp + 0x68]
mov	rdx, qword ptr [rsp + 0xd0]
mov	ebx, ebp
movsxd	r12, r12d
test	bpl, bpl
jne	0x14003b615
jne	0x14003b615
mov	rcx, qword ptr [rsp + 0x38]
mov	r8, r12
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	r12, rax
mov	eax, 1
mov	rdx, qword ptr [rsp + 0xd0]
cmovne	ebx, eax
movzx	eax, bl
mov	rbx, qword ptr [rsp + 0x38]
mov	qword ptr [rsp + 0x98], rax
mov	bpl, al
mov	rax, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x90], rbx
cmp	rdx, rax
je	0x14003b642
je	0x14003b642
mov	rcx, rdx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, qword ptr [rsp + 0xb0]
mov	rax, qword ptr [rsp + 0x78]
cmp	rcx, rax
je	0x14003b1e2
je	0x14003b1e2
call	0x1400b2be0
call	0x1400b2be0
jmp	0x14003b1e2
jmp	0x14003b1e2
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x30]
add	rdi, rax
mov	qword ptr [rsp + 0x60], rdi
jmp	0x14003b369
jmp	0x14003b369
nop	dword ptr [rax]
mov	r8, rax
mov	rdx, qword ptr [rsp + 0x58]
movabs	rax, 0x1fffffffffffffff
sub	r8, 1
sub	rax, r12
add	rdx, 2
cmp	rax, r8
jb	0x14003b971
jb	0x14003b971
mov	rcx, qword ptr [rsp + 0x48]
call	0x1400a3660
call	0x1400a3660
mov	r12, qword ptr [rsp + 0xd8]
jmp	0x14003b5a4
jmp	0x14003b5a4
nop	dword ptr [rax]
movzx	eax, word ptr [rbx + 0x22]
mov	rcx, qword ptr [rsp + 0x78]
mov	word ptr [rsp + 0x68], ax
lea	rax, [r13 + 1]
mov	qword ptr [rsp + 0x60], rax
mov	rax, qword ptr [rsp + 0xb0]
cmp	rax, rcx
je	0x14003b930
je	0x14003b930
mov	rdx, qword ptr [rsp + 0xc0]
mov	rcx, qword ptr [rsp + 0x60]
cmp	rdx, rcx
jb	0x14003b8d0
jb	0x14003b8d0
movzx	edx, word ptr [rsp + 0x68]
mov	rcx, qword ptr [rsp + 0x60]
xor	r9d, r9d
mov	word ptr [rax + r13*2], dx
mov	qword ptr [rsp + 0xb8], rcx
mov	word ptr [rax + r13*2 + 2], r9w
test	r12d, r12d
js	0x14003b850
js	0x14003b850
movabs	rax, 0x1fffffffffffffff
movsxd	r8, dword ptr [rbx + 0x58]
movsxd	r12, r12d
sub	rax, rcx
lea	rdx, [rdi + r12*2]
cmp	rax, r8
jb	0x14003b965
jb	0x14003b965
mov	rcx, r14
call	0x1400a3660
call	0x1400a3660
mov	r13, qword ptr [rsp + 0xb8]
jmp	0x14003b341
jmp	0x14003b341
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x48]
mov	rdx, r12
call	0x1400a1880
call	0x1400a1880
jmp	0x14003b5dd
jmp	0x14003b5dd
nop	word ptr [rax + rax]
mov	ecx, 0x80
call	0x1400b2c30
call	0x1400b2c30
mov	rbx, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x8383d]
lea	rdx, [rsi + 0xd0]
mov	qword ptr [rbx + 0x10], 0
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx + 0x18], 0
mov	qword ptr [rbx], rax
mov	byte ptr [rbx + 0x20], 0
mov	dword ptr [rbx + 0x22], 0
mov	qword ptr [rbx + 0x28], 0
mov	qword ptr [rbx + 0x30], 0
mov	qword ptr [rbx + 0x38], 0
mov	qword ptr [rbx + 0x40], 0
mov	qword ptr [rbx + 0x48], 0
mov	qword ptr [rbx + 0x50], 0
mov	dword ptr [rbx + 0x58], 0
mov	qword ptr [rbx + 0x5c], 0
mov	byte ptr [rbx + 0x7a], 0
call	0x1400971b0
call	0x1400971b0
mov	rcx, qword ptr [rsi + 0xd0]
mov	rdx, rbx
mov	r8, rdi
call	0x140099d30
call	0x140099d30
mov	rbx, qword ptr [r14]
jmp	0x14003b18e
jmp	0x14003b18e
nop	dword ptr [rax]
movsxd	rax, r12d
mov	r9, rdi
mov	r8, r13
xor	edx, edx
mov	qword ptr [rsp + 0x20], rax
mov	rcx, r14
call	0x1400a1070
call	0x1400a1070
mov	eax, dword ptr [rbx + 0x58]
mov	r13, qword ptr [rsp + 0xb8]
jmp	0x14003b339
jmp	0x14003b339
movzx	eax, word ptr [rbx + 0x66]
neg	r12d
mov	rdx, qword ptr [rsp + 0x60]
xor	r8d, r8d
movsxd	r9, r12d
mov	rcx, r14
mov	dword ptr [rsp + 0x20], eax
call	0x1400a1880
call	0x1400a1880
movabs	rax, 0x1fffffffffffffff
mov	rcx, qword ptr [rsp + 0x48]
sub	rax, qword ptr [rsp + 0xb8]
cmp	rax, rcx
jb	0x14003b990
jb	0x14003b990
mov	r8, qword ptr [rsp + 0x48]
mov	rdx, rdi
jmp	0x14003b748
jmp	0x14003b748
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x48]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, r12
mov	qword ptr [rsp + 0x20], 1
call	0x1400a3830
call	0x1400a3830
mov	rax, qword ptr [rsp + 0xd0]
jmp	0x14003b460
jmp	0x14003b460
nop	dword ptr [rax]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, r13
mov	rcx, r14
mov	qword ptr [rsp + 0x20], 1
call	0x1400a3830
call	0x1400a3830
mov	rax, qword ptr [rsp + 0xb0]
jmp	0x14003b6fe
jmp	0x14003b6fe
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x48]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, r12
mov	qword ptr [rsp + 0x20], 1
call	0x1400a3830
call	0x1400a3830
mov	rax, qword ptr [rsp + 0xd0]
jmp	0x14003b4ee
jmp	0x14003b4ee
nop	dword ptr [rax]
mov	edx, 7
jmp	0x14003b6f0
jmp	0x14003b6f0
nop	word ptr [rax + rax]
mov	edx, 7
jmp	0x14003b4dd
jmp	0x14003b4dd
mov	edx, 7
jmp	0x14003b44f
jmp	0x14003b44f
call	0x1400b3a30
call	0x1400b3a30
lea	rcx, [rip + 0x7e2d2]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rcx, [rip + 0x7e2c6]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rcx, [rip + 0x7e2ba]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rdx, [rip + 0x7e2f0]
lea	rcx, [rip + 0x7e2fd]
call	0x1400aed20
call	0x1400aed20
lea	rcx, [rip + 0x7e29b]
call	0x1400b3ba0
call	0x1400b3ba0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x14003b9ad
jmp	0x14003b9ad
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, qword ptr [rsp + 0x48]
mov	rbx, rax
call	0x1400a1050
call	0x1400a1050
mov	rcx, r14
call	0x1400a1050
call	0x1400a1050
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x14003b9d9
jmp	0x14003b9d9
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xf8
mov	rax, qword ptr [r8]
mov	rbp, qword ptr [r8 + 8]
mov	r13, qword ptr [rsp + 0x168]
mov	qword ptr [rsp + 0x38], rax
mov	r15, rcx
mov	eax, dword ptr [rsp + 0x160]
mov	rsi, r9
mov	rcx, qword ptr [rip + 0x82eb5]
mov	dword ptr [rsp + 0x54], eax
mov	word ptr [rsp + 0x52], ax
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsi + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r12, qword ptr [rax + rdx*8]
test	r12, r12
je	0x14003c244
je	0x14003c244
lea	rcx, [rip + 0x7b975]
call	0x140022a70
call	0x140022a70
mov	rdi, rax
mov	rax, qword ptr [rsi + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	r14, [rax + rdi*8]
mov	rbx, qword ptr [r14]
test	rbx, rbx
je	0x14003c068
je	0x14003c068
mov	rdi, qword ptr [r13]
mov	rax, qword ptr [r13 + 8]
movzx	edx, word ptr [rbx + 0x64]
cmp	word ptr [rdi], dx
je	0x14003bb00
je	0x14003bb00
mov	edx, dword ptr [rbx + 0x5c]
mov	rcx, qword ptr [rbx + 0x40]
mov	dword ptr [rsp + 0xac], edx
mov	rdx, qword ptr [rbx + 0x38]
mov	qword ptr [rsp + 0x40], rcx
mov	qword ptr [rsp + 0x58], rdx
mov	r10, qword ptr [r12]
mov	rcx, r12
lea	r9, [rdi + rax*2]
mov	r8, rdi
mov	edx, 8
call	qword ptr [r10 + 0x28]
call	qword ptr [r10 + 0x28]
sub	rax, rdi
mov	rcx, rax
sar	rcx, 1
mov	qword ptr [rsp + 0x48], rcx
jne	0x14003bb30
jne	0x14003bb30
mov	rax, qword ptr [rsp + 0x38]
mov	qword ptr [rsi + 0x10], 0
mov	qword ptr [r15 + 8], rbp
mov	qword ptr [r15], rax
mov	rax, r15
add	rsp, 0xf8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rbx + 0x60]
test	rax, rax
mov	dword ptr [rsp + 0xac], edx
mov	rdx, qword ptr [rbx + 0x48]
mov	qword ptr [rsp + 0x58], rdx
mov	rdx, qword ptr [rbx + 0x50]
mov	qword ptr [rsp + 0x40], rdx
lea	rdx, [rdi + 2]
cmovne	rdi, rdx
jmp	0x14003baab
jmp	0x14003baab
nop	dword ptr [rax]
lea	rdx, [rsp + 0xc0]
xor	r11d, r11d
lea	r14, [rsp + 0xb0]
mov	qword ptr [rsp + 0xb8], 0
mov	qword ptr [rsp + 0x78], rdx
mov	rcx, r14
mov	qword ptr [rsp + 0xb0], rdx
mov	rdx, rax
mov	word ptr [rsp + 0xc0], r11w
call	0x1400a3520
call	0x1400a3520
mov	rcx, qword ptr [rsp + 0x48]
mov	eax, dword ptr [rbx + 0x58]
mov	r13, qword ptr [rsp + 0xb8]
mov	r12d, ecx
sub	r12d, eax
test	r12d, r12d
jle	0x14003bc29
jle	0x14003bc29
test	eax, eax
cmovs	r12d, ecx
cmp	qword ptr [rbx + 0x18], 0
je	0x14003c118
je	0x14003c118
lea	eax, [r12 + r12]
mov	r8, r13
xor	edx, edx
mov	rcx, r14
mov	dword ptr [rsp + 0x20], 0
cdqe	
mov	r9, rax
mov	qword ptr [rsp + 0x60], rax
call	0x1400a1880
call	0x1400a1880
mov	rax, qword ptr [rsp + 0x60]
mov	r13, qword ptr [rsp + 0xb0]
mov	r9, qword ptr [rbx + 0x18]
mov	r8, qword ptr [rbx + 0x10]
add	rax, rdi
movzx	edx, word ptr [rbx + 0x24]
mov	qword ptr [rsp + 0x20], rdi
mov	rcx, r13
mov	qword ptr [rsp + 0x28], rax
call	0x1400acbc0
call	0x1400acbc0
mov	r9, qword ptr [rsp + 0xb8]
sub	rax, r13
mov	r8, rax
sar	r8, 1
mov	r13, r8
cmp	r9, r8
jb	0x14003c26d
jb	0x14003c26d
mov	rdx, qword ptr [rsp + 0xb0]
xor	r10d, r10d
mov	qword ptr [rsp + 0xb8], r8
mov	word ptr [rdx + rax], r10w
mov	eax, dword ptr [rbx + 0x58]
test	eax, eax
jg	0x14003bfb0
jg	0x14003bfb0
mov	eax, dword ptr [rsi + 0x18]
mov	edi, eax
and	edi, 0xb0
mov	dword ptr [rsp + 0x88], edi
mov	rdi, qword ptr [rsp + 0x40]
add	rdi, r13
mov	qword ptr [rsp + 0x60], rdi
test	ah, 2
jne	0x14003bf58
jne	0x14003bf58
mov	rdi, qword ptr [rsp + 0x60]
lea	rax, [rsp + 0xe0]
lea	rcx, [rsp + 0xd0]
xor	r8d, r8d
mov	qword ptr [rsp + 0x48], rcx
lea	rdx, [rdi + rdi]
mov	qword ptr [rsp + 0x70], rax
mov	qword ptr [rsp + 0xd0], rax
mov	qword ptr [rsp + 0xd8], 0
mov	word ptr [rsp + 0xe0], r8w
call	0x1400a3520
call	0x1400a3520
mov	rax, qword ptr [rsi + 0x10]
cmp	dword ptr [rsp + 0x88], 0x10
lea	r13, [rip + 0x7e00c]
sete	dl
mov	r12, qword ptr [rsp + 0xd8]
cmp	rdi, rax
mov	qword ptr [rsp + 0x68], rax
lea	rdi, [rsp + 0xac]
setb	al
and	edx, eax
mov	byte ptr [rsp + 0x8d], dl
cmp	byte ptr [rdi], 4
ja	0x14003be78
ja	0x14003be78
movzx	eax, byte ptr [rdi]
movsxd	rax, dword ptr [r13 + rax*4]
add	rax, r13
jmp	rax
jmp	rax
nop	dword ptr [rax]
cmp	qword ptr [rsp + 0x40], 0
je	0x14003be78
je	0x14003be78
mov	rax, qword ptr [rsp + 0x58]
mov	rdx, qword ptr [rsp + 0x70]
movzx	eax, word ptr [rax]
mov	word ptr [rsp + 0x8e], ax
lea	rax, [r12 + 1]
mov	qword ptr [rsp + 0x80], rax
mov	rax, qword ptr [rsp + 0xd0]
cmp	rax, rdx
je	0x14003c23a
je	0x14003c23a
mov	rdx, qword ptr [rsp + 0xe0]
mov	rcx, qword ptr [rsp + 0x80]
cmp	rdx, rcx
jb	0x14003c190
jb	0x14003c190
movzx	edx, word ptr [rsp + 0x8e]
jmp	0x14003bde3
jmp	0x14003bde3
nop	dword ptr [rax]
test	byte ptr [rsi + 0x19], 2
je	0x14003be78
je	0x14003be78
movabs	rax, 0x1fffffffffffffff
mov	r8, qword ptr [rbx + 0x30]
mov	rdx, qword ptr [rbx + 0x28]
sub	rax, r12
cmp	rax, r8
jae	0x14003be66
jae	0x14003be66
lea	rcx, [rip + 0x7dea3]
call	0x1400b3ba0
call	0x1400b3ba0
nop	dword ptr [rax]
cmp	byte ptr [rsp + 0x8d], 0
jne	0x14003be12
jne	0x14003be12
lea	rax, [r12 + 1]
mov	rcx, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x80], rax
mov	rax, qword ptr [rsp + 0xd0]
cmp	rax, rcx
je	0x14003c230
je	0x14003c230
mov	rdx, qword ptr [rsp + 0xe0]
mov	rcx, qword ptr [rsp + 0x80]
cmp	rdx, rcx
jb	0x14003c1f0
jb	0x14003c1f0
movzx	edx, word ptr [rsp + 0x52]
mov	word ptr [rax + r12*2], dx
mov	rdx, qword ptr [rsp + 0x80]
xor	ecx, ecx
mov	qword ptr [rsp + 0xd8], rdx
mov	word ptr [rax + r12*2 + 2], cx
mov	r12, rdx
jmp	0x14003be78
jmp	0x14003be78
nop	dword ptr [rax]
cmp	byte ptr [rsp + 0x8d], 0
je	0x14003be78
je	0x14003be78
movzx	eax, word ptr [rsp + 0x52]
mov	r9, qword ptr [rsp + 0x68]
xor	r8d, r8d
mov	rdx, r12
mov	rcx, qword ptr [rsp + 0x48]
mov	dword ptr [rsp + 0x20], eax
mov	rax, qword ptr [rsp + 0x60]
sub	r9, rax
call	0x1400a1880
call	0x1400a1880
jmp	0x14003be70
jmp	0x14003be70
nop	word ptr [rax + rax]
mov	r8, qword ptr [rsp + 0xb8]
mov	rdx, qword ptr [rsp + 0xb0]
movabs	rax, 0x1fffffffffffffff
sub	rax, r12
cmp	rax, r8
jb	0x14003c249
jb	0x14003c249
mov	rcx, qword ptr [rsp + 0x48]
call	0x1400a3660
call	0x1400a3660
mov	r12, qword ptr [rsp + 0xd8]
add	rdi, 1
cmp	rdi, r14
jne	0x14003bcdb
jne	0x14003bcdb
mov	rax, qword ptr [rsp + 0x40]
cmp	rax, 1
ja	0x14003bf70
ja	0x14003bf70
mov	rax, qword ptr [rsp + 0x68]
cmp	r12, rax
jae	0x14003bed2
jae	0x14003bed2
mov	r9, rax
movzx	eax, word ptr [rsp + 0x54]
mov	r8d, 0
sub	r9, r12
cmp	dword ptr [rsp + 0x88], 0x20
mov	dword ptr [rsp + 0x20], eax
je	0x14003c050
je	0x14003c050
mov	rcx, qword ptr [rsp + 0x48]
xor	edx, edx
call	0x1400a1880
call	0x1400a1880
mov	r12, qword ptr [rsp + 0x68]
mov	rdx, qword ptr [rsp + 0xd0]
mov	ebx, ebp
movsxd	r12, r12d
test	bpl, bpl
jne	0x14003bf05
jne	0x14003bf05
mov	rcx, qword ptr [rsp + 0x38]
mov	r8, r12
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	r12, rax
mov	eax, 1
mov	rdx, qword ptr [rsp + 0xd0]
cmovne	ebx, eax
movzx	eax, bl
mov	rbx, qword ptr [rsp + 0x38]
mov	qword ptr [rsp + 0x98], rax
mov	bpl, al
mov	rax, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x90], rbx
cmp	rdx, rax
je	0x14003bf32
je	0x14003bf32
mov	rcx, rdx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, qword ptr [rsp + 0xb0]
mov	rax, qword ptr [rsp + 0x78]
cmp	rcx, rax
je	0x14003bad2
je	0x14003bad2
call	0x1400b2be0
call	0x1400b2be0
jmp	0x14003bad2
jmp	0x14003bad2
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x30]
add	rdi, rax
mov	qword ptr [rsp + 0x60], rdi
jmp	0x14003bc59
jmp	0x14003bc59
nop	dword ptr [rax]
mov	r8, rax
mov	rdx, qword ptr [rsp + 0x58]
movabs	rax, 0x1fffffffffffffff
sub	r8, 1
sub	rax, r12
add	rdx, 2
cmp	rax, r8
jb	0x14003c261
jb	0x14003c261
mov	rcx, qword ptr [rsp + 0x48]
call	0x1400a3660
call	0x1400a3660
mov	r12, qword ptr [rsp + 0xd8]
jmp	0x14003be94
jmp	0x14003be94
nop	dword ptr [rax]
movzx	eax, word ptr [rbx + 0x22]
mov	rcx, qword ptr [rsp + 0x78]
mov	word ptr [rsp + 0x68], ax
lea	rax, [r13 + 1]
mov	qword ptr [rsp + 0x60], rax
mov	rax, qword ptr [rsp + 0xb0]
cmp	rax, rcx
je	0x14003c220
je	0x14003c220
mov	rdx, qword ptr [rsp + 0xc0]
mov	rcx, qword ptr [rsp + 0x60]
cmp	rdx, rcx
jb	0x14003c1c0
jb	0x14003c1c0
movzx	edx, word ptr [rsp + 0x68]
mov	rcx, qword ptr [rsp + 0x60]
xor	r9d, r9d
mov	word ptr [rax + r13*2], dx
mov	qword ptr [rsp + 0xb8], rcx
mov	word ptr [rax + r13*2 + 2], r9w
test	r12d, r12d
js	0x14003c140
js	0x14003c140
movabs	rax, 0x1fffffffffffffff
movsxd	r8, dword ptr [rbx + 0x58]
movsxd	r12, r12d
sub	rax, rcx
lea	rdx, [rdi + r12*2]
cmp	rax, r8
jb	0x14003c255
jb	0x14003c255
mov	rcx, r14
call	0x1400a3660
call	0x1400a3660
mov	r13, qword ptr [rsp + 0xb8]
jmp	0x14003bc31
jmp	0x14003bc31
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x48]
mov	rdx, r12
call	0x1400a1880
call	0x1400a1880
jmp	0x14003becd
jmp	0x14003becd
nop	word ptr [rax + rax]
mov	ecx, 0x80
call	0x1400b2c30
call	0x1400b2c30
mov	rbx, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x82f5d]
lea	rdx, [rsi + 0xd0]
mov	qword ptr [rbx + 0x10], 0
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx + 0x18], 0
mov	qword ptr [rbx], rax
mov	byte ptr [rbx + 0x20], 0
mov	dword ptr [rbx + 0x22], 0
mov	qword ptr [rbx + 0x28], 0
mov	qword ptr [rbx + 0x30], 0
mov	qword ptr [rbx + 0x38], 0
mov	qword ptr [rbx + 0x40], 0
mov	qword ptr [rbx + 0x48], 0
mov	qword ptr [rbx + 0x50], 0
mov	dword ptr [rbx + 0x58], 0
mov	qword ptr [rbx + 0x5c], 0
mov	byte ptr [rbx + 0x7a], 0
call	0x1400979c0
call	0x1400979c0
mov	rcx, qword ptr [rsi + 0xd0]
mov	rdx, rbx
mov	r8, rdi
call	0x140099d30
call	0x140099d30
mov	rbx, qword ptr [r14]
jmp	0x14003ba7e
jmp	0x14003ba7e
nop	dword ptr [rax]
movsxd	rax, r12d
mov	r9, rdi
mov	r8, r13
xor	edx, edx
mov	qword ptr [rsp + 0x20], rax
mov	rcx, r14
call	0x1400a1070
call	0x1400a1070
mov	eax, dword ptr [rbx + 0x58]
mov	r13, qword ptr [rsp + 0xb8]
jmp	0x14003bc29
jmp	0x14003bc29
movzx	eax, word ptr [rbx + 0x66]
neg	r12d
mov	rdx, qword ptr [rsp + 0x60]
xor	r8d, r8d
movsxd	r9, r12d
mov	rcx, r14
mov	dword ptr [rsp + 0x20], eax
call	0x1400a1880
call	0x1400a1880
movabs	rax, 0x1fffffffffffffff
mov	rcx, qword ptr [rsp + 0x48]
sub	rax, qword ptr [rsp + 0xb8]
cmp	rax, rcx
jb	0x14003c280
jb	0x14003c280
mov	r8, qword ptr [rsp + 0x48]
mov	rdx, rdi
jmp	0x14003c038
jmp	0x14003c038
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x48]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, r12
mov	qword ptr [rsp + 0x20], 1
call	0x1400a3830
call	0x1400a3830
mov	rax, qword ptr [rsp + 0xd0]
jmp	0x14003bd50
jmp	0x14003bd50
nop	dword ptr [rax]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, r13
mov	rcx, r14
mov	qword ptr [rsp + 0x20], 1
call	0x1400a3830
call	0x1400a3830
mov	rax, qword ptr [rsp + 0xb0]
jmp	0x14003bfee
jmp	0x14003bfee
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x48]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, r12
mov	qword ptr [rsp + 0x20], 1
call	0x1400a3830
call	0x1400a3830
mov	rax, qword ptr [rsp + 0xd0]
jmp	0x14003bdde
jmp	0x14003bdde
nop	dword ptr [rax]
mov	edx, 7
jmp	0x14003bfe0
jmp	0x14003bfe0
nop	word ptr [rax + rax]
mov	edx, 7
jmp	0x14003bdcd
jmp	0x14003bdcd
mov	edx, 7
jmp	0x14003bd3f
jmp	0x14003bd3f
call	0x1400b3a30
call	0x1400b3a30
lea	rcx, [rip + 0x7d9e2]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rcx, [rip + 0x7d9d6]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rcx, [rip + 0x7d9ca]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rdx, [rip + 0x7da00]
lea	rcx, [rip + 0x7da0d]
call	0x1400aed20
call	0x1400aed20
lea	rcx, [rip + 0x7d9ab]
call	0x1400b3ba0
call	0x1400b3ba0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x14003c29d
jmp	0x14003c29d
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, qword ptr [rsp + 0x48]
mov	rbx, rax
call	0x1400a1050
call	0x1400a1050
mov	rcx, r14
call	0x1400a1050
call	0x1400a1050
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x14003c2c9
jmp	0x14003c2c9
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rbx, qword ptr [rsp + 0x78]
mov	rdi, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x20], r8
mov	rsi, r9
lea	rcx, [rsp + 0x20]
mov	rax, r8
mov	qword ptr [rsp + 0x28], r9
cmp	r8, r9
je	0x14003c33d
je	0x14003c33d
cmp	rdi, rbx
je	0x14003c380
je	0x14003c380
mov	edx, 0x10ffff
call	0x140077a50
call	0x140077a50
mov	r8, qword ptr [rsp + 0x20]
cmp	eax, -2
je	0x14003c350
je	0x14003c350
cmp	eax, 0x10ffff
ja	0x14003c370
ja	0x14003c370
add	rbx, 4
mov	dword ptr [rbx - 4], eax
cmp	rsi, r8
jne	0x14003c30e
jne	0x14003c30e
mov	rax, rsi
cmp	rsi, rax
setne	al
movzx	eax, al
jmp	0x14003c355
jmp	0x14003c355
nop	dword ptr [rax + rax]
mov	eax, 1
mov	rdx, qword ptr [rsp + 0x70]
mov	qword ptr [rdx], r8
mov	rdx, qword ptr [rsp + 0x88]
mov	qword ptr [rdx], rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	eax, 2
jmp	0x14003c355
jmp	0x14003c355
nop	word ptr [rax + rax]
mov	rax, r8
mov	r8, qword ptr [rsp + 0x20]
cmp	rsi, rax
setne	al
movzx	eax, al
jmp	0x14003c355
jmp	0x14003c355
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rsp + 0x68]
mov	rdx, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x20], rax
mov	r10, r8
mov	qword ptr [rsp + 0x28], rdx
cmp	r8, r9
je	0x14003c424
je	0x14003c424
lea	rcx, [rsp + 0x20]
mov	edx, dword ptr [r10]
cmp	edx, 0x10ffff
ja	0x14003c3f0
ja	0x14003c3f0
call	0x140077e10
call	0x140077e10
test	al, al
je	0x14003c418
je	0x14003c418
add	r10, 4
cmp	r9, r10
jne	0x14003c3c5
jne	0x14003c3c5
mov	rax, qword ptr [rsp + 0x20]
xor	ecx, ecx
jmp	0x14003c3fa
jmp	0x14003c3fa
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x20]
mov	ecx, 2
mov	rdx, qword ptr [rsp + 0x60]
mov	qword ptr [rdx], r10
mov	rdx, qword ptr [rsp + 0x78]
mov	qword ptr [rdx], rax
mov	eax, ecx
add	rsp, 0x38
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x20]
mov	ecx, 1
jmp	0x14003c3fa
jmp	0x14003c3fa
xor	ecx, ecx
jmp	0x14003c3fa
jmp	0x14003c3fa
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rsp + 0x70]
lea	rbx, [rax - 1]
mov	qword ptr [rsp + 0x20], r8
mov	rsi, r8
mov	qword ptr [rsp + 0x28], r9
test	rax, rax
je	0x14003c490
je	0x14003c490
lea	rcx, [rsp + 0x20]
nop	word ptr cs:[rax + rax]
mov	edx, 0x10ffff
call	0x140077a50
call	0x140077a50
cmp	eax, 0x10ffff
setbe	dl
test	rbx, rbx
setne	al
sub	rbx, 1
test	dl, al
jne	0x14003c460
jne	0x14003c460
mov	eax, dword ptr [rsp + 0x20]
sub	eax, esi
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
xor	eax, eax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rbx, qword ptr [rsp + 0x78]
mov	rdi, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x20], r8
mov	rsi, r9
lea	rcx, [rsp + 0x20]
mov	rax, r8
mov	qword ptr [rsp + 0x28], r9
cmp	r8, r9
je	0x14003c4fd
je	0x14003c4fd
cmp	rdi, rbx
je	0x14003c540
je	0x14003c540
mov	edx, 0x10ffff
call	0x140077c30
call	0x140077c30
mov	r8, qword ptr [rsp + 0x20]
cmp	eax, -2
je	0x14003c510
je	0x14003c510
cmp	eax, 0x10ffff
ja	0x14003c530
ja	0x14003c530
add	rbx, 4
mov	dword ptr [rbx - 4], eax
cmp	rsi, r8
jne	0x14003c4ce
jne	0x14003c4ce
mov	rax, rsi
cmp	rsi, rax
setne	al
movzx	eax, al
jmp	0x14003c515
jmp	0x14003c515
nop	dword ptr [rax + rax]
mov	eax, 1
mov	rdx, qword ptr [rsp + 0x70]
mov	qword ptr [rdx], r8
mov	rdx, qword ptr [rsp + 0x88]
mov	qword ptr [rdx], rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	eax, 2
jmp	0x14003c515
jmp	0x14003c515
nop	word ptr [rax + rax]
mov	rax, r8
mov	r8, qword ptr [rsp + 0x20]
cmp	rsi, rax
setne	al
movzx	eax, al
jmp	0x14003c515
jmp	0x14003c515
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rsp + 0x68]
mov	rdx, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x20], rax
mov	r10, r8
mov	qword ptr [rsp + 0x28], rdx
cmp	r8, r9
je	0x14003c5e4
je	0x14003c5e4
lea	rcx, [rsp + 0x20]
mov	edx, dword ptr [r10]
cmp	edx, 0x10ffff
ja	0x14003c5b0
ja	0x14003c5b0
call	0x140077f50
call	0x140077f50
test	al, al
je	0x14003c5d8
je	0x14003c5d8
add	r10, 4
cmp	r9, r10
jne	0x14003c585
jne	0x14003c585
mov	rax, qword ptr [rsp + 0x20]
xor	ecx, ecx
jmp	0x14003c5ba
jmp	0x14003c5ba
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x20]
mov	ecx, 2
mov	rdx, qword ptr [rsp + 0x60]
mov	qword ptr [rdx], r10
mov	rdx, qword ptr [rsp + 0x78]
mov	qword ptr [rdx], rax
mov	eax, ecx
add	rsp, 0x38
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x20]
mov	ecx, 1
jmp	0x14003c5ba
jmp	0x14003c5ba
xor	ecx, ecx
jmp	0x14003c5ba
jmp	0x14003c5ba
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rsp + 0x70]
lea	rbx, [rax - 1]
mov	qword ptr [rsp + 0x20], r8
mov	rsi, r8
mov	qword ptr [rsp + 0x28], r9
test	rax, rax
je	0x14003c650
je	0x14003c650
lea	rcx, [rsp + 0x20]
nop	word ptr cs:[rax + rax]
mov	edx, 0x10ffff
call	0x140077c30
call	0x140077c30
cmp	eax, 0x10ffff
setbe	dl
test	rbx, rbx
setne	al
sub	rbx, 1
test	dl, al
jne	0x14003c620
jne	0x14003c620
mov	eax, dword ptr [rsp + 0x20]
sub	eax, esi
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
xor	eax, eax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rax], r8
mov	eax, 3
ret	
ret	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, qword ptr [rsp + 0x88]
mov	rbp, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], r8
mov	rsi, r8
mov	rdi, r9
lea	rcx, [rsp + 0x20]
mov	qword ptr [rsp + 0x28], r9
mov	rax, r8
cmp	r8, r9
je	0x14003c6e7
je	0x14003c6e7
cmp	rbp, rbx
je	0x14003c760
je	0x14003c760
mov	edx, 0x10ffff
call	0x140077a50
call	0x140077a50
cmp	eax, -2
je	0x14003c750
je	0x14003c750
cmp	eax, 0x10ffff
ja	0x14003c770
ja	0x14003c770
cmp	eax, 0xffff
ja	0x14003c6f8
ja	0x14003c6f8
mov	word ptr [rbx], ax
add	rbx, 2
mov	rsi, qword ptr [rsp + 0x20]
cmp	rdi, rsi
jne	0x14003c6a5
jne	0x14003c6a5
mov	rax, rdi
cmp	rdi, rax
setne	al
movzx	eax, al
jmp	0x14003c709
jmp	0x14003c709
nop	word ptr [rax + rax]
mov	rdx, rbp
sub	rdx, rbx
cmp	rdx, 2
ja	0x14003c730
ja	0x14003c730
mov	eax, 1
mov	rdx, qword ptr [rsp + 0x80]
mov	qword ptr [rdx], rsi
mov	rdx, qword ptr [rsp + 0x98]
mov	qword ptr [rdx], rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	edx, eax
and	ax, 0x3ff
add	rbx, 4
shr	edx, 0xa
sub	ax, 0x2400
sub	dx, 0x2840
mov	word ptr [rbx - 2], ax
mov	word ptr [rbx - 4], dx
jmp	0x14003c6da
jmp	0x14003c6da
mov	rsi, qword ptr [rsp + 0x20]
mov	eax, 1
jmp	0x14003c709
jmp	0x14003c709
nop	dword ptr [rax]
mov	rax, rsi
mov	rsi, qword ptr [rsp + 0x20]
jmp	0x14003c6e7
jmp	0x14003c6e7
nop	dword ptr [rax]
mov	rsi, qword ptr [rsp + 0x20]
mov	eax, 2
jmp	0x14003c709
jmp	0x14003c709
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rsp + 0x68]
mov	rdx, qword ptr [rsp + 0x70]
mov	rcx, r9
mov	qword ptr [rsp + 0x20], rax
mov	r10, r8
mov	qword ptr [rsp + 0x28], rdx
sub	rcx, r8
cmp	r8, r9
je	0x14003c864
je	0x14003c864
lea	rbx, [rsp + 0x20]
movzx	edx, word ptr [r10]
lea	eax, [rdx - 0xd800]
cmp	eax, 0x3ff
ja	0x14003c810
ja	0x14003c810
cmp	rcx, 2
jbe	0x14003c82f
jbe	0x14003c82f
movzx	eax, word ptr [r10 + 2]
lea	ecx, [rax - 0xdc00]
cmp	ecx, 0x3ff
ja	0x14003c858
ja	0x14003c858
shl	edx, 0xa
mov	rcx, rbx
mov	r11d, 2
lea	edx, [rax + rdx - 0x35fdc00]
call	0x140077e10
call	0x140077e10
test	al, al
je	0x14003c82f
je	0x14003c82f
lea	r10, [r10 + r11*2]
mov	rcx, r9
sub	rcx, r10
cmp	r9, r10
jne	0x14003c7b0
jne	0x14003c7b0
mov	rax, qword ptr [rsp + 0x20]
xor	ecx, ecx
jmp	0x14003c839
jmp	0x14003c839
nop	
lea	eax, [rdx - 0xdc00]
cmp	eax, 0x3ff
jbe	0x14003c858
jbe	0x14003c858
mov	rcx, rbx
mov	r11d, 1
call	0x140077e10
call	0x140077e10
test	al, al
jne	0x14003c7f6
jne	0x14003c7f6
mov	rax, qword ptr [rsp + 0x20]
mov	ecx, 1
mov	rdx, qword ptr [rsp + 0x60]
mov	qword ptr [rdx], r10
mov	rdx, qword ptr [rsp + 0x78]
mov	qword ptr [rdx], rax
mov	eax, ecx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x20]
mov	ecx, 2
jmp	0x14003c839
jmp	0x14003c839
xor	ecx, ecx
jmp	0x14003c839
jmp	0x14003c839
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	ebx, 1
mov	rdi, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x20], r8
mov	rbp, r8
mov	qword ptr [rsp + 0x28], r9
cmp	rdi, 1
jbe	0x14003c8e0
jbe	0x14003c8e0
xor	esi, esi
lea	rcx, [rsp + 0x20]
jmp	0x14003c8be
jmp	0x14003c8be
nop	dword ptr [rax]
cmp	eax, 0xffff
cmovbe	rbx, rsi
lea	rsi, [rbx + 1]
add	rbx, 2
cmp	rbx, rdi
jae	0x14003c8e0
jae	0x14003c8e0
mov	edx, 0x10ffff
call	0x140077a50
call	0x140077a50
cmp	eax, 0x10ffff
jbe	0x14003c8a8
jbe	0x14003c8a8
mov	rax, qword ptr [rsp + 0x20]
sub	eax, ebp
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
cmp	rdi, rbx
jne	0x14003c8cf
jne	0x14003c8cf
lea	rcx, [rsp + 0x20]
mov	edx, 0xffff
call	0x140077a50
call	0x140077a50
mov	rax, qword ptr [rsp + 0x20]
sub	eax, ebp
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rax], r8
mov	eax, 3
ret	
ret	
nop	
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, 4
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x48
mov	rax, qword ptr [rsp + 0x78]
mov	qword ptr [rsp + 0x30], rax
lea	rdx, [rsp + 0x30]
lea	rcx, [rsp + 0x20]
mov	rax, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x20], r8
mov	r8d, 0x10ffff
mov	qword ptr [rsp + 0x28], r9
mov	r9d, 1
mov	qword ptr [rsp + 0x38], rax
call	0x1400781f0
call	0x1400781f0
mov	rdx, qword ptr [rsp + 0x70]
mov	rcx, qword ptr [rsp + 0x20]
mov	qword ptr [rdx], rcx
mov	rdx, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x30]
mov	qword ptr [rdx], rcx
add	rsp, 0x48
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x58
mov	rax, qword ptr [rsp + 0x88]
mov	qword ptr [rsp + 0x40], rax
lea	rdx, [rsp + 0x40]
lea	rcx, [rsp + 0x30]
mov	rax, qword ptr [rsp + 0x90]
mov	dword ptr [rsp + 0x20], 0
mov	qword ptr [rsp + 0x30], r8
mov	r8d, 0x10ffff
mov	qword ptr [rsp + 0x38], r9
xor	r9d, r9d
mov	qword ptr [rsp + 0x48], rax
call	0x1400783e0
call	0x1400783e0
mov	rdx, qword ptr [rsp + 0x80]
mov	rcx, qword ptr [rsp + 0x30]
mov	qword ptr [rdx], rcx
mov	rdx, qword ptr [rsp + 0x98]
mov	rcx, qword ptr [rsp + 0x40]
mov	qword ptr [rdx], rcx
add	rsp, 0x58
ret	
ret	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	dword ptr [rsp + 0x20], 0
mov	rbx, r8
mov	r8, qword ptr [rsp + 0x60]
mov	rdx, r9
mov	rcx, rbx
mov	r9d, 0x10ffff
call	0x1400776b0
call	0x1400776b0
sub	eax, ebx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rax], r8
mov	eax, 3
ret	
ret	
nop	
nop	
mov	eax, 1
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, 1
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rsp + 0x28]
mov	rdx, qword ptr [rsp + 0x30]
mov	qword ptr [rax], r8
mov	rax, qword ptr [rsp + 0x40]
mov	qword ptr [rax], rdx
mov	eax, 3
ret	
ret	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rsp + 0x28]
sub	r9, r8
cmp	r9, rax
cmovbe	rax, r9
ret	
ret	
sub	rsp, 0x28
call	qword ptr [rip + 0xa9a16]
call	qword ptr [rip + 0xa9a16]
cmp	eax, 1
sete	al
movzx	eax, al
add	rsp, 0x28
ret	
ret	
add	rdx, 1
mov	rcx, rax
jne	0x14003cae6
jne	0x14003cae6
call	0x1400b2e40
call	0x1400b2e40
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
call	qword ptr [rip + 0xa99e6]
call	qword ptr [rip + 0xa99e6]
nop	
add	rsp, 0x28
ret	
ret	
add	rdx, 1
mov	rcx, rax
jne	0x14003cb0e
jne	0x14003cb0e
call	0x1400b2e40
call	0x1400b2e40
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	eax, dword ptr [rdx]
mov	rsi, qword ptr [rsp + 0x98]
mov	r12, qword ptr [rsp + 0xa0]
cmp	r8, r9
mov	dword ptr [rsp + 0x2c], eax
mov	rbp, rdx
mov	rbx, r8
mov	rdi, r9
setb	al
cmp	rsi, r12
jae	0x14003cbd0
jae	0x14003cbd0
test	al, al
je	0x14003cbd0
je	0x14003cbd0
lea	r13, [rsp + 0x2c]
jmp	0x14003cbae
jmp	0x14003cbae
nop	dword ptr [rax]
cmp	rax, -2
je	0x14003cc00
je	0x14003cc00
test	rax, rax
jne	0x14003cb91
jne	0x14003cb91
xor	eax, eax
mov	word ptr [rsi], ax
mov	eax, 1
add	rbx, rax
mov	edx, dword ptr [rsp + 0x2c]
add	rsi, 2
cmp	rbx, rdi
mov	dword ptr [rbp], edx
setb	al
cmp	rsi, r12
jae	0x14003cbd0
jae	0x14003cbd0
test	al, al
je	0x14003cbd0
je	0x14003cbd0
mov	r8, rdi
mov	r9, r13
mov	rdx, rbx
mov	rcx, rsi
sub	r8, rbx
call	0x140015660
call	0x140015660
cmp	rax, -1
jne	0x14003cb78
jne	0x14003cb78
mov	eax, 2
jmp	0x14003cbd3
jmp	0x14003cbd3
nop	
movzx	eax, al
mov	rdx, qword ptr [rsp + 0x90]
mov	qword ptr [rdx], rbx
mov	rdx, qword ptr [rsp + 0xa8]
mov	qword ptr [rdx], rsi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	eax, 1
jmp	0x14003cbd3
jmp	0x14003cbd3
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	eax, dword ptr [rdx]
mov	rsi, qword ptr [rsp + 0xa8]
mov	r12, qword ptr [rsp + 0xb0]
mov	rbp, r9
mov	r13, rdx
mov	rbx, r8
mov	dword ptr [rsp + 0x24], eax
call	qword ptr [rip + 0xa989b]
call	qword ptr [rip + 0xa989b]
mov	rdx, rbp
sub	rdx, rbx
cdqe	
sar	rdx, 1
imul	rdx, rax
mov	rax, r12
sub	rax, rsi
cmp	rdx, rax
jle	0x14003cd10
jle	0x14003cd10
cmp	rbx, rbp
setb	al
cmp	rsi, r12
jae	0x14003cce0
jae	0x14003cce0
test	al, al
je	0x14003cce0
je	0x14003cce0
lea	r15, [rsp + 0x24]
lea	r14, [rsp + 0x2b]
jmp	0x14003ccbb
jmp	0x14003ccbb
nop	
mov	rax, r12
sub	rax, rsi
cmp	rax, rdi
jb	0x14003cd58
jb	0x14003cd58
mov	rcx, rsi
mov	r8, rdi
mov	rdx, r14
add	rbx, 2
call	0x140015998
call	0x140015998
mov	eax, dword ptr [rsp + 0x24]
add	rsi, rdi
cmp	rbx, rbp
mov	dword ptr [r13], eax
setb	al
cmp	rsi, r12
jae	0x14003cce0
jae	0x14003cce0
test	al, al
je	0x14003cce0
je	0x14003cce0
movzx	edx, word ptr [rbx]
mov	r8, r15
mov	rcx, r14
call	0x1400153b0
call	0x1400153b0
mov	rdi, rax
cmp	rax, -1
jne	0x14003cc80
jne	0x14003cc80
mov	eax, 2
jmp	0x14003cce3
jmp	0x14003cce3
nop	dword ptr [rax]
and	eax, 1
mov	rdx, qword ptr [rsp + 0xa0]
mov	qword ptr [rdx], rbx
mov	rdx, qword ptr [rsp + 0xb8]
mov	qword ptr [rdx], rsi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
cmp	rbx, rbp
jae	0x14003cd50
jae	0x14003cd50
lea	r15, [rsp + 0x24]
jmp	0x14003cd34
jmp	0x14003cd34
nop	dword ptr [rax]
mov	edx, dword ptr [rsp + 0x24]
add	rbx, 2
add	rsi, rax
mov	dword ptr [r13], edx
cmp	rbx, rbp
jae	0x14003cd50
jae	0x14003cd50
movzx	edx, word ptr [rbx]
mov	r8, r15
mov	rcx, rsi
call	0x1400153b0
call	0x1400153b0
cmp	rax, -1
jne	0x14003cd20
jne	0x14003cd20
jmp	0x14003ccd2
jmp	0x14003ccd2
nop	word ptr [rax + rax]
xor	eax, eax
jmp	0x14003cce3
jmp	0x14003cce3
nop	dword ptr [rax]
mov	eax, 1
jmp	0x14003cce3
jmp	0x14003cce3
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
xor	edi, edi
mov	eax, dword ptr [rdx]
mov	r13, qword ptr [rsp + 0x90]
mov	dword ptr [rsp + 0x2c], eax
mov	rbp, rdx
mov	rbx, r8
mov	rsi, r9
cmp	r8, r9
jae	0x14003cddf
jae	0x14003cddf
test	r13, r13
je	0x14003cddf
je	0x14003cddf
lea	r12, [rsp + 0x2c]
jmp	0x14003cdc6
jmp	0x14003cdc6
nop	word ptr cs:[rax + rax]
test	rax, rax
mov	edx, 1
cmove	rax, rdx
mov	edx, dword ptr [rsp + 0x2c]
sub	r13, 1
add	rbx, rax
mov	dword ptr [rbp], edx
add	edi, eax
cmp	rbx, rsi
jae	0x14003cddf
jae	0x14003cddf
test	r13, r13
je	0x14003cddf
je	0x14003cddf
mov	r8, rsi
xor	ecx, ecx
mov	r9, r12
mov	rdx, rbx
sub	r8, rbx
call	0x140015660
call	0x140015660
cmp	rax, -3
jbe	0x14003cda0
jbe	0x14003cda0
mov	eax, edi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	
nop	
sub	rsp, 0x28
mov	rcx, rdx
mov	rdx, r8
call	0x1400159f0
call	0x1400159f0
mov	edx, eax
sar	eax, 0x1e
test	edx, edx
setne	dl
movzx	edx, dl
or	eax, edx
add	rsp, 0x28
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	rdi, [rsp + 0x3f]
mov	r12, rcx
mov	rcx, rdx
mov	rdx, r8
mov	r8, rdi
mov	rbx, r9
mov	qword ptr [rsp + 0x28], rdi
call	0x140071f50
call	0x140071f50
mov	rdx, qword ptr [rsp + 0xb0]
mov	r8, rdi
mov	rcx, rbx
mov	r13, rax
call	0x140071f50
call	0x140071f50
mov	rdi, qword ptr [r13 - 0x18]
mov	rbp, qword ptr [rax - 0x18]
mov	r14, rax
mov	rsi, rax
mov	rbx, r13
add	rdi, r13
add	rbp, rax
jmp	0x14003ce91
jmp	0x14003ce91
nop	dword ptr [rax]
cmp	rbp, rax
je	0x14003cf60
je	0x14003cf60
add	rbx, 1
lea	rsi, [rax + 1]
mov	r8, rsi
mov	rdx, rbx
mov	rcx, r12
call	0x14003cdf0
call	0x14003cdf0
mov	r15d, eax
test	eax, eax
jne	0x14003ced1
jne	0x14003ced1
mov	rcx, rbx
call	0x140015a08
call	0x140015a08
mov	rcx, rsi
add	rbx, rax
call	0x140015a08
call	0x140015a08
add	rax, rsi
cmp	rdi, rbx
jne	0x14003ce80
jne	0x14003ce80
cmp	rbp, rax
je	0x14003ced1
je	0x14003ced1
cmp	rdi, rbx
jne	0x14003ce80
jne	0x14003ce80
mov	r15d, 0xffffffff
mov	rbx, qword ptr [rip + 0x81758]
mov	edx, dword ptr [rbx]
test	edx, edx
jne	0x14003cf40
jne	0x14003cf40
mov	eax, dword ptr [r14 - 8]
lea	edx, [rax - 1]
mov	dword ptr [r14 - 8], edx
test	eax, eax
jle	0x14003cf4f
jle	0x14003cf4f
mov	eax, dword ptr [rbx]
test	eax, eax
jne	0x14003cf20
jne	0x14003cf20
mov	eax, dword ptr [r13 - 8]
lea	edx, [rax - 1]
mov	dword ptr [r13 - 8], edx
test	eax, eax
jle	0x14003cf2f
jle	0x14003cf2f
mov	eax, r15d
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [r13 - 8], eax
test	eax, eax
jg	0x14003cf02
jg	0x14003cf02
mov	rdx, qword ptr [rsp + 0x28]
lea	rcx, [r13 - 0x18]
call	0x140072480
call	0x140072480
jmp	0x14003cf02
jmp	0x14003cf02
nop	
mov	eax, 0xffffffff
lock xadd	dword ptr [r14 - 8], eax
test	eax, eax
jg	0x14003ceed
jg	0x14003ceed
mov	rdx, qword ptr [rsp + 0x28]
lea	rcx, [r14 - 0x18]
call	0x140072480
call	0x140072480
jmp	0x14003ceed
jmp	0x14003ceed
nop	
mov	r15d, 1
jmp	0x14003ced1
jmp	0x14003ced1
mov	rdx, qword ptr [rsp + 0x28]
mov	rbx, rax
lea	rcx, [r13 - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rcx, rdx
mov	rdx, r8
mov	r8, r9
jmp	0x140015a20
jmp	0x140015a20
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	rax, [rsp + 0x3f]
mov	rdi, rcx
mov	rbx, r8
xor	ecx, ecx
mov	r8, rax
mov	r13, rdx
xor	edx, edx
mov	rsi, r9
mov	r15, rax
mov	qword ptr [rsp + 0x28], rax
call	0x140071d40
call	0x140071d40
mov	r8, r15
mov	rdx, rsi
mov	rcx, rbx
mov	qword ptr [rdi], rax
call	0x140071f50
call	0x140071f50
sub	rsi, rbx
mov	r14, qword ptr [rax - 0x18]
mov	r15, rax
add	rsi, rsi
mov	rcx, rsi
add	r14, rax
call	0x1400b2c00
call	0x1400b2c00
mov	rbx, rax
mov	rbp, r15
jmp	0x14003d040
jmp	0x14003d040
nop	word ptr cs:[rax + rax]
mov	ecx, dword ptr [rax - 8]
test	ecx, ecx
jle	0x14003d029
jle	0x14003d029
mov	rdx, r12
mov	rcx, rdi
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rdi]
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], 0
mov	rax, qword ptr [rdi]
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], r12
mov	byte ptr [rax + r12], 0
mov	r8, rbp
mov	r9, rsi
mov	rdx, rbx
mov	rcx, r13
call	0x14003cf90
call	0x14003cf90
mov	r8, rax
cmp	rax, rsi
jb	0x14003d089
jb	0x14003d089
lea	rsi, [rax + 1]
test	rbx, rbx
je	0x14003d06a
je	0x14003d06a
mov	rcx, rbx
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rsi
call	0x1400b2c00
call	0x1400b2c00
mov	r8, rbp
mov	r9, rsi
mov	rdx, rax
mov	rcx, r13
mov	rbx, rax
call	0x14003cf90
call	0x14003cf90
mov	r8, rax
mov	rdx, rbx
mov	rcx, rdi
call	0x1400729e0
call	0x1400729e0
mov	rcx, rbp
call	0x140015a08
call	0x140015a08
add	rax, rbp
cmp	r14, rax
je	0x14003d0e0
je	0x14003d0e0
lea	rbp, [rax + 1]
mov	rax, qword ptr [rdi]
mov	rdx, qword ptr [rax - 0x18]
lea	r12, [rdx + 1]
cmp	qword ptr [rax - 0x10], r12
jb	0x14003d017
jb	0x14003d017
mov	rcx, qword ptr [rip + 0x8156c]
mov	r8d, dword ptr [rcx]
test	r8d, r8d
je	0x14003d010
je	0x14003d010
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x14003d017
jg	0x14003d017
jmp	0x14003d022
jmp	0x14003d022
test	rbx, rbx
je	0x14003d0ed
je	0x14003d0ed
mov	rcx, rbx
call	0x1400b2bd0
call	0x1400b2bd0
mov	rax, qword ptr [rip + 0x8153c]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14003d120
jne	0x14003d120
mov	eax, dword ptr [r15 - 8]
lea	edx, [rax - 1]
mov	dword ptr [r15 - 8], edx
test	eax, eax
jle	0x14003d12f
jle	0x14003d12f
mov	rax, rdi
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [r15 - 8], eax
test	eax, eax
jg	0x14003d109
jg	0x14003d109
mov	rdx, qword ptr [rsp + 0x28]
lea	rcx, [r15 - 0x18]
call	0x140072480
call	0x140072480
jmp	0x14003d109
jmp	0x14003d109
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
test	rbx, rbx
je	0x14003d154
je	0x14003d154
mov	rcx, rbx
call	0x1400b2bd0
call	0x1400b2bd0
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, qword ptr [rdi]
mov	rdx, qword ptr [rsp + 0x28]
sub	rcx, 0x18
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x14003d154
jmp	0x14003d154
mov	rbx, rax
jmp	0x14003d18c
jmp	0x14003d18c
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rdx, qword ptr [rsp + 0x28]
lea	rcx, [r15 - 0x18]
call	0x140072490
call	0x140072490
jmp	0x14003d15c
jmp	0x14003d15c
nop	
nop	
nop	
nop	
lea	r9, [rip + 0x49]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x20]
cmp	rax, r9
jne	0x14003d1d8
jne	0x14003d1d8
xor	eax, eax
cmp	rdx, r8
jae	0x14003d1d1
jae	0x14003d1d1
nop	word ptr [rax + rax]
movsx	ecx, byte ptr [rdx]
rol	eax, 7
add	rdx, 1
add	eax, ecx
cmp	r8, rdx
jne	0x14003d1c0
jne	0x14003d1c0
ret	
ret	
nop	word ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
jmp	qword ptr [rax + 0x10]
jmp	qword ptr [rax + 0x10]
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
cmp	rdx, r8
jae	0x14003d211
jae	0x14003d211
nop	word ptr [rax + rax]
movsx	ecx, byte ptr [rdx]
rol	eax, 7
add	rdx, 1
add	eax, ecx
cmp	r8, rdx
jne	0x14003d200
jne	0x14003d200
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx]
mov	rbx, rcx
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rcx, rdx
mov	rdx, r8
call	0x140015a50
call	0x140015a50
mov	edx, eax
sar	eax, 0x1e
test	edx, edx
setne	dl
movzx	edx, dl
or	eax, edx
add	rsp, 0x28
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	rdi, [rsp + 0x3f]
mov	r12, rcx
mov	rcx, rdx
mov	rdx, r8
mov	r8, rdi
mov	rbx, r9
mov	qword ptr [rsp + 0x28], rdi
call	0x140068a90
call	0x140068a90
mov	rdx, qword ptr [rsp + 0xb0]
mov	r8, rdi
mov	rcx, rbx
mov	r13, rax
call	0x140068a90
call	0x140068a90
mov	r14, rax
mov	rax, qword ptr [r13 - 0x18]
mov	rbx, r13
mov	rsi, r14
lea	rdi, [r13 + rax*2]
mov	rax, qword ptr [r14 - 0x18]
lea	rbp, [r14 + rax*2]
jmp	0x14003d2e1
jmp	0x14003d2e1
cmp	rbp, rsi
je	0x14003d3b0
je	0x14003d3b0
add	rbx, 2
add	rsi, 2
mov	r8, rsi
mov	rdx, rbx
mov	rcx, r12
call	0x14003d240
call	0x14003d240
mov	r15d, eax
test	eax, eax
jne	0x14003d323
jne	0x14003d323
mov	rcx, rbx
call	0x140015a60
call	0x140015a60
mov	rcx, rsi
lea	rbx, [rbx + rax*2]
call	0x140015a60
call	0x140015a60
lea	rsi, [rsi + rax*2]
cmp	rdi, rbx
jne	0x14003d2d0
jne	0x14003d2d0
cmp	rbp, rsi
je	0x14003d323
je	0x14003d323
cmp	rdi, rbx
jne	0x14003d2d0
jne	0x14003d2d0
mov	r15d, 0xffffffff
mov	rbx, qword ptr [rip + 0x81306]
mov	edx, dword ptr [rbx]
test	edx, edx
jne	0x14003d390
jne	0x14003d390
mov	eax, dword ptr [r14 - 8]
lea	edx, [rax - 1]
mov	dword ptr [r14 - 8], edx
test	eax, eax
jle	0x14003d39f
jle	0x14003d39f
mov	eax, dword ptr [rbx]
test	eax, eax
jne	0x14003d370
jne	0x14003d370
mov	eax, dword ptr [r13 - 8]
lea	edx, [rax - 1]
mov	dword ptr [r13 - 8], edx
test	eax, eax
jle	0x14003d37f
jle	0x14003d37f
mov	eax, r15d
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [r13 - 8], eax
test	eax, eax
jg	0x14003d354
jg	0x14003d354
mov	rdx, qword ptr [rsp + 0x28]
lea	rcx, [r13 - 0x18]
call	0x140068ef0
call	0x140068ef0
jmp	0x14003d354
jmp	0x14003d354
nop	
mov	eax, 0xffffffff
lock xadd	dword ptr [r14 - 8], eax
test	eax, eax
jg	0x14003d33f
jg	0x14003d33f
mov	rdx, qword ptr [rsp + 0x28]
lea	rcx, [r14 - 0x18]
call	0x140068ef0
call	0x140068ef0
jmp	0x14003d33f
jmp	0x14003d33f
nop	
mov	r15d, 1
jmp	0x14003d323
jmp	0x14003d323
mov	rdx, qword ptr [rsp + 0x28]
mov	rbx, rax
lea	rcx, [r13 - 0x18]
call	0x140068f00
call	0x140068f00
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rcx, rdx
mov	rdx, r8
mov	r8, r9
jmp	0x140015a68
jmp	0x140015a68
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	rax, [rsp + 0x3f]
mov	r12, rcx
mov	rbx, r8
xor	ecx, ecx
mov	r8, rax
mov	r13, rdx
xor	edx, edx
mov	rdi, r9
mov	rsi, rax
mov	qword ptr [rsp + 0x28], rax
call	0x140068880
call	0x140068880
mov	r8, rsi
mov	rdx, rdi
mov	rcx, rbx
mov	qword ptr [r12], rax
call	0x140068a90
call	0x140068a90
mov	r15, rax
mov	rax, qword ptr [rax - 0x18]
sub	rdi, rbx
lea	r14, [r15 + rax*2]
movabs	rax, 0x3ffffffffffffffc
cmp	rax, rdi
jb	0x14003d622
jb	0x14003d622
lea	rcx, [rdi + rdi]
call	0x1400b2c00
call	0x1400b2c00
mov	rsi, rax
mov	rbx, r15
jmp	0x14003d4a5
jmp	0x14003d4a5
nop	dword ptr [rax]
mov	r9d, dword ptr [rax - 8]
test	r9d, r9d
jle	0x14003d48c
jle	0x14003d48c
mov	rdx, rbp
mov	rcx, r12
call	0x14006a8f0
call	0x14006a8f0
mov	rax, qword ptr [r12]
mov	rdx, qword ptr [rax - 0x18]
xor	ecx, ecx
xor	r8d, r8d
mov	word ptr [rax + rdx*2], cx
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rbp
mov	word ptr [rax + rbp*2], r8w
mov	r8, rbx
mov	r9, rdi
mov	rdx, rsi
mov	rcx, r13
call	0x14003d3e0
call	0x14003d3e0
mov	r8, rax
cmp	rax, rdi
jb	0x14003d502
jb	0x14003d502
lea	rdi, [rax + 1]
test	rsi, rsi
je	0x14003d4cf
je	0x14003d4cf
mov	rcx, rsi
call	0x1400b2bd0
call	0x1400b2bd0
movabs	rax, 0x3ffffffffffffffc
cmp	rax, rdi
jb	0x14003d5cc
jb	0x14003d5cc
lea	rcx, [rdi + rdi]
call	0x1400b2c00
call	0x1400b2c00
mov	r8, rbx
mov	r9, rdi
mov	rdx, rax
mov	rcx, r13
mov	rsi, rax
call	0x14003d3e0
call	0x14003d3e0
mov	r8, rax
mov	rdx, rsi
mov	rcx, r12
call	0x140069490
call	0x140069490
mov	rcx, rbx
call	0x140015a60
call	0x140015a60
lea	rbx, [rbx + rax*2]
cmp	r14, rbx
je	0x14003d560
je	0x14003d560
mov	rax, qword ptr [r12]
add	rbx, 2
mov	rdx, qword ptr [rax - 0x18]
lea	rbp, [rdx + 1]
cmp	qword ptr [rax - 0x10], rbp
jb	0x14003d479
jb	0x14003d479
mov	rcx, qword ptr [rip + 0x810f1]
mov	r10d, dword ptr [rcx]
test	r10d, r10d
je	0x14003d470
je	0x14003d470
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x14003d479
jg	0x14003d479
jmp	0x14003d484
jmp	0x14003d484
nop	dword ptr [rax + rax]
test	rsi, rsi
je	0x14003d56d
je	0x14003d56d
mov	rcx, rsi
call	0x1400b2bd0
call	0x1400b2bd0
mov	rax, qword ptr [rip + 0x810bc]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14003d5a0
jne	0x14003d5a0
mov	eax, dword ptr [r15 - 8]
lea	edx, [rax - 1]
mov	dword ptr [r15 - 8], edx
test	eax, eax
jle	0x14003d5af
jle	0x14003d5af
mov	rax, r12
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [r15 - 8], eax
test	eax, eax
jg	0x14003d589
jg	0x14003d589
mov	rdx, qword ptr [rsp + 0x28]
lea	rcx, [r15 - 0x18]
call	0x140068ef0
call	0x140068ef0
jmp	0x14003d589
jmp	0x14003d589
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b3540
call	0x1400b3540
call	0x1400b41c0
call	0x1400b41c0
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rdx, qword ptr [rsp + 0x28]
lea	rcx, [r15 - 0x18]
call	0x140068f00
call	0x140068f00
mov	rcx, qword ptr [r12]
mov	rdx, qword ptr [rsp + 0x28]
sub	rcx, 0x18
call	0x140068f00
call	0x140068f00
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
test	rsi, rsi
je	0x14003d5c7
je	0x14003d5c7
mov	rcx, rsi
call	0x1400b2bd0
call	0x1400b2bd0
jmp	0x14003d5c7
jmp	0x14003d5c7
mov	rbx, rax
jmp	0x14003d5e7
jmp	0x14003d5e7
mov	rbx, rax
jmp	0x14003d5d9
jmp	0x14003d5d9
call	0x1400b41c0
call	0x1400b41c0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	r9, [rip + 0x49]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x20]
cmp	rax, r9
jne	0x14003d668
jne	0x14003d668
xor	eax, eax
cmp	rdx, r8
jae	0x14003d661
jae	0x14003d661
nop	word ptr [rax + rax]
movzx	ecx, word ptr [rdx]
rol	eax, 7
add	rdx, 2
add	eax, ecx
cmp	rdx, r8
jb	0x14003d650
jb	0x14003d650
ret	
ret	
nop	word ptr [rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
jmp	qword ptr [rax + 0x10]
jmp	qword ptr [rax + 0x10]
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
cmp	rdx, r8
jae	0x14003d6a1
jae	0x14003d6a1
nop	word ptr [rax + rax]
movzx	ecx, word ptr [rdx]
rol	eax, 7
add	rdx, 2
add	eax, ecx
cmp	rdx, r8
jb	0x14003d690
jb	0x14003d690
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx]
mov	rbx, rcx
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
mov	rax, qword ptr [r8 + 8]
mov	rdi, qword ptr [r9 + 8]
mov	rbp, qword ptr [rsp + 0x110]
mov	r13, qword ptr [r8]
mov	r12, qword ptr [r9]
mov	rbx, r13
mov	qword ptr [rsp + 0xf0], rcx
lea	rcx, [rip + 0x79d15]
mov	r15, r12
mov	qword ptr [rsp + 0x40], rdi
mov	qword ptr [rsp + 0x68], rax
mov	dword ptr [rsp + 0x38], eax
call	0x140022a70
call	0x140022a70
mov	rdi, rax
mov	rax, qword ptr [rbp + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	r14, [rax + rdi*8]
mov	rsi, qword ptr [r14]
test	rsi, rsi
je	0x14003e0a0
je	0x14003e0a0
mov	edx, dword ptr [rbp + 0x18]
mov	edi, 8
and	edx, 0x4a
cmp	edx, 0x40
je	0x14003d75f
je	0x14003d75f
cmp	edx, 8
mov	edi, 0xa
mov	eax, 0x10
cmove	edi, eax
cmp	dword ptr [rsp + 0x38], -1
sete	r8b
test	r13, r13
setne	r14b
and	r14b, r8b
jne	0x14003e168
jne	0x14003e168
mov	r14d, r8d
cmp	dword ptr [rsp + 0x40], -1
sete	r13b
test	r12, r12
setne	bpl
and	bpl, r13b
jne	0x14003e180
jne	0x14003e180
mov	ebp, r13d
cmp	r14b, bpl
je	0x14003dff8
je	0x14003dff8
test	rbx, rbx
je	0x14003d7ae
je	0x14003d7ae
test	r8b, r8b
jne	0x14003e08a
jne	0x14003e08a
movzx	ebp, byte ptr [rsp + 0x38]
cmp	byte ptr [rsi + 0x6e], bpl
movzx	r8d, byte ptr [rsi + 0x20]
sete	byte ptr [rsp + 0x7f]
je	0x14003d7cd
je	0x14003d7cd
cmp	byte ptr [rsi + 0x6f], bpl
jne	0x14003e080
jne	0x14003e080
test	r8b, r8b
jne	0x14003daf0
jne	0x14003daf0
cmp	byte ptr [rsi + 0x48], bpl
je	0x14003d844
je	0x14003d844
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
cmp	rax, rcx
jae	0x14003e32b
jae	0x14003e32b
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rcx
jae	0x14003e27a
jae	0x14003e27a
xor	r14d, r14d
test	r15, r15
setne	r12b
and	r12b, r13b
jne	0x14003e2f3
jne	0x14003e2f3
mov	r12d, r13d
cmp	r12b, r14b
je	0x14003e2a8
je	0x14003e2a8
test	rbx, rbx
je	0x14003e2e7
je	0x14003e2e7
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14003e2cb
jae	0x14003e2cb
movzx	ebp, byte ptr [rax]
mov	dword ptr [rsp + 0x38], 0xffffffff
movzx	r8d, byte ptr [rsi + 0x20]
mov	dword ptr [rsp + 0x40], 0
mov	r9d, dword ptr [rsp + 0x38]
xor	r12d, r12d
test	r8b, r8b
je	0x14003d863
je	0x14003d863
cmp	byte ptr [rsi + 0x49], bpl
je	0x14003dbd0
je	0x14003dbd0
cmp	byte ptr [rsi + 0x48], bpl
je	0x14003dbd0
je	0x14003dbd0
cmp	byte ptr [rsi + 0x72], bpl
je	0x14003db00
je	0x14003db00
test	r12b, r12b
je	0x14003dbd0
je	0x14003dbd0
cmp	byte ptr [rsi + 0x70], bpl
je	0x14003d890
je	0x14003d890
cmp	byte ptr [rsi + 0x71], bpl
jne	0x14003e1d0
jne	0x14003e1d0
test	edx, edx
sete	al
cmp	edi, 0x10
sete	cl
or	al, cl
je	0x14003e20c
je	0x14003e20c
mov	dword ptr [rsp + 0x40], 0
xor	r12d, r12d
mov	edi, 0x10
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
cmp	rax, rcx
jae	0x14003db50
jae	0x14003db50
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rcx
jae	0x14003db78
jae	0x14003db78
xor	r8d, r8d
test	r15, r15
setne	r14b
and	r14b, r13b
jne	0x14003dc60
jne	0x14003dc60
mov	r14d, r13d
cmp	r14b, r8b
jne	0x14003dba0
jne	0x14003dba0
mov	dword ptr [rsp + 0x38], 0xffffffff
movzx	r8d, byte ptr [rsi + 0x20]
mov	r14d, 1
cmp	edi, 0x10
je	0x14003dbe1
je	0x14003dbe1
movsxd	rax, edi
mov	dword ptr [rsp + 0x60], edi
mov	qword ptr [rsp + 0x50], rax
lea	rax, [rsp + 0x80]
mov	byte ptr [rsp + 0x90], 0
mov	qword ptr [rsp + 0x70], rax
lea	rax, [rsp + 0x90]
mov	qword ptr [rsp + 0x58], rax
mov	qword ptr [rsp + 0x80], rax
mov	qword ptr [rsp + 0x88], 0
test	r8b, r8b
jne	0x14003dfe0
jne	0x14003dfe0
mov	eax, 0xffffffff
xor	edx, edx
div	edi
mov	dword ptr [rsp + 0x78], eax
movzx	eax, byte ptr [rsi + 0x88]
mov	byte ptr [rsp + 0x7e], al
test	al, al
jne	0x14003ddf0
jne	0x14003ddf0
mov	byte ptr [rsp + 0x7d], 0
test	r14b, r14b
jne	0x14003e370
jne	0x14003e370
movzx	eax, byte ptr [rsp + 0x60]
mov	dword ptr [rsp + 0x4c], 0
add	eax, 0x30
mov	byte ptr [rsp + 0x7e], al
cmp	qword ptr [rsp + 0x50], 0xa
ja	0x14003dc00
ja	0x14003dc00
cmp	bpl, 0x2f
jle	0x14003ddd0
jle	0x14003ddd0
cmp	bpl, byte ptr [rsp + 0x7e]
jge	0x14003ddd0
jge	0x14003ddd0
movsx	ebp, bpl
sub	ebp, 0x30
mov	eax, dword ptr [rsp + 0x4c]
cmp	dword ptr [rsp + 0x78], eax
jb	0x14003dc30
jb	0x14003dc30
imul	eax, edi
mov	rdx, qword ptr [rbx + 0x18]
add	ebp, eax
setb	al
or	byte ptr [rsp + 0x7d], al
mov	rax, qword ptr [rbx + 0x10]
add	dword ptr [rsp + 0x40], 1
mov	dword ptr [rsp + 0x4c], ebp
cmp	rax, rdx
jae	0x14003dc46
jae	0x14003dc46
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14003e233
jae	0x14003e233
mov	byte ptr [rsp + 0x38], 0
test	r15, r15
setne	bpl
and	bpl, r13b
jne	0x14003dda0
jne	0x14003dda0
mov	ebp, r13d
cmp	bpl, byte ptr [rsp + 0x38]
jne	0x14003dc80
jne	0x14003dc80
mov	dword ptr [rsp + 0x38], 0xffffffff
mov	rbp, qword ptr [rsp + 0x88]
mov	byte ptr [rsp + 0x7e], 1
mov	rcx, qword ptr [rsp + 0x80]
mov	rax, rcx
test	rbp, rbp
jne	0x14003dcd0
jne	0x14003dcd0
cmp	r12b, 1
je	0x14003dd5b
je	0x14003dd5b
mov	eax, dword ptr [rsp + 0x40]
test	eax, eax
jne	0x14003dd5b
jne	0x14003dd5b
mov	rax, qword ptr [rsp + 0x120]
mov	dword ptr [rax], 0
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x7e], 0
je	0x14003da9a
je	0x14003da9a
mov	rax, qword ptr [rsp + 0x118]
or	dword ptr [rax], 2
mov	edx, dword ptr [rsp + 0x38]
mov	rdi, qword ptr [rsp + 0xf0]
movabs	rax, 0xffffffff00000000
and	rax, qword ptr [rsp + 0x68]
or	rax, rdx
mov	qword ptr [rdi], rbx
mov	qword ptr [rdi + 8], rax
mov	rax, qword ptr [rsp + 0x58]
cmp	rcx, rax
je	0x14003dace
je	0x14003dace
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0xf0]
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
cmp	byte ptr [rsi + 0x49], bpl
jne	0x14003d7d6
jne	0x14003d7d6
jmp	0x14003d844
jmp	0x14003d844
nop	
mov	eax, r12d
xor	eax, 1
cmp	edi, 0xa
sete	cl
or	al, cl
je	0x14003d880
je	0x14003d880
test	edx, edx
sete	r12b
cmp	edi, 8
sete	cl
or	r12b, cl
je	0x14003dd90
je	0x14003dd90
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
mov	edi, 8
mov	dword ptr [rsp + 0x40], 0
cmp	rax, rcx
jb	0x14003d8c4
jb	0x14003d8c4
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
mov	edx, dword ptr [rsp + 0x38]
cmp	rax, rcx
jb	0x14003d8d5
jb	0x14003d8d5
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
jne	0x14003d8d5
jne	0x14003d8d5
mov	r8d, 1
xor	ebx, ebx
jmp	0x14003d8d8
jmp	0x14003d8d8
nop	
test	rbx, rbx
je	0x14003dcc0
je	0x14003dcc0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14003dc9f
jae	0x14003dc9f
movzx	ebp, byte ptr [rax]
movzx	r8d, byte ptr [rsi + 0x20]
mov	r9d, 0xffffffff
test	r12b, r12b
jne	0x14003d854
jne	0x14003d854
nop	
mov	dword ptr [rsp + 0x38], r9d
xor	r14d, r14d
cmp	edi, 0x10
jne	0x14003d910
jne	0x14003d910
mov	qword ptr [rsp + 0x50], 0x16
mov	dword ptr [rsp + 0x60], 0x16
jmp	0x14003d91c
jmp	0x14003d91c
nop	word ptr [rax + rax]
lea	eax, [rbp - 0x30]
cmp	al, 9
jbe	0x14003d9be
jbe	0x14003d9be
lea	eax, [rbp - 0x61]
cmp	al, 5
ja	0x14003ddb8
ja	0x14003ddb8
movsx	ebp, bpl
mov	eax, dword ptr [rsp + 0x4c]
sub	ebp, 0x57
cmp	dword ptr [rsp + 0x78], eax
jae	0x14003d9d3
jae	0x14003d9d3
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x7d], 1
cmp	rax, rdx
jb	0x14003d9f9
jb	0x14003d9f9
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x14003da01
jmp	0x14003da01
nop	dword ptr [rax]
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x14003e130
jae	0x14003e130
xor	r14d, r14d
jmp	0x14003d8eb
jmp	0x14003d8eb
nop	word ptr cs:[rax + rax]
test	rbx, rbx
je	0x14003dfc8
je	0x14003dfc8
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14003dfb1
jae	0x14003dfb1
movzx	ebp, byte ptr [rax]
jmp	0x14003dfcf
jmp	0x14003dfcf
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
mov	ebp, eax
jne	0x14003dbba
jne	0x14003dbba
nop	dword ptr [rax + rax]
mov	ebp, 0xffffffff
xor	ebx, ebx
jmp	0x14003dbba
jmp	0x14003dbba
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x58]
movzx	r13d, byte ptr [rsp + 0x40]
lea	rdi, [rbp + 1]
cmp	rax, rcx
je	0x14003e229
je	0x14003e229
mov	rdx, qword ptr [rsp + 0x90]
cmp	rdx, rdi
jb	0x14003e1e3
jb	0x14003e1e3
mov	byte ptr [rax + rbp], r13b
mov	rax, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x88], rdi
mov	r8, qword ptr [rsp + 0x70]
mov	byte ptr [rax + rbp + 1], 0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
call	0x1400ae850
call	0x1400ae850
test	al, al
jne	0x14003dd36
jne	0x14003dd36
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
mov	edx, dword ptr [rsp + 0x40]
test	edx, edx
jne	0x14003dd53
jne	0x14003dd53
cmp	r12b, 1
je	0x14003dd53
je	0x14003dd53
cmp	qword ptr [rsp + 0x88], 0
je	0x14003e48b
je	0x14003e48b
mov	rcx, qword ptr [rsp + 0x80]
test	r14b, r14b
jne	0x14003da6c
jne	0x14003da6c
cmp	byte ptr [rsp + 0x7d], 0
je	0x14003e060
je	0x14003e060
mov	rax, qword ptr [rsp + 0x120]
mov	dword ptr [rax], 0xffffffff
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
jmp	0x14003da88
jmp	0x14003da88
add	dword ptr [rsp + 0x40], 1
mov	r12d, eax
jmp	0x14003d8b3
jmp	0x14003d8b3
nop	dword ptr [rax]
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x14003e258
jae	0x14003e258
xor	ebp, ebp
jmp	0x14003da22
jmp	0x14003da22
nop	dword ptr [rax]
lea	eax, [rbp - 0x41]
cmp	al, 5
ja	0x14003ddd0
ja	0x14003ddd0
movsx	ebp, bpl
sub	ebp, 0x37
jmp	0x14003d9c5
jmp	0x14003d9c5
xor	r14d, r14d
nop	
mov	byte ptr [rsp + 0x7e], 0
mov	rbp, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x14003da4a
jmp	0x14003da4a
nop	word ptr [rax + rax]
test	r14b, r14b
jne	0x14003e402
jne	0x14003e402
lea	rax, [rsi + 0x72]
mov	byte ptr [rsp + 0x7d], 0
mov	qword ptr [rsp + 0x60], rax
mov	dword ptr [rsp + 0x4c], 0
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x14003de21
je	0x14003de21
cmp	byte ptr [rsi + 0x49], bpl
je	0x14003df30
je	0x14003df30
mov	r8, qword ptr [rsp + 0x50]
cmp	byte ptr [rsi + 0x48], bpl
sete	al
test	r8, r8
sete	dl
or	al, dl
jne	0x14003ddd0
jne	0x14003ddd0
movsx	edx, bpl
mov	rbp, qword ptr [rsp + 0x60]
mov	rcx, rbp
call	0x140015988
call	0x140015988
test	rax, rax
je	0x14003ddcb
je	0x14003ddcb
sub	rax, rbp
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
mov	edx, dword ptr [rsp + 0x4c]
cmp	dword ptr [rsp + 0x78], edx
jb	0x14003dee0
jb	0x14003dee0
imul	edx, edi
add	eax, edx
setb	dl
add	dword ptr [rsp + 0x40], 1
or	byte ptr [rsp + 0x7d], dl
mov	dword ptr [rsp + 0x4c], eax
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14003def6
jae	0x14003def6
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14003e349
jae	0x14003e349
mov	byte ptr [rsp + 0x38], 0
test	r15, r15
setne	bpl
and	bpl, r13b
jne	0x14003e020
jne	0x14003e020
mov	ebp, r13d
cmp	bpl, byte ptr [rsp + 0x38]
jne	0x14003df10
jne	0x14003df10
mov	dword ptr [rsp + 0x38], 0xffffffff
mov	rbp, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x14003da4a
jmp	0x14003da4a
nop	word ptr cs:[rax + rax]
movzx	eax, byte ptr [rsp + 0x7e]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x7d], al
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rdx
jb	0x14003de89
jb	0x14003de89
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x14003de91
jmp	0x14003de91
nop	dword ptr [rax]
test	rbx, rbx
je	0x14003e048
je	0x14003e048
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14003e035
jae	0x14003e035
movzx	ebp, byte ptr [rax]
jmp	0x14003e04f
jmp	0x14003e04f
nop	
mov	rdx, qword ptr [rsp + 0x80]
mov	r10d, dword ptr [rsp + 0x40]
mov	rbp, qword ptr [rsp + 0x88]
mov	rcx, rdx
test	r10d, r10d
je	0x14003e42c
je	0x14003e42c
lea	rax, [rbp + 1]
mov	byte ptr [rsp + 0x40], r10b
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x58]
cmp	rdx, rax
je	0x14003e21f
je	0x14003e21f
mov	rax, qword ptr [rsp + 0x90]
mov	rcx, qword ptr [rsp + 0x38]
cmp	rax, rcx
jb	0x14003e1a0
jb	0x14003e1a0
movzx	eax, byte ptr [rsp + 0x40]
mov	dword ptr [rsp + 0x40], 0
mov	byte ptr [rdx + rbp], al
mov	rdx, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x88], rdx
mov	byte ptr [rax + rdx], 0
jmp	0x14003de7c
jmp	0x14003de7c
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x14003dfcf
jne	0x14003dfcf
nop	dword ptr [rax]
mov	ebp, 0xffffffff
xor	ebx, ebx
mov	dword ptr [rsp + 0x38], 0xffffffff
jmp	0x14003d99d
jmp	0x14003d99d
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x70]
mov	edx, 0x20
call	0x14009f7e0
call	0x14009f7e0
jmp	0x14003d95b
jmp	0x14003d95b
nop	dword ptr [rax]
mov	byte ptr [rsp + 0x7f], 0
movzx	r8d, byte ptr [rsi + 0x20]
xor	ebp, ebp
xor	r12d, r12d
mov	dword ptr [rsp + 0x40], 0
mov	r14d, 1
jmp	0x14003d907
jmp	0x14003d907
nop	word ptr [rax + rax]
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x14003e309
jae	0x14003e309
xor	ebp, ebp
jmp	0x14003deb2
jmp	0x14003deb2
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x14003e04f
jne	0x14003e04f
nop	dword ptr [rax]
mov	ebp, 0xffffffff
xor	ebx, ebx
mov	dword ptr [rsp + 0x38], 0xffffffff
jmp	0x14003de0f
jmp	0x14003de0f
nop	dword ptr [rax]
mov	edi, dword ptr [rsp + 0x4c]
mov	eax, edi
neg	eax
cmp	byte ptr [rsp + 0x7f], 0
cmove	eax, edi
mov	rdi, qword ptr [rsp + 0x120]
mov	dword ptr [rdi], eax
jmp	0x14003da88
jmp	0x14003da88
nop	
mov	byte ptr [rsp + 0x7f], 0
jmp	0x14003d844
jmp	0x14003d844
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14003e439
jae	0x14003e439
movzx	ebp, byte ptr [rax]
jmp	0x14003d7b3
jmp	0x14003d7b3
mov	ecx, 0x90
call	0x1400b2c30
call	0x1400b2c30
mov	rsi, rax
mov	dword ptr [rax + 8], 0
xor	ecx, ecx
mov	rax, qword ptr [rip + 0x80ea3]
mov	word ptr [rsi + 0x48], cx
lea	rdx, [rbp + 0xd0]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rax
mov	qword ptr [rsi + 0x18], 0
mov	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
mov	qword ptr [rsi + 0x38], 0
mov	qword ptr [rsi + 0x40], 0
mov	byte ptr [rsi + 0x88], 0
call	0x140093c20
call	0x140093c20
mov	rcx, qword ptr [rbp + 0xd0]
mov	rdx, rsi
mov	r8, rdi
call	0x140099d30
call	0x140099d30
mov	rsi, qword ptr [r14]
jmp	0x14003d73f
jmp	0x14003d73f
nop	dword ptr [rax]
mov	rax, qword ptr [r15]
mov	dword ptr [rsp + 0x4c], edx
mov	rcx, r15
mov	byte ptr [rsp + 0x38], r8b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, byte ptr [rsp + 0x38]
mov	edx, dword ptr [rsp + 0x4c]
cmp	eax, -1
mov	eax, 0
cmove	r15, rax
cmovne	r14d, eax
jmp	0x14003d8eb
jmp	0x14003d8eb
nop	dword ptr [rax]
mov	rax, qword ptr [r13 + 0x18]
cmp	qword ptr [r13 + 0x10], rax
jae	0x14003e3ce
jae	0x14003e3ce
xor	r14d, r14d
jmp	0x14003d77b
jmp	0x14003d77b
nop	
mov	rax, qword ptr [r12 + 0x18]
cmp	qword ptr [r12 + 0x10], rax
jae	0x14003e395
jae	0x14003e395
xor	ebp, ebp
jmp	0x14003d797
jmp	0x14003d797
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x70]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rbp
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rdx, qword ptr [rsp + 0x80]
jmp	0x14003df83
jmp	0x14003df83
nop	dword ptr [rax]
mov	dword ptr [rsp + 0x38], r9d
xor	r14d, r14d
mov	r12d, 1
jmp	0x14003d907
jmp	0x14003d907
mov	rcx, qword ptr [rsp + 0x70]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rbp
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0x80]
jmp	0x14003dcf9
jmp	0x14003dcf9
mov	dword ptr [rsp + 0x38], r9d
mov	r14d, eax
mov	r12d, 1
jmp	0x14003d910
jmp	0x14003d910
mov	eax, 0xf
jmp	0x14003df75
jmp	0x14003df75
mov	edx, 0xf
jmp	0x14003dcf0
jmp	0x14003dcf0
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x14003da0a
jne	0x14003da0a
mov	byte ptr [rsp + 0x38], 1
xor	ebx, ebx
jmp	0x14003da0f
jmp	0x14003da0f
nop	dword ptr [rax]
mov	rax, qword ptr [r15]
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	ebp, eax
mov	eax, 0
cmove	r15, rax
jmp	0x14003da22
jmp	0x14003da22
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
jne	0x14003d7fe
jne	0x14003d7fe
mov	r14d, 1
xor	ebx, ebx
jmp	0x14003d801
jmp	0x14003d801
nop	dword ptr [rax]
mov	dword ptr [rsp + 0x38], 0xffffffff
movzx	r8d, byte ptr [rsi + 0x20]
mov	r14d, 1
xor	r12d, r12d
mov	dword ptr [rsp + 0x40], 0
jmp	0x14003d907
jmp	0x14003d907
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
mov	ebp, eax
jne	0x14003d837
jne	0x14003d837
mov	ebp, 0xffffffff
xor	ebx, ebx
jmp	0x14003d837
jmp	0x14003d837
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x14003e465
jae	0x14003e465
xor	r12d, r12d
jmp	0x14003d814
jmp	0x14003d814
mov	rax, qword ptr [r15]
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	ebp, eax
mov	eax, 0
cmove	r15, rax
jmp	0x14003deb2
jmp	0x14003deb2
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
mov	edx, dword ptr [rsp + 0x38]
jmp	0x14003d7f5
jmp	0x14003d7f5
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x14003de9a
jne	0x14003de9a
movzx	eax, byte ptr [rsp + 0x7e]
xor	ebx, ebx
mov	byte ptr [rsp + 0x38], al
jmp	0x14003de9f
jmp	0x14003de9f
nop	dword ptr [rax + rax]
mov	byte ptr [rsp + 0x7e], r14b
mov	rbp, qword ptr [rsp + 0x88]
xor	r14d, r14d
mov	dword ptr [rsp + 0x4c], 0
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x14003da4a
jmp	0x14003da4a
mov	rax, qword ptr [r12]
mov	byte ptr [rsp + 0x4c], r8b
mov	rcx, r12
mov	dword ptr [rsp + 0x40], edx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x40]
movzx	r8d, byte ptr [rsp + 0x4c]
cmp	eax, -1
mov	eax, 0
cmovne	rax, r12
mov	r15, rax
mov	eax, 0
cmovne	ebp, eax
jmp	0x14003d797
jmp	0x14003d797
mov	rax, qword ptr [r13]
mov	byte ptr [rsp + 0x50], r8b
mov	rcx, r13
xor	ebx, ebx
mov	dword ptr [rsp + 0x4c], edx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x4c]
movzx	r8d, byte ptr [rsp + 0x50]
cmp	eax, -1
mov	eax, 0
cmovne	rbx, r13
cmovne	r14d, eax
jmp	0x14003d77b
jmp	0x14003d77b
mov	byte ptr [rsp + 0x7e], r14b
mov	rbp, qword ptr [rsp + 0x88]
xor	r14d, r14d
mov	dword ptr [rsp + 0x4c], 0
mov	rcx, qword ptr [rsp + 0x80]
mov	byte ptr [rsp + 0x7d], 0
jmp	0x14003da4a
jmp	0x14003da4a
mov	byte ptr [rsp + 0x7e], 0
mov	r14d, eax
jmp	0x14003da4a
jmp	0x14003da4a
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x40], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x40]
cmp	eax, -1
mov	ebp, eax
mov	eax, 0xffffffff
cmove	ebp, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x14003d7b3
jmp	0x14003d7b3
mov	rax, qword ptr [r15]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
mov	eax, 0
cmove	r15, rax
cmovne	r12d, eax
jmp	0x14003d814
jmp	0x14003d814
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x14003da6c
jmp	0x14003da6c
mov	rcx, qword ptr [rsp + 0x70]
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
jmp	0x14003e4b5
jmp	0x14003e4b5
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
mov	rax, qword ptr [r8 + 8]
mov	rdi, qword ptr [r9 + 8]
mov	rbp, qword ptr [rsp + 0x110]
mov	r13, qword ptr [r8]
mov	r12, qword ptr [r9]
mov	rbx, r13
mov	qword ptr [rsp + 0xf0], rcx
lea	rcx, [rip + 0x78f05]
mov	r15, r12
mov	qword ptr [rsp + 0x38], rdi
mov	qword ptr [rsp + 0x70], rax
mov	dword ptr [rsp + 0x30], eax
call	0x140022a70
call	0x140022a70
mov	rdi, rax
mov	rax, qword ptr [rbp + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	r14, [rax + rdi*8]
mov	rsi, qword ptr [r14]
test	rsi, rsi
je	0x14003eed0
je	0x14003eed0
mov	edx, dword ptr [rbp + 0x18]
mov	edi, 8
and	edx, 0x4a
cmp	edx, 0x40
je	0x14003e56f
je	0x14003e56f
cmp	edx, 8
mov	edi, 0xa
mov	eax, 0x10
cmove	edi, eax
cmp	dword ptr [rsp + 0x30], -1
sete	r8b
test	r13, r13
setne	r14b
and	r14b, r8b
jne	0x14003ef98
jne	0x14003ef98
mov	r14d, r8d
cmp	dword ptr [rsp + 0x38], -1
sete	r13b
test	r12, r12
setne	bpl
and	bpl, r13b
jne	0x14003efb0
jne	0x14003efb0
mov	ebp, r13d
cmp	r14b, bpl
je	0x14003ee28
je	0x14003ee28
test	rbx, rbx
je	0x14003e5be
je	0x14003e5be
test	r8b, r8b
jne	0x14003eeba
jne	0x14003eeba
movzx	ebp, byte ptr [rsp + 0x30]
cmp	byte ptr [rsi + 0x6e], bpl
movzx	r8d, byte ptr [rsi + 0x20]
sete	byte ptr [rsp + 0x64]
je	0x14003e5dd
je	0x14003e5dd
cmp	byte ptr [rsi + 0x6f], bpl
jne	0x14003eeb0
jne	0x14003eeb0
test	r8b, r8b
jne	0x14003e910
jne	0x14003e910
cmp	byte ptr [rsi + 0x48], bpl
je	0x14003e654
je	0x14003e654
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
cmp	rax, rcx
jae	0x14003f15b
jae	0x14003f15b
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rcx
jae	0x14003f0aa
jae	0x14003f0aa
xor	r14d, r14d
test	r15, r15
setne	r12b
and	r12b, r13b
jne	0x14003f123
jne	0x14003f123
mov	r12d, r13d
cmp	r12b, r14b
je	0x14003f0d8
je	0x14003f0d8
test	rbx, rbx
je	0x14003f117
je	0x14003f117
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14003f0fb
jae	0x14003f0fb
movzx	ebp, byte ptr [rax]
mov	dword ptr [rsp + 0x30], 0xffffffff
movzx	r8d, byte ptr [rsi + 0x20]
mov	dword ptr [rsp + 0x38], 0
mov	r9d, dword ptr [rsp + 0x30]
xor	r12d, r12d
test	r8b, r8b
je	0x14003e673
je	0x14003e673
cmp	byte ptr [rsi + 0x49], bpl
je	0x14003e9f0
je	0x14003e9f0
cmp	byte ptr [rsi + 0x48], bpl
je	0x14003e9f0
je	0x14003e9f0
cmp	byte ptr [rsi + 0x72], bpl
je	0x14003e920
je	0x14003e920
test	r12b, r12b
je	0x14003e9f0
je	0x14003e9f0
cmp	byte ptr [rsi + 0x70], bpl
je	0x14003e6a0
je	0x14003e6a0
cmp	byte ptr [rsi + 0x71], bpl
jne	0x14003f000
jne	0x14003f000
test	edx, edx
sete	al
cmp	edi, 0x10
sete	cl
or	al, cl
je	0x14003f03c
je	0x14003f03c
mov	dword ptr [rsp + 0x38], 0
xor	r12d, r12d
mov	edi, 0x10
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
cmp	rax, rcx
jae	0x14003e970
jae	0x14003e970
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rcx
jae	0x14003e998
jae	0x14003e998
xor	r8d, r8d
test	r15, r15
setne	r14b
and	r14b, r13b
jne	0x14003ea80
jne	0x14003ea80
mov	r14d, r13d
cmp	r14b, r8b
jne	0x14003e9c0
jne	0x14003e9c0
mov	dword ptr [rsp + 0x30], 0xffffffff
movzx	r8d, byte ptr [rsi + 0x20]
mov	r14d, 1
cmp	edi, 0x10
je	0x14003ea01
je	0x14003ea01
movsxd	rax, edi
mov	dword ptr [rsp + 0x68], edi
mov	qword ptr [rsp + 0x48], rax
lea	rax, [rsp + 0x80]
mov	byte ptr [rsp + 0x90], 0
mov	qword ptr [rsp + 0x78], rax
lea	rax, [rsp + 0x90]
mov	qword ptr [rsp + 0x58], rax
mov	qword ptr [rsp + 0x80], rax
mov	qword ptr [rsp + 0x88], 0
test	r8b, r8b
jne	0x14003ee10
jne	0x14003ee10
movzx	eax, byte ptr [rsp + 0x64]
xor	edx, edx
add	eax, 0x7fffffff
mov	dword ptr [rsp + 0x60], eax
div	edi
mov	dword ptr [rsp + 0x50], eax
movzx	eax, byte ptr [rsi + 0x88]
mov	byte ptr [rsp + 0x57], al
test	al, al
jne	0x14003ec20
jne	0x14003ec20
mov	byte ptr [rsp + 0x56], 0
test	r14b, r14b
jne	0x14003f1a0
jne	0x14003f1a0
movzx	eax, byte ptr [rsp + 0x68]
mov	dword ptr [rsp + 0x44], 0
add	eax, 0x30
mov	byte ptr [rsp + 0x57], al
cmp	qword ptr [rsp + 0x48], 0xa
ja	0x14003ea20
ja	0x14003ea20
cmp	bpl, 0x2f
jle	0x14003ec00
jle	0x14003ec00
cmp	bpl, byte ptr [rsp + 0x57]
jge	0x14003ec00
jge	0x14003ec00
movsx	ebp, bpl
sub	ebp, 0x30
mov	eax, dword ptr [rsp + 0x44]
cmp	dword ptr [rsp + 0x50], eax
jb	0x14003ea50
jb	0x14003ea50
imul	eax, edi
mov	edx, dword ptr [rsp + 0x60]
sub	edx, ebp
cmp	edx, eax
setb	dl
add	eax, ebp
or	byte ptr [rsp + 0x56], dl
mov	rdx, qword ptr [rbx + 0x18]
mov	dword ptr [rsp + 0x44], eax
mov	rax, qword ptr [rbx + 0x10]
add	dword ptr [rsp + 0x38], 1
cmp	rax, rdx
jae	0x14003ea66
jae	0x14003ea66
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14003f063
jae	0x14003f063
mov	byte ptr [rsp + 0x30], 0
test	r15, r15
setne	bpl
and	bpl, r13b
jne	0x14003ebd0
jne	0x14003ebd0
mov	ebp, r13d
cmp	bpl, byte ptr [rsp + 0x30]
jne	0x14003eaa0
jne	0x14003eaa0
mov	dword ptr [rsp + 0x30], 0xffffffff
mov	rbp, qword ptr [rsp + 0x88]
mov	byte ptr [rsp + 0x57], 1
mov	rcx, qword ptr [rsp + 0x80]
mov	rax, rcx
test	rbp, rbp
jne	0x14003eaf0
jne	0x14003eaf0
cmp	r12b, 1
je	0x14003eb7b
je	0x14003eb7b
mov	eax, dword ptr [rsp + 0x38]
test	eax, eax
jne	0x14003eb7b
jne	0x14003eb7b
mov	rax, qword ptr [rsp + 0x120]
mov	dword ptr [rax], 0
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x57], 0
je	0x14003e8bb
je	0x14003e8bb
mov	rax, qword ptr [rsp + 0x118]
or	dword ptr [rax], 2
mov	edx, dword ptr [rsp + 0x30]
mov	rdi, qword ptr [rsp + 0xf0]
movabs	rax, 0xffffffff00000000
and	rax, qword ptr [rsp + 0x70]
or	rax, rdx
mov	qword ptr [rdi], rbx
mov	qword ptr [rdi + 8], rax
mov	rax, qword ptr [rsp + 0x58]
cmp	rcx, rax
je	0x14003e8ef
je	0x14003e8ef
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0xf0]
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
cmp	byte ptr [rsi + 0x49], bpl
jne	0x14003e5e6
jne	0x14003e5e6
jmp	0x14003e654
jmp	0x14003e654
nop	
mov	eax, r12d
xor	eax, 1
cmp	edi, 0xa
sete	cl
or	al, cl
je	0x14003e690
je	0x14003e690
test	edx, edx
sete	r12b
cmp	edi, 8
sete	cl
or	r12b, cl
je	0x14003ebc0
je	0x14003ebc0
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
mov	edi, 8
mov	dword ptr [rsp + 0x38], 0
cmp	rax, rcx
jb	0x14003e6d4
jb	0x14003e6d4
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x30], edx
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
mov	edx, dword ptr [rsp + 0x30]
cmp	rax, rcx
jb	0x14003e6e5
jb	0x14003e6e5
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x30], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x30]
cmp	eax, -1
jne	0x14003e6e5
jne	0x14003e6e5
mov	r8d, 1
xor	ebx, ebx
jmp	0x14003e6e8
jmp	0x14003e6e8
nop	
test	rbx, rbx
je	0x14003eae0
je	0x14003eae0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14003eabf
jae	0x14003eabf
movzx	ebp, byte ptr [rax]
movzx	r8d, byte ptr [rsi + 0x20]
mov	r9d, 0xffffffff
test	r12b, r12b
jne	0x14003e664
jne	0x14003e664
nop	
mov	dword ptr [rsp + 0x30], r9d
xor	r14d, r14d
cmp	edi, 0x10
jne	0x14003e720
jne	0x14003e720
mov	qword ptr [rsp + 0x48], 0x16
mov	dword ptr [rsp + 0x68], 0x16
jmp	0x14003e72c
jmp	0x14003e72c
nop	word ptr [rax + rax]
lea	eax, [rbp - 0x30]
cmp	al, 9
jbe	0x14003e7d7
jbe	0x14003e7d7
lea	eax, [rbp - 0x61]
cmp	al, 5
ja	0x14003ebe8
ja	0x14003ebe8
movsx	ebp, bpl
mov	eax, dword ptr [rsp + 0x44]
sub	ebp, 0x57
cmp	dword ptr [rsp + 0x50], eax
jae	0x14003e7ec
jae	0x14003e7ec
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x56], 1
cmp	rax, rdx
jb	0x14003e81a
jb	0x14003e81a
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x14003e822
jmp	0x14003e822
nop	dword ptr [rax]
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x14003ef60
jae	0x14003ef60
xor	r14d, r14d
jmp	0x14003e6fb
jmp	0x14003e6fb
nop	word ptr cs:[rax + rax]
test	rbx, rbx
je	0x14003edf8
je	0x14003edf8
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14003ede1
jae	0x14003ede1
movzx	ebp, byte ptr [rax]
jmp	0x14003edff
jmp	0x14003edff
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x30], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x30]
cmp	eax, -1
mov	ebp, eax
jne	0x14003e9da
jne	0x14003e9da
nop	dword ptr [rax + rax]
mov	ebp, 0xffffffff
xor	ebx, ebx
jmp	0x14003e9da
jmp	0x14003e9da
nop	dword ptr [rax]
mov	rdx, qword ptr [rsp + 0x58]
movzx	r13d, byte ptr [rsp + 0x38]
lea	rdi, [rbp + 1]
cmp	rcx, rdx
je	0x14003f059
je	0x14003f059
mov	rdx, qword ptr [rsp + 0x90]
cmp	rdx, rdi
jb	0x14003f013
jb	0x14003f013
mov	byte ptr [rax + rbp], r13b
mov	rax, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x88], rdi
mov	r8, qword ptr [rsp + 0x78]
mov	byte ptr [rax + rbp + 1], 0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
call	0x1400ae850
call	0x1400ae850
test	al, al
jne	0x14003eb56
jne	0x14003eb56
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
mov	edx, dword ptr [rsp + 0x38]
test	edx, edx
jne	0x14003eb73
jne	0x14003eb73
cmp	r12b, 1
je	0x14003eb73
je	0x14003eb73
cmp	qword ptr [rsp + 0x88], 0
je	0x14003f2bb
je	0x14003f2bb
mov	rcx, qword ptr [rsp + 0x80]
test	r14b, r14b
jne	0x14003e88d
jne	0x14003e88d
cmp	byte ptr [rsp + 0x56], 0
je	0x14003ee90
je	0x14003ee90
mov	eax, dword ptr [rsp + 0x64]
mov	rdi, qword ptr [rsp + 0x120]
and	eax, 1
add	eax, 0x7fffffff
mov	dword ptr [rdi], eax
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
jmp	0x14003e8a9
jmp	0x14003e8a9
nop	dword ptr [rax + rax]
add	dword ptr [rsp + 0x38], 1
mov	r12d, eax
jmp	0x14003e6c3
jmp	0x14003e6c3
nop	dword ptr [rax]
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x14003f088
jae	0x14003f088
xor	ebp, ebp
jmp	0x14003e843
jmp	0x14003e843
nop	dword ptr [rax]
lea	eax, [rbp - 0x41]
cmp	al, 5
ja	0x14003ec00
ja	0x14003ec00
movsx	ebp, bpl
sub	ebp, 0x37
jmp	0x14003e7de
jmp	0x14003e7de
xor	r14d, r14d
nop	
mov	byte ptr [rsp + 0x57], 0
mov	rbp, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x14003e86b
jmp	0x14003e86b
nop	word ptr [rax + rax]
test	r14b, r14b
jne	0x14003f232
jne	0x14003f232
lea	rax, [rsi + 0x72]
mov	byte ptr [rsp + 0x56], 0
mov	qword ptr [rsp + 0x68], rax
mov	dword ptr [rsp + 0x44], 0
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x14003ec51
je	0x14003ec51
cmp	byte ptr [rsi + 0x49], bpl
je	0x14003ed60
je	0x14003ed60
mov	r8, qword ptr [rsp + 0x48]
cmp	byte ptr [rsi + 0x48], bpl
sete	al
test	r8, r8
sete	dl
or	al, dl
jne	0x14003ec00
jne	0x14003ec00
movsx	edx, bpl
mov	rbp, qword ptr [rsp + 0x68]
mov	rcx, rbp
call	0x140015988
call	0x140015988
test	rax, rax
je	0x14003ebfb
je	0x14003ebfb
sub	rax, rbp
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
mov	edx, dword ptr [rsp + 0x44]
cmp	dword ptr [rsp + 0x50], edx
jb	0x14003ed10
jb	0x14003ed10
imul	edx, edi
mov	ecx, dword ptr [rsp + 0x60]
sub	ecx, eax
cmp	ecx, edx
setb	cl
add	eax, edx
or	byte ptr [rsp + 0x56], cl
add	dword ptr [rsp + 0x38], 1
mov	dword ptr [rsp + 0x44], eax
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14003ed26
jae	0x14003ed26
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14003f179
jae	0x14003f179
mov	byte ptr [rsp + 0x30], 0
test	r15, r15
setne	bpl
and	bpl, r13b
jne	0x14003ee50
jne	0x14003ee50
mov	ebp, r13d
cmp	bpl, byte ptr [rsp + 0x30]
jne	0x14003ed40
jne	0x14003ed40
mov	dword ptr [rsp + 0x30], 0xffffffff
mov	rbp, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x14003e86b
jmp	0x14003e86b
nop	
movzx	eax, byte ptr [rsp + 0x57]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x56], al
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rdx
jb	0x14003ecc1
jb	0x14003ecc1
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x14003ecc9
jmp	0x14003ecc9
nop	dword ptr [rax]
test	rbx, rbx
je	0x14003ee78
je	0x14003ee78
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14003ee65
jae	0x14003ee65
movzx	ebp, byte ptr [rax]
jmp	0x14003ee7f
jmp	0x14003ee7f
nop	
mov	rdx, qword ptr [rsp + 0x80]
mov	r11d, dword ptr [rsp + 0x38]
mov	rbp, qword ptr [rsp + 0x88]
mov	rcx, rdx
test	r11d, r11d
je	0x14003f25c
je	0x14003f25c
lea	rax, [rbp + 1]
mov	byte ptr [rsp + 0x38], r11b
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x58]
cmp	rdx, rax
je	0x14003f04f
je	0x14003f04f
mov	rax, qword ptr [rsp + 0x90]
mov	rcx, qword ptr [rsp + 0x30]
cmp	rax, rcx
jb	0x14003efd0
jb	0x14003efd0
movzx	eax, byte ptr [rsp + 0x38]
mov	dword ptr [rsp + 0x38], 0
mov	byte ptr [rdx + rbp], al
mov	rdx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x88], rdx
mov	byte ptr [rax + rdx], 0
jmp	0x14003ecb4
jmp	0x14003ecb4
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x14003edff
jne	0x14003edff
nop	dword ptr [rax]
mov	ebp, 0xffffffff
xor	ebx, ebx
mov	dword ptr [rsp + 0x30], 0xffffffff
jmp	0x14003e7b6
jmp	0x14003e7b6
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x78]
mov	edx, 0x20
call	0x14009f7e0
call	0x14009f7e0
jmp	0x14003e76b
jmp	0x14003e76b
nop	dword ptr [rax]
mov	byte ptr [rsp + 0x64], 0
movzx	r8d, byte ptr [rsi + 0x20]
xor	ebp, ebp
xor	r12d, r12d
mov	dword ptr [rsp + 0x38], 0
mov	r14d, 1
jmp	0x14003e717
jmp	0x14003e717
nop	word ptr [rax + rax]
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x14003f139
jae	0x14003f139
xor	ebp, ebp
jmp	0x14003ecea
jmp	0x14003ecea
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x14003ee7f
jne	0x14003ee7f
nop	dword ptr [rax]
mov	ebp, 0xffffffff
xor	ebx, ebx
mov	dword ptr [rsp + 0x30], 0xffffffff
jmp	0x14003ec3f
jmp	0x14003ec3f
nop	dword ptr [rax]
mov	edi, dword ptr [rsp + 0x44]
mov	eax, edi
neg	eax
cmp	byte ptr [rsp + 0x64], 0
cmove	eax, edi
mov	rdi, qword ptr [rsp + 0x120]
mov	dword ptr [rdi], eax
jmp	0x14003e8a9
jmp	0x14003e8a9
nop	
mov	byte ptr [rsp + 0x64], 0
jmp	0x14003e654
jmp	0x14003e654
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14003f269
jae	0x14003f269
movzx	ebp, byte ptr [rax]
jmp	0x14003e5c3
jmp	0x14003e5c3
mov	ecx, 0x90
call	0x1400b2c30
call	0x1400b2c30
mov	rsi, rax
mov	dword ptr [rax + 8], 0
xor	ecx, ecx
mov	rax, qword ptr [rip + 0x80073]
mov	word ptr [rsi + 0x48], cx
lea	rdx, [rbp + 0xd0]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rax
mov	qword ptr [rsi + 0x18], 0
mov	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
mov	qword ptr [rsi + 0x38], 0
mov	qword ptr [rsi + 0x40], 0
mov	byte ptr [rsi + 0x88], 0
call	0x140093c20
call	0x140093c20
mov	rcx, qword ptr [rbp + 0xd0]
mov	rdx, rsi
mov	r8, rdi
call	0x140099d30
call	0x140099d30
mov	rsi, qword ptr [r14]
jmp	0x14003e54f
jmp	0x14003e54f
nop	dword ptr [rax]
mov	rax, qword ptr [r15]
mov	dword ptr [rsp + 0x44], edx
mov	rcx, r15
mov	byte ptr [rsp + 0x30], r8b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, byte ptr [rsp + 0x30]
mov	edx, dword ptr [rsp + 0x44]
cmp	eax, -1
mov	eax, 0
cmove	r15, rax
cmovne	r14d, eax
jmp	0x14003e6fb
jmp	0x14003e6fb
nop	dword ptr [rax]
mov	rax, qword ptr [r13 + 0x18]
cmp	qword ptr [r13 + 0x10], rax
jae	0x14003f1fe
jae	0x14003f1fe
xor	r14d, r14d
jmp	0x14003e58b
jmp	0x14003e58b
nop	
mov	rax, qword ptr [r12 + 0x18]
cmp	qword ptr [r12 + 0x10], rax
jae	0x14003f1c5
jae	0x14003f1c5
xor	ebp, ebp
jmp	0x14003e5a7
jmp	0x14003e5a7
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x78]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rbp
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rdx, qword ptr [rsp + 0x80]
jmp	0x14003edb3
jmp	0x14003edb3
nop	dword ptr [rax]
mov	dword ptr [rsp + 0x30], r9d
xor	r14d, r14d
mov	r12d, 1
jmp	0x14003e717
jmp	0x14003e717
mov	rcx, qword ptr [rsp + 0x78]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rbp
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0x80]
jmp	0x14003eb19
jmp	0x14003eb19
mov	dword ptr [rsp + 0x30], r9d
mov	r14d, eax
mov	r12d, 1
jmp	0x14003e720
jmp	0x14003e720
mov	eax, 0xf
jmp	0x14003eda5
jmp	0x14003eda5
mov	edx, 0xf
jmp	0x14003eb10
jmp	0x14003eb10
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x14003e82b
jne	0x14003e82b
mov	byte ptr [rsp + 0x30], 1
xor	ebx, ebx
jmp	0x14003e830
jmp	0x14003e830
nop	dword ptr [rax]
mov	rax, qword ptr [r15]
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	ebp, eax
mov	eax, 0
cmove	r15, rax
jmp	0x14003e843
jmp	0x14003e843
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x30], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x30]
cmp	eax, -1
jne	0x14003e60e
jne	0x14003e60e
mov	r14d, 1
xor	ebx, ebx
jmp	0x14003e611
jmp	0x14003e611
nop	dword ptr [rax]
mov	dword ptr [rsp + 0x30], 0xffffffff
movzx	r8d, byte ptr [rsi + 0x20]
mov	r14d, 1
xor	r12d, r12d
mov	dword ptr [rsp + 0x38], 0
jmp	0x14003e717
jmp	0x14003e717
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x30], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x30]
cmp	eax, -1
mov	ebp, eax
jne	0x14003e647
jne	0x14003e647
mov	ebp, 0xffffffff
xor	ebx, ebx
jmp	0x14003e647
jmp	0x14003e647
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x14003f295
jae	0x14003f295
xor	r12d, r12d
jmp	0x14003e624
jmp	0x14003e624
mov	rax, qword ptr [r15]
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	ebp, eax
mov	eax, 0
cmove	r15, rax
jmp	0x14003ecea
jmp	0x14003ecea
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x30], edx
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
mov	edx, dword ptr [rsp + 0x30]
jmp	0x14003e605
jmp	0x14003e605
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x14003ecd2
jne	0x14003ecd2
movzx	eax, byte ptr [rsp + 0x57]
xor	ebx, ebx
mov	byte ptr [rsp + 0x30], al
jmp	0x14003ecd7
jmp	0x14003ecd7
nop	dword ptr [rax + rax]
mov	byte ptr [rsp + 0x57], r14b
mov	rbp, qword ptr [rsp + 0x88]
xor	r14d, r14d
mov	dword ptr [rsp + 0x44], 0
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x14003e86b
jmp	0x14003e86b
mov	rax, qword ptr [r12]
mov	byte ptr [rsp + 0x44], r8b
mov	rcx, r12
mov	dword ptr [rsp + 0x38], edx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
movzx	r8d, byte ptr [rsp + 0x44]
cmp	eax, -1
mov	eax, 0
cmovne	rax, r12
mov	r15, rax
mov	eax, 0
cmovne	ebp, eax
jmp	0x14003e5a7
jmp	0x14003e5a7
mov	rax, qword ptr [r13]
mov	byte ptr [rsp + 0x48], r8b
mov	rcx, r13
xor	ebx, ebx
mov	dword ptr [rsp + 0x44], edx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x44]
movzx	r8d, byte ptr [rsp + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	rbx, r13
cmovne	r14d, eax
jmp	0x14003e58b
jmp	0x14003e58b
mov	byte ptr [rsp + 0x57], r14b
mov	rbp, qword ptr [rsp + 0x88]
xor	r14d, r14d
mov	dword ptr [rsp + 0x44], 0
mov	rcx, qword ptr [rsp + 0x80]
mov	byte ptr [rsp + 0x56], 0
jmp	0x14003e86b
jmp	0x14003e86b
mov	byte ptr [rsp + 0x57], 0
mov	r14d, eax
jmp	0x14003e86b
jmp	0x14003e86b
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
mov	ebp, eax
mov	eax, 0xffffffff
cmove	ebp, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x14003e5c3
jmp	0x14003e5c3
mov	rax, qword ptr [r15]
mov	dword ptr [rsp + 0x30], edx
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x30]
cmp	eax, -1
mov	eax, 0
cmove	r15, rax
cmovne	r12d, eax
jmp	0x14003e624
jmp	0x14003e624
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x14003e88d
jmp	0x14003e88d
mov	rcx, qword ptr [rsp + 0x78]
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
jmp	0x14003f2e5
jmp	0x14003f2e5
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
mov	rax, qword ptr [r8 + 8]
mov	rdi, qword ptr [r9 + 8]
mov	rbp, qword ptr [rsp + 0x110]
mov	r13, qword ptr [r8]
mov	r12, qword ptr [r9]
mov	rbx, r13
mov	qword ptr [rsp + 0xf0], rcx
lea	rcx, [rip + 0x780d5]
mov	r15, r12
mov	qword ptr [rsp + 0x40], rdi
mov	qword ptr [rsp + 0x68], rax
mov	dword ptr [rsp + 0x38], eax
call	0x140022a70
call	0x140022a70
mov	rdi, rax
mov	rax, qword ptr [rbp + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	r14, [rax + rdi*8]
mov	rsi, qword ptr [r14]
test	rsi, rsi
je	0x14003fce0
je	0x14003fce0
mov	edx, dword ptr [rbp + 0x18]
mov	edi, 8
and	edx, 0x4a
cmp	edx, 0x40
je	0x14003f39f
je	0x14003f39f
cmp	edx, 8
mov	edi, 0xa
mov	eax, 0x10
cmove	edi, eax
cmp	dword ptr [rsp + 0x38], -1
sete	r8b
test	r13, r13
setne	r14b
and	r14b, r8b
jne	0x14003fda8
jne	0x14003fda8
mov	r14d, r8d
cmp	dword ptr [rsp + 0x40], -1
sete	r13b
test	r12, r12
setne	bpl
and	bpl, r13b
jne	0x14003fdc0
jne	0x14003fdc0
mov	ebp, r13d
cmp	r14b, bpl
je	0x14003fc38
je	0x14003fc38
test	rbx, rbx
je	0x14003f3ee
je	0x14003f3ee
test	r8b, r8b
jne	0x14003fcca
jne	0x14003fcca
movzx	ebp, byte ptr [rsp + 0x38]
cmp	byte ptr [rsi + 0x6e], bpl
movzx	r8d, byte ptr [rsi + 0x20]
sete	byte ptr [rsp + 0x7f]
je	0x14003f40d
je	0x14003f40d
cmp	byte ptr [rsi + 0x6f], bpl
jne	0x14003fcc0
jne	0x14003fcc0
test	r8b, r8b
jne	0x14003f730
jne	0x14003f730
cmp	byte ptr [rsi + 0x48], bpl
je	0x14003f484
je	0x14003f484
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
cmp	rax, rcx
jae	0x14003ff6b
jae	0x14003ff6b
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rcx
jae	0x14003feba
jae	0x14003feba
xor	r14d, r14d
test	r15, r15
setne	r12b
and	r12b, r13b
jne	0x14003ff33
jne	0x14003ff33
mov	r12d, r13d
cmp	r12b, r14b
je	0x14003fee8
je	0x14003fee8
test	rbx, rbx
je	0x14003ff27
je	0x14003ff27
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14003ff0b
jae	0x14003ff0b
movzx	ebp, byte ptr [rax]
mov	dword ptr [rsp + 0x38], 0xffffffff
movzx	r8d, byte ptr [rsi + 0x20]
mov	dword ptr [rsp + 0x40], 0
mov	r9d, dword ptr [rsp + 0x38]
xor	r12d, r12d
test	r8b, r8b
je	0x14003f4a3
je	0x14003f4a3
cmp	byte ptr [rsi + 0x49], bpl
je	0x14003f810
je	0x14003f810
cmp	byte ptr [rsi + 0x48], bpl
je	0x14003f810
je	0x14003f810
cmp	byte ptr [rsi + 0x72], bpl
je	0x14003f740
je	0x14003f740
test	r12b, r12b
je	0x14003f810
je	0x14003f810
cmp	byte ptr [rsi + 0x70], bpl
je	0x14003f4d0
je	0x14003f4d0
cmp	byte ptr [rsi + 0x71], bpl
jne	0x14003fe10
jne	0x14003fe10
test	edx, edx
sete	al
cmp	edi, 0x10
sete	cl
or	al, cl
je	0x14003fe4c
je	0x14003fe4c
mov	dword ptr [rsp + 0x40], 0
xor	r12d, r12d
mov	edi, 0x10
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
cmp	rax, rcx
jae	0x14003f790
jae	0x14003f790
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rcx
jae	0x14003f7b8
jae	0x14003f7b8
xor	r8d, r8d
test	r15, r15
setne	r14b
and	r14b, r13b
jne	0x14003f8a0
jne	0x14003f8a0
mov	r14d, r13d
cmp	r14b, r8b
jne	0x14003f7e0
jne	0x14003f7e0
mov	dword ptr [rsp + 0x38], 0xffffffff
movzx	r8d, byte ptr [rsi + 0x20]
mov	r14d, 1
cmp	edi, 0x10
je	0x14003f821
je	0x14003f821
movsxd	rax, edi
mov	dword ptr [rsp + 0x60], edi
mov	qword ptr [rsp + 0x50], rax
lea	rax, [rsp + 0x80]
mov	byte ptr [rsp + 0x90], 0
mov	qword ptr [rsp + 0x70], rax
lea	rax, [rsp + 0x90]
mov	qword ptr [rsp + 0x58], rax
mov	qword ptr [rsp + 0x80], rax
mov	qword ptr [rsp + 0x88], 0
test	r8b, r8b
jne	0x14003fc20
jne	0x14003fc20
mov	eax, 0xffffffff
xor	edx, edx
div	edi
mov	dword ptr [rsp + 0x78], eax
movzx	eax, byte ptr [rsi + 0x88]
mov	byte ptr [rsp + 0x7e], al
test	al, al
jne	0x14003fa30
jne	0x14003fa30
mov	byte ptr [rsp + 0x7d], 0
test	r14b, r14b
jne	0x14003ffb0
jne	0x14003ffb0
movzx	eax, byte ptr [rsp + 0x60]
mov	dword ptr [rsp + 0x4c], 0
add	eax, 0x30
mov	byte ptr [rsp + 0x7e], al
cmp	qword ptr [rsp + 0x50], 0xa
ja	0x14003f840
ja	0x14003f840
cmp	bpl, 0x2f
jle	0x14003fa10
jle	0x14003fa10
cmp	bpl, byte ptr [rsp + 0x7e]
jge	0x14003fa10
jge	0x14003fa10
movsx	ebp, bpl
sub	ebp, 0x30
mov	eax, dword ptr [rsp + 0x4c]
cmp	dword ptr [rsp + 0x78], eax
jb	0x14003f870
jb	0x14003f870
imul	eax, edi
mov	rdx, qword ptr [rbx + 0x18]
add	ebp, eax
setb	al
or	byte ptr [rsp + 0x7d], al
mov	rax, qword ptr [rbx + 0x10]
add	dword ptr [rsp + 0x40], 1
mov	dword ptr [rsp + 0x4c], ebp
cmp	rax, rdx
jae	0x14003f886
jae	0x14003f886
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14003fe73
jae	0x14003fe73
mov	byte ptr [rsp + 0x38], 0
test	r15, r15
setne	bpl
and	bpl, r13b
jne	0x14003f9e0
jne	0x14003f9e0
mov	ebp, r13d
cmp	bpl, byte ptr [rsp + 0x38]
jne	0x14003f8c0
jne	0x14003f8c0
mov	dword ptr [rsp + 0x38], 0xffffffff
mov	rbp, qword ptr [rsp + 0x88]
mov	byte ptr [rsp + 0x7e], 1
mov	rcx, qword ptr [rsp + 0x80]
mov	rax, rcx
test	rbp, rbp
jne	0x14003f910
jne	0x14003f910
cmp	r12b, 1
je	0x14003f99b
je	0x14003f99b
mov	eax, dword ptr [rsp + 0x40]
test	eax, eax
jne	0x14003f99b
jne	0x14003f99b
mov	rax, qword ptr [rsp + 0x120]
mov	dword ptr [rax], 0
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x7e], 0
je	0x14003f6da
je	0x14003f6da
mov	rax, qword ptr [rsp + 0x118]
or	dword ptr [rax], 2
mov	edx, dword ptr [rsp + 0x38]
mov	rdi, qword ptr [rsp + 0xf0]
movabs	rax, 0xffffffff00000000
and	rax, qword ptr [rsp + 0x68]
or	rax, rdx
mov	qword ptr [rdi], rbx
mov	qword ptr [rdi + 8], rax
mov	rax, qword ptr [rsp + 0x58]
cmp	rcx, rax
je	0x14003f70e
je	0x14003f70e
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0xf0]
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
cmp	byte ptr [rsi + 0x49], bpl
jne	0x14003f416
jne	0x14003f416
jmp	0x14003f484
jmp	0x14003f484
nop	
mov	eax, r12d
xor	eax, 1
cmp	edi, 0xa
sete	cl
or	al, cl
je	0x14003f4c0
je	0x14003f4c0
test	edx, edx
sete	r12b
cmp	edi, 8
sete	cl
or	r12b, cl
je	0x14003f9d0
je	0x14003f9d0
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
mov	edi, 8
mov	dword ptr [rsp + 0x40], 0
cmp	rax, rcx
jb	0x14003f504
jb	0x14003f504
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
mov	edx, dword ptr [rsp + 0x38]
cmp	rax, rcx
jb	0x14003f515
jb	0x14003f515
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
jne	0x14003f515
jne	0x14003f515
mov	r8d, 1
xor	ebx, ebx
jmp	0x14003f518
jmp	0x14003f518
nop	
test	rbx, rbx
je	0x14003f900
je	0x14003f900
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14003f8df
jae	0x14003f8df
movzx	ebp, byte ptr [rax]
movzx	r8d, byte ptr [rsi + 0x20]
mov	r9d, 0xffffffff
test	r12b, r12b
jne	0x14003f494
jne	0x14003f494
nop	
mov	dword ptr [rsp + 0x38], r9d
xor	r14d, r14d
cmp	edi, 0x10
jne	0x14003f550
jne	0x14003f550
mov	qword ptr [rsp + 0x50], 0x16
mov	dword ptr [rsp + 0x60], 0x16
jmp	0x14003f55c
jmp	0x14003f55c
nop	word ptr [rax + rax]
lea	eax, [rbp - 0x30]
cmp	al, 9
jbe	0x14003f5fe
jbe	0x14003f5fe
lea	eax, [rbp - 0x61]
cmp	al, 5
ja	0x14003f9f8
ja	0x14003f9f8
movsx	ebp, bpl
mov	eax, dword ptr [rsp + 0x4c]
sub	ebp, 0x57
cmp	dword ptr [rsp + 0x78], eax
jae	0x14003f613
jae	0x14003f613
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x7d], 1
cmp	rax, rdx
jb	0x14003f639
jb	0x14003f639
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x14003f641
jmp	0x14003f641
nop	dword ptr [rax]
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x14003fd70
jae	0x14003fd70
xor	r14d, r14d
jmp	0x14003f52b
jmp	0x14003f52b
nop	word ptr cs:[rax + rax]
test	rbx, rbx
je	0x14003fc08
je	0x14003fc08
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14003fbf1
jae	0x14003fbf1
movzx	ebp, byte ptr [rax]
jmp	0x14003fc0f
jmp	0x14003fc0f
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
mov	ebp, eax
jne	0x14003f7fa
jne	0x14003f7fa
nop	dword ptr [rax + rax]
mov	ebp, 0xffffffff
xor	ebx, ebx
jmp	0x14003f7fa
jmp	0x14003f7fa
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x58]
movzx	r13d, byte ptr [rsp + 0x40]
lea	rdi, [rbp + 1]
cmp	rax, rcx
je	0x14003fe69
je	0x14003fe69
mov	rdx, qword ptr [rsp + 0x90]
cmp	rdx, rdi
jb	0x14003fe23
jb	0x14003fe23
mov	byte ptr [rax + rbp], r13b
mov	rax, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x88], rdi
mov	r8, qword ptr [rsp + 0x70]
mov	byte ptr [rax + rbp + 1], 0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
call	0x1400ae850
call	0x1400ae850
test	al, al
jne	0x14003f976
jne	0x14003f976
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
mov	edx, dword ptr [rsp + 0x40]
test	edx, edx
jne	0x14003f993
jne	0x14003f993
cmp	r12b, 1
je	0x14003f993
je	0x14003f993
cmp	qword ptr [rsp + 0x88], 0
je	0x1400400cb
je	0x1400400cb
mov	rcx, qword ptr [rsp + 0x80]
test	r14b, r14b
jne	0x14003f6ac
jne	0x14003f6ac
cmp	byte ptr [rsp + 0x7d], 0
je	0x14003fca0
je	0x14003fca0
mov	rax, qword ptr [rsp + 0x120]
mov	dword ptr [rax], 0xffffffff
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
jmp	0x14003f6c8
jmp	0x14003f6c8
add	dword ptr [rsp + 0x40], 1
mov	r12d, eax
jmp	0x14003f4f3
jmp	0x14003f4f3
nop	dword ptr [rax]
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x14003fe98
jae	0x14003fe98
xor	ebp, ebp
jmp	0x14003f662
jmp	0x14003f662
nop	dword ptr [rax]
lea	eax, [rbp - 0x41]
cmp	al, 5
ja	0x14003fa10
ja	0x14003fa10
movsx	ebp, bpl
sub	ebp, 0x37
jmp	0x14003f605
jmp	0x14003f605
xor	r14d, r14d
nop	
mov	byte ptr [rsp + 0x7e], 0
mov	rbp, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x14003f68a
jmp	0x14003f68a
nop	word ptr [rax + rax]
test	r14b, r14b
jne	0x140040042
jne	0x140040042
lea	rax, [rsi + 0x72]
mov	byte ptr [rsp + 0x7d], 0
mov	qword ptr [rsp + 0x60], rax
mov	dword ptr [rsp + 0x4c], 0
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x14003fa61
je	0x14003fa61
cmp	byte ptr [rsi + 0x49], bpl
je	0x14003fb70
je	0x14003fb70
mov	r8, qword ptr [rsp + 0x50]
cmp	byte ptr [rsi + 0x48], bpl
sete	al
test	r8, r8
sete	dl
or	al, dl
jne	0x14003fa10
jne	0x14003fa10
movsx	edx, bpl
mov	rbp, qword ptr [rsp + 0x60]
mov	rcx, rbp
call	0x140015988
call	0x140015988
test	rax, rax
je	0x14003fa0b
je	0x14003fa0b
sub	rax, rbp
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
mov	edx, dword ptr [rsp + 0x4c]
cmp	dword ptr [rsp + 0x78], edx
jb	0x14003fb20
jb	0x14003fb20
imul	edx, edi
add	eax, edx
setb	dl
add	dword ptr [rsp + 0x40], 1
or	byte ptr [rsp + 0x7d], dl
mov	dword ptr [rsp + 0x4c], eax
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14003fb36
jae	0x14003fb36
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14003ff89
jae	0x14003ff89
mov	byte ptr [rsp + 0x38], 0
test	r15, r15
setne	bpl
and	bpl, r13b
jne	0x14003fc60
jne	0x14003fc60
mov	ebp, r13d
cmp	bpl, byte ptr [rsp + 0x38]
jne	0x14003fb50
jne	0x14003fb50
mov	dword ptr [rsp + 0x38], 0xffffffff
mov	rbp, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x14003f68a
jmp	0x14003f68a
nop	word ptr cs:[rax + rax]
movzx	eax, byte ptr [rsp + 0x7e]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x7d], al
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rdx
jb	0x14003fac9
jb	0x14003fac9
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x14003fad1
jmp	0x14003fad1
nop	dword ptr [rax]
test	rbx, rbx
je	0x14003fc88
je	0x14003fc88
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14003fc75
jae	0x14003fc75
movzx	ebp, byte ptr [rax]
jmp	0x14003fc8f
jmp	0x14003fc8f
nop	
mov	rdx, qword ptr [rsp + 0x80]
mov	r10d, dword ptr [rsp + 0x40]
mov	rbp, qword ptr [rsp + 0x88]
mov	rcx, rdx
test	r10d, r10d
je	0x14004006c
je	0x14004006c
lea	rax, [rbp + 1]
mov	byte ptr [rsp + 0x40], r10b
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x58]
cmp	rdx, rax
je	0x14003fe5f
je	0x14003fe5f
mov	rax, qword ptr [rsp + 0x90]
mov	rcx, qword ptr [rsp + 0x38]
cmp	rax, rcx
jb	0x14003fde0
jb	0x14003fde0
movzx	eax, byte ptr [rsp + 0x40]
mov	dword ptr [rsp + 0x40], 0
mov	byte ptr [rdx + rbp], al
mov	rdx, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x88], rdx
mov	byte ptr [rax + rdx], 0
jmp	0x14003fabc
jmp	0x14003fabc
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x14003fc0f
jne	0x14003fc0f
nop	dword ptr [rax]
mov	ebp, 0xffffffff
xor	ebx, ebx
mov	dword ptr [rsp + 0x38], 0xffffffff
jmp	0x14003f5dd
jmp	0x14003f5dd
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x70]
mov	edx, 0x20
call	0x14009f7e0
call	0x14009f7e0
jmp	0x14003f59b
jmp	0x14003f59b
nop	dword ptr [rax]
mov	byte ptr [rsp + 0x7f], 0
movzx	r8d, byte ptr [rsi + 0x20]
xor	ebp, ebp
xor	r12d, r12d
mov	dword ptr [rsp + 0x40], 0
mov	r14d, 1
jmp	0x14003f547
jmp	0x14003f547
nop	word ptr [rax + rax]
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x14003ff49
jae	0x14003ff49
xor	ebp, ebp
jmp	0x14003faf2
jmp	0x14003faf2
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x14003fc8f
jne	0x14003fc8f
nop	dword ptr [rax]
mov	ebp, 0xffffffff
xor	ebx, ebx
mov	dword ptr [rsp + 0x38], 0xffffffff
jmp	0x14003fa4f
jmp	0x14003fa4f
nop	dword ptr [rax]
mov	edi, dword ptr [rsp + 0x4c]
mov	eax, edi
neg	eax
cmp	byte ptr [rsp + 0x7f], 0
cmove	eax, edi
mov	rdi, qword ptr [rsp + 0x120]
mov	dword ptr [rdi], eax
jmp	0x14003f6c8
jmp	0x14003f6c8
nop	
mov	byte ptr [rsp + 0x7f], 0
jmp	0x14003f484
jmp	0x14003f484
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140040079
jae	0x140040079
movzx	ebp, byte ptr [rax]
jmp	0x14003f3f3
jmp	0x14003f3f3
mov	ecx, 0x90
call	0x1400b2c30
call	0x1400b2c30
mov	rsi, rax
mov	dword ptr [rax + 8], 0
xor	ecx, ecx
mov	rax, qword ptr [rip + 0x7f263]
mov	word ptr [rsi + 0x48], cx
lea	rdx, [rbp + 0xd0]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rax
mov	qword ptr [rsi + 0x18], 0
mov	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
mov	qword ptr [rsi + 0x38], 0
mov	qword ptr [rsi + 0x40], 0
mov	byte ptr [rsi + 0x88], 0
call	0x140093c20
call	0x140093c20
mov	rcx, qword ptr [rbp + 0xd0]
mov	rdx, rsi
mov	r8, rdi
call	0x140099d30
call	0x140099d30
mov	rsi, qword ptr [r14]
jmp	0x14003f37f
jmp	0x14003f37f
nop	dword ptr [rax]
mov	rax, qword ptr [r15]
mov	dword ptr [rsp + 0x4c], edx
mov	rcx, r15
mov	byte ptr [rsp + 0x38], r8b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, byte ptr [rsp + 0x38]
mov	edx, dword ptr [rsp + 0x4c]
cmp	eax, -1
mov	eax, 0
cmove	r15, rax
cmovne	r14d, eax
jmp	0x14003f52b
jmp	0x14003f52b
nop	dword ptr [rax]
mov	rax, qword ptr [r13 + 0x18]
cmp	qword ptr [r13 + 0x10], rax
jae	0x14004000e
jae	0x14004000e
xor	r14d, r14d
jmp	0x14003f3bb
jmp	0x14003f3bb
nop	
mov	rax, qword ptr [r12 + 0x18]
cmp	qword ptr [r12 + 0x10], rax
jae	0x14003ffd5
jae	0x14003ffd5
xor	ebp, ebp
jmp	0x14003f3d7
jmp	0x14003f3d7
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x70]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rbp
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rdx, qword ptr [rsp + 0x80]
jmp	0x14003fbc3
jmp	0x14003fbc3
nop	dword ptr [rax]
mov	dword ptr [rsp + 0x38], r9d
xor	r14d, r14d
mov	r12d, 1
jmp	0x14003f547
jmp	0x14003f547
mov	rcx, qword ptr [rsp + 0x70]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rbp
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0x80]
jmp	0x14003f939
jmp	0x14003f939
mov	dword ptr [rsp + 0x38], r9d
mov	r14d, eax
mov	r12d, 1
jmp	0x14003f550
jmp	0x14003f550
mov	eax, 0xf
jmp	0x14003fbb5
jmp	0x14003fbb5
mov	edx, 0xf
jmp	0x14003f930
jmp	0x14003f930
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x14003f64a
jne	0x14003f64a
mov	byte ptr [rsp + 0x38], 1
xor	ebx, ebx
jmp	0x14003f64f
jmp	0x14003f64f
nop	dword ptr [rax]
mov	rax, qword ptr [r15]
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	ebp, eax
mov	eax, 0
cmove	r15, rax
jmp	0x14003f662
jmp	0x14003f662
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
jne	0x14003f43e
jne	0x14003f43e
mov	r14d, 1
xor	ebx, ebx
jmp	0x14003f441
jmp	0x14003f441
nop	dword ptr [rax]
mov	dword ptr [rsp + 0x38], 0xffffffff
movzx	r8d, byte ptr [rsi + 0x20]
mov	r14d, 1
xor	r12d, r12d
mov	dword ptr [rsp + 0x40], 0
jmp	0x14003f547
jmp	0x14003f547
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
mov	ebp, eax
jne	0x14003f477
jne	0x14003f477
mov	ebp, 0xffffffff
xor	ebx, ebx
jmp	0x14003f477
jmp	0x14003f477
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x1400400a5
jae	0x1400400a5
xor	r12d, r12d
jmp	0x14003f454
jmp	0x14003f454
mov	rax, qword ptr [r15]
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	ebp, eax
mov	eax, 0
cmove	r15, rax
jmp	0x14003faf2
jmp	0x14003faf2
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
mov	edx, dword ptr [rsp + 0x38]
jmp	0x14003f435
jmp	0x14003f435
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x14003fada
jne	0x14003fada
movzx	eax, byte ptr [rsp + 0x7e]
xor	ebx, ebx
mov	byte ptr [rsp + 0x38], al
jmp	0x14003fadf
jmp	0x14003fadf
nop	dword ptr [rax + rax]
mov	byte ptr [rsp + 0x7e], r14b
mov	rbp, qword ptr [rsp + 0x88]
xor	r14d, r14d
mov	dword ptr [rsp + 0x4c], 0
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x14003f68a
jmp	0x14003f68a
mov	rax, qword ptr [r12]
mov	byte ptr [rsp + 0x4c], r8b
mov	rcx, r12
mov	dword ptr [rsp + 0x40], edx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x40]
movzx	r8d, byte ptr [rsp + 0x4c]
cmp	eax, -1
mov	eax, 0
cmovne	rax, r12
mov	r15, rax
mov	eax, 0
cmovne	ebp, eax
jmp	0x14003f3d7
jmp	0x14003f3d7
mov	rax, qword ptr [r13]
mov	byte ptr [rsp + 0x50], r8b
mov	rcx, r13
xor	ebx, ebx
mov	dword ptr [rsp + 0x4c], edx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x4c]
movzx	r8d, byte ptr [rsp + 0x50]
cmp	eax, -1
mov	eax, 0
cmovne	rbx, r13
cmovne	r14d, eax
jmp	0x14003f3bb
jmp	0x14003f3bb
mov	byte ptr [rsp + 0x7e], r14b
mov	rbp, qword ptr [rsp + 0x88]
xor	r14d, r14d
mov	dword ptr [rsp + 0x4c], 0
mov	rcx, qword ptr [rsp + 0x80]
mov	byte ptr [rsp + 0x7d], 0
jmp	0x14003f68a
jmp	0x14003f68a
mov	byte ptr [rsp + 0x7e], 0
mov	r14d, eax
jmp	0x14003f68a
jmp	0x14003f68a
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x40], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x40]
cmp	eax, -1
mov	ebp, eax
mov	eax, 0xffffffff
cmove	ebp, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x14003f3f3
jmp	0x14003f3f3
mov	rax, qword ptr [r15]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
mov	eax, 0
cmove	r15, rax
cmovne	r12d, eax
jmp	0x14003f454
jmp	0x14003f454
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x14003f6ac
jmp	0x14003f6ac
mov	rcx, qword ptr [rsp + 0x70]
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
jmp	0x1400400f5
jmp	0x1400400f5
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
mov	rax, qword ptr [r8 + 8]
mov	rdi, qword ptr [r9 + 8]
mov	rbp, qword ptr [rsp + 0x110]
mov	r13, qword ptr [r8]
mov	r12, qword ptr [r9]
mov	rbx, r13
mov	qword ptr [rsp + 0xf0], rcx
lea	rcx, [rip + 0x772c5]
mov	r15, r12
mov	qword ptr [rsp + 0x40], rdi
mov	qword ptr [rsp + 0x68], rax
mov	dword ptr [rsp + 0x38], eax
call	0x140022a70
call	0x140022a70
mov	rdi, rax
mov	rax, qword ptr [rbp + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	r14, [rax + rdi*8]
mov	rsi, qword ptr [r14]
test	rsi, rsi
je	0x140040b30
je	0x140040b30
mov	edx, dword ptr [rbp + 0x18]
mov	edi, 8
and	edx, 0x4a
cmp	edx, 0x40
je	0x1400401af
je	0x1400401af
cmp	edx, 8
mov	edi, 0xa
mov	eax, 0x10
cmove	edi, eax
cmp	dword ptr [rsp + 0x38], -1
sete	r8b
test	r13, r13
setne	r14b
and	r14b, r8b
jne	0x140040bf8
jne	0x140040bf8
mov	r14d, r8d
cmp	dword ptr [rsp + 0x40], -1
sete	r13b
test	r12, r12
setne	bpl
and	bpl, r13b
jne	0x140040c10
jne	0x140040c10
mov	ebp, r13d
cmp	r14b, bpl
je	0x140040a78
je	0x140040a78
test	rbx, rbx
je	0x1400401fe
je	0x1400401fe
test	r8b, r8b
jne	0x140040b12
jne	0x140040b12
movzx	ebp, byte ptr [rsp + 0x38]
cmp	byte ptr [rsi + 0x6e], bpl
movzx	r8d, byte ptr [rsi + 0x20]
sete	byte ptr [rsp + 0x7f]
je	0x14004021d
je	0x14004021d
cmp	byte ptr [rsi + 0x6f], bpl
jne	0x140040b08
jne	0x140040b08
test	r8b, r8b
jne	0x140040550
jne	0x140040550
cmp	byte ptr [rsi + 0x48], bpl
je	0x140040294
je	0x140040294
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
cmp	rax, rcx
jae	0x140040dbb
jae	0x140040dbb
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rcx
jae	0x140040d0a
jae	0x140040d0a
xor	r14d, r14d
test	r15, r15
setne	r12b
and	r12b, r13b
jne	0x140040d83
jne	0x140040d83
mov	r12d, r13d
cmp	r12b, r14b
je	0x140040d38
je	0x140040d38
test	rbx, rbx
je	0x140040d77
je	0x140040d77
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140040d5b
jae	0x140040d5b
movzx	ebp, byte ptr [rax]
mov	dword ptr [rsp + 0x38], 0xffffffff
movzx	r8d, byte ptr [rsi + 0x20]
mov	dword ptr [rsp + 0x40], 0
mov	r9d, dword ptr [rsp + 0x38]
xor	r12d, r12d
test	r8b, r8b
je	0x1400402b3
je	0x1400402b3
cmp	byte ptr [rsi + 0x49], bpl
je	0x140040630
je	0x140040630
cmp	byte ptr [rsi + 0x48], bpl
je	0x140040630
je	0x140040630
cmp	byte ptr [rsi + 0x72], bpl
je	0x140040560
je	0x140040560
test	r12b, r12b
je	0x140040630
je	0x140040630
cmp	byte ptr [rsi + 0x70], bpl
je	0x1400402e0
je	0x1400402e0
cmp	byte ptr [rsi + 0x71], bpl
jne	0x140040c60
jne	0x140040c60
test	edx, edx
sete	al
cmp	edi, 0x10
sete	cl
or	al, cl
je	0x140040c9c
je	0x140040c9c
mov	dword ptr [rsp + 0x40], 0
xor	r12d, r12d
mov	edi, 0x10
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
cmp	rax, rcx
jae	0x1400405b0
jae	0x1400405b0
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rcx
jae	0x1400405d8
jae	0x1400405d8
xor	r8d, r8d
test	r15, r15
setne	r14b
and	r14b, r13b
jne	0x1400406c0
jne	0x1400406c0
mov	r14d, r13d
cmp	r14b, r8b
jne	0x140040600
jne	0x140040600
mov	dword ptr [rsp + 0x38], 0xffffffff
movzx	r8d, byte ptr [rsi + 0x20]
mov	r14d, 1
cmp	edi, 0x10
je	0x140040641
je	0x140040641
movsxd	rax, edi
mov	dword ptr [rsp + 0x60], edi
mov	qword ptr [rsp + 0x50], rax
lea	rax, [rsp + 0x80]
mov	byte ptr [rsp + 0x90], 0
mov	qword ptr [rsp + 0x70], rax
lea	rax, [rsp + 0x90]
mov	qword ptr [rsp + 0x58], rax
mov	qword ptr [rsp + 0x80], rax
mov	qword ptr [rsp + 0x88], 0
test	r8b, r8b
jne	0x140040a60
jne	0x140040a60
mov	eax, 0xffff
xor	edx, edx
idiv	edi
mov	dword ptr [rsp + 0x78], eax
movzx	eax, byte ptr [rsi + 0x88]
mov	byte ptr [rsp + 0x7e], al
test	al, al
jne	0x140040860
jne	0x140040860
mov	byte ptr [rsp + 0x7d], 0
test	r14b, r14b
jne	0x140040e00
jne	0x140040e00
xor	eax, eax
mov	word ptr [rsp + 0x4c], ax
movzx	eax, byte ptr [rsp + 0x60]
add	eax, 0x30
mov	byte ptr [rsp + 0x7e], al
cmp	qword ptr [rsp + 0x50], 0xa
ja	0x140040660
ja	0x140040660
cmp	bpl, 0x2f
jle	0x140040840
jle	0x140040840
cmp	bpl, byte ptr [rsp + 0x7e]
jge	0x140040840
jge	0x140040840
movsx	ebp, bpl
sub	ebp, 0x30
movzx	eax, word ptr [rsp + 0x4c]
cmp	word ptr [rsp + 0x78], ax
jb	0x140040690
jb	0x140040690
imul	eax, edi
mov	edx, 0xffff
sub	edx, ebp
movzx	ecx, ax
cmp	ecx, edx
setg	dl
add	eax, ebp
or	byte ptr [rsp + 0x7d], dl
mov	rdx, qword ptr [rbx + 0x18]
mov	word ptr [rsp + 0x4c], ax
mov	rax, qword ptr [rbx + 0x10]
add	dword ptr [rsp + 0x40], 1
cmp	rax, rdx
jae	0x1400406a6
jae	0x1400406a6
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x140040cc3
jae	0x140040cc3
mov	byte ptr [rsp + 0x38], 0
test	r15, r15
setne	bpl
and	bpl, r13b
jne	0x140040808
jne	0x140040808
mov	ebp, r13d
cmp	bpl, byte ptr [rsp + 0x38]
jne	0x1400406e0
jne	0x1400406e0
mov	dword ptr [rsp + 0x38], 0xffffffff
mov	rbp, qword ptr [rsp + 0x88]
mov	byte ptr [rsp + 0x7e], 1
mov	rcx, qword ptr [rsp + 0x80]
mov	rax, rcx
test	rbp, rbp
jne	0x140040730
jne	0x140040730
cmp	r12b, 1
je	0x1400407bd
je	0x1400407bd
mov	eax, dword ptr [rsp + 0x40]
test	eax, eax
jne	0x1400407bd
jne	0x1400407bd
mov	rax, qword ptr [rsp + 0x120]
xor	r8d, r8d
mov	word ptr [rax], r8w
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x7e], 0
je	0x1400404f9
je	0x1400404f9
mov	rax, qword ptr [rsp + 0x118]
or	dword ptr [rax], 2
mov	edx, dword ptr [rsp + 0x38]
mov	rdi, qword ptr [rsp + 0xf0]
movabs	rax, 0xffffffff00000000
and	rax, qword ptr [rsp + 0x68]
or	rax, rdx
mov	qword ptr [rdi], rbx
mov	qword ptr [rdi + 8], rax
mov	rax, qword ptr [rsp + 0x58]
cmp	rcx, rax
je	0x14004052d
je	0x14004052d
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0xf0]
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
cmp	byte ptr [rsi + 0x49], bpl
jne	0x140040226
jne	0x140040226
jmp	0x140040294
jmp	0x140040294
nop	
mov	eax, r12d
xor	eax, 1
cmp	edi, 0xa
sete	cl
or	al, cl
je	0x1400402d0
je	0x1400402d0
test	edx, edx
sete	r12b
cmp	edi, 8
sete	cl
or	r12b, cl
je	0x1400407f8
je	0x1400407f8
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
mov	edi, 8
mov	dword ptr [rsp + 0x40], 0
cmp	rax, rcx
jb	0x140040314
jb	0x140040314
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
mov	edx, dword ptr [rsp + 0x38]
cmp	rax, rcx
jb	0x140040325
jb	0x140040325
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
jne	0x140040325
jne	0x140040325
mov	r8d, 1
xor	ebx, ebx
jmp	0x140040328
jmp	0x140040328
nop	
test	rbx, rbx
je	0x140040720
je	0x140040720
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400406ff
jae	0x1400406ff
movzx	ebp, byte ptr [rax]
movzx	r8d, byte ptr [rsi + 0x20]
mov	r9d, 0xffffffff
test	r12b, r12b
jne	0x1400402a4
jne	0x1400402a4
nop	
mov	dword ptr [rsp + 0x38], r9d
xor	r14d, r14d
cmp	edi, 0x10
jne	0x140040360
jne	0x140040360
mov	qword ptr [rsp + 0x50], 0x16
mov	dword ptr [rsp + 0x60], 0x16
jmp	0x14004036c
jmp	0x14004036c
nop	word ptr [rax + rax]
lea	eax, [rbp - 0x30]
cmp	al, 9
jbe	0x14004040d
jbe	0x14004040d
lea	eax, [rbp - 0x61]
cmp	al, 5
ja	0x140040820
ja	0x140040820
movsx	ebp, bpl
movzx	eax, word ptr [rsp + 0x4c]
sub	ebp, 0x57
cmp	word ptr [rsp + 0x78], ax
jae	0x140040424
jae	0x140040424
nop	dword ptr [rax]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x7d], 1
cmp	rax, rdx
jb	0x140040457
jb	0x140040457
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x14004045f
jmp	0x14004045f
nop	dword ptr [rax]
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x140040bc0
jae	0x140040bc0
xor	r14d, r14d
jmp	0x14004033b
jmp	0x14004033b
nop	word ptr cs:[rax + rax]
test	rbx, rbx
je	0x140040a48
je	0x140040a48
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140040a31
jae	0x140040a31
movzx	ebp, byte ptr [rax]
jmp	0x140040a4f
jmp	0x140040a4f
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
mov	ebp, eax
jne	0x14004061a
jne	0x14004061a
nop	dword ptr [rax + rax]
mov	ebp, 0xffffffff
xor	ebx, ebx
jmp	0x14004061a
jmp	0x14004061a
nop	dword ptr [rax]
mov	rdx, qword ptr [rsp + 0x58]
movzx	r13d, byte ptr [rsp + 0x40]
lea	rdi, [rbp + 1]
cmp	rcx, rdx
je	0x140040cb9
je	0x140040cb9
mov	rdx, qword ptr [rsp + 0x90]
cmp	rdx, rdi
jb	0x140040c73
jb	0x140040c73
mov	byte ptr [rax + rbp], r13b
mov	rax, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x88], rdi
mov	r8, qword ptr [rsp + 0x70]
mov	byte ptr [rax + rbp + 1], 0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
call	0x1400ae850
call	0x1400ae850
test	al, al
jne	0x140040796
jne	0x140040796
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
mov	r9d, dword ptr [rsp + 0x40]
test	r9d, r9d
jne	0x1400407b5
jne	0x1400407b5
cmp	r12b, 1
je	0x1400407b5
je	0x1400407b5
cmp	qword ptr [rsp + 0x88], 0
je	0x140040f1d
je	0x140040f1d
mov	rcx, qword ptr [rsp + 0x80]
test	r14b, r14b
jne	0x1400404ca
jne	0x1400404ca
cmp	byte ptr [rsp + 0x7d], 0
je	0x140040ae0
je	0x140040ae0
mov	rax, qword ptr [rsp + 0x120]
mov	edx, 0xffffffff
mov	word ptr [rax], dx
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
jmp	0x1400404e7
jmp	0x1400404e7
nop	dword ptr [rax]
add	dword ptr [rsp + 0x40], 1
mov	r12d, eax
jmp	0x140040303
jmp	0x140040303
nop	dword ptr [rax]
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x140040ce8
jae	0x140040ce8
xor	ebp, ebp
jmp	0x140040480
jmp	0x140040480
nop	dword ptr [rax]
lea	eax, [rbp - 0x41]
cmp	al, 5
ja	0x140040840
ja	0x140040840
movsx	ebp, bpl
sub	ebp, 0x37
jmp	0x140040414
jmp	0x140040414
xor	r14d, r14d
nop	word ptr cs:[rax + rax]
mov	byte ptr [rsp + 0x7e], 0
mov	rbp, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x1400404a8
jmp	0x1400404a8
nop	word ptr [rax + rax]
test	r14b, r14b
jne	0x140040e93
jne	0x140040e93
lea	rax, [rsi + 0x72]
mov	byte ptr [rsp + 0x7d], 0
mov	qword ptr [rsp + 0x60], rax
xor	eax, eax
mov	word ptr [rsp + 0x4c], ax
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x140040890
je	0x140040890
cmp	byte ptr [rsi + 0x49], bpl
je	0x1400409b0
je	0x1400409b0
mov	r8, qword ptr [rsp + 0x50]
cmp	byte ptr [rsi + 0x48], bpl
sete	al
test	r8, r8
sete	dl
or	al, dl
jne	0x140040840
jne	0x140040840
movsx	edx, bpl
mov	rbp, qword ptr [rsp + 0x60]
mov	rcx, rbp
call	0x140015988
call	0x140015988
test	rax, rax
je	0x140040833
je	0x140040833
sub	rax, rbp
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
movzx	edx, word ptr [rsp + 0x4c]
cmp	word ptr [rsp + 0x78], dx
jb	0x140040960
jb	0x140040960
imul	edx, edi
mov	ecx, 0xffff
sub	ecx, eax
movzx	r8d, dx
cmp	r8d, ecx
setg	cl
add	eax, edx
or	byte ptr [rsp + 0x7d], cl
add	dword ptr [rsp + 0x40], 1
mov	word ptr [rsp + 0x4c], ax
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x140040976
jae	0x140040976
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x140040dd9
jae	0x140040dd9
mov	byte ptr [rsp + 0x38], 0
test	r15, r15
setne	bpl
and	bpl, r13b
jne	0x140040aa0
jne	0x140040aa0
mov	ebp, r13d
cmp	bpl, byte ptr [rsp + 0x38]
jne	0x140040990
jne	0x140040990
mov	dword ptr [rsp + 0x38], 0xffffffff
mov	rbp, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x1400404a8
jmp	0x1400404a8
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rsp + 0x7e]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x7d], al
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rdx
jb	0x14004090d
jb	0x14004090d
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x140040915
jmp	0x140040915
nop	dword ptr [rax]
test	rbx, rbx
je	0x140040ac8
je	0x140040ac8
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140040ab5
jae	0x140040ab5
movzx	ebp, byte ptr [rax]
jmp	0x140040acf
jmp	0x140040acf
nop	
mov	rdx, qword ptr [rsp + 0x80]
mov	r11d, dword ptr [rsp + 0x40]
mov	rbp, qword ptr [rsp + 0x88]
mov	rcx, rdx
test	r11d, r11d
je	0x140040ebe
je	0x140040ebe
lea	rax, [rbp + 1]
mov	byte ptr [rsp + 0x40], r11b
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x58]
cmp	rdx, rax
je	0x140040caf
je	0x140040caf
mov	rax, qword ptr [rsp + 0x90]
mov	rcx, qword ptr [rsp + 0x38]
cmp	rax, rcx
jb	0x140040c30
jb	0x140040c30
movzx	eax, byte ptr [rsp + 0x40]
mov	dword ptr [rsp + 0x40], 0
mov	byte ptr [rdx + rbp], al
mov	rdx, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x88], rdx
mov	byte ptr [rax + rdx], 0
jmp	0x140040900
jmp	0x140040900
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x140040a4f
jne	0x140040a4f
nop	dword ptr [rax]
mov	ebp, 0xffffffff
xor	ebx, ebx
mov	dword ptr [rsp + 0x38], 0xffffffff
jmp	0x1400403ec
jmp	0x1400403ec
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x70]
mov	edx, 0x20
call	0x14009f7e0
call	0x14009f7e0
jmp	0x1400403ab
jmp	0x1400403ab
nop	dword ptr [rax]
mov	byte ptr [rsp + 0x7f], 0
movzx	r8d, byte ptr [rsi + 0x20]
xor	ebp, ebp
xor	r12d, r12d
mov	dword ptr [rsp + 0x40], 0
mov	r14d, 1
jmp	0x140040357
jmp	0x140040357
nop	word ptr [rax + rax]
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x140040d99
jae	0x140040d99
xor	ebp, ebp
jmp	0x140040936
jmp	0x140040936
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x140040acf
jne	0x140040acf
nop	dword ptr [rax]
mov	ebp, 0xffffffff
xor	ebx, ebx
mov	dword ptr [rsp + 0x38], 0xffffffff
jmp	0x14004087e
jmp	0x14004087e
nop	dword ptr [rax]
movzx	edi, word ptr [rsp + 0x4c]
mov	eax, edi
neg	eax
cmp	byte ptr [rsp + 0x7f], 0
cmove	eax, edi
mov	rdi, qword ptr [rsp + 0x120]
mov	word ptr [rdi], ax
jmp	0x1400404e7
jmp	0x1400404e7
nop	dword ptr [rax]
mov	byte ptr [rsp + 0x7f], 0
jmp	0x140040294
jmp	0x140040294
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140040ecb
jae	0x140040ecb
movzx	ebp, byte ptr [rax]
jmp	0x140040203
jmp	0x140040203
nop	dword ptr [rax + rax]
mov	ecx, 0x90
call	0x1400b2c30
call	0x1400b2c30
mov	rsi, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x7e415]
lea	rdx, [rbp + 0xd0]
mov	qword ptr [rsi + 0x10], 0
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rsi + 0x18], 0
mov	qword ptr [rsi], rax
xor	eax, eax
mov	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
mov	qword ptr [rsi + 0x38], 0
mov	qword ptr [rsi + 0x40], 0
mov	word ptr [rsi + 0x48], ax
mov	byte ptr [rsi + 0x88], 0
call	0x140093c20
call	0x140093c20
mov	rcx, qword ptr [rbp + 0xd0]
mov	rdx, rsi
mov	r8, rdi
call	0x140099d30
call	0x140099d30
mov	rsi, qword ptr [r14]
jmp	0x14004018f
jmp	0x14004018f
nop	dword ptr [rax]
mov	rax, qword ptr [r15]
mov	dword ptr [rsp + 0x4c], edx
mov	rcx, r15
mov	byte ptr [rsp + 0x38], r8b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, byte ptr [rsp + 0x38]
mov	edx, dword ptr [rsp + 0x4c]
cmp	eax, -1
mov	eax, 0
cmove	r15, rax
cmovne	r14d, eax
jmp	0x14004033b
jmp	0x14004033b
nop	dword ptr [rax]
mov	rax, qword ptr [r13 + 0x18]
cmp	qword ptr [r13 + 0x10], rax
jae	0x140040e5f
jae	0x140040e5f
xor	r14d, r14d
jmp	0x1400401cb
jmp	0x1400401cb
nop	
mov	rax, qword ptr [r12 + 0x18]
cmp	qword ptr [r12 + 0x10], rax
jae	0x140040e26
jae	0x140040e26
xor	ebp, ebp
jmp	0x1400401e7
jmp	0x1400401e7
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x70]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rbp
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rdx, qword ptr [rsp + 0x80]
jmp	0x140040a03
jmp	0x140040a03
nop	dword ptr [rax]
mov	dword ptr [rsp + 0x38], r9d
xor	r14d, r14d
mov	r12d, 1
jmp	0x140040357
jmp	0x140040357
mov	rcx, qword ptr [rsp + 0x70]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rbp
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0x80]
jmp	0x140040759
jmp	0x140040759
mov	dword ptr [rsp + 0x38], r9d
mov	r14d, eax
mov	r12d, 1
jmp	0x140040360
jmp	0x140040360
mov	eax, 0xf
jmp	0x1400409f5
jmp	0x1400409f5
mov	edx, 0xf
jmp	0x140040750
jmp	0x140040750
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x140040468
jne	0x140040468
mov	byte ptr [rsp + 0x38], 1
xor	ebx, ebx
jmp	0x14004046d
jmp	0x14004046d
nop	dword ptr [rax]
mov	rax, qword ptr [r15]
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	ebp, eax
mov	eax, 0
cmove	r15, rax
jmp	0x140040480
jmp	0x140040480
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
jne	0x14004024e
jne	0x14004024e
mov	r14d, 1
xor	ebx, ebx
jmp	0x140040251
jmp	0x140040251
nop	dword ptr [rax]
mov	dword ptr [rsp + 0x38], 0xffffffff
movzx	r8d, byte ptr [rsi + 0x20]
mov	r14d, 1
xor	r12d, r12d
mov	dword ptr [rsp + 0x40], 0
jmp	0x140040357
jmp	0x140040357
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
mov	ebp, eax
jne	0x140040287
jne	0x140040287
mov	ebp, 0xffffffff
xor	ebx, ebx
jmp	0x140040287
jmp	0x140040287
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x140040ef7
jae	0x140040ef7
xor	r12d, r12d
jmp	0x140040264
jmp	0x140040264
mov	rax, qword ptr [r15]
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	ebp, eax
mov	eax, 0
cmove	r15, rax
jmp	0x140040936
jmp	0x140040936
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
mov	edx, dword ptr [rsp + 0x38]
jmp	0x140040245
jmp	0x140040245
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x14004091e
jne	0x14004091e
movzx	eax, byte ptr [rsp + 0x7e]
xor	ebx, ebx
mov	byte ptr [rsp + 0x38], al
jmp	0x140040923
jmp	0x140040923
nop	dword ptr [rax + rax]
xor	r10d, r10d
mov	byte ptr [rsp + 0x7e], r14b
mov	rbp, qword ptr [rsp + 0x88]
xor	r14d, r14d
mov	word ptr [rsp + 0x4c], r10w
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x1400404a8
jmp	0x1400404a8
mov	rax, qword ptr [r12]
mov	byte ptr [rsp + 0x4c], r8b
mov	rcx, r12
mov	dword ptr [rsp + 0x40], edx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x40]
movzx	r8d, byte ptr [rsp + 0x4c]
cmp	eax, -1
mov	eax, 0
cmovne	rax, r12
mov	r15, rax
mov	eax, 0
cmovne	ebp, eax
jmp	0x1400401e7
jmp	0x1400401e7
mov	rax, qword ptr [r13]
mov	byte ptr [rsp + 0x50], r8b
mov	rcx, r13
xor	ebx, ebx
mov	dword ptr [rsp + 0x4c], edx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x4c]
movzx	r8d, byte ptr [rsp + 0x50]
cmp	eax, -1
mov	eax, 0
cmovne	rbx, r13
cmovne	r14d, eax
jmp	0x1400401cb
jmp	0x1400401cb
xor	r11d, r11d
mov	byte ptr [rsp + 0x7e], r14b
mov	rbp, qword ptr [rsp + 0x88]
xor	r14d, r14d
mov	word ptr [rsp + 0x4c], r11w
mov	rcx, qword ptr [rsp + 0x80]
mov	byte ptr [rsp + 0x7d], 0
jmp	0x1400404a8
jmp	0x1400404a8
mov	byte ptr [rsp + 0x7e], 0
mov	r14d, eax
jmp	0x1400404a8
jmp	0x1400404a8
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x40], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x40]
cmp	eax, -1
mov	ebp, eax
mov	eax, 0xffffffff
cmove	ebp, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x140040203
jmp	0x140040203
mov	rax, qword ptr [r15]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
mov	eax, 0
cmove	r15, rax
cmovne	r12d, eax
jmp	0x140040264
jmp	0x140040264
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x1400404ca
jmp	0x1400404ca
mov	rcx, qword ptr [rsp + 0x70]
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
jmp	0x140040f47
jmp	0x140040f47
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xb8
mov	rax, qword ptr [r8 + 8]
mov	rsi, qword ptr [r9 + 8]
mov	r12, qword ptr [r9]
mov	rbp, qword ptr [rsp + 0x120]
mov	r13, qword ptr [r8]
mov	r15d, eax
mov	qword ptr [rsp + 0x100], rcx
lea	rcx, [rip + 0x76475]
mov	rbx, r13
mov	qword ptr [rsp + 0x38], rsi
mov	qword ptr [rsp + 0x80], rax
mov	qword ptr [rsp + 0x30], r12
call	0x140022a70
call	0x140022a70
mov	rdi, rax
mov	rax, qword ptr [rbp + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	r14, [rax + rdi*8]
mov	rsi, qword ptr [r14]
test	rsi, rsi
je	0x1400419c0
je	0x1400419c0
mov	edx, dword ptr [rbp + 0x18]
mov	edi, 8
and	edx, 0x4a
cmp	edx, 0x40
je	0x140041003
je	0x140041003
cmp	edx, 8
mov	edi, 0xa
mov	eax, 0x10
cmove	edi, eax
cmp	r15d, -1
sete	r8b
test	r13, r13
setne	r14b
and	r14b, r8b
jne	0x140041a90
jne	0x140041a90
mov	r14d, r8d
cmp	dword ptr [rsp + 0x38], -1
sete	r13b
test	r12, r12
setne	bpl
and	bpl, r13b
jne	0x140041ab0
jne	0x140041ab0
mov	ebp, r13d
cmp	r14b, bpl
je	0x1400418f0
je	0x1400418f0
test	rbx, rbx
je	0x140041051
je	0x140041051
test	r8b, r8b
jne	0x14004198a
jne	0x14004198a
mov	ebp, r15d
cmp	byte ptr [rsi + 0x6e], bpl
movzx	r8d, byte ptr [rsi + 0x20]
sete	byte ptr [rsp + 0x77]
je	0x14004106e
je	0x14004106e
cmp	byte ptr [rsi + 0x6f], bpl
jne	0x140041980
jne	0x140041980
test	r8b, r8b
jne	0x1400413c0
jne	0x1400413c0
cmp	byte ptr [rsi + 0x48], bpl
je	0x1400410e6
je	0x1400410e6
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
cmp	rax, rcx
jae	0x140041c68
jae	0x140041c68
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rcx
jae	0x140041bb1
jae	0x140041bb1
xor	r14d, r14d
cmp	qword ptr [rsp + 0x30], 0
setne	r12b
and	r12b, r13b
jne	0x140041c23
jne	0x140041c23
mov	r12d, r13d
cmp	r12b, r14b
je	0x140041be0
je	0x140041be0
test	rbx, rbx
je	0x140041c17
je	0x140041c17
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140041bfb
jae	0x140041bfb
movzx	ebp, byte ptr [rax]
movzx	r8d, byte ptr [rsi + 0x20]
mov	r15d, 0xffffffff
mov	r9, qword ptr [rsp + 0x30]
xor	r14d, r14d
xor	r12d, r12d
test	r8b, r8b
je	0x140041100
je	0x140041100
cmp	byte ptr [rsi + 0x49], bpl
je	0x1400414b0
je	0x1400414b0
cmp	byte ptr [rsi + 0x48], bpl
je	0x1400414b0
je	0x1400414b0
cmp	byte ptr [rsi + 0x72], bpl
je	0x1400413d0
je	0x1400413d0
test	r12b, r12b
je	0x1400414b0
je	0x1400414b0
cmp	byte ptr [rsi + 0x70], bpl
je	0x14004112d
je	0x14004112d
cmp	byte ptr [rsi + 0x71], bpl
jne	0x140041b00
jne	0x140041b00
test	edx, edx
sete	al
cmp	edi, 0x10
sete	cl
or	al, cl
je	0x140041b41
je	0x140041b41
xor	r14d, r14d
xor	r12d, r12d
mov	edi, 0x10
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
cmp	rax, rcx
jae	0x140041418
jae	0x140041418
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rcx
jae	0x140041448
jae	0x140041448
xor	r8d, r8d
test	r9, r9
setne	r15b
and	r15b, r13b
jne	0x140041540
jne	0x140041540
mov	r15d, r13d
cmp	r15b, r8b
jne	0x140041480
jne	0x140041480
mov	qword ptr [rsp + 0x30], r9
movzx	r8d, byte ptr [rsi + 0x20]
mov	r15d, 0xffffffff
mov	byte ptr [rsp + 0x38], 1
cmp	edi, 0x10
je	0x1400414c3
je	0x1400414c3
movsxd	rax, edi
mov	dword ptr [rsp + 0x78], edi
mov	qword ptr [rsp + 0x48], rax
lea	rax, [rsp + 0x90]
mov	byte ptr [rsp + 0xa0], 0
mov	qword ptr [rsp + 0x88], rax
lea	rax, [rsp + 0xa0]
mov	qword ptr [rsp + 0x68], rax
mov	qword ptr [rsp + 0x90], rax
mov	qword ptr [rsp + 0x98], 0
test	r8b, r8b
jne	0x1400418d8
jne	0x1400418d8
movabs	rax, 0x7fffffffffffffff
movzx	edx, byte ptr [rsp + 0x77]
add	rax, rdx
movsxd	rdx, edi
mov	rcx, rdx
mov	qword ptr [rsp + 0x58], rdx
xor	edx, edx
mov	qword ptr [rsp + 0x60], rax
div	rcx
mov	qword ptr [rsp + 0x50], rax
movzx	eax, byte ptr [rsi + 0x88]
mov	byte ptr [rsp + 0x76], al
test	al, al
jne	0x140041700
jne	0x140041700
cmp	byte ptr [rsp + 0x38], 0
mov	byte ptr [rsp + 0x75], 0
jne	0x140041c86
jne	0x140041c86
mov	qword ptr [rsp + 0x40], 0
movzx	eax, byte ptr [rsp + 0x78]
add	eax, 0x30
mov	byte ptr [rsp + 0x76], al
cmp	qword ptr [rsp + 0x48], 0xa
ja	0x1400414e0
ja	0x1400414e0
cmp	bpl, 0x2f
jle	0x1400416e0
jle	0x1400416e0
cmp	bpl, byte ptr [rsp + 0x76]
jge	0x1400416e0
jge	0x1400416e0
movsx	ebp, bpl
sub	ebp, 0x30
mov	rax, qword ptr [rsp + 0x40]
cmp	qword ptr [rsp + 0x50], rax
jb	0x140041510
jb	0x140041510
mov	rcx, qword ptr [rsp + 0x58]
mov	rdx, qword ptr [rsp + 0x60]
movsxd	rbp, ebp
imul	rax, rcx
sub	rdx, rbp
cmp	rdx, rax
setb	dl
add	rax, rbp
or	byte ptr [rsp + 0x75], dl
mov	rdx, qword ptr [rbx + 0x18]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rbx + 0x10]
add	r14d, 1
cmp	rax, rdx
jae	0x140041526
jae	0x140041526
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x1400419a0
jae	0x1400419a0
xor	ebp, ebp
cmp	qword ptr [rsp + 0x30], 0
setne	dil
and	dil, r13b
jne	0x1400416a8
jne	0x1400416a8
mov	edi, r13d
cmp	dil, bpl
jne	0x140041560
jne	0x140041560
mov	byte ptr [rsp + 0x76], 1
mov	rdi, qword ptr [rsp + 0x98]
mov	r15d, 0xffffffff
mov	rcx, qword ptr [rsp + 0x90]
mov	rax, rcx
test	rdi, rdi
jne	0x1400415b8
jne	0x1400415b8
cmp	r12b, 1
je	0x140041640
je	0x140041640
test	r14d, r14d
jne	0x140041640
jne	0x140041640
mov	rax, qword ptr [rsp + 0x130]
mov	qword ptr [rax], 0
mov	rax, qword ptr [rsp + 0x128]
mov	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x76], 0
je	0x14004136a
je	0x14004136a
mov	rax, qword ptr [rsp + 0x128]
or	dword ptr [rax], 2
mov	rsi, qword ptr [rsp + 0x100]
mov	edx, r15d
movabs	rax, 0xffffffff00000000
and	rax, qword ptr [rsp + 0x80]
or	rax, rdx
mov	qword ptr [rsi + 8], rax
mov	rax, qword ptr [rsp + 0x68]
mov	qword ptr [rsi], rbx
cmp	rcx, rax
je	0x1400413a0
je	0x1400413a0
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0x100]
add	rsp, 0xb8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
cmp	byte ptr [rsi + 0x49], bpl
jne	0x140041077
jne	0x140041077
jmp	0x1400410e6
jmp	0x1400410e6
nop	
mov	eax, r12d
xor	eax, 1
cmp	edi, 0xa
sete	cl
or	al, cl
je	0x14004111d
je	0x14004111d
test	edx, edx
sete	r12b
cmp	edi, 8
sete	cl
or	r12b, cl
je	0x140041698
je	0x140041698
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
xor	r14d, r14d
mov	edi, 8
cmp	rax, rcx
jb	0x14004115c
jb	0x14004115c
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	qword ptr [rsp + 0x38], r9
mov	rcx, rbx
mov	dword ptr [rsp + 0x30], edx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
mov	r9, qword ptr [rsp + 0x38]
mov	edx, dword ptr [rsp + 0x30]
cmp	rax, rcx
jb	0x14004116d
jb	0x14004116d
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	qword ptr [rsp + 0x38], r9
mov	rcx, rbx
mov	dword ptr [rsp + 0x30], edx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x30]
mov	r9, qword ptr [rsp + 0x38]
cmp	eax, -1
jne	0x14004116d
jne	0x14004116d
mov	r8d, 1
xor	ebx, ebx
jmp	0x140041170
jmp	0x140041170
nop	dword ptr [rax]
test	rbx, rbx
je	0x1400415a8
je	0x1400415a8
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004157f
jae	0x14004157f
movzx	ebp, byte ptr [rax]
movzx	r8d, byte ptr [rsi + 0x20]
mov	r15d, 0xffffffff
test	r12b, r12b
jne	0x1400410f1
jne	0x1400410f1
nop	
mov	qword ptr [rsp + 0x30], r9
mov	byte ptr [rsp + 0x38], 0
cmp	edi, 0x10
jne	0x1400411aa
jne	0x1400411aa
mov	qword ptr [rsp + 0x48], 0x16
mov	dword ptr [rsp + 0x78], 0x16
jmp	0x1400411b6
jmp	0x1400411b6
nop	dword ptr [rax]
lea	eax, [rbp - 0x30]
cmp	al, 9
jbe	0x14004127d
jbe	0x14004127d
lea	eax, [rbp - 0x61]
cmp	al, 5
ja	0x1400416c8
ja	0x1400416c8
movsx	ebp, bpl
mov	rax, qword ptr [rsp + 0x40]
sub	ebp, 0x57
cmp	qword ptr [rsp + 0x50], rax
jae	0x140041294
jae	0x140041294
nop	dword ptr [rax]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x75], 1
cmp	rax, rdx
jb	0x1400412cf
jb	0x1400412cf
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x1400412d7
jmp	0x1400412d7
nop	dword ptr [rax]
mov	rax, qword ptr [r9 + 0x18]
cmp	qword ptr [r9 + 0x10], rax
jae	0x140041a50
jae	0x140041a50
xor	r15d, r15d
jmp	0x140041183
jmp	0x140041183
nop	word ptr cs:[rax + rax]
test	rbx, rbx
je	0x1400418c0
je	0x1400418c0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400418af
jae	0x1400418af
movzx	ebp, byte ptr [rax]
jmp	0x1400418c7
jmp	0x1400418c7
mov	rax, qword ptr [rbx]
mov	qword ptr [rsp + 0x38], r9
mov	rcx, rbx
mov	dword ptr [rsp + 0x30], edx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x30]
mov	r9, qword ptr [rsp + 0x38]
cmp	eax, -1
mov	ebp, eax
jne	0x14004149a
jne	0x14004149a
nop	dword ptr [rax]
mov	ebp, 0xffffffff
xor	ebx, ebx
jmp	0x14004149a
jmp	0x14004149a
nop	dword ptr [rax]
mov	rdx, qword ptr [rsp + 0x68]
mov	r13d, r14d
lea	rbp, [rdi + 1]
cmp	rcx, rdx
je	0x140041b5f
je	0x140041b5f
mov	rdx, qword ptr [rsp + 0xa0]
cmp	rdx, rbp
jb	0x140041b15
jb	0x140041b15
mov	byte ptr [rax + rdi], r13b
mov	rax, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x98], rbp
mov	r8, qword ptr [rsp + 0x88]
mov	byte ptr [rax + rdi + 1], 0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
call	0x1400ae850
call	0x1400ae850
test	al, al
jne	0x14004161e
jne	0x14004161e
mov	rax, qword ptr [rsp + 0x128]
mov	dword ptr [rax], 4
test	r14d, r14d
jne	0x140041638
jne	0x140041638
cmp	r12b, 1
je	0x140041638
je	0x140041638
cmp	qword ptr [rsp + 0x98], 0
je	0x140041dbf
je	0x140041dbf
mov	rcx, qword ptr [rsp + 0x90]
cmp	byte ptr [rsp + 0x38], 0
jne	0x14004133b
jne	0x14004133b
cmp	byte ptr [rsp + 0x75], 0
je	0x140041958
je	0x140041958
cmp	byte ptr [rsp + 0x77], 0
mov	rsi, qword ptr [rsp + 0x130]
movabs	rax, 0x7fffffffffffffff
movabs	rdx, 0x8000000000000000
cmovne	rax, rdx
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rsp + 0x128]
mov	dword ptr [rax], 4
jmp	0x140041358
jmp	0x140041358
nop	dword ptr [rax]
add	r14d, 1
mov	r12d, eax
jmp	0x14004114b
jmp	0x14004114b
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x30]
mov	rdx, qword ptr [rax + 0x18]
cmp	qword ptr [rax + 0x10], rdx
jae	0x140041b69
jae	0x140041b69
xor	edi, edi
jmp	0x1400412f8
jmp	0x1400412f8
nop	word ptr [rax + rax]
lea	eax, [rbp - 0x41]
cmp	al, 5
ja	0x1400416e0
ja	0x1400416e0
movsx	ebp, bpl
sub	ebp, 0x37
jmp	0x140041284
jmp	0x140041284
mov	byte ptr [rsp + 0x38], 0
mov	byte ptr [rsp + 0x76], 0
mov	rdi, qword ptr [rsp + 0x98]
mov	rcx, qword ptr [rsp + 0x90]
jmp	0x14004131c
jmp	0x14004131c
nop	word ptr [rax + rax]
cmp	byte ptr [rsp + 0x38], 0
jne	0x140041d21
jne	0x140041d21
lea	rax, [rsi + 0x72]
mov	byte ptr [rsp + 0x75], 0
mov	qword ptr [rsp + 0x78], rax
mov	qword ptr [rsp + 0x40], 0
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x140041734
je	0x140041734
cmp	byte ptr [rsi + 0x49], bpl
je	0x140041850
je	0x140041850
mov	r8, qword ptr [rsp + 0x48]
cmp	byte ptr [rsi + 0x48], bpl
sete	al
test	r8, r8
sete	dl
or	al, dl
jne	0x1400416e0
jne	0x1400416e0
mov	rdi, qword ptr [rsp + 0x78]
movsx	edx, bpl
mov	rcx, rdi
call	0x140015988
call	0x140015988
test	rax, rax
je	0x1400416db
je	0x1400416db
sub	rax, rdi
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
mov	rdx, qword ptr [rsp + 0x40]
cmp	qword ptr [rsp + 0x50], rdx
jb	0x140041800
jb	0x140041800
mov	rcx, qword ptr [rsp + 0x58]
cdqe	
imul	rdx, rcx
mov	rcx, qword ptr [rsp + 0x60]
sub	rcx, rax
cmp	rcx, rdx
setb	cl
add	rax, rdx
or	byte ptr [rsp + 0x75], cl
add	r14d, 1
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x140041816
jae	0x140041816
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x140041b93
jae	0x140041b93
xor	ebp, ebp
cmp	qword ptr [rsp + 0x30], 0
setne	dil
and	dil, r13b
jne	0x140041910
jne	0x140041910
mov	edi, r13d
cmp	dil, bpl
jne	0x140041830
jne	0x140041830
mov	rdi, qword ptr [rsp + 0x98]
mov	rcx, qword ptr [rsp + 0x90]
mov	r15d, 0xffffffff
jmp	0x14004131c
jmp	0x14004131c
nop	
movzx	eax, byte ptr [rsp + 0x76]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x75], al
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rdx
jb	0x1400417b6
jb	0x1400417b6
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x1400417be
jmp	0x1400417be
nop	dword ptr [rax]
test	rbx, rbx
je	0x140041940
je	0x140041940
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004192a
jae	0x14004192a
movzx	ebp, byte ptr [rax]
jmp	0x140041947
jmp	0x140041947
nop	
mov	rdx, qword ptr [rsp + 0x90]
mov	rdi, qword ptr [rsp + 0x98]
mov	rcx, rdx
test	r14d, r14d
je	0x140041d52
je	0x140041d52
mov	rax, qword ptr [rsp + 0x68]
lea	rbp, [rdi + 1]
cmp	rdx, rax
je	0x140041b55
je	0x140041b55
mov	rax, qword ptr [rsp + 0xa0]
cmp	rax, rbp
jb	0x140041ad0
jb	0x140041ad0
mov	byte ptr [rdx + rdi], r14b
mov	rax, qword ptr [rsp + 0x90]
xor	r14d, r14d
mov	qword ptr [rsp + 0x98], rbp
mov	byte ptr [rax + rbp], 0
jmp	0x1400417a9
jmp	0x1400417a9
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x1400418c7
jne	0x1400418c7
nop	
mov	ebp, 0xffffffff
xor	ebx, ebx
mov	r15d, 0xffffffff
jmp	0x14004125c
jmp	0x14004125c
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x88]
mov	edx, 0x20
call	0x14009f7e0
call	0x14009f7e0
jmp	0x1400411f8
jmp	0x1400411f8
nop	
mov	byte ptr [rsp + 0x77], 0
movzx	r8d, byte ptr [rsi + 0x20]
xor	ebp, ebp
xor	r14d, r14d
mov	byte ptr [rsp + 0x38], 1
xor	r12d, r12d
jmp	0x1400411a1
jmp	0x1400411a1
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x30]
mov	rcx, qword ptr [rax + 0x18]
cmp	qword ptr [rax + 0x10], rcx
jae	0x140041c3e
jae	0x140041c3e
xor	edi, edi
jmp	0x1400417df
jmp	0x1400417df
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x140041947
jne	0x140041947
nop	word ptr [rax + rax]
mov	ebp, 0xffffffff
xor	ebx, ebx
mov	r15d, 0xffffffff
jmp	0x140041722
jmp	0x140041722
nop	word ptr [rax + rax]
mov	rsi, qword ptr [rsp + 0x40]
mov	rax, rsi
neg	rax
cmp	byte ptr [rsp + 0x77], 0
cmove	rax, rsi
mov	rsi, qword ptr [rsp + 0x130]
mov	qword ptr [rsi], rax
jmp	0x140041358
jmp	0x140041358
nop	dword ptr [rax]
mov	byte ptr [rsp + 0x77], 0
jmp	0x1400410e6
jmp	0x1400410e6
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140041d60
jae	0x140041d60
movzx	ebp, byte ptr [rax]
jmp	0x140041054
jmp	0x140041054
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x1400412e0
jne	0x1400412e0
mov	ebp, 1
xor	ebx, ebx
jmp	0x1400412e2
jmp	0x1400412e2
nop	
mov	ecx, 0x90
call	0x1400b2c30
call	0x1400b2c30
mov	rsi, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x7d585]
lea	rdx, [rbp + 0xd0]
mov	qword ptr [rsi + 0x10], 0
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rsi + 0x18], 0
mov	qword ptr [rsi], rax
xor	eax, eax
mov	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
mov	qword ptr [rsi + 0x38], 0
mov	qword ptr [rsi + 0x40], 0
mov	word ptr [rsi + 0x48], ax
mov	byte ptr [rsi + 0x88], 0
call	0x140093c20
call	0x140093c20
mov	rcx, qword ptr [rbp + 0xd0]
mov	rdx, rsi
mov	r8, rdi
call	0x140099d30
call	0x140099d30
mov	rsi, qword ptr [r14]
jmp	0x140040fe3
jmp	0x140040fe3
nop	dword ptr [rax]
mov	rax, qword ptr [r9]
mov	dword ptr [rsp + 0x40], edx
mov	rcx, r9
mov	byte ptr [rsp + 0x38], r8b
mov	qword ptr [rsp + 0x30], r9
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r9, qword ptr [rsp + 0x30]
movzx	r8d, byte ptr [rsp + 0x38]
cmp	eax, -1
mov	eax, 0
mov	edx, dword ptr [rsp + 0x40]
cmove	r9, rax
cmovne	r15d, eax
jmp	0x140041183
jmp	0x140041183
nop	dword ptr [rax + rax]
mov	rax, qword ptr [r13 + 0x18]
cmp	qword ptr [r13 + 0x10], rax
jae	0x140041cb2
jae	0x140041cb2
xor	r14d, r14d
jmp	0x14004101e
jmp	0x14004101e
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [r12 + 0x18]
cmp	qword ptr [r12 + 0x10], rax
jae	0x140041ce6
jae	0x140041ce6
xor	ebp, ebp
jmp	0x14004103a
jmp	0x14004103a
nop	word ptr [rax + rax]
mov	qword ptr [rsp + 0x20], 1
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	rcx, qword ptr [rsp + 0x88]
call	0x14009faf0
call	0x14009faf0
mov	rdx, qword ptr [rsp + 0x90]
jmp	0x14004188f
jmp	0x14004188f
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x30], r9
mov	r12d, 1
mov	byte ptr [rsp + 0x38], 0
jmp	0x1400411a1
jmp	0x1400411a1
mov	qword ptr [rsp + 0x20], 1
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	rcx, qword ptr [rsp + 0x88]
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0x90]
jmp	0x1400415de
jmp	0x1400415de
mov	byte ptr [rsp + 0x38], al
mov	r12d, 1
mov	qword ptr [rsp + 0x30], r9
jmp	0x1400411aa
jmp	0x1400411aa
mov	eax, 0xf
jmp	0x140041886
jmp	0x140041886
mov	edx, 0xf
jmp	0x1400415d5
jmp	0x1400415d5
mov	r15, rax
mov	rax, qword ptr [rax]
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmovne	rax, r15
mov	qword ptr [rsp + 0x30], rax
jmp	0x1400412f8
jmp	0x1400412f8
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x1400417c7
jne	0x1400417c7
movzx	ebp, byte ptr [rsp + 0x76]
xor	ebx, ebx
jmp	0x1400417c9
jmp	0x1400417c9
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
jne	0x14004109f
jne	0x14004109f
mov	r14d, 1
xor	ebx, ebx
jmp	0x1400410a2
jmp	0x1400410a2
nop	dword ptr [rax + rax]
mov	byte ptr [rsp + 0x38], 1
movzx	r8d, byte ptr [rsi + 0x20]
xor	r14d, r14d
xor	r12d, r12d
mov	r15d, 0xffffffff
jmp	0x1400411a1
jmp	0x1400411a1
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
mov	ebp, eax
jne	0x1400410db
jne	0x1400410db
mov	ebp, 0xffffffff
xor	ebx, ebx
jmp	0x1400410db
jmp	0x1400410db
mov	rax, qword ptr [rsp + 0x30]
mov	rcx, qword ptr [rax + 0x18]
cmp	qword ptr [rax + 0x10], rcx
jae	0x140041d8c
jae	0x140041d8c
xor	r12d, r12d
jmp	0x1400410b8
jmp	0x1400410b8
mov	r15, rax
mov	rax, qword ptr [rax]
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmovne	rax, r15
mov	qword ptr [rsp + 0x30], rax
jmp	0x1400417df
jmp	0x1400417df
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
mov	edx, dword ptr [rsp + 0x38]
jmp	0x140041096
jmp	0x140041096
movzx	eax, byte ptr [rsp + 0x38]
mov	rdi, qword ptr [rsp + 0x98]
mov	byte ptr [rsp + 0x38], 0
mov	qword ptr [rsp + 0x40], 0
mov	rcx, qword ptr [rsp + 0x90]
mov	byte ptr [rsp + 0x76], al
jmp	0x14004131c
jmp	0x14004131c
mov	rax, qword ptr [r13]
mov	byte ptr [rsp + 0x48], r8b
mov	rcx, r13
xor	ebx, ebx
mov	dword ptr [rsp + 0x40], edx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x40]
movzx	r8d, byte ptr [rsp + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	rbx, r13
cmovne	r14d, eax
jmp	0x14004101e
jmp	0x14004101e
mov	rax, qword ptr [r12]
mov	byte ptr [rsp + 0x40], r8b
mov	rcx, r12
mov	dword ptr [rsp + 0x38], edx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
movzx	r8d, byte ptr [rsp + 0x40]
cmp	eax, -1
mov	eax, 0
cmovne	rax, r12
mov	qword ptr [rsp + 0x30], rax
mov	eax, 0
cmovne	ebp, eax
jmp	0x14004103a
jmp	0x14004103a
movzx	eax, byte ptr [rsp + 0x38]
mov	byte ptr [rsp + 0x75], 0
mov	byte ptr [rsp + 0x38], 0
mov	rdi, qword ptr [rsp + 0x98]
mov	byte ptr [rsp + 0x76], al
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x40], 0
jmp	0x14004131c
jmp	0x14004131c
mov	byte ptr [rsp + 0x76], 0
mov	byte ptr [rsp + 0x38], al
jmp	0x14004131c
jmp	0x14004131c
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
mov	ebp, eax
mov	eax, 0xffffffff
cmove	ebp, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x140041054
jmp	0x140041054
mov	r15, rax
mov	rax, qword ptr [rax]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
mov	eax, 0
cmovne	rax, r15
mov	qword ptr [rsp + 0x30], rax
mov	eax, 0
cmovne	r12d, eax
jmp	0x1400410b8
jmp	0x1400410b8
mov	rcx, qword ptr [rsp + 0x90]
jmp	0x14004133b
jmp	0x14004133b
mov	rcx, qword ptr [rsp + 0x88]
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x140041df5
jmp	0x140041df5
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
mov	rax, qword ptr [r8 + 8]
mov	rdx, qword ptr [r9 + 8]
mov	rbp, qword ptr [rsp + 0x110]
mov	r13, qword ptr [r8]
mov	r12, qword ptr [r9]
mov	rbx, r13
mov	qword ptr [rsp + 0xf0], rcx
lea	rcx, [rip + 0x755c5]
mov	r15, r12
mov	qword ptr [rsp + 0x68], rax
mov	qword ptr [rsp + 0x30], rdx
mov	dword ptr [rsp + 0x78], eax
call	0x140022a70
call	0x140022a70
mov	rdi, rax
mov	rax, qword ptr [rbp + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	r14, [rax + rdi*8]
mov	rsi, qword ptr [r14]
test	rsi, rsi
je	0x140042840
je	0x140042840
mov	edx, dword ptr [rbp + 0x18]
mov	edi, 8
and	edx, 0x4a
cmp	edx, 0x40
je	0x140041eaf
je	0x140041eaf
cmp	edx, 8
mov	edi, 0xa
mov	eax, 0x10
cmove	edi, eax
cmp	dword ptr [rsp + 0x78], -1
sete	r8b
test	r13, r13
setne	r14b
and	r14b, r8b
jne	0x140042908
jne	0x140042908
mov	r14d, r8d
cmp	dword ptr [rsp + 0x30], -1
sete	r13b
test	r12, r12
setne	bpl
and	bpl, r13b
jne	0x140042920
jne	0x140042920
mov	ebp, r13d
cmp	r14b, bpl
je	0x140042768
je	0x140042768
test	rbx, rbx
je	0x140041efe
je	0x140041efe
test	r8b, r8b
jne	0x140042802
jne	0x140042802
movzx	ebp, byte ptr [rsp + 0x78]
cmp	byte ptr [rsi + 0x6e], bpl
movzx	r8d, byte ptr [rsi + 0x20]
sete	byte ptr [rsp + 0x7f]
je	0x140041f1d
je	0x140041f1d
cmp	byte ptr [rsi + 0x6f], bpl
jne	0x1400427f8
jne	0x1400427f8
test	r8b, r8b
jne	0x140042258
jne	0x140042258
cmp	byte ptr [rsi + 0x48], bpl
je	0x140041f94
je	0x140041f94
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
cmp	rax, rcx
jae	0x140042ac3
jae	0x140042ac3
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rcx
jae	0x140042a13
jae	0x140042a13
xor	r14d, r14d
test	r15, r15
setne	r12b
and	r12b, r13b
jne	0x140042a8b
jne	0x140042a8b
mov	r12d, r13d
cmp	r12b, r14b
je	0x140042a40
je	0x140042a40
test	rbx, rbx
je	0x140042a7f
je	0x140042a7f
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140042a63
jae	0x140042a63
movzx	ebp, byte ptr [rax]
mov	dword ptr [rsp + 0x78], 0xffffffff
movzx	r8d, byte ptr [rsi + 0x20]
mov	dword ptr [rsp + 0x30], 0
mov	r9d, dword ptr [rsp + 0x78]
xor	r12d, r12d
test	r8b, r8b
je	0x140041fb3
je	0x140041fb3
cmp	byte ptr [rsi + 0x49], bpl
je	0x140042340
je	0x140042340
cmp	byte ptr [rsi + 0x48], bpl
je	0x140042340
je	0x140042340
cmp	byte ptr [rsi + 0x72], bpl
je	0x140042270
je	0x140042270
test	r12b, r12b
je	0x140042340
je	0x140042340
cmp	byte ptr [rsi + 0x70], bpl
je	0x140041fe0
je	0x140041fe0
cmp	byte ptr [rsi + 0x71], bpl
jne	0x140042970
jne	0x140042970
test	edx, edx
sete	al
cmp	edi, 0x10
sete	cl
or	al, cl
je	0x1400429ac
je	0x1400429ac
mov	dword ptr [rsp + 0x30], 0
xor	r12d, r12d
mov	edi, 0x10
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
cmp	rax, rcx
jae	0x1400422c0
jae	0x1400422c0
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rcx
jae	0x1400422e8
jae	0x1400422e8
xor	r8d, r8d
test	r15, r15
setne	r14b
and	r14b, r13b
jne	0x1400423d0
jne	0x1400423d0
mov	r14d, r13d
cmp	r14b, r8b
jne	0x140042310
jne	0x140042310
mov	dword ptr [rsp + 0x78], 0xffffffff
movzx	r8d, byte ptr [rsi + 0x20]
mov	r14d, 1
cmp	edi, 0x10
je	0x140042351
je	0x140042351
movsxd	rax, edi
mov	dword ptr [rsp + 0x60], edi
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0x80]
mov	byte ptr [rsp + 0x90], 0
mov	qword ptr [rsp + 0x70], rax
lea	rax, [rsp + 0x90]
mov	qword ptr [rsp + 0x58], rax
mov	qword ptr [rsp + 0x80], rax
mov	qword ptr [rsp + 0x88], 0
test	r8b, r8b
jne	0x140042750
jne	0x140042750
movsxd	rdx, edi
mov	rax, 0xffffffffffffffff
mov	rcx, rdx
mov	qword ptr [rsp + 0x50], rdx
xor	edx, edx
div	rcx
mov	qword ptr [rsp + 0x48], rax
movzx	eax, byte ptr [rsi + 0x88]
mov	byte ptr [rsp + 0x7e], al
test	al, al
jne	0x140042570
jne	0x140042570
mov	byte ptr [rsp + 0x7d], 0
test	r14b, r14b
jne	0x140042ae1
jne	0x140042ae1
mov	qword ptr [rsp + 0x38], 0
movzx	eax, byte ptr [rsp + 0x60]
add	eax, 0x30
mov	byte ptr [rsp + 0x7e], al
cmp	qword ptr [rsp + 0x40], 0xa
ja	0x140042370
ja	0x140042370
cmp	bpl, 0x2f
jle	0x140042550
jle	0x140042550
cmp	bpl, byte ptr [rsp + 0x7e]
jge	0x140042550
jge	0x140042550
movsx	ebp, bpl
sub	ebp, 0x30
mov	rax, qword ptr [rsp + 0x38]
cmp	qword ptr [rsp + 0x48], rax
jb	0x1400423a0
jb	0x1400423a0
mov	rcx, qword ptr [rsp + 0x50]
movsxd	rbp, ebp
mov	rdx, qword ptr [rbx + 0x18]
imul	rax, rcx
add	rbp, rax
setb	al
or	byte ptr [rsp + 0x7d], al
mov	rax, qword ptr [rbx + 0x10]
add	dword ptr [rsp + 0x30], 1
mov	qword ptr [rsp + 0x38], rbp
cmp	rax, rdx
jae	0x1400423b6
jae	0x1400423b6
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x140042818
jae	0x140042818
xor	ebp, ebp
test	r15, r15
setne	dil
and	dil, r13b
jne	0x140042518
jne	0x140042518
mov	edi, r13d
cmp	dil, bpl
jne	0x1400423f0
jne	0x1400423f0
mov	dword ptr [rsp + 0x78], 0xffffffff
mov	rdi, qword ptr [rsp + 0x88]
mov	byte ptr [rsp + 0x7e], 1
mov	rcx, qword ptr [rsp + 0x80]
mov	rax, rcx
test	rdi, rdi
jne	0x140042440
jne	0x140042440
cmp	r12b, 1
je	0x1400424cb
je	0x1400424cb
mov	eax, dword ptr [rsp + 0x30]
test	eax, eax
jne	0x1400424cb
jne	0x1400424cb
mov	rax, qword ptr [rsp + 0x120]
mov	qword ptr [rax], 0
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x7e], 0
je	0x140042203
je	0x140042203
mov	rax, qword ptr [rsp + 0x118]
or	dword ptr [rax], 2
mov	edx, dword ptr [rsp + 0x78]
mov	rsi, qword ptr [rsp + 0xf0]
movabs	rax, 0xffffffff00000000
and	rax, qword ptr [rsp + 0x68]
or	rax, rdx
mov	qword ptr [rsi], rbx
mov	qword ptr [rsi + 8], rax
mov	rax, qword ptr [rsp + 0x58]
cmp	rcx, rax
je	0x140042237
je	0x140042237
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0xf0]
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
cmp	byte ptr [rsi + 0x49], bpl
jne	0x140041f26
jne	0x140041f26
jmp	0x140041f94
jmp	0x140041f94
nop	word ptr [rax + rax]
mov	eax, r12d
xor	eax, 1
cmp	edi, 0xa
sete	cl
or	al, cl
je	0x140041fd0
je	0x140041fd0
test	edx, edx
sete	r12b
cmp	edi, 8
sete	cl
or	r12b, cl
je	0x140042508
je	0x140042508
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
mov	edi, 8
mov	dword ptr [rsp + 0x30], 0
cmp	rax, rcx
jb	0x140042014
jb	0x140042014
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x78], edx
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
mov	edx, dword ptr [rsp + 0x78]
cmp	rax, rcx
jb	0x140042025
jb	0x140042025
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x78], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x78]
cmp	eax, -1
jne	0x140042025
jne	0x140042025
mov	r8d, 1
xor	ebx, ebx
jmp	0x140042028
jmp	0x140042028
nop	
test	rbx, rbx
je	0x140042430
je	0x140042430
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004240f
jae	0x14004240f
movzx	ebp, byte ptr [rax]
movzx	r8d, byte ptr [rsi + 0x20]
mov	r9d, 0xffffffff
test	r12b, r12b
jne	0x140041fa4
jne	0x140041fa4
nop	
mov	dword ptr [rsp + 0x78], r9d
xor	r14d, r14d
cmp	edi, 0x10
jne	0x140042060
jne	0x140042060
mov	qword ptr [rsp + 0x40], 0x16
mov	dword ptr [rsp + 0x60], 0x16
jmp	0x14004206c
jmp	0x14004206c
nop	word ptr [rax + rax]
lea	eax, [rbp - 0x30]
cmp	al, 9
jbe	0x14004211e
jbe	0x14004211e
lea	eax, [rbp - 0x61]
cmp	al, 5
ja	0x140042530
ja	0x140042530
movsx	ebp, bpl
mov	rax, qword ptr [rsp + 0x38]
sub	ebp, 0x57
cmp	qword ptr [rsp + 0x48], rax
jae	0x140042135
jae	0x140042135
nop	dword ptr [rax]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x7d], 1
cmp	rax, rdx
jb	0x140042166
jb	0x140042166
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x14004216e
jmp	0x14004216e
nop	dword ptr [rax]
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x1400428d0
jae	0x1400428d0
xor	r14d, r14d
jmp	0x14004203b
jmp	0x14004203b
nop	word ptr cs:[rax + rax]
test	rbx, rbx
je	0x140042738
je	0x140042738
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140042722
jae	0x140042722
movzx	ebp, byte ptr [rax]
jmp	0x14004273f
jmp	0x14004273f
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x78], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x78]
cmp	eax, -1
mov	ebp, eax
jne	0x14004232a
jne	0x14004232a
nop	dword ptr [rax + rax]
mov	ebp, 0xffffffff
xor	ebx, ebx
jmp	0x14004232a
jmp	0x14004232a
nop	dword ptr [rax]
mov	rdx, qword ptr [rsp + 0x58]
movzx	r13d, byte ptr [rsp + 0x30]
lea	rbp, [rdi + 1]
cmp	rcx, rdx
je	0x1400429c9
je	0x1400429c9
mov	rdx, qword ptr [rsp + 0x90]
cmp	rdx, rbp
jb	0x140042983
jb	0x140042983
mov	byte ptr [rax + rdi], r13b
mov	rax, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x88], rbp
mov	r8, qword ptr [rsp + 0x70]
mov	byte ptr [rax + rdi + 1], 0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
call	0x1400ae850
call	0x1400ae850
test	al, al
jne	0x1400424a6
jne	0x1400424a6
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
mov	edx, dword ptr [rsp + 0x30]
test	edx, edx
jne	0x1400424c3
jne	0x1400424c3
cmp	r12b, 1
je	0x1400424c3
je	0x1400424c3
cmp	qword ptr [rsp + 0x88], 0
je	0x140042bfe
je	0x140042bfe
mov	rcx, qword ptr [rsp + 0x80]
test	r14b, r14b
jne	0x1400421d4
jne	0x1400421d4
cmp	byte ptr [rsp + 0x7d], 0
je	0x1400427d0
je	0x1400427d0
mov	rax, qword ptr [rsp + 0x120]
mov	qword ptr [rax], 0xffffffffffffffff
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
jmp	0x1400421f1
jmp	0x1400421f1
nop	dword ptr [rax]
add	dword ptr [rsp + 0x30], 1
mov	r12d, eax
jmp	0x140042003
jmp	0x140042003
nop	dword ptr [rax]
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x1400429d3
jae	0x1400429d3
xor	edi, edi
jmp	0x14004218c
jmp	0x14004218c
nop	dword ptr [rax]
lea	eax, [rbp - 0x41]
cmp	al, 5
ja	0x140042550
ja	0x140042550
movsx	ebp, bpl
sub	ebp, 0x37
jmp	0x140042125
jmp	0x140042125
xor	r14d, r14d
nop	word ptr cs:[rax + rax]
mov	byte ptr [rsp + 0x7e], 0
mov	rdi, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x1400421b2
jmp	0x1400421b2
nop	word ptr [rax + rax]
test	r14b, r14b
jne	0x140042b74
jne	0x140042b74
lea	rax, [rsi + 0x72]
mov	byte ptr [rsp + 0x7d], 0
mov	qword ptr [rsp + 0x60], rax
mov	qword ptr [rsp + 0x38], 0
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x1400425a2
je	0x1400425a2
cmp	byte ptr [rsi + 0x49], bpl
je	0x1400426b0
je	0x1400426b0
mov	r8, qword ptr [rsp + 0x40]
cmp	byte ptr [rsi + 0x48], bpl
sete	al
test	r8, r8
sete	dl
or	al, dl
jne	0x140042550
jne	0x140042550
mov	rdi, qword ptr [rsp + 0x60]
movsx	edx, bpl
mov	rcx, rdi
call	0x140015988
call	0x140015988
test	rax, rax
je	0x140042543
je	0x140042543
sub	rax, rdi
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
mov	rdx, qword ptr [rsp + 0x38]
cmp	qword ptr [rsp + 0x48], rdx
jb	0x140042660
jb	0x140042660
mov	rcx, qword ptr [rsp + 0x50]
cdqe	
imul	rdx, rcx
add	rax, rdx
setb	dl
add	dword ptr [rsp + 0x30], 1
or	byte ptr [rsp + 0x7d], dl
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x140042676
jae	0x140042676
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x1400429f5
jae	0x1400429f5
xor	ebp, ebp
test	r15, r15
setne	dil
and	dil, r13b
jne	0x140042790
jne	0x140042790
mov	edi, r13d
cmp	dil, bpl
jne	0x140042690
jne	0x140042690
mov	dword ptr [rsp + 0x78], 0xffffffff
mov	rdi, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x1400421b2
jmp	0x1400421b2
nop	
movzx	eax, byte ptr [rsp + 0x7e]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x7d], al
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rdx
jb	0x140042616
jb	0x140042616
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x14004261e
jmp	0x14004261e
nop	dword ptr [rax]
test	rbx, rbx
je	0x1400427b8
je	0x1400427b8
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400427a5
jae	0x1400427a5
movzx	ebp, byte ptr [rax]
jmp	0x1400427bf
jmp	0x1400427bf
nop	
mov	rdx, qword ptr [rsp + 0x80]
mov	r10d, dword ptr [rsp + 0x30]
mov	rdi, qword ptr [rsp + 0x88]
mov	rcx, rdx
test	r10d, r10d
je	0x140042b9f
je	0x140042b9f
mov	rax, qword ptr [rsp + 0x58]
mov	byte ptr [rsp + 0x78], r10b
lea	rbp, [rdi + 1]
cmp	rdx, rax
je	0x1400429bf
je	0x1400429bf
mov	rax, qword ptr [rsp + 0x90]
cmp	rax, rbp
jb	0x140042940
jb	0x140042940
movzx	eax, byte ptr [rsp + 0x78]
mov	dword ptr [rsp + 0x30], 0
mov	byte ptr [rdx + rdi], al
mov	rax, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x88], rbp
mov	byte ptr [rax + rbp], 0
jmp	0x140042609
jmp	0x140042609
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x14004273f
jne	0x14004273f
nop	word ptr [rax + rax]
mov	ebp, 0xffffffff
xor	ebx, ebx
mov	dword ptr [rsp + 0x78], 0xffffffff
jmp	0x1400420fd
jmp	0x1400420fd
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x70]
mov	edx, 0x20
call	0x14009f7e0
call	0x14009f7e0
jmp	0x1400420ab
jmp	0x1400420ab
nop	dword ptr [rax]
mov	byte ptr [rsp + 0x7f], 0
movzx	r8d, byte ptr [rsi + 0x20]
xor	ebp, ebp
xor	r12d, r12d
mov	dword ptr [rsp + 0x30], 0
mov	r14d, 1
jmp	0x140042057
jmp	0x140042057
nop	word ptr [rax + rax]
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x140042aa1
jae	0x140042aa1
xor	edi, edi
jmp	0x14004263c
jmp	0x14004263c
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x1400427bf
jne	0x1400427bf
nop	dword ptr [rax]
mov	ebp, 0xffffffff
xor	ebx, ebx
mov	dword ptr [rsp + 0x78], 0xffffffff
jmp	0x140042590
jmp	0x140042590
nop	dword ptr [rax]
mov	rdx, qword ptr [rsp + 0x38]
mov	rsi, qword ptr [rsp + 0x120]
mov	rax, rdx
neg	rax
cmp	byte ptr [rsp + 0x7f], 0
cmove	rax, rdx
mov	qword ptr [rsi], rax
jmp	0x1400421f1
jmp	0x1400421f1
nop	dword ptr [rax]
mov	byte ptr [rsp + 0x7f], 0
jmp	0x140041f94
jmp	0x140041f94
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140042bac
jae	0x140042bac
movzx	ebp, byte ptr [rax]
jmp	0x140041f03
jmp	0x140041f03
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x140042177
jne	0x140042177
mov	ebp, 1
xor	ebx, ebx
jmp	0x140042179
jmp	0x140042179
nop	word ptr cs:[rax + rax]
mov	ecx, 0x90
call	0x1400b2c30
call	0x1400b2c30
mov	rsi, rax
mov	dword ptr [rax + 8], 0
xor	ecx, ecx
mov	rax, qword ptr [rip + 0x7c703]
mov	word ptr [rsi + 0x48], cx
lea	rdx, [rbp + 0xd0]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rax
mov	qword ptr [rsi + 0x18], 0
mov	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
mov	qword ptr [rsi + 0x38], 0
mov	qword ptr [rsi + 0x40], 0
mov	byte ptr [rsi + 0x88], 0
call	0x140093c20
call	0x140093c20
mov	rcx, qword ptr [rbp + 0xd0]
mov	rdx, rsi
mov	r8, rdi
call	0x140099d30
call	0x140099d30
mov	rsi, qword ptr [r14]
jmp	0x140041e8f
jmp	0x140041e8f
nop	dword ptr [rax]
mov	rax, qword ptr [r15]
mov	dword ptr [rsp + 0x38], edx
mov	rcx, r15
mov	byte ptr [rsp + 0x78], r8b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, byte ptr [rsp + 0x78]
mov	edx, dword ptr [rsp + 0x38]
cmp	eax, -1
mov	eax, 0
cmove	r15, rax
cmovne	r14d, eax
jmp	0x14004203b
jmp	0x14004203b
nop	dword ptr [rax]
mov	rax, qword ptr [r13 + 0x18]
cmp	qword ptr [r13 + 0x10], rax
jae	0x140042b07
jae	0x140042b07
xor	r14d, r14d
jmp	0x140041ecb
jmp	0x140041ecb
nop	
mov	rax, qword ptr [r12 + 0x18]
cmp	qword ptr [r12 + 0x10], rax
jae	0x140042b3b
jae	0x140042b3b
xor	ebp, ebp
jmp	0x140041ee7
jmp	0x140041ee7
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x70]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rdx, qword ptr [rsp + 0x80]
jmp	0x1400426f9
jmp	0x1400426f9
nop	dword ptr [rax]
mov	dword ptr [rsp + 0x78], r9d
xor	r14d, r14d
mov	r12d, 1
jmp	0x140042057
jmp	0x140042057
mov	rcx, qword ptr [rsp + 0x70]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0x80]
jmp	0x140042469
jmp	0x140042469
mov	dword ptr [rsp + 0x78], r9d
mov	r14d, eax
mov	r12d, 1
jmp	0x140042060
jmp	0x140042060
mov	eax, 0xf
jmp	0x1400426f0
jmp	0x1400426f0
mov	edx, 0xf
jmp	0x140042460
jmp	0x140042460
mov	rax, qword ptr [r15]
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmove	r15, rax
jmp	0x14004218c
jmp	0x14004218c
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x140042627
jne	0x140042627
movzx	ebp, byte ptr [rsp + 0x7e]
xor	ebx, ebx
jmp	0x140042629
jmp	0x140042629
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x78], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x78]
cmp	eax, -1
jne	0x140041f4e
jne	0x140041f4e
mov	r14d, 1
xor	ebx, ebx
jmp	0x140041f51
jmp	0x140041f51
nop	word ptr [rax + rax]
mov	dword ptr [rsp + 0x78], 0xffffffff
movzx	r8d, byte ptr [rsi + 0x20]
mov	r14d, 1
xor	r12d, r12d
mov	dword ptr [rsp + 0x30], 0
jmp	0x140042057
jmp	0x140042057
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x78], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x78]
cmp	eax, -1
mov	ebp, eax
jne	0x140041f87
jne	0x140041f87
mov	ebp, 0xffffffff
xor	ebx, ebx
jmp	0x140041f87
jmp	0x140041f87
mov	rax, qword ptr [r15 + 0x18]
cmp	qword ptr [r15 + 0x10], rax
jae	0x140042bd8
jae	0x140042bd8
xor	r12d, r12d
jmp	0x140041f64
jmp	0x140041f64
mov	rax, qword ptr [r15]
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmove	r15, rax
jmp	0x14004263c
jmp	0x14004263c
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x78], edx
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
mov	edx, dword ptr [rsp + 0x78]
jmp	0x140041f45
jmp	0x140041f45
mov	byte ptr [rsp + 0x7e], r14b
mov	rdi, qword ptr [rsp + 0x88]
xor	r14d, r14d
mov	qword ptr [rsp + 0x38], 0
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x1400421b2
jmp	0x1400421b2
mov	rax, qword ptr [r13]
mov	byte ptr [rsp + 0x40], r8b
mov	rcx, r13
xor	ebx, ebx
mov	dword ptr [rsp + 0x38], edx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x38]
movzx	r8d, byte ptr [rsp + 0x40]
cmp	eax, -1
mov	eax, 0
cmovne	rbx, r13
cmovne	r14d, eax
jmp	0x140041ecb
jmp	0x140041ecb
mov	rax, qword ptr [r12]
mov	byte ptr [rsp + 0x38], r8b
mov	rcx, r12
mov	dword ptr [rsp + 0x30], edx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x30]
movzx	r8d, byte ptr [rsp + 0x38]
cmp	eax, -1
mov	eax, 0
cmovne	rax, r12
mov	r15, rax
mov	eax, 0
cmovne	ebp, eax
jmp	0x140041ee7
jmp	0x140041ee7
mov	byte ptr [rsp + 0x7e], r14b
mov	rdi, qword ptr [rsp + 0x88]
xor	r14d, r14d
mov	byte ptr [rsp + 0x7d], 0
mov	rcx, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x38], 0
jmp	0x1400421b2
jmp	0x1400421b2
mov	byte ptr [rsp + 0x7e], 0
mov	r14d, eax
jmp	0x1400421b2
jmp	0x1400421b2
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x30], edx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x30]
cmp	eax, -1
mov	ebp, eax
mov	eax, 0xffffffff
cmove	ebp, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x140041f03
jmp	0x140041f03
mov	rax, qword ptr [r15]
mov	dword ptr [rsp + 0x78], edx
mov	rcx, r15
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, dword ptr [rsp + 0x78]
cmp	eax, -1
mov	eax, 0
cmove	r15, rax
cmovne	r12d, eax
jmp	0x140041f64
jmp	0x140041f64
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x1400421d4
jmp	0x1400421d4
mov	rcx, qword ptr [rsp + 0x70]
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x140042c31
jmp	0x140042c31
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	rbx, qword ptr [rsp + 0x100]
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	qword ptr [rsp + 0xe0], rcx
lea	rcx, [rbx + 0xd0]
movups	xmmword ptr [rsp + 0x70], xmm0
movups	xmmword ptr [rsp + 0x60], xmm1
call	0x14001d6e0
call	0x14001d6e0
mov	r13d, dword ptr [rbx + 0x18]
mov	rsi, rax
and	r13d, 0x4a
cmp	r13d, 0x40
je	0x140043400
je	0x140043400
mov	r12d, 0xa
cmp	r13d, 8
je	0x140042fe0
je	0x140042fe0
lea	rax, [rsp + 0x70]
lea	rdx, [rsp + 0x60]
mov	rcx, rax
mov	qword ptr [rsp + 0x40], rdx
mov	qword ptr [rsp + 0x38], rax
call	0x140020830
call	0x140020830
mov	edi, eax
test	al, al
jne	0x140043430
jne	0x140043430
mov	rcx, qword ptr [rsp + 0x38]
call	0x1400208f0
call	0x1400208f0
cmp	byte ptr [rsi + 0x6e], al
mov	ebx, eax
sete	byte ptr [rsp + 0x5f]
je	0x140042d0d
je	0x140042d0d
cmp	byte ptr [rsi + 0x6f], al
jne	0x1400434b0
jne	0x1400434b0
movzx	edx, byte ptr [rsi + 0x20]
test	dl, dl
jne	0x140042fc8
jne	0x140042fc8
cmp	byte ptr [rsi + 0x48], al
je	0x140042d5a
je	0x140042d5a
mov	rcx, qword ptr [rsp + 0x70]
call	0x140091a00
call	0x140091a00
mov	r15, qword ptr [rsp + 0x38]
mov	rdx, qword ptr [rsp + 0x40]
mov	dword ptr [rsp + 0x78], 0xffffffff
mov	rcx, r15
call	0x140020830
call	0x140020830
mov	edi, eax
test	al, al
jne	0x1400434be
jne	0x1400434be
mov	rcx, r15
call	0x1400208f0
call	0x1400208f0
movzx	edx, byte ptr [rsi + 0x20]
mov	ebx, eax
xor	r14d, r14d
xor	ebp, ebp
test	dl, dl
je	0x140042d6c
je	0x140042d6c
cmp	byte ptr [rsi + 0x49], bl
je	0x140043280
je	0x140043280
cmp	byte ptr [rsi + 0x48], bl
je	0x140043280
je	0x140043280
cmp	byte ptr [rsi + 0x72], bl
je	0x140043038
je	0x140043038
test	bpl, bpl
je	0x140043280
je	0x140043280
cmp	byte ptr [rsi + 0x70], bl
je	0x140042d95
je	0x140042d95
cmp	byte ptr [rsi + 0x71], bl
jne	0x1400434d0
jne	0x1400434d0
test	r13d, r13d
sete	al
cmp	r12d, 0x10
sete	dl
or	al, dl
je	0x1400434dc
je	0x1400434dc
xor	r14d, r14d
xor	ebp, ebp
mov	r12d, 0x10
mov	rdi, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
cmp	rax, rdx
jae	0x140043128
jae	0x140043128
add	rax, 1
mov	dword ptr [rsp + 0x78], 0xffffffff
mov	qword ptr [rdi + 0x10], rax
cmp	rax, rdx
jae	0x140043150
jae	0x140043150
xor	edi, edi
mov	rcx, qword ptr [rsp + 0x60]
cmp	dword ptr [rsp + 0x68], -1
sete	al
test	rcx, rcx
setne	dl
and	dl, al
jne	0x1400430e8
jne	0x1400430e8
cmp	al, dil
jne	0x140043078
jne	0x140043078
mov	edi, 1
cmp	r12d, 0x10
je	0x140043018
je	0x140043018
movsxd	rax, r12d
mov	dword ptr [rsp + 0x58], r12d
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x87]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x50], rax
call	0x140071d40
call	0x140071d40
cmp	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsp + 0x88], rax
jne	0x140043410
jne	0x140043410
mov	eax, 0xffffffff
xor	edx, edx
div	dword ptr [rsp + 0x58]
mov	dword ptr [rsp + 0x34], eax
movzx	eax, byte ptr [rsi + 0x88]
mov	byte ptr [rsp + 0x5e], al
test	al, al
jne	0x140043290
jne	0x140043290
xor	r15d, r15d
test	dil, dil
jne	0x140043547
jne	0x140043547
lea	eax, [r12 + 0x30]
xor	r13d, r13d
mov	byte ptr [rsp + 0x38], al
cmp	qword ptr [rsp + 0x28], 0xa
ja	0x1400430c0
ja	0x1400430c0
cmp	bl, 0x2f
jle	0x1400431a0
jle	0x1400431a0
cmp	byte ptr [rsp + 0x38], bl
jle	0x1400431a0
jle	0x1400431a0
movsx	ebx, bl
sub	ebx, 0x30
cmp	dword ptr [rsp + 0x34], r13d
jb	0x1400430b0
jb	0x1400430b0
mov	eax, dword ptr [rsp + 0x58]
imul	r13d, eax
add	ebx, r13d
setb	al
mov	r13d, ebx
add	r14d, 1
or	r15d, eax
mov	rbx, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x1400433c0
jae	0x1400433c0
add	rax, 1
mov	dword ptr [rsp + 0x78], 0xffffffff
mov	qword ptr [rbx + 0x10], rax
xor	r12d, r12d
cmp	rax, rdx
jae	0x1400434e8
jae	0x1400434e8
mov	rcx, qword ptr [rsp + 0x60]
cmp	dword ptr [rsp + 0x68], -1
sete	al
test	rcx, rcx
je	0x140042f1f
je	0x140042f1f
test	al, al
jne	0x140043248
jne	0x140043248
cmp	al, r12b
jne	0x140043100
jne	0x140043100
mov	r12d, 1
mov	rcx, qword ptr [rsp + 0x88]
cmp	qword ptr [rcx - 0x18], 0
jne	0x1400431b6
jne	0x1400431b6
nop	dword ptr [rax]
test	r14d, r14d
jne	0x140043200
jne	0x140043200
cmp	bpl, 1
je	0x140043200
je	0x140043200
mov	rax, qword ptr [rsp + 0x110]
mov	dword ptr [rax], 0
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
test	r12b, r12b
je	0x140042f87
je	0x140042f87
mov	rax, qword ptr [rsp + 0x108]
or	dword ptr [rax], 2
movdqu	xmm2, xmmword ptr [rsp + 0x70]
mov	rax, qword ptr [rsp + 0xe0]
sub	rcx, 0x18
mov	rdx, qword ptr [rsp + 0x50]
movups	xmmword ptr [rax], xmm2
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xe0]
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
cmp	byte ptr [rsi + 0x49], al
jne	0x140042d19
jne	0x140042d19
jmp	0x140042d5a
jmp	0x140042d5a
nop	word ptr cs:[rax + rax]
lea	rax, [rsp + 0x70]
lea	rdx, [rsp + 0x60]
mov	r12d, 0x10
mov	rcx, rax
mov	qword ptr [rsp + 0x40], rdx
mov	qword ptr [rsp + 0x38], rax
call	0x140020830
call	0x140020830
mov	edi, eax
test	al, al
je	0x140042cee
je	0x140042cee
mov	byte ptr [rsp + 0x5f], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
mov	dword ptr [rsp + 0x58], 0x10
mov	r12d, 0x16
mov	qword ptr [rsp + 0x28], 0x16
jmp	0x140042e26
jmp	0x140042e26
nop	dword ptr [rax]
mov	eax, ebp
xor	eax, 1
cmp	r12d, 0xa
sete	dl
or	al, dl
je	0x140042d87
je	0x140042d87
cmp	r12d, 8
sete	bpl
test	r13d, r13d
sete	dl
or	bpl, dl
je	0x140043238
je	0x140043238
xor	r14d, r14d
mov	r12d, 8
jmp	0x140042db5
jmp	0x140042db5
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x70]
test	rcx, rcx
je	0x140043190
je	0x140043190
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140043175
jae	0x140043175
movzx	ebx, byte ptr [rax]
test	bpl, bpl
je	0x140043280
je	0x140043280
movzx	edx, byte ptr [rsi + 0x20]
jmp	0x140042d5f
jmp	0x140042d5f
nop	dword ptr [rax]
mov	r15d, 1
jmp	0x140042ed3
jmp	0x140042ed3
nop	dword ptr [rax + rax]
lea	eax, [rbx - 0x30]
mov	edx, ebx
cmp	al, 9
jbe	0x140042eaa
jbe	0x140042eaa
lea	eax, [rdx - 0x61]
cmp	al, 5
ja	0x1400433e0
ja	0x1400433e0
movsx	ebx, bl
sub	ebx, 0x57
jmp	0x140042eb0
jmp	0x140042eb0
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x18]
cmp	qword ptr [rcx + 0x10], rax
jae	0x140043488
jae	0x140043488
xor	eax, eax
jmp	0x140042e01
jmp	0x140042e01
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x70]
test	rcx, rcx
je	0x1400431a0
je	0x1400431a0
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140043502
jae	0x140043502
movzx	ebx, byte ptr [rax]
jmp	0x140042e8b
jmp	0x140042e8b
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
mov	dword ptr [rsp + 0x78], 0xffffffff
cmp	rax, rdx
jb	0x140042de4
jb	0x140042de4
nop	word ptr [rax + rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x140042de4
jne	0x140042de4
mov	qword ptr [rsp + 0x70], 0
mov	edi, 1
jmp	0x140042de6
jmp	0x140042de6
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebx, eax
cmp	eax, -1
jne	0x140043097
jne	0x140043097
mov	qword ptr [rsp + 0x70], 0
nop	
mov	ebx, 0xffffffff
jmp	0x140043097
jmp	0x140043097
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x88]
xor	r12d, r12d
cmp	qword ptr [rcx - 0x18], 0
je	0x140042f48
je	0x140042f48
lea	rbx, [rsp + 0x88]
movsx	edx, r14b
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	r8, rbx
call	0x1400ae880
call	0x1400ae880
test	al, al
je	0x140043470
je	0x140043470
mov	rcx, qword ptr [rsp + 0x88]
test	r14d, r14d
jne	0x140043200
jne	0x140043200
cmp	bpl, 1
je	0x140043200
je	0x140043200
cmp	qword ptr [rcx - 0x18], 0
je	0x140042f5b
je	0x140042f5b
test	dil, dil
jne	0x140042f5b
jne	0x140042f5b
test	r15b, r15b
je	0x140043448
je	0x140043448
mov	rax, qword ptr [rsp + 0x110]
mov	dword ptr [rax], 0xffffffff
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
jmp	0x140042f77
jmp	0x140042f77
nop	dword ptr [rax + rax]
add	r14d, 1
mov	ebp, eax
jmp	0x140042db5
jmp	0x140042db5
nop	dword ptr [rax + rax]
mov	rbx, qword ptr [rcx + 0x18]
xor	eax, eax
cmp	qword ptr [rcx + 0x10], rbx
jb	0x140042f1f
jb	0x140042f1f
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jne	0x140042f1f
jne	0x140042f1f
mov	qword ptr [rsp + 0x60], 0
jmp	0x140042f1f
jmp	0x140042f1f
nop	dword ptr [rax + rax]
xor	edi, edi
jmp	0x140042e0f
jmp	0x140042e0f
nop	word ptr [rax + rax]
test	dil, dil
jne	0x140043554
jne	0x140043554
lea	rax, [rsi + 0x72]
xor	r15d, r15d
xor	r13d, r13d
mov	qword ptr [rsp + 0x48], rax
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x1400432b9
je	0x1400432b9
cmp	byte ptr [rsi + 0x49], bl
je	0x140043376
je	0x140043376
mov	r8, qword ptr [rsp + 0x28]
cmp	byte ptr [rsi + 0x48], bl
sete	r12b
test	r8, r8
sete	al
or	r12b, al
jne	0x1400431a0
jne	0x1400431a0
movsx	edx, bl
mov	rbx, qword ptr [rsp + 0x48]
mov	rcx, rbx
call	0x140015988
call	0x140015988
test	rax, rax
je	0x140043540
je	0x140043540
sub	rax, rbx
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
cmp	dword ptr [rsp + 0x34], r13d
jb	0x1400433b0
jb	0x1400433b0
mov	ecx, dword ptr [rsp + 0x58]
imul	r13d, ecx
add	eax, r13d
setb	dl
mov	r13d, eax
add	r14d, 1
or	r15d, edx
mov	rcx, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400433a2
jae	0x1400433a2
add	rax, 1
mov	qword ptr [rcx + 0x10], rax
mov	rdx, qword ptr [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0x38]
mov	dword ptr [rsp + 0x78], 0xffffffff
call	0x140020830
call	0x140020830
mov	r12d, eax
test	al, al
jne	0x140042f2e
jne	0x140042f2e
mov	rcx, qword ptr [rsp + 0x38]
call	0x1400208f0
call	0x1400208f0
mov	ebx, eax
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x1400432b9
je	0x1400432b9
cmp	byte ptr [rsi + 0x49], bl
jne	0x1400432b9
jne	0x1400432b9
test	r14d, r14d
je	0x140043564
je	0x140043564
movsx	edx, r14b
lea	rcx, [rsp + 0x88]
call	0x140073fa0
call	0x140073fa0
mov	rcx, qword ptr [rsp + 0x70]
xor	r14d, r14d
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jb	0x14004332b
jb	0x14004332b
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140043333
jmp	0x140043333
nop	word ptr [rax + rax]
movzx	r15d, byte ptr [rsp + 0x5e]
jmp	0x14004331c
jmp	0x14004331c
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	dword ptr [rsp + 0x78], 0xffffffff
jmp	0x140042ef9
jmp	0x140042ef9
nop	
sub	edx, 0x41
cmp	dl, 5
ja	0x1400431a0
ja	0x1400431a0
movsx	ebx, bl
sub	ebx, 0x37
jmp	0x140042eb0
jmp	0x140042eb0
nop	word ptr [rax + rax]
mov	r12d, 8
jmp	0x140042cc8
jmp	0x140042cc8
nop	dword ptr [rax + rax]
lea	rcx, [rsp + 0x88]
mov	edx, 0x20
call	0x140073cf0
call	0x140073cf0
jmp	0x140042e51
jmp	0x140042e51
nop	word ptr [rax + rax]
mov	byte ptr [rsp + 0x5f], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
jmp	0x140042e19
jmp	0x140042e19
nop	dword ptr [rax]
mov	eax, r13d
neg	eax
cmp	byte ptr [rsp + 0x5f], 0
cmovne	r13d, eax
mov	rax, qword ptr [rsp + 0x110]
mov	dword ptr [rax], r13d
jmp	0x140042f77
jmp	0x140042f77
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
jmp	0x1400431e2
jmp	0x1400431e2
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
mov	byte ptr [rsp + 0x28], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x28]
cmp	eax, -1
jne	0x1400430f6
jne	0x1400430f6
mov	qword ptr [rsp + 0x60], 0
mov	eax, edx
jmp	0x140042e01
jmp	0x140042e01
mov	byte ptr [rsp + 0x5f], 0
movzx	edx, byte ptr [rsi + 0x20]
jmp	0x140042d5a
jmp	0x140042d5a
xor	r14d, r14d
xor	ebp, ebp
jmp	0x140042e0f
jmp	0x140042e0f
nop	dword ptr [rax + rax]
xor	edi, edi
mov	ebp, 1
jmp	0x140042e0f
jmp	0x140042e0f
mov	edi, eax
mov	ebp, 1
jmp	0x140042e19
jmp	0x140042e19
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
je	0x14004356e
je	0x14004356e
cmp	eax, -1
sete	r12b
jmp	0x140042f05
jmp	0x140042f05
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebx, eax
cmp	eax, -1
jne	0x140042e8b
jne	0x140042e8b
mov	qword ptr [rsp + 0x70], 0
cmp	qword ptr [rsp + 0x28], 0xa
jbe	0x1400431a0
jbe	0x1400431a0
mov	ebx, 0xffffffff
mov	edx, 0xffffffff
jmp	0x1400430cd
jmp	0x1400430cd
nop	word ptr [rax + rax]
xor	edi, edi
jmp	0x140042f2e
jmp	0x140042f2e
mov	r12d, edi
xor	r13d, r13d
xor	edi, edi
jmp	0x140042f2e
jmp	0x140042f2e
mov	r12d, edi
xor	r13d, r13d
xor	r15d, r15d
xor	edi, edi
jmp	0x140042f2e
jmp	0x140042f2e
xor	r12d, r12d
mov	edi, eax
jmp	0x140042f2e
jmp	0x140042f2e
mov	qword ptr [rsp + 0x70], 0
jmp	0x1400434f6
jmp	0x1400434f6
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x88]
mov	rdx, qword ptr [rsp + 0x50]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	rbx, qword ptr [rsp + 0x100]
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	qword ptr [rsp + 0xe0], rcx
lea	rcx, [rbx + 0xd0]
movups	xmmword ptr [rsp + 0x70], xmm0
movups	xmmword ptr [rsp + 0x60], xmm1
call	0x14001d6e0
call	0x14001d6e0
mov	r14d, dword ptr [rbx + 0x18]
mov	rsi, rax
and	r14d, 0x4a
cmp	r14d, 0x40
je	0x140043d40
je	0x140043d40
mov	r12d, 0xa
cmp	r14d, 8
je	0x140043920
je	0x140043920
lea	rax, [rsp + 0x70]
lea	rdx, [rsp + 0x60]
mov	rcx, rax
mov	qword ptr [rsp + 0x40], rdx
mov	qword ptr [rsp + 0x30], rax
call	0x140020830
call	0x140020830
mov	edi, eax
test	al, al
jne	0x140043d70
jne	0x140043d70
mov	rcx, qword ptr [rsp + 0x30]
call	0x1400208f0
call	0x1400208f0
cmp	byte ptr [rsi + 0x6e], al
mov	ebx, eax
sete	byte ptr [rsp + 0x58]
je	0x14004364d
je	0x14004364d
cmp	byte ptr [rsi + 0x6f], al
jne	0x140043df0
jne	0x140043df0
movzx	edx, byte ptr [rsi + 0x20]
test	dl, dl
jne	0x140043910
jne	0x140043910
cmp	byte ptr [rsi + 0x48], al
je	0x14004369a
je	0x14004369a
mov	rcx, qword ptr [rsp + 0x70]
call	0x140091a00
call	0x140091a00
mov	r15, qword ptr [rsp + 0x30]
mov	rdx, qword ptr [rsp + 0x40]
mov	dword ptr [rsp + 0x78], 0xffffffff
mov	rcx, r15
call	0x140020830
call	0x140020830
mov	edi, eax
test	al, al
jne	0x140043dfe
jne	0x140043dfe
mov	rcx, r15
call	0x1400208f0
call	0x1400208f0
movzx	edx, byte ptr [rsi + 0x20]
mov	ebx, eax
xor	r13d, r13d
xor	ebp, ebp
test	dl, dl
je	0x1400436ac
je	0x1400436ac
cmp	byte ptr [rsi + 0x49], bl
je	0x140043bc0
je	0x140043bc0
cmp	byte ptr [rsi + 0x48], bl
je	0x140043bc0
je	0x140043bc0
cmp	byte ptr [rsi + 0x72], bl
je	0x140043978
je	0x140043978
test	bpl, bpl
je	0x140043bc0
je	0x140043bc0
cmp	byte ptr [rsi + 0x70], bl
je	0x1400436d5
je	0x1400436d5
cmp	byte ptr [rsi + 0x71], bl
jne	0x140043e10
jne	0x140043e10
test	r14d, r14d
sete	al
cmp	r12d, 0x10
sete	dl
or	al, dl
je	0x140043e1c
je	0x140043e1c
xor	r13d, r13d
xor	ebp, ebp
mov	r12d, 0x10
mov	rdi, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
cmp	rax, rdx
jae	0x140043a68
jae	0x140043a68
add	rax, 1
mov	dword ptr [rsp + 0x78], 0xffffffff
mov	qword ptr [rdi + 0x10], rax
cmp	rax, rdx
jae	0x140043a90
jae	0x140043a90
xor	edi, edi
mov	rcx, qword ptr [rsp + 0x60]
cmp	dword ptr [rsp + 0x68], -1
sete	al
test	rcx, rcx
setne	dl
and	dl, al
jne	0x140043a28
jne	0x140043a28
cmp	al, dil
jne	0x1400439b8
jne	0x1400439b8
mov	edi, 1
cmp	r12d, 0x10
je	0x140043958
je	0x140043958
movsxd	rax, r12d
mov	dword ptr [rsp + 0x38], r12d
mov	qword ptr [rsp + 0x20], rax
lea	rax, [rsp + 0x87]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x50], rax
call	0x140071d40
call	0x140071d40
cmp	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsp + 0x88], rax
jne	0x140043d50
jne	0x140043d50
movzx	eax, byte ptr [rsp + 0x58]
xor	edx, edx
add	eax, 0x7fffffff
mov	dword ptr [rsp + 0x3c], eax
div	dword ptr [rsp + 0x38]
mov	dword ptr [rsp + 0x2c], eax
movzx	eax, byte ptr [rsi + 0x88]
mov	byte ptr [rsp + 0x5f], al
test	al, al
jne	0x140043bd0
jne	0x140043bd0
xor	r15d, r15d
test	dil, dil
jne	0x140043e87
jne	0x140043e87
lea	eax, [r12 + 0x30]
xor	r14d, r14d
mov	byte ptr [rsp + 0x30], al
cmp	qword ptr [rsp + 0x20], 0xa
ja	0x140043a00
ja	0x140043a00
cmp	bl, 0x2f
jle	0x140043ae0
jle	0x140043ae0
cmp	byte ptr [rsp + 0x30], bl
jle	0x140043ae0
jle	0x140043ae0
movsx	ebx, bl
sub	ebx, 0x30
cmp	dword ptr [rsp + 0x2c], r14d
jb	0x1400439f0
jb	0x1400439f0
mov	eax, dword ptr [rsp + 0x38]
imul	r14d, eax
mov	eax, dword ptr [rsp + 0x3c]
sub	eax, ebx
cmp	eax, r14d
setb	al
add	r14d, ebx
add	r13d, 1
or	r15d, eax
mov	rbx, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x140043d00
jae	0x140043d00
add	rax, 1
mov	dword ptr [rsp + 0x78], 0xffffffff
mov	qword ptr [rbx + 0x10], rax
xor	r12d, r12d
cmp	rax, rdx
jae	0x140043e28
jae	0x140043e28
mov	rcx, qword ptr [rsp + 0x60]
cmp	dword ptr [rsp + 0x68], -1
sete	al
test	rcx, rcx
je	0x14004386e
je	0x14004386e
test	al, al
jne	0x140043b90
jne	0x140043b90
cmp	al, r12b
jne	0x140043a40
jne	0x140043a40
mov	r12d, 1
mov	rcx, qword ptr [rsp + 0x88]
cmp	qword ptr [rcx - 0x18], 0
jne	0x140043af6
jne	0x140043af6
cmp	bpl, 1
je	0x140043b40
je	0x140043b40
test	r13d, r13d
jne	0x140043b40
jne	0x140043b40
mov	rax, qword ptr [rsp + 0x110]
mov	dword ptr [rax], 0
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
test	r12b, r12b
je	0x1400438cf
je	0x1400438cf
mov	rax, qword ptr [rsp + 0x108]
or	dword ptr [rax], 2
movdqu	xmm2, xmmword ptr [rsp + 0x70]
mov	rax, qword ptr [rsp + 0xe0]
sub	rcx, 0x18
mov	rdx, qword ptr [rsp + 0x50]
movups	xmmword ptr [rax], xmm2
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xe0]
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
cmp	byte ptr [rsi + 0x49], al
jne	0x140043659
jne	0x140043659
jmp	0x14004369a
jmp	0x14004369a
nop	
lea	rax, [rsp + 0x70]
lea	rdx, [rsp + 0x60]
mov	r12d, 0x10
mov	rcx, rax
mov	qword ptr [rsp + 0x40], rdx
mov	qword ptr [rsp + 0x30], rax
call	0x140020830
call	0x140020830
mov	edi, eax
test	al, al
je	0x14004362e
je	0x14004362e
mov	byte ptr [rsp + 0x58], 0
xor	ebx, ebx
xor	r13d, r13d
xor	ebp, ebp
mov	dword ptr [rsp + 0x38], 0x10
mov	r12d, 0x16
mov	qword ptr [rsp + 0x20], 0x16
jmp	0x140043766
jmp	0x140043766
nop	dword ptr [rax]
mov	eax, ebp
xor	eax, 1
cmp	r12d, 0xa
sete	dl
or	al, dl
je	0x1400436c7
je	0x1400436c7
cmp	r12d, 8
sete	bpl
test	r14d, r14d
sete	dl
or	bpl, dl
je	0x140043b80
je	0x140043b80
xor	r13d, r13d
mov	r12d, 8
jmp	0x1400436f5
jmp	0x1400436f5
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x70]
test	rcx, rcx
je	0x140043ad0
je	0x140043ad0
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140043ab5
jae	0x140043ab5
movzx	ebx, byte ptr [rax]
test	bpl, bpl
je	0x140043bc0
je	0x140043bc0
movzx	edx, byte ptr [rsi + 0x20]
jmp	0x14004369f
jmp	0x14004369f
nop	dword ptr [rax]
mov	r15d, 1
jmp	0x140043822
jmp	0x140043822
nop	dword ptr [rax + rax]
lea	eax, [rbx - 0x30]
mov	edx, ebx
cmp	al, 9
jbe	0x1400437f3
jbe	0x1400437f3
lea	eax, [rdx - 0x61]
cmp	al, 5
ja	0x140043d20
ja	0x140043d20
movsx	ebx, bl
sub	ebx, 0x57
jmp	0x1400437f9
jmp	0x1400437f9
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x18]
cmp	qword ptr [rcx + 0x10], rax
jae	0x140043dc0
jae	0x140043dc0
xor	eax, eax
jmp	0x140043741
jmp	0x140043741
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x70]
test	rcx, rcx
je	0x140043ae0
je	0x140043ae0
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140043e42
jae	0x140043e42
movzx	ebx, byte ptr [rax]
jmp	0x1400437d4
jmp	0x1400437d4
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
mov	dword ptr [rsp + 0x78], 0xffffffff
cmp	rax, rdx
jb	0x140043724
jb	0x140043724
nop	word ptr [rax + rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x140043724
jne	0x140043724
mov	qword ptr [rsp + 0x70], 0
mov	edi, 1
jmp	0x140043726
jmp	0x140043726
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebx, eax
cmp	eax, -1
jne	0x1400439d7
jne	0x1400439d7
mov	qword ptr [rsp + 0x70], 0
nop	
mov	ebx, 0xffffffff
jmp	0x1400439d7
jmp	0x1400439d7
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x88]
xor	r12d, r12d
cmp	qword ptr [rcx - 0x18], 0
je	0x140043890
je	0x140043890
lea	rbx, [rsp + 0x88]
movsx	edx, r13b
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	r8, rbx
call	0x1400ae880
call	0x1400ae880
test	al, al
je	0x140043da8
je	0x140043da8
mov	rcx, qword ptr [rsp + 0x88]
test	r13d, r13d
jne	0x140043b40
jne	0x140043b40
cmp	bpl, 1
je	0x140043b40
je	0x140043b40
cmp	qword ptr [rcx - 0x18], 0
je	0x1400438a3
je	0x1400438a3
test	dil, dil
jne	0x1400438a3
jne	0x1400438a3
test	r15b, r15b
je	0x140043d88
je	0x140043d88
mov	eax, dword ptr [rsp + 0x58]
mov	rdi, qword ptr [rsp + 0x110]
and	eax, 1
add	eax, 0x7fffffff
mov	dword ptr [rdi], eax
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
jmp	0x1400438bf
jmp	0x1400438bf
nop	dword ptr [rax + rax]
add	r13d, 1
mov	ebp, eax
jmp	0x1400436f5
jmp	0x1400436f5
nop	dword ptr [rax + rax]
mov	rbx, qword ptr [rcx + 0x18]
xor	eax, eax
cmp	qword ptr [rcx + 0x10], rbx
jb	0x14004386e
jb	0x14004386e
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jne	0x14004386e
jne	0x14004386e
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004386e
jmp	0x14004386e
xor	edi, edi
jmp	0x14004374f
jmp	0x14004374f
nop	word ptr [rax + rax]
test	dil, dil
jne	0x140043e94
jne	0x140043e94
lea	rax, [rsi + 0x72]
xor	r15d, r15d
xor	r14d, r14d
mov	qword ptr [rsp + 0x48], rax
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x140043bf9
je	0x140043bf9
cmp	byte ptr [rsi + 0x49], bl
je	0x140043cbc
je	0x140043cbc
mov	r8, qword ptr [rsp + 0x20]
cmp	byte ptr [rsi + 0x48], bl
sete	r12b
test	r8, r8
sete	al
or	r12b, al
jne	0x140043ae0
jne	0x140043ae0
movsx	edx, bl
mov	rbx, qword ptr [rsp + 0x48]
mov	rcx, rbx
call	0x140015988
call	0x140015988
test	rax, rax
je	0x140043e80
je	0x140043e80
sub	rax, rbx
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
cmp	dword ptr [rsp + 0x2c], r14d
jb	0x140043cf0
jb	0x140043cf0
mov	ecx, dword ptr [rsp + 0x38]
mov	edx, dword ptr [rsp + 0x3c]
imul	r14d, ecx
sub	edx, eax
cmp	edx, r14d
setb	dl
add	r14d, eax
add	r13d, 1
or	r15d, edx
mov	rcx, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140043ce8
jae	0x140043ce8
add	rax, 1
mov	qword ptr [rcx + 0x10], rax
mov	rdx, qword ptr [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0x30]
mov	dword ptr [rsp + 0x78], 0xffffffff
call	0x140020830
call	0x140020830
mov	r12d, eax
test	al, al
jne	0x14004387d
jne	0x14004387d
mov	rcx, qword ptr [rsp + 0x30]
call	0x1400208f0
call	0x1400208f0
mov	ebx, eax
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x140043bf9
je	0x140043bf9
cmp	byte ptr [rsi + 0x49], bl
jne	0x140043bf9
jne	0x140043bf9
test	r13d, r13d
je	0x140043ea4
je	0x140043ea4
movsx	edx, r13b
lea	rcx, [rsp + 0x88]
call	0x140073fa0
call	0x140073fa0
mov	rcx, qword ptr [rsp + 0x70]
xor	r13d, r13d
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jb	0x140043c71
jb	0x140043c71
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140043c79
jmp	0x140043c79
movzx	r15d, byte ptr [rsp + 0x5f]
jmp	0x140043c62
jmp	0x140043c62
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	dword ptr [rsp + 0x78], 0xffffffff
jmp	0x140043848
jmp	0x140043848
nop	
sub	edx, 0x41
cmp	dl, 5
ja	0x140043ae0
ja	0x140043ae0
movsx	ebx, bl
sub	ebx, 0x37
jmp	0x1400437f9
jmp	0x1400437f9
nop	word ptr [rax + rax]
mov	r12d, 8
jmp	0x140043608
jmp	0x140043608
nop	dword ptr [rax + rax]
lea	rcx, [rsp + 0x88]
mov	edx, 0x20
call	0x140073cf0
call	0x140073cf0
jmp	0x140043791
jmp	0x140043791
nop	word ptr [rax + rax]
mov	byte ptr [rsp + 0x58], 0
xor	ebx, ebx
xor	r13d, r13d
xor	ebp, ebp
jmp	0x140043759
jmp	0x140043759
nop	dword ptr [rax]
mov	eax, r14d
mov	rdi, qword ptr [rsp + 0x110]
neg	eax
cmp	byte ptr [rsp + 0x58], 0
cmove	eax, r14d
mov	dword ptr [rdi], eax
jmp	0x1400438bf
jmp	0x1400438bf
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
jmp	0x140043b22
jmp	0x140043b22
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
mov	byte ptr [rsp + 0x20], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x20]
cmp	eax, -1
jne	0x140043a36
jne	0x140043a36
mov	qword ptr [rsp + 0x60], 0
mov	eax, edx
jmp	0x140043741
jmp	0x140043741
nop	dword ptr [rax + rax]
mov	byte ptr [rsp + 0x58], 0
movzx	edx, byte ptr [rsi + 0x20]
jmp	0x14004369a
jmp	0x14004369a
xor	r13d, r13d
xor	ebp, ebp
jmp	0x14004374f
jmp	0x14004374f
nop	dword ptr [rax + rax]
xor	edi, edi
mov	ebp, 1
jmp	0x14004374f
jmp	0x14004374f
mov	edi, eax
mov	ebp, 1
jmp	0x140043759
jmp	0x140043759
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
je	0x140043eae
je	0x140043eae
cmp	eax, -1
sete	r12b
jmp	0x140043854
jmp	0x140043854
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebx, eax
cmp	eax, -1
jne	0x1400437d4
jne	0x1400437d4
mov	qword ptr [rsp + 0x70], 0
cmp	qword ptr [rsp + 0x20], 0xa
jbe	0x140043ae0
jbe	0x140043ae0
mov	ebx, 0xffffffff
mov	edx, 0xffffffff
jmp	0x140043a0d
jmp	0x140043a0d
nop	word ptr [rax + rax]
xor	edi, edi
jmp	0x14004387d
jmp	0x14004387d
mov	r12d, edi
xor	r14d, r14d
xor	edi, edi
jmp	0x14004387d
jmp	0x14004387d
mov	r12d, edi
xor	r14d, r14d
xor	r15d, r15d
xor	edi, edi
jmp	0x14004387d
jmp	0x14004387d
xor	r12d, r12d
mov	edi, eax
jmp	0x14004387d
jmp	0x14004387d
mov	qword ptr [rsp + 0x70], 0
jmp	0x140043e36
jmp	0x140043e36
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x88]
mov	rdx, qword ptr [rsp + 0x50]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	rbx, qword ptr [rsp + 0x100]
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	qword ptr [rsp + 0xe0], rcx
lea	rcx, [rbx + 0xd0]
movups	xmmword ptr [rsp + 0x70], xmm0
movups	xmmword ptr [rsp + 0x60], xmm1
call	0x14001d6e0
call	0x14001d6e0
mov	r13d, dword ptr [rbx + 0x18]
mov	rsi, rax
and	r13d, 0x4a
cmp	r13d, 0x40
je	0x140044680
je	0x140044680
mov	r12d, 0xa
cmp	r13d, 8
je	0x140044260
je	0x140044260
lea	rax, [rsp + 0x70]
lea	rdx, [rsp + 0x60]
mov	rcx, rax
mov	qword ptr [rsp + 0x40], rdx
mov	qword ptr [rsp + 0x38], rax
call	0x140020830
call	0x140020830
mov	edi, eax
test	al, al
jne	0x1400446b0
jne	0x1400446b0
mov	rcx, qword ptr [rsp + 0x38]
call	0x1400208f0
call	0x1400208f0
cmp	byte ptr [rsi + 0x6e], al
mov	ebx, eax
sete	byte ptr [rsp + 0x5f]
je	0x140043f8d
je	0x140043f8d
cmp	byte ptr [rsi + 0x6f], al
jne	0x140044730
jne	0x140044730
movzx	edx, byte ptr [rsi + 0x20]
test	dl, dl
jne	0x140044248
jne	0x140044248
cmp	byte ptr [rsi + 0x48], al
je	0x140043fda
je	0x140043fda
mov	rcx, qword ptr [rsp + 0x70]
call	0x140091a00
call	0x140091a00
mov	r15, qword ptr [rsp + 0x38]
mov	rdx, qword ptr [rsp + 0x40]
mov	dword ptr [rsp + 0x78], 0xffffffff
mov	rcx, r15
call	0x140020830
call	0x140020830
mov	edi, eax
test	al, al
jne	0x14004473e
jne	0x14004473e
mov	rcx, r15
call	0x1400208f0
call	0x1400208f0
movzx	edx, byte ptr [rsi + 0x20]
mov	ebx, eax
xor	r14d, r14d
xor	ebp, ebp
test	dl, dl
je	0x140043fec
je	0x140043fec
cmp	byte ptr [rsi + 0x49], bl
je	0x140044500
je	0x140044500
cmp	byte ptr [rsi + 0x48], bl
je	0x140044500
je	0x140044500
cmp	byte ptr [rsi + 0x72], bl
je	0x1400442b8
je	0x1400442b8
test	bpl, bpl
je	0x140044500
je	0x140044500
cmp	byte ptr [rsi + 0x70], bl
je	0x140044015
je	0x140044015
cmp	byte ptr [rsi + 0x71], bl
jne	0x140044750
jne	0x140044750
test	r13d, r13d
sete	al
cmp	r12d, 0x10
sete	dl
or	al, dl
je	0x14004475c
je	0x14004475c
xor	r14d, r14d
xor	ebp, ebp
mov	r12d, 0x10
mov	rdi, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
cmp	rax, rdx
jae	0x1400443a8
jae	0x1400443a8
add	rax, 1
mov	dword ptr [rsp + 0x78], 0xffffffff
mov	qword ptr [rdi + 0x10], rax
cmp	rax, rdx
jae	0x1400443d0
jae	0x1400443d0
xor	edi, edi
mov	rcx, qword ptr [rsp + 0x60]
cmp	dword ptr [rsp + 0x68], -1
sete	al
test	rcx, rcx
setne	dl
and	dl, al
jne	0x140044368
jne	0x140044368
cmp	al, dil
jne	0x1400442f8
jne	0x1400442f8
mov	edi, 1
cmp	r12d, 0x10
je	0x140044298
je	0x140044298
movsxd	rax, r12d
mov	dword ptr [rsp + 0x58], r12d
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x87]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x50], rax
call	0x140071d40
call	0x140071d40
cmp	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsp + 0x88], rax
jne	0x140044690
jne	0x140044690
mov	eax, 0xffffffff
xor	edx, edx
div	dword ptr [rsp + 0x58]
mov	dword ptr [rsp + 0x34], eax
movzx	eax, byte ptr [rsi + 0x88]
mov	byte ptr [rsp + 0x5e], al
test	al, al
jne	0x140044510
jne	0x140044510
xor	r15d, r15d
test	dil, dil
jne	0x1400447c7
jne	0x1400447c7
lea	eax, [r12 + 0x30]
xor	r13d, r13d
mov	byte ptr [rsp + 0x38], al
cmp	qword ptr [rsp + 0x28], 0xa
ja	0x140044340
ja	0x140044340
cmp	bl, 0x2f
jle	0x140044420
jle	0x140044420
cmp	byte ptr [rsp + 0x38], bl
jle	0x140044420
jle	0x140044420
movsx	ebx, bl
sub	ebx, 0x30
cmp	dword ptr [rsp + 0x34], r13d
jb	0x140044330
jb	0x140044330
mov	eax, dword ptr [rsp + 0x58]
imul	r13d, eax
add	ebx, r13d
setb	al
mov	r13d, ebx
add	r14d, 1
or	r15d, eax
mov	rbx, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x140044640
jae	0x140044640
add	rax, 1
mov	dword ptr [rsp + 0x78], 0xffffffff
mov	qword ptr [rbx + 0x10], rax
xor	r12d, r12d
cmp	rax, rdx
jae	0x140044768
jae	0x140044768
mov	rcx, qword ptr [rsp + 0x60]
cmp	dword ptr [rsp + 0x68], -1
sete	al
test	rcx, rcx
je	0x14004419f
je	0x14004419f
test	al, al
jne	0x1400444c8
jne	0x1400444c8
cmp	al, r12b
jne	0x140044380
jne	0x140044380
mov	r12d, 1
mov	rcx, qword ptr [rsp + 0x88]
cmp	qword ptr [rcx - 0x18], 0
jne	0x140044436
jne	0x140044436
nop	dword ptr [rax]
test	r14d, r14d
jne	0x140044480
jne	0x140044480
cmp	bpl, 1
je	0x140044480
je	0x140044480
mov	rax, qword ptr [rsp + 0x110]
mov	dword ptr [rax], 0
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
test	r12b, r12b
je	0x140044207
je	0x140044207
mov	rax, qword ptr [rsp + 0x108]
or	dword ptr [rax], 2
movdqu	xmm2, xmmword ptr [rsp + 0x70]
mov	rax, qword ptr [rsp + 0xe0]
sub	rcx, 0x18
mov	rdx, qword ptr [rsp + 0x50]
movups	xmmword ptr [rax], xmm2
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xe0]
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
cmp	byte ptr [rsi + 0x49], al
jne	0x140043f99
jne	0x140043f99
jmp	0x140043fda
jmp	0x140043fda
nop	word ptr cs:[rax + rax]
lea	rax, [rsp + 0x70]
lea	rdx, [rsp + 0x60]
mov	r12d, 0x10
mov	rcx, rax
mov	qword ptr [rsp + 0x40], rdx
mov	qword ptr [rsp + 0x38], rax
call	0x140020830
call	0x140020830
mov	edi, eax
test	al, al
je	0x140043f6e
je	0x140043f6e
mov	byte ptr [rsp + 0x5f], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
mov	dword ptr [rsp + 0x58], 0x10
mov	r12d, 0x16
mov	qword ptr [rsp + 0x28], 0x16
jmp	0x1400440a6
jmp	0x1400440a6
nop	dword ptr [rax]
mov	eax, ebp
xor	eax, 1
cmp	r12d, 0xa
sete	dl
or	al, dl
je	0x140044007
je	0x140044007
cmp	r12d, 8
sete	bpl
test	r13d, r13d
sete	dl
or	bpl, dl
je	0x1400444b8
je	0x1400444b8
xor	r14d, r14d
mov	r12d, 8
jmp	0x140044035
jmp	0x140044035
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x70]
test	rcx, rcx
je	0x140044410
je	0x140044410
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400443f5
jae	0x1400443f5
movzx	ebx, byte ptr [rax]
test	bpl, bpl
je	0x140044500
je	0x140044500
movzx	edx, byte ptr [rsi + 0x20]
jmp	0x140043fdf
jmp	0x140043fdf
nop	dword ptr [rax]
mov	r15d, 1
jmp	0x140044153
jmp	0x140044153
nop	dword ptr [rax + rax]
lea	eax, [rbx - 0x30]
mov	edx, ebx
cmp	al, 9
jbe	0x14004412a
jbe	0x14004412a
lea	eax, [rdx - 0x61]
cmp	al, 5
ja	0x140044660
ja	0x140044660
movsx	ebx, bl
sub	ebx, 0x57
jmp	0x140044130
jmp	0x140044130
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x18]
cmp	qword ptr [rcx + 0x10], rax
jae	0x140044708
jae	0x140044708
xor	eax, eax
jmp	0x140044081
jmp	0x140044081
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x70]
test	rcx, rcx
je	0x140044420
je	0x140044420
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140044782
jae	0x140044782
movzx	ebx, byte ptr [rax]
jmp	0x14004410b
jmp	0x14004410b
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
mov	dword ptr [rsp + 0x78], 0xffffffff
cmp	rax, rdx
jb	0x140044064
jb	0x140044064
nop	word ptr [rax + rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x140044064
jne	0x140044064
mov	qword ptr [rsp + 0x70], 0
mov	edi, 1
jmp	0x140044066
jmp	0x140044066
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebx, eax
cmp	eax, -1
jne	0x140044317
jne	0x140044317
mov	qword ptr [rsp + 0x70], 0
nop	
mov	ebx, 0xffffffff
jmp	0x140044317
jmp	0x140044317
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x88]
xor	r12d, r12d
cmp	qword ptr [rcx - 0x18], 0
je	0x1400441c8
je	0x1400441c8
lea	rbx, [rsp + 0x88]
movsx	edx, r14b
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	r8, rbx
call	0x1400ae880
call	0x1400ae880
test	al, al
je	0x1400446f0
je	0x1400446f0
mov	rcx, qword ptr [rsp + 0x88]
test	r14d, r14d
jne	0x140044480
jne	0x140044480
cmp	bpl, 1
je	0x140044480
je	0x140044480
cmp	qword ptr [rcx - 0x18], 0
je	0x1400441db
je	0x1400441db
test	dil, dil
jne	0x1400441db
jne	0x1400441db
test	r15b, r15b
je	0x1400446c8
je	0x1400446c8
mov	rax, qword ptr [rsp + 0x110]
mov	dword ptr [rax], 0xffffffff
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
jmp	0x1400441f7
jmp	0x1400441f7
nop	dword ptr [rax + rax]
add	r14d, 1
mov	ebp, eax
jmp	0x140044035
jmp	0x140044035
nop	dword ptr [rax + rax]
mov	rbx, qword ptr [rcx + 0x18]
xor	eax, eax
cmp	qword ptr [rcx + 0x10], rbx
jb	0x14004419f
jb	0x14004419f
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jne	0x14004419f
jne	0x14004419f
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004419f
jmp	0x14004419f
nop	dword ptr [rax + rax]
xor	edi, edi
jmp	0x14004408f
jmp	0x14004408f
nop	word ptr [rax + rax]
test	dil, dil
jne	0x1400447d4
jne	0x1400447d4
lea	rax, [rsi + 0x72]
xor	r15d, r15d
xor	r13d, r13d
mov	qword ptr [rsp + 0x48], rax
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x140044539
je	0x140044539
cmp	byte ptr [rsi + 0x49], bl
je	0x1400445f6
je	0x1400445f6
mov	r8, qword ptr [rsp + 0x28]
cmp	byte ptr [rsi + 0x48], bl
sete	r12b
test	r8, r8
sete	al
or	r12b, al
jne	0x140044420
jne	0x140044420
movsx	edx, bl
mov	rbx, qword ptr [rsp + 0x48]
mov	rcx, rbx
call	0x140015988
call	0x140015988
test	rax, rax
je	0x1400447c0
je	0x1400447c0
sub	rax, rbx
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
cmp	dword ptr [rsp + 0x34], r13d
jb	0x140044630
jb	0x140044630
mov	ecx, dword ptr [rsp + 0x58]
imul	r13d, ecx
add	eax, r13d
setb	dl
mov	r13d, eax
add	r14d, 1
or	r15d, edx
mov	rcx, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140044622
jae	0x140044622
add	rax, 1
mov	qword ptr [rcx + 0x10], rax
mov	rdx, qword ptr [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0x38]
mov	dword ptr [rsp + 0x78], 0xffffffff
call	0x140020830
call	0x140020830
mov	r12d, eax
test	al, al
jne	0x1400441ae
jne	0x1400441ae
mov	rcx, qword ptr [rsp + 0x38]
call	0x1400208f0
call	0x1400208f0
mov	ebx, eax
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x140044539
je	0x140044539
cmp	byte ptr [rsi + 0x49], bl
jne	0x140044539
jne	0x140044539
test	r14d, r14d
je	0x1400447e4
je	0x1400447e4
movsx	edx, r14b
lea	rcx, [rsp + 0x88]
call	0x140073fa0
call	0x140073fa0
mov	rcx, qword ptr [rsp + 0x70]
xor	r14d, r14d
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jb	0x1400445ab
jb	0x1400445ab
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x1400445b3
jmp	0x1400445b3
nop	word ptr [rax + rax]
movzx	r15d, byte ptr [rsp + 0x5e]
jmp	0x14004459c
jmp	0x14004459c
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	dword ptr [rsp + 0x78], 0xffffffff
jmp	0x140044179
jmp	0x140044179
nop	
sub	edx, 0x41
cmp	dl, 5
ja	0x140044420
ja	0x140044420
movsx	ebx, bl
sub	ebx, 0x37
jmp	0x140044130
jmp	0x140044130
nop	word ptr [rax + rax]
mov	r12d, 8
jmp	0x140043f48
jmp	0x140043f48
nop	dword ptr [rax + rax]
lea	rcx, [rsp + 0x88]
mov	edx, 0x20
call	0x140073cf0
call	0x140073cf0
jmp	0x1400440d1
jmp	0x1400440d1
nop	word ptr [rax + rax]
mov	byte ptr [rsp + 0x5f], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
jmp	0x140044099
jmp	0x140044099
nop	dword ptr [rax]
mov	eax, r13d
neg	eax
cmp	byte ptr [rsp + 0x5f], 0
cmovne	r13d, eax
mov	rax, qword ptr [rsp + 0x110]
mov	dword ptr [rax], r13d
jmp	0x1400441f7
jmp	0x1400441f7
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
jmp	0x140044462
jmp	0x140044462
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
mov	byte ptr [rsp + 0x28], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x28]
cmp	eax, -1
jne	0x140044376
jne	0x140044376
mov	qword ptr [rsp + 0x60], 0
mov	eax, edx
jmp	0x140044081
jmp	0x140044081
mov	byte ptr [rsp + 0x5f], 0
movzx	edx, byte ptr [rsi + 0x20]
jmp	0x140043fda
jmp	0x140043fda
xor	r14d, r14d
xor	ebp, ebp
jmp	0x14004408f
jmp	0x14004408f
nop	dword ptr [rax + rax]
xor	edi, edi
mov	ebp, 1
jmp	0x14004408f
jmp	0x14004408f
mov	edi, eax
mov	ebp, 1
jmp	0x140044099
jmp	0x140044099
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
je	0x1400447ee
je	0x1400447ee
cmp	eax, -1
sete	r12b
jmp	0x140044185
jmp	0x140044185
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebx, eax
cmp	eax, -1
jne	0x14004410b
jne	0x14004410b
mov	qword ptr [rsp + 0x70], 0
cmp	qword ptr [rsp + 0x28], 0xa
jbe	0x140044420
jbe	0x140044420
mov	ebx, 0xffffffff
mov	edx, 0xffffffff
jmp	0x14004434d
jmp	0x14004434d
nop	word ptr [rax + rax]
xor	edi, edi
jmp	0x1400441ae
jmp	0x1400441ae
mov	r12d, edi
xor	r13d, r13d
xor	edi, edi
jmp	0x1400441ae
jmp	0x1400441ae
mov	r12d, edi
xor	r13d, r13d
xor	r15d, r15d
xor	edi, edi
jmp	0x1400441ae
jmp	0x1400441ae
xor	r12d, r12d
mov	edi, eax
jmp	0x1400441ae
jmp	0x1400441ae
mov	qword ptr [rsp + 0x70], 0
jmp	0x140044776
jmp	0x140044776
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x88]
mov	rdx, qword ptr [rsp + 0x50]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	rbx, qword ptr [rsp + 0x100]
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	qword ptr [rsp + 0xe0], rcx
lea	rcx, [rbx + 0xd0]
movups	xmmword ptr [rsp + 0x70], xmm0
movups	xmmword ptr [rsp + 0x60], xmm1
call	0x14001d6e0
call	0x14001d6e0
mov	r13d, dword ptr [rbx + 0x18]
mov	rsi, rax
and	r13d, 0x4a
cmp	r13d, 0x40
je	0x140044fd0
je	0x140044fd0
mov	r12d, 0xa
cmp	r13d, 8
je	0x140044ba0
je	0x140044ba0
lea	rax, [rsp + 0x70]
lea	rdx, [rsp + 0x60]
mov	rcx, rax
mov	qword ptr [rsp + 0x40], rdx
mov	qword ptr [rsp + 0x38], rax
call	0x140020830
call	0x140020830
mov	edi, eax
test	al, al
jne	0x140045000
jne	0x140045000
mov	rcx, qword ptr [rsp + 0x38]
call	0x1400208f0
call	0x1400208f0
cmp	byte ptr [rsi + 0x6e], al
mov	ebx, eax
sete	byte ptr [rsp + 0x5f]
je	0x1400448cd
je	0x1400448cd
cmp	byte ptr [rsi + 0x6f], al
jne	0x140045080
jne	0x140045080
movzx	edx, byte ptr [rsi + 0x20]
test	dl, dl
jne	0x140044b90
jne	0x140044b90
cmp	byte ptr [rsi + 0x48], al
je	0x14004491a
je	0x14004491a
mov	rcx, qword ptr [rsp + 0x70]
call	0x140091a00
call	0x140091a00
mov	r15, qword ptr [rsp + 0x38]
mov	rdx, qword ptr [rsp + 0x40]
mov	dword ptr [rsp + 0x78], 0xffffffff
mov	rcx, r15
call	0x140020830
call	0x140020830
mov	edi, eax
test	al, al
jne	0x14004508e
jne	0x14004508e
mov	rcx, r15
call	0x1400208f0
call	0x1400208f0
movzx	edx, byte ptr [rsi + 0x20]
mov	ebx, eax
xor	r14d, r14d
xor	ebp, ebp
test	dl, dl
je	0x14004492c
je	0x14004492c
cmp	byte ptr [rsi + 0x49], bl
je	0x140044e40
je	0x140044e40
cmp	byte ptr [rsi + 0x48], bl
je	0x140044e40
je	0x140044e40
cmp	byte ptr [rsi + 0x72], bl
je	0x140044bf8
je	0x140044bf8
test	bpl, bpl
je	0x140044e40
je	0x140044e40
cmp	byte ptr [rsi + 0x70], bl
je	0x140044955
je	0x140044955
cmp	byte ptr [rsi + 0x71], bl
jne	0x1400450a0
jne	0x1400450a0
test	r13d, r13d
sete	al
cmp	r12d, 0x10
sete	dl
or	al, dl
je	0x1400450ac
je	0x1400450ac
xor	r14d, r14d
xor	ebp, ebp
mov	r12d, 0x10
mov	rdi, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
cmp	rax, rdx
jae	0x140044ce8
jae	0x140044ce8
add	rax, 1
mov	dword ptr [rsp + 0x78], 0xffffffff
mov	qword ptr [rdi + 0x10], rax
cmp	rax, rdx
jae	0x140044d10
jae	0x140044d10
xor	edi, edi
mov	rcx, qword ptr [rsp + 0x60]
cmp	dword ptr [rsp + 0x68], -1
sete	al
test	rcx, rcx
setne	dl
and	dl, al
jne	0x140044ca8
jne	0x140044ca8
cmp	al, dil
jne	0x140044c38
jne	0x140044c38
mov	edi, 1
cmp	r12d, 0x10
je	0x140044bd8
je	0x140044bd8
movsxd	rax, r12d
mov	dword ptr [rsp + 0x58], r12d
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x87]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x50], rax
call	0x140071d40
call	0x140071d40
cmp	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsp + 0x88], rax
jne	0x140044fe0
jne	0x140044fe0
mov	eax, 0xffff
xor	edx, edx
idiv	dword ptr [rsp + 0x58]
mov	dword ptr [rsp + 0x34], eax
movzx	eax, byte ptr [rsi + 0x88]
mov	byte ptr [rsp + 0x5e], al
test	al, al
jne	0x140044e50
jne	0x140044e50
xor	r15d, r15d
test	dil, dil
jne	0x140045117
jne	0x140045117
lea	eax, [r12 + 0x30]
xor	r13d, r13d
mov	byte ptr [rsp + 0x38], al
cmp	qword ptr [rsp + 0x28], 0xa
ja	0x140044c80
ja	0x140044c80
cmp	bl, 0x2f
jle	0x140044d60
jle	0x140044d60
cmp	byte ptr [rsp + 0x38], bl
jle	0x140044d60
jle	0x140044d60
movsx	ebx, bl
sub	ebx, 0x30
cmp	word ptr [rsp + 0x34], r13w
jb	0x140044c70
jb	0x140044c70
imul	r13w, word ptr [rsp + 0x58]
mov	eax, 0xffff
sub	eax, ebx
movzx	edx, r13w
cmp	edx, eax
setg	al
add	r13d, ebx
add	r14d, 1
or	r15d, eax
mov	rbx, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x140044f88
jae	0x140044f88
add	rax, 1
mov	dword ptr [rsp + 0x78], 0xffffffff
mov	qword ptr [rbx + 0x10], rax
xor	r12d, r12d
cmp	rax, rdx
jae	0x1400450b8
jae	0x1400450b8
mov	rcx, qword ptr [rsp + 0x60]
cmp	dword ptr [rsp + 0x68], -1
sete	al
test	rcx, rcx
je	0x140044ae9
je	0x140044ae9
test	al, al
jne	0x140044e08
jne	0x140044e08
cmp	al, r12b
jne	0x140044cc0
jne	0x140044cc0
mov	r12d, 1
mov	rcx, qword ptr [rsp + 0x88]
cmp	qword ptr [rcx - 0x18], 0
jne	0x140044d76
jne	0x140044d76
nop	dword ptr [rax + rax]
test	r14d, r14d
jne	0x140044dc0
jne	0x140044dc0
cmp	bpl, 1
je	0x140044dc0
je	0x140044dc0
mov	rax, qword ptr [rsp + 0x110]
xor	r8d, r8d
mov	word ptr [rax], r8w
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
test	r12b, r12b
je	0x140044b50
je	0x140044b50
mov	rax, qword ptr [rsp + 0x108]
or	dword ptr [rax], 2
movdqu	xmm2, xmmword ptr [rsp + 0x70]
mov	rax, qword ptr [rsp + 0xe0]
sub	rcx, 0x18
mov	rdx, qword ptr [rsp + 0x50]
movups	xmmword ptr [rax], xmm2
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xe0]
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
cmp	byte ptr [rsi + 0x49], al
jne	0x1400448d9
jne	0x1400448d9
jmp	0x14004491a
jmp	0x14004491a
nop	
lea	rax, [rsp + 0x70]
lea	rdx, [rsp + 0x60]
mov	r12d, 0x10
mov	rcx, rax
mov	qword ptr [rsp + 0x40], rdx
mov	qword ptr [rsp + 0x38], rax
call	0x140020830
call	0x140020830
mov	edi, eax
test	al, al
je	0x1400448ae
je	0x1400448ae
mov	byte ptr [rsp + 0x5f], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
mov	dword ptr [rsp + 0x58], 0x10
mov	r12d, 0x16
mov	qword ptr [rsp + 0x28], 0x16
jmp	0x1400449e6
jmp	0x1400449e6
nop	dword ptr [rax]
mov	eax, ebp
xor	eax, 1
cmp	r12d, 0xa
sete	dl
or	al, dl
je	0x140044947
je	0x140044947
cmp	r12d, 8
sete	bpl
test	r13d, r13d
sete	dl
or	bpl, dl
je	0x140044df8
je	0x140044df8
xor	r14d, r14d
mov	r12d, 8
jmp	0x140044975
jmp	0x140044975
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x70]
test	rcx, rcx
je	0x140044d50
je	0x140044d50
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140044d35
jae	0x140044d35
movzx	ebx, byte ptr [rax]
test	bpl, bpl
je	0x140044e40
je	0x140044e40
movzx	edx, byte ptr [rsi + 0x20]
jmp	0x14004491f
jmp	0x14004491f
nop	dword ptr [rax]
mov	r15d, 1
jmp	0x140044a9d
jmp	0x140044a9d
nop	dword ptr [rax + rax]
lea	eax, [rbx - 0x30]
mov	edx, ebx
cmp	al, 9
jbe	0x140044a6a
jbe	0x140044a6a
lea	eax, [rdx - 0x61]
cmp	al, 5
ja	0x140044fb0
ja	0x140044fb0
movsx	ebx, bl
sub	ebx, 0x57
jmp	0x140044a70
jmp	0x140044a70
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x18]
cmp	qword ptr [rcx + 0x10], rax
jae	0x140045058
jae	0x140045058
xor	eax, eax
jmp	0x1400449c1
jmp	0x1400449c1
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x70]
test	rcx, rcx
je	0x140044d60
je	0x140044d60
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400450d2
jae	0x1400450d2
movzx	ebx, byte ptr [rax]
jmp	0x140044a4b
jmp	0x140044a4b
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
mov	dword ptr [rsp + 0x78], 0xffffffff
cmp	rax, rdx
jb	0x1400449a4
jb	0x1400449a4
nop	word ptr [rax + rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x1400449a4
jne	0x1400449a4
mov	qword ptr [rsp + 0x70], 0
mov	edi, 1
jmp	0x1400449a6
jmp	0x1400449a6
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebx, eax
cmp	eax, -1
jne	0x140044c57
jne	0x140044c57
mov	qword ptr [rsp + 0x70], 0
nop	
mov	ebx, 0xffffffff
jmp	0x140044c57
jmp	0x140044c57
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x88]
xor	r12d, r12d
cmp	qword ptr [rcx - 0x18], 0
je	0x140044b10
je	0x140044b10
lea	rbx, [rsp + 0x88]
movsx	edx, r14b
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	r8, rbx
call	0x1400ae880
call	0x1400ae880
test	al, al
je	0x140045040
je	0x140045040
mov	rcx, qword ptr [rsp + 0x88]
test	r14d, r14d
jne	0x140044dc0
jne	0x140044dc0
cmp	bpl, 1
je	0x140044dc0
je	0x140044dc0
cmp	qword ptr [rcx - 0x18], 0
je	0x140044b23
je	0x140044b23
test	dil, dil
jne	0x140044b23
jne	0x140044b23
test	r15b, r15b
je	0x140045018
je	0x140045018
mov	rax, qword ptr [rsp + 0x110]
mov	edx, 0xffffffff
mov	word ptr [rax], dx
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
jmp	0x140044b40
jmp	0x140044b40
nop	dword ptr [rax]
add	r14d, 1
mov	ebp, eax
jmp	0x140044975
jmp	0x140044975
nop	dword ptr [rax + rax]
mov	rbx, qword ptr [rcx + 0x18]
xor	eax, eax
cmp	qword ptr [rcx + 0x10], rbx
jb	0x140044ae9
jb	0x140044ae9
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jne	0x140044ae9
jne	0x140044ae9
mov	qword ptr [rsp + 0x60], 0
jmp	0x140044ae9
jmp	0x140044ae9
nop	dword ptr [rax + rax]
xor	edi, edi
jmp	0x1400449cf
jmp	0x1400449cf
nop	word ptr [rax + rax]
test	dil, dil
jne	0x140045124
jne	0x140045124
lea	rax, [rsi + 0x72]
xor	r15d, r15d
xor	r13d, r13d
mov	qword ptr [rsp + 0x48], rax
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x140044e79
je	0x140044e79
cmp	byte ptr [rsi + 0x49], bl
je	0x140044f40
je	0x140044f40
mov	r8, qword ptr [rsp + 0x28]
cmp	byte ptr [rsi + 0x48], bl
sete	r12b
test	r8, r8
sete	al
or	r12b, al
jne	0x140044d60
jne	0x140044d60
movsx	edx, bl
mov	rbx, qword ptr [rsp + 0x48]
mov	rcx, rbx
call	0x140015988
call	0x140015988
test	rax, rax
je	0x140045110
je	0x140045110
sub	rax, rbx
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
cmp	word ptr [rsp + 0x34], r13w
jb	0x140044f78
jb	0x140044f78
imul	r13w, word ptr [rsp + 0x58]
mov	edx, 0xffff
sub	edx, eax
movzx	ecx, r13w
cmp	ecx, edx
setg	dl
add	r13d, eax
add	r14d, 1
or	r15d, edx
mov	rcx, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140044f6c
jae	0x140044f6c
add	rax, 1
mov	qword ptr [rcx + 0x10], rax
mov	rdx, qword ptr [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0x38]
mov	dword ptr [rsp + 0x78], 0xffffffff
call	0x140020830
call	0x140020830
mov	r12d, eax
test	al, al
jne	0x140044af8
jne	0x140044af8
mov	rcx, qword ptr [rsp + 0x38]
call	0x1400208f0
call	0x1400208f0
mov	ebx, eax
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x140044e79
je	0x140044e79
cmp	byte ptr [rsi + 0x49], bl
jne	0x140044e79
jne	0x140044e79
test	r14d, r14d
je	0x140045134
je	0x140045134
movsx	edx, r14b
lea	rcx, [rsp + 0x88]
call	0x140073fa0
call	0x140073fa0
mov	rcx, qword ptr [rsp + 0x70]
xor	r14d, r14d
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jb	0x140044ef5
jb	0x140044ef5
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140044efd
jmp	0x140044efd
nop	dword ptr [rax]
movzx	r15d, byte ptr [rsp + 0x5e]
jmp	0x140044ee6
jmp	0x140044ee6
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	dword ptr [rsp + 0x78], 0xffffffff
jmp	0x140044ac3
jmp	0x140044ac3
nop	word ptr cs:[rax + rax]
sub	edx, 0x41
cmp	dl, 5
ja	0x140044d60
ja	0x140044d60
movsx	ebx, bl
sub	ebx, 0x37
jmp	0x140044a70
jmp	0x140044a70
nop	word ptr [rax + rax]
mov	r12d, 8
jmp	0x140044888
jmp	0x140044888
nop	dword ptr [rax + rax]
lea	rcx, [rsp + 0x88]
mov	edx, 0x20
call	0x140073cf0
call	0x140073cf0
jmp	0x140044a11
jmp	0x140044a11
nop	word ptr [rax + rax]
mov	byte ptr [rsp + 0x5f], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
jmp	0x1400449d9
jmp	0x1400449d9
nop	dword ptr [rax]
mov	eax, r13d
neg	eax
cmp	byte ptr [rsp + 0x5f], 0
cmovne	r13d, eax
mov	rax, qword ptr [rsp + 0x110]
mov	word ptr [rax], r13w
jmp	0x140044b40
jmp	0x140044b40
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
jmp	0x140044da2
jmp	0x140044da2
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
mov	byte ptr [rsp + 0x28], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x28]
cmp	eax, -1
jne	0x140044cb6
jne	0x140044cb6
mov	qword ptr [rsp + 0x60], 0
mov	eax, edx
jmp	0x1400449c1
jmp	0x1400449c1
mov	byte ptr [rsp + 0x5f], 0
movzx	edx, byte ptr [rsi + 0x20]
jmp	0x14004491a
jmp	0x14004491a
xor	r14d, r14d
xor	ebp, ebp
jmp	0x1400449cf
jmp	0x1400449cf
nop	dword ptr [rax + rax]
xor	edi, edi
mov	ebp, 1
jmp	0x1400449cf
jmp	0x1400449cf
mov	edi, eax
mov	ebp, 1
jmp	0x1400449d9
jmp	0x1400449d9
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
je	0x14004513e
je	0x14004513e
cmp	eax, -1
sete	r12b
jmp	0x140044acf
jmp	0x140044acf
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebx, eax
cmp	eax, -1
jne	0x140044a4b
jne	0x140044a4b
mov	qword ptr [rsp + 0x70], 0
cmp	qword ptr [rsp + 0x28], 0xa
jbe	0x140044d60
jbe	0x140044d60
mov	ebx, 0xffffffff
mov	edx, 0xffffffff
jmp	0x140044c8d
jmp	0x140044c8d
nop	word ptr [rax + rax]
xor	edi, edi
jmp	0x140044af8
jmp	0x140044af8
mov	r12d, edi
xor	r13d, r13d
xor	edi, edi
jmp	0x140044af8
jmp	0x140044af8
mov	r12d, edi
xor	r13d, r13d
xor	r15d, r15d
xor	edi, edi
jmp	0x140044af8
jmp	0x140044af8
xor	r12d, r12d
mov	edi, eax
jmp	0x140044af8
jmp	0x140044af8
mov	qword ptr [rsp + 0x70], 0
jmp	0x1400450c6
jmp	0x1400450c6
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x88]
mov	rdx, qword ptr [rsp + 0x50]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
mov	rbx, qword ptr [rsp + 0x110]
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	qword ptr [rsp + 0xf0], rcx
lea	rcx, [rbx + 0xd0]
movups	xmmword ptr [rsp + 0x80], xmm0
movups	xmmword ptr [rsp + 0x70], xmm1
call	0x14001d6e0
call	0x14001d6e0
mov	r14d, dword ptr [rbx + 0x18]
mov	rsi, rax
and	r14d, 0x4a
cmp	r14d, 0x40
je	0x140045960
je	0x140045960
mov	r12d, 0xa
cmp	r14d, 8
je	0x140045520
je	0x140045520
lea	rax, [rsp + 0x80]
lea	rdx, [rsp + 0x70]
mov	rcx, rax
mov	qword ptr [rsp + 0x50], rdx
mov	qword ptr [rsp + 0x38], rax
call	0x140020830
call	0x140020830
mov	edi, eax
test	al, al
jne	0x140045990
jne	0x140045990
mov	rcx, qword ptr [rsp + 0x38]
call	0x1400208f0
call	0x1400208f0
cmp	byte ptr [rsi + 0x6e], al
mov	ebx, eax
sete	byte ptr [rsp + 0x6e]
je	0x140045223
je	0x140045223
cmp	byte ptr [rsi + 0x6f], al
jne	0x140045a20
jne	0x140045a20
movzx	edx, byte ptr [rsi + 0x20]
test	dl, dl
jne	0x140045510
jne	0x140045510
cmp	byte ptr [rsi + 0x48], al
je	0x140045276
je	0x140045276
mov	rcx, qword ptr [rsp + 0x80]
call	0x140091a00
call	0x140091a00
mov	r15, qword ptr [rsp + 0x38]
mov	rdx, qword ptr [rsp + 0x50]
mov	dword ptr [rsp + 0x88], 0xffffffff
mov	rcx, r15
call	0x140020830
call	0x140020830
mov	edi, eax
test	al, al
jne	0x140045a2e
jne	0x140045a2e
mov	rcx, r15
call	0x1400208f0
call	0x1400208f0
movzx	edx, byte ptr [rsi + 0x20]
mov	ebx, eax
xor	r13d, r13d
xor	ebp, ebp
test	dl, dl
je	0x140045288
je	0x140045288
cmp	byte ptr [rsi + 0x49], bl
je	0x1400457e0
je	0x1400457e0
cmp	byte ptr [rsi + 0x48], bl
je	0x1400457e0
je	0x1400457e0
cmp	byte ptr [rsi + 0x72], bl
je	0x140045578
je	0x140045578
test	bpl, bpl
je	0x1400457e0
je	0x1400457e0
cmp	byte ptr [rsi + 0x70], bl
je	0x1400452b1
je	0x1400452b1
cmp	byte ptr [rsi + 0x71], bl
jne	0x140045a40
jne	0x140045a40
test	r14d, r14d
sete	al
cmp	r12d, 0x10
sete	dl
or	al, dl
je	0x140045a4c
je	0x140045a4c
xor	r13d, r13d
xor	ebp, ebp
mov	r12d, 0x10
mov	rdi, qword ptr [rsp + 0x80]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
cmp	rax, rdx
jae	0x140045670
jae	0x140045670
mov	dword ptr [rsp + 0x88], 0xffffffff
add	rax, 1
mov	qword ptr [rdi + 0x10], rax
cmp	rax, rdx
jae	0x140045698
jae	0x140045698
xor	edi, edi
mov	rcx, qword ptr [rsp + 0x70]
cmp	dword ptr [rsp + 0x78], -1
sete	al
test	rcx, rcx
setne	dl
and	dl, al
jne	0x140045628
jne	0x140045628
cmp	al, dil
jne	0x1400455b8
jne	0x1400455b8
mov	edi, 1
cmp	r12d, 0x10
je	0x14004555b
je	0x14004555b
movsxd	rax, r12d
mov	r14d, r12d
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x97]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x60], rax
call	0x140071d40
call	0x140071d40
cmp	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsp + 0x98], rax
jne	0x140045970
jne	0x140045970
movzx	edx, byte ptr [rsp + 0x6e]
movsxd	rcx, r14d
movabs	rax, 0x7fffffffffffffff
mov	qword ptr [rsp + 0x40], rcx
add	rax, rdx
xor	edx, edx
mov	qword ptr [rsp + 0x48], rax
div	rcx
mov	qword ptr [rsp + 0x30], rax
movzx	eax, byte ptr [rsi + 0x88]
mov	byte ptr [rsp + 0x6f], al
test	al, al
jne	0x1400457f0
jne	0x1400457f0
xor	r15d, r15d
test	dil, dil
jne	0x140045ab7
jne	0x140045ab7
lea	eax, [r12 + 0x30]
xor	r14d, r14d
mov	byte ptr [rsp + 0x38], al
cmp	qword ptr [rsp + 0x28], 0xa
ja	0x140045600
ja	0x140045600
cmp	bl, 0x2f
jle	0x1400456f0
jle	0x1400456f0
cmp	byte ptr [rsp + 0x38], bl
jle	0x1400456f0
jle	0x1400456f0
movsx	ebx, bl
sub	ebx, 0x30
cmp	qword ptr [rsp + 0x30], r14
jb	0x1400455f0
jb	0x1400455f0
mov	rax, qword ptr [rsp + 0x40]
movsxd	rbx, ebx
imul	r14, rax
mov	rax, qword ptr [rsp + 0x48]
sub	rax, rbx
cmp	rax, r14
setb	al
add	r14, rbx
add	r13d, 1
or	r15d, eax
mov	rbx, qword ptr [rsp + 0x80]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x140045920
jae	0x140045920
mov	dword ptr [rsp + 0x88], 0xffffffff
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
xor	r12d, r12d
cmp	rax, rdx
jae	0x140045a58
jae	0x140045a58
mov	rcx, qword ptr [rsp + 0x70]
cmp	dword ptr [rsp + 0x78], -1
sete	al
test	rcx, rcx
je	0x14004546b
je	0x14004546b
test	al, al
jne	0x1400457b0
jne	0x1400457b0
cmp	al, r12b
jne	0x140045640
jne	0x140045640
mov	r12d, 1
mov	rcx, qword ptr [rsp + 0x98]
cmp	qword ptr [rcx - 0x18], 0
jne	0x140045706
jne	0x140045706
nop	dword ptr [rax]
cmp	bpl, 1
je	0x140045750
je	0x140045750
test	r13d, r13d
jne	0x140045750
jne	0x140045750
mov	rax, qword ptr [rsp + 0x120]
mov	qword ptr [rax], 0
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
test	r12b, r12b
je	0x1400454d0
je	0x1400454d0
mov	rax, qword ptr [rsp + 0x118]
or	dword ptr [rax], 2
mov	rax, qword ptr [rsp + 0xf0]
mov	rdx, qword ptr [rsp + 0x60]
sub	rcx, 0x18
movdqu	xmm2, xmmword ptr [rsp + 0x80]
movups	xmmword ptr [rax], xmm2
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xf0]
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	
cmp	byte ptr [rsi + 0x49], al
jne	0x14004522f
jne	0x14004522f
jmp	0x140045276
jmp	0x140045276
nop	
lea	rax, [rsp + 0x80]
lea	rdx, [rsp + 0x70]
mov	r12d, 0x10
mov	rcx, rax
mov	qword ptr [rsp + 0x50], rdx
mov	qword ptr [rsp + 0x38], rax
call	0x140020830
call	0x140020830
mov	edi, eax
test	al, al
je	0x140045204
je	0x140045204
mov	byte ptr [rsp + 0x6e], 0
xor	ebx, ebx
xor	r13d, r13d
xor	ebp, ebp
mov	qword ptr [rsp + 0x28], 0x16
mov	r14d, 0x10
mov	r12d, 0x16
jmp	0x140045346
jmp	0x140045346
nop	dword ptr [rax]
mov	eax, ebp
xor	eax, 1
cmp	r12d, 0xa
sete	dl
or	al, dl
je	0x1400452a3
je	0x1400452a3
cmp	r12d, 8
sete	bpl
test	r14d, r14d
sete	dl
or	bpl, dl
je	0x1400457a0
je	0x1400457a0
xor	r13d, r13d
mov	r12d, 8
jmp	0x1400452d1
jmp	0x1400452d1
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x80]
test	rcx, rcx
je	0x1400456e0
je	0x1400456e0
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400456c0
jae	0x1400456c0
movzx	ebx, byte ptr [rax]
test	bpl, bpl
je	0x1400457e0
je	0x1400457e0
movzx	edx, byte ptr [rsi + 0x20]
jmp	0x14004527b
jmp	0x14004527b
nop	dword ptr [rax]
mov	r15d, 1
jmp	0x140045419
jmp	0x140045419
nop	dword ptr [rax + rax]
lea	eax, [rbx - 0x30]
mov	edx, ebx
cmp	al, 9
jbe	0x1400453e4
jbe	0x1400453e4
lea	eax, [rdx - 0x61]
cmp	al, 5
ja	0x140045948
ja	0x140045948
movsx	ebx, bl
sub	ebx, 0x57
jmp	0x1400453ea
jmp	0x1400453ea
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x18]
cmp	qword ptr [rcx + 0x10], rax
jae	0x1400459f8
jae	0x1400459f8
xor	eax, eax
jmp	0x140045323
jmp	0x140045323
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x80]
test	rcx, rcx
je	0x1400456f0
je	0x1400456f0
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140045a72
jae	0x140045a72
movzx	ebx, byte ptr [rax]
jmp	0x1400453c5
jmp	0x1400453c5
nop	word ptr [rax + rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
mov	dword ptr [rsp + 0x88], 0xffffffff
cmp	rax, rdx
jb	0x140045306
jb	0x140045306
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x140045306
jne	0x140045306
mov	qword ptr [rsp + 0x80], 0
mov	edi, 1
jmp	0x140045308
jmp	0x140045308
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebx, eax
cmp	eax, -1
jne	0x1400455da
jne	0x1400455da
mov	qword ptr [rsp + 0x80], 0
nop	dword ptr [rax]
mov	ebx, 0xffffffff
jmp	0x1400455da
jmp	0x1400455da
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x98]
xor	r12d, r12d
cmp	qword ptr [rcx - 0x18], 0
je	0x140045490
je	0x140045490
lea	rbx, [rsp + 0x98]
movsx	edx, r13b
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	r8, rbx
call	0x1400ae880
call	0x1400ae880
test	al, al
je	0x1400459e0
je	0x1400459e0
mov	rcx, qword ptr [rsp + 0x98]
test	r13d, r13d
jne	0x140045750
jne	0x140045750
cmp	bpl, 1
je	0x140045750
je	0x140045750
cmp	qword ptr [rcx - 0x18], 0
je	0x1400454a3
je	0x1400454a3
test	dil, dil
jne	0x1400454a3
jne	0x1400454a3
test	r15b, r15b
je	0x1400459b8
je	0x1400459b8
cmp	byte ptr [rsp + 0x6e], 0
mov	rdi, qword ptr [rsp + 0x120]
movabs	rax, 0x7fffffffffffffff
movabs	rdx, 0x8000000000000000
cmovne	rax, rdx
mov	qword ptr [rdi], rax
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
jmp	0x1400454c0
jmp	0x1400454c0
nop	dword ptr [rax]
add	r13d, 1
mov	ebp, eax
jmp	0x1400452d1
jmp	0x1400452d1
nop	dword ptr [rax + rax]
mov	rbx, qword ptr [rcx + 0x18]
xor	eax, eax
cmp	qword ptr [rcx + 0x10], rbx
jb	0x14004546b
jb	0x14004546b
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jne	0x14004546b
jne	0x14004546b
mov	qword ptr [rsp + 0x70], 0
jmp	0x14004546b
jmp	0x14004546b
xor	edi, edi
jmp	0x140045331
jmp	0x140045331
nop	word ptr [rax + rax]
test	dil, dil
jne	0x140045ac4
jne	0x140045ac4
lea	rax, [rsi + 0x72]
xor	r15d, r15d
xor	r14d, r14d
mov	qword ptr [rsp + 0x58], rax
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x140045819
je	0x140045819
cmp	byte ptr [rsi + 0x49], bl
je	0x1400458eb
je	0x1400458eb
mov	r8, qword ptr [rsp + 0x28]
cmp	byte ptr [rsi + 0x48], bl
sete	r12b
test	r8, r8
sete	al
or	r12b, al
jne	0x1400456f0
jne	0x1400456f0
movsx	edx, bl
mov	rbx, qword ptr [rsp + 0x58]
mov	rcx, rbx
call	0x140015988
call	0x140015988
test	rax, rax
je	0x140045ab0
je	0x140045ab0
sub	rax, rbx
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
cmp	qword ptr [rsp + 0x30], r14
jb	0x140045910
jb	0x140045910
mov	rcx, qword ptr [rsp + 0x40]
mov	rdx, qword ptr [rsp + 0x48]
cdqe	
imul	r14, rcx
sub	rdx, rax
cmp	rdx, r14
setb	dl
add	r14, rax
add	r13d, 1
or	r15d, edx
mov	rcx, qword ptr [rsp + 0x80]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400459a8
jae	0x1400459a8
add	rax, 1
mov	qword ptr [rcx + 0x10], rax
mov	rdx, qword ptr [rsp + 0x50]
mov	rcx, qword ptr [rsp + 0x38]
mov	dword ptr [rsp + 0x88], 0xffffffff
call	0x140020830
call	0x140020830
mov	r12d, eax
test	al, al
jne	0x14004547a
jne	0x14004547a
mov	rcx, qword ptr [rsp + 0x38]
call	0x1400208f0
call	0x1400208f0
mov	ebx, eax
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x140045819
je	0x140045819
cmp	byte ptr [rsi + 0x49], bl
jne	0x140045819
jne	0x140045819
test	r13d, r13d
je	0x140045ad4
je	0x140045ad4
movsx	edx, r13b
lea	rcx, [rsp + 0x98]
call	0x140073fa0
call	0x140073fa0
xor	r13d, r13d
jmp	0x140045887
jmp	0x140045887
nop	dword ptr [rax]
movzx	r15d, byte ptr [rsp + 0x6f]
jmp	0x140045887
jmp	0x140045887
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	dword ptr [rsp + 0x88], 0xffffffff
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x140045445
jmp	0x140045445
nop	dword ptr [rax]
sub	edx, 0x41
cmp	dl, 5
ja	0x1400456f0
ja	0x1400456f0
movsx	ebx, bl
sub	ebx, 0x37
jmp	0x1400453ea
jmp	0x1400453ea
nop	
mov	r12d, 8
jmp	0x1400451db
jmp	0x1400451db
nop	dword ptr [rax + rax]
lea	rcx, [rsp + 0x98]
mov	edx, 0x20
call	0x140073cf0
call	0x140073cf0
jmp	0x140045371
jmp	0x140045371
nop	word ptr [rax + rax]
mov	byte ptr [rsp + 0x6e], 0
xor	ebx, ebx
xor	r13d, r13d
xor	ebp, ebp
jmp	0x14004533b
jmp	0x14004533b
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x1400458a5
jmp	0x1400458a5
nop	dword ptr [rax + rax]
mov	rax, r14
mov	rdi, qword ptr [rsp + 0x120]
neg	rax
cmp	byte ptr [rsp + 0x6e], 0
cmove	rax, r14
mov	qword ptr [rdi], rax
jmp	0x1400454c0
jmp	0x1400454c0
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
jmp	0x140045732
jmp	0x140045732
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
mov	byte ptr [rsp + 0x28], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x28]
cmp	eax, -1
jne	0x140045636
jne	0x140045636
mov	qword ptr [rsp + 0x70], 0
mov	eax, edx
jmp	0x140045323
jmp	0x140045323
mov	byte ptr [rsp + 0x6e], 0
movzx	edx, byte ptr [rsi + 0x20]
jmp	0x140045276
jmp	0x140045276
xor	r13d, r13d
xor	ebp, ebp
jmp	0x140045331
jmp	0x140045331
nop	dword ptr [rax + rax]
xor	edi, edi
mov	ebp, 1
jmp	0x140045331
jmp	0x140045331
mov	edi, eax
mov	ebp, 1
jmp	0x14004533b
jmp	0x14004533b
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
je	0x140045ade
je	0x140045ade
cmp	eax, -1
sete	r12b
jmp	0x140045451
jmp	0x140045451
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebx, eax
cmp	eax, -1
jne	0x1400453c5
jne	0x1400453c5
cmp	qword ptr [rsp + 0x28], 0xa
mov	qword ptr [rsp + 0x80], 0
jbe	0x1400456f0
jbe	0x1400456f0
mov	ebx, 0xffffffff
mov	edx, 0xffffffff
jmp	0x14004560d
jmp	0x14004560d
nop	word ptr [rax + rax]
xor	edi, edi
jmp	0x14004547a
jmp	0x14004547a
mov	r12d, edi
xor	r14d, r14d
xor	edi, edi
jmp	0x14004547a
jmp	0x14004547a
mov	r12d, edi
xor	r14d, r14d
xor	r15d, r15d
xor	edi, edi
jmp	0x14004547a
jmp	0x14004547a
xor	r12d, r12d
mov	edi, eax
jmp	0x14004547a
jmp	0x14004547a
mov	qword ptr [rsp + 0x80], 0
jmp	0x140045a66
jmp	0x140045a66
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x98]
mov	rdx, qword ptr [rsp + 0x60]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	rbx, qword ptr [rsp + 0x100]
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	qword ptr [rsp + 0xe0], rcx
lea	rcx, [rbx + 0xd0]
movups	xmmword ptr [rsp + 0x70], xmm0
movups	xmmword ptr [rsp + 0x60], xmm1
call	0x14001d6e0
call	0x14001d6e0
mov	r13d, dword ptr [rbx + 0x18]
mov	rsi, rax
and	r13d, 0x4a
cmp	r13d, 0x40
je	0x1400462c0
je	0x1400462c0
mov	r12d, 0xa
cmp	r13d, 8
je	0x140045ea0
je	0x140045ea0
lea	rax, [rsp + 0x70]
lea	rdx, [rsp + 0x60]
mov	rcx, rax
mov	qword ptr [rsp + 0x40], rdx
mov	qword ptr [rsp + 0x30], rax
call	0x140020830
call	0x140020830
mov	edi, eax
test	al, al
jne	0x1400462f0
jne	0x1400462f0
mov	rcx, qword ptr [rsp + 0x30]
call	0x1400208f0
call	0x1400208f0
cmp	byte ptr [rsi + 0x6e], al
mov	ebx, eax
sete	byte ptr [rsp + 0x5f]
je	0x140045bcd
je	0x140045bcd
cmp	byte ptr [rsi + 0x6f], al
jne	0x140046370
jne	0x140046370
movzx	edx, byte ptr [rsi + 0x20]
test	dl, dl
jne	0x140045e90
jne	0x140045e90
cmp	byte ptr [rsi + 0x48], al
je	0x140045c1a
je	0x140045c1a
mov	rcx, qword ptr [rsp + 0x70]
call	0x140091a00
call	0x140091a00
mov	r15, qword ptr [rsp + 0x30]
mov	rdx, qword ptr [rsp + 0x40]
mov	dword ptr [rsp + 0x78], 0xffffffff
mov	rcx, r15
call	0x140020830
call	0x140020830
mov	edi, eax
test	al, al
jne	0x14004637e
jne	0x14004637e
mov	rcx, r15
call	0x1400208f0
call	0x1400208f0
movzx	edx, byte ptr [rsi + 0x20]
mov	ebx, eax
xor	r14d, r14d
xor	ebp, ebp
test	dl, dl
je	0x140045c2c
je	0x140045c2c
cmp	byte ptr [rsi + 0x49], bl
je	0x140046140
je	0x140046140
cmp	byte ptr [rsi + 0x48], bl
je	0x140046140
je	0x140046140
cmp	byte ptr [rsi + 0x72], bl
je	0x140045ef8
je	0x140045ef8
test	bpl, bpl
je	0x140046140
je	0x140046140
cmp	byte ptr [rsi + 0x70], bl
je	0x140045c55
je	0x140045c55
cmp	byte ptr [rsi + 0x71], bl
jne	0x140046390
jne	0x140046390
test	r13d, r13d
sete	al
cmp	r12d, 0x10
sete	dl
or	al, dl
je	0x14004639c
je	0x14004639c
xor	r14d, r14d
xor	ebp, ebp
mov	r12d, 0x10
mov	rdi, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
cmp	rax, rdx
jae	0x140045fe8
jae	0x140045fe8
add	rax, 1
mov	dword ptr [rsp + 0x78], 0xffffffff
mov	qword ptr [rdi + 0x10], rax
cmp	rax, rdx
jae	0x140046010
jae	0x140046010
xor	edi, edi
mov	rcx, qword ptr [rsp + 0x60]
cmp	dword ptr [rsp + 0x68], -1
sete	al
test	rcx, rcx
setne	dl
and	dl, al
jne	0x140045fa8
jne	0x140045fa8
cmp	al, dil
jne	0x140045f38
jne	0x140045f38
mov	edi, 1
cmp	r12d, 0x10
je	0x140045ed8
je	0x140045ed8
movsxd	rax, r12d
mov	r13d, r12d
mov	qword ptr [rsp + 0x20], rax
lea	rax, [rsp + 0x87]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x50], rax
call	0x140071d40
call	0x140071d40
cmp	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsp + 0x88], rax
jne	0x1400462d0
jne	0x1400462d0
movsxd	rcx, r13d
mov	rax, 0xffffffffffffffff
xor	edx, edx
div	rcx
mov	qword ptr [rsp + 0x38], rcx
mov	qword ptr [rsp + 0x28], rax
movzx	eax, byte ptr [rsi + 0x88]
mov	byte ptr [rsp + 0x5e], al
test	al, al
jne	0x140046150
jne	0x140046150
xor	r15d, r15d
test	dil, dil
jne	0x140046407
jne	0x140046407
lea	eax, [r12 + 0x30]
xor	r13d, r13d
mov	byte ptr [rsp + 0x30], al
cmp	qword ptr [rsp + 0x20], 0xa
ja	0x140045f80
ja	0x140045f80
cmp	bl, 0x2f
jle	0x140046060
jle	0x140046060
cmp	byte ptr [rsp + 0x30], bl
jle	0x140046060
jle	0x140046060
movsx	ebx, bl
sub	ebx, 0x30
cmp	qword ptr [rsp + 0x28], r13
jb	0x140045f70
jb	0x140045f70
mov	rax, qword ptr [rsp + 0x38]
movsxd	rbx, ebx
imul	r13, rax
add	rbx, r13
setb	al
mov	r13, rbx
add	r14d, 1
or	r15d, eax
mov	rbx, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x140046280
jae	0x140046280
add	rax, 1
mov	dword ptr [rsp + 0x78], 0xffffffff
mov	qword ptr [rbx + 0x10], rax
xor	r12d, r12d
cmp	rax, rdx
jae	0x1400463a8
jae	0x1400463a8
mov	rcx, qword ptr [rsp + 0x60]
cmp	dword ptr [rsp + 0x68], -1
sete	al
test	rcx, rcx
je	0x140045deb
je	0x140045deb
test	al, al
jne	0x140046108
jne	0x140046108
cmp	al, r12b
jne	0x140045fc0
jne	0x140045fc0
mov	r12d, 1
mov	rcx, qword ptr [rsp + 0x88]
cmp	qword ptr [rcx - 0x18], 0
jne	0x140046076
jne	0x140046076
nop	dword ptr [rax]
test	r14d, r14d
jne	0x1400460c0
jne	0x1400460c0
cmp	bpl, 1
je	0x1400460c0
je	0x1400460c0
mov	rax, qword ptr [rsp + 0x110]
mov	qword ptr [rax], 0
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
test	r12b, r12b
je	0x140045e50
je	0x140045e50
mov	rax, qword ptr [rsp + 0x108]
or	dword ptr [rax], 2
movdqu	xmm2, xmmword ptr [rsp + 0x70]
mov	rax, qword ptr [rsp + 0xe0]
sub	rcx, 0x18
mov	rdx, qword ptr [rsp + 0x50]
movups	xmmword ptr [rax], xmm2
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xe0]
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
cmp	byte ptr [rsi + 0x49], al
jne	0x140045bd9
jne	0x140045bd9
jmp	0x140045c1a
jmp	0x140045c1a
nop	
lea	rax, [rsp + 0x70]
lea	rdx, [rsp + 0x60]
mov	r12d, 0x10
mov	rcx, rax
mov	qword ptr [rsp + 0x40], rdx
mov	qword ptr [rsp + 0x30], rax
call	0x140020830
call	0x140020830
mov	edi, eax
test	al, al
je	0x140045bae
je	0x140045bae
mov	byte ptr [rsp + 0x5f], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
mov	qword ptr [rsp + 0x20], 0x16
mov	r13d, 0x10
mov	r12d, 0x16
jmp	0x140045ce4
jmp	0x140045ce4
nop	word ptr [rax + rax]
mov	eax, ebp
xor	eax, 1
cmp	r12d, 0xa
sete	dl
or	al, dl
je	0x140045c47
je	0x140045c47
cmp	r12d, 8
sete	bpl
test	r13d, r13d
sete	dl
or	bpl, dl
je	0x1400460f8
je	0x1400460f8
xor	r14d, r14d
mov	r12d, 8
jmp	0x140045c75
jmp	0x140045c75
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x70]
test	rcx, rcx
je	0x140046050
je	0x140046050
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140046035
jae	0x140046035
movzx	ebx, byte ptr [rax]
test	bpl, bpl
je	0x140046140
je	0x140046140
movzx	edx, byte ptr [rsi + 0x20]
jmp	0x140045c1f
jmp	0x140045c1f
nop	dword ptr [rax]
mov	r15d, 1
jmp	0x140045d9f
jmp	0x140045d9f
nop	dword ptr [rax + rax]
lea	eax, [rbx - 0x30]
mov	edx, ebx
cmp	al, 9
jbe	0x140045d72
jbe	0x140045d72
lea	eax, [rdx - 0x61]
cmp	al, 5
ja	0x1400462a0
ja	0x1400462a0
movsx	ebx, bl
sub	ebx, 0x57
jmp	0x140045d78
jmp	0x140045d78
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x18]
cmp	qword ptr [rcx + 0x10], rax
jae	0x140046348
jae	0x140046348
xor	eax, eax
jmp	0x140045cc1
jmp	0x140045cc1
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x70]
test	rcx, rcx
je	0x140046060
je	0x140046060
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400463c2
jae	0x1400463c2
movzx	ebx, byte ptr [rax]
jmp	0x140045d53
jmp	0x140045d53
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
mov	dword ptr [rsp + 0x78], 0xffffffff
cmp	rax, rdx
jb	0x140045ca4
jb	0x140045ca4
nop	word ptr [rax + rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x140045ca4
jne	0x140045ca4
mov	qword ptr [rsp + 0x70], 0
mov	edi, 1
jmp	0x140045ca6
jmp	0x140045ca6
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebx, eax
cmp	eax, -1
jne	0x140045f57
jne	0x140045f57
mov	qword ptr [rsp + 0x70], 0
nop	
mov	ebx, 0xffffffff
jmp	0x140045f57
jmp	0x140045f57
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x88]
xor	r12d, r12d
cmp	qword ptr [rcx - 0x18], 0
je	0x140045e10
je	0x140045e10
lea	rbx, [rsp + 0x88]
movsx	edx, r14b
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	r8, rbx
call	0x1400ae880
call	0x1400ae880
test	al, al
je	0x140046330
je	0x140046330
mov	rcx, qword ptr [rsp + 0x88]
test	r14d, r14d
jne	0x1400460c0
jne	0x1400460c0
cmp	bpl, 1
je	0x1400460c0
je	0x1400460c0
cmp	qword ptr [rcx - 0x18], 0
je	0x140045e23
je	0x140045e23
test	dil, dil
jne	0x140045e23
jne	0x140045e23
test	r15b, r15b
je	0x140046308
je	0x140046308
mov	rax, qword ptr [rsp + 0x110]
mov	qword ptr [rax], 0xffffffffffffffff
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
jmp	0x140045e40
jmp	0x140045e40
nop	dword ptr [rax]
add	r14d, 1
mov	ebp, eax
jmp	0x140045c75
jmp	0x140045c75
nop	dword ptr [rax + rax]
mov	rbx, qword ptr [rcx + 0x18]
xor	eax, eax
cmp	qword ptr [rcx + 0x10], rbx
jb	0x140045deb
jb	0x140045deb
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jne	0x140045deb
jne	0x140045deb
mov	qword ptr [rsp + 0x60], 0
jmp	0x140045deb
jmp	0x140045deb
nop	dword ptr [rax + rax]
xor	edi, edi
jmp	0x140045ccf
jmp	0x140045ccf
nop	word ptr [rax + rax]
test	dil, dil
jne	0x140046414
jne	0x140046414
lea	rax, [rsi + 0x72]
xor	r15d, r15d
xor	r13d, r13d
mov	qword ptr [rsp + 0x48], rax
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x140046179
je	0x140046179
cmp	byte ptr [rsi + 0x49], bl
je	0x140046239
je	0x140046239
mov	r8, qword ptr [rsp + 0x20]
cmp	byte ptr [rsi + 0x48], bl
sete	r12b
test	r8, r8
sete	al
or	r12b, al
jne	0x140046060
jne	0x140046060
movsx	edx, bl
mov	rbx, qword ptr [rsp + 0x48]
mov	rcx, rbx
call	0x140015988
call	0x140015988
test	rax, rax
je	0x140046400
je	0x140046400
sub	rax, rbx
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
cmp	qword ptr [rsp + 0x28], r13
jb	0x140046270
jb	0x140046270
mov	rcx, qword ptr [rsp + 0x38]
cdqe	
imul	r13, rcx
add	rax, r13
setb	dl
mov	r13, rax
add	r14d, 1
or	r15d, edx
mov	rcx, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140046265
jae	0x140046265
add	rax, 1
mov	qword ptr [rcx + 0x10], rax
mov	rdx, qword ptr [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0x30]
mov	dword ptr [rsp + 0x78], 0xffffffff
call	0x140020830
call	0x140020830
mov	r12d, eax
test	al, al
jne	0x140045dfa
jne	0x140045dfa
mov	rcx, qword ptr [rsp + 0x30]
call	0x1400208f0
call	0x1400208f0
mov	ebx, eax
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x140046179
je	0x140046179
cmp	byte ptr [rsi + 0x49], bl
jne	0x140046179
jne	0x140046179
test	r14d, r14d
je	0x140046424
je	0x140046424
movsx	edx, r14b
lea	rcx, [rsp + 0x88]
call	0x140073fa0
call	0x140073fa0
mov	rcx, qword ptr [rsp + 0x70]
xor	r14d, r14d
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jb	0x1400461ee
jb	0x1400461ee
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x1400461f6
jmp	0x1400461f6
nop	dword ptr [rax]
movzx	r15d, byte ptr [rsp + 0x5e]
jmp	0x1400461df
jmp	0x1400461df
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	dword ptr [rsp + 0x78], 0xffffffff
jmp	0x140045dc5
jmp	0x140045dc5
nop	
sub	edx, 0x41
cmp	dl, 5
ja	0x140046060
ja	0x140046060
movsx	ebx, bl
sub	ebx, 0x37
jmp	0x140045d78
jmp	0x140045d78
nop	word ptr [rax + rax]
mov	r12d, 8
jmp	0x140045b88
jmp	0x140045b88
nop	dword ptr [rax + rax]
lea	rcx, [rsp + 0x88]
mov	edx, 0x20
call	0x140073cf0
call	0x140073cf0
jmp	0x140045d0f
jmp	0x140045d0f
nop	word ptr [rax + rax]
mov	byte ptr [rsp + 0x5f], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
jmp	0x140045cd9
jmp	0x140045cd9
nop	dword ptr [rax]
mov	rax, r13
neg	rax
cmp	byte ptr [rsp + 0x5f], 0
cmovne	r13, rax
mov	rax, qword ptr [rsp + 0x110]
mov	qword ptr [rax], r13
jmp	0x140045e40
jmp	0x140045e40
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
jmp	0x1400460a2
jmp	0x1400460a2
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
mov	byte ptr [rsp + 0x20], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x20]
cmp	eax, -1
jne	0x140045fb6
jne	0x140045fb6
mov	qword ptr [rsp + 0x60], 0
mov	eax, edx
jmp	0x140045cc1
jmp	0x140045cc1
mov	byte ptr [rsp + 0x5f], 0
movzx	edx, byte ptr [rsi + 0x20]
jmp	0x140045c1a
jmp	0x140045c1a
xor	r14d, r14d
xor	ebp, ebp
jmp	0x140045ccf
jmp	0x140045ccf
nop	dword ptr [rax + rax]
xor	edi, edi
mov	ebp, 1
jmp	0x140045ccf
jmp	0x140045ccf
mov	edi, eax
mov	ebp, 1
jmp	0x140045cd9
jmp	0x140045cd9
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
je	0x14004642e
je	0x14004642e
cmp	eax, -1
sete	r12b
jmp	0x140045dd1
jmp	0x140045dd1
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebx, eax
cmp	eax, -1
jne	0x140045d53
jne	0x140045d53
mov	qword ptr [rsp + 0x70], 0
cmp	qword ptr [rsp + 0x20], 0xa
jbe	0x140046060
jbe	0x140046060
mov	ebx, 0xffffffff
mov	edx, 0xffffffff
jmp	0x140045f8d
jmp	0x140045f8d
nop	word ptr [rax + rax]
xor	edi, edi
jmp	0x140045dfa
jmp	0x140045dfa
mov	r12d, edi
xor	r13d, r13d
xor	edi, edi
jmp	0x140045dfa
jmp	0x140045dfa
mov	r12d, edi
xor	r13d, r13d
xor	r15d, r15d
xor	edi, edi
jmp	0x140045dfa
jmp	0x140045dfa
xor	r12d, r12d
mov	edi, eax
jmp	0x140045dfa
jmp	0x140045dfa
mov	qword ptr [rsp + 0x70], 0
jmp	0x1400463b6
jmp	0x1400463b6
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x88]
mov	rdx, qword ptr [rsp + 0x50]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x78
mov	rax, qword ptr [rsp + 0xe0]
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	rbx, qword ptr [rsp + 0xf0]
mov	qword ptr [rsp + 0xc0], rcx
lea	rcx, [rax + 0xd0]
movups	xmmword ptr [rsp + 0x50], xmm0
movups	xmmword ptr [rsp + 0x40], xmm1
call	0x14001d6e0
call	0x14001d6e0
lea	rdx, [rsp + 0x40]
mov	rbp, rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rdx
mov	rcx, rax
mov	qword ptr [rsp + 0x28], rax
call	0x140020830
call	0x140020830
mov	r14d, eax
test	al, al
je	0x140046cb0
je	0x140046cb0
xor	esi, esi
xor	r13d, r13d
xor	r12d, r12d
nop	word ptr [rax + rax]
lea	rax, [rsp + 0x67]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x38], rax
call	0x140071d40
call	0x140071d40
cmp	byte ptr [rbp + 0x20], 0
mov	qword ptr [rsp + 0x68], rax
jne	0x140046c90
jne	0x140046c90
movzx	r15d, byte ptr [rbp + 0x88]
test	r15b, r15b
jne	0x1400466b8
jne	0x1400466b8
test	r14b, r14b
jne	0x140046fd5
jne	0x140046fd5
mov	byte ptr [rsp + 0x26], 0
mov	rdi, qword ptr [rip + 0x78105]
mov	byte ptr [rsp + 0x27], 0
lea	eax, [rsi - 0x30]
cmp	al, 9
ja	0x140046615
ja	0x140046615
mov	rax, qword ptr [rbx]
mov	r14, qword ptr [rax - 0x18]
lea	r12, [r14 + 1]
cmp	qword ptr [rax - 0x10], r12
jb	0x140046566
jb	0x140046566
mov	r10d, dword ptr [rdi]
test	r10d, r10d
jne	0x140046a08
jne	0x140046a08
mov	r9d, dword ptr [rax - 8]
test	r9d, r9d
setg	al
test	al, al
je	0x140046571
je	0x140046571
mov	rdx, r12
mov	rcx, rbx
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], sil
mov	rax, qword ptr [rbx]
mov	qword ptr [rax - 0x18], r12
mov	r12d, 1
mov	dword ptr [rax - 8], 0
mov	byte ptr [rax + r14 + 1], 0
mov	rsi, qword ptr [rsp + 0x50]
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, qword ptr [rsi + 0x18]
cmp	rax, rdx
jae	0x140046a90
jae	0x140046a90
add	rax, 1
mov	dword ptr [rsp + 0x58], 0xffffffff
xor	r14d, r14d
mov	qword ptr [rsi + 0x10], rax
cmp	rax, rdx
jae	0x140046ab8
jae	0x140046ab8
mov	rcx, qword ptr [rsp + 0x40]
cmp	dword ptr [rsp + 0x48], -1
sete	al
test	rcx, rcx
je	0x1400465e2
je	0x1400465e2
test	al, al
jne	0x140046a18
jne	0x140046a18
cmp	al, r14b
je	0x1400467c8
je	0x1400467c8
mov	rcx, qword ptr [rsp + 0x50]
test	rcx, rcx
je	0x140046af0
je	0x140046af0
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140046ad6
jae	0x140046ad6
movzx	esi, byte ptr [rax]
lea	eax, [rsi - 0x30]
cmp	al, 9
jbe	0x14004653b
jbe	0x14004653b
cmp	byte ptr [rbp + 0x48], sil
je	0x140046aff
je	0x140046aff
nop	
cmp	byte ptr [rbp + 0x80], sil
je	0x140046636
je	0x140046636
cmp	byte ptr [rbp + 0x86], sil
jne	0x1400467c8
jne	0x1400467c8
movzx	eax, byte ptr [rsp + 0x26]
xor	eax, 1
and	r12b, al
je	0x1400467c8
je	0x1400467c8
mov	edx, 0x65
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	rcx, qword ptr [rsp + 0x50]
call	0x140091a00
call	0x140091a00
mov	rdx, qword ptr [rsp + 0x30]
mov	rcx, qword ptr [rsp + 0x28]
mov	dword ptr [rsp + 0x58], 0xffffffff
call	0x140020830
call	0x140020830
test	al, al
jne	0x140046f8a
jne	0x140046f8a
mov	rcx, qword ptr [rsp + 0x28]
call	0x1400208f0
call	0x1400208f0
mov	esi, eax
cmp	byte ptr [rbp + 0x6f], al
je	0x140046f80
je	0x140046f80
mov	edx, 0x2d
cmp	al, byte ptr [rbp + 0x6e]
jne	0x140046ed0
jne	0x140046ed0
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	byte ptr [rsp + 0x26], r12b
jmp	0x140046596
jmp	0x140046596
nop	word ptr [rax + rax]
test	r14b, r14b
jne	0x140046fd5
jne	0x140046fd5
mov	byte ptr [rsp + 0x26], 0
movzx	eax, byte ptr [rbp + 0x20]
lea	r14, [rbp + 0x72]
mov	byte ptr [rsp + 0x27], 0
nop	dword ptr [rax + rax]
test	al, al
je	0x1400466e6
je	0x1400466e6
cmp	byte ptr [rbp + 0x49], sil
je	0x140046a50
je	0x140046a50
cmp	byte ptr [rbp + 0x48], sil
je	0x140046860
je	0x140046860
movsx	edx, sil
mov	r8d, 0xa
mov	rcx, r14
call	0x140015988
call	0x140015988
mov	rdi, rax
test	rax, rax
je	0x140046920
je	0x140046920
mov	rax, qword ptr [rbx]
mov	r12, qword ptr [rax - 0x18]
lea	rsi, [r12 + 1]
cmp	qword ptr [rax - 0x10], rsi
jb	0x14004673d
jb	0x14004673d
mov	rcx, qword ptr [rip + 0x77f09]
mov	edx, dword ptr [rcx]
test	edx, edx
jne	0x140046c40
jne	0x140046c40
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
test	al, al
je	0x140046748
je	0x140046748
mov	rdx, rsi
mov	rcx, rbx
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rbx]
sub	rdi, r14
add	r13d, 1
add	edi, 0x30
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], dil
mov	rax, qword ptr [rbx]
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rsi
mov	byte ptr [rax + r12 + 1], 0
mov	r12d, r15d
mov	rsi, qword ptr [rsp + 0x50]
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, qword ptr [rsi + 0x18]
cmp	rax, rdx
jae	0x140046b60
jae	0x140046b60
add	rax, 1
mov	dword ptr [rsp + 0x58], 0xffffffff
xor	edi, edi
mov	qword ptr [rsi + 0x10], rax
cmp	rax, rdx
jae	0x140046b88
jae	0x140046b88
mov	rcx, qword ptr [rsp + 0x40]
cmp	dword ptr [rsp + 0x48], -1
sete	al
test	rcx, rcx
je	0x1400467bf
je	0x1400467bf
test	al, al
jne	0x140046b30
jne	0x140046b30
cmp	dil, al
jne	0x1400468f0
jne	0x1400468f0
mov	rax, qword ptr [rsp + 0x68]
cmp	qword ptr [rax - 0x18], 0
mov	rbx, rax
je	0x140046825
je	0x140046825
cmp	byte ptr [rsp + 0x27], 0
jne	0x140046c80
jne	0x140046c80
cmp	byte ptr [rsp + 0x26], 0
jne	0x140046c80
jne	0x140046c80
lea	rdi, [rsp + 0x68]
movsx	edx, r13b
mov	rcx, rdi
call	0x140073fa0
call	0x140073fa0
mov	rbx, qword ptr [rsp + 0x68]
mov	rdx, qword ptr [rbp + 0x18]
mov	rcx, qword ptr [rbp + 0x10]
mov	r8, rdi
call	0x1400ae880
call	0x1400ae880
test	al, al
jne	0x140046825
jne	0x140046825
mov	rax, qword ptr [rsp + 0xe8]
mov	dword ptr [rax], 4
movdqu	xmm2, xmmword ptr [rsp + 0x50]
mov	rax, qword ptr [rsp + 0xc0]
lea	rcx, [rbx - 0x18]
mov	rdx, qword ptr [rsp + 0x38]
movups	xmmword ptr [rax], xmm2
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xc0]
add	rsp, 0x78
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
movzx	ecx, byte ptr [rsp + 0x27]
or	byte ptr [rsp + 0x26], cl
mov	rax, qword ptr [rsp + 0x68]
mov	rdx, qword ptr [rax - 0x18]
jne	0x140046f8f
jne	0x140046f8f
test	rdx, rdx
je	0x14004688e
je	0x14004688e
lea	rdi, [rsp + 0x68]
movsx	edx, r13b
mov	rcx, rdi
call	0x140073fa0
call	0x140073fa0
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
lea	rsi, [rdx + 1]
cmp	qword ptr [rax - 0x10], rsi
jb	0x1400468b9
jb	0x1400468b9
mov	rdi, qword ptr [rip + 0x77d8a]
mov	r8d, dword ptr [rdi]
test	r8d, r8d
jne	0x140046c50
jne	0x140046c50
mov	ecx, dword ptr [rax - 8]
test	ecx, ecx
jle	0x1400468cb
jle	0x1400468cb
mov	rdx, rsi
mov	rcx, rbx
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], 0x2e
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x27], r15b
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rsi
mov	byte ptr [rax + rsi], 0
jmp	0x140046774
jmp	0x140046774
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x50]
test	rcx, rcx
je	0x140046bb0
je	0x140046bb0
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140046fea
jae	0x140046fea
movzx	esi, byte ptr [rax]
movzx	eax, byte ptr [rbp + 0x20]
jmp	0x1400466d8
jmp	0x1400466d8
nop	dword ptr [rax + rax]
cmp	byte ptr [rbp + 0x80], sil
je	0x140046936
je	0x140046936
cmp	byte ptr [rbp + 0x86], sil
jne	0x1400467c8
jne	0x1400467c8
movzx	edx, byte ptr [rsp + 0x26]
mov	rax, qword ptr [rsp + 0x68]
xor	edx, 1
mov	rcx, qword ptr [rax - 0x18]
and	r12b, dl
je	0x1400467cd
je	0x1400467cd
test	rcx, rcx
je	0x140046960
je	0x140046960
cmp	byte ptr [rsp + 0x27], 0
je	0x140046c20
je	0x140046c20
mov	edx, 0x65
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	rcx, qword ptr [rsp + 0x50]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140046ec0
jae	0x140046ec0
add	rax, 1
mov	qword ptr [rcx + 0x10], rax
mov	rdx, qword ptr [rsp + 0x30]
mov	rcx, qword ptr [rsp + 0x28]
mov	dword ptr [rsp + 0x58], 0xffffffff
call	0x140020830
call	0x140020830
test	al, al
jne	0x140046f8a
jne	0x140046f8a
mov	esi, dword ptr [rsp + 0x58]
mov	rcx, qword ptr [rsp + 0x50]
cmp	esi, -1
jne	0x1400469be
jne	0x1400469be
test	rcx, rcx
jne	0x140046c60
jne	0x140046c60
movzx	edx, byte ptr [rbp + 0x6f]
movzx	eax, byte ptr [rbp + 0x20]
cmp	dl, sil
je	0x140046bc0
je	0x140046bc0
cmp	byte ptr [rbp + 0x6e], sil
jne	0x140046c10
jne	0x140046c10
test	al, al
jne	0x140046be0
jne	0x140046be0
cmp	byte ptr [rbp + 0x48], sil
je	0x140046f70
je	0x140046f70
mov	edx, 0x2d
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	byte ptr [rsp + 0x26], r12b
jmp	0x140046774
jmp	0x140046774
nop	word ptr [rax + rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
jmp	0x140046562
jmp	0x140046562
nop	dword ptr [rax]
mov	rsi, qword ptr [rcx + 0x18]
xor	eax, eax
cmp	qword ptr [rcx + 0x10], rsi
jb	0x1400465e2
jb	0x1400465e2
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jne	0x1400465e2
jne	0x1400465e2
mov	qword ptr [rsp + 0x40], 0
jmp	0x1400465e2
jmp	0x1400465e2
nop	dword ptr [rax + rax]
movzx	edi, byte ptr [rsp + 0x26]
or	byte ptr [rsp + 0x27], dil
jne	0x140046f8a
jne	0x140046f8a
test	r13d, r13d
je	0x140047009
je	0x140047009
lea	rdi, [rsp + 0x68]
movsx	edx, r13b
mov	rcx, rdi
call	0x140073fa0
call	0x140073fa0
mov	byte ptr [rsp + 0x26], 0
xor	r13d, r13d
jmp	0x140046774
jmp	0x140046774
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, qword ptr [rsi + 0x18]
mov	dword ptr [rsp + 0x58], 0xffffffff
xor	r14d, r14d
cmp	rax, rdx
jb	0x1400465c8
jb	0x1400465c8
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
je	0x14004705b
je	0x14004705b
cmp	eax, -1
sete	r14b
jmp	0x1400465c8
jmp	0x1400465c8
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	esi, eax
cmp	eax, -1
jne	0x140046530
jne	0x140046530
mov	qword ptr [rsp + 0x50], 0
mov	esi, 0xffffffff
cmp	byte ptr [rbp + 0x48], sil
jne	0x140046620
jne	0x140046620
movzx	eax, byte ptr [rsp + 0x27]
or	al, byte ptr [rsp + 0x26]
jne	0x140046620
jne	0x140046620
mov	edx, 0x2e
mov	rcx, rbx
mov	byte ptr [rsp + 0x27], 1
call	0x140073fa0
call	0x140073fa0
mov	byte ptr [rsp + 0x26], 0
jmp	0x140046596
jmp	0x140046596
nop	word ptr [rax + rax]
mov	rsi, qword ptr [rcx + 0x18]
xor	eax, eax
cmp	qword ptr [rcx + 0x10], rsi
jb	0x1400467bf
jb	0x1400467bf
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jne	0x1400467bf
jne	0x1400467bf
mov	qword ptr [rsp + 0x40], 0
jmp	0x1400467bf
jmp	0x1400467bf
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, qword ptr [rsi + 0x18]
mov	dword ptr [rsp + 0x58], 0xffffffff
xor	edi, edi
cmp	rax, rdx
jb	0x1400467a5
jb	0x1400467a5
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
je	0x140047069
je	0x140047069
cmp	eax, -1
sete	dil
jmp	0x1400467a5
jmp	0x1400467a5
nop	word ptr cs:[rax + rax]
mov	esi, 0xffffffff
jmp	0x14004690f
jmp	0x14004690f
nop	word ptr [rax + rax]
test	al, al
jne	0x140046be0
jne	0x140046be0
cmp	sil, byte ptr [rbp + 0x48]
je	0x140046f70
je	0x140046f70
mov	edx, 0x2b
jmp	0x1400469f0
jmp	0x1400469f0
nop	dword ptr [rax + rax]
cmp	byte ptr [rbp + 0x49], sil
je	0x140046eb0
je	0x140046eb0
cmp	byte ptr [rbp + 0x48], sil
je	0x140046eb0
je	0x140046eb0
cmp	dl, sil
setne	dl
movzx	edx, dl
lea	edx, [rdx + rdx + 0x2b]
jmp	0x1400469f0
jmp	0x1400469f0
nop	word ptr cs:[rax + rax]
mov	byte ptr [rsp + 0x26], r12b
jmp	0x1400466d8
jmp	0x1400466d8
nop	word ptr [rax + rax]
lea	rdi, [rsp + 0x68]
movsx	edx, r13b
mov	rcx, rdi
call	0x140073fa0
call	0x140073fa0
jmp	0x140046960
jmp	0x140046960
nop	word ptr cs:[rax + rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
jmp	0x140046739
jmp	0x140046739
nop	dword ptr [rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x1400468b9
jg	0x1400468b9
jmp	0x1400468c4
jmp	0x1400468c4
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140047027
jae	0x140047027
movzx	esi, byte ptr [rax]
jmp	0x1400469be
jmp	0x1400469be
nop	word ptr cs:[rax + rax]
lea	rdi, [rsp + 0x68]
jmp	0x140046803
jmp	0x140046803
nop	word ptr [rax + rax]
lea	rdi, [rsp + 0x68]
mov	edx, 0x20
mov	rcx, rdi
call	0x140073cf0
call	0x140073cf0
jmp	0x140046505
jmp	0x140046505
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x28]
call	0x1400208f0
call	0x1400208f0
movzx	edx, byte ptr [rbp + 0x20]
movzx	ecx, byte ptr [rbp + 0x6f]
mov	esi, eax
mov	r8d, edx
cmp	cl, al
je	0x140046fa7
je	0x140046fa7
cmp	byte ptr [rbp + 0x6e], al
je	0x140046f02
je	0x140046f02
mov	r15, qword ptr [rip + 0x77951]
xor	r12d, r12d
xor	r13d, r13d
test	dl, dl
je	0x140046cf3
je	0x140046cf3
cmp	byte ptr [rbp + 0x49], sil
je	0x1400464e0
je	0x1400464e0
cmp	byte ptr [rbp + 0x48], sil
je	0x1400464e0
je	0x1400464e0
cmp	byte ptr [rbp + 0x72], sil
jne	0x1400464e0
jne	0x1400464e0
test	r12b, r12b
je	0x140046d78
je	0x140046d78
mov	rdi, qword ptr [rsp + 0x50]
add	r13d, 1
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
cmp	rax, rdx
jae	0x140046e20
jae	0x140046e20
add	rax, 1
mov	dword ptr [rsp + 0x58], 0xffffffff
mov	qword ptr [rdi + 0x10], rax
cmp	rax, rdx
jae	0x140046e48
jae	0x140046e48
xor	edi, edi
mov	rcx, qword ptr [rsp + 0x40]
cmp	dword ptr [rsp + 0x48], -1
sete	al
test	rcx, rcx
setne	dl
and	dl, al
jne	0x140046e08
jne	0x140046e08
cmp	al, dil
jne	0x140046dd8
jne	0x140046dd8
mov	r12d, 1
mov	r14d, 1
jmp	0x1400464e0
jmp	0x1400464e0
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	r12, qword ptr [rax - 0x18]
lea	rdi, [r12 + 1]
cmp	qword ptr [rax - 0x10], rdi
jb	0x140046dc7
jb	0x140046dc7
mov	edx, dword ptr [r15]
test	edx, edx
jne	0x140046ea0
jne	0x140046ea0
mov	r11d, dword ptr [rax - 8]
test	r11d, r11d
setg	al
test	al, al
jne	0x140046dc7
jne	0x140046dc7
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], 0x30
mov	rax, qword ptr [rbx]
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rdi
mov	byte ptr [rax + r12 + 1], 0
jmp	0x140046d0c
jmp	0x140046d0c
mov	rdx, rdi
mov	rcx, rbx
call	0x140073cf0
call	0x140073cf0
jmp	0x140046da3
jmp	0x140046da3
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x50]
test	rcx, rcx
je	0x140046e90
je	0x140046e90
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140046e6d
jae	0x140046e6d
movzx	esi, byte ptr [rax]
movzx	edx, byte ptr [rbp + 0x20]
mov	r12d, 1
jmp	0x140046ce5
jmp	0x140046ce5
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x18]
cmp	qword ptr [rcx + 0x10], rax
jae	0x140046eda
jae	0x140046eda
xor	eax, eax
jmp	0x140046d5c
jmp	0x140046d5c
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
mov	dword ptr [rsp + 0x58], 0xffffffff
cmp	rax, rdx
jb	0x140046d3f
jb	0x140046d3f
nop	word ptr [rax + rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x140046d3f
jne	0x140046d3f
mov	qword ptr [rsp + 0x50], 0
mov	edi, 1
jmp	0x140046d41
jmp	0x140046d41
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	esi, eax
cmp	eax, -1
jne	0x140046df3
jne	0x140046df3
mov	qword ptr [rsp + 0x50], 0
nop	word ptr [rax + rax]
mov	esi, 0xffffffff
jmp	0x140046df3
jmp	0x140046df3
nop	word ptr [rax + rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
jmp	0x140046d9f
jmp	0x140046d9f
nop	dword ptr [rax]
mov	byte ptr [rsp + 0x26], r12b
jmp	0x1400466dc
jmp	0x1400466dc
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140046988
jmp	0x140046988
nop	dword ptr [rax + rax]
mov	byte ptr [rsp + 0x26], r12b
jmp	0x140046530
jmp	0x140046530
mov	rax, qword ptr [rcx]
mov	byte ptr [rsp + 0x26], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x26]
cmp	eax, -1
jne	0x140046e16
jne	0x140046e16
mov	qword ptr [rsp + 0x40], 0
mov	eax, edx
jmp	0x140046d5c
jmp	0x140046d5c
test	dl, dl
je	0x140046fc2
je	0x140046fc2
cmp	byte ptr [rbp + 0x49], al
je	0x140046f61
je	0x140046f61
cmp	byte ptr [rbp + 0x48], al
je	0x140046f61
je	0x140046f61
cmp	cl, al
setne	cl
movzx	ecx, cl
lea	ecx, [rcx + rcx + 0x2b]
mov	edx, ecx
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	rcx, qword ptr [rsp + 0x50]
call	0x140091a00
call	0x140091a00
mov	rdx, qword ptr [rsp + 0x30]
mov	rcx, qword ptr [rsp + 0x28]
mov	dword ptr [rsp + 0x58], 0xffffffff
call	0x140020830
call	0x140020830
test	al, al
je	0x140047046
je	0x140047046
xor	r12d, r12d
mov	r14d, eax
xor	r13d, r13d
jmp	0x1400464e0
jmp	0x1400464e0
mov	edx, r8d
jmp	0x140046cd8
jmp	0x140046cd8
nop	dword ptr [rax]
mov	byte ptr [rsp + 0x26], r12b
jmp	0x1400466e6
jmp	0x1400466e6
nop	word ptr [rax + rax]
mov	edx, 0x2b
jmp	0x1400466a0
jmp	0x1400466a0
mov	rax, qword ptr [rsp + 0x68]
cmp	qword ptr [rax - 0x18], 0
mov	rbx, rax
lea	rdi, [rsp + 0x68]
jne	0x140046803
jne	0x140046803
jmp	0x140046825
jmp	0x140046825
test	dl, dl
jne	0x140046f0a
jne	0x140046f0a
mov	ecx, 0x2b
cmp	byte ptr [rbp + 0x48], al
jne	0x140046f20
jne	0x140046f20
jmp	0x140046cd8
jmp	0x140046cd8
mov	ecx, 0x2d
cmp	byte ptr [rbp + 0x48], al
jne	0x140046f20
jne	0x140046f20
jmp	0x140046cd8
jmp	0x140046cd8
mov	rbx, qword ptr [rsp + 0x68]
cmp	qword ptr [rbx - 0x18], 0
jne	0x1400467ed
jne	0x1400467ed
jmp	0x140046825
jmp	0x140046825
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	esi, eax
cmp	eax, -1
jne	0x14004690f
jne	0x14004690f
mov	qword ptr [rsp + 0x50], 0
jmp	0x14004690f
jmp	0x14004690f
mov	rax, qword ptr [rbx]
xor	r9d, r9d
xor	edx, edx
mov	rcx, rbx
mov	r8, qword ptr [rax - 0x18]
call	0x140073e00
call	0x140073e00
mov	byte ptr [rsp + 0x26], 0
jmp	0x1400467c8
jmp	0x1400467c8
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	esi, eax
cmp	eax, -1
jne	0x1400469be
jne	0x1400469be
mov	qword ptr [rsp + 0x50], 0
jmp	0x1400469be
jmp	0x1400469be
mov	rcx, qword ptr [rsp + 0x28]
call	0x1400208f0
call	0x1400208f0
movzx	edx, byte ptr [rbp + 0x20]
mov	esi, eax
jmp	0x140046cd8
jmp	0x140046cd8
mov	qword ptr [rsp + 0x50], 0
jmp	0x140046aca
jmp	0x140046aca
mov	qword ptr [rsp + 0x50], 0
jmp	0x140046b9a
jmp	0x140046b9a
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x68]
mov	rdx, qword ptr [rsp + 0x38]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x88
lea	r11, [rip + 0x64e]
mov	rax, qword ptr [rdx]
mov	r10, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rdi, qword ptr [rsp + 0xd0]
mov	rax, qword ptr [rax + 0x60]
mov	r8, qword ptr [r9]
mov	r9, qword ptr [r9 + 8]
mov	rsi, rcx
cmp	rax, r11
jne	0x140047180
jne	0x140047180
mov	ebp, dword ptr [rdi + 0x18]
lea	rcx, [rsp + 0x60]
mov	eax, ebp
and	eax, 0xffffffb5
or	eax, 8
mov	dword ptr [rdi + 0x18], eax
mov	rax, qword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0x40], r8
lea	r8, [rsp + 0x78]
mov	qword ptr [rsp + 0x30], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x20], rdi
mov	qword ptr [rsp + 0x48], r9
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x58], rbx
mov	qword ptr [rsp + 0x50], r10
call	0x140045b20
call	0x140045b20
mov	rax, qword ptr [rsp + 0x60]
movabs	rcx, 0xffffffff00000000
and	rbx, rcx
mov	qword ptr [rsp + 0x60], rax
mov	rdx, rax
mov	eax, dword ptr [rsp + 0x68]
mov	dword ptr [rdi + 0x18], ebp
mov	rdi, qword ptr [rsp + 0xe0]
or	rbx, rax
mov	rax, qword ptr [rsp + 0x78]
mov	qword ptr [rsi], rdx
mov	qword ptr [rsi + 8], rbx
mov	qword ptr [rdi], rax
mov	rax, rsi
add	rsp, 0x88
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0xe0]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], r9
lea	r9, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, rsi
mov	qword ptr [rsp + 0x68], rbx
mov	qword ptr [rsp + 0x20], rdi
call	rax
call	rax
mov	rax, rsi
add	rsp, 0x88
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x68
lea	rsi, [rip + 0xfd3]
mov	rax, qword ptr [rdx]
movdqu	xmm0, xmmword ptr [r8]
mov	r10, qword ptr [r9]
mov	r11, qword ptr [r9 + 8]
mov	rax, qword ptr [rax + 0x28]
mov	r8, qword ptr [rsp + 0xa8]
mov	r9, qword ptr [rsp + 0xb0]
mov	rbx, rcx
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r9
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
mov	qword ptr [rsp + 0x40], r10
mov	qword ptr [rsp + 0x48], r11
movups	xmmword ptr [rsp + 0x50], xmm0
cmp	rax, rsi
jne	0x140047420
jne	0x140047420
call	0x140042c60
call	0x140042c60
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x68
lea	rsi, [rip + 0xfb3]
mov	rax, qword ptr [rdx]
movdqu	xmm0, xmmword ptr [r8]
mov	r10, qword ptr [r9]
mov	r11, qword ptr [r9 + 8]
mov	rax, qword ptr [rax + 0x18]
mov	r8, qword ptr [rsp + 0xa8]
mov	r9, qword ptr [rsp + 0xb0]
mov	rbx, rcx
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r9
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
mov	qword ptr [rsp + 0x40], r10
mov	qword ptr [rsp + 0x48], r11
movups	xmmword ptr [rsp + 0x50], xmm0
cmp	rax, rsi
jne	0x1400474b0
jne	0x1400474b0
call	0x1400435a0
call	0x1400435a0
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x68
lea	rsi, [rip + 0xf93]
mov	rax, qword ptr [rdx]
movdqu	xmm0, xmmword ptr [r8]
mov	r10, qword ptr [r9]
mov	r11, qword ptr [r9 + 8]
mov	rax, qword ptr [rax + 0x30]
mov	r8, qword ptr [rsp + 0xa8]
mov	r9, qword ptr [rsp + 0xb0]
mov	rbx, rcx
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r9
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
mov	qword ptr [rsp + 0x40], r10
mov	qword ptr [rsp + 0x48], r11
movups	xmmword ptr [rsp + 0x50], xmm0
cmp	rax, rsi
jne	0x140047540
jne	0x140047540
call	0x140043ee0
call	0x140043ee0
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x68
lea	rsi, [rip + 0xf73]
mov	rax, qword ptr [rdx]
movdqu	xmm0, xmmword ptr [r8]
mov	r10, qword ptr [r9]
mov	r11, qword ptr [r9 + 8]
mov	rax, qword ptr [rax + 0x20]
mov	r8, qword ptr [rsp + 0xa8]
mov	r9, qword ptr [rsp + 0xb0]
mov	rbx, rcx
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r9
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
mov	qword ptr [rsp + 0x40], r10
mov	qword ptr [rsp + 0x48], r11
movups	xmmword ptr [rsp + 0x50], xmm0
cmp	rax, rsi
jne	0x1400475d0
jne	0x1400475d0
call	0x140044820
call	0x140044820
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x68
lea	rsi, [rip + 0xf53]
mov	rax, qword ptr [rdx]
movdqu	xmm0, xmmword ptr [r8]
mov	r10, qword ptr [r9]
mov	r11, qword ptr [r9 + 8]
mov	rax, qword ptr [rax + 0x38]
mov	r8, qword ptr [rsp + 0xa8]
mov	r9, qword ptr [rsp + 0xb0]
mov	rbx, rcx
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r9
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
mov	qword ptr [rsp + 0x40], r10
mov	qword ptr [rsp + 0x48], r11
movups	xmmword ptr [rsp + 0x50], xmm0
cmp	rax, rsi
jne	0x140047660
jne	0x140047660
call	0x140045170
call	0x140045170
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x68
lea	rsi, [rip + 0xf33]
mov	rax, qword ptr [rdx]
movdqu	xmm0, xmmword ptr [r8]
mov	r10, qword ptr [r9]
mov	r11, qword ptr [r9 + 8]
mov	rax, qword ptr [rax + 0x40]
mov	r8, qword ptr [rsp + 0xa8]
mov	r9, qword ptr [rsp + 0xb0]
mov	rbx, rcx
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r9
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
mov	qword ptr [rsp + 0x40], r10
mov	qword ptr [rsp + 0x48], r11
movups	xmmword ptr [rsp + 0x50], xmm0
cmp	rax, rsi
jne	0x1400476f0
jne	0x1400476f0
call	0x140045b20
call	0x140045b20
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x88
mov	rdi, qword ptr [rsp + 0xd0]
mov	r10, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	r8, qword ptr [r9]
mov	ebp, dword ptr [rdi + 0x18]
mov	r9, qword ptr [r9 + 8]
mov	eax, ebp
mov	rsi, rcx
lea	rcx, [rsp + 0x60]
and	eax, 0xffffffb5
or	eax, 8
mov	dword ptr [rdi + 0x18], eax
lea	rax, [rsp + 0x78]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0x20], rdi
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x40], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x48], r9
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x58], rbx
mov	qword ptr [rsp + 0x50], r10
call	0x140045b20
call	0x140045b20
mov	rax, qword ptr [rsp + 0x60]
movabs	rcx, 0xffffffff00000000
and	rbx, rcx
mov	rcx, qword ptr [rsp + 0x78]
mov	qword ptr [rsp + 0x60], rax
mov	rdx, rax
mov	eax, dword ptr [rsp + 0x68]
mov	dword ptr [rdi + 0x18], ebp
or	rbx, rax
mov	rax, qword ptr [rsp + 0xe0]
mov	qword ptr [rsi], rdx
mov	qword ptr [rsi + 8], rbx
mov	qword ptr [rax], rcx
mov	rax, rsi
add	rsp, 0x88
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xb8
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
mov	r8, qword ptr [r9]
mov	r9, qword ptr [r9 + 8]
mov	r13, rcx
mov	rcx, qword ptr [rsp + 0x120]
mov	qword ptr [rsp + 0x90], r10
mov	qword ptr [rsp + 0x98], r11
mov	qword ptr [rsp + 0x80], r8
mov	qword ptr [rsp + 0x88], r9
test	byte ptr [rcx + 0x18], 1
jne	0x1400478d0
jne	0x1400478d0
mov	rdi, qword ptr [rsp + 0x128]
mov	qword ptr [rsp + 0x50], r8
lea	rax, [rsp + 0x70]
lea	r8, [rsp + 0xac]
mov	qword ptr [rsp + 0x30], r8
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rax
mov	qword ptr [rsp + 0x28], rdi
mov	qword ptr [rsp + 0x58], r9
lea	r9, [rsp + 0x50]
mov	dword ptr [rsp + 0xac], 0xffffffff
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x68], r11
call	0x1400435a0
call	0x1400435a0
mov	rax, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x70], rax
mov	qword ptr [rsp + 0x90], rax
mov	eax, dword ptr [rsp + 0x78]
mov	dword ptr [rsp + 0x98], eax
mov	eax, dword ptr [rsp + 0xac]
cmp	eax, 1
ja	0x140047a58
ja	0x140047a58
mov	rdx, qword ptr [rsp + 0x130]
mov	byte ptr [rdx], al
and	byte ptr [rdx], 1
movdqu	xmm0, xmmword ptr [rsp + 0x90]
mov	rax, r13
movups	xmmword ptr [r13], xmm0
add	rsp, 0xb8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
add	rcx, 0xd0
call	0x14001d6e0
call	0x14001d6e0
mov	r14, rax
mov	rax, qword ptr [rax + 0x40]
mov	rdx, qword ptr [r14 + 0x30]
test	rax, rax
sete	r12b
test	rdx, rdx
sete	r9b
or	rax, rdx
je	0x140047c39
je	0x140047c39
cmp	dword ptr [rsp + 0x88], -1
mov	edx, 1
mov	qword ptr [rsp + 0x100], r13
mov	edi, 1
sete	r10b
xor	r8d, r8d
mov	r13, r14
mov	ebp, dword ptr [rsp + 0x98]
mov	rbx, qword ptr [rsp + 0x90]
mov	r15d, edx
mov	r14, r8
jmp	0x140047964
jmp	0x140047964
nop	dword ptr [rax]
cmp	r14, qword ptr [r13 + 0x40]
setae	r12b
test	r15b, r15b
jne	0x140047a3c
jne	0x140047a3c
mov	eax, r12d
mov	r9d, edi
mov	ebp, 0xffffffff
test	al, al
jne	0x140047cb0
jne	0x140047cb0
cmp	ebp, -1
sete	r8b
test	rbx, rbx
setne	sil
and	sil, r8b
jne	0x140047b20
jne	0x140047b20
mov	esi, r8d
mov	rcx, qword ptr [rsp + 0x80]
test	rcx, rcx
setne	al
and	al, r10b
mov	ebx, eax
jne	0x140047aa0
jne	0x140047aa0
mov	ebx, r10d
cmp	sil, bl
je	0x140047ac0
je	0x140047ac0
mov	rcx, qword ptr [rsp + 0x90]
test	rcx, rcx
je	0x1400479b9
je	0x1400479b9
test	r8b, r8b
jne	0x140047b38
jne	0x140047b38
test	r12b, r12b
jne	0x1400479ca
jne	0x1400479ca
mov	rax, qword ptr [r13 + 0x38]
cmp	byte ptr [rax + r14], bpl
sete	dil
mov	eax, edi
xor	eax, 1
test	al, r9b
jne	0x140047c20
jne	0x140047c20
test	r9b, r9b
jne	0x1400479e9
jne	0x1400479e9
mov	rax, qword ptr [r13 + 0x28]
cmp	byte ptr [rax + r14], bpl
sete	r15b
mov	esi, r15d
xor	esi, 1
and	sil, r12b
jne	0x140047c50
jne	0x140047c50
mov	ebp, edi
or	bpl, r15b
je	0x140047bf8
je	0x140047bf8
mov	rbx, qword ptr [rsp + 0x90]
add	r14, 1
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140047b50
jae	0x140047b50
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
mov	dword ptr [rsp + 0x98], 0xffffffff
test	dil, dil
jne	0x140047940
jne	0x140047940
mov	r12d, ebp
cmp	r14, qword ptr [r13 + 0x30]
mov	eax, r12d
mov	r15d, ebp
setae	r9b
and	eax, r9d
jmp	0x140047957
jmp	0x140047957
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x130]
lea	rdx, [rsp + 0x80]
lea	rcx, [rsp + 0x90]
mov	byte ptr [rax], 1
mov	rax, qword ptr [rsp + 0x128]
mov	dword ptr [rax], 4
call	0x140020830
call	0x140020830
test	al, al
je	0x1400478a5
je	0x1400478a5
mov	rax, qword ptr [rsp + 0x128]
or	dword ptr [rax], 2
jmp	0x1400478a5
jmp	0x1400478a5
nop	
mov	rax, qword ptr [rcx + 0x18]
cmp	qword ptr [rcx + 0x10], rax
jae	0x140047bb0
jae	0x140047bb0
xor	ebx, ebx
cmp	sil, bl
jne	0x1400479a3
jne	0x1400479a3
nop	dword ptr [rax]
mov	r8, r14
mov	r14, r13
mov	edx, r15d
mov	esi, 1
mov	r13, qword ptr [rsp + 0x100]
test	dil, dil
je	0x140047ae5
je	0x140047ae5
cmp	qword ptr [r14 + 0x40], r8
je	0x140047c73
je	0x140047c73
test	dl, dl
je	0x140047af8
je	0x140047af8
cmp	qword ptr [r14 + 0x30], r8
jne	0x140047af8
jne	0x140047af8
test	r8, r8
jne	0x140047d08
jne	0x140047d08
mov	rax, qword ptr [rsp + 0x130]
mov	byte ptr [rax], 0
test	sil, sil
je	0x140047c0b
je	0x140047c0b
mov	rax, qword ptr [rsp + 0x128]
mov	dword ptr [rax], 6
jmp	0x1400478a5
jmp	0x1400478a5
nop	
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x140047b70
jae	0x140047b70
xor	esi, esi
jmp	0x14004797e
jmp	0x14004797e
nop	dword ptr [rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140047cd0
jae	0x140047cd0
movzx	ebp, byte ptr [rax]
jmp	0x1400479b9
jmp	0x1400479b9
nop	
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x4d], r10b
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
movzx	r10d, byte ptr [rsp + 0x4d]
jmp	0x140047a25
jmp	0x140047a25
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x4f], r9b
mov	rcx, rbx
mov	byte ptr [rsp + 0x4e], r10b
mov	byte ptr [rsp + 0x4d], r8b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, byte ptr [rsp + 0x4d]
movzx	r10d, byte ptr [rsp + 0x4e]
cmp	eax, -1
movzx	r9d, byte ptr [rsp + 0x4f]
jne	0x140047b2a
jne	0x140047b2a
mov	qword ptr [rsp + 0x90], 0
jmp	0x14004797e
jmp	0x14004797e
mov	rax, qword ptr [rcx]
mov	byte ptr [rsp + 0x4f], r9b
mov	byte ptr [rsp + 0x4e], r10b
mov	byte ptr [rsp + 0x4d], r8b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, byte ptr [rsp + 0x4d]
movzx	r10d, byte ptr [rsp + 0x4e]
cmp	eax, -1
movzx	r9d, byte ptr [rsp + 0x4f]
jne	0x140047aae
jne	0x140047aae
mov	qword ptr [rsp + 0x80], 0
jmp	0x14004799a
jmp	0x14004799a
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x130]
mov	r13, qword ptr [rsp + 0x100]
mov	byte ptr [rax], 0
mov	rax, qword ptr [rsp + 0x128]
mov	dword ptr [rax], 4
jmp	0x1400478a5
jmp	0x1400478a5
nop	
mov	r8, r14
xor	esi, esi
mov	r14, r13
mov	r13, qword ptr [rsp + 0x100]
test	r15b, r15b
jne	0x140047ae9
jne	0x140047ae9
mov	rax, qword ptr [rsp + 0x130]
mov	byte ptr [rax], 0
jmp	0x140047c0b
jmp	0x140047c0b
nop	word ptr cs:[rax + rax]
mov	r8, r14
mov	r14, r13
mov	r13, qword ptr [rsp + 0x100]
test	dil, dil
je	0x140047c39
je	0x140047c39
xor	esi, esi
cmp	r8, qword ptr [r14 + 0x40]
jne	0x140047af8
jne	0x140047af8
xor	edx, edx
xor	esi, esi
test	r8, r8
je	0x140047af8
je	0x140047af8
mov	rax, qword ptr [rsp + 0x130]
mov	byte ptr [rax], 0
test	dl, dl
je	0x140047c98
je	0x140047c98
cmp	qword ptr [r14 + 0x30], r8
je	0x140047c0b
je	0x140047c0b
nop	dword ptr [rax]
mov	rdx, qword ptr [rsp + 0x128]
movzx	eax, sil
add	eax, eax
mov	dword ptr [rdx], eax
jmp	0x1400478a5
jmp	0x1400478a5
nop	dword ptr [rax]
mov	r8, r14
mov	edx, r15d
mov	r14, r13
mov	r13, qword ptr [rsp + 0x100]
jmp	0x140047ad6
jmp	0x140047ad6
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rcx]
mov	byte ptr [rsp + 0x4e], r9b
mov	byte ptr [rsp + 0x4d], r10b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r10d, byte ptr [rsp + 0x4d]
movzx	r9d, byte ptr [rsp + 0x4e]
cmp	eax, -1
mov	ebp, eax
jne	0x1400479b9
jne	0x1400479b9
mov	qword ptr [rsp + 0x90], 0
jmp	0x1400479b9
jmp	0x1400479b9
mov	rax, qword ptr [rsp + 0x130]
mov	byte ptr [rax], 1
jmp	0x140047c98
jmp	0x140047c98
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	r12, qword ptr [r9]
mov	r14, qword ptr [r9 + 8]
lea	r13, [rsp + 0x88]
mov	rsi, rcx
mov	rdi, rdx
xor	ecx, ecx
xor	edx, edx
mov	r8, r13
lea	rbp, [rsp + 0x80]
call	0x140071d40
call	0x140071d40
mov	edx, 0x20
mov	rcx, rbp
mov	qword ptr [rsp + 0x80], rax
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rsp + 0x108]
mov	qword ptr [rsp + 0x30], rbp
lea	rcx, [rsp + 0x70]
mov	rdx, rdi
lea	r9, [rsp + 0x50]
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x60], r15
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x100]
mov	qword ptr [rsp + 0x68], rbx
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x50], r12
mov	qword ptr [rsp + 0x58], r14
call	0x140046460
call	0x140046460
mov	rbp, qword ptr [rsp + 0x78]
mov	rdi, qword ptr [rsp + 0x70]
movabs	rdx, 0xffffffff00000000
and	rbx, rdx
mov	eax, ebp
mov	qword ptr [rsp + 0x70], rdi
mov	r15, rdi
mov	qword ptr [rsp + 0x78], rbp
or	rbx, rax
call	0x14009baf0
call	0x14009baf0
mov	r8, qword ptr [rsp + 0x108]
mov	rdx, qword ptr [rsp + 0x110]
mov	r9, r13
mov	qword ptr [rsp + 0x88], rax
mov	rcx, qword ptr [rsp + 0x80]
call	0x1400acd60
call	0x1400acd60
cmp	ebp, -1
sete	bpl
test	rdi, rdi
setne	al
and	al, bpl
mov	byte ptr [rsp + 0x4f], al
jne	0x140047ee0
jne	0x140047ee0
cmp	r14d, -1
sete	al
test	r12, r12
je	0x140047e42
je	0x140047e42
test	al, al
jne	0x140047eb8
jne	0x140047eb8
cmp	al, bpl
jne	0x140047e52
jne	0x140047e52
mov	rax, qword ptr [rsp + 0x108]
or	dword ptr [rax], 2
mov	rax, qword ptr [rip + 0x767d7]
mov	qword ptr [rsi], r15
mov	qword ptr [rsi + 8], rbx
mov	rcx, qword ptr [rsp + 0x80]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140047e98
jne	0x140047e98
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140047ea6
jle	0x140047ea6
mov	rax, rsi
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140047e7b
jg	0x140047e7b
sub	rcx, 0x18
mov	rdx, r13
call	0x140072480
call	0x140072480
jmp	0x140047e7b
jmp	0x140047e7b
nop	dword ptr [rax]
mov	rdi, qword ptr [r12 + 0x18]
xor	eax, eax
cmp	qword ptr [r12 + 0x10], rdi
jb	0x140047e42
jb	0x140047e42
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jmp	0x140047e42
jmp	0x140047e42
nop	
mov	rax, qword ptr [rdi + 0x18]
xor	ebp, ebp
cmp	qword ptr [rdi + 0x10], rax
jb	0x140047e32
jb	0x140047e32
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
movzx	eax, byte ptr [rsp + 0x4f]
mov	r15d, 0
cmovne	r15, rdi
cmove	ebp, eax
jmp	0x140047e32
jmp	0x140047e32
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x80]
mov	rdx, r13
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	r12, qword ptr [r9]
mov	r14, qword ptr [r9 + 8]
lea	r13, [rsp + 0x88]
mov	rsi, rcx
mov	rdi, rdx
xor	ecx, ecx
xor	edx, edx
mov	r8, r13
lea	rbp, [rsp + 0x80]
call	0x140071d40
call	0x140071d40
mov	edx, 0x20
mov	rcx, rbp
mov	qword ptr [rsp + 0x80], rax
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rsp + 0x108]
mov	qword ptr [rsp + 0x30], rbp
lea	rcx, [rsp + 0x70]
mov	rdx, rdi
lea	r9, [rsp + 0x50]
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x60], r15
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x100]
mov	qword ptr [rsp + 0x68], rbx
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x50], r12
mov	qword ptr [rsp + 0x58], r14
call	0x140046460
call	0x140046460
mov	rbp, qword ptr [rsp + 0x78]
mov	rdi, qword ptr [rsp + 0x70]
movabs	rdx, 0xffffffff00000000
and	rbx, rdx
mov	eax, ebp
mov	qword ptr [rsp + 0x70], rdi
mov	r15, rdi
mov	qword ptr [rsp + 0x78], rbp
or	rbx, rax
call	0x14009baf0
call	0x14009baf0
mov	r8, qword ptr [rsp + 0x108]
mov	rdx, qword ptr [rsp + 0x110]
mov	r9, r13
mov	qword ptr [rsp + 0x88], rax
mov	rcx, qword ptr [rsp + 0x80]
call	0x1400ace20
call	0x1400ace20
cmp	ebp, -1
sete	bpl
test	rdi, rdi
setne	al
and	al, bpl
mov	byte ptr [rsp + 0x4f], al
jne	0x140048100
jne	0x140048100
cmp	r14d, -1
sete	al
test	r12, r12
je	0x140048062
je	0x140048062
test	al, al
jne	0x1400480d8
jne	0x1400480d8
cmp	al, bpl
jne	0x140048072
jne	0x140048072
mov	rax, qword ptr [rsp + 0x108]
or	dword ptr [rax], 2
mov	rax, qword ptr [rip + 0x765b7]
mov	qword ptr [rsi], r15
mov	qword ptr [rsi + 8], rbx
mov	rcx, qword ptr [rsp + 0x80]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400480b8
jne	0x1400480b8
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x1400480c6
jle	0x1400480c6
mov	rax, rsi
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14004809b
jg	0x14004809b
sub	rcx, 0x18
mov	rdx, r13
call	0x140072480
call	0x140072480
jmp	0x14004809b
jmp	0x14004809b
nop	dword ptr [rax]
mov	rdi, qword ptr [r12 + 0x18]
xor	eax, eax
cmp	qword ptr [r12 + 0x10], rdi
jb	0x140048062
jb	0x140048062
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jmp	0x140048062
jmp	0x140048062
nop	
mov	rax, qword ptr [rdi + 0x18]
xor	ebp, ebp
cmp	qword ptr [rdi + 0x10], rax
jb	0x140048052
jb	0x140048052
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
movzx	eax, byte ptr [rsp + 0x4f]
mov	r15d, 0
cmovne	r15, rdi
cmove	ebp, eax
jmp	0x140048052
jmp	0x140048052
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x80]
mov	rdx, r13
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	r12, qword ptr [r9]
mov	r14, qword ptr [r9 + 8]
lea	r13, [rsp + 0x88]
mov	rsi, rcx
mov	rdi, rdx
xor	ecx, ecx
xor	edx, edx
mov	r8, r13
lea	rbp, [rsp + 0x80]
call	0x140071d40
call	0x140071d40
mov	edx, 0x20
mov	rcx, rbp
mov	qword ptr [rsp + 0x80], rax
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rsp + 0x108]
mov	qword ptr [rsp + 0x30], rbp
lea	rcx, [rsp + 0x70]
mov	rdx, rdi
lea	r9, [rsp + 0x50]
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x60], r15
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x100]
mov	qword ptr [rsp + 0x68], rbx
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x50], r12
mov	qword ptr [rsp + 0x58], r14
call	0x140046460
call	0x140046460
mov	rbp, qword ptr [rsp + 0x78]
mov	rdi, qword ptr [rsp + 0x70]
movabs	rdx, 0xffffffff00000000
and	rbx, rdx
mov	eax, ebp
mov	qword ptr [rsp + 0x70], rdi
mov	r15, rdi
mov	qword ptr [rsp + 0x78], rbp
or	rbx, rax
call	0x14009baf0
call	0x14009baf0
mov	r8, qword ptr [rsp + 0x108]
mov	rdx, qword ptr [rsp + 0x110]
mov	r9, r13
mov	qword ptr [rsp + 0x88], rax
mov	rcx, qword ptr [rsp + 0x80]
call	0x1400acf00
call	0x1400acf00
cmp	ebp, -1
sete	bpl
test	rdi, rdi
setne	al
and	al, bpl
mov	byte ptr [rsp + 0x4f], al
jne	0x140048320
jne	0x140048320
cmp	r14d, -1
sete	al
test	r12, r12
je	0x140048282
je	0x140048282
test	al, al
jne	0x1400482f8
jne	0x1400482f8
cmp	al, bpl
jne	0x140048292
jne	0x140048292
mov	rax, qword ptr [rsp + 0x108]
or	dword ptr [rax], 2
mov	rax, qword ptr [rip + 0x76397]
mov	qword ptr [rsi], r15
mov	qword ptr [rsi + 8], rbx
mov	rcx, qword ptr [rsp + 0x80]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400482d8
jne	0x1400482d8
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x1400482e6
jle	0x1400482e6
mov	rax, rsi
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x1400482bb
jg	0x1400482bb
sub	rcx, 0x18
mov	rdx, r13
call	0x140072480
call	0x140072480
jmp	0x1400482bb
jmp	0x1400482bb
nop	dword ptr [rax]
mov	rdi, qword ptr [r12 + 0x18]
xor	eax, eax
cmp	qword ptr [r12 + 0x10], rdi
jb	0x140048282
jb	0x140048282
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jmp	0x140048282
jmp	0x140048282
nop	
mov	rax, qword ptr [rdi + 0x18]
xor	ebp, ebp
cmp	qword ptr [rdi + 0x10], rax
jb	0x140048272
jb	0x140048272
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
movzx	eax, byte ptr [rsp + 0x4f]
mov	r15d, 0
cmovne	r15, rdi
cmove	ebp, eax
jmp	0x140048272
jmp	0x140048272
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x80]
mov	rdx, r13
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0xa0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x98]
mov	rbx, rcx
lea	r9, [rsp + 0x40]
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x50], r10
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x58], r11
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x40], xmm0
call	0x140042c60
call	0x140042c60
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0xa0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x98]
mov	rbx, rcx
lea	r9, [rsp + 0x40]
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x50], r10
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x58], r11
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x40], xmm0
call	0x1400435a0
call	0x1400435a0
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0xa0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x98]
mov	rbx, rcx
lea	r9, [rsp + 0x40]
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x50], r10
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x58], r11
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x40], xmm0
call	0x140043ee0
call	0x140043ee0
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0xa0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x98]
mov	rbx, rcx
lea	r9, [rsp + 0x40]
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x50], r10
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x58], r11
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x40], xmm0
call	0x140044820
call	0x140044820
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0xa0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x98]
mov	rbx, rcx
lea	r9, [rsp + 0x40]
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x50], r10
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x58], r11
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x40], xmm0
call	0x140045170
call	0x140045170
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0xa0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x98]
mov	rbx, rcx
lea	r9, [rsp + 0x40]
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x50], r10
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x58], r11
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x40], xmm0
call	0x140045b20
call	0x140045b20
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	rax, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [rsp + 0x100]
mov	r12, qword ptr [r8]
mov	r15, qword ptr [r9 + 8]
mov	rbx, r12
mov	qword ptr [rsp + 0xe0], rcx
lea	rcx, [rip + 0x6edd5]
mov	qword ptr [rsp + 0x60], rax
mov	word ptr [rsp + 0x38], ax
mov	qword ptr [rsp + 0x30], rbp
call	0x140022a70
call	0x140022a70
mov	rdi, rax
mov	rax, qword ptr [r13 + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	r14, [rax + rdi*8]
mov	rsi, qword ptr [r14]
test	rsi, rsi
je	0x1400490a8
je	0x1400490a8
mov	r8d, dword ptr [r13 + 0x18]
mov	r13d, 8
and	r8d, 0x4a
cmp	r8d, 0x40
je	0x1400486b4
je	0x1400486b4
cmp	r8d, 8
mov	r13d, 0xa
mov	eax, 0x10
cmove	r13d, eax
cmp	word ptr [rsp + 0x38], -1
sete	dl
test	r12, r12
setne	r14b
and	r14b, dl
jne	0x140049163
jne	0x140049163
mov	r14d, edx
cmp	r15w, -1
sete	r12b
test	rbp, rbp
setne	dil
and	dil, r12b
jne	0x140049191
jne	0x140049191
mov	edi, r12d
cmp	r14b, dil
je	0x14004901a
je	0x14004901a
test	rbx, rbx
je	0x140048702
je	0x140048702
test	dl, dl
jne	0x14004907e
jne	0x14004907e
movzx	edi, word ptr [rsp + 0x38]
movzx	eax, word ptr [rsi + 0x94]
movzx	ecx, byte ptr [rsi + 0x20]
cmp	ax, di
je	0x1400489e8
je	0x1400489e8
mov	byte ptr [rsp + 0x6f], 0
cmp	word ptr [rsi + 0x96], di
je	0x1400489e8
je	0x1400489e8
movzx	r9d, word ptr [rsp + 0x38]
xor	r14d, r14d
xor	ebp, ebp
xor	r15d, r15d
test	cl, cl
je	0x140048749
je	0x140048749
cmp	word ptr [rsi + 0x4a], di
je	0x140048b60
je	0x140048b60
cmp	word ptr [rsi + 0x48], di
je	0x140048b60
je	0x140048b60
cmp	word ptr [rsi + 0x9c], di
je	0x140048a90
je	0x140048a90
test	bpl, bpl
je	0x140048b60
je	0x140048b60
cmp	word ptr [rsi + 0x98], di
je	0x14004877f
je	0x14004877f
cmp	word ptr [rsi + 0x9a], di
jne	0x1400491c1
jne	0x1400491c1
test	r8d, r8d
sete	al
cmp	r13d, 0x10
sete	dl
or	al, dl
je	0x1400491fc
je	0x1400491fc
xor	r14d, r14d
xor	ebp, ebp
mov	r13d, 0x10
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x140048ad8
jae	0x140048ad8
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x140048b00
jae	0x140048b00
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	r9b
cmp	qword ptr [rsp + 0x30], 0
setne	dl
and	dl, r12b
jne	0x140048bec
jne	0x140048bec
mov	edx, r12d
cmp	dl, r9b
jne	0x140048b20
jne	0x140048b20
mov	r9d, 0xffffffff
mov	byte ptr [rsp + 0x3c], 1
movzx	ecx, byte ptr [rsi + 0x20]
mov	word ptr [rsp + 0x38], r9w
cmp	r13d, 0x10
je	0x140048b75
je	0x140048b75
movsxd	rax, r13d
mov	dword ptr [rsp + 0x48], r13d
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0x70]
mov	byte ptr [rsp + 0x80], 0
mov	qword ptr [rsp + 0x58], rax
lea	rax, [rsp + 0x80]
mov	qword ptr [rsp + 0x50], rax
mov	qword ptr [rsp + 0x70], rax
mov	qword ptr [rsp + 0x78], 0
test	cl, cl
jne	0x140049006
jne	0x140049006
mov	eax, 0xffffffff
xor	edx, edx
div	r13d
mov	dword ptr [rsp + 0x68], eax
movzx	eax, byte ptr [rsi + 0xc8]
mov	byte ptr [rsp + 0x6c], al
test	al, al
jne	0x140048d78
jne	0x140048d78
cmp	byte ptr [rsp + 0x3c], 0
mov	byte ptr [rsp + 0x6e], 0
jne	0x1400492e5
jne	0x1400492e5
movzx	eax, word ptr [rsp + 0x48]
xor	r15d, r15d
add	eax, 0x30
mov	word ptr [rsp + 0x6c], ax
cmp	qword ptr [rsp + 0x40], 0xa
ja	0x140048b90
ja	0x140048b90
cmp	di, 0x2f
jbe	0x140048c50
jbe	0x140048c50
cmp	di, word ptr [rsp + 0x6c]
jae	0x140048c50
jae	0x140048c50
sub	edi, 0x30
cmp	dword ptr [rsp + 0x68], r15d
jb	0x140048bc0
jb	0x140048bc0
mov	eax, r15d
mov	rdx, qword ptr [rbx + 0x18]
imul	eax, r13d
add	edi, eax
setb	al
or	byte ptr [rsp + 0x6e], al
mov	rax, qword ptr [rbx + 0x10]
mov	r15d, edi
add	r14d, 1
cmp	rax, rdx
jae	0x140048bd6
jae	0x140048bd6
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x140049248
jae	0x140049248
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	byte ptr [rsp + 0x38]
cmp	qword ptr [rsp + 0x30], 0
setne	dil
and	dil, r12b
jne	0x140048d23
jne	0x140048d23
mov	edi, r12d
cmp	dil, byte ptr [rsp + 0x38]
jne	0x140048c20
jne	0x140048c20
mov	edx, 0xffffffff
mov	byte ptr [rsp + 0x6c], 1
mov	rdi, qword ptr [rsp + 0x78]
mov	word ptr [rsp + 0x38], dx
mov	rcx, qword ptr [rsp + 0x70]
mov	rax, rcx
test	rdi, rdi
jne	0x140048c6b
jne	0x140048c6b
nop	dword ptr [rax + rax]
cmp	bpl, 1
je	0x140048cda
je	0x140048cda
test	r14d, r14d
jne	0x140048cda
jne	0x140048cda
mov	rax, qword ptr [rsp + 0x110]
mov	dword ptr [rax], 0
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x6c], 0
je	0x1400489a1
je	0x1400489a1
mov	rax, qword ptr [rsp + 0x108]
or	dword ptr [rax], 2
mov	rsi, qword ptr [rsp + 0xe0]
mov	rax, qword ptr [rsp + 0x60]
mov	ax, word ptr [rsp + 0x38]
mov	qword ptr [rsi], rbx
mov	qword ptr [rsi + 8], rax
mov	rax, qword ptr [rsp + 0x50]
cmp	rcx, rax
je	0x1400489c9
je	0x1400489c9
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0xe0]
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
cmp	ax, di
sete	byte ptr [rsp + 0x6f]
test	cl, cl
jne	0x140049034
jne	0x140049034
cmp	word ptr [rsi + 0x48], di
je	0x14004872d
je	0x14004872d
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004934c
jae	0x14004934c
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x140049282
jae	0x140049282
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	r14b
cmp	qword ptr [rsp + 0x30], 0
setne	bpl
and	bpl, r12b
jne	0x140049315
jne	0x140049315
mov	ebp, r12d
cmp	r14b, bpl
je	0x1400492a0
je	0x1400492a0
test	rbx, rbx
je	0x1400492bd
je	0x1400492bd
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140049418
jae	0x140049418
movzx	edi, word ptr [rax]
xor	eax, eax
mov	r10d, 0xffffffff
cmp	di, -1
movzx	ecx, byte ptr [rsi + 0x20]
mov	word ptr [rsp + 0x38], r10w
cmove	rbx, rax
jmp	0x14004872d
jmp	0x14004872d
mov	eax, ebp
xor	eax, 1
cmp	r13d, 0xa
sete	dl
or	al, dl
je	0x140048769
je	0x140048769
cmp	r13d, 8
sete	bpl
test	r8d, r8d
sete	dl
or	bpl, dl
je	0x140048d18
je	0x140048d18
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
xor	r14d, r14d
mov	r13d, 8
cmp	rax, rdx
jb	0x1400487b0
jb	0x1400487b0
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	r8d, dword ptr [rsp + 0x38]
cmp	rax, rdx
jb	0x1400487c1
jb	0x1400487c1
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
jmp	0x1400487c4
jmp	0x1400487c4
nop	dword ptr [rax + rax]
mov	edi, 0xffff
test	rbx, rbx
je	0x140048b45
je	0x140048b45
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140049256
jae	0x140049256
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
movzx	ecx, byte ptr [rsi + 0x20]
mov	r9d, 0xffffffff
test	bpl, bpl
jne	0x14004873b
jne	0x14004873b
nop	dword ptr [rax + rax]
mov	word ptr [rsp + 0x38], r9w
mov	byte ptr [rsp + 0x3c], 0
cmp	r13d, 0x10
jne	0x140048812
jne	0x140048812
mov	qword ptr [rsp + 0x40], 0x16
mov	dword ptr [rsp + 0x48], 0x16
jmp	0x14004881f
jmp	0x14004881f
nop	dword ptr [rax + rax]
lea	eax, [rdi - 0x30]
cmp	ax, 9
jbe	0x1400488b6
jbe	0x1400488b6
lea	eax, [rdi - 0x61]
cmp	ax, 5
ja	0x140048d60
ja	0x140048d60
sub	edi, 0x57
cmp	dword ptr [rsp + 0x68], r15d
jae	0x1400488c4
jae	0x1400488c4
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x6e], 1
cmp	rax, rdx
jb	0x1400488ec
jb	0x1400488ec
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x1400488f4
jmp	0x1400488f4
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140049135
jae	0x140049135
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x30]
cmovne	edx, r15d
mov	qword ptr [rsp + 0x30], rax
jmp	0x1400487ea
jmp	0x1400487ea
nop	
test	rbx, rbx
je	0x140048fc8
je	0x140048fc8
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140049271
jae	0x140049271
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
jmp	0x140048fcd
jmp	0x140048fcd
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x70]
mov	rdi, qword ptr [rsp + 0x78]
mov	byte ptr [rsp + 0x6c], 0
mov	rax, rcx
test	rdi, rdi
je	0x140048960
je	0x140048960
mov	rcx, qword ptr [rsp + 0x50]
mov	r13d, r14d
lea	r12, [rdi + 1]
cmp	rax, rcx
je	0x14004922e
je	0x14004922e
mov	rdx, qword ptr [rsp + 0x80]
cmp	rdx, r12
jb	0x1400491d6
jb	0x1400491d6
mov	byte ptr [rax + rdi], r13b
mov	rax, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x78], r12
mov	r8, qword ptr [rsp + 0x58]
mov	byte ptr [rax + rdi + 1], 0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
call	0x1400ae850
call	0x1400ae850
test	al, al
je	0x14004906b
je	0x14004906b
test	r14d, r14d
jne	0x140048cd5
jne	0x140048cd5
cmp	bpl, 1
je	0x140048cd5
je	0x140048cd5
cmp	qword ptr [rsp + 0x78], 0
je	0x14004940a
je	0x14004940a
mov	rcx, qword ptr [rsp + 0x70]
cmp	byte ptr [rsp + 0x3c], 0
jne	0x140048973
jne	0x140048973
cmp	byte ptr [rsp + 0x6e], 0
je	0x14004904d
je	0x14004904d
mov	rax, qword ptr [rsp + 0x110]
mov	dword ptr [rax], 0xffffffff
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
jmp	0x14004898f
jmp	0x14004898f
nop	dword ptr [rax]
add	r14d, 1
mov	ebp, eax
jmp	0x14004879f
jmp	0x14004879f
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140049238
jae	0x140049238
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rsp + 0x30], rax
jmp	0x140048928
jmp	0x140048928
nop	word ptr [rax + rax]
lea	eax, [rdi - 0x41]
cmp	ax, 5
ja	0x140048c50
ja	0x140048c50
sub	edi, 0x37
jmp	0x1400488b9
jmp	0x1400488b9
nop	dword ptr [rax]
cmp	byte ptr [rsp + 0x3c], 0
jne	0x14004936c
jne	0x14004936c
lea	rax, [rsi + 0x9c]
mov	byte ptr [rsp + 0x6e], 0
xor	r15d, r15d
mov	qword ptr [rsp + 0x48], rax
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x140048db2
je	0x140048db2
cmp	word ptr [rsi + 0x4a], di
je	0x140048f20
je	0x140048f20
mov	rcx, qword ptr [rsp + 0x40]
cmp	word ptr [rsi + 0x48], di
sete	al
test	rcx, rcx
sete	dl
or	al, dl
jne	0x140048c50
jne	0x140048c50
mov	rax, qword ptr [rsp + 0x48]
mov	rdx, rcx
jmp	0x140048dee
jmp	0x140048dee
nop	word ptr cs:[rax + rax]
add	rax, 2
sub	rdx, 1
je	0x140048f00
je	0x140048f00
cmp	di, word ptr [rax]
jne	0x140048de0
jne	0x140048de0
mov	rcx, qword ptr [rsp + 0x48]
sub	rax, rcx
sar	rax, 1
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
cmp	dword ptr [rsp + 0x68], r15d
jb	0x140048e98
jb	0x140048e98
mov	edx, r15d
imul	edx, r13d
add	eax, edx
setb	dl
or	byte ptr [rsp + 0x6e], dl
mov	r15d, eax
add	r14d, 1
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x140048eae
jae	0x140048eae
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x140049220
jae	0x140049220
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	byte ptr [rsp + 0x38]
cmp	qword ptr [rsp + 0x30], 0
setne	dil
and	dil, r12b
jne	0x140048f7d
jne	0x140048f7d
mov	edi, r12d
cmp	dil, byte ptr [rsp + 0x38]
jne	0x140048ec8
jne	0x140048ec8
mov	eax, 0xffffffff
mov	rdi, qword ptr [rsp + 0x78]
mov	rcx, qword ptr [rsp + 0x70]
mov	word ptr [rsp + 0x38], ax
jmp	0x14004894c
jmp	0x14004894c
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rsp + 0x6c]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x6e], al
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rdx
jb	0x140048e36
jb	0x140048e36
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x140048e3e
jmp	0x140048e3e
nop	dword ptr [rax]
test	rbx, rbx
je	0x140048fb8
je	0x140048fb8
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140049305
jae	0x140049305
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
mov	ecx, 0xffffffff
mov	word ptr [rsp + 0x38], cx
jmp	0x140048da0
jmp	0x140048da0
nop	dword ptr [rax + rax]
mov	rdi, qword ptr [rsp + 0x78]
mov	rcx, qword ptr [rsp + 0x70]
mov	byte ptr [rsp + 0x3c], 0
mov	byte ptr [rsp + 0x6c], 0
jmp	0x14004894c
jmp	0x14004894c
nop	dword ptr [rax]
mov	rdx, qword ptr [rsp + 0x70]
mov	rdi, qword ptr [rsp + 0x78]
mov	rcx, rdx
test	r14d, r14d
je	0x1400492d7
je	0x1400492d7
mov	rax, qword ptr [rsp + 0x50]
mov	byte ptr [rsp + 0x38], r14b
lea	r14, [rdi + 1]
cmp	rdx, rax
je	0x14004909e
je	0x14004909e
mov	rax, qword ptr [rsp + 0x80]
cmp	rax, r14
jb	0x140048fe0
jb	0x140048fe0
movzx	eax, byte ptr [rsp + 0x38]
mov	byte ptr [rdx + rdi], al
mov	rax, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x78], r14
mov	byte ptr [rax + r14], 0
xor	r14d, r14d
jmp	0x140048e29
jmp	0x140048e29
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140049210
jae	0x140049210
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rsp + 0x30], rax
jmp	0x140048e72
jmp	0x140048e72
nop	dword ptr [rax]
mov	edi, 0xffffffff
jmp	0x140048eec
jmp	0x140048eec
nop	word ptr [rax + rax]
mov	edi, 0xffff
mov	r8d, 0xffffffff
mov	word ptr [rsp + 0x38], r8w
jmp	0x140048895
jmp	0x140048895
nop	
mov	rcx, qword ptr [rsp + 0x58]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rdx, qword ptr [rsp + 0x70]
jmp	0x140048f5e
jmp	0x140048f5e
mov	rcx, qword ptr [rsp + 0x58]
mov	edx, 0x20
call	0x14009f7e0
call	0x14009f7e0
jmp	0x140048854
jmp	0x140048854
mov	byte ptr [rsp + 0x6f], 0
movzx	ecx, byte ptr [rsi + 0x20]
xor	edi, edi
xor	r14d, r14d
mov	byte ptr [rsp + 0x3c], 1
xor	ebp, ebp
jmp	0x140048808
jmp	0x140048808
cmp	word ptr [rsi + 0x4a], di
je	0x14004872d
je	0x14004872d
cmp	word ptr [rsi + 0x48], di
je	0x14004872d
je	0x14004872d
jmp	0x140048a02
jmp	0x140048a02
mov	eax, r15d
neg	eax
cmp	byte ptr [rsp + 0x6f], 0
cmovne	r15d, eax
mov	rax, qword ptr [rsp + 0x110]
mov	dword ptr [rax], r15d
jmp	0x14004898f
jmp	0x14004898f
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
jmp	0x140048cbe
jmp	0x140048cbe
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400493d5
jae	0x1400493d5
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
jmp	0x140048707
jmp	0x140048707
mov	eax, 0xf
jmp	0x140048f55
jmp	0x140048f55
mov	ecx, 0xd0
call	0x1400b2c30
call	0x1400b2c30
mov	rsi, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x75ead]
lea	rdx, [r13 + 0xd0]
mov	qword ptr [rsi + 0x10], 0
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rsi + 0x18], 0
mov	qword ptr [rsi], rax
mov	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
mov	qword ptr [rsi + 0x38], 0
mov	qword ptr [rsi + 0x40], 0
mov	dword ptr [rsi + 0x48], 0
mov	byte ptr [rsi + 0xc8], 0
call	0x1400942c0
call	0x1400942c0
mov	rcx, qword ptr [r13 + 0xd0]
mov	rdx, rsi
mov	r8, rdi
call	0x140099d30
call	0x140099d30
mov	rsi, qword ptr [r14]
jmp	0x14004868d
jmp	0x14004868d
mov	rcx, qword ptr [rsp + 0x30]
mov	dword ptr [rsp + 0x40], r8d
mov	byte ptr [rsp + 0x3c], r9b
mov	rax, qword ptr [rcx]
mov	byte ptr [rsp + 0x38], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x40]
movzx	r9d, byte ptr [rsp + 0x3c]
movzx	edx, byte ptr [rsp + 0x38]
jmp	0x140048c02
jmp	0x140048c02
mov	rax, qword ptr [r12 + 0x10]
cmp	rax, qword ptr [r12 + 0x18]
jae	0x1400493b3
jae	0x1400493b3
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	ebx, 0
mov	eax, 0
cmovne	r14d, eax
cmovne	rbx, r12
jmp	0x1400486d0
jmp	0x1400486d0
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140049391
jae	0x140049391
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmovne	rax, rbp
mov	qword ptr [rsp + 0x30], rax
jmp	0x1400486ec
jmp	0x1400486ec
mov	word ptr [rsp + 0x38], r9w
mov	ebp, 1
mov	byte ptr [rsp + 0x3c], 0
jmp	0x140048808
jmp	0x140048808
mov	rcx, qword ptr [rsp + 0x58]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0x70]
jmp	0x140048c91
jmp	0x140048c91
mov	byte ptr [rsp + 0x3c], al
mov	ebp, 1
mov	word ptr [rsp + 0x38], r9w
jmp	0x140048812
jmp	0x140048812
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140048f93
jmp	0x140048f93
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140048e4a
jmp	0x140048e4a
mov	edx, 0xf
jmp	0x140048c88
jmp	0x140048c88
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140048d39
jmp	0x140048d39
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140048900
jmp	0x140048900
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
movzx	edi, ax
jmp	0x140048b3b
jmp	0x140048b3b
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edi, ax
jmp	0x140048c3a
jmp	0x140048c3a
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
jmp	0x140048a27
jmp	0x140048a27
nop	word ptr [rax + rax]
mov	ebp, 0xffffffff
mov	byte ptr [rsp + 0x3c], 1
movzx	ecx, byte ptr [rsi + 0x20]
xor	r14d, r14d
mov	word ptr [rsp + 0x38], bp
xor	ebp, ebp
jmp	0x140048808
jmp	0x140048808
mov	r11d, 0xffffffff
movzx	ecx, byte ptr [rsi + 0x20]
mov	edi, 0xffff
mov	word ptr [rsp + 0x38], r11w
jmp	0x14004872d
jmp	0x14004872d
mov	byte ptr [rsp + 0x6c], 0
mov	byte ptr [rsp + 0x3c], al
jmp	0x14004894c
jmp	0x14004894c
movzx	eax, byte ptr [rsp + 0x3c]
mov	rdi, qword ptr [rsp + 0x78]
mov	byte ptr [rsp + 0x3c], 0
xor	r15d, r15d
mov	rcx, qword ptr [rsp + 0x70]
mov	byte ptr [rsp + 0x6c], al
jmp	0x14004894c
jmp	0x14004894c
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edi, eax
jmp	0x140048ee2
jmp	0x140048ee2
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400493f0
jae	0x1400493f0
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	ebp, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rsp + 0x30], rax
jmp	0x140048a4e
jmp	0x140048a4e
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	r8d, dword ptr [rsp + 0x38]
jmp	0x140048a1b
jmp	0x140048a1b
movzx	eax, byte ptr [rsp + 0x3c]
mov	byte ptr [rsp + 0x6e], 0
xor	r15d, r15d
mov	rdi, qword ptr [rsp + 0x78]
mov	rcx, qword ptr [rsp + 0x70]
mov	byte ptr [rsp + 0x3c], 0
mov	byte ptr [rsp + 0x6c], al
jmp	0x14004894c
jmp	0x14004894c
mov	rax, qword ptr [rbp]
mov	dword ptr [rsp + 0x3c], r8d
mov	rcx, rbp
mov	byte ptr [rsp + 0x30], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x3c]
movzx	edx, byte ptr [rsp + 0x30]
jmp	0x1400491a2
jmp	0x1400491a2
mov	rax, qword ptr [r12]
mov	dword ptr [rsp + 0x40], r8d
mov	rcx, r12
mov	byte ptr [rsp + 0x3c], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x40]
movzx	edx, byte ptr [rsp + 0x3c]
jmp	0x140049176
jmp	0x140049176
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x3c], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x3c]
movzx	edi, ax
jmp	0x14004908f
jmp	0x14004908f
mov	rcx, qword ptr [rsp + 0x30]
mov	dword ptr [rsp + 0x38], r8d
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
jmp	0x14004932b
jmp	0x14004932b
mov	rcx, qword ptr [rsp + 0x70]
jmp	0x140048973
jmp	0x140048973
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
movzx	edi, ax
jmp	0x140048a71
jmp	0x140048a71
mov	rcx, qword ptr [rsp + 0x58]
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x140049459
jmp	0x140049459
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
mov	rax, qword ptr [r8 + 8]
mov	rsi, qword ptr [r9 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [rsp + 0x110]
mov	r12, qword ptr [r8]
mov	r15d, eax
mov	qword ptr [rsp + 0xf0], rcx
lea	rcx, [rip + 0x6df75]
mov	rbx, r12
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x78], rax
mov	qword ptr [rsp + 0x38], rbp
call	0x140022a70
call	0x140022a70
mov	rdi, rax
mov	rax, qword ptr [r13 + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	r14, [rax + rdi*8]
mov	rsi, qword ptr [r14]
test	rsi, rsi
je	0x140049f2c
je	0x140049f2c
mov	r8d, dword ptr [r13 + 0x18]
mov	r13d, 8
and	r8d, 0x4a
cmp	r8d, 0x40
je	0x140049517
je	0x140049517
cmp	r8d, 8
mov	r13d, 0xa
mov	eax, 0x10
cmove	r13d, eax
cmp	r15w, -1
sete	dl
test	r12, r12
setne	dil
and	dil, dl
jne	0x140049fdc
jne	0x140049fdc
mov	edi, edx
cmp	word ptr [rsp + 0x30], -1
sete	r12b
test	rbp, rbp
setne	r14b
and	r14b, r12b
jne	0x14004a009
jne	0x14004a009
mov	r14d, r12d
cmp	r14b, dil
je	0x140049e9d
je	0x140049e9d
test	rbx, rbx
je	0x140049564
je	0x140049564
test	dl, dl
jne	0x140049f02
jne	0x140049f02
movzx	edi, r15w
movzx	eax, word ptr [rsi + 0x94]
movzx	ecx, byte ptr [rsi + 0x20]
cmp	ax, di
je	0x140049858
je	0x140049858
mov	byte ptr [rsp + 0x6c], 0
cmp	word ptr [rsi + 0x96], di
je	0x140049858
je	0x140049858
xor	r14d, r14d
xor	ebp, ebp
test	cl, cl
je	0x1400495a1
je	0x1400495a1
cmp	word ptr [rsi + 0x4a], di
je	0x1400499d0
je	0x1400499d0
cmp	word ptr [rsi + 0x48], di
je	0x1400499d0
je	0x1400499d0
cmp	word ptr [rsi + 0x9c], di
je	0x140049900
je	0x140049900
test	bpl, bpl
je	0x1400499d0
je	0x1400499d0
cmp	word ptr [rsi + 0x98], di
je	0x1400495d7
je	0x1400495d7
cmp	word ptr [rsi + 0x9a], di
jne	0x14004a03a
jne	0x14004a03a
test	r8d, r8d
sete	al
cmp	r13d, 0x10
sete	dl
or	al, dl
je	0x14004a072
je	0x14004a072
xor	r14d, r14d
xor	ebp, ebp
mov	r13d, 0x10
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x140049948
jae	0x140049948
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x140049970
jae	0x140049970
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	dl
cmp	qword ptr [rsp + 0x38], 0
setne	r15b
and	r15b, r12b
jne	0x140049a54
jne	0x140049a54
mov	r15d, r12d
cmp	dl, r15b
jne	0x140049990
jne	0x140049990
mov	byte ptr [rsp + 0x44], 1
movzx	ecx, byte ptr [rsi + 0x20]
mov	r15d, 0xffffffff
cmp	r13d, 0x10
je	0x1400499df
je	0x1400499df
movsxd	rax, r13d
mov	dword ptr [rsp + 0x58], r13d
mov	qword ptr [rsp + 0x48], rax
lea	rax, [rsp + 0x80]
mov	byte ptr [rsp + 0x90], 0
mov	qword ptr [rsp + 0x70], rax
lea	rax, [rsp + 0x90]
mov	qword ptr [rsp + 0x60], rax
mov	qword ptr [rsp + 0x80], rax
mov	qword ptr [rsp + 0x88], 0
test	cl, cl
jne	0x140049e89
jne	0x140049e89
movzx	eax, byte ptr [rsp + 0x6c]
xor	edx, edx
add	eax, 0x7fffffff
mov	dword ptr [rsp + 0x68], eax
div	r13d
mov	dword ptr [rsp + 0x54], eax
movzx	eax, byte ptr [rsi + 0xc8]
mov	byte ptr [rsp + 0x52], al
test	al, al
jne	0x140049c00
jne	0x140049c00
cmp	byte ptr [rsp + 0x44], 0
mov	byte ptr [rsp + 0x51], 0
jne	0x14004a14b
jne	0x14004a14b
movzx	eax, word ptr [rsp + 0x58]
mov	dword ptr [rsp + 0x30], 0
add	eax, 0x30
mov	word ptr [rsp + 0x52], ax
cmp	qword ptr [rsp + 0x48], 0xa
ja	0x1400499f8
ja	0x1400499f8
cmp	di, 0x2f
jbe	0x140049ac0
jbe	0x140049ac0
cmp	di, word ptr [rsp + 0x52]
jae	0x140049ac0
jae	0x140049ac0
sub	edi, 0x30
mov	eax, dword ptr [rsp + 0x30]
cmp	dword ptr [rsp + 0x54], eax
jb	0x140049a28
jb	0x140049a28
imul	eax, r13d
mov	edx, dword ptr [rsp + 0x68]
sub	edx, edi
cmp	edx, eax
setb	dl
add	eax, edi
or	byte ptr [rsp + 0x51], dl
mov	rdx, qword ptr [rbx + 0x18]
mov	dword ptr [rsp + 0x30], eax
mov	rax, qword ptr [rbx + 0x10]
add	r14d, 1
cmp	rax, rdx
jae	0x140049a3e
jae	0x140049a3e
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14004a0b8
jae	0x14004a0b8
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	r15b
cmp	qword ptr [rsp + 0x38], 0
setne	dil
and	dil, r12b
jne	0x140049bab
jne	0x140049bab
mov	edi, r12d
cmp	dil, r15b
jne	0x140049a90
jne	0x140049a90
mov	byte ptr [rsp + 0x52], 1
mov	rdi, qword ptr [rsp + 0x88]
mov	r15d, 0xffffffff
mov	rcx, qword ptr [rsp + 0x80]
mov	rax, rcx
test	rdi, rdi
jne	0x140049ae1
jne	0x140049ae1
nop	dword ptr [rax]
test	r14d, r14d
jne	0x140049b5c
jne	0x140049b5c
cmp	bpl, 1
je	0x140049b5c
je	0x140049b5c
mov	rax, qword ptr [rsp + 0x120]
mov	dword ptr [rax], 0
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x52], 0
je	0x140049811
je	0x140049811
mov	rax, qword ptr [rsp + 0x118]
or	dword ptr [rax], 2
mov	rax, qword ptr [rsp + 0x78]
mov	rsi, qword ptr [rsp + 0xf0]
mov	ax, r15w
mov	qword ptr [rsi], rbx
mov	qword ptr [rsi + 8], rax
mov	rax, qword ptr [rsp + 0x60]
cmp	rcx, rax
je	0x140049838
je	0x140049838
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0xf0]
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
cmp	ax, di
sete	byte ptr [rsp + 0x6c]
test	cl, cl
jne	0x140049eb7
jne	0x140049eb7
cmp	word ptr [rsi + 0x48], di
je	0x14004958e
je	0x14004958e
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004a1bd
jae	0x14004a1bd
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14004a0f2
jae	0x14004a0f2
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	r14b
cmp	qword ptr [rsp + 0x38], 0
setne	bpl
and	bpl, r12b
jne	0x14004a186
jne	0x14004a186
mov	ebp, r12d
cmp	bpl, r14b
je	0x14004a110
je	0x14004a110
test	rbx, rbx
je	0x14004a129
je	0x14004a129
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004a298
jae	0x14004a298
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
movzx	ecx, byte ptr [rsi + 0x20]
mov	r15d, 0xffffffff
cmove	rbx, rax
jmp	0x14004958e
jmp	0x14004958e
nop	word ptr [rax + rax]
mov	eax, ebp
xor	eax, 1
cmp	r13d, 0xa
sete	dl
or	al, dl
je	0x1400495c1
je	0x1400495c1
cmp	r13d, 8
sete	bpl
test	r8d, r8d
sete	dl
or	bpl, dl
je	0x140049ba0
je	0x140049ba0
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
xor	r14d, r14d
mov	r13d, 8
cmp	rax, rdx
jb	0x140049608
jb	0x140049608
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x30], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	r8d, dword ptr [rsp + 0x30]
cmp	rax, rdx
jb	0x140049619
jb	0x140049619
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x30], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x30]
jmp	0x14004961c
jmp	0x14004961c
nop	dword ptr [rax + rax]
mov	edi, 0xffff
test	rbx, rbx
je	0x1400499b5
je	0x1400499b5
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004a0c6
jae	0x14004a0c6
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
movzx	ecx, byte ptr [rsi + 0x20]
mov	r15d, 0xffffffff
test	bpl, bpl
jne	0x140049593
jne	0x140049593
nop	dword ptr [rax + rax]
mov	byte ptr [rsp + 0x44], 0
cmp	r13d, 0x10
jne	0x140049664
jne	0x140049664
mov	qword ptr [rsp + 0x48], 0x16
mov	dword ptr [rsp + 0x58], 0x16
jmp	0x140049671
jmp	0x140049671
nop	dword ptr [rax]
lea	eax, [rdi - 0x30]
cmp	ax, 9
jbe	0x14004971f
jbe	0x14004971f
lea	eax, [rdi - 0x61]
cmp	ax, 5
ja	0x140049be8
ja	0x140049be8
mov	eax, dword ptr [rsp + 0x30]
sub	edi, 0x57
cmp	dword ptr [rsp + 0x54], eax
jae	0x140049730
jae	0x140049730
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x51], 1
cmp	rax, rdx
jb	0x14004975e
jb	0x14004975e
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x140049766
jmp	0x140049766
mov	rcx, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140049fb9
jae	0x140049fb9
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r15d, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x38]
mov	qword ptr [rsp + 0x38], rax
jmp	0x140049642
jmp	0x140049642
nop	dword ptr [rax]
test	rbx, rbx
je	0x140049e50
je	0x140049e50
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004a0e1
jae	0x14004a0e1
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
jmp	0x140049e55
jmp	0x140049e55
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x80]
mov	rdi, qword ptr [rsp + 0x88]
mov	byte ptr [rsp + 0x52], 0
mov	rax, rcx
test	rdi, rdi
je	0x1400497d0
je	0x1400497d0
mov	rcx, qword ptr [rsp + 0x60]
mov	r13d, r14d
lea	r12, [rdi + 1]
cmp	rax, rcx
je	0x14004a09e
je	0x14004a09e
mov	rdx, qword ptr [rsp + 0x90]
cmp	rdx, r12
jb	0x14004a049
jb	0x14004a049
mov	byte ptr [rax + rdi], r13b
mov	rax, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x88], r12
mov	r8, qword ptr [rsp + 0x70]
mov	byte ptr [rax + rdi + 1], 0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
call	0x1400ae850
call	0x1400ae850
test	al, al
je	0x140049eef
je	0x140049eef
test	r14d, r14d
jne	0x140049b54
jne	0x140049b54
cmp	bpl, 1
je	0x140049b54
je	0x140049b54
cmp	qword ptr [rsp + 0x88], 0
je	0x14004a286
je	0x14004a286
mov	rcx, qword ptr [rsp + 0x80]
cmp	byte ptr [rsp + 0x44], 0
jne	0x1400497e3
jne	0x1400497e3
cmp	byte ptr [rsp + 0x51], 0
je	0x140049ed0
je	0x140049ed0
mov	eax, dword ptr [rsp + 0x6c]
mov	rsi, qword ptr [rsp + 0x120]
and	eax, 1
add	eax, 0x7fffffff
mov	dword ptr [rsi], eax
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
jmp	0x1400497ff
jmp	0x1400497ff
nop	dword ptr [rax + rax]
add	r14d, 1
mov	ebp, eax
jmp	0x1400495f7
jmp	0x1400495f7
mov	rcx, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004a0a8
jae	0x14004a0a8
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x38]
mov	qword ptr [rsp + 0x38], rax
jmp	0x140049799
jmp	0x140049799
nop	word ptr [rax + rax]
lea	eax, [rdi - 0x41]
cmp	ax, 5
ja	0x140049ac0
ja	0x140049ac0
sub	edi, 0x37
jmp	0x140049722
jmp	0x140049722
nop	dword ptr [rax]
cmp	byte ptr [rsp + 0x44], 0
jne	0x14004a1dd
jne	0x14004a1dd
lea	rax, [rsi + 0x9c]
mov	byte ptr [rsp + 0x51], 0
mov	qword ptr [rsp + 0x58], rax
mov	dword ptr [rsp + 0x30], 0
nop	dword ptr [rax]
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x140049c3a
je	0x140049c3a
cmp	word ptr [rsi + 0x4a], di
je	0x140049da0
je	0x140049da0
mov	rcx, qword ptr [rsp + 0x48]
cmp	word ptr [rsi + 0x48], di
sete	al
test	rcx, rcx
sete	dl
or	al, dl
jne	0x140049ac0
jne	0x140049ac0
mov	rax, qword ptr [rsp + 0x58]
mov	rdx, rcx
jmp	0x140049c6e
jmp	0x140049c6e
nop	
add	rax, 2
sub	rdx, 1
je	0x140049d80
je	0x140049d80
cmp	di, word ptr [rax]
jne	0x140049c60
jne	0x140049c60
mov	rcx, qword ptr [rsp + 0x58]
sub	rax, rcx
mov	ecx, dword ptr [rsp + 0x30]
sar	rax, 1
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
cmp	dword ptr [rsp + 0x54], ecx
jb	0x140049d20
jb	0x140049d20
imul	ecx, r13d
mov	edx, ecx
mov	ecx, dword ptr [rsp + 0x68]
sub	ecx, eax
cmp	ecx, edx
setb	cl
add	eax, edx
or	byte ptr [rsp + 0x51], cl
add	r14d, 1
mov	dword ptr [rsp + 0x30], eax
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x140049d36
jae	0x140049d36
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14004a090
jae	0x14004a090
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	r15b
cmp	qword ptr [rsp + 0x38], 0
setne	dil
and	dil, r12b
jne	0x140049e00
jne	0x140049e00
mov	edi, r12d
cmp	r15b, dil
jne	0x140049d50
jne	0x140049d50
mov	rdi, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x80]
mov	r15d, 0xffffffff
jmp	0x1400497bd
jmp	0x1400497bd
nop	dword ptr [rax]
movzx	eax, byte ptr [rsp + 0x52]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x51], al
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rdx
jb	0x140049cc1
jb	0x140049cc1
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x140049cc9
jmp	0x140049cc9
nop	dword ptr [rax]
test	rbx, rbx
je	0x140049e40
je	0x140049e40
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004a176
jae	0x14004a176
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
mov	r15d, 0xffffffff
jmp	0x140049c28
jmp	0x140049c28
nop	
mov	byte ptr [rsp + 0x44], 0
mov	rdi, qword ptr [rsp + 0x88]
mov	byte ptr [rsp + 0x52], 0
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x1400497bd
jmp	0x1400497bd
nop	
mov	rdx, qword ptr [rsp + 0x80]
mov	rdi, qword ptr [rsp + 0x88]
mov	rcx, rdx
test	r14d, r14d
je	0x14004a13d
je	0x14004a13d
mov	rax, qword ptr [rsp + 0x60]
lea	r15, [rdi + 1]
cmp	rdx, rax
je	0x140049f22
je	0x140049f22
mov	rax, qword ptr [rsp + 0x90]
cmp	rax, r15
jb	0x140049e60
jb	0x140049e60
mov	byte ptr [rdx + rdi], r14b
mov	rax, qword ptr [rsp + 0x80]
xor	r14d, r14d
mov	qword ptr [rsp + 0x88], r15
mov	byte ptr [rax + r15], 0
jmp	0x140049cb4
jmp	0x140049cb4
mov	rcx, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004a080
jae	0x14004a080
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x38]
mov	qword ptr [rsp + 0x38], rax
jmp	0x140049cfc
jmp	0x140049cfc
nop	word ptr [rax + rax]
mov	edi, 0xffffffff
jmp	0x140049d74
jmp	0x140049d74
nop	word ptr [rax + rax]
mov	edi, 0xffff
mov	r15d, 0xffffffff
jmp	0x1400496fe
jmp	0x1400496fe
mov	rcx, qword ptr [rsp + 0x70]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rdx, qword ptr [rsp + 0x80]
jmp	0x140049ddf
jmp	0x140049ddf
mov	rcx, qword ptr [rsp + 0x70]
mov	edx, 0x20
call	0x14009f7e0
call	0x14009f7e0
jmp	0x1400496af
jmp	0x1400496af
mov	byte ptr [rsp + 0x6c], 0
movzx	ecx, byte ptr [rsi + 0x20]
xor	edi, edi
xor	r14d, r14d
mov	byte ptr [rsp + 0x44], 1
xor	ebp, ebp
jmp	0x14004965a
jmp	0x14004965a
cmp	word ptr [rsi + 0x4a], di
je	0x14004958e
je	0x14004958e
cmp	word ptr [rsi + 0x48], di
je	0x14004958e
je	0x14004958e
jmp	0x140049872
jmp	0x140049872
mov	esi, dword ptr [rsp + 0x30]
mov	eax, esi
neg	eax
cmp	byte ptr [rsp + 0x6c], 0
cmove	eax, esi
mov	rsi, qword ptr [rsp + 0x120]
mov	dword ptr [rsi], eax
jmp	0x1400497ff
jmp	0x1400497ff
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
jmp	0x140049b3a
jmp	0x140049b3a
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004a251
jae	0x14004a251
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
jmp	0x140049568
jmp	0x140049568
mov	eax, 0xf
jmp	0x140049dd6
jmp	0x140049dd6
mov	ecx, 0xd0
call	0x1400b2c30
call	0x1400b2c30
mov	rsi, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x75029]
lea	rdx, [r13 + 0xd0]
mov	qword ptr [rsi + 0x10], 0
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rsi + 0x18], 0
mov	qword ptr [rsi], rax
mov	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
mov	qword ptr [rsi + 0x38], 0
mov	qword ptr [rsi + 0x40], 0
mov	dword ptr [rsi + 0x48], 0
mov	byte ptr [rsi + 0xc8], 0
call	0x1400942c0
call	0x1400942c0
mov	rcx, qword ptr [r13 + 0xd0]
mov	rdx, rsi
mov	r8, rdi
call	0x140099d30
call	0x140099d30
mov	rsi, qword ptr [r14]
jmp	0x1400494f0
jmp	0x1400494f0
mov	rcx, qword ptr [rsp + 0x38]
mov	dword ptr [rsp + 0x44], r8d
mov	byte ptr [rsp + 0x30], dl
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x44]
movzx	edx, byte ptr [rsp + 0x30]
jmp	0x140049a6a
jmp	0x140049a6a
mov	rax, qword ptr [r12 + 0x10]
cmp	rax, qword ptr [r12 + 0x18]
jae	0x14004a22f
jae	0x14004a22f
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	ebx, 0
mov	eax, 0
cmovne	edi, eax
cmovne	rbx, r12
jmp	0x140049531
jmp	0x140049531
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x14004a20d
jae	0x14004a20d
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r14d, eax
mov	eax, 0
cmovne	rax, rbp
mov	qword ptr [rsp + 0x38], rax
jmp	0x14004954e
jmp	0x14004954e
mov	byte ptr [rsp + 0x44], 0
mov	ebp, 1
jmp	0x14004965a
jmp	0x14004965a
mov	rcx, qword ptr [rsp + 0x70]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0x80]
jmp	0x140049b07
jmp	0x140049b07
mov	byte ptr [rsp + 0x44], al
mov	ebp, 1
jmp	0x140049664
jmp	0x140049664
mov	rcx, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140049e16
jmp	0x140049e16
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140049cd5
jmp	0x140049cd5
mov	edx, 0xf
jmp	0x140049afe
jmp	0x140049afe
mov	rcx, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140049bc1
jmp	0x140049bc1
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140049772
jmp	0x140049772
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x30], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x30]
movzx	edi, ax
jmp	0x1400499ab
jmp	0x1400499ab
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edi, ax
jmp	0x140049aaa
jmp	0x140049aaa
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x30], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x30]
jmp	0x140049897
jmp	0x140049897
nop	word ptr [rax + rax]
mov	byte ptr [rsp + 0x44], 1
movzx	ecx, byte ptr [rsi + 0x20]
xor	r14d, r14d
xor	ebp, ebp
mov	r15d, 0xffffffff
jmp	0x14004965a
jmp	0x14004965a
movzx	ecx, byte ptr [rsi + 0x20]
mov	edi, 0xffff
mov	r15d, 0xffffffff
jmp	0x14004958e
jmp	0x14004958e
mov	byte ptr [rsp + 0x52], 0
mov	byte ptr [rsp + 0x44], al
jmp	0x1400497bd
jmp	0x1400497bd
movzx	eax, byte ptr [rsp + 0x44]
mov	dword ptr [rsp + 0x30], 0
mov	byte ptr [rsp + 0x44], 0
mov	rdi, qword ptr [rsp + 0x88]
mov	byte ptr [rsp + 0x52], al
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x1400497bd
jmp	0x1400497bd
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edi, eax
jmp	0x140049d6a
jmp	0x140049d6a
mov	rcx, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004a26c
jae	0x14004a26c
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	ebp, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x38]
mov	qword ptr [rsp + 0x38], rax
jmp	0x1400498be
jmp	0x1400498be
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x30], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	r8d, dword ptr [rsp + 0x30]
jmp	0x14004988b
jmp	0x14004988b
movzx	eax, byte ptr [rsp + 0x44]
mov	dword ptr [rsp + 0x30], 0
mov	byte ptr [rsp + 0x51], 0
mov	rdi, qword ptr [rsp + 0x88]
mov	byte ptr [rsp + 0x52], al
mov	rcx, qword ptr [rsp + 0x80]
mov	byte ptr [rsp + 0x44], 0
jmp	0x1400497bd
jmp	0x1400497bd
mov	rax, qword ptr [rbp]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbp
mov	byte ptr [rsp + 0x30], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
movzx	edx, byte ptr [rsp + 0x30]
jmp	0x14004a01a
jmp	0x14004a01a
mov	rax, qword ptr [r12]
mov	dword ptr [rsp + 0x48], r8d
mov	rcx, r12
mov	byte ptr [rsp + 0x44], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x48]
movzx	edx, byte ptr [rsp + 0x44]
jmp	0x140049fef
jmp	0x140049fef
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x30], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x30]
movzx	edi, ax
jmp	0x140049f13
jmp	0x140049f13
mov	rcx, qword ptr [rsp + 0x38]
mov	dword ptr [rsp + 0x30], r8d
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x30]
jmp	0x14004a19c
jmp	0x14004a19c
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x1400497e3
jmp	0x1400497e3
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x30], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x30]
movzx	edi, ax
jmp	0x1400498e1
jmp	0x1400498e1
mov	rcx, qword ptr [rsp + 0x70]
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x14004a2d9
jmp	0x14004a2d9
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	rax, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [rsp + 0x100]
mov	r12, qword ptr [r8]
mov	r15, qword ptr [r9 + 8]
mov	rbx, r12
mov	qword ptr [rsp + 0xe0], rcx
lea	rcx, [rip + 0x6d0f5]
mov	qword ptr [rsp + 0x60], rax
mov	word ptr [rsp + 0x38], ax
mov	qword ptr [rsp + 0x30], rbp
call	0x140022a70
call	0x140022a70
mov	rdi, rax
mov	rax, qword ptr [r13 + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	r14, [rax + rdi*8]
mov	rsi, qword ptr [r14]
test	rsi, rsi
je	0x14004ad88
je	0x14004ad88
mov	r8d, dword ptr [r13 + 0x18]
mov	r13d, 8
and	r8d, 0x4a
cmp	r8d, 0x40
je	0x14004a394
je	0x14004a394
cmp	r8d, 8
mov	r13d, 0xa
mov	eax, 0x10
cmove	r13d, eax
cmp	word ptr [rsp + 0x38], -1
sete	dl
test	r12, r12
setne	r14b
and	r14b, dl
jne	0x14004ae43
jne	0x14004ae43
mov	r14d, edx
cmp	r15w, -1
sete	r12b
test	rbp, rbp
setne	dil
and	dil, r12b
jne	0x14004ae71
jne	0x14004ae71
mov	edi, r12d
cmp	r14b, dil
je	0x14004acfa
je	0x14004acfa
test	rbx, rbx
je	0x14004a3e2
je	0x14004a3e2
test	dl, dl
jne	0x14004ad5e
jne	0x14004ad5e
movzx	edi, word ptr [rsp + 0x38]
movzx	eax, word ptr [rsi + 0x94]
movzx	ecx, byte ptr [rsi + 0x20]
cmp	ax, di
je	0x14004a6c8
je	0x14004a6c8
mov	byte ptr [rsp + 0x6f], 0
cmp	word ptr [rsi + 0x96], di
je	0x14004a6c8
je	0x14004a6c8
movzx	r9d, word ptr [rsp + 0x38]
xor	r14d, r14d
xor	ebp, ebp
xor	r15d, r15d
test	cl, cl
je	0x14004a429
je	0x14004a429
cmp	word ptr [rsi + 0x4a], di
je	0x14004a840
je	0x14004a840
cmp	word ptr [rsi + 0x48], di
je	0x14004a840
je	0x14004a840
cmp	word ptr [rsi + 0x9c], di
je	0x14004a770
je	0x14004a770
test	bpl, bpl
je	0x14004a840
je	0x14004a840
cmp	word ptr [rsi + 0x98], di
je	0x14004a45f
je	0x14004a45f
cmp	word ptr [rsi + 0x9a], di
jne	0x14004aea1
jne	0x14004aea1
test	r8d, r8d
sete	al
cmp	r13d, 0x10
sete	dl
or	al, dl
je	0x14004aedc
je	0x14004aedc
xor	r14d, r14d
xor	ebp, ebp
mov	r13d, 0x10
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004a7b8
jae	0x14004a7b8
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14004a7e0
jae	0x14004a7e0
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	r9b
cmp	qword ptr [rsp + 0x30], 0
setne	dl
and	dl, r12b
jne	0x14004a8cc
jne	0x14004a8cc
mov	edx, r12d
cmp	dl, r9b
jne	0x14004a800
jne	0x14004a800
mov	r9d, 0xffffffff
mov	byte ptr [rsp + 0x3c], 1
movzx	ecx, byte ptr [rsi + 0x20]
mov	word ptr [rsp + 0x38], r9w
cmp	r13d, 0x10
je	0x14004a855
je	0x14004a855
movsxd	rax, r13d
mov	dword ptr [rsp + 0x48], r13d
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0x70]
mov	byte ptr [rsp + 0x80], 0
mov	qword ptr [rsp + 0x58], rax
lea	rax, [rsp + 0x80]
mov	qword ptr [rsp + 0x50], rax
mov	qword ptr [rsp + 0x70], rax
mov	qword ptr [rsp + 0x78], 0
test	cl, cl
jne	0x14004ace6
jne	0x14004ace6
mov	eax, 0xffffffff
xor	edx, edx
div	r13d
mov	dword ptr [rsp + 0x68], eax
movzx	eax, byte ptr [rsi + 0xc8]
mov	byte ptr [rsp + 0x6c], al
test	al, al
jne	0x14004aa58
jne	0x14004aa58
cmp	byte ptr [rsp + 0x3c], 0
mov	byte ptr [rsp + 0x6e], 0
jne	0x14004afc5
jne	0x14004afc5
movzx	eax, word ptr [rsp + 0x48]
xor	r15d, r15d
add	eax, 0x30
mov	word ptr [rsp + 0x6c], ax
cmp	qword ptr [rsp + 0x40], 0xa
ja	0x14004a870
ja	0x14004a870
cmp	di, 0x2f
jbe	0x14004a930
jbe	0x14004a930
cmp	di, word ptr [rsp + 0x6c]
jae	0x14004a930
jae	0x14004a930
sub	edi, 0x30
cmp	dword ptr [rsp + 0x68], r15d
jb	0x14004a8a0
jb	0x14004a8a0
mov	eax, r15d
mov	rdx, qword ptr [rbx + 0x18]
imul	eax, r13d
add	edi, eax
setb	al
or	byte ptr [rsp + 0x6e], al
mov	rax, qword ptr [rbx + 0x10]
mov	r15d, edi
add	r14d, 1
cmp	rax, rdx
jae	0x14004a8b6
jae	0x14004a8b6
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14004af28
jae	0x14004af28
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	byte ptr [rsp + 0x38]
cmp	qword ptr [rsp + 0x30], 0
setne	dil
and	dil, r12b
jne	0x14004aa03
jne	0x14004aa03
mov	edi, r12d
cmp	dil, byte ptr [rsp + 0x38]
jne	0x14004a900
jne	0x14004a900
mov	edx, 0xffffffff
mov	byte ptr [rsp + 0x6c], 1
mov	rdi, qword ptr [rsp + 0x78]
mov	word ptr [rsp + 0x38], dx
mov	rcx, qword ptr [rsp + 0x70]
mov	rax, rcx
test	rdi, rdi
jne	0x14004a94b
jne	0x14004a94b
nop	dword ptr [rax + rax]
cmp	bpl, 1
je	0x14004a9ba
je	0x14004a9ba
test	r14d, r14d
jne	0x14004a9ba
jne	0x14004a9ba
mov	rax, qword ptr [rsp + 0x110]
mov	dword ptr [rax], 0
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x6c], 0
je	0x14004a681
je	0x14004a681
mov	rax, qword ptr [rsp + 0x108]
or	dword ptr [rax], 2
mov	rsi, qword ptr [rsp + 0xe0]
mov	rax, qword ptr [rsp + 0x60]
mov	ax, word ptr [rsp + 0x38]
mov	qword ptr [rsi], rbx
mov	qword ptr [rsi + 8], rax
mov	rax, qword ptr [rsp + 0x50]
cmp	rcx, rax
je	0x14004a6a9
je	0x14004a6a9
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0xe0]
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
cmp	ax, di
sete	byte ptr [rsp + 0x6f]
test	cl, cl
jne	0x14004ad14
jne	0x14004ad14
cmp	word ptr [rsi + 0x48], di
je	0x14004a40d
je	0x14004a40d
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004b02c
jae	0x14004b02c
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14004af62
jae	0x14004af62
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	r14b
cmp	qword ptr [rsp + 0x30], 0
setne	bpl
and	bpl, r12b
jne	0x14004aff5
jne	0x14004aff5
mov	ebp, r12d
cmp	r14b, bpl
je	0x14004af80
je	0x14004af80
test	rbx, rbx
je	0x14004af9d
je	0x14004af9d
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004b0f8
jae	0x14004b0f8
movzx	edi, word ptr [rax]
xor	eax, eax
mov	r10d, 0xffffffff
cmp	di, -1
movzx	ecx, byte ptr [rsi + 0x20]
mov	word ptr [rsp + 0x38], r10w
cmove	rbx, rax
jmp	0x14004a40d
jmp	0x14004a40d
mov	eax, ebp
xor	eax, 1
cmp	r13d, 0xa
sete	dl
or	al, dl
je	0x14004a449
je	0x14004a449
cmp	r13d, 8
sete	bpl
test	r8d, r8d
sete	dl
or	bpl, dl
je	0x14004a9f8
je	0x14004a9f8
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
xor	r14d, r14d
mov	r13d, 8
cmp	rax, rdx
jb	0x14004a490
jb	0x14004a490
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	r8d, dword ptr [rsp + 0x38]
cmp	rax, rdx
jb	0x14004a4a1
jb	0x14004a4a1
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
jmp	0x14004a4a4
jmp	0x14004a4a4
nop	dword ptr [rax + rax]
mov	edi, 0xffff
test	rbx, rbx
je	0x14004a825
je	0x14004a825
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004af36
jae	0x14004af36
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
movzx	ecx, byte ptr [rsi + 0x20]
mov	r9d, 0xffffffff
test	bpl, bpl
jne	0x14004a41b
jne	0x14004a41b
nop	dword ptr [rax + rax]
mov	word ptr [rsp + 0x38], r9w
mov	byte ptr [rsp + 0x3c], 0
cmp	r13d, 0x10
jne	0x14004a4f2
jne	0x14004a4f2
mov	qword ptr [rsp + 0x40], 0x16
mov	dword ptr [rsp + 0x48], 0x16
jmp	0x14004a4ff
jmp	0x14004a4ff
nop	dword ptr [rax + rax]
lea	eax, [rdi - 0x30]
cmp	ax, 9
jbe	0x14004a596
jbe	0x14004a596
lea	eax, [rdi - 0x61]
cmp	ax, 5
ja	0x14004aa40
ja	0x14004aa40
sub	edi, 0x57
cmp	dword ptr [rsp + 0x68], r15d
jae	0x14004a5a4
jae	0x14004a5a4
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x6e], 1
cmp	rax, rdx
jb	0x14004a5cc
jb	0x14004a5cc
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x14004a5d4
jmp	0x14004a5d4
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004ae15
jae	0x14004ae15
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x30]
cmovne	edx, r15d
mov	qword ptr [rsp + 0x30], rax
jmp	0x14004a4ca
jmp	0x14004a4ca
nop	
test	rbx, rbx
je	0x14004aca8
je	0x14004aca8
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004af51
jae	0x14004af51
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
jmp	0x14004acad
jmp	0x14004acad
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x70]
mov	rdi, qword ptr [rsp + 0x78]
mov	byte ptr [rsp + 0x6c], 0
mov	rax, rcx
test	rdi, rdi
je	0x14004a640
je	0x14004a640
mov	rcx, qword ptr [rsp + 0x50]
mov	r13d, r14d
lea	r12, [rdi + 1]
cmp	rax, rcx
je	0x14004af0e
je	0x14004af0e
mov	rdx, qword ptr [rsp + 0x80]
cmp	rdx, r12
jb	0x14004aeb6
jb	0x14004aeb6
mov	byte ptr [rax + rdi], r13b
mov	rax, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x78], r12
mov	r8, qword ptr [rsp + 0x58]
mov	byte ptr [rax + rdi + 1], 0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
call	0x1400ae850
call	0x1400ae850
test	al, al
je	0x14004ad4b
je	0x14004ad4b
test	r14d, r14d
jne	0x14004a9b5
jne	0x14004a9b5
cmp	bpl, 1
je	0x14004a9b5
je	0x14004a9b5
cmp	qword ptr [rsp + 0x78], 0
je	0x14004b0ea
je	0x14004b0ea
mov	rcx, qword ptr [rsp + 0x70]
cmp	byte ptr [rsp + 0x3c], 0
jne	0x14004a653
jne	0x14004a653
cmp	byte ptr [rsp + 0x6e], 0
je	0x14004ad2d
je	0x14004ad2d
mov	rax, qword ptr [rsp + 0x110]
mov	dword ptr [rax], 0xffffffff
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
jmp	0x14004a66f
jmp	0x14004a66f
nop	dword ptr [rax]
add	r14d, 1
mov	ebp, eax
jmp	0x14004a47f
jmp	0x14004a47f
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004af18
jae	0x14004af18
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rsp + 0x30], rax
jmp	0x14004a608
jmp	0x14004a608
nop	word ptr [rax + rax]
lea	eax, [rdi - 0x41]
cmp	ax, 5
ja	0x14004a930
ja	0x14004a930
sub	edi, 0x37
jmp	0x14004a599
jmp	0x14004a599
nop	dword ptr [rax]
cmp	byte ptr [rsp + 0x3c], 0
jne	0x14004b04c
jne	0x14004b04c
lea	rax, [rsi + 0x9c]
mov	byte ptr [rsp + 0x6e], 0
xor	r15d, r15d
mov	qword ptr [rsp + 0x48], rax
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x14004aa92
je	0x14004aa92
cmp	word ptr [rsi + 0x4a], di
je	0x14004ac00
je	0x14004ac00
mov	rcx, qword ptr [rsp + 0x40]
cmp	word ptr [rsi + 0x48], di
sete	al
test	rcx, rcx
sete	dl
or	al, dl
jne	0x14004a930
jne	0x14004a930
mov	rax, qword ptr [rsp + 0x48]
mov	rdx, rcx
jmp	0x14004aace
jmp	0x14004aace
nop	word ptr cs:[rax + rax]
add	rax, 2
sub	rdx, 1
je	0x14004abe0
je	0x14004abe0
cmp	di, word ptr [rax]
jne	0x14004aac0
jne	0x14004aac0
mov	rcx, qword ptr [rsp + 0x48]
sub	rax, rcx
sar	rax, 1
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
cmp	dword ptr [rsp + 0x68], r15d
jb	0x14004ab78
jb	0x14004ab78
mov	edx, r15d
imul	edx, r13d
add	eax, edx
setb	dl
or	byte ptr [rsp + 0x6e], dl
mov	r15d, eax
add	r14d, 1
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004ab8e
jae	0x14004ab8e
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14004af00
jae	0x14004af00
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	byte ptr [rsp + 0x38]
cmp	qword ptr [rsp + 0x30], 0
setne	dil
and	dil, r12b
jne	0x14004ac5d
jne	0x14004ac5d
mov	edi, r12d
cmp	dil, byte ptr [rsp + 0x38]
jne	0x14004aba8
jne	0x14004aba8
mov	eax, 0xffffffff
mov	rdi, qword ptr [rsp + 0x78]
mov	rcx, qword ptr [rsp + 0x70]
mov	word ptr [rsp + 0x38], ax
jmp	0x14004a62c
jmp	0x14004a62c
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rsp + 0x6c]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x6e], al
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rdx
jb	0x14004ab16
jb	0x14004ab16
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x14004ab1e
jmp	0x14004ab1e
nop	dword ptr [rax]
test	rbx, rbx
je	0x14004ac98
je	0x14004ac98
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004afe5
jae	0x14004afe5
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
mov	ecx, 0xffffffff
mov	word ptr [rsp + 0x38], cx
jmp	0x14004aa80
jmp	0x14004aa80
nop	dword ptr [rax + rax]
mov	rdi, qword ptr [rsp + 0x78]
mov	rcx, qword ptr [rsp + 0x70]
mov	byte ptr [rsp + 0x3c], 0
mov	byte ptr [rsp + 0x6c], 0
jmp	0x14004a62c
jmp	0x14004a62c
nop	dword ptr [rax]
mov	rdx, qword ptr [rsp + 0x70]
mov	rdi, qword ptr [rsp + 0x78]
mov	rcx, rdx
test	r14d, r14d
je	0x14004afb7
je	0x14004afb7
mov	rax, qword ptr [rsp + 0x50]
mov	byte ptr [rsp + 0x38], r14b
lea	r14, [rdi + 1]
cmp	rdx, rax
je	0x14004ad7e
je	0x14004ad7e
mov	rax, qword ptr [rsp + 0x80]
cmp	rax, r14
jb	0x14004acc0
jb	0x14004acc0
movzx	eax, byte ptr [rsp + 0x38]
mov	byte ptr [rdx + rdi], al
mov	rax, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x78], r14
mov	byte ptr [rax + r14], 0
xor	r14d, r14d
jmp	0x14004ab09
jmp	0x14004ab09
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004aef0
jae	0x14004aef0
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rsp + 0x30], rax
jmp	0x14004ab52
jmp	0x14004ab52
nop	dword ptr [rax]
mov	edi, 0xffffffff
jmp	0x14004abcc
jmp	0x14004abcc
nop	word ptr [rax + rax]
mov	edi, 0xffff
mov	r8d, 0xffffffff
mov	word ptr [rsp + 0x38], r8w
jmp	0x14004a575
jmp	0x14004a575
nop	
mov	rcx, qword ptr [rsp + 0x58]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rdx, qword ptr [rsp + 0x70]
jmp	0x14004ac3e
jmp	0x14004ac3e
mov	rcx, qword ptr [rsp + 0x58]
mov	edx, 0x20
call	0x14009f7e0
call	0x14009f7e0
jmp	0x14004a534
jmp	0x14004a534
mov	byte ptr [rsp + 0x6f], 0
movzx	ecx, byte ptr [rsi + 0x20]
xor	edi, edi
xor	r14d, r14d
mov	byte ptr [rsp + 0x3c], 1
xor	ebp, ebp
jmp	0x14004a4e8
jmp	0x14004a4e8
cmp	word ptr [rsi + 0x4a], di
je	0x14004a40d
je	0x14004a40d
cmp	word ptr [rsi + 0x48], di
je	0x14004a40d
je	0x14004a40d
jmp	0x14004a6e2
jmp	0x14004a6e2
mov	eax, r15d
neg	eax
cmp	byte ptr [rsp + 0x6f], 0
cmovne	r15d, eax
mov	rax, qword ptr [rsp + 0x110]
mov	dword ptr [rax], r15d
jmp	0x14004a66f
jmp	0x14004a66f
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
jmp	0x14004a99e
jmp	0x14004a99e
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004b0b5
jae	0x14004b0b5
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
jmp	0x14004a3e7
jmp	0x14004a3e7
mov	eax, 0xf
jmp	0x14004ac35
jmp	0x14004ac35
mov	ecx, 0xd0
call	0x1400b2c30
call	0x1400b2c30
mov	rsi, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x741cd]
lea	rdx, [r13 + 0xd0]
mov	qword ptr [rsi + 0x10], 0
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rsi + 0x18], 0
mov	qword ptr [rsi], rax
mov	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
mov	qword ptr [rsi + 0x38], 0
mov	qword ptr [rsi + 0x40], 0
mov	dword ptr [rsi + 0x48], 0
mov	byte ptr [rsi + 0xc8], 0
call	0x1400942c0
call	0x1400942c0
mov	rcx, qword ptr [r13 + 0xd0]
mov	rdx, rsi
mov	r8, rdi
call	0x140099d30
call	0x140099d30
mov	rsi, qword ptr [r14]
jmp	0x14004a36d
jmp	0x14004a36d
mov	rcx, qword ptr [rsp + 0x30]
mov	dword ptr [rsp + 0x40], r8d
mov	byte ptr [rsp + 0x3c], r9b
mov	rax, qword ptr [rcx]
mov	byte ptr [rsp + 0x38], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x40]
movzx	r9d, byte ptr [rsp + 0x3c]
movzx	edx, byte ptr [rsp + 0x38]
jmp	0x14004a8e2
jmp	0x14004a8e2
mov	rax, qword ptr [r12 + 0x10]
cmp	rax, qword ptr [r12 + 0x18]
jae	0x14004b093
jae	0x14004b093
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	ebx, 0
mov	eax, 0
cmovne	r14d, eax
cmovne	rbx, r12
jmp	0x14004a3b0
jmp	0x14004a3b0
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x14004b071
jae	0x14004b071
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmovne	rax, rbp
mov	qword ptr [rsp + 0x30], rax
jmp	0x14004a3cc
jmp	0x14004a3cc
mov	word ptr [rsp + 0x38], r9w
mov	ebp, 1
mov	byte ptr [rsp + 0x3c], 0
jmp	0x14004a4e8
jmp	0x14004a4e8
mov	rcx, qword ptr [rsp + 0x58]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0x70]
jmp	0x14004a971
jmp	0x14004a971
mov	byte ptr [rsp + 0x3c], al
mov	ebp, 1
mov	word ptr [rsp + 0x38], r9w
jmp	0x14004a4f2
jmp	0x14004a4f2
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004ac73
jmp	0x14004ac73
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004ab2a
jmp	0x14004ab2a
mov	edx, 0xf
jmp	0x14004a968
jmp	0x14004a968
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004aa19
jmp	0x14004aa19
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004a5e0
jmp	0x14004a5e0
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
movzx	edi, ax
jmp	0x14004a81b
jmp	0x14004a81b
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edi, ax
jmp	0x14004a91a
jmp	0x14004a91a
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
jmp	0x14004a707
jmp	0x14004a707
nop	word ptr [rax + rax]
mov	ebp, 0xffffffff
mov	byte ptr [rsp + 0x3c], 1
movzx	ecx, byte ptr [rsi + 0x20]
xor	r14d, r14d
mov	word ptr [rsp + 0x38], bp
xor	ebp, ebp
jmp	0x14004a4e8
jmp	0x14004a4e8
mov	r11d, 0xffffffff
movzx	ecx, byte ptr [rsi + 0x20]
mov	edi, 0xffff
mov	word ptr [rsp + 0x38], r11w
jmp	0x14004a40d
jmp	0x14004a40d
mov	byte ptr [rsp + 0x6c], 0
mov	byte ptr [rsp + 0x3c], al
jmp	0x14004a62c
jmp	0x14004a62c
movzx	eax, byte ptr [rsp + 0x3c]
mov	rdi, qword ptr [rsp + 0x78]
mov	byte ptr [rsp + 0x3c], 0
xor	r15d, r15d
mov	rcx, qword ptr [rsp + 0x70]
mov	byte ptr [rsp + 0x6c], al
jmp	0x14004a62c
jmp	0x14004a62c
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edi, eax
jmp	0x14004abc2
jmp	0x14004abc2
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004b0d0
jae	0x14004b0d0
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	ebp, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rsp + 0x30], rax
jmp	0x14004a72e
jmp	0x14004a72e
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	r8d, dword ptr [rsp + 0x38]
jmp	0x14004a6fb
jmp	0x14004a6fb
movzx	eax, byte ptr [rsp + 0x3c]
mov	byte ptr [rsp + 0x6e], 0
xor	r15d, r15d
mov	rdi, qword ptr [rsp + 0x78]
mov	rcx, qword ptr [rsp + 0x70]
mov	byte ptr [rsp + 0x3c], 0
mov	byte ptr [rsp + 0x6c], al
jmp	0x14004a62c
jmp	0x14004a62c
mov	rax, qword ptr [rbp]
mov	dword ptr [rsp + 0x3c], r8d
mov	rcx, rbp
mov	byte ptr [rsp + 0x30], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x3c]
movzx	edx, byte ptr [rsp + 0x30]
jmp	0x14004ae82
jmp	0x14004ae82
mov	rax, qword ptr [r12]
mov	dword ptr [rsp + 0x40], r8d
mov	rcx, r12
mov	byte ptr [rsp + 0x3c], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x40]
movzx	edx, byte ptr [rsp + 0x3c]
jmp	0x14004ae56
jmp	0x14004ae56
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x3c], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x3c]
movzx	edi, ax
jmp	0x14004ad6f
jmp	0x14004ad6f
mov	rcx, qword ptr [rsp + 0x30]
mov	dword ptr [rsp + 0x38], r8d
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
jmp	0x14004b00b
jmp	0x14004b00b
mov	rcx, qword ptr [rsp + 0x70]
jmp	0x14004a653
jmp	0x14004a653
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
movzx	edi, ax
jmp	0x14004a751
jmp	0x14004a751
mov	rcx, qword ptr [rsp + 0x58]
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x14004b139
jmp	0x14004b139
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
mov	rax, qword ptr [r8 + 8]
mov	rsi, qword ptr [r9 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [rsp + 0x110]
mov	r12, qword ptr [r8]
mov	r15d, eax
mov	qword ptr [rsp + 0xf0], rcx
lea	rcx, [rip + 0x6c295]
mov	rbx, r12
mov	qword ptr [rsp + 0x38], rsi
mov	qword ptr [rsp + 0x70], rax
mov	qword ptr [rsp + 0x40], rbp
call	0x140022a70
call	0x140022a70
mov	rdi, rax
mov	rax, qword ptr [r13 + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	r14, [rax + rdi*8]
mov	rsi, qword ptr [r14]
test	rsi, rsi
je	0x14004bc1e
je	0x14004bc1e
mov	r8d, dword ptr [r13 + 0x18]
mov	r13d, 8
and	r8d, 0x4a
cmp	r8d, 0x40
je	0x14004b1f7
je	0x14004b1f7
cmp	r8d, 8
mov	r13d, 0xa
mov	eax, 0x10
cmove	r13d, eax
cmp	r15w, -1
sete	dl
test	r12, r12
setne	r14b
and	r14b, dl
jne	0x14004bcce
jne	0x14004bcce
mov	r14d, edx
cmp	word ptr [rsp + 0x38], -1
sete	r12b
test	rbp, rbp
setne	dil
and	dil, r12b
jne	0x14004bcfc
jne	0x14004bcfc
mov	edi, r12d
cmp	r14b, dil
je	0x14004bb8d
je	0x14004bb8d
test	rbx, rbx
je	0x14004b245
je	0x14004b245
test	dl, dl
jne	0x14004bbf4
jne	0x14004bbf4
movzx	edi, r15w
movzx	eax, word ptr [rsi + 0x94]
movzx	ecx, byte ptr [rsi + 0x20]
cmp	ax, di
je	0x14004b538
je	0x14004b538
mov	byte ptr [rsp + 0x7f], 0
cmp	word ptr [rsi + 0x96], di
je	0x14004b538
je	0x14004b538
xor	r14d, r14d
xor	ebp, ebp
test	cl, cl
je	0x14004b282
je	0x14004b282
cmp	word ptr [rsi + 0x4a], di
je	0x14004b6b0
je	0x14004b6b0
cmp	word ptr [rsi + 0x48], di
je	0x14004b6b0
je	0x14004b6b0
cmp	word ptr [rsi + 0x9c], di
je	0x14004b5e0
je	0x14004b5e0
test	bpl, bpl
je	0x14004b6b0
je	0x14004b6b0
cmp	word ptr [rsi + 0x98], di
je	0x14004b2b8
je	0x14004b2b8
cmp	word ptr [rsi + 0x9a], di
jne	0x14004bd2c
jne	0x14004bd2c
test	r8d, r8d
sete	al
cmp	r13d, 0x10
sete	dl
or	al, dl
je	0x14004bd64
je	0x14004bd64
xor	r14d, r14d
xor	ebp, ebp
mov	r13d, 0x10
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004b628
jae	0x14004b628
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14004b650
jae	0x14004b650
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	dl
cmp	qword ptr [rsp + 0x40], 0
setne	r15b
and	r15b, r12b
jne	0x14004b734
jne	0x14004b734
mov	r15d, r12d
cmp	r15b, dl
jne	0x14004b670
jne	0x14004b670
mov	byte ptr [rsp + 0x4c], 1
movzx	ecx, byte ptr [rsi + 0x20]
mov	r15d, 0xffffffff
cmp	r13d, 0x10
je	0x14004b6bf
je	0x14004b6bf
movsxd	rax, r13d
mov	dword ptr [rsp + 0x58], r13d
mov	qword ptr [rsp + 0x50], rax
lea	rax, [rsp + 0x80]
mov	byte ptr [rsp + 0x90], 0
mov	qword ptr [rsp + 0x68], rax
lea	rax, [rsp + 0x90]
mov	qword ptr [rsp + 0x60], rax
mov	qword ptr [rsp + 0x80], rax
mov	qword ptr [rsp + 0x88], 0
test	cl, cl
jne	0x14004bb79
jne	0x14004bb79
mov	eax, 0xffff
xor	edx, edx
idiv	r13d
mov	dword ptr [rsp + 0x78], eax
movzx	eax, byte ptr [rsi + 0xc8]
mov	byte ptr [rsp + 0x7c], al
test	al, al
jne	0x14004b8d8
jne	0x14004b8d8
cmp	byte ptr [rsp + 0x4c], 0
mov	byte ptr [rsp + 0x7e], 0
jne	0x14004be3b
jne	0x14004be3b
movzx	eax, word ptr [rsp + 0x58]
xor	r11d, r11d
mov	word ptr [rsp + 0x38], r11w
add	eax, 0x30
mov	word ptr [rsp + 0x7c], ax
cmp	qword ptr [rsp + 0x50], 0xa
ja	0x14004b6d8
ja	0x14004b6d8
cmp	di, 0x2f
jbe	0x14004b7a0
jbe	0x14004b7a0
cmp	di, word ptr [rsp + 0x7c]
jae	0x14004b7a0
jae	0x14004b7a0
sub	edi, 0x30
movzx	eax, word ptr [rsp + 0x38]
cmp	word ptr [rsp + 0x78], ax
jb	0x14004b708
jb	0x14004b708
imul	eax, r13d
mov	edx, 0xffff
sub	edx, edi
movzx	ecx, ax
cmp	ecx, edx
setg	dl
add	eax, edi
or	byte ptr [rsp + 0x7e], dl
mov	rdx, qword ptr [rbx + 0x18]
mov	word ptr [rsp + 0x38], ax
mov	rax, qword ptr [rbx + 0x10]
add	r14d, 1
cmp	rax, rdx
jae	0x14004b71e
jae	0x14004b71e
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14004bdaa
jae	0x14004bdaa
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	r15b
cmp	qword ptr [rsp + 0x40], 0
setne	dil
and	dil, r12b
jne	0x14004b883
jne	0x14004b883
mov	edi, r12d
cmp	dil, r15b
jne	0x14004b770
jne	0x14004b770
mov	byte ptr [rsp + 0x7c], 1
mov	rdi, qword ptr [rsp + 0x88]
mov	r15d, 0xffffffff
mov	rcx, qword ptr [rsp + 0x80]
mov	rax, rcx
test	rdi, rdi
jne	0x14004b7c1
jne	0x14004b7c1
nop	dword ptr [rax]
cmp	bpl, 1
je	0x14004b83c
je	0x14004b83c
test	r14d, r14d
jne	0x14004b83c
jne	0x14004b83c
mov	rax, qword ptr [rsp + 0x120]
xor	r8d, r8d
mov	word ptr [rax], r8w
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x7c], 0
je	0x14004b4f2
je	0x14004b4f2
mov	rax, qword ptr [rsp + 0x118]
or	dword ptr [rax], 2
mov	rax, qword ptr [rsp + 0x70]
mov	rsi, qword ptr [rsp + 0xf0]
mov	ax, r15w
mov	qword ptr [rsi], rbx
mov	qword ptr [rsi + 8], rax
mov	rax, qword ptr [rsp + 0x60]
cmp	rcx, rax
je	0x14004b519
je	0x14004b519
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0xf0]
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
cmp	ax, di
sete	byte ptr [rsp + 0x7f]
test	cl, cl
jne	0x14004bba7
jne	0x14004bba7
cmp	word ptr [rsi + 0x48], di
je	0x14004b26f
je	0x14004b26f
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004beae
jae	0x14004beae
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14004bde4
jae	0x14004bde4
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	r14b
cmp	qword ptr [rsp + 0x40], 0
setne	bpl
and	bpl, r12b
jne	0x14004be77
jne	0x14004be77
mov	ebp, r12d
cmp	r14b, bpl
je	0x14004be00
je	0x14004be00
test	rbx, rbx
je	0x14004be19
je	0x14004be19
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004bf88
jae	0x14004bf88
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
movzx	ecx, byte ptr [rsi + 0x20]
mov	r15d, 0xffffffff
cmove	rbx, rax
jmp	0x14004b26f
jmp	0x14004b26f
nop	word ptr [rax + rax]
mov	eax, ebp
xor	eax, 1
cmp	r13d, 0xa
sete	dl
or	al, dl
je	0x14004b2a2
je	0x14004b2a2
cmp	r13d, 8
sete	bpl
test	r8d, r8d
sete	dl
or	bpl, dl
je	0x14004b878
je	0x14004b878
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
xor	r14d, r14d
mov	r13d, 8
cmp	rax, rdx
jb	0x14004b2e9
jb	0x14004b2e9
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	r8d, dword ptr [rsp + 0x38]
cmp	rax, rdx
jb	0x14004b2fa
jb	0x14004b2fa
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
jmp	0x14004b2fd
jmp	0x14004b2fd
nop	dword ptr [rax + rax]
mov	edi, 0xffff
test	rbx, rbx
je	0x14004b695
je	0x14004b695
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004bdb8
jae	0x14004bdb8
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
movzx	ecx, byte ptr [rsi + 0x20]
mov	r15d, 0xffffffff
test	bpl, bpl
jne	0x14004b274
jne	0x14004b274
nop	dword ptr [rax + rax]
mov	byte ptr [rsp + 0x4c], 0
cmp	r13d, 0x10
jne	0x14004b345
jne	0x14004b345
mov	qword ptr [rsp + 0x50], 0x16
mov	dword ptr [rsp + 0x58], 0x16
jmp	0x14004b352
jmp	0x14004b352
nop	dword ptr [rax]
lea	eax, [rdi - 0x30]
cmp	ax, 9
jbe	0x14004b3f8
jbe	0x14004b3f8
lea	eax, [rdi - 0x61]
cmp	ax, 5
ja	0x14004b8c0
ja	0x14004b8c0
movzx	eax, word ptr [rsp + 0x38]
sub	edi, 0x57
cmp	word ptr [rsp + 0x78], ax
jae	0x14004b40b
jae	0x14004b40b
nop	dword ptr [rax]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x7e], 1
cmp	rax, rdx
jb	0x14004b43e
jb	0x14004b43e
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x14004b446
jmp	0x14004b446
mov	rcx, qword ptr [rsp + 0x40]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004bcab
jae	0x14004bcab
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r15d, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x40]
mov	qword ptr [rsp + 0x40], rax
jmp	0x14004b323
jmp	0x14004b323
nop	dword ptr [rax]
test	rbx, rbx
je	0x14004bb40
je	0x14004bb40
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004bdd3
jae	0x14004bdd3
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
jmp	0x14004bb45
jmp	0x14004bb45
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x80]
mov	rdi, qword ptr [rsp + 0x88]
mov	byte ptr [rsp + 0x7c], 0
mov	rax, rcx
test	rdi, rdi
je	0x14004b4b0
je	0x14004b4b0
mov	rcx, qword ptr [rsp + 0x60]
mov	r13d, r14d
lea	r12, [rdi + 1]
cmp	rax, rcx
je	0x14004bd90
je	0x14004bd90
mov	rdx, qword ptr [rsp + 0x90]
cmp	rdx, r12
jb	0x14004bd3b
jb	0x14004bd3b
mov	byte ptr [rax + rdi], r13b
mov	rax, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x88], r12
mov	r8, qword ptr [rsp + 0x68]
mov	byte ptr [rax + rdi + 1], 0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
call	0x1400ae850
call	0x1400ae850
test	al, al
je	0x14004bbe1
je	0x14004bbe1
test	r14d, r14d
jne	0x14004b834
jne	0x14004b834
cmp	bpl, 1
je	0x14004b834
je	0x14004b834
cmp	qword ptr [rsp + 0x88], 0
je	0x14004bf78
je	0x14004bf78
mov	rcx, qword ptr [rsp + 0x80]
cmp	byte ptr [rsp + 0x4c], 0
jne	0x14004b4c3
jne	0x14004b4c3
cmp	byte ptr [rsp + 0x7e], 0
je	0x14004bbc0
je	0x14004bbc0
mov	rax, qword ptr [rsp + 0x120]
mov	edx, 0xffffffff
mov	word ptr [rax], dx
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
jmp	0x14004b4e0
jmp	0x14004b4e0
nop	dword ptr [rax]
add	r14d, 1
mov	ebp, eax
jmp	0x14004b2d8
jmp	0x14004b2d8
mov	rcx, qword ptr [rsp + 0x40]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004bd9a
jae	0x14004bd9a
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x40]
mov	qword ptr [rsp + 0x40], rax
jmp	0x14004b479
jmp	0x14004b479
nop	word ptr [rax + rax]
lea	eax, [rdi - 0x41]
cmp	ax, 5
ja	0x14004b7a0
ja	0x14004b7a0
sub	edi, 0x37
jmp	0x14004b3fb
jmp	0x14004b3fb
nop	dword ptr [rax]
cmp	byte ptr [rsp + 0x4c], 0
jne	0x14004bece
jne	0x14004bece
lea	rax, [rsi + 0x9c]
mov	byte ptr [rsp + 0x7e], 0
mov	qword ptr [rsp + 0x58], rax
xor	eax, eax
mov	word ptr [rsp + 0x38], ax
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x14004b912
je	0x14004b912
cmp	word ptr [rsi + 0x4a], di
je	0x14004ba90
je	0x14004ba90
mov	rcx, qword ptr [rsp + 0x50]
cmp	word ptr [rsi + 0x48], di
sete	al
test	rcx, rcx
sete	dl
or	al, dl
jne	0x14004b7a0
jne	0x14004b7a0
mov	rax, qword ptr [rsp + 0x58]
mov	rdx, rcx
jmp	0x14004b94e
jmp	0x14004b94e
nop	word ptr cs:[rax + rax]
add	rax, 2
sub	rdx, 1
je	0x14004ba70
je	0x14004ba70
cmp	di, word ptr [rax]
jne	0x14004b940
jne	0x14004b940
mov	rcx, qword ptr [rsp + 0x58]
sub	rax, rcx
movzx	ecx, word ptr [rsp + 0x38]
sar	rax, 1
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
cmp	word ptr [rsp + 0x78], cx
jb	0x14004ba08
jb	0x14004ba08
imul	ecx, r13d
movzx	r8d, cx
mov	ecx, 0xffff
sub	ecx, eax
cmp	r8d, ecx
setg	cl
add	eax, r8d
or	byte ptr [rsp + 0x7e], cl
add	r14d, 1
mov	word ptr [rsp + 0x38], ax
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004ba1e
jae	0x14004ba1e
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14004bd82
jae	0x14004bd82
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	r15b
cmp	qword ptr [rsp + 0x40], 0
setne	dil
and	dil, r12b
jne	0x14004baf0
jne	0x14004baf0
mov	edi, r12d
cmp	dil, r15b
jne	0x14004ba38
jne	0x14004ba38
mov	rdi, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x80]
mov	r15d, 0xffffffff
jmp	0x14004b49d
jmp	0x14004b49d
nop	dword ptr [rax]
movzx	eax, byte ptr [rsp + 0x7c]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x7e], al
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rdx
jb	0x14004b9a9
jb	0x14004b9a9
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x14004b9b1
jmp	0x14004b9b1
nop	dword ptr [rax]
test	rbx, rbx
je	0x14004bb30
je	0x14004bb30
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004be67
jae	0x14004be67
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
mov	r15d, 0xffffffff
jmp	0x14004b900
jmp	0x14004b900
nop	word ptr [rax + rax]
mov	byte ptr [rsp + 0x4c], 0
mov	rdi, qword ptr [rsp + 0x88]
mov	byte ptr [rsp + 0x7c], 0
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x14004b49d
jmp	0x14004b49d
nop	
mov	rdx, qword ptr [rsp + 0x80]
mov	rdi, qword ptr [rsp + 0x88]
mov	rcx, rdx
test	r14d, r14d
je	0x14004be2d
je	0x14004be2d
mov	rax, qword ptr [rsp + 0x60]
lea	r15, [rdi + 1]
cmp	rdx, rax
je	0x14004bc14
je	0x14004bc14
mov	rax, qword ptr [rsp + 0x90]
cmp	rax, r15
jb	0x14004bb50
jb	0x14004bb50
mov	byte ptr [rdx + rdi], r14b
mov	rax, qword ptr [rsp + 0x80]
xor	r14d, r14d
mov	qword ptr [rsp + 0x88], r15
mov	byte ptr [rax + r15], 0
jmp	0x14004b99c
jmp	0x14004b99c
mov	rcx, qword ptr [rsp + 0x40]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004bd72
jae	0x14004bd72
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x40]
mov	qword ptr [rsp + 0x40], rax
jmp	0x14004b9e4
jmp	0x14004b9e4
nop	word ptr [rax + rax]
mov	edi, 0xffffffff
jmp	0x14004ba5c
jmp	0x14004ba5c
nop	word ptr [rax + rax]
mov	edi, 0xffff
mov	r15d, 0xffffffff
jmp	0x14004b3d7
jmp	0x14004b3d7
mov	rcx, qword ptr [rsp + 0x68]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rdx, qword ptr [rsp + 0x80]
jmp	0x14004bacf
jmp	0x14004bacf
mov	rcx, qword ptr [rsp + 0x68]
mov	edx, 0x20
call	0x14009f7e0
call	0x14009f7e0
jmp	0x14004b390
jmp	0x14004b390
mov	byte ptr [rsp + 0x7f], 0
movzx	ecx, byte ptr [rsi + 0x20]
xor	edi, edi
xor	r14d, r14d
mov	byte ptr [rsp + 0x4c], 1
xor	ebp, ebp
jmp	0x14004b33b
jmp	0x14004b33b
cmp	word ptr [rsi + 0x4a], di
je	0x14004b26f
je	0x14004b26f
cmp	word ptr [rsi + 0x48], di
je	0x14004b26f
je	0x14004b26f
jmp	0x14004b552
jmp	0x14004b552
movzx	esi, word ptr [rsp + 0x38]
mov	eax, esi
neg	eax
cmp	byte ptr [rsp + 0x7f], 0
cmove	eax, esi
mov	rsi, qword ptr [rsp + 0x120]
mov	word ptr [rsi], ax
jmp	0x14004b4e0
jmp	0x14004b4e0
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
jmp	0x14004b81a
jmp	0x14004b81a
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004bf43
jae	0x14004bf43
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
jmp	0x14004b249
jmp	0x14004b249
mov	eax, 0xf
jmp	0x14004bac6
jmp	0x14004bac6
mov	ecx, 0xd0
call	0x1400b2c30
call	0x1400b2c30
mov	rsi, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x73337]
lea	rdx, [r13 + 0xd0]
mov	qword ptr [rsi + 0x10], 0
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rsi + 0x18], 0
mov	qword ptr [rsi], rax
mov	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
mov	qword ptr [rsi + 0x38], 0
mov	qword ptr [rsi + 0x40], 0
mov	dword ptr [rsi + 0x48], 0
mov	byte ptr [rsi + 0xc8], 0
call	0x1400942c0
call	0x1400942c0
mov	rcx, qword ptr [r13 + 0xd0]
mov	rdx, rsi
mov	r8, rdi
call	0x140099d30
call	0x140099d30
mov	rsi, qword ptr [r14]
jmp	0x14004b1d0
jmp	0x14004b1d0
mov	rcx, qword ptr [rsp + 0x40]
mov	dword ptr [rsp + 0x4c], r8d
mov	byte ptr [rsp + 0x38], dl
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x4c]
movzx	edx, byte ptr [rsp + 0x38]
jmp	0x14004b74a
jmp	0x14004b74a
mov	rax, qword ptr [r12 + 0x10]
cmp	rax, qword ptr [r12 + 0x18]
jae	0x14004bf21
jae	0x14004bf21
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	ebx, 0
mov	eax, 0
cmovne	r14d, eax
cmovne	rbx, r12
jmp	0x14004b212
jmp	0x14004b212
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x14004beff
jae	0x14004beff
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmovne	rax, rbp
mov	qword ptr [rsp + 0x40], rax
jmp	0x14004b22f
jmp	0x14004b22f
mov	byte ptr [rsp + 0x4c], 0
mov	ebp, 1
jmp	0x14004b33b
jmp	0x14004b33b
mov	rcx, qword ptr [rsp + 0x68]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0x80]
jmp	0x14004b7e7
jmp	0x14004b7e7
mov	byte ptr [rsp + 0x4c], al
mov	ebp, 1
jmp	0x14004b345
jmp	0x14004b345
mov	rcx, qword ptr [rsp + 0x40]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004bb06
jmp	0x14004bb06
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004b9bd
jmp	0x14004b9bd
mov	edx, 0xf
jmp	0x14004b7de
jmp	0x14004b7de
mov	rcx, qword ptr [rsp + 0x40]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004b899
jmp	0x14004b899
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004b452
jmp	0x14004b452
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
movzx	edi, ax
jmp	0x14004b68b
jmp	0x14004b68b
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edi, ax
jmp	0x14004b78a
jmp	0x14004b78a
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
jmp	0x14004b577
jmp	0x14004b577
nop	dword ptr [rax]
mov	byte ptr [rsp + 0x4c], 1
movzx	ecx, byte ptr [rsi + 0x20]
xor	r14d, r14d
xor	ebp, ebp
mov	r15d, 0xffffffff
jmp	0x14004b33b
jmp	0x14004b33b
movzx	ecx, byte ptr [rsi + 0x20]
mov	edi, 0xffff
mov	r15d, 0xffffffff
jmp	0x14004b26f
jmp	0x14004b26f
mov	byte ptr [rsp + 0x7c], 0
mov	byte ptr [rsp + 0x4c], al
jmp	0x14004b49d
jmp	0x14004b49d
movzx	eax, byte ptr [rsp + 0x4c]
xor	r9d, r9d
mov	byte ptr [rsp + 0x4c], 0
mov	word ptr [rsp + 0x38], r9w
mov	rdi, qword ptr [rsp + 0x88]
mov	byte ptr [rsp + 0x7c], al
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x14004b49d
jmp	0x14004b49d
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edi, eax
jmp	0x14004ba52
jmp	0x14004ba52
mov	rcx, qword ptr [rsp + 0x40]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004bf5e
jae	0x14004bf5e
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	ebp, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x40]
mov	qword ptr [rsp + 0x40], rax
jmp	0x14004b59e
jmp	0x14004b59e
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	r8d, dword ptr [rsp + 0x38]
jmp	0x14004b56b
jmp	0x14004b56b
movzx	eax, byte ptr [rsp + 0x4c]
xor	r10d, r10d
mov	byte ptr [rsp + 0x7e], 0
mov	word ptr [rsp + 0x38], r10w
mov	rdi, qword ptr [rsp + 0x88]
mov	byte ptr [rsp + 0x7c], al
mov	rcx, qword ptr [rsp + 0x80]
mov	byte ptr [rsp + 0x4c], 0
jmp	0x14004b49d
jmp	0x14004b49d
mov	rax, qword ptr [rbp]
mov	dword ptr [rsp + 0x40], r8d
mov	rcx, rbp
mov	byte ptr [rsp + 0x38], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x40]
movzx	edx, byte ptr [rsp + 0x38]
jmp	0x14004bd0d
jmp	0x14004bd0d
mov	rax, qword ptr [r12]
mov	dword ptr [rsp + 0x50], r8d
mov	rcx, r12
mov	byte ptr [rsp + 0x4c], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x50]
movzx	edx, byte ptr [rsp + 0x4c]
jmp	0x14004bce1
jmp	0x14004bce1
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
movzx	edi, ax
jmp	0x14004bc05
jmp	0x14004bc05
mov	rcx, qword ptr [rsp + 0x40]
mov	dword ptr [rsp + 0x38], r8d
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
jmp	0x14004be8d
jmp	0x14004be8d
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x14004b4c3
jmp	0x14004b4c3
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
movzx	edi, ax
jmp	0x14004b5c1
jmp	0x14004b5c1
mov	rcx, qword ptr [rsp + 0x68]
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x14004bfc9
jmp	0x14004bfc9
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xb8
mov	rax, qword ptr [r8 + 8]
mov	rsi, qword ptr [r9 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [rsp + 0x120]
mov	r12, qword ptr [r8]
mov	r15d, eax
mov	qword ptr [rsp + 0x100], rcx
lea	rcx, [rip + 0x6b405]
mov	rbx, r12
mov	qword ptr [rsp + 0x40], rsi
mov	qword ptr [rsp + 0x88], rax
mov	qword ptr [rsp + 0x38], rbp
call	0x140022a70
call	0x140022a70
mov	rdi, rax
mov	rax, qword ptr [r13 + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	r14, [rax + rdi*8]
mov	rsi, qword ptr [r14]
test	rsi, rsi
je	0x14004cac2
je	0x14004cac2
mov	r8d, dword ptr [r13 + 0x18]
mov	r13d, 8
and	r8d, 0x4a
cmp	r8d, 0x40
je	0x14004c08a
je	0x14004c08a
cmp	r8d, 8
mov	r13d, 0xa
mov	eax, 0x10
cmove	r13d, eax
cmp	r15w, -1
sete	dl
test	r12, r12
setne	dil
and	dil, dl
jne	0x14004cb72
jne	0x14004cb72
mov	edi, edx
cmp	word ptr [rsp + 0x40], -1
sete	r12b
test	rbp, rbp
setne	r14b
and	r14b, r12b
jne	0x14004cb9f
jne	0x14004cb9f
mov	r14d, r12d
cmp	r14b, dil
je	0x14004ca33
je	0x14004ca33
test	rbx, rbx
je	0x14004c0d7
je	0x14004c0d7
test	dl, dl
jne	0x14004ca98
jne	0x14004ca98
movzx	edi, r15w
movzx	eax, word ptr [rsi + 0x94]
movzx	ecx, byte ptr [rsi + 0x20]
cmp	ax, di
je	0x14004c3e0
je	0x14004c3e0
mov	byte ptr [rsp + 0x7f], 0
cmp	word ptr [rsi + 0x96], di
je	0x14004c3e0
je	0x14004c3e0
xor	r14d, r14d
xor	ebp, ebp
test	cl, cl
je	0x14004c114
je	0x14004c114
cmp	word ptr [rsi + 0x4a], di
je	0x14004c550
je	0x14004c550
cmp	word ptr [rsi + 0x48], di
je	0x14004c550
je	0x14004c550
cmp	word ptr [rsi + 0x9c], di
je	0x14004c488
je	0x14004c488
test	bpl, bpl
je	0x14004c550
je	0x14004c550
cmp	word ptr [rsi + 0x98], di
je	0x14004c14a
je	0x14004c14a
cmp	word ptr [rsi + 0x9a], di
jne	0x14004cbd0
jne	0x14004cbd0
test	r8d, r8d
sete	al
cmp	r13d, 0x10
sete	dl
or	al, dl
je	0x14004cc0b
je	0x14004cc0b
xor	r14d, r14d
xor	ebp, ebp
mov	r13d, 0x10
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004c4d0
jae	0x14004c4d0
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14004c4f8
jae	0x14004c4f8
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	dl
cmp	qword ptr [rsp + 0x38], 0
setne	r15b
and	r15b, r12b
jne	0x14004c5cc
jne	0x14004c5cc
mov	r15d, r12d
cmp	dl, r15b
jne	0x14004c510
jne	0x14004c510
mov	byte ptr [rsp + 0x40], 1
movzx	ecx, byte ptr [rsi + 0x20]
mov	r15d, 0xffffffff
cmp	r13d, 0x10
je	0x14004c55f
je	0x14004c55f
movsxd	rax, r13d
mov	dword ptr [rsp + 0x58], r13d
mov	qword ptr [rsp + 0x48], rax
lea	rax, [rsp + 0x90]
mov	byte ptr [rsp + 0xa0], 0
mov	qword ptr [rsp + 0x80], rax
lea	rax, [rsp + 0xa0]
mov	qword ptr [rsp + 0x70], rax
mov	qword ptr [rsp + 0x90], rax
mov	qword ptr [rsp + 0x98], 0
test	cl, cl
jne	0x14004ca1c
jne	0x14004ca1c
movzx	edx, byte ptr [rsp + 0x7f]
movsxd	rcx, r13d
movabs	rax, 0x7fffffffffffffff
mov	qword ptr [rsp + 0x60], rcx
add	rax, rdx
xor	edx, edx
mov	qword ptr [rsp + 0x68], rax
div	rcx
mov	qword ptr [rsp + 0x50], rax
movzx	eax, byte ptr [rsi + 0xc8]
mov	byte ptr [rsp + 0x7c], al
test	al, al
jne	0x14004c790
jne	0x14004c790
cmp	byte ptr [rsp + 0x40], 0
mov	byte ptr [rsp + 0x78], 0
jne	0x14004cce3
jne	0x14004cce3
movzx	eax, word ptr [rsp + 0x58]
xor	r13d, r13d
add	eax, 0x30
mov	word ptr [rsp + 0x7c], ax
cmp	qword ptr [rsp + 0x48], 0xa
ja	0x14004c578
ja	0x14004c578
cmp	di, 0x2f
jbe	0x14004c638
jbe	0x14004c638
cmp	di, word ptr [rsp + 0x7c]
jae	0x14004c638
jae	0x14004c638
sub	edi, 0x30
cmp	qword ptr [rsp + 0x50], r13
jb	0x14004c5a0
jb	0x14004c5a0
mov	rax, qword ptr [rsp + 0x60]
movsxd	rdi, edi
mov	rdx, qword ptr [rbx + 0x18]
imul	r13, rax
mov	rax, qword ptr [rsp + 0x68]
sub	rax, rdi
cmp	rax, r13
setb	al
or	byte ptr [rsp + 0x78], al
mov	rax, qword ptr [rbx + 0x10]
add	r13, rdi
add	r14d, 1
cmp	rax, rdx
jae	0x14004c5b6
jae	0x14004c5b6
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14004cc51
jae	0x14004cc51
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	r15b
cmp	qword ptr [rsp + 0x38], 0
setne	dil
and	dil, r12b
jne	0x14004c73b
jne	0x14004c73b
mov	edi, r12d
cmp	dil, r15b
jne	0x14004c608
jne	0x14004c608
mov	byte ptr [rsp + 0x7c], 1
mov	rdi, qword ptr [rsp + 0x98]
mov	r15d, 0xffffffff
mov	rcx, qword ptr [rsp + 0x90]
mov	rax, rcx
test	rdi, rdi
jne	0x14004c659
jne	0x14004c659
nop	dword ptr [rax]
test	r14d, r14d
jne	0x14004c6d9
jne	0x14004c6d9
cmp	bpl, 1
je	0x14004c6d9
je	0x14004c6d9
mov	rax, qword ptr [rsp + 0x130]
mov	qword ptr [rax], 0
mov	rax, qword ptr [rsp + 0x128]
mov	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x7c], 0
je	0x14004c39a
je	0x14004c39a
mov	rax, qword ptr [rsp + 0x128]
or	dword ptr [rax], 2
mov	rax, qword ptr [rsp + 0x88]
mov	rsi, qword ptr [rsp + 0x100]
mov	ax, r15w
mov	qword ptr [rsi], rbx
mov	qword ptr [rsi + 8], rax
mov	rax, qword ptr [rsp + 0x70]
cmp	rcx, rax
je	0x14004c3c4
je	0x14004c3c4
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0x100]
add	rsp, 0xb8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
cmp	ax, di
sete	byte ptr [rsp + 0x7f]
test	cl, cl
jne	0x14004ca4d
jne	0x14004ca4d
cmp	word ptr [rsi + 0x48], di
je	0x14004c101
je	0x14004c101
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004cd50
jae	0x14004cd50
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14004cc8b
jae	0x14004cc8b
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	r14b
cmp	qword ptr [rsp + 0x38], 0
setne	bpl
and	bpl, r12b
jne	0x14004cd19
jne	0x14004cd19
mov	ebp, r12d
cmp	bpl, r14b
je	0x14004cca8
je	0x14004cca8
test	rbx, rbx
je	0x14004ccc1
je	0x14004ccc1
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004ce28
jae	0x14004ce28
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
movzx	ecx, byte ptr [rsi + 0x20]
mov	r15d, 0xffffffff
cmove	rbx, rax
jmp	0x14004c101
jmp	0x14004c101
nop	word ptr [rax + rax]
mov	eax, ebp
xor	eax, 1
cmp	r13d, 0xa
sete	dl
or	al, dl
je	0x14004c134
je	0x14004c134
cmp	r13d, 8
sete	bpl
test	r8d, r8d
sete	dl
or	bpl, dl
je	0x14004c730
je	0x14004c730
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
xor	r14d, r14d
mov	r13d, 8
cmp	rax, rdx
jb	0x14004c17b
jb	0x14004c17b
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x40], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	r8d, dword ptr [rsp + 0x40]
cmp	rax, rdx
jb	0x14004c18c
jb	0x14004c18c
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x40], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x40]
jmp	0x14004c18f
jmp	0x14004c18f
mov	edi, 0xffff
test	rbx, rbx
je	0x14004c535
je	0x14004c535
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004cc5f
jae	0x14004cc5f
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
movzx	ecx, byte ptr [rsi + 0x20]
mov	r15d, 0xffffffff
test	bpl, bpl
jne	0x14004c106
jne	0x14004c106
nop	dword ptr [rax + rax]
mov	byte ptr [rsp + 0x40], 0
cmp	r13d, 0x10
jne	0x14004c1d7
jne	0x14004c1d7
mov	qword ptr [rsp + 0x48], 0x16
mov	dword ptr [rsp + 0x58], 0x16
jmp	0x14004c1e4
jmp	0x14004c1e4
nop	dword ptr [rax]
lea	eax, [rdi - 0x30]
cmp	ax, 9
jbe	0x14004c2a2
jbe	0x14004c2a2
lea	eax, [rdi - 0x61]
cmp	ax, 5
ja	0x14004c778
ja	0x14004c778
sub	edi, 0x57
cmp	qword ptr [rsp + 0x50], r13
jae	0x14004c2b0
jae	0x14004c2b0
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x78], 1
cmp	rax, rdx
jb	0x14004c2e6
jb	0x14004c2e6
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x14004c2ee
jmp	0x14004c2ee
mov	rcx, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004cb4f
jae	0x14004cb4f
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r15d, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x38]
mov	qword ptr [rsp + 0x38], rax
jmp	0x14004c1b5
jmp	0x14004c1b5
nop	dword ptr [rax]
test	rbx, rbx
je	0x14004c9e0
je	0x14004c9e0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004cc7a
jae	0x14004cc7a
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
jmp	0x14004c9e5
jmp	0x14004c9e5
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x90]
mov	rdi, qword ptr [rsp + 0x98]
mov	byte ptr [rsp + 0x7c], 0
mov	rax, rcx
test	rdi, rdi
je	0x14004c358
je	0x14004c358
mov	rcx, qword ptr [rsp + 0x70]
mov	byte ptr [rsp + 0x38], r14b
lea	r12, [rdi + 1]
cmp	rax, rcx
je	0x14004cc37
je	0x14004cc37
mov	rdx, qword ptr [rsp + 0xa0]
cmp	rdx, r12
jb	0x14004cbdf
jb	0x14004cbdf
mov	byte ptr [rax + rdi], r14b
mov	rax, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x98], r12
mov	r8, qword ptr [rsp + 0x80]
mov	byte ptr [rax + rdi + 1], 0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
call	0x1400ae850
call	0x1400ae850
test	al, al
je	0x14004ca85
je	0x14004ca85
test	r14d, r14d
jne	0x14004c6d1
jne	0x14004c6d1
cmp	bpl, 1
je	0x14004c6d1
je	0x14004c6d1
cmp	qword ptr [rsp + 0x98], 0
je	0x14004ce14
je	0x14004ce14
mov	rcx, qword ptr [rsp + 0x90]
cmp	byte ptr [rsp + 0x40], 0
jne	0x14004c36b
jne	0x14004c36b
cmp	byte ptr [rsp + 0x78], 0
je	0x14004ca66
je	0x14004ca66
cmp	byte ptr [rsp + 0x7f], 0
mov	rsi, qword ptr [rsp + 0x130]
movabs	rax, 0x7fffffffffffffff
movabs	rdx, 0x8000000000000000
cmovne	rax, rdx
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rsp + 0x128]
mov	dword ptr [rax], 4
jmp	0x14004c388
jmp	0x14004c388
nop	word ptr [rax + rax]
add	r14d, 1
mov	ebp, eax
jmp	0x14004c16a
jmp	0x14004c16a
mov	rcx, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004cc41
jae	0x14004cc41
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x38]
mov	qword ptr [rsp + 0x38], rax
jmp	0x14004c321
jmp	0x14004c321
nop	word ptr [rax + rax]
lea	eax, [rdi - 0x41]
cmp	ax, 5
ja	0x14004c638
ja	0x14004c638
sub	edi, 0x37
jmp	0x14004c2a5
jmp	0x14004c2a5
nop	dword ptr [rax]
cmp	byte ptr [rsp + 0x40], 0
jne	0x14004cd70
jne	0x14004cd70
lea	rax, [rsi + 0x9c]
mov	byte ptr [rsp + 0x78], 0
xor	r13d, r13d
mov	qword ptr [rsp + 0x58], rax
nop	
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x14004c7c2
je	0x14004c7c2
cmp	word ptr [rsi + 0x4a], di
je	0x14004c930
je	0x14004c930
mov	rcx, qword ptr [rsp + 0x48]
cmp	word ptr [rsi + 0x48], di
sete	al
test	rcx, rcx
sete	dl
or	al, dl
jne	0x14004c638
jne	0x14004c638
mov	rax, qword ptr [rsp + 0x58]
mov	rdx, rcx
jmp	0x14004c7fe
jmp	0x14004c7fe
nop	word ptr cs:[rax + rax]
add	rax, 2
sub	rdx, 1
je	0x14004c910
je	0x14004c910
cmp	di, word ptr [rax]
jne	0x14004c7f0
jne	0x14004c7f0
mov	rcx, qword ptr [rsp + 0x58]
sub	rax, rcx
sar	rax, 1
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
cmp	qword ptr [rsp + 0x50], r13
jb	0x14004c8b0
jb	0x14004c8b0
mov	rcx, qword ptr [rsp + 0x60]
mov	rdx, qword ptr [rsp + 0x68]
cdqe	
imul	r13, rcx
sub	rdx, rax
cmp	rdx, r13
setb	dl
or	byte ptr [rsp + 0x78], dl
add	r13, rax
add	r14d, 1
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004c8c6
jae	0x14004c8c6
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14004cc29
jae	0x14004cc29
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	r15b
cmp	qword ptr [rsp + 0x38], 0
setne	dil
and	dil, r12b
jne	0x14004c990
jne	0x14004c990
mov	edi, r12d
cmp	r15b, dil
jne	0x14004c8e0
jne	0x14004c8e0
mov	rdi, qword ptr [rsp + 0x98]
mov	rcx, qword ptr [rsp + 0x90]
mov	r15d, 0xffffffff
jmp	0x14004c345
jmp	0x14004c345
nop	
movzx	eax, byte ptr [rsp + 0x7c]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x78], al
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rdx
jb	0x14004c853
jb	0x14004c853
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x14004c85b
jmp	0x14004c85b
nop	dword ptr [rax]
test	rbx, rbx
je	0x14004c9d0
je	0x14004c9d0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004cd09
jae	0x14004cd09
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
mov	r15d, 0xffffffff
jmp	0x14004c7b0
jmp	0x14004c7b0
nop	
mov	byte ptr [rsp + 0x40], 0
mov	rdi, qword ptr [rsp + 0x98]
mov	byte ptr [rsp + 0x7c], 0
mov	rcx, qword ptr [rsp + 0x90]
jmp	0x14004c345
jmp	0x14004c345
nop	
mov	rdx, qword ptr [rsp + 0x90]
mov	rdi, qword ptr [rsp + 0x98]
mov	rcx, rdx
test	r14d, r14d
je	0x14004ccd5
je	0x14004ccd5
mov	rax, qword ptr [rsp + 0x70]
lea	r15, [rdi + 1]
cmp	rdx, rax
je	0x14004cab8
je	0x14004cab8
mov	rax, qword ptr [rsp + 0xa0]
cmp	rax, r15
jb	0x14004c9f0
jb	0x14004c9f0
mov	byte ptr [rdx + rdi], r14b
mov	rax, qword ptr [rsp + 0x90]
xor	r14d, r14d
mov	qword ptr [rsp + 0x98], r15
mov	byte ptr [rax + r15], 0
jmp	0x14004c846
jmp	0x14004c846
mov	rcx, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004cc19
jae	0x14004cc19
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x38]
mov	qword ptr [rsp + 0x38], rax
jmp	0x14004c88e
jmp	0x14004c88e
nop	word ptr [rax + rax]
mov	edi, 0xffffffff
jmp	0x14004c904
jmp	0x14004c904
nop	word ptr [rax + rax]
mov	edi, 0xffff
mov	r15d, 0xffffffff
jmp	0x14004c281
jmp	0x14004c281
mov	qword ptr [rsp + 0x20], 1
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	rcx, qword ptr [rsp + 0x80]
call	0x14009faf0
call	0x14009faf0
mov	rdx, qword ptr [rsp + 0x90]
jmp	0x14004c96f
jmp	0x14004c96f
mov	rcx, qword ptr [rsp + 0x80]
mov	edx, 0x20
call	0x14009f7e0
call	0x14009f7e0
jmp	0x14004c225
jmp	0x14004c225
mov	byte ptr [rsp + 0x7f], 0
movzx	ecx, byte ptr [rsi + 0x20]
xor	edi, edi
xor	r14d, r14d
mov	byte ptr [rsp + 0x40], 1
xor	ebp, ebp
jmp	0x14004c1cd
jmp	0x14004c1cd
cmp	word ptr [rsi + 0x4a], di
je	0x14004c101
je	0x14004c101
cmp	word ptr [rsi + 0x48], di
je	0x14004c101
je	0x14004c101
jmp	0x14004c3fa
jmp	0x14004c3fa
mov	rax, r13
mov	rsi, qword ptr [rsp + 0x130]
neg	rax
cmp	byte ptr [rsp + 0x7f], 0
cmove	rax, r13
mov	qword ptr [rsi], rax
jmp	0x14004c388
jmp	0x14004c388
mov	rax, qword ptr [rsp + 0x128]
mov	dword ptr [rax], 4
jmp	0x14004c6b7
jmp	0x14004c6b7
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004cddf
jae	0x14004cddf
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
jmp	0x14004c0db
jmp	0x14004c0db
mov	eax, 0xf
jmp	0x14004c966
jmp	0x14004c966
mov	ecx, 0xd0
call	0x1400b2c30
call	0x1400b2c30
mov	rsi, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x72493]
lea	rdx, [r13 + 0xd0]
mov	qword ptr [rsi + 0x10], 0
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rsi + 0x18], 0
mov	qword ptr [rsi], rax
mov	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
mov	qword ptr [rsi + 0x38], 0
mov	qword ptr [rsi + 0x40], 0
mov	dword ptr [rsi + 0x48], 0
mov	byte ptr [rsi + 0xc8], 0
call	0x1400942c0
call	0x1400942c0
mov	rcx, qword ptr [r13 + 0xd0]
mov	rdx, rsi
mov	r8, rdi
call	0x140099d30
call	0x140099d30
mov	rsi, qword ptr [r14]
jmp	0x14004c063
jmp	0x14004c063
mov	rcx, qword ptr [rsp + 0x38]
mov	dword ptr [rsp + 0x48], r8d
mov	byte ptr [rsp + 0x40], dl
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x48]
movzx	edx, byte ptr [rsp + 0x40]
jmp	0x14004c5e2
jmp	0x14004c5e2
mov	rax, qword ptr [r12 + 0x10]
cmp	rax, qword ptr [r12 + 0x18]
jae	0x14004cdbd
jae	0x14004cdbd
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	ebx, 0
mov	eax, 0
cmovne	edi, eax
cmovne	rbx, r12
jmp	0x14004c0a4
jmp	0x14004c0a4
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x14004cd9b
jae	0x14004cd9b
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r14d, eax
mov	eax, 0
cmovne	rax, rbp
mov	qword ptr [rsp + 0x38], rax
jmp	0x14004c0c1
jmp	0x14004c0c1
mov	byte ptr [rsp + 0x40], 0
mov	ebp, 1
jmp	0x14004c1cd
jmp	0x14004c1cd
mov	qword ptr [rsp + 0x20], 1
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	rcx, qword ptr [rsp + 0x80]
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0x90]
jmp	0x14004c681
jmp	0x14004c681
mov	byte ptr [rsp + 0x40], al
mov	ebp, 1
jmp	0x14004c1d7
jmp	0x14004c1d7
mov	rcx, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004c9a6
jmp	0x14004c9a6
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004c867
jmp	0x14004c867
mov	edx, 0xf
jmp	0x14004c678
jmp	0x14004c678
mov	rcx, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004c751
jmp	0x14004c751
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004c2fa
jmp	0x14004c2fa
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x40], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x40]
movzx	edi, ax
jmp	0x14004c52b
jmp	0x14004c52b
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edi, ax
jmp	0x14004c622
jmp	0x14004c622
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x40], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x40]
jmp	0x14004c41f
jmp	0x14004c41f
nop	dword ptr [rax + rax]
mov	byte ptr [rsp + 0x40], 1
movzx	ecx, byte ptr [rsi + 0x20]
xor	r14d, r14d
xor	ebp, ebp
mov	r15d, 0xffffffff
jmp	0x14004c1cd
jmp	0x14004c1cd
movzx	ecx, byte ptr [rsi + 0x20]
mov	edi, 0xffff
mov	r15d, 0xffffffff
jmp	0x14004c101
jmp	0x14004c101
mov	byte ptr [rsp + 0x7c], 0
mov	byte ptr [rsp + 0x40], al
jmp	0x14004c345
jmp	0x14004c345
movzx	eax, byte ptr [rsp + 0x40]
mov	rdi, qword ptr [rsp + 0x98]
mov	byte ptr [rsp + 0x40], 0
xor	r13d, r13d
mov	rcx, qword ptr [rsp + 0x90]
mov	byte ptr [rsp + 0x7c], al
jmp	0x14004c345
jmp	0x14004c345
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edi, eax
jmp	0x14004c8fa
jmp	0x14004c8fa
mov	rcx, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004cdfa
jae	0x14004cdfa
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	ebp, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x38]
mov	qword ptr [rsp + 0x38], rax
jmp	0x14004c446
jmp	0x14004c446
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x40], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	r8d, dword ptr [rsp + 0x40]
jmp	0x14004c413
jmp	0x14004c413
movzx	eax, byte ptr [rsp + 0x40]
mov	byte ptr [rsp + 0x78], 0
xor	r13d, r13d
mov	byte ptr [rsp + 0x40], 0
mov	rdi, qword ptr [rsp + 0x98]
mov	byte ptr [rsp + 0x7c], al
mov	rcx, qword ptr [rsp + 0x90]
jmp	0x14004c345
jmp	0x14004c345
mov	rax, qword ptr [rbp]
mov	dword ptr [rsp + 0x40], r8d
mov	rcx, rbp
mov	byte ptr [rsp + 0x38], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x40]
movzx	edx, byte ptr [rsp + 0x38]
jmp	0x14004cbb0
jmp	0x14004cbb0
mov	rax, qword ptr [r12]
mov	dword ptr [rsp + 0x78], r8d
mov	rcx, r12
mov	byte ptr [rsp + 0x48], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x78]
movzx	edx, byte ptr [rsp + 0x48]
jmp	0x14004cb85
jmp	0x14004cb85
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x40], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x40]
movzx	edi, ax
jmp	0x14004caa9
jmp	0x14004caa9
mov	rcx, qword ptr [rsp + 0x38]
mov	dword ptr [rsp + 0x40], r8d
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x40]
jmp	0x14004cd2f
jmp	0x14004cd2f
mov	rcx, qword ptr [rsp + 0x90]
jmp	0x14004c36b
jmp	0x14004c36b
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x40], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x40]
movzx	edi, ax
jmp	0x14004c469
jmp	0x14004c469
mov	rcx, qword ptr [rsp + 0x80]
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x14004ce6c
jmp	0x14004ce6c
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
mov	rax, qword ptr [r8 + 8]
mov	rsi, qword ptr [r9 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [rsp + 0x110]
mov	r12, qword ptr [r8]
mov	r15d, eax
mov	qword ptr [rsp + 0xf0], rcx
lea	rcx, [rip + 0x6a565]
mov	rbx, r12
mov	qword ptr [rsp + 0x38], rsi
mov	qword ptr [rsp + 0x70], rax
mov	qword ptr [rsp + 0x30], rbp
call	0x140022a70
call	0x140022a70
mov	rdi, rax
mov	rax, qword ptr [r13 + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	r14, [rax + rdi*8]
mov	rsi, qword ptr [r14]
test	rsi, rsi
je	0x14004d91c
je	0x14004d91c
mov	r8d, dword ptr [r13 + 0x18]
mov	r13d, 8
and	r8d, 0x4a
cmp	r8d, 0x40
je	0x14004cf27
je	0x14004cf27
cmp	r8d, 8
mov	r13d, 0xa
mov	eax, 0x10
cmove	r13d, eax
cmp	r15w, -1
sete	dl
test	r12, r12
setne	r14b
and	r14b, dl
jne	0x14004d9cc
jne	0x14004d9cc
mov	r14d, edx
cmp	word ptr [rsp + 0x38], -1
sete	r12b
test	rbp, rbp
setne	dil
and	dil, r12b
jne	0x14004d9fa
jne	0x14004d9fa
mov	edi, r12d
cmp	r14b, dil
je	0x14004d88d
je	0x14004d88d
test	rbx, rbx
je	0x14004cf75
je	0x14004cf75
test	dl, dl
jne	0x14004d8f2
jne	0x14004d8f2
movzx	edi, r15w
movzx	eax, word ptr [rsi + 0x94]
movzx	ecx, byte ptr [rsi + 0x20]
cmp	ax, di
je	0x14004d260
je	0x14004d260
mov	byte ptr [rsp + 0x7f], 0
cmp	word ptr [rsi + 0x96], di
je	0x14004d260
je	0x14004d260
xor	r14d, r14d
xor	ebp, ebp
test	cl, cl
je	0x14004cfb2
je	0x14004cfb2
cmp	word ptr [rsi + 0x4a], di
je	0x14004d3d0
je	0x14004d3d0
cmp	word ptr [rsi + 0x48], di
je	0x14004d3d0
je	0x14004d3d0
cmp	word ptr [rsi + 0x9c], di
je	0x14004d308
je	0x14004d308
test	bpl, bpl
je	0x14004d3d0
je	0x14004d3d0
cmp	word ptr [rsi + 0x98], di
je	0x14004cfe8
je	0x14004cfe8
cmp	word ptr [rsi + 0x9a], di
jne	0x14004da2a
jne	0x14004da2a
test	r8d, r8d
sete	al
cmp	r13d, 0x10
sete	dl
or	al, dl
je	0x14004da62
je	0x14004da62
xor	r14d, r14d
xor	ebp, ebp
mov	r13d, 0x10
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004d350
jae	0x14004d350
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14004d378
jae	0x14004d378
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	dl
cmp	qword ptr [rsp + 0x30], 0
setne	r15b
and	r15b, r12b
jne	0x14004d44c
jne	0x14004d44c
mov	r15d, r12d
cmp	r15b, dl
jne	0x14004d390
jne	0x14004d390
mov	byte ptr [rsp + 0x38], 1
movzx	ecx, byte ptr [rsi + 0x20]
mov	r15d, 0xffffffff
cmp	r13d, 0x10
je	0x14004d3df
je	0x14004d3df
movsxd	rax, r13d
mov	dword ptr [rsp + 0x50], r13d
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0x80]
mov	byte ptr [rsp + 0x90], 0
mov	qword ptr [rsp + 0x68], rax
lea	rax, [rsp + 0x90]
mov	qword ptr [rsp + 0x60], rax
mov	qword ptr [rsp + 0x80], rax
mov	qword ptr [rsp + 0x88], 0
test	cl, cl
jne	0x14004d879
jne	0x14004d879
movsxd	rcx, r13d
mov	rax, 0xffffffffffffffff
xor	edx, edx
div	rcx
mov	qword ptr [rsp + 0x58], rcx
mov	qword ptr [rsp + 0x48], rax
movzx	eax, byte ptr [rsi + 0xc8]
mov	byte ptr [rsp + 0x7c], al
test	al, al
jne	0x14004d5f0
jne	0x14004d5f0
cmp	byte ptr [rsp + 0x38], 0
mov	byte ptr [rsp + 0x78], 0
jne	0x14004db3b
jne	0x14004db3b
movzx	eax, word ptr [rsp + 0x50]
xor	r13d, r13d
add	eax, 0x30
mov	word ptr [rsp + 0x7c], ax
cmp	qword ptr [rsp + 0x40], 0xa
ja	0x14004d3f8
ja	0x14004d3f8
cmp	di, 0x2f
jbe	0x14004d4b8
jbe	0x14004d4b8
cmp	di, word ptr [rsp + 0x7c]
jae	0x14004d4b8
jae	0x14004d4b8
sub	edi, 0x30
cmp	qword ptr [rsp + 0x48], r13
jb	0x14004d420
jb	0x14004d420
mov	rax, qword ptr [rsp + 0x58]
imul	r13, rax
movsxd	rax, edi
add	rax, r13
setb	dl
mov	r13, rax
or	byte ptr [rsp + 0x78], dl
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
add	r14d, 1
cmp	rax, rdx
jae	0x14004d436
jae	0x14004d436
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14004daa8
jae	0x14004daa8
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	r15b
cmp	qword ptr [rsp + 0x30], 0
setne	dil
and	dil, r12b
jne	0x14004d59b
jne	0x14004d59b
mov	edi, r12d
cmp	dil, r15b
jne	0x14004d488
jne	0x14004d488
mov	byte ptr [rsp + 0x7c], 1
mov	rdi, qword ptr [rsp + 0x88]
mov	r15d, 0xffffffff
mov	rcx, qword ptr [rsp + 0x80]
mov	rax, rcx
test	rdi, rdi
jne	0x14004d4d9
jne	0x14004d4d9
nop	dword ptr [rax]
cmp	bpl, 1
je	0x14004d556
je	0x14004d556
test	r14d, r14d
jne	0x14004d556
jne	0x14004d556
mov	rax, qword ptr [rsp + 0x120]
mov	qword ptr [rax], 0
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x7c], 0
je	0x14004d21a
je	0x14004d21a
mov	rax, qword ptr [rsp + 0x118]
or	dword ptr [rax], 2
mov	rax, qword ptr [rsp + 0x70]
mov	rsi, qword ptr [rsp + 0xf0]
mov	ax, r15w
mov	qword ptr [rsi], rbx
mov	qword ptr [rsi + 8], rax
mov	rax, qword ptr [rsp + 0x60]
cmp	rcx, rax
je	0x14004d241
je	0x14004d241
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0xf0]
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
cmp	ax, di
sete	byte ptr [rsp + 0x7f]
test	cl, cl
jne	0x14004d8a7
jne	0x14004d8a7
cmp	word ptr [rsi + 0x48], di
je	0x14004cf9f
je	0x14004cf9f
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004dba8
jae	0x14004dba8
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14004dae2
jae	0x14004dae2
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	r14b
cmp	qword ptr [rsp + 0x30], 0
setne	bpl
and	bpl, r12b
jne	0x14004db71
jne	0x14004db71
mov	ebp, r12d
cmp	r14b, bpl
je	0x14004db00
je	0x14004db00
test	rbx, rbx
je	0x14004db19
je	0x14004db19
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004dc80
jae	0x14004dc80
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
movzx	ecx, byte ptr [rsi + 0x20]
mov	r15d, 0xffffffff
cmove	rbx, rax
jmp	0x14004cf9f
jmp	0x14004cf9f
nop	word ptr [rax + rax]
mov	eax, ebp
xor	eax, 1
cmp	r13d, 0xa
sete	dl
or	al, dl
je	0x14004cfd2
je	0x14004cfd2
cmp	r13d, 8
sete	bpl
test	r8d, r8d
sete	dl
or	bpl, dl
je	0x14004d590
je	0x14004d590
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
xor	r14d, r14d
mov	r13d, 8
cmp	rax, rdx
jb	0x14004d019
jb	0x14004d019
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	r8d, dword ptr [rsp + 0x38]
cmp	rax, rdx
jb	0x14004d02a
jb	0x14004d02a
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
jmp	0x14004d02d
jmp	0x14004d02d
mov	edi, 0xffff
test	rbx, rbx
je	0x14004d3b5
je	0x14004d3b5
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004dab6
jae	0x14004dab6
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
movzx	ecx, byte ptr [rsi + 0x20]
mov	r15d, 0xffffffff
test	bpl, bpl
jne	0x14004cfa4
jne	0x14004cfa4
nop	dword ptr [rax + rax]
mov	byte ptr [rsp + 0x38], 0
cmp	r13d, 0x10
jne	0x14004d075
jne	0x14004d075
mov	qword ptr [rsp + 0x40], 0x16
mov	dword ptr [rsp + 0x50], 0x16
jmp	0x14004d082
jmp	0x14004d082
nop	dword ptr [rax]
lea	eax, [rdi - 0x30]
cmp	ax, 9
jbe	0x14004d12d
jbe	0x14004d12d
lea	eax, [rdi - 0x61]
cmp	ax, 5
ja	0x14004d5d8
ja	0x14004d5d8
sub	edi, 0x57
cmp	qword ptr [rsp + 0x48], r13
jae	0x14004d13b
jae	0x14004d13b
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x78], 1
cmp	rax, rdx
jb	0x14004d169
jb	0x14004d169
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x14004d171
jmp	0x14004d171
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004d9a9
jae	0x14004d9a9
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r15d, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rsp + 0x30], rax
jmp	0x14004d053
jmp	0x14004d053
nop	dword ptr [rax]
test	rbx, rbx
je	0x14004d840
je	0x14004d840
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004dad1
jae	0x14004dad1
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
jmp	0x14004d845
jmp	0x14004d845
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x80]
mov	rdi, qword ptr [rsp + 0x88]
mov	byte ptr [rsp + 0x7c], 0
mov	rax, rcx
test	rdi, rdi
je	0x14004d1d8
je	0x14004d1d8
mov	rcx, qword ptr [rsp + 0x60]
mov	byte ptr [rsp + 0x30], r14b
lea	r12, [rdi + 1]
cmp	rax, rcx
je	0x14004da8e
je	0x14004da8e
mov	rdx, qword ptr [rsp + 0x90]
cmp	rdx, r12
jb	0x14004da39
jb	0x14004da39
mov	byte ptr [rax + rdi], r14b
mov	rax, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x88], r12
mov	r8, qword ptr [rsp + 0x68]
mov	byte ptr [rax + rdi + 1], 0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
call	0x1400ae850
call	0x1400ae850
test	al, al
je	0x14004d8df
je	0x14004d8df
test	r14d, r14d
jne	0x14004d54e
jne	0x14004d54e
cmp	bpl, 1
je	0x14004d54e
je	0x14004d54e
cmp	qword ptr [rsp + 0x88], 0
je	0x14004dc6c
je	0x14004dc6c
mov	rcx, qword ptr [rsp + 0x80]
cmp	byte ptr [rsp + 0x38], 0
jne	0x14004d1eb
jne	0x14004d1eb
cmp	byte ptr [rsp + 0x78], 0
je	0x14004d8c0
je	0x14004d8c0
mov	rax, qword ptr [rsp + 0x120]
mov	qword ptr [rax], 0xffffffffffffffff
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
jmp	0x14004d208
jmp	0x14004d208
nop	
add	r14d, 1
mov	ebp, eax
jmp	0x14004d008
jmp	0x14004d008
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004da98
jae	0x14004da98
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rsp + 0x30], rax
jmp	0x14004d1a4
jmp	0x14004d1a4
nop	word ptr [rax + rax]
lea	eax, [rdi - 0x41]
cmp	ax, 5
ja	0x14004d4b8
ja	0x14004d4b8
sub	edi, 0x37
jmp	0x14004d130
jmp	0x14004d130
nop	dword ptr [rax]
cmp	byte ptr [rsp + 0x38], 0
jne	0x14004dbc8
jne	0x14004dbc8
lea	rax, [rsi + 0x9c]
mov	byte ptr [rsp + 0x78], 0
xor	r13d, r13d
mov	qword ptr [rsp + 0x50], rax
nop	
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x14004d622
je	0x14004d622
cmp	word ptr [rsi + 0x4a], di
je	0x14004d790
je	0x14004d790
mov	rcx, qword ptr [rsp + 0x40]
cmp	word ptr [rsi + 0x48], di
sete	al
test	rcx, rcx
sete	dl
or	al, dl
jne	0x14004d4b8
jne	0x14004d4b8
mov	rax, qword ptr [rsp + 0x50]
mov	rdx, rcx
jmp	0x14004d65e
jmp	0x14004d65e
nop	word ptr cs:[rax + rax]
add	rax, 2
sub	rdx, 1
je	0x14004d770
je	0x14004d770
cmp	di, word ptr [rax]
jne	0x14004d650
jne	0x14004d650
mov	rcx, qword ptr [rsp + 0x50]
sub	rax, rcx
sar	rax, 1
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
cmp	qword ptr [rsp + 0x48], r13
jb	0x14004d710
jb	0x14004d710
mov	rcx, qword ptr [rsp + 0x58]
cdqe	
imul	r13, rcx
add	rax, r13
setb	dl
or	byte ptr [rsp + 0x78], dl
mov	r13, rax
add	r14d, 1
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004d726
jae	0x14004d726
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x14004da80
jae	0x14004da80
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmove	rbx, rax
sete	r15b
cmp	qword ptr [rsp + 0x30], 0
setne	dil
and	dil, r12b
jne	0x14004d7f0
jne	0x14004d7f0
mov	edi, r12d
cmp	dil, r15b
jne	0x14004d740
jne	0x14004d740
mov	rdi, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x80]
mov	r15d, 0xffffffff
jmp	0x14004d1c8
jmp	0x14004d1c8
nop	word ptr cs:[rax + rax]
movzx	eax, byte ptr [rsp + 0x7c]
mov	rdx, qword ptr [rbx + 0x18]
mov	byte ptr [rsp + 0x78], al
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rdx
jb	0x14004d6ab
jb	0x14004d6ab
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
jmp	0x14004d6b3
jmp	0x14004d6b3
nop	dword ptr [rax]
test	rbx, rbx
je	0x14004d830
je	0x14004d830
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004db61
jae	0x14004db61
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
mov	r15d, 0xffffffff
jmp	0x14004d610
jmp	0x14004d610
nop	
mov	byte ptr [rsp + 0x38], 0
mov	rdi, qword ptr [rsp + 0x88]
mov	byte ptr [rsp + 0x7c], 0
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x14004d1c8
jmp	0x14004d1c8
nop	
mov	rdx, qword ptr [rsp + 0x80]
mov	rdi, qword ptr [rsp + 0x88]
mov	rcx, rdx
test	r14d, r14d
je	0x14004db2d
je	0x14004db2d
mov	rax, qword ptr [rsp + 0x60]
lea	r15, [rdi + 1]
cmp	rdx, rax
je	0x14004d912
je	0x14004d912
mov	rax, qword ptr [rsp + 0x90]
cmp	rax, r15
jb	0x14004d850
jb	0x14004d850
mov	byte ptr [rdx + rdi], r14b
mov	rax, qword ptr [rsp + 0x80]
xor	r14d, r14d
mov	qword ptr [rsp + 0x88], r15
mov	byte ptr [rax + r15], 0
jmp	0x14004d69e
jmp	0x14004d69e
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004da70
jae	0x14004da70
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rsp + 0x30], rax
jmp	0x14004d6e6
jmp	0x14004d6e6
nop	word ptr [rax + rax]
mov	edi, 0xffffffff
jmp	0x14004d764
jmp	0x14004d764
nop	word ptr [rax + rax]
mov	edi, 0xffff
mov	r15d, 0xffffffff
jmp	0x14004d10c
jmp	0x14004d10c
mov	rcx, qword ptr [rsp + 0x68]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rdx, qword ptr [rsp + 0x80]
jmp	0x14004d7cf
jmp	0x14004d7cf
mov	rcx, qword ptr [rsp + 0x68]
mov	edx, 0x20
call	0x14009f7e0
call	0x14009f7e0
jmp	0x14004d0c0
jmp	0x14004d0c0
mov	byte ptr [rsp + 0x7f], 0
movzx	ecx, byte ptr [rsi + 0x20]
xor	edi, edi
xor	r14d, r14d
mov	byte ptr [rsp + 0x38], 1
xor	ebp, ebp
jmp	0x14004d06b
jmp	0x14004d06b
cmp	word ptr [rsi + 0x4a], di
je	0x14004cf9f
je	0x14004cf9f
cmp	word ptr [rsi + 0x48], di
je	0x14004cf9f
je	0x14004cf9f
jmp	0x14004d27a
jmp	0x14004d27a
mov	rax, r13
neg	rax
cmp	byte ptr [rsp + 0x7f], 0
cmovne	r13, rax
mov	rax, qword ptr [rsp + 0x120]
mov	qword ptr [rax], r13
jmp	0x14004d208
jmp	0x14004d208
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 4
jmp	0x14004d534
jmp	0x14004d534
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14004dc37
jae	0x14004dc37
movzx	edi, word ptr [rax]
xor	eax, eax
cmp	di, -1
cmove	rbx, rax
jmp	0x14004cf79
jmp	0x14004cf79
mov	eax, 0xf
jmp	0x14004d7c6
jmp	0x14004d7c6
mov	ecx, 0xd0
call	0x1400b2c30
call	0x1400b2c30
mov	rsi, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x71639]
lea	rdx, [r13 + 0xd0]
mov	qword ptr [rsi + 0x10], 0
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rsi + 0x18], 0
mov	qword ptr [rsi], rax
mov	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
mov	qword ptr [rsi + 0x38], 0
mov	qword ptr [rsi + 0x40], 0
mov	dword ptr [rsi + 0x48], 0
mov	byte ptr [rsi + 0xc8], 0
call	0x1400942c0
call	0x1400942c0
mov	rcx, qword ptr [r13 + 0xd0]
mov	rdx, rsi
mov	r8, rdi
call	0x140099d30
call	0x140099d30
mov	rsi, qword ptr [r14]
jmp	0x14004cf00
jmp	0x14004cf00
mov	rcx, qword ptr [rsp + 0x30]
mov	dword ptr [rsp + 0x40], r8d
mov	byte ptr [rsp + 0x38], dl
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x40]
movzx	edx, byte ptr [rsp + 0x38]
jmp	0x14004d462
jmp	0x14004d462
mov	rax, qword ptr [r12 + 0x10]
cmp	rax, qword ptr [r12 + 0x18]
jae	0x14004dc15
jae	0x14004dc15
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	ebx, 0
mov	eax, 0
cmovne	r14d, eax
cmovne	rbx, r12
jmp	0x14004cf42
jmp	0x14004cf42
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x14004dbf3
jae	0x14004dbf3
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edi, eax
mov	eax, 0
cmovne	rax, rbp
mov	qword ptr [rsp + 0x30], rax
jmp	0x14004cf5f
jmp	0x14004cf5f
mov	byte ptr [rsp + 0x38], 0
mov	ebp, 1
jmp	0x14004d06b
jmp	0x14004d06b
mov	rcx, qword ptr [rsp + 0x68]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rdi
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rsp + 0x80]
jmp	0x14004d501
jmp	0x14004d501
mov	byte ptr [rsp + 0x38], al
mov	ebp, 1
jmp	0x14004d075
jmp	0x14004d075
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004d806
jmp	0x14004d806
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004d6bf
jmp	0x14004d6bf
mov	edx, 0xf
jmp	0x14004d4f8
jmp	0x14004d4f8
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004d5b1
jmp	0x14004d5b1
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004d17d
jmp	0x14004d17d
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
movzx	edi, ax
jmp	0x14004d3ab
jmp	0x14004d3ab
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edi, ax
jmp	0x14004d4a2
jmp	0x14004d4a2
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
jmp	0x14004d29f
jmp	0x14004d29f
nop	word ptr [rax + rax]
mov	byte ptr [rsp + 0x38], 1
movzx	ecx, byte ptr [rsi + 0x20]
xor	r14d, r14d
xor	ebp, ebp
mov	r15d, 0xffffffff
jmp	0x14004d06b
jmp	0x14004d06b
movzx	ecx, byte ptr [rsi + 0x20]
mov	edi, 0xffff
mov	r15d, 0xffffffff
jmp	0x14004cf9f
jmp	0x14004cf9f
mov	byte ptr [rsp + 0x7c], 0
mov	byte ptr [rsp + 0x38], al
jmp	0x14004d1c8
jmp	0x14004d1c8
movzx	eax, byte ptr [rsp + 0x38]
mov	rdi, qword ptr [rsp + 0x88]
mov	byte ptr [rsp + 0x38], 0
xor	r13d, r13d
mov	rcx, qword ptr [rsp + 0x80]
mov	byte ptr [rsp + 0x7c], al
jmp	0x14004d1c8
jmp	0x14004d1c8
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edi, eax
jmp	0x14004d75a
jmp	0x14004d75a
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004dc52
jae	0x14004dc52
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	ebp, eax
mov	eax, 0
cmovne	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rsp + 0x30], rax
jmp	0x14004d2c6
jmp	0x14004d2c6
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	r8d, dword ptr [rsp + 0x38]
jmp	0x14004d293
jmp	0x14004d293
movzx	eax, byte ptr [rsp + 0x38]
mov	byte ptr [rsp + 0x78], 0
xor	r13d, r13d
mov	byte ptr [rsp + 0x38], 0
mov	rdi, qword ptr [rsp + 0x88]
mov	byte ptr [rsp + 0x7c], al
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x14004d1c8
jmp	0x14004d1c8
mov	rax, qword ptr [rbp]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbp
mov	byte ptr [rsp + 0x30], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
movzx	edx, byte ptr [rsp + 0x30]
jmp	0x14004da0b
jmp	0x14004da0b
mov	rax, qword ptr [r12]
mov	dword ptr [rsp + 0x78], r8d
mov	rcx, r12
mov	byte ptr [rsp + 0x40], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x78]
movzx	edx, byte ptr [rsp + 0x40]
jmp	0x14004d9df
jmp	0x14004d9df
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
movzx	edi, ax
jmp	0x14004d903
jmp	0x14004d903
mov	rcx, qword ptr [rsp + 0x30]
mov	dword ptr [rsp + 0x38], r8d
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
jmp	0x14004db87
jmp	0x14004db87
mov	rcx, qword ptr [rsp + 0x80]
jmp	0x14004d1eb
jmp	0x14004d1eb
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x38], r8d
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, dword ptr [rsp + 0x38]
movzx	edi, ax
jmp	0x14004d2e9
jmp	0x14004d2e9
mov	rcx, qword ptr [rsp + 0x68]
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x14004dcc1
jmp	0x14004dcc1
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x88
mov	rbx, qword ptr [rsp + 0xf0]
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	qword ptr [rsp + 0xd0], rcx
lea	rcx, [rbx + 0xd0]
movups	xmmword ptr [rsp + 0x60], xmm0
movups	xmmword ptr [rsp + 0x50], xmm1
call	0x14001d7e0
call	0x14001d7e0
mov	r15d, dword ptr [rbx + 0x18]
mov	rsi, rax
and	r15d, 0x4a
cmp	r15d, 0x40
je	0x14004e552
je	0x14004e552
mov	r13d, 0xa
cmp	r15d, 8
je	0x14004e09b
je	0x14004e09b
lea	r12, [rsp + 0x50]
lea	rbp, [rsp + 0x60]
mov	rdx, r12
mov	rcx, rbp
call	0x140020940
call	0x140020940
mov	edi, eax
test	al, al
jne	0x14004e57f
jne	0x14004e57f
mov	rcx, rbp
call	0x1400209f0
call	0x1400209f0
movzx	ebx, ax
movzx	eax, word ptr [rsi + 0x94]
cmp	ax, bx
je	0x14004e040
je	0x14004e040
cmp	word ptr [rsi + 0x96], bx
je	0x14004e040
je	0x14004e040
mov	byte ptr [rsp + 0x4f], 0
movzx	eax, byte ptr [rsi + 0x20]
xor	r14d, r14d
xor	ebp, ebp
test	al, al
je	0x14004ddbb
je	0x14004ddbb
cmp	word ptr [rsi + 0x4a], bx
je	0x14004e340
je	0x14004e340
cmp	word ptr [rsi + 0x48], bx
je	0x14004e340
je	0x14004e340
cmp	word ptr [rsi + 0x9c], bx
je	0x14004e0f0
je	0x14004e0f0
test	bpl, bpl
je	0x14004e340
je	0x14004e340
cmp	word ptr [rsi + 0x98], bx
je	0x14004ddf1
je	0x14004ddf1
cmp	word ptr [rsi + 0x9a], bx
jne	0x14004e61d
jne	0x14004e61d
test	r15d, r15d
sete	al
cmp	r13d, 0x10
sete	dl
or	al, dl
je	0x14004e637
je	0x14004e637
xor	r14d, r14d
xor	ebp, ebp
mov	r13d, 0x10
mov	rdi, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
cmp	rax, rdx
jae	0x14004e2b8
jae	0x14004e2b8
add	rax, 2
mov	r11d, 0xffffffff
mov	qword ptr [rdi + 0x10], rax
mov	word ptr [rsp + 0x68], r11w
cmp	rax, rdx
jae	0x14004e2e0
jae	0x14004e2e0
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14004e2f3
je	0x14004e2f3
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x50]
sete	dil
cmp	word ptr [rsp + 0x58], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x14004de76
je	0x14004de76
test	al, al
jne	0x14004e1a0
jne	0x14004e1a0
cmp	dl, dil
jne	0x14004e130
jne	0x14004e130
mov	edi, 1
cmp	r13d, 0x10
je	0x14004e0cc
je	0x14004e0cc
movsxd	rax, r13d
mov	dword ptr [rsp + 0x48], r13d
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x77]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x38], rax
call	0x140071d40
call	0x140071d40
cmp	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsp + 0x78], rax
jne	0x14004e55d
jne	0x14004e55d
mov	eax, 0xffffffff
xor	edx, edx
div	dword ptr [rsp + 0x48]
mov	dword ptr [rsp + 0x34], eax
movzx	eax, byte ptr [rsi + 0xc8]
mov	byte ptr [rsp + 0x4e], al
test	al, al
jne	0x14004e350
jne	0x14004e350
xor	r15d, r15d
test	dil, dil
jne	0x14004e6a7
jne	0x14004e6a7
xor	r12d, r12d
add	r13d, 0x30
cmp	qword ptr [rsp + 0x28], 0xa
ja	0x14004e180
ja	0x14004e180
cmp	bx, 0x2f
jbe	0x14004e228
jbe	0x14004e228
cmp	bx, r13w
jae	0x14004e228
jae	0x14004e228
sub	ebx, 0x30
cmp	dword ptr [rsp + 0x34], r12d
jb	0x14004e170
jb	0x14004e170
mov	eax, dword ptr [rsp + 0x48]
imul	r12d, eax
add	ebx, r12d
setb	al
mov	r12d, ebx
add	r14d, 1
or	r15d, eax
mov	rbx, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004e530
jae	0x14004e530
add	rax, 2
mov	r9d, 0xffffffff
mov	qword ptr [rbx + 0x10], rax
mov	word ptr [rsp + 0x68], r9w
cmp	rax, rdx
jae	0x14004e65c
jae	0x14004e65c
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14004e601
je	0x14004e601
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x50]
sete	bl
cmp	word ptr [rsp + 0x58], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x14004df9f
je	0x14004df9f
test	al, al
jne	0x14004e318
jne	0x14004e318
cmp	dl, bl
jne	0x14004e1d0
jne	0x14004e1d0
mov	byte ptr [rsp + 0x4e], 1
mov	rcx, qword ptr [rsp + 0x78]
cmp	qword ptr [rcx - 0x18], 0
jne	0x14004e23d
jne	0x14004e23d
nop	dword ptr [rax]
test	r14d, r14d
jne	0x14004e281
jne	0x14004e281
cmp	bpl, 1
je	0x14004e281
je	0x14004e281
mov	rax, qword ptr [rsp + 0x100]
mov	dword ptr [rax], 0
mov	rax, qword ptr [rsp + 0xf8]
mov	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x4e], 0
je	0x14004e001
je	0x14004e001
mov	rax, qword ptr [rsp + 0xf8]
or	dword ptr [rax], 2
movdqu	xmm2, xmmword ptr [rsp + 0x60]
mov	rax, qword ptr [rsp + 0xd0]
sub	rcx, 0x18
mov	rdx, qword ptr [rsp + 0x38]
movups	xmmword ptr [rax], xmm2
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xd0]
add	rsp, 0x88
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
cmp	ax, bx
movzx	eax, byte ptr [rsi + 0x20]
sete	byte ptr [rsp + 0x4f]
test	al, al
jne	0x14004e590
jne	0x14004e590
cmp	word ptr [rsi + 0x48], bx
je	0x14004dda8
je	0x14004dda8
mov	rcx, qword ptr [rsp + 0x60]
mov	edi, 0xffffffff
call	0x140092490
call	0x140092490
mov	rdx, r12
mov	rcx, rbp
mov	word ptr [rsp + 0x68], di
call	0x140020940
call	0x140020940
mov	edi, eax
test	al, al
jne	0x14004e675
jne	0x14004e675
mov	rcx, rbp
call	0x1400209f0
call	0x1400209f0
movzx	ebx, ax
movzx	eax, byte ptr [rsi + 0x20]
jmp	0x14004dda8
jmp	0x14004dda8
lea	r12, [rsp + 0x50]
lea	rbp, [rsp + 0x60]
mov	r13d, 0x10
mov	rdx, r12
mov	rcx, rbp
call	0x140020940
call	0x140020940
mov	edi, eax
test	al, al
je	0x14004dd77
je	0x14004dd77
mov	byte ptr [rsp + 0x4f], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
mov	dword ptr [rsp + 0x48], 0x10
mov	r13d, 0x16
mov	qword ptr [rsp + 0x28], 0x16
jmp	0x14004de9b
jmp	0x14004de9b
nop	dword ptr [rax + rax]
mov	eax, ebp
xor	eax, 1
cmp	r13d, 0xa
sete	dl
or	al, dl
je	0x14004dddb
je	0x14004dddb
cmp	r13d, 8
sete	bpl
test	r15d, r15d
sete	dl
or	bpl, dl
je	0x14004e308
je	0x14004e308
xor	r14d, r14d
mov	r13d, 8
jmp	0x14004de11
jmp	0x14004de11
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x60]
mov	ebx, 0xffff
test	rcx, rcx
je	0x14004e15a
je	0x14004e15a
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004e67f
jae	0x14004e67f
movzx	ebx, word ptr [rax]
cmp	bx, -1
je	0x14004e629
je	0x14004e629
test	bpl, bpl
je	0x14004e340
je	0x14004e340
movzx	eax, byte ptr [rsi + 0x20]
jmp	0x14004ddad
jmp	0x14004ddad
nop	dword ptr [rax]
mov	r15d, 1
jmp	0x14004df3b
jmp	0x14004df3b
nop	dword ptr [rax + rax]
lea	eax, [rbx - 0x30]
cmp	ax, 9
jbe	0x14004df15
jbe	0x14004df15
lea	eax, [rbx - 0x61]
cmp	ax, 5
ja	0x14004e210
ja	0x14004e210
sub	ebx, 0x57
jmp	0x14004df18
jmp	0x14004df18
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004e5f6
jae	0x14004e5f6
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14004e571
je	0x14004e571
cmp	ax, -1
sete	dl
jmp	0x14004de76
jmp	0x14004de76
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x60]
test	rcx, rcx
je	0x14004e228
je	0x14004e228
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004e68d
jae	0x14004e68d
movzx	ebx, word ptr [rax]
cmp	bx, -1
jne	0x14004def5
jne	0x14004def5
mov	qword ptr [rsp + 0x60], 0
cmp	qword ptr [rsp + 0x28], 0xa
jbe	0x14004e228
jbe	0x14004e228
nop	word ptr cs:[rax + rax]
lea	eax, [rbx - 0x41]
cmp	ax, 5
ja	0x14004e228
ja	0x14004e228
sub	ebx, 0x37
jmp	0x14004df18
jmp	0x14004df18
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x78]
mov	byte ptr [rsp + 0x4e], 0
cmp	qword ptr [rcx - 0x18], 0
je	0x14004dfc0
je	0x14004dfc0
lea	rbx, [rsp + 0x78]
movsx	edx, r14b
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	r8, rbx
call	0x1400ae880
call	0x1400ae880
test	al, al
je	0x14004e5c7
je	0x14004e5c7
mov	rcx, qword ptr [rsp + 0x78]
test	r14d, r14d
jne	0x14004e281
jne	0x14004e281
cmp	bpl, 1
je	0x14004e281
je	0x14004e281
cmp	qword ptr [rcx - 0x18], 0
je	0x14004dfd3
je	0x14004dfd3
test	dil, dil
jne	0x14004dfd3
jne	0x14004dfd3
test	r15b, r15b
je	0x14004e5a9
je	0x14004e5a9
mov	rax, qword ptr [rsp + 0x100]
mov	dword ptr [rax], 0xffffffff
mov	rax, qword ptr [rsp + 0xf8]
mov	dword ptr [rax], 4
jmp	0x14004dfef
jmp	0x14004dfef
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
mov	r10d, 0xffffffff
mov	word ptr [rsp + 0x68], r10w
cmp	rax, rdx
jb	0x14004de44
jb	0x14004de44
nop	
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	ax, -1
jne	0x14004de51
jne	0x14004de51
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004de51
jmp	0x14004de51
nop	dword ptr [rax]
add	r14d, 1
mov	ebp, eax
jmp	0x14004de11
jmp	0x14004de11
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004e66a
jae	0x14004e66a
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14004e60f
je	0x14004e60f
cmp	ax, -1
sete	dl
jmp	0x14004df9f
jmp	0x14004df9f
nop	
xor	edi, edi
jmp	0x14004de84
jmp	0x14004de84
nop	word ptr [rax + rax]
test	dil, dil
jne	0x14004e6c3
jne	0x14004e6c3
lea	rax, [rsp + 0x78]
lea	r13, [rsi + 0x9c]
xor	r15d, r15d
xor	r12d, r12d
mov	qword ptr [rsp + 0x40], rax
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x14004e382
je	0x14004e382
cmp	word ptr [rsi + 0x4a], bx
je	0x14004e4b0
je	0x14004e4b0
mov	rcx, qword ptr [rsp + 0x28]
cmp	word ptr [rsi + 0x48], bx
sete	al
test	rcx, rcx
sete	dl
or	al, dl
jne	0x14004e228
jne	0x14004e228
mov	rdx, rcx
mov	rax, r13
jmp	0x14004e3b6
jmp	0x14004e3b6
nop	dword ptr [rax]
add	rax, 2
sub	rdx, 1
je	0x14004e4a0
je	0x14004e4a0
cmp	bx, word ptr [rax]
jne	0x14004e3a8
jne	0x14004e3a8
sub	rax, r13
sar	rax, 1
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
cmp	dword ptr [rsp + 0x34], r12d
jb	0x14004e490
jb	0x14004e490
mov	ecx, dword ptr [rsp + 0x48]
imul	r12d, ecx
add	eax, r12d
setb	dl
mov	r12d, eax
add	r14d, 1
or	r15d, edx
mov	rbx, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004e500
jae	0x14004e500
add	rax, 2
mov	ecx, 0xffffffff
mov	qword ptr [rbx + 0x10], rax
mov	word ptr [rsp + 0x68], cx
cmp	rax, rdx
jae	0x14004e64e
jae	0x14004e64e
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14004e5e8
je	0x14004e5e8
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x50]
sete	bl
cmp	word ptr [rsp + 0x58], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x14004e44f
je	0x14004e44f
test	al, al
jne	0x14004e4d0
jne	0x14004e4d0
cmp	dl, bl
je	0x14004dfac
je	0x14004dfac
mov	rcx, qword ptr [rsp + 0x60]
test	rcx, rcx
je	0x14004e520
je	0x14004e520
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004e6b6
jae	0x14004e6b6
movzx	ebx, word ptr [rax]
cmp	bx, -1
jne	0x14004e370
jne	0x14004e370
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004e370
jmp	0x14004e370
nop	
movzx	r15d, byte ptr [rsp + 0x4e]
jmp	0x14004e3ed
jmp	0x14004e3ed
nop	dword ptr [rax + rax]
mov	byte ptr [rsp + 0x4e], 0
xor	edi, edi
jmp	0x14004dfac
jmp	0x14004dfac
nop	dword ptr [rax]
test	r14d, r14d
je	0x14004e69b
je	0x14004e69b
mov	rcx, qword ptr [rsp + 0x40]
movsx	edx, r14b
call	0x140073fa0
call	0x140073fa0
xor	r14d, r14d
jmp	0x14004e3ed
jmp	0x14004e3ed
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004e643
jae	0x14004e643
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14004e5da
je	0x14004e5da
cmp	ax, -1
sete	dl
jmp	0x14004e44f
jmp	0x14004e44f
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	eax, 0xffffffff
mov	rdx, qword ptr [rbx + 0x18]
mov	word ptr [rsp + 0x68], ax
mov	rax, qword ptr [rbx + 0x10]
jmp	0x14004e415
jmp	0x14004e415
mov	ebx, 0xffffffff
jmp	0x14004e370
jmp	0x14004e370
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	r8d, 0xffffffff
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	word ptr [rsp + 0x68], r8w
jmp	0x14004df65
jmp	0x14004df65
mov	r13d, 8
jmp	0x14004dd58
jmp	0x14004dd58
lea	rcx, [rsp + 0x78]
mov	edx, 0x20
call	0x140073cf0
call	0x140073cf0
jmp	0x14004dec0
jmp	0x14004dec0
mov	qword ptr [rsp + 0x50], 0
jmp	0x14004e1bb
jmp	0x14004e1bb
mov	byte ptr [rsp + 0x4f], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
jmp	0x14004de8e
jmp	0x14004de8e
cmp	word ptr [rsi + 0x4a], bx
je	0x14004dda8
je	0x14004dda8
cmp	word ptr [rsi + 0x48], bx
je	0x14004dda8
je	0x14004dda8
jmp	0x14004e05e
jmp	0x14004e05e
mov	eax, r12d
neg	eax
cmp	byte ptr [rsp + 0x4f], 0
cmovne	r12d, eax
mov	rax, qword ptr [rsp + 0x100]
mov	dword ptr [rax], r12d
jmp	0x14004dfef
jmp	0x14004dfef
mov	rax, qword ptr [rsp + 0xf8]
mov	dword ptr [rax], 4
jmp	0x14004e266
jmp	0x14004e266
mov	qword ptr [rsp + 0x50], 0
jmp	0x14004e4eb
jmp	0x14004e4eb
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004e42b
jmp	0x14004e42b
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004e1b1
jmp	0x14004e1b1
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004df7b
jmp	0x14004df7b
mov	qword ptr [rsp + 0x50], 0
jmp	0x14004e333
jmp	0x14004e333
xor	edi, edi
mov	ebp, 1
jmp	0x14004de84
jmp	0x14004de84
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004e15a
jmp	0x14004e15a
mov	edi, eax
mov	ebp, 1
jmp	0x14004de8e
jmp	0x14004de8e
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004e4e1
jmp	0x14004e4e1
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004e421
jmp	0x14004e421
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004df71
jmp	0x14004df71
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004e329
jmp	0x14004e329
xor	r14d, r14d
xor	ebp, ebp
jmp	0x14004de84
jmp	0x14004de84
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	ebx, ax
jmp	0x14004e150
jmp	0x14004e150
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	ebx, ax
jmp	0x14004e1eb
jmp	0x14004e1eb
mov	byte ptr [rsp + 0x4e], 0
mov	edi, eax
jmp	0x14004dfac
jmp	0x14004dfac
mov	byte ptr [rsp + 0x4e], dil
xor	r12d, r12d
xor	edi, edi
jmp	0x14004dfac
jmp	0x14004dfac
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebx, eax
jmp	0x14004e476
jmp	0x14004e476
mov	byte ptr [rsp + 0x4e], dil
xor	r12d, r12d
xor	r15d, r15d
xor	edi, edi
jmp	0x14004dfac
jmp	0x14004dfac
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x78]
mov	rdx, qword ptr [rsp + 0x38]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x88
mov	rbx, qword ptr [rsp + 0xf0]
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	qword ptr [rsp + 0xd0], rcx
lea	rcx, [rbx + 0xd0]
movups	xmmword ptr [rsp + 0x60], xmm0
movups	xmmword ptr [rsp + 0x50], xmm1
call	0x14001d7e0
call	0x14001d7e0
mov	r15d, dword ptr [rbx + 0x18]
mov	rsi, rax
and	r15d, 0x4a
cmp	r15d, 0x40
je	0x14004ef82
je	0x14004ef82
mov	r13d, 0xa
cmp	r15d, 8
je	0x14004eabb
je	0x14004eabb
lea	r12, [rsp + 0x50]
lea	rbp, [rsp + 0x60]
mov	rdx, r12
mov	rcx, rbp
call	0x140020940
call	0x140020940
mov	edi, eax
test	al, al
jne	0x14004efaf
jne	0x14004efaf
mov	rcx, rbp
call	0x1400209f0
call	0x1400209f0
movzx	ebx, ax
movzx	eax, word ptr [rsi + 0x94]
cmp	ax, bx
je	0x14004ea60
je	0x14004ea60
cmp	word ptr [rsi + 0x96], bx
je	0x14004ea60
je	0x14004ea60
mov	byte ptr [rsp + 0x3c], 0
movzx	eax, byte ptr [rsi + 0x20]
xor	r14d, r14d
xor	ebp, ebp
test	al, al
je	0x14004e7cb
je	0x14004e7cb
cmp	word ptr [rsi + 0x4a], bx
je	0x14004ed70
je	0x14004ed70
cmp	word ptr [rsi + 0x48], bx
je	0x14004ed70
je	0x14004ed70
cmp	word ptr [rsi + 0x9c], bx
je	0x14004eb10
je	0x14004eb10
test	bpl, bpl
je	0x14004ed70
je	0x14004ed70
cmp	word ptr [rsi + 0x98], bx
je	0x14004e801
je	0x14004e801
cmp	word ptr [rsi + 0x9a], bx
jne	0x14004f04c
jne	0x14004f04c
test	r15d, r15d
sete	al
cmp	r13d, 0x10
sete	dl
or	al, dl
je	0x14004f066
je	0x14004f066
xor	r14d, r14d
xor	ebp, ebp
mov	r13d, 0x10
mov	rdi, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
cmp	rax, rdx
jae	0x14004ece0
jae	0x14004ece0
add	rax, 2
mov	r11d, 0xffffffff
mov	qword ptr [rdi + 0x10], rax
mov	word ptr [rsp + 0x68], r11w
cmp	rax, rdx
jae	0x14004ed10
jae	0x14004ed10
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14004ed23
je	0x14004ed23
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x50]
sete	dil
cmp	word ptr [rsp + 0x58], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x14004e886
je	0x14004e886
test	al, al
jne	0x14004ebc0
jne	0x14004ebc0
cmp	dil, dl
jne	0x14004eb50
jne	0x14004eb50
mov	edi, 1
cmp	r13d, 0x10
je	0x14004eaec
je	0x14004eaec
movsxd	rax, r13d
mov	dword ptr [rsp + 0x34], r13d
mov	qword ptr [rsp + 0x20], rax
lea	rax, [rsp + 0x77]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x40], rax
call	0x140071d40
call	0x140071d40
cmp	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsp + 0x78], rax
jne	0x14004ef8d
jne	0x14004ef8d
movzx	eax, byte ptr [rsp + 0x3c]
xor	edx, edx
add	eax, 0x7fffffff
mov	dword ptr [rsp + 0x38], eax
div	dword ptr [rsp + 0x34]
mov	dword ptr [rsp + 0x30], eax
movzx	eax, byte ptr [rsi + 0xc8]
mov	byte ptr [rsp + 0x2f], al
test	al, al
jne	0x14004ed80
jne	0x14004ed80
xor	r15d, r15d
test	dil, dil
jne	0x14004f0d6
jne	0x14004f0d6
xor	r12d, r12d
add	r13d, 0x30
cmp	qword ptr [rsp + 0x20], 0xa
ja	0x14004eba0
ja	0x14004eba0
cmp	bx, 0x2f
jbe	0x14004ec48
jbe	0x14004ec48
cmp	bx, r13w
jae	0x14004ec48
jae	0x14004ec48
sub	ebx, 0x30
cmp	dword ptr [rsp + 0x30], r12d
jb	0x14004eb90
jb	0x14004eb90
mov	eax, dword ptr [rsp + 0x34]
imul	r12d, eax
mov	eax, dword ptr [rsp + 0x38]
sub	eax, ebx
cmp	eax, r12d
setb	al
add	r12d, ebx
add	r14d, 1
or	r15d, eax
mov	rbx, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004ef60
jae	0x14004ef60
add	rax, 2
mov	r9d, 0xffffffff
mov	qword ptr [rbx + 0x10], rax
mov	word ptr [rsp + 0x68], r9w
cmp	rax, rdx
jae	0x14004f08b
jae	0x14004f08b
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14004f030
je	0x14004f030
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x50]
sete	bl
cmp	word ptr [rsp + 0x58], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x14004e9be
je	0x14004e9be
test	al, al
jne	0x14004ed48
jne	0x14004ed48
cmp	dl, bl
jne	0x14004ebf0
jne	0x14004ebf0
mov	byte ptr [rsp + 0x2f], 1
mov	rcx, qword ptr [rsp + 0x78]
cmp	qword ptr [rcx - 0x18], 0
jne	0x14004ec5d
jne	0x14004ec5d
nop	dword ptr [rax + rax]
test	r14d, r14d
jne	0x14004eca1
jne	0x14004eca1
cmp	bpl, 1
je	0x14004eca1
je	0x14004eca1
mov	rax, qword ptr [rsp + 0x100]
mov	dword ptr [rax], 0
mov	rax, qword ptr [rsp + 0xf8]
mov	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x2f], 0
je	0x14004ea21
je	0x14004ea21
mov	rax, qword ptr [rsp + 0xf8]
or	dword ptr [rax], 2
movdqu	xmm2, xmmword ptr [rsp + 0x60]
mov	rax, qword ptr [rsp + 0xd0]
sub	rcx, 0x18
mov	rdx, qword ptr [rsp + 0x40]
movups	xmmword ptr [rax], xmm2
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xd0]
add	rsp, 0x88
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
cmp	ax, bx
movzx	eax, byte ptr [rsi + 0x20]
sete	byte ptr [rsp + 0x3c]
test	al, al
jne	0x14004efc0
jne	0x14004efc0
cmp	word ptr [rsi + 0x48], bx
je	0x14004e7b8
je	0x14004e7b8
mov	rcx, qword ptr [rsp + 0x60]
mov	edi, 0xffffffff
call	0x140092490
call	0x140092490
mov	rdx, r12
mov	rcx, rbp
mov	word ptr [rsp + 0x68], di
call	0x140020940
call	0x140020940
mov	edi, eax
test	al, al
jne	0x14004f0a4
jne	0x14004f0a4
mov	rcx, rbp
call	0x1400209f0
call	0x1400209f0
movzx	ebx, ax
movzx	eax, byte ptr [rsi + 0x20]
jmp	0x14004e7b8
jmp	0x14004e7b8
lea	r12, [rsp + 0x50]
lea	rbp, [rsp + 0x60]
mov	r13d, 0x10
mov	rdx, r12
mov	rcx, rbp
call	0x140020940
call	0x140020940
mov	edi, eax
test	al, al
je	0x14004e787
je	0x14004e787
mov	byte ptr [rsp + 0x3c], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
mov	dword ptr [rsp + 0x34], 0x10
mov	r13d, 0x16
mov	qword ptr [rsp + 0x20], 0x16
jmp	0x14004e8ab
jmp	0x14004e8ab
nop	dword ptr [rax + rax]
mov	eax, ebp
xor	eax, 1
cmp	r13d, 0xa
sete	dl
or	al, dl
je	0x14004e7eb
je	0x14004e7eb
cmp	r13d, 8
sete	bpl
test	r15d, r15d
sete	dl
or	bpl, dl
je	0x14004ed38
je	0x14004ed38
xor	r14d, r14d
mov	r13d, 8
jmp	0x14004e821
jmp	0x14004e821
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x60]
mov	ebx, 0xffff
test	rcx, rcx
je	0x14004eb7a
je	0x14004eb7a
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004f0ae
jae	0x14004f0ae
movzx	ebx, word ptr [rax]
cmp	bx, -1
je	0x14004f058
je	0x14004f058
test	bpl, bpl
je	0x14004ed70
je	0x14004ed70
movzx	eax, byte ptr [rsi + 0x20]
jmp	0x14004e7bd
jmp	0x14004e7bd
nop	dword ptr [rax]
mov	r15d, 1
jmp	0x14004e95a
jmp	0x14004e95a
nop	dword ptr [rax + rax]
lea	eax, [rbx - 0x30]
cmp	ax, 9
jbe	0x14004e92e
jbe	0x14004e92e
lea	eax, [rbx - 0x61]
cmp	ax, 5
ja	0x14004ec30
ja	0x14004ec30
sub	ebx, 0x57
jmp	0x14004e931
jmp	0x14004e931
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004f025
jae	0x14004f025
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14004efa1
je	0x14004efa1
cmp	ax, -1
sete	dl
jmp	0x14004e886
jmp	0x14004e886
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x60]
test	rcx, rcx
je	0x14004ec48
je	0x14004ec48
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004f0bc
jae	0x14004f0bc
movzx	ebx, word ptr [rax]
cmp	bx, -1
jne	0x14004e90e
jne	0x14004e90e
mov	qword ptr [rsp + 0x60], 0
cmp	qword ptr [rsp + 0x20], 0xa
jbe	0x14004ec48
jbe	0x14004ec48
nop	word ptr cs:[rax + rax]
lea	eax, [rbx - 0x41]
cmp	ax, 5
ja	0x14004ec48
ja	0x14004ec48
sub	ebx, 0x37
jmp	0x14004e931
jmp	0x14004e931
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x78]
mov	byte ptr [rsp + 0x2f], 0
cmp	qword ptr [rcx - 0x18], 0
je	0x14004e9e0
je	0x14004e9e0
lea	rbx, [rsp + 0x78]
movsx	edx, r14b
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	r8, rbx
call	0x1400ae880
call	0x1400ae880
test	al, al
je	0x14004eff6
je	0x14004eff6
mov	rcx, qword ptr [rsp + 0x78]
test	r14d, r14d
jne	0x14004eca1
jne	0x14004eca1
cmp	bpl, 1
je	0x14004eca1
je	0x14004eca1
cmp	qword ptr [rcx - 0x18], 0
je	0x14004e9f3
je	0x14004e9f3
test	dil, dil
jne	0x14004e9f3
jne	0x14004e9f3
test	r15b, r15b
je	0x14004efd9
je	0x14004efd9
mov	eax, dword ptr [rsp + 0x3c]
mov	rdi, qword ptr [rsp + 0x100]
and	eax, 1
add	eax, 0x7fffffff
mov	dword ptr [rdi], eax
mov	rax, qword ptr [rsp + 0xf8]
mov	dword ptr [rax], 4
jmp	0x14004ea0f
jmp	0x14004ea0f
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
mov	r10d, 0xffffffff
mov	word ptr [rsp + 0x68], r10w
cmp	rax, rdx
jb	0x14004e854
jb	0x14004e854
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	ax, -1
jne	0x14004e861
jne	0x14004e861
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004e861
jmp	0x14004e861
nop	dword ptr [rax]
add	r14d, 1
mov	ebp, eax
jmp	0x14004e821
jmp	0x14004e821
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004f099
jae	0x14004f099
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14004f03e
je	0x14004f03e
cmp	ax, -1
sete	dl
jmp	0x14004e9be
jmp	0x14004e9be
nop	
xor	edi, edi
jmp	0x14004e894
jmp	0x14004e894
nop	word ptr [rax + rax]
test	dil, dil
jne	0x14004f0f2
jne	0x14004f0f2
lea	rax, [rsp + 0x78]
lea	r13, [rsi + 0x9c]
xor	r15d, r15d
xor	r12d, r12d
mov	qword ptr [rsp + 0x48], rax
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x14004edb2
je	0x14004edb2
cmp	word ptr [rsi + 0x4a], bx
je	0x14004eee0
je	0x14004eee0
mov	rcx, qword ptr [rsp + 0x20]
cmp	word ptr [rsi + 0x48], bx
sete	al
test	rcx, rcx
sete	dl
or	al, dl
jne	0x14004ec48
jne	0x14004ec48
mov	rdx, rcx
mov	rax, r13
jmp	0x14004ede6
jmp	0x14004ede6
nop	dword ptr [rax]
add	rax, 2
sub	rdx, 1
je	0x14004eed0
je	0x14004eed0
cmp	bx, word ptr [rax]
jne	0x14004edd8
jne	0x14004edd8
sub	rax, r13
sar	rax, 1
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
cmp	dword ptr [rsp + 0x30], r12d
jb	0x14004eec0
jb	0x14004eec0
mov	ecx, dword ptr [rsp + 0x34]
mov	edx, dword ptr [rsp + 0x38]
imul	r12d, ecx
sub	edx, eax
cmp	edx, r12d
setb	dl
add	r12d, eax
add	r14d, 1
or	r15d, edx
mov	rbx, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004ef30
jae	0x14004ef30
add	rax, 2
mov	ecx, 0xffffffff
mov	qword ptr [rbx + 0x10], rax
mov	word ptr [rsp + 0x68], cx
cmp	rax, rdx
jae	0x14004f07d
jae	0x14004f07d
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14004f017
je	0x14004f017
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x50]
sete	bl
cmp	word ptr [rsp + 0x58], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x14004ee81
je	0x14004ee81
test	al, al
jne	0x14004ef00
jne	0x14004ef00
cmp	dl, bl
je	0x14004e9cb
je	0x14004e9cb
mov	rcx, qword ptr [rsp + 0x60]
test	rcx, rcx
je	0x14004ef50
je	0x14004ef50
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004f0e5
jae	0x14004f0e5
movzx	ebx, word ptr [rax]
cmp	bx, -1
jne	0x14004eda0
jne	0x14004eda0
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004eda0
jmp	0x14004eda0
movzx	r15d, byte ptr [rsp + 0x2f]
jmp	0x14004ee23
jmp	0x14004ee23
nop	dword ptr [rax + rax]
mov	byte ptr [rsp + 0x2f], 0
xor	edi, edi
jmp	0x14004e9cb
jmp	0x14004e9cb
nop	dword ptr [rax]
test	r14d, r14d
je	0x14004f0ca
je	0x14004f0ca
mov	rcx, qword ptr [rsp + 0x48]
movsx	edx, r14b
call	0x140073fa0
call	0x140073fa0
xor	r14d, r14d
jmp	0x14004ee23
jmp	0x14004ee23
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004f072
jae	0x14004f072
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14004f009
je	0x14004f009
cmp	ax, -1
sete	dl
jmp	0x14004ee81
jmp	0x14004ee81
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	eax, 0xffffffff
mov	rdx, qword ptr [rbx + 0x18]
mov	word ptr [rsp + 0x68], ax
mov	rax, qword ptr [rbx + 0x10]
jmp	0x14004ee4b
jmp	0x14004ee4b
mov	ebx, 0xffffffff
jmp	0x14004eda0
jmp	0x14004eda0
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	r8d, 0xffffffff
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	word ptr [rsp + 0x68], r8w
jmp	0x14004e984
jmp	0x14004e984
mov	r13d, 8
jmp	0x14004e768
jmp	0x14004e768
lea	rcx, [rsp + 0x78]
mov	edx, 0x20
call	0x140073cf0
call	0x140073cf0
jmp	0x14004e8d0
jmp	0x14004e8d0
mov	qword ptr [rsp + 0x50], 0
jmp	0x14004ebdb
jmp	0x14004ebdb
mov	byte ptr [rsp + 0x3c], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
jmp	0x14004e89e
jmp	0x14004e89e
cmp	word ptr [rsi + 0x4a], bx
je	0x14004e7b8
je	0x14004e7b8
cmp	word ptr [rsi + 0x48], bx
je	0x14004e7b8
je	0x14004e7b8
jmp	0x14004ea7e
jmp	0x14004ea7e
mov	eax, r12d
mov	rdi, qword ptr [rsp + 0x100]
neg	eax
cmp	byte ptr [rsp + 0x3c], 0
cmove	eax, r12d
mov	dword ptr [rdi], eax
jmp	0x14004ea0f
jmp	0x14004ea0f
mov	rax, qword ptr [rsp + 0xf8]
mov	dword ptr [rax], 4
jmp	0x14004ec86
jmp	0x14004ec86
mov	qword ptr [rsp + 0x50], 0
jmp	0x14004ef1b
jmp	0x14004ef1b
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004ee61
jmp	0x14004ee61
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004ebd1
jmp	0x14004ebd1
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004e99a
jmp	0x14004e99a
mov	qword ptr [rsp + 0x50], 0
jmp	0x14004ed63
jmp	0x14004ed63
xor	edi, edi
mov	ebp, 1
jmp	0x14004e894
jmp	0x14004e894
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004eb7a
jmp	0x14004eb7a
mov	edi, eax
mov	ebp, 1
jmp	0x14004e89e
jmp	0x14004e89e
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004ef11
jmp	0x14004ef11
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004ee57
jmp	0x14004ee57
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004e990
jmp	0x14004e990
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004ed59
jmp	0x14004ed59
xor	r14d, r14d
xor	ebp, ebp
jmp	0x14004e894
jmp	0x14004e894
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	ebx, ax
jmp	0x14004eb70
jmp	0x14004eb70
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	ebx, ax
jmp	0x14004ec0b
jmp	0x14004ec0b
mov	byte ptr [rsp + 0x2f], 0
mov	edi, eax
jmp	0x14004e9cb
jmp	0x14004e9cb
mov	byte ptr [rsp + 0x2f], dil
xor	r12d, r12d
xor	edi, edi
jmp	0x14004e9cb
jmp	0x14004e9cb
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebx, eax
jmp	0x14004eea8
jmp	0x14004eea8
mov	byte ptr [rsp + 0x2f], dil
xor	r12d, r12d
xor	r15d, r15d
xor	edi, edi
jmp	0x14004e9cb
jmp	0x14004e9cb
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x78]
mov	rdx, qword ptr [rsp + 0x40]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x88
mov	rbx, qword ptr [rsp + 0xf0]
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	qword ptr [rsp + 0xd0], rcx
lea	rcx, [rbx + 0xd0]
movups	xmmword ptr [rsp + 0x60], xmm0
movups	xmmword ptr [rsp + 0x50], xmm1
call	0x14001d7e0
call	0x14001d7e0
mov	r15d, dword ptr [rbx + 0x18]
mov	rsi, rax
and	r15d, 0x4a
cmp	r15d, 0x40
je	0x14004f992
je	0x14004f992
mov	r13d, 0xa
cmp	r15d, 8
je	0x14004f4db
je	0x14004f4db
lea	r12, [rsp + 0x50]
lea	rbp, [rsp + 0x60]
mov	rdx, r12
mov	rcx, rbp
call	0x140020940
call	0x140020940
mov	edi, eax
test	al, al
jne	0x14004f9bf
jne	0x14004f9bf
mov	rcx, rbp
call	0x1400209f0
call	0x1400209f0
movzx	ebx, ax
movzx	eax, word ptr [rsi + 0x94]
cmp	ax, bx
je	0x14004f480
je	0x14004f480
cmp	word ptr [rsi + 0x96], bx
je	0x14004f480
je	0x14004f480
mov	byte ptr [rsp + 0x4f], 0
movzx	eax, byte ptr [rsi + 0x20]
xor	r14d, r14d
xor	ebp, ebp
test	al, al
je	0x14004f1fb
je	0x14004f1fb
cmp	word ptr [rsi + 0x4a], bx
je	0x14004f780
je	0x14004f780
cmp	word ptr [rsi + 0x48], bx
je	0x14004f780
je	0x14004f780
cmp	word ptr [rsi + 0x9c], bx
je	0x14004f530
je	0x14004f530
test	bpl, bpl
je	0x14004f780
je	0x14004f780
cmp	word ptr [rsi + 0x98], bx
je	0x14004f231
je	0x14004f231
cmp	word ptr [rsi + 0x9a], bx
jne	0x14004fa5d
jne	0x14004fa5d
test	r15d, r15d
sete	al
cmp	r13d, 0x10
sete	dl
or	al, dl
je	0x14004fa77
je	0x14004fa77
xor	r14d, r14d
xor	ebp, ebp
mov	r13d, 0x10
mov	rdi, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
cmp	rax, rdx
jae	0x14004f6f8
jae	0x14004f6f8
add	rax, 2
mov	r11d, 0xffffffff
mov	qword ptr [rdi + 0x10], rax
mov	word ptr [rsp + 0x68], r11w
cmp	rax, rdx
jae	0x14004f720
jae	0x14004f720
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14004f733
je	0x14004f733
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x50]
sete	dil
cmp	word ptr [rsp + 0x58], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x14004f2b6
je	0x14004f2b6
test	al, al
jne	0x14004f5e0
jne	0x14004f5e0
cmp	dl, dil
jne	0x14004f570
jne	0x14004f570
mov	edi, 1
cmp	r13d, 0x10
je	0x14004f50c
je	0x14004f50c
movsxd	rax, r13d
mov	dword ptr [rsp + 0x48], r13d
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x77]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x38], rax
call	0x140071d40
call	0x140071d40
cmp	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsp + 0x78], rax
jne	0x14004f99d
jne	0x14004f99d
mov	eax, 0xffffffff
xor	edx, edx
div	dword ptr [rsp + 0x48]
mov	dword ptr [rsp + 0x34], eax
movzx	eax, byte ptr [rsi + 0xc8]
mov	byte ptr [rsp + 0x4e], al
test	al, al
jne	0x14004f790
jne	0x14004f790
xor	r15d, r15d
test	dil, dil
jne	0x14004fae7
jne	0x14004fae7
xor	r12d, r12d
add	r13d, 0x30
cmp	qword ptr [rsp + 0x28], 0xa
ja	0x14004f5c0
ja	0x14004f5c0
cmp	bx, 0x2f
jbe	0x14004f668
jbe	0x14004f668
cmp	bx, r13w
jae	0x14004f668
jae	0x14004f668
sub	ebx, 0x30
cmp	dword ptr [rsp + 0x34], r12d
jb	0x14004f5b0
jb	0x14004f5b0
mov	eax, dword ptr [rsp + 0x48]
imul	r12d, eax
add	ebx, r12d
setb	al
mov	r12d, ebx
add	r14d, 1
or	r15d, eax
mov	rbx, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004f970
jae	0x14004f970
add	rax, 2
mov	r9d, 0xffffffff
mov	qword ptr [rbx + 0x10], rax
mov	word ptr [rsp + 0x68], r9w
cmp	rax, rdx
jae	0x14004fa9c
jae	0x14004fa9c
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14004fa41
je	0x14004fa41
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x50]
sete	bl
cmp	word ptr [rsp + 0x58], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x14004f3df
je	0x14004f3df
test	al, al
jne	0x14004f758
jne	0x14004f758
cmp	dl, bl
jne	0x14004f610
jne	0x14004f610
mov	byte ptr [rsp + 0x4e], 1
mov	rcx, qword ptr [rsp + 0x78]
cmp	qword ptr [rcx - 0x18], 0
jne	0x14004f67d
jne	0x14004f67d
nop	dword ptr [rax]
test	r14d, r14d
jne	0x14004f6c1
jne	0x14004f6c1
cmp	bpl, 1
je	0x14004f6c1
je	0x14004f6c1
mov	rax, qword ptr [rsp + 0x100]
mov	dword ptr [rax], 0
mov	rax, qword ptr [rsp + 0xf8]
mov	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x4e], 0
je	0x14004f441
je	0x14004f441
mov	rax, qword ptr [rsp + 0xf8]
or	dword ptr [rax], 2
movdqu	xmm2, xmmword ptr [rsp + 0x60]
mov	rax, qword ptr [rsp + 0xd0]
sub	rcx, 0x18
mov	rdx, qword ptr [rsp + 0x38]
movups	xmmword ptr [rax], xmm2
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xd0]
add	rsp, 0x88
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
cmp	ax, bx
movzx	eax, byte ptr [rsi + 0x20]
sete	byte ptr [rsp + 0x4f]
test	al, al
jne	0x14004f9d0
jne	0x14004f9d0
cmp	word ptr [rsi + 0x48], bx
je	0x14004f1e8
je	0x14004f1e8
mov	rcx, qword ptr [rsp + 0x60]
mov	edi, 0xffffffff
call	0x140092490
call	0x140092490
mov	rdx, r12
mov	rcx, rbp
mov	word ptr [rsp + 0x68], di
call	0x140020940
call	0x140020940
mov	edi, eax
test	al, al
jne	0x14004fab5
jne	0x14004fab5
mov	rcx, rbp
call	0x1400209f0
call	0x1400209f0
movzx	ebx, ax
movzx	eax, byte ptr [rsi + 0x20]
jmp	0x14004f1e8
jmp	0x14004f1e8
lea	r12, [rsp + 0x50]
lea	rbp, [rsp + 0x60]
mov	r13d, 0x10
mov	rdx, r12
mov	rcx, rbp
call	0x140020940
call	0x140020940
mov	edi, eax
test	al, al
je	0x14004f1b7
je	0x14004f1b7
mov	byte ptr [rsp + 0x4f], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
mov	dword ptr [rsp + 0x48], 0x10
mov	r13d, 0x16
mov	qword ptr [rsp + 0x28], 0x16
jmp	0x14004f2db
jmp	0x14004f2db
nop	dword ptr [rax + rax]
mov	eax, ebp
xor	eax, 1
cmp	r13d, 0xa
sete	dl
or	al, dl
je	0x14004f21b
je	0x14004f21b
cmp	r13d, 8
sete	bpl
test	r15d, r15d
sete	dl
or	bpl, dl
je	0x14004f748
je	0x14004f748
xor	r14d, r14d
mov	r13d, 8
jmp	0x14004f251
jmp	0x14004f251
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x60]
mov	ebx, 0xffff
test	rcx, rcx
je	0x14004f59a
je	0x14004f59a
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004fabf
jae	0x14004fabf
movzx	ebx, word ptr [rax]
cmp	bx, -1
je	0x14004fa69
je	0x14004fa69
test	bpl, bpl
je	0x14004f780
je	0x14004f780
movzx	eax, byte ptr [rsi + 0x20]
jmp	0x14004f1ed
jmp	0x14004f1ed
nop	dword ptr [rax]
mov	r15d, 1
jmp	0x14004f37b
jmp	0x14004f37b
nop	dword ptr [rax + rax]
lea	eax, [rbx - 0x30]
cmp	ax, 9
jbe	0x14004f355
jbe	0x14004f355
lea	eax, [rbx - 0x61]
cmp	ax, 5
ja	0x14004f650
ja	0x14004f650
sub	ebx, 0x57
jmp	0x14004f358
jmp	0x14004f358
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004fa36
jae	0x14004fa36
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14004f9b1
je	0x14004f9b1
cmp	ax, -1
sete	dl
jmp	0x14004f2b6
jmp	0x14004f2b6
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x60]
test	rcx, rcx
je	0x14004f668
je	0x14004f668
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004facd
jae	0x14004facd
movzx	ebx, word ptr [rax]
cmp	bx, -1
jne	0x14004f335
jne	0x14004f335
mov	qword ptr [rsp + 0x60], 0
cmp	qword ptr [rsp + 0x28], 0xa
jbe	0x14004f668
jbe	0x14004f668
nop	word ptr cs:[rax + rax]
lea	eax, [rbx - 0x41]
cmp	ax, 5
ja	0x14004f668
ja	0x14004f668
sub	ebx, 0x37
jmp	0x14004f358
jmp	0x14004f358
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x78]
mov	byte ptr [rsp + 0x4e], 0
cmp	qword ptr [rcx - 0x18], 0
je	0x14004f400
je	0x14004f400
lea	rbx, [rsp + 0x78]
movsx	edx, r14b
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	r8, rbx
call	0x1400ae880
call	0x1400ae880
test	al, al
je	0x14004fa07
je	0x14004fa07
mov	rcx, qword ptr [rsp + 0x78]
test	r14d, r14d
jne	0x14004f6c1
jne	0x14004f6c1
cmp	bpl, 1
je	0x14004f6c1
je	0x14004f6c1
cmp	qword ptr [rcx - 0x18], 0
je	0x14004f413
je	0x14004f413
test	dil, dil
jne	0x14004f413
jne	0x14004f413
test	r15b, r15b
je	0x14004f9e9
je	0x14004f9e9
mov	rax, qword ptr [rsp + 0x100]
mov	dword ptr [rax], 0xffffffff
mov	rax, qword ptr [rsp + 0xf8]
mov	dword ptr [rax], 4
jmp	0x14004f42f
jmp	0x14004f42f
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
mov	r10d, 0xffffffff
mov	word ptr [rsp + 0x68], r10w
cmp	rax, rdx
jb	0x14004f284
jb	0x14004f284
nop	
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	ax, -1
jne	0x14004f291
jne	0x14004f291
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004f291
jmp	0x14004f291
nop	dword ptr [rax]
add	r14d, 1
mov	ebp, eax
jmp	0x14004f251
jmp	0x14004f251
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004faaa
jae	0x14004faaa
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14004fa4f
je	0x14004fa4f
cmp	ax, -1
sete	dl
jmp	0x14004f3df
jmp	0x14004f3df
nop	
xor	edi, edi
jmp	0x14004f2c4
jmp	0x14004f2c4
nop	word ptr [rax + rax]
test	dil, dil
jne	0x14004fb03
jne	0x14004fb03
lea	rax, [rsp + 0x78]
lea	r13, [rsi + 0x9c]
xor	r15d, r15d
xor	r12d, r12d
mov	qword ptr [rsp + 0x40], rax
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x14004f7c2
je	0x14004f7c2
cmp	word ptr [rsi + 0x4a], bx
je	0x14004f8f0
je	0x14004f8f0
mov	rcx, qword ptr [rsp + 0x28]
cmp	word ptr [rsi + 0x48], bx
sete	al
test	rcx, rcx
sete	dl
or	al, dl
jne	0x14004f668
jne	0x14004f668
mov	rdx, rcx
mov	rax, r13
jmp	0x14004f7f6
jmp	0x14004f7f6
nop	dword ptr [rax]
add	rax, 2
sub	rdx, 1
je	0x14004f8e0
je	0x14004f8e0
cmp	bx, word ptr [rax]
jne	0x14004f7e8
jne	0x14004f7e8
sub	rax, r13
sar	rax, 1
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
cmp	dword ptr [rsp + 0x34], r12d
jb	0x14004f8d0
jb	0x14004f8d0
mov	ecx, dword ptr [rsp + 0x48]
imul	r12d, ecx
add	eax, r12d
setb	dl
mov	r12d, eax
add	r14d, 1
or	r15d, edx
mov	rbx, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x14004f940
jae	0x14004f940
add	rax, 2
mov	ecx, 0xffffffff
mov	qword ptr [rbx + 0x10], rax
mov	word ptr [rsp + 0x68], cx
cmp	rax, rdx
jae	0x14004fa8e
jae	0x14004fa8e
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14004fa28
je	0x14004fa28
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x50]
sete	bl
cmp	word ptr [rsp + 0x58], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x14004f88f
je	0x14004f88f
test	al, al
jne	0x14004f910
jne	0x14004f910
cmp	dl, bl
je	0x14004f3ec
je	0x14004f3ec
mov	rcx, qword ptr [rsp + 0x60]
test	rcx, rcx
je	0x14004f960
je	0x14004f960
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004faf6
jae	0x14004faf6
movzx	ebx, word ptr [rax]
cmp	bx, -1
jne	0x14004f7b0
jne	0x14004f7b0
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004f7b0
jmp	0x14004f7b0
nop	
movzx	r15d, byte ptr [rsp + 0x4e]
jmp	0x14004f82d
jmp	0x14004f82d
nop	dword ptr [rax + rax]
mov	byte ptr [rsp + 0x4e], 0
xor	edi, edi
jmp	0x14004f3ec
jmp	0x14004f3ec
nop	dword ptr [rax]
test	r14d, r14d
je	0x14004fadb
je	0x14004fadb
mov	rcx, qword ptr [rsp + 0x40]
movsx	edx, r14b
call	0x140073fa0
call	0x140073fa0
xor	r14d, r14d
jmp	0x14004f82d
jmp	0x14004f82d
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14004fa83
jae	0x14004fa83
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14004fa1a
je	0x14004fa1a
cmp	ax, -1
sete	dl
jmp	0x14004f88f
jmp	0x14004f88f
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	eax, 0xffffffff
mov	rdx, qword ptr [rbx + 0x18]
mov	word ptr [rsp + 0x68], ax
mov	rax, qword ptr [rbx + 0x10]
jmp	0x14004f855
jmp	0x14004f855
mov	ebx, 0xffffffff
jmp	0x14004f7b0
jmp	0x14004f7b0
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	r8d, 0xffffffff
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	word ptr [rsp + 0x68], r8w
jmp	0x14004f3a5
jmp	0x14004f3a5
mov	r13d, 8
jmp	0x14004f198
jmp	0x14004f198
lea	rcx, [rsp + 0x78]
mov	edx, 0x20
call	0x140073cf0
call	0x140073cf0
jmp	0x14004f300
jmp	0x14004f300
mov	qword ptr [rsp + 0x50], 0
jmp	0x14004f5fb
jmp	0x14004f5fb
mov	byte ptr [rsp + 0x4f], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
jmp	0x14004f2ce
jmp	0x14004f2ce
cmp	word ptr [rsi + 0x4a], bx
je	0x14004f1e8
je	0x14004f1e8
cmp	word ptr [rsi + 0x48], bx
je	0x14004f1e8
je	0x14004f1e8
jmp	0x14004f49e
jmp	0x14004f49e
mov	eax, r12d
neg	eax
cmp	byte ptr [rsp + 0x4f], 0
cmovne	r12d, eax
mov	rax, qword ptr [rsp + 0x100]
mov	dword ptr [rax], r12d
jmp	0x14004f42f
jmp	0x14004f42f
mov	rax, qword ptr [rsp + 0xf8]
mov	dword ptr [rax], 4
jmp	0x14004f6a6
jmp	0x14004f6a6
mov	qword ptr [rsp + 0x50], 0
jmp	0x14004f92b
jmp	0x14004f92b
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004f86b
jmp	0x14004f86b
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004f5f1
jmp	0x14004f5f1
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004f3bb
jmp	0x14004f3bb
mov	qword ptr [rsp + 0x50], 0
jmp	0x14004f773
jmp	0x14004f773
xor	edi, edi
mov	ebp, 1
jmp	0x14004f2c4
jmp	0x14004f2c4
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004f59a
jmp	0x14004f59a
mov	edi, eax
mov	ebp, 1
jmp	0x14004f2ce
jmp	0x14004f2ce
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004f921
jmp	0x14004f921
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004f861
jmp	0x14004f861
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004f3b1
jmp	0x14004f3b1
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004f769
jmp	0x14004f769
xor	r14d, r14d
xor	ebp, ebp
jmp	0x14004f2c4
jmp	0x14004f2c4
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	ebx, ax
jmp	0x14004f590
jmp	0x14004f590
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	ebx, ax
jmp	0x14004f62b
jmp	0x14004f62b
mov	byte ptr [rsp + 0x4e], 0
mov	edi, eax
jmp	0x14004f3ec
jmp	0x14004f3ec
mov	byte ptr [rsp + 0x4e], dil
xor	r12d, r12d
xor	edi, edi
jmp	0x14004f3ec
jmp	0x14004f3ec
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebx, eax
jmp	0x14004f8b6
jmp	0x14004f8b6
mov	byte ptr [rsp + 0x4e], dil
xor	r12d, r12d
xor	r15d, r15d
xor	edi, edi
jmp	0x14004f3ec
jmp	0x14004f3ec
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x78]
mov	rdx, qword ptr [rsp + 0x38]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x88
mov	rbx, qword ptr [rsp + 0xf0]
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	qword ptr [rsp + 0xd0], rcx
lea	rcx, [rbx + 0xd0]
movups	xmmword ptr [rsp + 0x60], xmm0
movups	xmmword ptr [rsp + 0x50], xmm1
call	0x14001d7e0
call	0x14001d7e0
mov	r15d, dword ptr [rbx + 0x18]
mov	rsi, rax
and	r15d, 0x4a
cmp	r15d, 0x40
je	0x1400503da
je	0x1400503da
mov	r13d, 0xa
cmp	r15d, 8
je	0x14004fefd
je	0x14004fefd
lea	r12, [rsp + 0x50]
lea	rbp, [rsp + 0x60]
mov	rdx, r12
mov	rcx, rbp
call	0x140020940
call	0x140020940
mov	edi, eax
test	al, al
jne	0x140050407
jne	0x140050407
mov	rcx, rbp
call	0x1400209f0
call	0x1400209f0
movzx	ebx, ax
movzx	eax, word ptr [rsi + 0x94]
cmp	ax, bx
je	0x14004fea0
je	0x14004fea0
cmp	word ptr [rsi + 0x96], bx
je	0x14004fea0
je	0x14004fea0
mov	byte ptr [rsp + 0x4f], 0
movzx	eax, byte ptr [rsi + 0x20]
xor	r14d, r14d
xor	ebp, ebp
test	al, al
je	0x14004fc0b
je	0x14004fc0b
cmp	word ptr [rsi + 0x4a], bx
je	0x1400501b0
je	0x1400501b0
cmp	word ptr [rsi + 0x48], bx
je	0x1400501b0
je	0x1400501b0
cmp	word ptr [rsi + 0x9c], bx
je	0x14004ff50
je	0x14004ff50
test	bpl, bpl
je	0x1400501b0
je	0x1400501b0
cmp	word ptr [rsi + 0x98], bx
je	0x14004fc41
je	0x14004fc41
cmp	word ptr [rsi + 0x9a], bx
jne	0x1400504a6
jne	0x1400504a6
test	r15d, r15d
sete	al
cmp	r13d, 0x10
sete	dl
or	al, dl
je	0x1400504c0
je	0x1400504c0
xor	r14d, r14d
xor	ebp, ebp
mov	r13d, 0x10
mov	rdi, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
cmp	rax, rdx
jae	0x140050120
jae	0x140050120
add	rax, 2
mov	r9d, 0xffffffff
mov	qword ptr [rdi + 0x10], rax
mov	word ptr [rsp + 0x68], r9w
cmp	rax, rdx
jae	0x140050150
jae	0x140050150
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140050163
je	0x140050163
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x50]
sete	dil
cmp	word ptr [rsp + 0x58], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x14004fcc6
je	0x14004fcc6
test	al, al
jne	0x140050000
jne	0x140050000
cmp	dl, dil
jne	0x14004ff90
jne	0x14004ff90
mov	edi, 1
cmp	r13d, 0x10
je	0x14004ff2e
je	0x14004ff2e
movsxd	rax, r13d
mov	dword ptr [rsp + 0x48], r13d
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x77]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x38], rax
call	0x140071d40
call	0x140071d40
cmp	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsp + 0x78], rax
jne	0x1400503e5
jne	0x1400503e5
mov	eax, 0xffff
xor	edx, edx
idiv	dword ptr [rsp + 0x48]
mov	dword ptr [rsp + 0x34], eax
movzx	eax, byte ptr [rsi + 0xc8]
mov	byte ptr [rsp + 0x4c], al
test	al, al
jne	0x1400501c0
jne	0x1400501c0
xor	r15d, r15d
test	dil, dil
jne	0x140050530
jne	0x140050530
lea	eax, [r13 + 0x30]
xor	r12d, r12d
mov	r13d, 0xffff
mov	word ptr [rsp + 0x4c], ax
cmp	qword ptr [rsp + 0x28], 0xa
ja	0x14004ffe0
ja	0x14004ffe0
cmp	bx, 0x2f
jbe	0x140050088
jbe	0x140050088
cmp	bx, word ptr [rsp + 0x4c]
jae	0x140050088
jae	0x140050088
sub	ebx, 0x30
cmp	word ptr [rsp + 0x34], r12w
jb	0x14004ffd0
jb	0x14004ffd0
imul	r12w, word ptr [rsp + 0x48]
mov	eax, r13d
sub	eax, ebx
movzx	edx, r12w
cmp	edx, eax
setg	al
add	r12d, ebx
add	r14d, 1
or	r15d, eax
mov	rbx, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x1400503b8
jae	0x1400503b8
add	rax, 2
mov	ecx, 0xffffffff
mov	qword ptr [rbx + 0x10], rax
mov	word ptr [rsp + 0x68], cx
cmp	rax, rdx
jae	0x1400504e5
jae	0x1400504e5
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14005048a
je	0x14005048a
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x50]
sete	bl
cmp	word ptr [rsp + 0x58], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x14004fe01
je	0x14004fe01
test	al, al
jne	0x140050188
jne	0x140050188
cmp	dl, bl
jne	0x140050030
jne	0x140050030
mov	byte ptr [rsp + 0x4c], 1
mov	rcx, qword ptr [rsp + 0x78]
cmp	qword ptr [rcx - 0x18], 0
jne	0x14005009d
jne	0x14005009d
nop	
test	r14d, r14d
jne	0x1400500e1
jne	0x1400500e1
cmp	bpl, 1
je	0x1400500e1
je	0x1400500e1
mov	rax, qword ptr [rsp + 0x100]
xor	r8d, r8d
mov	word ptr [rax], r8w
mov	rax, qword ptr [rsp + 0xf8]
mov	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x4c], 0
je	0x14004fe62
je	0x14004fe62
mov	rax, qword ptr [rsp + 0xf8]
or	dword ptr [rax], 2
movdqu	xmm2, xmmword ptr [rsp + 0x60]
mov	rax, qword ptr [rsp + 0xd0]
sub	rcx, 0x18
mov	rdx, qword ptr [rsp + 0x38]
movups	xmmword ptr [rax], xmm2
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xd0]
add	rsp, 0x88
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
cmp	ax, bx
movzx	eax, byte ptr [rsi + 0x20]
sete	byte ptr [rsp + 0x4f]
test	al, al
jne	0x140050418
jne	0x140050418
cmp	word ptr [rsi + 0x48], bx
je	0x14004fbf8
je	0x14004fbf8
mov	rcx, qword ptr [rsp + 0x60]
call	0x140092490
call	0x140092490
mov	r10d, 0xffffffff
mov	rdx, r12
mov	rcx, rbp
mov	word ptr [rsp + 0x68], r10w
call	0x140020940
call	0x140020940
mov	edi, eax
test	al, al
jne	0x1400504fe
jne	0x1400504fe
mov	rcx, rbp
call	0x1400209f0
call	0x1400209f0
movzx	ebx, ax
movzx	eax, byte ptr [rsi + 0x20]
jmp	0x14004fbf8
jmp	0x14004fbf8
lea	r12, [rsp + 0x50]
lea	rbp, [rsp + 0x60]
mov	r13d, 0x10
mov	rdx, r12
mov	rcx, rbp
call	0x140020940
call	0x140020940
mov	edi, eax
test	al, al
je	0x14004fbc7
je	0x14004fbc7
mov	byte ptr [rsp + 0x4f], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
mov	dword ptr [rsp + 0x48], 0x10
mov	r13d, 0x16
mov	qword ptr [rsp + 0x28], 0x16
jmp	0x14004fceb
jmp	0x14004fceb
nop	word ptr [rax + rax]
mov	eax, ebp
xor	eax, 1
cmp	r13d, 0xa
sete	dl
or	al, dl
je	0x14004fc2b
je	0x14004fc2b
cmp	r13d, 8
sete	bpl
test	r15d, r15d
sete	dl
or	bpl, dl
je	0x140050178
je	0x140050178
xor	r14d, r14d
mov	r13d, 8
jmp	0x14004fc61
jmp	0x14004fc61
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x60]
mov	ebx, 0xffff
test	rcx, rcx
je	0x14004ffba
je	0x14004ffba
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140050508
jae	0x140050508
movzx	ebx, word ptr [rax]
cmp	bx, -1
je	0x1400504b2
je	0x1400504b2
test	bpl, bpl
je	0x1400501b0
je	0x1400501b0
movzx	eax, byte ptr [rsi + 0x20]
jmp	0x14004fbfd
jmp	0x14004fbfd
nop	dword ptr [rax]
mov	r15d, 1
jmp	0x14004fd9f
jmp	0x14004fd9f
nop	dword ptr [rax + rax]
lea	eax, [rbx - 0x30]
cmp	ax, 9
jbe	0x14004fd71
jbe	0x14004fd71
lea	eax, [rbx - 0x61]
cmp	ax, 5
ja	0x140050070
ja	0x140050070
sub	ebx, 0x57
jmp	0x14004fd74
jmp	0x14004fd74
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14005047f
jae	0x14005047f
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x1400503f9
je	0x1400503f9
cmp	ax, -1
sete	dl
jmp	0x14004fcc6
jmp	0x14004fcc6
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x60]
test	rcx, rcx
je	0x140050088
je	0x140050088
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140050516
jae	0x140050516
movzx	ebx, word ptr [rax]
cmp	bx, -1
jne	0x14004fd50
jne	0x14004fd50
mov	qword ptr [rsp + 0x60], 0
cmp	qword ptr [rsp + 0x28], 0xa
jbe	0x140050088
jbe	0x140050088
nop	word ptr cs:[rax + rax]
lea	eax, [rbx - 0x41]
cmp	ax, 5
ja	0x140050088
ja	0x140050088
sub	ebx, 0x37
jmp	0x14004fd74
jmp	0x14004fd74
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x78]
mov	byte ptr [rsp + 0x4c], 0
cmp	qword ptr [rcx - 0x18], 0
je	0x14004fe20
je	0x14004fe20
lea	rbx, [rsp + 0x78]
movsx	edx, r14b
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	r8, rbx
call	0x1400ae880
call	0x1400ae880
test	al, al
je	0x140050450
je	0x140050450
mov	rcx, qword ptr [rsp + 0x78]
test	r14d, r14d
jne	0x1400500e1
jne	0x1400500e1
cmp	bpl, 1
je	0x1400500e1
je	0x1400500e1
cmp	qword ptr [rcx - 0x18], 0
je	0x14004fe33
je	0x14004fe33
test	dil, dil
jne	0x14004fe33
jne	0x14004fe33
test	r15b, r15b
je	0x140050431
je	0x140050431
mov	rax, qword ptr [rsp + 0x100]
mov	edx, 0xffffffff
mov	word ptr [rax], dx
mov	rax, qword ptr [rsp + 0xf8]
mov	dword ptr [rax], 4
jmp	0x14004fe50
jmp	0x14004fe50
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
mov	r8d, 0xffffffff
mov	word ptr [rsp + 0x68], r8w
cmp	rax, rdx
jb	0x14004fc94
jb	0x14004fc94
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	ax, -1
jne	0x14004fca1
jne	0x14004fca1
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004fca1
jmp	0x14004fca1
nop	dword ptr [rax]
add	r14d, 1
mov	ebp, eax
jmp	0x14004fc61
jmp	0x14004fc61
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400504f3
jae	0x1400504f3
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140050498
je	0x140050498
cmp	ax, -1
sete	dl
jmp	0x14004fe01
jmp	0x14004fe01
nop	
xor	edi, edi
jmp	0x14004fcd4
jmp	0x14004fcd4
nop	word ptr [rax + rax]
test	dil, dil
jne	0x14005054c
jne	0x14005054c
lea	rax, [rsp + 0x78]
lea	r13, [rsi + 0x9c]
xor	r15d, r15d
xor	r12d, r12d
mov	qword ptr [rsp + 0x40], rax
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x1400501f2
je	0x1400501f2
cmp	word ptr [rsi + 0x4a], bx
je	0x140050330
je	0x140050330
mov	rcx, qword ptr [rsp + 0x28]
cmp	word ptr [rsi + 0x48], bx
sete	al
test	rcx, rcx
sete	dl
or	al, dl
jne	0x140050088
jne	0x140050088
mov	rdx, rcx
mov	rax, r13
jmp	0x140050226
jmp	0x140050226
nop	dword ptr [rax]
add	rax, 2
sub	rdx, 1
je	0x140050320
je	0x140050320
cmp	bx, word ptr [rax]
jne	0x140050218
jne	0x140050218
sub	rax, r13
sar	rax, 1
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
cmp	word ptr [rsp + 0x34], r12w
jb	0x140050310
jb	0x140050310
imul	r12w, word ptr [rsp + 0x48]
mov	edx, 0xffff
sub	edx, eax
movzx	ecx, r12w
cmp	ecx, edx
setg	dl
add	r12d, eax
add	r14d, 1
or	r15d, edx
mov	rbx, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x140050380
jae	0x140050380
add	rax, 2
mov	r10d, 0xffffffff
mov	qword ptr [rbx + 0x10], rax
mov	word ptr [rsp + 0x68], r10w
cmp	rax, rdx
jae	0x1400504d7
jae	0x1400504d7
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140050471
je	0x140050471
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x50]
sete	bl
cmp	word ptr [rsp + 0x58], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x1400502cb
je	0x1400502cb
test	al, al
jne	0x140050350
jne	0x140050350
cmp	dl, bl
je	0x14004fe0e
je	0x14004fe0e
mov	rcx, qword ptr [rsp + 0x60]
test	rcx, rcx
je	0x1400503a8
je	0x1400503a8
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14005053f
jae	0x14005053f
movzx	ebx, word ptr [rax]
cmp	bx, -1
jne	0x1400501e0
jne	0x1400501e0
mov	qword ptr [rsp + 0x60], 0
jmp	0x1400501e0
jmp	0x1400501e0
nop	word ptr [rax + rax]
movzx	r15d, byte ptr [rsp + 0x4c]
jmp	0x140050267
jmp	0x140050267
nop	dword ptr [rax + rax]
mov	byte ptr [rsp + 0x4c], 0
xor	edi, edi
jmp	0x14004fe0e
jmp	0x14004fe0e
nop	dword ptr [rax]
test	r14d, r14d
je	0x140050524
je	0x140050524
mov	rcx, qword ptr [rsp + 0x40]
movsx	edx, r14b
call	0x140073fa0
call	0x140073fa0
xor	r14d, r14d
jmp	0x140050267
jmp	0x140050267
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400504cc
jae	0x1400504cc
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140050463
je	0x140050463
cmp	ax, -1
sete	dl
jmp	0x1400502cb
jmp	0x1400502cb
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	r9d, 0xffffffff
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	word ptr [rsp + 0x68], r9w
jmp	0x140050291
jmp	0x140050291
nop	word ptr [rax + rax]
mov	ebx, 0xffffffff
jmp	0x1400501e0
jmp	0x1400501e0
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	r11d, 0xffffffff
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	word ptr [rsp + 0x68], r11w
jmp	0x14004fdc7
jmp	0x14004fdc7
mov	r13d, 8
jmp	0x14004fba8
jmp	0x14004fba8
lea	rcx, [rsp + 0x78]
mov	edx, 0x20
call	0x140073cf0
call	0x140073cf0
jmp	0x14004fd10
jmp	0x14004fd10
mov	qword ptr [rsp + 0x50], 0
jmp	0x14005001b
jmp	0x14005001b
mov	byte ptr [rsp + 0x4f], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
jmp	0x14004fcde
jmp	0x14004fcde
cmp	word ptr [rsi + 0x4a], bx
je	0x14004fbf8
je	0x14004fbf8
cmp	word ptr [rsi + 0x48], bx
je	0x14004fbf8
je	0x14004fbf8
jmp	0x14004febe
jmp	0x14004febe
mov	eax, r12d
neg	eax
cmp	byte ptr [rsp + 0x4f], 0
cmovne	r12d, eax
mov	rax, qword ptr [rsp + 0x100]
mov	word ptr [rax], r12w
jmp	0x14004fe50
jmp	0x14004fe50
mov	rax, qword ptr [rsp + 0xf8]
mov	dword ptr [rax], 4
jmp	0x1400500c6
jmp	0x1400500c6
mov	qword ptr [rsp + 0x50], 0
jmp	0x14005036b
jmp	0x14005036b
mov	qword ptr [rsp + 0x60], 0
jmp	0x1400502a7
jmp	0x1400502a7
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140050011
jmp	0x140050011
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004fddd
jmp	0x14004fddd
mov	qword ptr [rsp + 0x50], 0
jmp	0x1400501a3
jmp	0x1400501a3
xor	edi, edi
mov	ebp, 1
jmp	0x14004fcd4
jmp	0x14004fcd4
mov	qword ptr [rsp + 0x60], 0
jmp	0x14004ffba
jmp	0x14004ffba
mov	edi, eax
mov	ebp, 1
jmp	0x14004fcde
jmp	0x14004fcde
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140050361
jmp	0x140050361
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14005029d
jmp	0x14005029d
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14004fdd3
jmp	0x14004fdd3
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140050199
jmp	0x140050199
xor	r14d, r14d
xor	ebp, ebp
jmp	0x14004fcd4
jmp	0x14004fcd4
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	ebx, ax
jmp	0x14004ffb0
jmp	0x14004ffb0
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	ebx, ax
jmp	0x14005004b
jmp	0x14005004b
mov	byte ptr [rsp + 0x4c], 0
mov	edi, eax
jmp	0x14004fe0e
jmp	0x14004fe0e
mov	byte ptr [rsp + 0x4c], dil
xor	r12d, r12d
xor	edi, edi
jmp	0x14004fe0e
jmp	0x14004fe0e
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebx, eax
jmp	0x1400502f2
jmp	0x1400502f2
mov	byte ptr [rsp + 0x4c], dil
xor	r12d, r12d
xor	r15d, r15d
xor	edi, edi
jmp	0x14004fe0e
jmp	0x14004fe0e
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x78]
mov	rdx, qword ptr [rsp + 0x38]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	rbx, qword ptr [rsp + 0x100]
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	qword ptr [rsp + 0xe0], rcx
lea	rcx, [rbx + 0xd0]
movups	xmmword ptr [rsp + 0x70], xmm0
movups	xmmword ptr [rsp + 0x60], xmm1
call	0x14001d7e0
call	0x14001d7e0
mov	r15d, dword ptr [rbx + 0x18]
mov	rsi, rax
and	r15d, 0x4a
cmp	r15d, 0x40
je	0x140050e62
je	0x140050e62
mov	r13d, 0xa
cmp	r15d, 8
je	0x14005095b
je	0x14005095b
lea	r12, [rsp + 0x60]
lea	rbp, [rsp + 0x70]
mov	rdx, r12
mov	rcx, rbp
call	0x140020940
call	0x140020940
mov	edi, eax
test	al, al
jne	0x140050e92
jne	0x140050e92
mov	rcx, rbp
call	0x1400209f0
call	0x1400209f0
movzx	ebx, ax
movzx	eax, word ptr [rsi + 0x94]
cmp	ax, bx
je	0x140050900
je	0x140050900
cmp	word ptr [rsi + 0x96], bx
je	0x140050900
je	0x140050900
mov	byte ptr [rsp + 0x4f], 0
movzx	eax, byte ptr [rsi + 0x20]
xor	r14d, r14d
xor	ebp, ebp
test	al, al
je	0x14005064b
je	0x14005064b
cmp	word ptr [rsi + 0x4a], bx
je	0x140050c30
je	0x140050c30
cmp	word ptr [rsi + 0x48], bx
je	0x140050c30
je	0x140050c30
cmp	word ptr [rsi + 0x9c], bx
je	0x1400509b0
je	0x1400509b0
test	bpl, bpl
je	0x140050c30
je	0x140050c30
cmp	word ptr [rsi + 0x98], bx
je	0x140050681
je	0x140050681
cmp	word ptr [rsi + 0x9a], bx
jne	0x140050f31
jne	0x140050f31
test	r15d, r15d
sete	al
cmp	r13d, 0x10
sete	dl
or	al, dl
je	0x140050f4b
je	0x140050f4b
xor	r14d, r14d
xor	ebp, ebp
mov	r13d, 0x10
mov	rdi, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
cmp	rax, rdx
jae	0x140050ba0
jae	0x140050ba0
add	rax, 2
mov	r11d, 0xffffffff
mov	qword ptr [rdi + 0x10], rax
mov	word ptr [rsp + 0x78], r11w
cmp	rax, rdx
jae	0x140050bd0
jae	0x140050bd0
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140050be3
je	0x140050be3
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x60]
sete	dil
cmp	word ptr [rsp + 0x68], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x140050706
je	0x140050706
test	al, al
jne	0x140050a60
jne	0x140050a60
cmp	dil, dl
jne	0x1400509f0
jne	0x1400509f0
mov	edi, 1
cmp	r13d, 0x10
je	0x14005098c
je	0x14005098c
movsxd	rax, r13d
mov	r12d, r13d
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x87]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x50], rax
call	0x140071d40
call	0x140071d40
cmp	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsp + 0x88], rax
jne	0x140050e6d
jne	0x140050e6d
movzx	edx, byte ptr [rsp + 0x4f]
movsxd	rcx, r12d
movabs	rax, 0x7fffffffffffffff
mov	qword ptr [rsp + 0x38], rcx
add	rax, rdx
xor	edx, edx
mov	qword ptr [rsp + 0x40], rax
div	rcx
mov	qword ptr [rsp + 0x30], rax
movzx	eax, byte ptr [rsi + 0xc8]
mov	byte ptr [rsp + 0x4e], al
test	al, al
jne	0x140050c40
jne	0x140050c40
xor	r15d, r15d
test	dil, dil
jne	0x140050fbb
jne	0x140050fbb
xor	r12d, r12d
add	r13d, 0x30
cmp	qword ptr [rsp + 0x28], 0xa
ja	0x140050a40
ja	0x140050a40
cmp	bx, 0x2f
jbe	0x140050ae8
jbe	0x140050ae8
cmp	bx, r13w
jae	0x140050ae8
jae	0x140050ae8
sub	ebx, 0x30
cmp	qword ptr [rsp + 0x30], r12
jb	0x140050a30
jb	0x140050a30
mov	rax, qword ptr [rsp + 0x38]
movsxd	rbx, ebx
imul	r12, rax
mov	rax, qword ptr [rsp + 0x40]
sub	rax, rbx
cmp	rax, r12
setb	al
add	r12, rbx
add	r14d, 1
or	r15d, eax
mov	rbx, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x140050e40
jae	0x140050e40
add	rax, 2
mov	r9d, 0xffffffff
mov	qword ptr [rbx + 0x10], rax
mov	word ptr [rsp + 0x78], r9w
cmp	rax, rdx
jae	0x140050f70
jae	0x140050f70
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140050f15
je	0x140050f15
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x60]
sete	bl
cmp	word ptr [rsp + 0x68], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x140050859
je	0x140050859
test	al, al
jne	0x140050c08
jne	0x140050c08
cmp	dl, bl
jne	0x140050a90
jne	0x140050a90
mov	byte ptr [rsp + 0x4e], 1
mov	rcx, qword ptr [rsp + 0x88]
cmp	qword ptr [rcx - 0x18], 0
jne	0x140050b00
jne	0x140050b00
nop	dword ptr [rax]
test	r14d, r14d
jne	0x140050b4a
jne	0x140050b4a
cmp	bpl, 1
je	0x140050b4a
je	0x140050b4a
mov	rax, qword ptr [rsp + 0x110]
mov	qword ptr [rax], 0
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x4e], 0
je	0x1400508c2
je	0x1400508c2
mov	rax, qword ptr [rsp + 0x108]
or	dword ptr [rax], 2
movdqu	xmm2, xmmword ptr [rsp + 0x70]
mov	rax, qword ptr [rsp + 0xe0]
sub	rcx, 0x18
mov	rdx, qword ptr [rsp + 0x50]
movups	xmmword ptr [rax], xmm2
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xe0]
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
cmp	ax, bx
movzx	eax, byte ptr [rsi + 0x20]
sete	byte ptr [rsp + 0x4f]
test	al, al
jne	0x140050ea3
jne	0x140050ea3
cmp	word ptr [rsi + 0x48], bx
je	0x140050638
je	0x140050638
mov	rcx, qword ptr [rsp + 0x70]
mov	edi, 0xffffffff
call	0x140092490
call	0x140092490
mov	rdx, r12
mov	rcx, rbp
mov	word ptr [rsp + 0x78], di
call	0x140020940
call	0x140020940
mov	edi, eax
test	al, al
jne	0x140050f89
jne	0x140050f89
mov	rcx, rbp
call	0x1400209f0
call	0x1400209f0
movzx	ebx, ax
movzx	eax, byte ptr [rsi + 0x20]
jmp	0x140050638
jmp	0x140050638
lea	r12, [rsp + 0x60]
lea	rbp, [rsp + 0x70]
mov	r13d, 0x10
mov	rdx, r12
mov	rcx, rbp
call	0x140020940
call	0x140020940
mov	edi, eax
test	al, al
je	0x140050607
je	0x140050607
mov	byte ptr [rsp + 0x4f], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
mov	qword ptr [rsp + 0x28], 0x16
mov	r12d, 0x10
mov	r13d, 0x16
jmp	0x140050729
jmp	0x140050729
nop	word ptr cs:[rax + rax]
mov	eax, ebp
xor	eax, 1
cmp	r13d, 0xa
sete	dl
or	al, dl
je	0x14005066b
je	0x14005066b
cmp	r13d, 8
sete	bpl
test	r15d, r15d
sete	dl
or	bpl, dl
je	0x140050bf8
je	0x140050bf8
xor	r14d, r14d
mov	r13d, 8
jmp	0x1400506a1
jmp	0x1400506a1
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x70]
mov	ebx, 0xffff
test	rcx, rcx
je	0x140050a1a
je	0x140050a1a
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140050f93
jae	0x140050f93
movzx	ebx, word ptr [rax]
cmp	bx, -1
je	0x140050f3d
je	0x140050f3d
test	bpl, bpl
je	0x140050c30
je	0x140050c30
movzx	eax, byte ptr [rsi + 0x20]
jmp	0x14005063d
jmp	0x14005063d
nop	dword ptr [rax]
mov	r15d, 1
jmp	0x1400507f5
jmp	0x1400507f5
nop	dword ptr [rax + rax]
lea	eax, [rbx - 0x30]
cmp	ax, 9
jbe	0x1400507c3
jbe	0x1400507c3
lea	eax, [rbx - 0x61]
cmp	ax, 5
ja	0x140050ad0
ja	0x140050ad0
sub	ebx, 0x57
jmp	0x1400507c6
jmp	0x1400507c6
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140050f0a
jae	0x140050f0a
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140050e84
je	0x140050e84
cmp	ax, -1
sete	dl
jmp	0x140050706
jmp	0x140050706
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x70]
test	rcx, rcx
je	0x140050ae8
je	0x140050ae8
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140050fa1
jae	0x140050fa1
movzx	ebx, word ptr [rax]
cmp	bx, -1
jne	0x1400507a3
jne	0x1400507a3
mov	qword ptr [rsp + 0x70], 0
cmp	qword ptr [rsp + 0x28], 0xa
jbe	0x140050ae8
jbe	0x140050ae8
nop	word ptr cs:[rax + rax]
lea	eax, [rbx - 0x41]
cmp	ax, 5
ja	0x140050ae8
ja	0x140050ae8
sub	ebx, 0x37
jmp	0x1400507c6
jmp	0x1400507c6
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x88]
mov	byte ptr [rsp + 0x4e], 0
cmp	qword ptr [rcx - 0x18], 0
je	0x140050880
je	0x140050880
lea	rbx, [rsp + 0x88]
movsx	edx, r14b
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	r8, rbx
call	0x1400ae880
call	0x1400ae880
test	al, al
je	0x140050edb
je	0x140050edb
mov	rcx, qword ptr [rsp + 0x88]
test	r14d, r14d
jne	0x140050b4a
jne	0x140050b4a
cmp	bpl, 1
je	0x140050b4a
je	0x140050b4a
cmp	qword ptr [rcx - 0x18], 0
je	0x140050893
je	0x140050893
test	dil, dil
jne	0x140050893
jne	0x140050893
test	r15b, r15b
je	0x140050ebc
je	0x140050ebc
cmp	byte ptr [rsp + 0x4f], 0
mov	rdi, qword ptr [rsp + 0x110]
movabs	rax, 0x7fffffffffffffff
movabs	rdx, 0x8000000000000000
cmovne	rax, rdx
mov	qword ptr [rdi], rax
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
jmp	0x1400508b0
jmp	0x1400508b0
nop	word ptr [rax + rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
mov	r10d, 0xffffffff
mov	word ptr [rsp + 0x78], r10w
cmp	rax, rdx
jb	0x1400506d4
jb	0x1400506d4
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	ax, -1
jne	0x1400506e1
jne	0x1400506e1
mov	qword ptr [rsp + 0x70], 0
jmp	0x1400506e1
jmp	0x1400506e1
nop	dword ptr [rax]
add	r14d, 1
mov	ebp, eax
jmp	0x1400506a1
jmp	0x1400506a1
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140050f7e
jae	0x140050f7e
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140050f23
je	0x140050f23
cmp	ax, -1
sete	dl
jmp	0x140050859
jmp	0x140050859
nop	
xor	edi, edi
jmp	0x140050714
jmp	0x140050714
nop	word ptr [rax + rax]
test	dil, dil
jne	0x140050fd7
jne	0x140050fd7
lea	rax, [rsp + 0x88]
lea	r13, [rsi + 0x9c]
xor	r15d, r15d
xor	r12d, r12d
mov	qword ptr [rsp + 0x58], rax
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x140050c75
je	0x140050c75
cmp	word ptr [rsi + 0x4a], bx
je	0x140050db8
je	0x140050db8
mov	rcx, qword ptr [rsp + 0x28]
cmp	word ptr [rsi + 0x48], bx
sete	al
test	rcx, rcx
sete	dl
or	al, dl
jne	0x140050ae8
jne	0x140050ae8
mov	rdx, rcx
mov	rax, r13
jmp	0x140050cae
jmp	0x140050cae
nop	word ptr [rax + rax]
add	rax, 2
sub	rdx, 1
je	0x140050da8
je	0x140050da8
cmp	bx, word ptr [rax]
jne	0x140050ca0
jne	0x140050ca0
sub	rax, r13
sar	rax, 1
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
cmp	qword ptr [rsp + 0x30], r12
jb	0x140050d98
jb	0x140050d98
mov	rcx, qword ptr [rsp + 0x38]
mov	rdx, qword ptr [rsp + 0x40]
cdqe	
imul	r12, rcx
sub	rdx, rax
cmp	rdx, r12
setb	dl
add	r12, rax
add	r14d, 1
or	r15d, edx
mov	rbx, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x140050e10
jae	0x140050e10
add	rax, 2
mov	ecx, 0xffffffff
mov	qword ptr [rbx + 0x10], rax
mov	word ptr [rsp + 0x78], cx
cmp	rax, rdx
jae	0x140050f62
jae	0x140050f62
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140050efc
je	0x140050efc
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x60]
sete	bl
cmp	word ptr [rsp + 0x68], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x140050d52
je	0x140050d52
test	al, al
jne	0x140050de0
jne	0x140050de0
cmp	dl, bl
je	0x140050866
je	0x140050866
mov	rcx, qword ptr [rsp + 0x70]
test	rcx, rcx
je	0x140050e30
je	0x140050e30
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140050fca
jae	0x140050fca
movzx	ebx, word ptr [rax]
cmp	bx, -1
jne	0x140050c63
jne	0x140050c63
mov	qword ptr [rsp + 0x70], 0
jmp	0x140050c63
jmp	0x140050c63
nop	dword ptr [rax]
movzx	r15d, byte ptr [rsp + 0x4e]
jmp	0x140050cf0
jmp	0x140050cf0
nop	dword ptr [rax + rax]
mov	byte ptr [rsp + 0x4e], 0
xor	edi, edi
jmp	0x140050866
jmp	0x140050866
nop	dword ptr [rax]
test	r14d, r14d
je	0x140050faf
je	0x140050faf
mov	rcx, qword ptr [rsp + 0x58]
movsx	edx, r14b
call	0x140073fa0
call	0x140073fa0
xor	r14d, r14d
jmp	0x140050cf0
jmp	0x140050cf0
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140050f57
jae	0x140050f57
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140050eee
je	0x140050eee
cmp	ax, -1
sete	dl
jmp	0x140050d52
jmp	0x140050d52
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	eax, 0xffffffff
mov	rdx, qword ptr [rbx + 0x18]
mov	word ptr [rsp + 0x78], ax
mov	rax, qword ptr [rbx + 0x10]
jmp	0x140050d18
jmp	0x140050d18
mov	ebx, 0xffffffff
jmp	0x140050c63
jmp	0x140050c63
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	r8d, 0xffffffff
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	word ptr [rsp + 0x78], r8w
jmp	0x14005081f
jmp	0x14005081f
mov	r13d, 8
jmp	0x1400505e8
jmp	0x1400505e8
lea	rcx, [rsp + 0x88]
mov	edx, 0x20
call	0x140073cf0
call	0x140073cf0
jmp	0x140050754
jmp	0x140050754
mov	qword ptr [rsp + 0x60], 0
jmp	0x140050a7b
jmp	0x140050a7b
mov	byte ptr [rsp + 0x4f], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
jmp	0x14005071e
jmp	0x14005071e
cmp	word ptr [rsi + 0x4a], bx
je	0x140050638
je	0x140050638
cmp	word ptr [rsi + 0x48], bx
je	0x140050638
je	0x140050638
jmp	0x14005091e
jmp	0x14005091e
mov	rax, r12
mov	rdi, qword ptr [rsp + 0x110]
neg	rax
cmp	byte ptr [rsp + 0x4f], 0
cmove	rax, r12
mov	qword ptr [rdi], rax
jmp	0x1400508b0
jmp	0x1400508b0
mov	rax, qword ptr [rsp + 0x108]
mov	dword ptr [rax], 4
jmp	0x140050b2c
jmp	0x140050b2c
mov	qword ptr [rsp + 0x60], 0
jmp	0x140050dfb
jmp	0x140050dfb
mov	qword ptr [rsp + 0x70], 0
jmp	0x140050d2e
jmp	0x140050d2e
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140050a71
jmp	0x140050a71
mov	qword ptr [rsp + 0x70], 0
jmp	0x140050835
jmp	0x140050835
mov	qword ptr [rsp + 0x60], 0
jmp	0x140050c23
jmp	0x140050c23
xor	edi, edi
mov	ebp, 1
jmp	0x140050714
jmp	0x140050714
mov	qword ptr [rsp + 0x70], 0
jmp	0x140050a1a
jmp	0x140050a1a
mov	edi, eax
mov	ebp, 1
jmp	0x14005071e
jmp	0x14005071e
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140050df1
jmp	0x140050df1
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140050d24
jmp	0x140050d24
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14005082b
jmp	0x14005082b
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140050c19
jmp	0x140050c19
xor	r14d, r14d
xor	ebp, ebp
jmp	0x140050714
jmp	0x140050714
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	ebx, ax
jmp	0x140050a10
jmp	0x140050a10
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	ebx, ax
jmp	0x140050aab
jmp	0x140050aab
mov	byte ptr [rsp + 0x4e], 0
mov	edi, eax
jmp	0x140050866
jmp	0x140050866
mov	byte ptr [rsp + 0x4e], dil
xor	r12d, r12d
xor	edi, edi
jmp	0x140050866
jmp	0x140050866
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebx, eax
jmp	0x140050d79
jmp	0x140050d79
mov	byte ptr [rsp + 0x4e], dil
xor	r12d, r12d
xor	r15d, r15d
xor	edi, edi
jmp	0x140050866
jmp	0x140050866
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x88]
mov	rdx, qword ptr [rsp + 0x50]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x88
mov	rbx, qword ptr [rsp + 0xf0]
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	qword ptr [rsp + 0xd0], rcx
lea	rcx, [rbx + 0xd0]
movups	xmmword ptr [rsp + 0x60], xmm0
movups	xmmword ptr [rsp + 0x50], xmm1
call	0x14001d7e0
call	0x14001d7e0
mov	r15d, dword ptr [rbx + 0x18]
mov	rsi, rax
and	r15d, 0x4a
cmp	r15d, 0x40
je	0x140051892
je	0x140051892
mov	r13d, 0xa
cmp	r15d, 8
je	0x1400513cb
je	0x1400513cb
lea	r12, [rsp + 0x50]
lea	rbp, [rsp + 0x60]
mov	rdx, r12
mov	rcx, rbp
call	0x140020940
call	0x140020940
mov	edi, eax
test	al, al
jne	0x1400518bf
jne	0x1400518bf
mov	rcx, rbp
call	0x1400209f0
call	0x1400209f0
movzx	ebx, ax
movzx	eax, word ptr [rsi + 0x94]
cmp	ax, bx
je	0x140051370
je	0x140051370
cmp	word ptr [rsi + 0x96], bx
je	0x140051370
je	0x140051370
mov	byte ptr [rsp + 0x4f], 0
movzx	eax, byte ptr [rsi + 0x20]
xor	r14d, r14d
xor	ebp, ebp
test	al, al
je	0x1400510db
je	0x1400510db
cmp	word ptr [rsi + 0x4a], bx
je	0x140051670
je	0x140051670
cmp	word ptr [rsi + 0x48], bx
je	0x140051670
je	0x140051670
cmp	word ptr [rsi + 0x9c], bx
je	0x140051420
je	0x140051420
test	bpl, bpl
je	0x140051670
je	0x140051670
cmp	word ptr [rsi + 0x98], bx
je	0x140051111
je	0x140051111
cmp	word ptr [rsi + 0x9a], bx
jne	0x14005195e
jne	0x14005195e
test	r15d, r15d
sete	al
cmp	r13d, 0x10
sete	dl
or	al, dl
je	0x140051978
je	0x140051978
xor	r14d, r14d
xor	ebp, ebp
mov	r13d, 0x10
mov	rdi, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
cmp	rax, rdx
jae	0x1400515e8
jae	0x1400515e8
add	rax, 2
mov	r11d, 0xffffffff
mov	qword ptr [rdi + 0x10], rax
mov	word ptr [rsp + 0x68], r11w
cmp	rax, rdx
jae	0x140051610
jae	0x140051610
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140051623
je	0x140051623
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x50]
sete	dil
cmp	word ptr [rsp + 0x58], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x140051196
je	0x140051196
test	al, al
jne	0x1400514d0
jne	0x1400514d0
cmp	dl, dil
jne	0x140051460
jne	0x140051460
mov	edi, 1
cmp	r13d, 0x10
je	0x1400513fc
je	0x1400513fc
movsxd	rax, r13d
mov	r12d, r13d
mov	qword ptr [rsp + 0x20], rax
lea	rax, [rsp + 0x77]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x38], rax
call	0x140071d40
call	0x140071d40
cmp	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsp + 0x78], rax
jne	0x14005189d
jne	0x14005189d
movsxd	rcx, r12d
mov	rax, 0xffffffffffffffff
xor	edx, edx
div	rcx
mov	qword ptr [rsp + 0x30], rcx
mov	qword ptr [rsp + 0x28], rax
movzx	eax, byte ptr [rsi + 0xc8]
mov	byte ptr [rsp + 0x4e], al
test	al, al
jne	0x140051680
jne	0x140051680
xor	r15d, r15d
test	dil, dil
jne	0x1400519e8
jne	0x1400519e8
xor	r12d, r12d
add	r13d, 0x30
cmp	qword ptr [rsp + 0x20], 0xa
ja	0x1400514b0
ja	0x1400514b0
cmp	bx, 0x2f
jbe	0x140051558
jbe	0x140051558
cmp	bx, r13w
jae	0x140051558
jae	0x140051558
sub	ebx, 0x30
cmp	qword ptr [rsp + 0x28], r12
jb	0x1400514a0
jb	0x1400514a0
mov	rax, qword ptr [rsp + 0x30]
imul	r12, rax
movsxd	rax, ebx
add	rax, r12
setb	dl
mov	r12, rax
add	r14d, 1
or	r15d, edx
mov	rbx, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x140051870
jae	0x140051870
add	rax, 2
mov	r9d, 0xffffffff
mov	qword ptr [rbx + 0x10], rax
mov	word ptr [rsp + 0x68], r9w
cmp	rax, rdx
jae	0x14005199d
jae	0x14005199d
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140051942
je	0x140051942
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x50]
sete	bl
cmp	word ptr [rsp + 0x58], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x1400512cb
je	0x1400512cb
test	al, al
jne	0x140051648
jne	0x140051648
cmp	dl, bl
jne	0x140051500
jne	0x140051500
mov	byte ptr [rsp + 0x4e], 1
mov	rcx, qword ptr [rsp + 0x78]
cmp	qword ptr [rcx - 0x18], 0
jne	0x14005156d
jne	0x14005156d
nop	dword ptr [rax + rax]
test	r14d, r14d
jne	0x1400515b1
jne	0x1400515b1
cmp	bpl, 1
je	0x1400515b1
je	0x1400515b1
mov	rax, qword ptr [rsp + 0x100]
mov	qword ptr [rax], 0
mov	rax, qword ptr [rsp + 0xf8]
mov	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x4e], 0
je	0x140051332
je	0x140051332
mov	rax, qword ptr [rsp + 0xf8]
or	dword ptr [rax], 2
movdqu	xmm2, xmmword ptr [rsp + 0x60]
mov	rax, qword ptr [rsp + 0xd0]
sub	rcx, 0x18
mov	rdx, qword ptr [rsp + 0x38]
movups	xmmword ptr [rax], xmm2
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xd0]
add	rsp, 0x88
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
cmp	ax, bx
movzx	eax, byte ptr [rsi + 0x20]
sete	byte ptr [rsp + 0x4f]
test	al, al
jne	0x1400518d0
jne	0x1400518d0
cmp	word ptr [rsi + 0x48], bx
je	0x1400510c8
je	0x1400510c8
mov	rcx, qword ptr [rsp + 0x60]
mov	edi, 0xffffffff
call	0x140092490
call	0x140092490
mov	rdx, r12
mov	rcx, rbp
mov	word ptr [rsp + 0x68], di
call	0x140020940
call	0x140020940
mov	edi, eax
test	al, al
jne	0x1400519b6
jne	0x1400519b6
mov	rcx, rbp
call	0x1400209f0
call	0x1400209f0
movzx	ebx, ax
movzx	eax, byte ptr [rsi + 0x20]
jmp	0x1400510c8
jmp	0x1400510c8
lea	r12, [rsp + 0x50]
lea	rbp, [rsp + 0x60]
mov	r13d, 0x10
mov	rdx, r12
mov	rcx, rbp
call	0x140020940
call	0x140020940
mov	edi, eax
test	al, al
je	0x140051097
je	0x140051097
mov	byte ptr [rsp + 0x4f], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
mov	qword ptr [rsp + 0x20], 0x16
mov	r12d, 0x10
mov	r13d, 0x16
jmp	0x1400511b9
jmp	0x1400511b9
nop	word ptr cs:[rax + rax]
mov	eax, ebp
xor	eax, 1
cmp	r13d, 0xa
sete	dl
or	al, dl
je	0x1400510fb
je	0x1400510fb
cmp	r13d, 8
sete	bpl
test	r15d, r15d
sete	dl
or	bpl, dl
je	0x140051638
je	0x140051638
xor	r14d, r14d
mov	r13d, 8
jmp	0x140051131
jmp	0x140051131
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x60]
mov	ebx, 0xffff
test	rcx, rcx
je	0x14005148a
je	0x14005148a
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400519c0
jae	0x1400519c0
movzx	ebx, word ptr [rax]
cmp	bx, -1
je	0x14005196a
je	0x14005196a
test	bpl, bpl
je	0x140051670
je	0x140051670
movzx	eax, byte ptr [rsi + 0x20]
jmp	0x1400510cd
jmp	0x1400510cd
nop	dword ptr [rax]
mov	r15d, 1
jmp	0x140051267
jmp	0x140051267
nop	dword ptr [rax + rax]
lea	eax, [rbx - 0x30]
cmp	ax, 9
jbe	0x14005123d
jbe	0x14005123d
lea	eax, [rbx - 0x61]
cmp	ax, 5
ja	0x140051540
ja	0x140051540
sub	ebx, 0x57
jmp	0x140051240
jmp	0x140051240
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140051937
jae	0x140051937
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x1400518b1
je	0x1400518b1
cmp	ax, -1
sete	dl
jmp	0x140051196
jmp	0x140051196
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x60]
test	rcx, rcx
je	0x140051558
je	0x140051558
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400519ce
jae	0x1400519ce
movzx	ebx, word ptr [rax]
cmp	bx, -1
jne	0x14005121d
jne	0x14005121d
mov	qword ptr [rsp + 0x60], 0
cmp	qword ptr [rsp + 0x20], 0xa
jbe	0x140051558
jbe	0x140051558
nop	word ptr cs:[rax + rax]
lea	eax, [rbx - 0x41]
cmp	ax, 5
ja	0x140051558
ja	0x140051558
sub	ebx, 0x37
jmp	0x140051240
jmp	0x140051240
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x78]
mov	byte ptr [rsp + 0x4e], 0
cmp	qword ptr [rcx - 0x18], 0
je	0x1400512f0
je	0x1400512f0
lea	rbx, [rsp + 0x78]
movsx	edx, r14b
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	r8, rbx
call	0x1400ae880
call	0x1400ae880
test	al, al
je	0x140051908
je	0x140051908
mov	rcx, qword ptr [rsp + 0x78]
test	r14d, r14d
jne	0x1400515b1
jne	0x1400515b1
cmp	bpl, 1
je	0x1400515b1
je	0x1400515b1
cmp	qword ptr [rcx - 0x18], 0
je	0x140051303
je	0x140051303
test	dil, dil
jne	0x140051303
jne	0x140051303
test	r15b, r15b
je	0x1400518e9
je	0x1400518e9
mov	rax, qword ptr [rsp + 0x100]
mov	qword ptr [rax], 0xffffffffffffffff
mov	rax, qword ptr [rsp + 0xf8]
mov	dword ptr [rax], 4
jmp	0x140051320
jmp	0x140051320
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
mov	r10d, 0xffffffff
mov	word ptr [rsp + 0x68], r10w
cmp	rax, rdx
jb	0x140051164
jb	0x140051164
nop	
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	ax, -1
jne	0x140051171
jne	0x140051171
mov	qword ptr [rsp + 0x60], 0
jmp	0x140051171
jmp	0x140051171
nop	dword ptr [rax]
add	r14d, 1
mov	ebp, eax
jmp	0x140051131
jmp	0x140051131
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400519ab
jae	0x1400519ab
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140051950
je	0x140051950
cmp	ax, -1
sete	dl
jmp	0x1400512cb
jmp	0x1400512cb
nop	
xor	edi, edi
jmp	0x1400511a4
jmp	0x1400511a4
nop	word ptr [rax + rax]
test	dil, dil
jne	0x140051a04
jne	0x140051a04
lea	rax, [rsp + 0x78]
lea	r13, [rsi + 0x9c]
xor	r15d, r15d
xor	r12d, r12d
mov	qword ptr [rsp + 0x40], rax
movzx	eax, byte ptr [rsi + 0x20]
test	al, al
je	0x1400516b2
je	0x1400516b2
cmp	word ptr [rsi + 0x4a], bx
je	0x1400517e8
je	0x1400517e8
mov	rcx, qword ptr [rsp + 0x20]
cmp	word ptr [rsi + 0x48], bx
sete	al
test	rcx, rcx
sete	dl
or	al, dl
jne	0x140051558
jne	0x140051558
mov	rdx, rcx
mov	rax, r13
jmp	0x1400516e6
jmp	0x1400516e6
nop	dword ptr [rax]
add	rax, 2
sub	rdx, 1
je	0x1400517d8
je	0x1400517d8
cmp	bx, word ptr [rax]
jne	0x1400516d8
jne	0x1400516d8
sub	rax, r13
sar	rax, 1
lea	edx, [rax - 6]
cmp	eax, 0xf
cmovg	eax, edx
cmp	qword ptr [rsp + 0x28], r12
jb	0x1400517c8
jb	0x1400517c8
mov	rcx, qword ptr [rsp + 0x30]
cdqe	
imul	r12, rcx
add	rax, r12
setb	dl
mov	r12, rax
add	r14d, 1
or	r15d, edx
mov	rbx, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x140051840
jae	0x140051840
add	rax, 2
mov	ecx, 0xffffffff
mov	qword ptr [rbx + 0x10], rax
mov	word ptr [rsp + 0x68], cx
cmp	rax, rdx
jae	0x14005198f
jae	0x14005198f
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140051929
je	0x140051929
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x50]
sete	bl
cmp	word ptr [rsp + 0x58], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x140051782
je	0x140051782
test	al, al
jne	0x140051810
jne	0x140051810
cmp	dl, bl
je	0x1400512d8
je	0x1400512d8
mov	rcx, qword ptr [rsp + 0x60]
test	rcx, rcx
je	0x140051860
je	0x140051860
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400519f7
jae	0x1400519f7
movzx	ebx, word ptr [rax]
cmp	bx, -1
jne	0x1400516a0
jne	0x1400516a0
mov	qword ptr [rsp + 0x60], 0
jmp	0x1400516a0
jmp	0x1400516a0
nop	dword ptr [rax]
movzx	r15d, byte ptr [rsp + 0x4e]
jmp	0x140051720
jmp	0x140051720
nop	dword ptr [rax + rax]
mov	byte ptr [rsp + 0x4e], 0
xor	edi, edi
jmp	0x1400512d8
jmp	0x1400512d8
nop	dword ptr [rax]
test	r14d, r14d
je	0x1400519dc
je	0x1400519dc
mov	rcx, qword ptr [rsp + 0x40]
movsx	edx, r14b
call	0x140073fa0
call	0x140073fa0
xor	r14d, r14d
jmp	0x140051720
jmp	0x140051720
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140051984
jae	0x140051984
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14005191b
je	0x14005191b
cmp	ax, -1
sete	dl
jmp	0x140051782
jmp	0x140051782
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	eax, 0xffffffff
mov	rdx, qword ptr [rbx + 0x18]
mov	word ptr [rsp + 0x68], ax
mov	rax, qword ptr [rbx + 0x10]
jmp	0x140051748
jmp	0x140051748
mov	ebx, 0xffffffff
jmp	0x1400516a0
jmp	0x1400516a0
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	r8d, 0xffffffff
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	word ptr [rsp + 0x68], r8w
jmp	0x140051291
jmp	0x140051291
mov	r13d, 8
jmp	0x140051078
jmp	0x140051078
lea	rcx, [rsp + 0x78]
mov	edx, 0x20
call	0x140073cf0
call	0x140073cf0
jmp	0x1400511de
jmp	0x1400511de
mov	qword ptr [rsp + 0x50], 0
jmp	0x1400514eb
jmp	0x1400514eb
mov	byte ptr [rsp + 0x4f], 0
xor	ebx, ebx
xor	r14d, r14d
xor	ebp, ebp
jmp	0x1400511ae
jmp	0x1400511ae
cmp	word ptr [rsi + 0x4a], bx
je	0x1400510c8
je	0x1400510c8
cmp	word ptr [rsi + 0x48], bx
je	0x1400510c8
je	0x1400510c8
jmp	0x14005138e
jmp	0x14005138e
mov	rax, r12
neg	rax
cmp	byte ptr [rsp + 0x4f], 0
cmovne	r12, rax
mov	rax, qword ptr [rsp + 0x100]
mov	qword ptr [rax], r12
jmp	0x140051320
jmp	0x140051320
mov	rax, qword ptr [rsp + 0xf8]
mov	dword ptr [rax], 4
jmp	0x140051596
jmp	0x140051596
mov	qword ptr [rsp + 0x50], 0
jmp	0x14005182b
jmp	0x14005182b
mov	qword ptr [rsp + 0x60], 0
jmp	0x14005175e
jmp	0x14005175e
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400514e1
jmp	0x1400514e1
mov	qword ptr [rsp + 0x60], 0
jmp	0x1400512a7
jmp	0x1400512a7
mov	qword ptr [rsp + 0x50], 0
jmp	0x140051663
jmp	0x140051663
xor	edi, edi
mov	ebp, 1
jmp	0x1400511a4
jmp	0x1400511a4
mov	qword ptr [rsp + 0x60], 0
jmp	0x14005148a
jmp	0x14005148a
mov	edi, eax
mov	ebp, 1
jmp	0x1400511ae
jmp	0x1400511ae
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140051821
jmp	0x140051821
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140051754
jmp	0x140051754
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14005129d
jmp	0x14005129d
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140051659
jmp	0x140051659
xor	r14d, r14d
xor	ebp, ebp
jmp	0x1400511a4
jmp	0x1400511a4
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	ebx, ax
jmp	0x140051480
jmp	0x140051480
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	ebx, ax
jmp	0x14005151b
jmp	0x14005151b
mov	byte ptr [rsp + 0x4e], 0
mov	edi, eax
jmp	0x1400512d8
jmp	0x1400512d8
mov	byte ptr [rsp + 0x4e], dil
xor	r12d, r12d
xor	edi, edi
jmp	0x1400512d8
jmp	0x1400512d8
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebx, eax
jmp	0x1400517a9
jmp	0x1400517a9
mov	byte ptr [rsp + 0x4e], dil
xor	r12d, r12d
xor	r15d, r15d
xor	edi, edi
jmp	0x1400512d8
jmp	0x1400512d8
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x78]
mov	rdx, qword ptr [rsp + 0x38]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x78
mov	rax, qword ptr [rsp + 0xe0]
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	rsi, qword ptr [rsp + 0xf0]
mov	qword ptr [rsp + 0xc0], rcx
lea	rcx, [rax + 0xd0]
movups	xmmword ptr [rsp + 0x50], xmm0
movups	xmmword ptr [rsp + 0x40], xmm1
call	0x14001d7e0
call	0x14001d7e0
lea	rdx, [rsp + 0x40]
mov	r13, rax
lea	rax, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rdx
mov	rcx, rax
mov	qword ptr [rsp + 0x28], rax
call	0x140020940
call	0x140020940
mov	byte ptr [rsp + 0x26], al
test	al, al
je	0x1400522ab
je	0x1400522ab
xor	edi, edi
xor	r12d, r12d
xor	ebp, ebp
nop	word ptr [rax + rax]
lea	rax, [rsp + 0x67]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x38], rax
call	0x140071d40
call	0x140071d40
cmp	byte ptr [r13 + 0x20], 0
mov	qword ptr [rsp + 0x68], rax
jne	0x140052294
jne	0x140052294
movzx	r15d, byte ptr [r13 + 0xc8]
test	r15b, r15b
jne	0x140051cd3
jne	0x140051cd3
cmp	byte ptr [rsp + 0x26], 0
jne	0x140052637
jne	0x140052637
mov	byte ptr [rsp + 0x27], 0
mov	r14, qword ptr [rip + 0x6cb22]
lea	eax, [rdi - 0x30]
cmp	ax, 9
ja	0x140051c15
ja	0x140051c15
mov	rax, qword ptr [rsi]
mov	rbp, qword ptr [rax - 0x18]
lea	rbx, [rbp + 1]
cmp	qword ptr [rax - 0x10], rbx
jb	0x140051b46
jb	0x140051b46
mov	r10d, dword ptr [r14]
test	r10d, r10d
jne	0x140052060
jne	0x140052060
mov	r9d, dword ptr [rax - 8]
test	r9d, r9d
setg	al
test	al, al
je	0x140051b51
je	0x140051b51
mov	rdx, rbx
mov	rcx, rsi
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], dil
mov	rax, qword ptr [rsi]
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rbx
mov	byte ptr [rax + rbp + 1], 0
mov	ebp, 1
mov	rbx, qword ptr [rsp + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x1400520e0
jae	0x1400520e0
add	rax, 2
mov	ecx, 0xffffffff
mov	qword ptr [rbx + 0x10], rax
mov	word ptr [rsp + 0x58], cx
cmp	rax, rdx
jae	0x140052110
jae	0x140052110
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140052123
je	0x140052123
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x40]
sete	bl
cmp	word ptr [rsp + 0x48], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x140051bd6
je	0x140051bd6
test	al, al
jne	0x140052070
jne	0x140052070
cmp	dl, bl
je	0x140051e06
je	0x140051e06
mov	rcx, qword ptr [rsp + 0x50]
test	rcx, rcx
je	0x140051c10
je	0x140051c10
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14005260a
jae	0x14005260a
movzx	edi, word ptr [rax]
cmp	di, -1
jne	0x140051b0e
jne	0x140051b0e
mov	qword ptr [rsp + 0x50], 0
nop	dword ptr [rax]
mov	edi, 0xffffffff
cmp	word ptr [r13 + 0x48], di
je	0x1400524ea
je	0x1400524ea
cmp	word ptr [r13 + 0xb8], di
je	0x140051c38
je	0x140051c38
cmp	word ptr [r13 + 0xc4], di
jne	0x140051e06
jne	0x140051e06
movzx	eax, byte ptr [rsp + 0x27]
xor	eax, 1
and	bpl, al
je	0x140051e06
je	0x140051e06
mov	edx, 0x65
mov	rcx, rsi
call	0x140073fa0
call	0x140073fa0
mov	rcx, qword ptr [rsp + 0x50]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140052617
jae	0x140052617
add	rax, 2
mov	qword ptr [rcx + 0x10], rax
mov	rdx, qword ptr [rsp + 0x30]
mov	rcx, qword ptr [rsp + 0x28]
mov	r8d, 0xffffffff
mov	word ptr [rsp + 0x58], r8w
call	0x140020940
call	0x140020940
test	al, al
jne	0x14005259e
jne	0x14005259e
mov	rcx, qword ptr [rsp + 0x28]
call	0x1400209f0
call	0x1400209f0
mov	edi, eax
cmp	word ptr [r13 + 0x96], ax
je	0x14005258a
je	0x14005258a
mov	edx, 0x2d
cmp	ax, word ptr [r13 + 0x94]
jne	0x140052515
jne	0x140052515
mov	rcx, rsi
call	0x140073fa0
call	0x140073fa0
mov	byte ptr [rsp + 0x27], bpl
jmp	0x140051b74
jmp	0x140051b74
cmp	byte ptr [rsp + 0x26], 0
jne	0x140052637
jne	0x140052637
mov	byte ptr [rsp + 0x27], 0
movzx	eax, byte ptr [r13 + 0x20]
lea	r14, [r13 + 0x9c]
nop	
test	al, al
je	0x140051cff
je	0x140051cff
cmp	word ptr [r13 + 0x4a], di
je	0x1400520a0
je	0x1400520a0
cmp	word ptr [r13 + 0x48], di
je	0x140051ea0
je	0x140051ea0
lea	rax, [r13 + 0xb0]
mov	rbx, r14
jmp	0x140051d2d
jmp	0x140051d2d
nop	word ptr cs:[rax + rax]
add	rbx, 2
cmp	rax, rbx
je	0x140051f68
je	0x140051f68
cmp	di, word ptr [rbx]
jne	0x140051d20
jne	0x140051d20
mov	rax, qword ptr [rsi]
mov	rbp, qword ptr [rax - 0x18]
lea	rdi, [rbp + 1]
cmp	qword ptr [rax - 0x10], rdi
jb	0x140051d64
jb	0x140051d64
mov	rcx, qword ptr [rip + 0x6c8e6]
mov	r10d, dword ptr [rcx]
test	r10d, r10d
jne	0x140052236
jne	0x140052236
mov	r9d, dword ptr [rax - 8]
test	r9d, r9d
setg	al
test	al, al
je	0x140051d6f
je	0x140051d6f
mov	rdx, rdi
mov	rcx, rsi
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rsi]
sub	rbx, r14
add	r12d, 1
sar	rbx, 1
mov	rdx, qword ptr [rax - 0x18]
add	ebx, 0x30
mov	byte ptr [rax + rdx], bl
mov	rax, qword ptr [rsi]
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rdi
mov	byte ptr [rax + rbp + 1], 0
mov	ebp, r15d
mov	rbx, qword ptr [rsp + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x140052160
jae	0x140052160
add	rax, 2
mov	ecx, 0xffffffff
mov	qword ptr [rbx + 0x10], rax
mov	word ptr [rsp + 0x58], cx
cmp	rax, rdx
jae	0x140052188
jae	0x140052188
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14005219b
je	0x14005219b
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x40]
sete	bl
cmp	word ptr [rsp + 0x48], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x140051dfe
je	0x140051dfe
test	al, al
jne	0x140052138
jne	0x140052138
cmp	bl, dl
jne	0x140051f30
jne	0x140051f30
mov	rax, qword ptr [rsp + 0x68]
cmp	qword ptr [rax - 0x18], 0
mov	rsi, rax
je	0x140051e63
je	0x140051e63
cmp	byte ptr [rsp + 0x26], 0
jne	0x14005228a
jne	0x14005228a
cmp	byte ptr [rsp + 0x27], 0
jne	0x14005228a
jne	0x14005228a
lea	rbx, [rsp + 0x68]
movsx	edx, r12b
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	rsi, qword ptr [rsp + 0x68]
mov	rdx, qword ptr [r13 + 0x18]
mov	rcx, qword ptr [r13 + 0x10]
mov	r8, rbx
call	0x1400ae880
call	0x1400ae880
test	al, al
jne	0x140051e63
jne	0x140051e63
mov	rax, qword ptr [rsp + 0xe8]
mov	dword ptr [rax], 4
movdqu	xmm2, xmmword ptr [rsp + 0x50]
mov	rax, qword ptr [rsp + 0xc0]
lea	rcx, [rsi - 0x18]
mov	rdx, qword ptr [rsp + 0x38]
movups	xmmword ptr [rax], xmm2
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xc0]
add	rsp, 0x78
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
movzx	edi, byte ptr [rsp + 0x26]
or	byte ptr [rsp + 0x27], dil
mov	rax, qword ptr [rsp + 0x68]
mov	rdx, qword ptr [rax - 0x18]
jne	0x1400525a3
jne	0x1400525a3
test	rdx, rdx
je	0x140051ecf
je	0x140051ecf
lea	rbx, [rsp + 0x68]
movsx	edx, r12b
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rax - 0x18]
lea	rbx, [rdx + 1]
cmp	qword ptr [rax - 0x10], rbx
jb	0x140051efa
jb	0x140051efa
mov	rcx, qword ptr [rip + 0x6c749]
mov	edi, dword ptr [rcx]
test	edi, edi
jne	0x140052243
jne	0x140052243
mov	r11d, dword ptr [rax - 8]
test	r11d, r11d
jle	0x140051f0c
jle	0x140051f0c
mov	rdx, rbx
mov	rcx, rsi
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], 0x2e
mov	rax, qword ptr [rsi]
mov	byte ptr [rsp + 0x26], r15b
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rbx
mov	byte ptr [rax + rbx], 0
jmp	0x140051d9c
jmp	0x140051d9c
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x50]
test	rcx, rcx
je	0x1400521b0
je	0x1400521b0
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140052659
jae	0x140052659
movzx	edi, word ptr [rax]
cmp	di, -1
je	0x1400525fc
je	0x1400525fc
movzx	eax, byte ptr [r13 + 0x20]
jmp	0x140051cf0
jmp	0x140051cf0
nop	dword ptr [rax + rax]
cmp	word ptr [r13 + 0xb8], di
je	0x140051f80
je	0x140051f80
cmp	word ptr [r13 + 0xc4], di
jne	0x140051e06
jne	0x140051e06
movzx	edx, byte ptr [rsp + 0x27]
mov	rax, qword ptr [rsp + 0x68]
xor	edx, 1
mov	rcx, qword ptr [rax - 0x18]
and	bpl, dl
je	0x140051e0b
je	0x140051e0b
test	rcx, rcx
je	0x140051faa
je	0x140051faa
cmp	byte ptr [rsp + 0x26], 0
je	0x140052220
je	0x140052220
mov	edx, 0x65
mov	rcx, rsi
call	0x140073fa0
call	0x140073fa0
mov	rcx, qword ptr [rsp + 0x50]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400524d4
jae	0x1400524d4
add	rax, 2
mov	qword ptr [rcx + 0x10], rax
mov	rdx, qword ptr [rsp + 0x30]
mov	rcx, qword ptr [rsp + 0x28]
mov	r8d, 0xffffffff
mov	word ptr [rsp + 0x58], r8w
call	0x140020940
call	0x140020940
test	al, al
jne	0x14005259e
jne	0x14005259e
mov	rcx, qword ptr [rsp + 0x50]
movzx	edi, word ptr [rsp + 0x58]
test	rcx, rcx
je	0x14005200e
je	0x14005200e
cmp	di, -1
je	0x140052261
je	0x140052261
movzx	edx, word ptr [r13 + 0x96]
movzx	eax, byte ptr [r13 + 0x20]
cmp	dx, di
je	0x1400521f0
je	0x1400521f0
cmp	word ptr [r13 + 0x94], di
jne	0x140052210
jne	0x140052210
test	al, al
jne	0x1400521c0
jne	0x1400521c0
cmp	di, word ptr [r13 + 0x48]
je	0x140052594
je	0x140052594
mov	edx, 0x2d
mov	rcx, rsi
call	0x140073fa0
call	0x140073fa0
mov	byte ptr [rsp + 0x27], bpl
jmp	0x140051d9c
jmp	0x140051d9c
nop	dword ptr [rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
jmp	0x140051b42
jmp	0x140051b42
nop	dword ptr [rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400524df
jae	0x1400524df
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140052253
je	0x140052253
cmp	ax, -1
sete	dl
jmp	0x140051bd6
jmp	0x140051bd6
nop	word ptr [rax + rax]
movzx	ecx, byte ptr [rsp + 0x27]
or	byte ptr [rsp + 0x26], cl
jne	0x14005259e
jne	0x14005259e
test	r12d, r12d
je	0x140052673
je	0x140052673
lea	rbx, [rsp + 0x68]
movsx	edx, r12b
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
mov	byte ptr [rsp + 0x27], 0
xor	r12d, r12d
jmp	0x140051d9c
jmp	0x140051d9c
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	r15d, 0xffffffff
mov	word ptr [rsp + 0x58], r15w
cmp	rax, rdx
jb	0x140051ba5
jb	0x140051ba5
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	ax, -1
jne	0x140051bb2
jne	0x140051bb2
mov	qword ptr [rsp + 0x50], 0
jmp	0x140051bb2
jmp	0x140051bb2
nop	dword ptr [rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400525c6
jae	0x1400525c6
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x1400524c6
je	0x1400524c6
cmp	ax, -1
sete	dl
jmp	0x140051dfe
jmp	0x140051dfe
nop	
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	eax, 0xffffffff
mov	rdx, qword ptr [rbx + 0x18]
mov	word ptr [rsp + 0x58], ax
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rdx
jb	0x140051dcd
jb	0x140051dcd
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	ax, -1
jne	0x140051dda
jne	0x140051dda
mov	qword ptr [rsp + 0x50], 0
jmp	0x140051dda
jmp	0x140051dda
nop	dword ptr [rax]
movzx	eax, byte ptr [r13 + 0x20]
mov	edi, 0xffffffff
jmp	0x140051cf0
jmp	0x140051cf0
nop	
cmp	word ptr [r13 + 0x4a], di
je	0x1400524ae
je	0x1400524ae
cmp	word ptr [r13 + 0x48], di
je	0x1400524ae
je	0x1400524ae
cmp	dx, di
setne	dl
movzx	edx, dl
lea	edx, [rdx + rdx + 0x2b]
jmp	0x14005204a
jmp	0x14005204a
nop	dword ptr [rax + rax]
test	al, al
jne	0x1400521c0
jne	0x1400521c0
cmp	word ptr [r13 + 0x48], di
je	0x140052594
je	0x140052594
mov	edx, 0x2b
jmp	0x14005204a
jmp	0x14005204a
nop	dword ptr [rax]
mov	byte ptr [rsp + 0x27], bpl
jmp	0x140051cf0
jmp	0x140051cf0
nop	word ptr [rax + rax]
lea	rbx, [rsp + 0x68]
movsx	edx, r12b
mov	rcx, rbx
call	0x140073fa0
call	0x140073fa0
jmp	0x140051faa
jmp	0x140051faa
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
jmp	0x140051d60
jmp	0x140051d60
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x140051efa
jg	0x140051efa
jmp	0x140051f05
jmp	0x140051f05
mov	qword ptr [rsp + 0x40], 0
jmp	0x14005208b
jmp	0x14005208b
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140052666
jae	0x140052666
movzx	edi, word ptr [rax]
cmp	di, -1
jne	0x14005200e
jne	0x14005200e
mov	qword ptr [rsp + 0x50], 0
jmp	0x14005200e
jmp	0x14005200e
lea	rbx, [rsp + 0x68]
jmp	0x140051e41
jmp	0x140051e41
lea	rbx, [rsp + 0x68]
mov	edx, 0x20
mov	rcx, rbx
call	0x140073cf0
call	0x140073cf0
jmp	0x140051ae6
jmp	0x140051ae6
mov	rcx, qword ptr [rsp + 0x28]
call	0x1400209f0
call	0x1400209f0
movzx	edx, word ptr [r13 + 0x96]
mov	edi, eax
movzx	eax, byte ptr [r13 + 0x20]
mov	ecx, eax
cmp	dx, di
je	0x1400525d1
je	0x1400525d1
cmp	word ptr [r13 + 0x94], di
je	0x14005251f
je	0x14005251f
mov	r14, qword ptr [rip + 0x6c34c]
xor	ebp, ebp
xor	r12d, r12d
test	al, al
je	0x1400522f8
je	0x1400522f8
cmp	word ptr [r13 + 0x4a], di
je	0x140051ac0
je	0x140051ac0
cmp	word ptr [r13 + 0x48], di
je	0x140051ac0
je	0x140051ac0
cmp	word ptr [r13 + 0x9c], di
jne	0x140051ac0
jne	0x140051ac0
test	bpl, bpl
je	0x140052390
je	0x140052390
mov	rbx, qword ptr [rsp + 0x50]
add	r12d, 1
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x140052458
jae	0x140052458
add	rax, 2
mov	ebp, 0xffffffff
mov	qword ptr [rbx + 0x10], rax
mov	word ptr [rsp + 0x58], bp
cmp	rax, rdx
jae	0x140052480
jae	0x140052480
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140052493
je	0x140052493
cmp	ax, -1
mov	rcx, qword ptr [rsp + 0x40]
sete	bl
cmp	word ptr [rsp + 0x48], -1
sete	al
mov	edx, eax
test	rcx, rcx
je	0x14005237c
je	0x14005237c
test	al, al
jne	0x140052430
jne	0x140052430
cmp	bl, dl
jne	0x1400523f0
jne	0x1400523f0
mov	byte ptr [rsp + 0x26], 1
mov	ebp, 1
jmp	0x140051ac0
jmp	0x140051ac0
nop	
mov	rax, qword ptr [rsi]
mov	rbp, qword ptr [rax - 0x18]
lea	rbx, [rbp + 1]
cmp	qword ptr [rax - 0x10], rbx
jb	0x1400523dd
jb	0x1400523dd
mov	edx, dword ptr [r14]
test	edx, edx
jne	0x1400524a1
jne	0x1400524a1
mov	r15d, dword ptr [rax - 8]
test	r15d, r15d
setg	al
test	al, al
jne	0x1400523dd
jne	0x1400523dd
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], 0x30
mov	rax, qword ptr [rsi]
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rbx
mov	byte ptr [rax + rbp + 1], 0
jmp	0x140052316
jmp	0x140052316
mov	rdx, rbx
mov	rcx, rsi
call	0x140073cf0
call	0x140073cf0
jmp	0x1400523ba
jmp	0x1400523ba
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x50]
mov	edi, 0xffffffff
test	rcx, rcx
je	0x14005241a
je	0x14005241a
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14005264c
jae	0x14005264c
movzx	edi, word ptr [rax]
cmp	di, -1
je	0x1400525ee
je	0x1400525ee
movzx	eax, byte ptr [r13 + 0x20]
mov	ebp, 1
jmp	0x1400522e9
jmp	0x1400522e9
nop	dword ptr [rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400525bb
jae	0x1400525bb
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x1400524b8
je	0x1400524b8
cmp	ax, -1
sete	dl
jmp	0x14005237c
jmp	0x14005237c
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
mov	r11d, 0xffffffff
mov	word ptr [rsp + 0x58], r11w
cmp	rax, rdx
jb	0x14005234b
jb	0x14005234b
nop	
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	ax, -1
jne	0x140052358
jne	0x140052358
mov	qword ptr [rsp + 0x50], 0
jmp	0x140052358
jmp	0x140052358
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
jmp	0x1400523b6
jmp	0x1400523b6
mov	byte ptr [rsp + 0x27], bpl
jmp	0x140051cf4
jmp	0x140051cf4
mov	qword ptr [rsp + 0x40], 0
jmp	0x140052447
jmp	0x140052447
mov	qword ptr [rsp + 0x40], 0
jmp	0x140052153
jmp	0x140052153
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140051fd2
jmp	0x140051fd2
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140052081
jmp	0x140052081
movzx	eax, byte ptr [rsp + 0x26]
or	al, byte ptr [rsp + 0x27]
jne	0x140051c20
jne	0x140051c20
mov	edx, 0x2e
mov	rcx, rsi
mov	byte ptr [rsp + 0x26], 1
call	0x140073fa0
call	0x140073fa0
mov	byte ptr [rsp + 0x27], 0
jmp	0x140051b74
jmp	0x140051b74
mov	byte ptr [rsp + 0x27], bpl
jmp	0x140051b0e
jmp	0x140051b0e
test	al, al
je	0x140052622
je	0x140052622
cmp	word ptr [r13 + 0x4a], di
je	0x140052583
je	0x140052583
cmp	word ptr [r13 + 0x48], di
je	0x140052583
je	0x140052583
cmp	dx, di
setne	dl
movzx	edx, dl
lea	edx, [rdx + rdx + 0x2b]
mov	rcx, rsi
call	0x140073fa0
call	0x140073fa0
mov	rcx, qword ptr [rsp + 0x50]
call	0x140092490
call	0x140092490
mov	ecx, 0xffffffff
mov	rdx, qword ptr [rsp + 0x30]
mov	word ptr [rsp + 0x58], cx
mov	rcx, qword ptr [rsp + 0x28]
call	0x140020940
call	0x140020940
test	al, al
je	0x140052691
je	0x140052691
mov	byte ptr [rsp + 0x26], al
xor	ebp, ebp
xor	r12d, r12d
jmp	0x140051ac0
jmp	0x140051ac0
mov	eax, ecx
jmp	0x1400522dd
jmp	0x1400522dd
mov	edx, 0x2b
jmp	0x140051cc1
jmp	0x140051cc1
mov	byte ptr [rsp + 0x27], bpl
jmp	0x140051cff
jmp	0x140051cff
mov	rax, qword ptr [rsp + 0x68]
cmp	qword ptr [rax - 0x18], 0
mov	rsi, rax
lea	rbx, [rsp + 0x68]
jne	0x140051e41
jne	0x140051e41
jmp	0x140051e63
jmp	0x140051e63
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140052441
jmp	0x140052441
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140052149
jmp	0x140052149
test	al, al
jne	0x140052527
jne	0x140052527
mov	edx, 0x2b
cmp	word ptr [r13 + 0x48], di
jne	0x140052542
jne	0x140052542
jmp	0x1400522dd
jmp	0x1400522dd
mov	qword ptr [rsp + 0x50], 0
jmp	0x14005241a
jmp	0x14005241a
mov	qword ptr [rsp + 0x50], 0
jmp	0x140051f59
jmp	0x140051f59
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edi, eax
jmp	0x140051bf9
jmp	0x140051bf9
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140051c71
jmp	0x140051c71
mov	edx, 0x2d
cmp	di, word ptr [r13 + 0x48]
jne	0x140052542
jne	0x140052542
jmp	0x1400522dd
jmp	0x1400522dd
mov	rsi, qword ptr [rsp + 0x68]
cmp	qword ptr [rsi - 0x18], 0
jne	0x140051e2b
jne	0x140051e2b
jmp	0x140051e63
jmp	0x140051e63
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edi, eax
jmp	0x140052410
jmp	0x140052410
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edi, eax
jmp	0x140051f4f
jmp	0x140051f4f
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edi, eax
jmp	0x140052272
jmp	0x140052272
mov	rax, qword ptr [rsi]
xor	r9d, r9d
xor	edx, edx
mov	rcx, rsi
mov	r8, qword ptr [rax - 0x18]
call	0x140073e00
call	0x140073e00
mov	byte ptr [rsp + 0x27], 0
jmp	0x140051e06
jmp	0x140051e06
mov	rcx, qword ptr [rsp + 0x28]
call	0x1400209f0
call	0x1400209f0
mov	edi, eax
movzx	eax, byte ptr [r13 + 0x20]
jmp	0x1400522dd
jmp	0x1400522dd
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x68]
mov	rdx, qword ptr [rsp + 0x38]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x88
lea	r11, [rip + 0x63e]
mov	rax, qword ptr [rdx]
mov	r10, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rdi, qword ptr [rsp + 0xd0]
mov	rax, qword ptr [rax + 0x60]
mov	r8, qword ptr [r9]
mov	r9, qword ptr [r9 + 8]
mov	rsi, rcx
cmp	rax, r11
jne	0x1400527a0
jne	0x1400527a0
mov	ebp, dword ptr [rdi + 0x18]
lea	rcx, [rsp + 0x60]
mov	eax, ebp
and	eax, 0xffffffb5
or	eax, 8
mov	dword ptr [rdi + 0x18], eax
mov	rax, qword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0x40], r8
lea	r8, [rsp + 0x78]
mov	qword ptr [rsp + 0x30], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x20], rdi
mov	qword ptr [rsp + 0x48], r9
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x58], rbx
xor	bx, bx
mov	qword ptr [rsp + 0x50], r10
call	0x140051010
call	0x140051010
mov	rax, qword ptr [rsp + 0x60]
mov	qword ptr [rsp + 0x60], rax
mov	rdx, rax
movzx	eax, word ptr [rsp + 0x68]
mov	dword ptr [rdi + 0x18], ebp
mov	rdi, qword ptr [rsp + 0xe0]
or	rbx, rax
mov	rax, qword ptr [rsp + 0x78]
mov	qword ptr [rsi], rdx
mov	qword ptr [rsi + 8], rbx
mov	qword ptr [rdi], rax
mov	rax, rsi
add	rsp, 0x88
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
mov	rcx, qword ptr [rsp + 0xe0]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], r9
lea	r9, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, rsi
mov	qword ptr [rsp + 0x68], rbx
mov	qword ptr [rsp + 0x20], rdi
call	rax
call	rax
mov	rax, rsi
add	rsp, 0x88
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x68
lea	rsi, [rip + 0xfb3]
mov	rax, qword ptr [rdx]
movdqu	xmm0, xmmword ptr [r8]
mov	r10, qword ptr [r9]
mov	r11, qword ptr [r9 + 8]
mov	rax, qword ptr [rax + 0x28]
mov	r8, qword ptr [rsp + 0xa8]
mov	r9, qword ptr [rsp + 0xb0]
mov	rbx, rcx
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r9
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
mov	qword ptr [rsp + 0x40], r10
mov	qword ptr [rsp + 0x48], r11
movups	xmmword ptr [rsp + 0x50], xmm0
cmp	rax, rsi
jne	0x140052a40
jne	0x140052a40
call	0x14004dcf0
call	0x14004dcf0
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x68
lea	rsi, [rip + 0xf93]
mov	rax, qword ptr [rdx]
movdqu	xmm0, xmmword ptr [r8]
mov	r10, qword ptr [r9]
mov	r11, qword ptr [r9 + 8]
mov	rax, qword ptr [rax + 0x18]
mov	r8, qword ptr [rsp + 0xa8]
mov	r9, qword ptr [rsp + 0xb0]
mov	rbx, rcx
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r9
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
mov	qword ptr [rsp + 0x40], r10
mov	qword ptr [rsp + 0x48], r11
movups	xmmword ptr [rsp + 0x50], xmm0
cmp	rax, rsi
jne	0x140052ad0
jne	0x140052ad0
call	0x14004e700
call	0x14004e700
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x68
lea	rsi, [rip + 0xf73]
mov	rax, qword ptr [rdx]
movdqu	xmm0, xmmword ptr [r8]
mov	r10, qword ptr [r9]
mov	r11, qword ptr [r9 + 8]
mov	rax, qword ptr [rax + 0x30]
mov	r8, qword ptr [rsp + 0xa8]
mov	r9, qword ptr [rsp + 0xb0]
mov	rbx, rcx
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r9
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
mov	qword ptr [rsp + 0x40], r10
mov	qword ptr [rsp + 0x48], r11
movups	xmmword ptr [rsp + 0x50], xmm0
cmp	rax, rsi
jne	0x140052b60
jne	0x140052b60
call	0x14004f130
call	0x14004f130
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x68
lea	rsi, [rip + 0xf53]
mov	rax, qword ptr [rdx]
movdqu	xmm0, xmmword ptr [r8]
mov	r10, qword ptr [r9]
mov	r11, qword ptr [r9 + 8]
mov	rax, qword ptr [rax + 0x20]
mov	r8, qword ptr [rsp + 0xa8]
mov	r9, qword ptr [rsp + 0xb0]
mov	rbx, rcx
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r9
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
mov	qword ptr [rsp + 0x40], r10
mov	qword ptr [rsp + 0x48], r11
movups	xmmword ptr [rsp + 0x50], xmm0
cmp	rax, rsi
jne	0x140052bf0
jne	0x140052bf0
call	0x14004fb40
call	0x14004fb40
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x68
lea	rsi, [rip + 0xf33]
mov	rax, qword ptr [rdx]
movdqu	xmm0, xmmword ptr [r8]
mov	r10, qword ptr [r9]
mov	r11, qword ptr [r9 + 8]
mov	rax, qword ptr [rax + 0x38]
mov	r8, qword ptr [rsp + 0xa8]
mov	r9, qword ptr [rsp + 0xb0]
mov	rbx, rcx
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r9
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
mov	qword ptr [rsp + 0x40], r10
mov	qword ptr [rsp + 0x48], r11
movups	xmmword ptr [rsp + 0x50], xmm0
cmp	rax, rsi
jne	0x140052c80
jne	0x140052c80
call	0x140050580
call	0x140050580
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x68
lea	rsi, [rip + 0xf13]
mov	rax, qword ptr [rdx]
movdqu	xmm0, xmmword ptr [r8]
mov	r10, qword ptr [r9]
mov	r11, qword ptr [r9 + 8]
mov	rax, qword ptr [rax + 0x40]
mov	r8, qword ptr [rsp + 0xa8]
mov	r9, qword ptr [rsp + 0xb0]
mov	rbx, rcx
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r9
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
mov	qword ptr [rsp + 0x40], r10
mov	qword ptr [rsp + 0x48], r11
movups	xmmword ptr [rsp + 0x50], xmm0
cmp	rax, rsi
jne	0x140052d10
jne	0x140052d10
call	0x140051010
call	0x140051010
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x88
mov	rdi, qword ptr [rsp + 0xd0]
mov	r10, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	r8, qword ptr [r9]
mov	ebp, dword ptr [rdi + 0x18]
mov	r9, qword ptr [r9 + 8]
mov	eax, ebp
mov	rsi, rcx
lea	rcx, [rsp + 0x60]
and	eax, 0xffffffb5
or	eax, 8
mov	dword ptr [rdi + 0x18], eax
lea	rax, [rsp + 0x78]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0x20], rdi
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x40], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x48], r9
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x58], rbx
xor	bx, bx
mov	qword ptr [rsp + 0x50], r10
call	0x140051010
call	0x140051010
mov	rax, qword ptr [rsp + 0x60]
mov	rcx, qword ptr [rsp + 0x78]
mov	qword ptr [rsp + 0x60], rax
mov	rdx, rax
movzx	eax, word ptr [rsp + 0x68]
mov	dword ptr [rdi + 0x18], ebp
or	rbx, rax
mov	rax, qword ptr [rsp + 0xe0]
mov	qword ptr [rsi], rdx
mov	qword ptr [rsi + 8], rbx
mov	qword ptr [rax], rcx
mov	rax, rsi
add	rsp, 0x88
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xb8
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
mov	r8, qword ptr [r9]
mov	r9, qword ptr [r9 + 8]
mov	r12, rcx
mov	rcx, qword ptr [rsp + 0x120]
mov	qword ptr [rsp + 0x90], r10
mov	qword ptr [rsp + 0x98], r11
mov	qword ptr [rsp + 0x80], r8
mov	qword ptr [rsp + 0x88], r9
test	byte ptr [rcx + 0x18], 1
jne	0x140052ef0
jne	0x140052ef0
mov	rdi, qword ptr [rsp + 0x128]
mov	qword ptr [rsp + 0x50], r8
lea	rax, [rsp + 0x70]
lea	r8, [rsp + 0xac]
mov	qword ptr [rsp + 0x30], r8
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rax
mov	qword ptr [rsp + 0x28], rdi
mov	qword ptr [rsp + 0x58], r9
lea	r9, [rsp + 0x50]
mov	dword ptr [rsp + 0xac], 0xffffffff
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x68], r11
call	0x14004e700
call	0x14004e700
mov	rax, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x70], rax
mov	qword ptr [rsp + 0x90], rax
movzx	eax, word ptr [rsp + 0x78]
mov	word ptr [rsp + 0x98], ax
mov	eax, dword ptr [rsp + 0xac]
cmp	eax, 1
ja	0x140053068
ja	0x140053068
mov	rdx, qword ptr [rsp + 0x130]
mov	byte ptr [rdx], al
and	byte ptr [rdx], 1
movdqu	xmm0, xmmword ptr [rsp + 0x90]
mov	rax, r12
movups	xmmword ptr [r12], xmm0
add	rsp, 0xb8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
add	rcx, 0xd0
call	0x14001d7e0
call	0x14001d7e0
mov	r14, rax
mov	rax, qword ptr [rax + 0x40]
mov	rdx, qword ptr [r14 + 0x30]
test	rax, rax
sete	dil
test	rdx, rdx
sete	r11b
or	rax, rdx
je	0x1400531c8
je	0x1400531c8
cmp	word ptr [rsp + 0x88], -1
mov	ebp, 1
mov	esi, 1
movzx	r9d, word ptr [rsp + 0x98]
sete	r10b
mov	rbx, qword ptr [rsp + 0x90]
xor	r13d, r13d
jmp	0x140052f74
jmp	0x140052f74
nop	dword ptr [rax + rax]
cmp	r13, qword ptr [r14 + 0x40]
setae	dil
test	bpl, bpl
jne	0x14005304e
jne	0x14005304e
mov	eax, edi
mov	r11d, esi
mov	r9d, 0xffffffff
test	al, al
jne	0x140053116
jne	0x140053116
cmp	r9w, -1
sete	r15b
test	rbx, rbx
je	0x140052f8b
je	0x140052f8b
test	r15b, r15b
jne	0x1400530b0
jne	0x1400530b0
mov	ebx, r15d
mov	rcx, qword ptr [rsp + 0x80]
test	rcx, rcx
je	0x140052fa4
je	0x140052fa4
test	r10b, r10b
jne	0x1400530e0
jne	0x1400530e0
mov	eax, r10d
cmp	al, bl
je	0x140053110
je	0x140053110
mov	rcx, qword ptr [rsp + 0x90]
test	rcx, rcx
je	0x140052fc5
je	0x140052fc5
test	r15b, r15b
jne	0x140053160
jne	0x140053160
test	dil, dil
jne	0x140052fd7
jne	0x140052fd7
mov	rax, qword ptr [r14 + 0x38]
cmp	word ptr [rax + r13*2], r9w
sete	sil
mov	eax, esi
xor	eax, 1
test	al, r11b
jne	0x1400531b8
jne	0x1400531b8
test	r11b, r11b
jne	0x140052ff7
jne	0x140052ff7
mov	rax, qword ptr [r14 + 0x28]
cmp	word ptr [rax + r13*2], r9w
sete	bpl
mov	r15d, ebp
xor	r15d, 1
and	r15b, dil
jne	0x140053220
jne	0x140053220
mov	r9d, esi
or	r9b, bpl
je	0x1400531c8
je	0x1400531c8
mov	rbx, qword ptr [rsp + 0x90]
add	r13, 1
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140053190
jae	0x140053190
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
mov	eax, 0xffffffff
mov	word ptr [rsp + 0x98], ax
test	sil, sil
jne	0x140052f50
jne	0x140052f50
mov	edi, r9d
cmp	r13, qword ptr [r14 + 0x30]
mov	eax, edi
mov	ebp, r9d
setae	r11b
and	eax, r11d
jmp	0x140052f66
jmp	0x140052f66
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x130]
lea	rdx, [rsp + 0x80]
lea	rcx, [rsp + 0x90]
mov	byte ptr [rax], 1
mov	rax, qword ptr [rsp + 0x128]
mov	dword ptr [rax], 4
call	0x140020940
call	0x140020940
test	al, al
je	0x140052ec7
je	0x140052ec7
mov	rax, qword ptr [rsp + 0x128]
or	dword ptr [rax], 2
jmp	0x140052ec7
jmp	0x140052ec7
nop	
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400532a8
jae	0x1400532a8
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140053208
je	0x140053208
cmp	ax, -1
sete	bl
jmp	0x140052f8e
jmp	0x140052f8e
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140053278
jae	0x140053278
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x1400531f0
je	0x1400531f0
cmp	ax, -1
sete	al
cmp	al, bl
jne	0x140052faf
jne	0x140052faf
nop	word ptr [rax + rax]
mov	r15d, 1
test	sil, sil
je	0x140053125
je	0x140053125
cmp	qword ptr [r14 + 0x40], r13
je	0x140053237
je	0x140053237
test	bpl, bpl
je	0x140053139
je	0x140053139
cmp	qword ptr [r14 + 0x30], r13
jne	0x140053139
jne	0x140053139
test	r13, r13
jne	0x140053304
jne	0x140053304
mov	rax, qword ptr [rsp + 0x130]
mov	byte ptr [rax], 0
test	r15b, r15b
je	0x1400531d3
je	0x1400531d3
mov	rax, qword ptr [rsp + 0x128]
mov	dword ptr [rax], 6
jmp	0x140052ec7
jmp	0x140052ec7
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400532e0
jae	0x1400532e0
movzx	r9d, word ptr [rax]
cmp	r9w, -1
jne	0x140052fc5
jne	0x140052fc5
mov	qword ptr [rsp + 0x90], 0
jmp	0x140052fc5
jmp	0x140052fc5
nop	
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x4e], r10b
mov	rcx, rbx
mov	byte ptr [rsp + 0x48], r9b
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
movzx	r10d, byte ptr [rsp + 0x4e]
movzx	r9d, byte ptr [rsp + 0x48]
jmp	0x140053035
jmp	0x140053035
nop	dword ptr [rax]
xor	r15d, r15d
test	bpl, bpl
jne	0x14005312a
jne	0x14005312a
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x130]
mov	byte ptr [rax], 0
mov	rax, qword ptr [rsp + 0x128]
mov	dword ptr [rax], 4
jmp	0x140052ec7
jmp	0x140052ec7
nop	word ptr cs:[rax + rax]
mov	qword ptr [rsp + 0x80], 0
jmp	0x1400530fb
jmp	0x1400530fb
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x90], 0
jmp	0x1400530cb
jmp	0x1400530cb
nop	dword ptr [rax]
test	sil, sil
je	0x1400531c8
je	0x1400531c8
xor	r15d, r15d
cmp	r13, qword ptr [r14 + 0x40]
jne	0x140053139
jne	0x140053139
xor	ebp, ebp
xor	r15d, r15d
test	r13, r13
je	0x140053139
je	0x140053139
mov	rax, qword ptr [rsp + 0x130]
mov	byte ptr [rax], 0
test	bpl, bpl
je	0x140053260
je	0x140053260
cmp	qword ptr [r14 + 0x30], r13
je	0x1400531d3
je	0x1400531d3
nop	word ptr [rax + rax]
mov	rdx, qword ptr [rsp + 0x128]
movzx	eax, r15b
add	eax, eax
mov	dword ptr [rdx], eax
jmp	0x140052ec7
jmp	0x140052ec7
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
mov	byte ptr [rsp + 0x4f], r11b
mov	byte ptr [rsp + 0x4e], r10b
mov	dword ptr [rsp + 0x48], r9d
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r11d, byte ptr [rsp + 0x4f]
movzx	r10d, byte ptr [rsp + 0x4e]
mov	r9d, dword ptr [rsp + 0x48]
jmp	0x1400530f1
jmp	0x1400530f1
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x4f], r11b
mov	rcx, rbx
mov	byte ptr [rsp + 0x4e], r10b
mov	dword ptr [rsp + 0x48], r9d
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r11d, byte ptr [rsp + 0x4f]
movzx	r10d, byte ptr [rsp + 0x4e]
mov	r9d, dword ptr [rsp + 0x48]
jmp	0x1400530c1
jmp	0x1400530c1
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rcx]
mov	byte ptr [rsp + 0x4e], r11b
mov	byte ptr [rsp + 0x48], r10b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r11d, byte ptr [rsp + 0x4e]
movzx	r10d, byte ptr [rsp + 0x48]
mov	r9d, eax
jmp	0x140053172
jmp	0x140053172
mov	rax, qword ptr [rsp + 0x130]
mov	byte ptr [rax], 1
jmp	0x140053260
jmp	0x140053260
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	r12, qword ptr [r9]
mov	r14, qword ptr [r9 + 8]
lea	r13, [rsp + 0x88]
mov	rsi, rcx
mov	rdi, rdx
xor	ecx, ecx
xor	edx, edx
mov	r8, r13
lea	rbp, [rsp + 0x80]
call	0x140071d40
call	0x140071d40
mov	edx, 0x20
mov	rcx, rbp
mov	qword ptr [rsp + 0x80], rax
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rsp + 0x108]
mov	qword ptr [rsp + 0x30], rbp
lea	rcx, [rsp + 0x70]
mov	rdx, rdi
lea	r9, [rsp + 0x50]
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x60], r15
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x100]
mov	qword ptr [rsp + 0x68], rbx
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x50], r12
mov	qword ptr [rsp + 0x58], r14
call	0x140051a40
call	0x140051a40
mov	rbp, qword ptr [rsp + 0x78]
mov	rdi, qword ptr [rsp + 0x70]
xor	bx, bx
movzx	eax, bp
mov	qword ptr [rsp + 0x70], rdi
mov	r15, rdi
mov	qword ptr [rsp + 0x78], rbp
or	rbx, rax
call	0x14009baf0
call	0x14009baf0
mov	r8, qword ptr [rsp + 0x108]
mov	rdx, qword ptr [rsp + 0x110]
mov	r9, r13
mov	qword ptr [rsp + 0x88], rax
mov	rcx, qword ptr [rsp + 0x80]
call	0x1400acd60
call	0x1400acd60
cmp	bp, -1
sete	bpl
test	rdi, rdi
setne	al
and	al, bpl
mov	byte ptr [rsp + 0x4f], al
jne	0x1400534d0
jne	0x1400534d0
cmp	r14w, -1
sete	al
mov	edx, eax
test	r12, r12
je	0x14005343d
je	0x14005343d
test	al, al
jne	0x1400534b0
jne	0x1400534b0
cmp	dl, bpl
jne	0x14005344d
jne	0x14005344d
mov	rax, qword ptr [rsp + 0x108]
or	dword ptr [rax], 2
mov	rax, qword ptr [rip + 0x6b1dc]
mov	qword ptr [rsi], r15
mov	qword ptr [rsi + 8], rbx
mov	rcx, qword ptr [rsp + 0x80]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140053490
jne	0x140053490
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14005349e
jle	0x14005349e
mov	rax, rsi
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140053476
jg	0x140053476
sub	rcx, 0x18
mov	rdx, r13
call	0x140072480
call	0x140072480
jmp	0x140053476
jmp	0x140053476
nop	dword ptr [rax]
mov	rax, qword ptr [r12 + 0x10]
cmp	rax, qword ptr [r12 + 0x18]
jae	0x140053500
jae	0x140053500
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	dl
jmp	0x14005343d
jmp	0x14005343d
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140053510
jae	0x140053510
movzx	eax, word ptr [rax]
xor	ebp, ebp
cmp	ax, -1
movzx	eax, byte ptr [rsp + 0x4f]
mov	r15d, 0
cmovne	r15, rdi
cmove	ebp, eax
jmp	0x14005342a
jmp	0x14005342a
nop	word ptr [rax + rax]
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400534bf
jmp	0x1400534bf
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400534dd
jmp	0x1400534dd
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x80]
mov	rdx, r13
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	r12, qword ptr [r9]
mov	r14, qword ptr [r9 + 8]
lea	r13, [rsp + 0x88]
mov	rsi, rcx
mov	rdi, rdx
xor	ecx, ecx
xor	edx, edx
mov	r8, r13
lea	rbp, [rsp + 0x80]
call	0x140071d40
call	0x140071d40
mov	edx, 0x20
mov	rcx, rbp
mov	qword ptr [rsp + 0x80], rax
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rsp + 0x108]
mov	qword ptr [rsp + 0x30], rbp
lea	rcx, [rsp + 0x70]
mov	rdx, rdi
lea	r9, [rsp + 0x50]
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x60], r15
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x100]
mov	qword ptr [rsp + 0x68], rbx
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x50], r12
mov	qword ptr [rsp + 0x58], r14
call	0x140051a40
call	0x140051a40
mov	rbp, qword ptr [rsp + 0x78]
mov	rdi, qword ptr [rsp + 0x70]
xor	bx, bx
movzx	eax, bp
mov	qword ptr [rsp + 0x70], rdi
mov	r15, rdi
mov	qword ptr [rsp + 0x78], rbp
or	rbx, rax
call	0x14009baf0
call	0x14009baf0
mov	r8, qword ptr [rsp + 0x108]
mov	rdx, qword ptr [rsp + 0x110]
mov	r9, r13
mov	qword ptr [rsp + 0x88], rax
mov	rcx, qword ptr [rsp + 0x80]
call	0x1400ace20
call	0x1400ace20
cmp	bp, -1
sete	bpl
test	rdi, rdi
setne	al
and	al, bpl
mov	byte ptr [rsp + 0x4f], al
jne	0x1400536f0
jne	0x1400536f0
cmp	r14w, -1
sete	al
mov	edx, eax
test	r12, r12
je	0x14005365d
je	0x14005365d
test	al, al
jne	0x1400536d0
jne	0x1400536d0
cmp	dl, bpl
jne	0x14005366d
jne	0x14005366d
mov	rax, qword ptr [rsp + 0x108]
or	dword ptr [rax], 2
mov	rax, qword ptr [rip + 0x6afbc]
mov	qword ptr [rsi], r15
mov	qword ptr [rsi + 8], rbx
mov	rcx, qword ptr [rsp + 0x80]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400536b0
jne	0x1400536b0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x1400536be
jle	0x1400536be
mov	rax, rsi
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140053696
jg	0x140053696
sub	rcx, 0x18
mov	rdx, r13
call	0x140072480
call	0x140072480
jmp	0x140053696
jmp	0x140053696
nop	dword ptr [rax]
mov	rax, qword ptr [r12 + 0x10]
cmp	rax, qword ptr [r12 + 0x18]
jae	0x140053720
jae	0x140053720
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	dl
jmp	0x14005365d
jmp	0x14005365d
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140053730
jae	0x140053730
movzx	eax, word ptr [rax]
xor	ebp, ebp
cmp	ax, -1
movzx	eax, byte ptr [rsp + 0x4f]
mov	r15d, 0
cmovne	r15, rdi
cmove	ebp, eax
jmp	0x14005364a
jmp	0x14005364a
nop	word ptr [rax + rax]
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400536df
jmp	0x1400536df
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400536fd
jmp	0x1400536fd
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x80]
mov	rdx, r13
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	r12, qword ptr [r9]
mov	r14, qword ptr [r9 + 8]
lea	r13, [rsp + 0x88]
mov	rsi, rcx
mov	rdi, rdx
xor	ecx, ecx
xor	edx, edx
mov	r8, r13
lea	rbp, [rsp + 0x80]
call	0x140071d40
call	0x140071d40
mov	edx, 0x20
mov	rcx, rbp
mov	qword ptr [rsp + 0x80], rax
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rsp + 0x108]
mov	qword ptr [rsp + 0x30], rbp
lea	rcx, [rsp + 0x70]
mov	rdx, rdi
lea	r9, [rsp + 0x50]
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x60], r15
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x100]
mov	qword ptr [rsp + 0x68], rbx
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x50], r12
mov	qword ptr [rsp + 0x58], r14
call	0x140051a40
call	0x140051a40
mov	rbp, qword ptr [rsp + 0x78]
mov	rdi, qword ptr [rsp + 0x70]
xor	bx, bx
movzx	eax, bp
mov	qword ptr [rsp + 0x70], rdi
mov	r15, rdi
mov	qword ptr [rsp + 0x78], rbp
or	rbx, rax
call	0x14009baf0
call	0x14009baf0
mov	r8, qword ptr [rsp + 0x108]
mov	rdx, qword ptr [rsp + 0x110]
mov	r9, r13
mov	qword ptr [rsp + 0x88], rax
mov	rcx, qword ptr [rsp + 0x80]
call	0x1400acf00
call	0x1400acf00
cmp	bp, -1
sete	bpl
test	rdi, rdi
setne	al
and	al, bpl
mov	byte ptr [rsp + 0x4f], al
jne	0x140053910
jne	0x140053910
cmp	r14w, -1
sete	al
mov	edx, eax
test	r12, r12
je	0x14005387d
je	0x14005387d
test	al, al
jne	0x1400538f0
jne	0x1400538f0
cmp	dl, bpl
jne	0x14005388d
jne	0x14005388d
mov	rax, qword ptr [rsp + 0x108]
or	dword ptr [rax], 2
mov	rax, qword ptr [rip + 0x6ad9c]
mov	qword ptr [rsi], r15
mov	qword ptr [rsi + 8], rbx
mov	rcx, qword ptr [rsp + 0x80]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400538d0
jne	0x1400538d0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x1400538de
jle	0x1400538de
mov	rax, rsi
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x1400538b6
jg	0x1400538b6
sub	rcx, 0x18
mov	rdx, r13
call	0x140072480
call	0x140072480
jmp	0x1400538b6
jmp	0x1400538b6
nop	dword ptr [rax]
mov	rax, qword ptr [r12 + 0x10]
cmp	rax, qword ptr [r12 + 0x18]
jae	0x140053940
jae	0x140053940
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	dl
jmp	0x14005387d
jmp	0x14005387d
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140053950
jae	0x140053950
movzx	eax, word ptr [rax]
xor	ebp, ebp
cmp	ax, -1
movzx	eax, byte ptr [rsp + 0x4f]
mov	r15d, 0
cmovne	r15, rdi
cmove	ebp, eax
jmp	0x14005386a
jmp	0x14005386a
nop	word ptr [rax + rax]
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400538ff
jmp	0x1400538ff
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14005391d
jmp	0x14005391d
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x80]
mov	rdx, r13
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0xa0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x98]
mov	rbx, rcx
lea	r9, [rsp + 0x40]
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x50], r10
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x58], r11
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x40], xmm0
call	0x14004dcf0
call	0x14004dcf0
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0xa0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x98]
mov	rbx, rcx
lea	r9, [rsp + 0x40]
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x50], r10
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x58], r11
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x40], xmm0
call	0x14004e700
call	0x14004e700
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0xa0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x98]
mov	rbx, rcx
lea	r9, [rsp + 0x40]
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x50], r10
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x58], r11
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x40], xmm0
call	0x14004f130
call	0x14004f130
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0xa0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x98]
mov	rbx, rcx
lea	r9, [rsp + 0x40]
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x50], r10
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x58], r11
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x40], xmm0
call	0x14004fb40
call	0x14004fb40
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0xa0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x98]
mov	rbx, rcx
lea	r9, [rsp + 0x40]
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x50], r10
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x58], r11
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x40], xmm0
call	0x140050580
call	0x140050580
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0xa0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x98]
mov	rbx, rcx
lea	r9, [rsp + 0x40]
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x50], r10
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x58], r11
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x40], xmm0
call	0x140051010
call	0x140051010
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x80]
mov	rsi, qword ptr [rsp + 0x78]
movsxd	rax, dword ptr [rbx]
add	rax, rcx
mov	qword ptr [rsp + 0x20], rcx
mov	r10, rdx
mov	rcx, rsi
mov	qword ptr [rsp + 0x28], rax
movsx	edx, r9b
mov	r9, r8
mov	r8, r10
call	0x1400aca30
call	0x1400aca30
sub	rax, rsi
mov	dword ptr [rbx], eax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
lea	rbp, [rsp + 0x50]
mov	eax, dword ptr [rbp + 0x70]
mov	r14, qword ptr [r8]
mov	r15, qword ptr [r8 + 8]
mov	r13d, dword ptr [rbp + 0x78]
mov	rbx, r9
mov	rdi, rcx
lea	rcx, [r9 + 0xd0]
mov	dword ptr [rbp - 0x14], eax
call	0x14001d6e0
call	0x14001d6e0
mov	r10d, dword ptr [rbx + 0x18]
sub	rsp, 0x20
mov	edx, r13d
mov	rsi, rax
lea	r8, [rax + 0x4a]
lea	r11, [rsp + 0x30]
mov	eax, r10d
and	eax, 0x4a
cmp	eax, 0x40
mov	dword ptr [rbp - 0x18], eax
setne	r12b
cmp	eax, 8
setne	al
and	r12d, eax
test	r13d, r13d
jg	0x140053ce6
jg	0x140053ce6
neg	edx
test	r12b, r12b
cmove	edx, r13d
movzx	eax, r12b
mov	qword ptr [rbp - 0x10], r11
lea	rcx, [r11 + 0x14]
mov	r9d, r10d
mov	dword ptr [rsp + 0x20], eax
mov	dword ptr [rbp - 8], r10d
call	0x1400ac6d0
call	0x1400ac6d0
mov	edx, 0x14
mov	r11, qword ptr [rbp - 0x10]
mov	r10d, dword ptr [rbp - 8]
movsxd	r8, eax
sub	edx, r8d
movsxd	rdx, edx
add	rdx, r11
cmp	byte ptr [rsi + 0x20], 0
jne	0x140053e08
jne	0x140053e08
test	r12b, r12b
je	0x140053e6b
je	0x140053e6b
test	r13d, r13d
js	0x140053df0
js	0x140053df0
and	r10d, 0x800
jne	0x140053d90
jne	0x140053d90
mov	r12, qword ptr [rbx + 0x10]
movsxd	rsi, r8d
cmp	rsi, r12
jl	0x140053daa
jl	0x140053daa
mov	qword ptr [rbx + 0x10], 0
mov	ebx, r15d
test	r15b, r15b
jne	0x140053d73
jne	0x140053d73
mov	rax, qword ptr [r14]
mov	r8, rsi
mov	rcx, r14
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	rsi, rax
mov	eax, 1
cmovne	ebx, eax
mov	rax, rdi
mov	qword ptr [rdi], r14
mov	byte ptr [rdi + 8], bl
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax]
movzx	eax, byte ptr [rsi + 0x4b]
add	r8d, 1
mov	r12, qword ptr [rbx + 0x10]
sub	rdx, 1
movsxd	rsi, r8d
mov	byte ptr [rdx], al
cmp	rsi, r12
jge	0x140053d4c
jge	0x140053d4c
lea	rax, [r12 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
movsx	eax, byte ptr [rbp - 0x14]
mov	r9, rdx
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], rsi
lea	r13, [rsp + 0x30]
movsxd	rsi, r12d
mov	qword ptr [rsp + 0x20], r12
mov	edx, eax
mov	r8, r13
call	0x140098510
call	0x140098510
mov	rdx, r13
jmp	0x140053d4c
jmp	0x140053d4c
nop	dword ptr [rax]
movzx	eax, byte ptr [rsi + 0x4a]
add	r8d, 1
sub	rdx, 1
mov	byte ptr [rdx], al
jmp	0x140053d40
jmp	0x140053d40
nop	dword ptr [rax + rax]
lea	eax, [r8 + 1]
mov	dword ptr [rbp - 0x10], r10d
cdqe	
lea	rax, [rax + rax + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
movsx	r11d, byte ptr [rsi + 0x49]
mov	r9, qword ptr [rsi + 0x18]
sub	rsp, rax
add	r8, rdx
mov	rax, qword ptr [rsi + 0x10]
lea	rcx, [rsp + 0x32]
mov	qword ptr [rsp + 0x28], r8
mov	qword ptr [rsp + 0x20], rdx
mov	r8, rax
mov	edx, r11d
mov	qword ptr [rbp - 8], rcx
call	0x1400aca30
call	0x1400aca30
mov	rcx, qword ptr [rbp - 8]
mov	r10d, dword ptr [rbp - 0x10]
mov	r8d, eax
sub	r8d, ecx
mov	rdx, rcx
test	r12b, r12b
jne	0x140053d2e
jne	0x140053d2e
test	r10d, 0x200
je	0x140053d40
je	0x140053d40
test	r13d, r13d
je	0x140053d40
je	0x140053d40
cmp	dword ptr [rbp - 0x18], 0x40
je	0x140053eab
je	0x140053eab
shr	r10d, 0xe
add	r8d, 2
sub	rdx, 2
and	r10d, 1
movzx	eax, byte ptr [rsi + r10 + 0x4c]
mov	byte ptr [rdx + 1], al
movzx	eax, byte ptr [rsi + 0x4e]
mov	byte ptr [rdx], al
jmp	0x140053d40
jmp	0x140053d40
movzx	eax, byte ptr [rsi + 0x4e]
add	r8d, 1
sub	rdx, 1
mov	byte ptr [rdx], al
jmp	0x140053d40
jmp	0x140053d40
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	rbp, [rsp + 0x40]
mov	eax, dword ptr [rbp + 0x70]
mov	rdi, qword ptr [r8]
mov	r14, qword ptr [r8 + 8]
mov	rbx, r9
mov	rsi, rcx
lea	rcx, [r9 + 0xd0]
mov	dword ptr [rbp - 8], eax
call	0x14001d6e0
call	0x14001d6e0
mov	r12d, dword ptr [rbx + 0x18]
sub	rsp, 0x20
mov	r13, rax
lea	rcx, [rsp + 0x44]
lea	r15, [rsp + 0x30]
mov	eax, r12d
mov	r9d, r12d
lea	r8, [r13 + 0x4a]
and	eax, 0x4a
cmp	eax, 0x40
mov	dword ptr [rbp - 0xc], eax
setne	r11b
cmp	eax, 8
setne	al
and	r11d, eax
movzx	eax, r11b
mov	byte ptr [rbp - 1], r11b
mov	dword ptr [rsp + 0x20], eax
mov	edx, dword ptr [rbp + 0x78]
call	0x1400ac6d0
call	0x1400ac6d0
mov	edx, 0x14
movzx	r11d, byte ptr [rbp - 1]
movsxd	rcx, eax
sub	edx, ecx
movsxd	rdx, edx
add	rdx, r15
cmp	byte ptr [r13 + 0x20], 0
jne	0x140053fb8
jne	0x140053fb8
test	r11b, r11b
je	0x14005400d
je	0x14005400d
mov	r13, qword ptr [rbx + 0x10]
movsxd	r12, ecx
cmp	r12, r13
jl	0x140054050
jl	0x140054050
mov	qword ptr [rbx + 0x10], 0
mov	ebx, r14d
test	r14b, r14b
jne	0x140053f99
jne	0x140053f99
mov	rax, qword ptr [rdi]
mov	r8, r12
mov	rcx, rdi
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	r12, rax
mov	eax, 1
cmovne	ebx, eax
mov	rax, rsi
mov	qword ptr [rsi], rdi
mov	byte ptr [rsi + 8], bl
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
lea	eax, [rcx + 1]
cdqe	
lea	rax, [rax + rax + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
mov	r9, qword ptr [r13 + 0x18]
mov	r8, qword ptr [r13 + 0x10]
sub	rsp, rax
add	rcx, rdx
movsx	eax, byte ptr [r13 + 0x49]
mov	qword ptr [rsp + 0x28], rcx
lea	r15, [rsp + 0x32]
mov	qword ptr [rsp + 0x20], rdx
mov	rcx, r15
mov	edx, eax
call	0x1400aca30
call	0x1400aca30
movzx	r11d, byte ptr [rbp - 1]
mov	rdx, r15
mov	ecx, eax
sub	ecx, r15d
test	r11b, r11b
jne	0x140053f62
jne	0x140053f62
test	r12d, 0x200
je	0x140053f62
je	0x140053f62
mov	eax, dword ptr [rbp + 0x78]
test	eax, eax
je	0x140053f62
je	0x140053f62
cmp	dword ptr [rbp - 0xc], 0x40
je	0x14005408e
je	0x14005408e
shr	r12d, 0xe
add	ecx, 2
sub	rdx, 2
and	r12d, 1
movzx	eax, byte ptr [r13 + r12 + 0x4c]
mov	byte ptr [rdx + 1], al
movzx	eax, byte ptr [r13 + 0x4e]
mov	byte ptr [rdx], al
jmp	0x140053f62
jmp	0x140053f62
nop	
lea	rax, [r13 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
movsx	eax, byte ptr [rbp - 8]
mov	r9, rdx
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], r12
lea	r15, [rsp + 0x30]
movsxd	r12, r13d
mov	qword ptr [rsp + 0x20], r13
mov	edx, eax
mov	r8, r15
call	0x140098510
call	0x140098510
mov	rdx, r15
jmp	0x140053f72
jmp	0x140053f72
movzx	eax, byte ptr [r13 + 0x4e]
add	ecx, 1
sub	rdx, 1
mov	byte ptr [rdx], al
jmp	0x140053f62
jmp	0x140053f62
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
lea	rbp, [rsp + 0x50]
mov	eax, dword ptr [rbp + 0x70]
mov	r14, qword ptr [r8]
mov	r15, qword ptr [r8 + 8]
mov	r13, qword ptr [rbp + 0x78]
mov	rbx, r9
mov	rdi, rcx
lea	rcx, [r9 + 0xd0]
mov	dword ptr [rbp - 0x14], eax
call	0x14001d6e0
call	0x14001d6e0
mov	r10d, dword ptr [rbx + 0x18]
sub	rsp, 0x30
mov	rdx, r13
mov	rsi, rax
lea	r8, [rax + 0x4a]
lea	r11, [rsp + 0x30]
mov	eax, r10d
and	eax, 0x4a
cmp	eax, 0x40
mov	dword ptr [rbp - 0x18], eax
setne	r12b
cmp	eax, 8
setne	al
and	r12d, eax
test	r13, r13
jg	0x140054127
jg	0x140054127
neg	rdx
test	r12b, r12b
cmove	rdx, r13
movzx	eax, r12b
mov	qword ptr [rbp - 0x10], r11
lea	rcx, [r11 + 0x28]
mov	r9d, r10d
mov	dword ptr [rsp + 0x20], eax
mov	dword ptr [rbp - 8], r10d
call	0x1400ac790
call	0x1400ac790
mov	edx, 0x28
mov	r11, qword ptr [rbp - 0x10]
mov	r10d, dword ptr [rbp - 8]
movsxd	r8, eax
sub	edx, r8d
movsxd	rdx, edx
add	rdx, r11
cmp	byte ptr [rsi + 0x20], 0
jne	0x140054248
jne	0x140054248
test	r12b, r12b
je	0x1400542ab
je	0x1400542ab
test	r13, r13
js	0x140054230
js	0x140054230
and	r10d, 0x800
jne	0x1400541d0
jne	0x1400541d0
mov	r12, qword ptr [rbx + 0x10]
movsxd	rsi, r8d
cmp	rsi, r12
jl	0x1400541ea
jl	0x1400541ea
mov	qword ptr [rbx + 0x10], 0
mov	ebx, r15d
test	r15b, r15b
jne	0x1400541b4
jne	0x1400541b4
mov	rax, qword ptr [r14]
mov	r8, rsi
mov	rcx, r14
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	rsi, rax
mov	eax, 1
cmovne	ebx, eax
mov	rax, rdi
mov	qword ptr [rdi], r14
mov	byte ptr [rdi + 8], bl
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	
movzx	eax, byte ptr [rsi + 0x4b]
add	r8d, 1
mov	r12, qword ptr [rbx + 0x10]
sub	rdx, 1
movsxd	rsi, r8d
mov	byte ptr [rdx], al
cmp	rsi, r12
jge	0x14005418d
jge	0x14005418d
lea	rax, [r12 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
movsx	eax, byte ptr [rbp - 0x14]
mov	r9, rdx
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], rsi
lea	r13, [rsp + 0x30]
movsxd	rsi, r12d
mov	qword ptr [rsp + 0x20], r12
mov	edx, eax
mov	r8, r13
call	0x140098510
call	0x140098510
mov	rdx, r13
jmp	0x14005418d
jmp	0x14005418d
nop	dword ptr [rax]
movzx	eax, byte ptr [rsi + 0x4a]
add	r8d, 1
sub	rdx, 1
mov	byte ptr [rdx], al
jmp	0x140054181
jmp	0x140054181
nop	dword ptr [rax + rax]
lea	eax, [r8 + 1]
mov	dword ptr [rbp - 0x10], r10d
cdqe	
lea	rax, [rax + rax + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
movsx	r11d, byte ptr [rsi + 0x49]
mov	r9, qword ptr [rsi + 0x18]
sub	rsp, rax
add	r8, rdx
mov	rax, qword ptr [rsi + 0x10]
lea	rcx, [rsp + 0x32]
mov	qword ptr [rsp + 0x28], r8
mov	qword ptr [rsp + 0x20], rdx
mov	r8, rax
mov	edx, r11d
mov	qword ptr [rbp - 8], rcx
call	0x1400aca30
call	0x1400aca30
mov	rcx, qword ptr [rbp - 8]
mov	r10d, dword ptr [rbp - 0x10]
mov	r8d, eax
sub	r8d, ecx
mov	rdx, rcx
test	r12b, r12b
jne	0x14005416f
jne	0x14005416f
test	r10d, 0x200
je	0x140054181
je	0x140054181
test	r13, r13
je	0x140054181
je	0x140054181
cmp	dword ptr [rbp - 0x18], 0x40
je	0x1400542eb
je	0x1400542eb
shr	r10d, 0xe
add	r8d, 2
sub	rdx, 2
and	r10d, 1
movzx	eax, byte ptr [rsi + r10 + 0x4c]
mov	byte ptr [rdx + 1], al
movzx	eax, byte ptr [rsi + 0x4e]
mov	byte ptr [rdx], al
jmp	0x140054181
jmp	0x140054181
movzx	eax, byte ptr [rsi + 0x4e]
add	r8d, 1
sub	rdx, 1
mov	byte ptr [rdx], al
jmp	0x140054181
jmp	0x140054181
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	rbp, [rsp + 0x40]
mov	eax, dword ptr [rbp + 0x70]
mov	rdi, qword ptr [r8]
mov	r14, qword ptr [r8 + 8]
mov	rbx, r9
mov	rsi, rcx
lea	rcx, [r9 + 0xd0]
mov	dword ptr [rbp - 8], eax
call	0x14001d6e0
call	0x14001d6e0
mov	r12d, dword ptr [rbx + 0x18]
sub	rsp, 0x30
mov	r13, rax
lea	rcx, [rsp + 0x58]
lea	r15, [rsp + 0x30]
mov	eax, r12d
mov	r9d, r12d
lea	r8, [r13 + 0x4a]
and	eax, 0x4a
cmp	eax, 0x40
mov	dword ptr [rbp - 0xc], eax
setne	r11b
cmp	eax, 8
setne	al
and	r11d, eax
movzx	eax, r11b
mov	byte ptr [rbp - 1], r11b
mov	dword ptr [rsp + 0x20], eax
mov	rdx, qword ptr [rbp + 0x78]
call	0x1400ac790
call	0x1400ac790
mov	edx, 0x28
movzx	r11d, byte ptr [rbp - 1]
movsxd	rcx, eax
sub	edx, ecx
movsxd	rdx, edx
add	rdx, r15
cmp	byte ptr [r13 + 0x20], 0
jne	0x1400543f8
jne	0x1400543f8
test	r11b, r11b
je	0x14005444d
je	0x14005444d
mov	r13, qword ptr [rbx + 0x10]
movsxd	r12, ecx
cmp	r12, r13
jl	0x140054490
jl	0x140054490
mov	qword ptr [rbx + 0x10], 0
mov	ebx, r14d
test	r14b, r14b
jne	0x1400543da
jne	0x1400543da
mov	rax, qword ptr [rdi]
mov	r8, r12
mov	rcx, rdi
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	r12, rax
mov	eax, 1
cmovne	ebx, eax
mov	rax, rsi
mov	qword ptr [rsi], rdi
mov	byte ptr [rsi + 8], bl
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax]
lea	eax, [rcx + 1]
cdqe	
lea	rax, [rax + rax + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
mov	r9, qword ptr [r13 + 0x18]
mov	r8, qword ptr [r13 + 0x10]
sub	rsp, rax
add	rcx, rdx
movsx	eax, byte ptr [r13 + 0x49]
mov	qword ptr [rsp + 0x28], rcx
lea	r15, [rsp + 0x32]
mov	qword ptr [rsp + 0x20], rdx
mov	rcx, r15
mov	edx, eax
call	0x1400aca30
call	0x1400aca30
movzx	r11d, byte ptr [rbp - 1]
mov	rdx, r15
mov	ecx, eax
sub	ecx, r15d
test	r11b, r11b
jne	0x1400543a3
jne	0x1400543a3
test	r12d, 0x200
je	0x1400543a3
je	0x1400543a3
cmp	qword ptr [rbp + 0x78], 0
je	0x1400543a3
je	0x1400543a3
cmp	dword ptr [rbp - 0xc], 0x40
je	0x1400544ce
je	0x1400544ce
shr	r12d, 0xe
add	ecx, 2
sub	rdx, 2
and	r12d, 1
movzx	eax, byte ptr [r13 + r12 + 0x4c]
mov	byte ptr [rdx + 1], al
movzx	eax, byte ptr [r13 + 0x4e]
mov	byte ptr [rdx], al
jmp	0x1400543a3
jmp	0x1400543a3
nop	
lea	rax, [r13 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
movsx	eax, byte ptr [rbp - 8]
mov	r9, rdx
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], r12
lea	r15, [rsp + 0x30]
movsxd	r12, r13d
mov	qword ptr [rsp + 0x20], r13
mov	edx, eax
mov	r8, r15
call	0x140098510
call	0x140098510
mov	rdx, r15
jmp	0x1400543b3
jmp	0x1400543b3
movzx	eax, byte ptr [r13 + 0x4e]
add	ecx, 1
sub	rdx, 1
mov	byte ptr [rdx], al
jmp	0x1400543a3
jmp	0x1400543a3
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rsi, qword ptr [rsp + 0x80]
mov	rdi, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x90]
mov	rbx, qword ptr [rsp + 0x98]
mov	rax, rdx
movsx	edx, r9b
test	rsi, rsi
je	0x140054590
je	0x140054590
mov	rbp, rsi
mov	qword ptr [rsp + 0x20], rcx
sub	rbp, rcx
movsxd	r9, ebp
add	r9, rcx
mov	rcx, rdi
mov	qword ptr [rsp + 0x28], r9
mov	r9, r8
mov	r8, rax
call	0x1400aca30
call	0x1400aca30
mov	r8d, dword ptr [rbx]
xor	edx, edx
mov	r12, rax
sub	r8d, ebp
sub	r12, rdi
movsxd	r8, r8d
test	r8, r8
jne	0x140054578
jne	0x140054578
lea	eax, [rdx + r12]
mov	dword ptr [rbx], eax
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	rdx, rsi
mov	rcx, rax
call	0x140015998
call	0x140015998
mov	edx, dword ptr [rbx]
sub	edx, ebp
jmp	0x140054560
jmp	0x140054560
nop	dword ptr [rax]
movsxd	r9, dword ptr [rbx]
mov	qword ptr [rsp + 0x20], rcx
add	r9, rcx
mov	rcx, rdi
mov	qword ptr [rsp + 0x28], r9
mov	r9, r8
mov	r8, rax
call	0x1400aca30
call	0x1400aca30
sub	eax, edi
mov	dword ptr [rbx], eax
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
lea	rbp, [rsp + 0x90]
movups	xmmword ptr [rbp], xmm6
mov	rax, qword ptr [r8 + 8]
mov	esi, dword ptr [rbp + 0x88]
mov	r13, qword ptr [r8]
movsd	xmm6, qword ptr [rbp + 0x90]
mov	qword ptr [rbp - 0x30], rax
mov	eax, dword ptr [rbp + 0x80]
mov	rbx, r9
lea	r14, [rbp - 0x10]
mov	qword ptr [rbp + 0x60], rcx
lea	rcx, [r9 + 0xd0]
mov	qword ptr [rbp + 0x68], rdx
mov	dword ptr [rbp - 0x34], eax
call	0x14001d6e0
call	0x14001d6e0
mov	r12, qword ptr [rbx + 8]
movsx	r8d, sil
mov	rdx, r14
mov	rdi, rax
mov	rcx, rbx
mov	eax, 6
test	r12, r12
cmovs	r12, rax
call	0x1400750b0
call	0x1400750b0
mov	eax, dword ptr [rbx + 0x18]
sub	rsp, 0x30
lea	rsi, [rsp + 0x40]
not	eax
test	eax, 0x104
je	0x140054918
je	0x140054918
call	0x14009baf0
call	0x14009baf0
lea	r15, [rbp - 0x18]
mov	r9, r14
mov	rdx, rsi
mov	qword ptr [rbp - 0x18], rax
mov	r8d, 0x2d
mov	rcx, r15
mov	qword ptr [rsp + 0x20], r12
movsd	qword ptr [rsp + 0x28], xmm6
call	0x1400ad890
call	0x1400ad890
mov	dword ptr [rbp - 0x1c], eax
cmp	eax, 0x2c
jg	0x1400547a8
jg	0x1400547a8
mov	rcx, qword ptr [rip + 0x6a23a]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rcx, qword ptr [rax + rdx*8]
test	rcx, rcx
je	0x1400549e3
je	0x1400549e3
movsxd	r14, dword ptr [rbp - 0x1c]
lea	rax, [r14 + 0xf]
mov	r15, r14
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
movzx	eax, byte ptr [rcx + 0x38]
lea	r8, [rsi + r14]
lea	r12, [rsp + 0x40]
mov	qword ptr [rbp - 0x28], r12
cmp	al, 1
je	0x140054701
je	0x140054701
test	al, al
je	0x140054990
je	0x140054990
mov	rax, qword ptr [rcx]
lea	rdx, [rip - 0x32284]
mov	rax, qword ptr [rax + 0x38]
cmp	rax, rdx
jne	0x1400549c0
jne	0x1400549c0
cmp	r8, rsi
je	0x1400549d1
je	0x1400549d1
mov	r8, r14
mov	rdx, rsi
mov	rcx, r12
call	0x140015998
call	0x140015998
mov	r8, r14
mov	edx, 0x2e
mov	rcx, rsi
call	0x140015988
call	0x140015988
test	rax, rax
je	0x140054800
je	0x140054800
sub	rax, rsi
lea	rdx, [r12 + rax]
movzx	eax, byte ptr [rdi + 0x48]
mov	byte ptr [rdx], al
cmp	byte ptr [rdi + 0x20], 0
jne	0x14005483a
jne	0x14005483a
mov	rdi, qword ptr [rbx + 0x10]
mov	rsi, r14
cmp	r14, rdi
jl	0x1400548d4
jl	0x1400548d4
mov	rax, qword ptr [rbp - 0x30]
mov	qword ptr [rbx + 0x10], 0
mov	ebx, eax
test	al, al
jne	0x140054786
jne	0x140054786
mov	rax, qword ptr [r13]
mov	rdx, qword ptr [rbp - 0x28]
mov	r8, rsi
mov	rcx, r13
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	rsi, rax
mov	eax, 1
cmovne	ebx, eax
mov	rax, qword ptr [rbp + 0x60]
mov	qword ptr [rax], r13
mov	byte ptr [rax + 8], bl
movups	xmm6, xmmword ptr [rbp]
lea	rsp, [rbp + 0x18]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax]
lea	r8d, [rax + 1]
movsxd	rax, r8d
mov	dword ptr [rbp - 0x28], r8d
add	rax, 0xf
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
call	0x14009baf0
call	0x14009baf0
lea	rsi, [rsp + 0x40]
mov	r9, r14
mov	rcx, r15
mov	qword ptr [rbp - 0x18], rax
mov	rdx, rsi
mov	qword ptr [rsp + 0x20], r12
movsd	qword ptr [rsp + 0x28], xmm6
mov	r8d, dword ptr [rbp - 0x28]
call	0x1400ad890
call	0x1400ad890
mov	dword ptr [rbp - 0x1c], eax
jmp	0x14005468f
jmp	0x14005468f
nop	word ptr cs:[rax + rax]
cmp	byte ptr [rdi + 0x20], 0
je	0x140054748
je	0x140054748
cmp	r15d, 2
jle	0x140054838
jle	0x140054838
movzx	eax, byte ptr [rsi + 1]
cmp	al, 0x39
jg	0x140054748
jg	0x140054748
movzx	edx, byte ptr [rsi + 2]
sub	edx, 0x30
cmp	dl, 9
ja	0x140054748
ja	0x140054748
cmp	al, 0x2f
jle	0x140054748
jle	0x140054748
nop	dword ptr [rax]
xor	edx, edx
lea	rax, [r14 + r14 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
movzx	eax, byte ptr [rsi]
lea	r14, [rsp + 0x40]
sub	eax, 0x2b
test	al, 0xfd
jne	0x1400549b0
jne	0x1400549b0
movzx	eax, byte ptr [r12]
lea	r11, [r14 + 1]
mov	byte ptr [r14], al
lea	eax, [r15 - 1]
mov	r15d, 1
mov	dword ptr [rbp - 0x1c], eax
lea	rax, [r12 + 1]
mov	qword ptr [rbp - 0x28], rax
lea	rcx, [rbp - 0x1c]
mov	rax, qword ptr [rdi + 0x10]
movsx	r9d, byte ptr [rdi + 0x49]
mov	r8, qword ptr [rdi + 0x18]
mov	qword ptr [rsp + 0x38], rcx
mov	rdi, qword ptr [rbp - 0x28]
mov	qword ptr [rsp + 0x20], rdx
mov	rdx, rax
mov	qword ptr [rsp + 0x28], r11
mov	qword ptr [rsp + 0x30], rdi
mov	rcx, qword ptr [rbp + 0x68]
call	0x1400544f0
call	0x1400544f0
add	r15d, dword ptr [rbp - 0x1c]
mov	rdi, qword ptr [rbx + 0x10]
mov	qword ptr [rbp - 0x28], r14
movsxd	r14, r15d
mov	dword ptr [rbp - 0x1c], r15d
mov	rsi, r14
cmp	r14, rdi
jge	0x140054758
jge	0x140054758
lea	rax, [rdi + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
movsx	edx, byte ptr [rbp - 0x34]
sub	rsp, rax
mov	rcx, rbx
movsxd	rsi, edi
mov	qword ptr [rsp + 0x28], r14
lea	r12, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], rdi
mov	r9, qword ptr [rbp - 0x28]
mov	r8, r12
call	0x140098510
call	0x140098510
mov	dword ptr [rbp - 0x1c], edi
mov	qword ptr [rbp - 0x28], r12
jmp	0x140054758
jmp	0x140054758
nop	dword ptr [rax]
call	0x14009baf0
call	0x14009baf0
lea	r12, [rbp - 0x18]
mov	r9, r14
mov	rdx, rsi
mov	qword ptr [rbp - 0x18], rax
mov	r8d, 0x2d
mov	rcx, r12
movsd	qword ptr [rsp + 0x20], xmm6
call	0x1400ad890
call	0x1400ad890
mov	dword ptr [rbp - 0x1c], eax
cmp	eax, 0x2c
jle	0x14005468f
jle	0x14005468f
lea	r15d, [rax + 1]
movsxd	rax, r15d
add	rax, 0xf
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
call	0x14009baf0
call	0x14009baf0
lea	rsi, [rsp + 0x40]
mov	r9, r14
mov	r8d, r15d
mov	qword ptr [rbp - 0x18], rax
mov	rdx, rsi
mov	rcx, r12
movsd	qword ptr [rsp + 0x20], xmm6
call	0x1400ad890
call	0x1400ad890
mov	dword ptr [rbp - 0x1c], eax
jmp	0x14005468f
jmp	0x14005468f
nop	
mov	qword ptr [rbp - 0x48], r8
mov	qword ptr [rbp - 0x40], rcx
call	0x140021cb0
call	0x140021cb0
mov	r8, qword ptr [rbp - 0x48]
mov	rcx, qword ptr [rbp - 0x40]
jmp	0x1400546ea
jmp	0x1400546ea
nop	word ptr [rax + rax]
mov	r11, r14
xor	r15d, r15d
jmp	0x140054880
jmp	0x140054880
nop	dword ptr [rax + rax]
mov	r9, r12
mov	rdx, rsi
call	rax
call	rax
test	r14, r14
jne	0x140054718
jne	0x140054718
cmp	byte ptr [rdi + 0x20], 0
jne	0x140054838
jne	0x140054838
xor	r14d, r14d
jmp	0x140054748
jmp	0x140054748
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
lea	rbp, [rsp + 0xa0]
mov	rax, qword ptr [r8]
mov	esi, dword ptr [rbp + 0x78]
mov	qword ptr [rbp - 0x38], rax
mov	rax, qword ptr [r8 + 8]
mov	rbx, r9
lea	r13, [rbp - 0x10]
mov	qword ptr [rbp + 0x50], rcx
lea	rcx, [r9 + 0xd0]
mov	qword ptr [rbp - 0x40], rax
mov	eax, dword ptr [rbp + 0x70]
mov	qword ptr [rbp + 0x58], rdx
mov	dword ptr [rbp - 0x54], eax
mov	rax, qword ptr [rbp + 0x80]
fld	xword ptr [rax]
fstp	xword ptr [rbp - 0x50]
call	0x14001d6e0
call	0x14001d6e0
mov	r12, qword ptr [rbx + 8]
movsx	r8d, sil
mov	rdx, r13
mov	rdi, rax
mov	rcx, rbx
mov	eax, 6
test	r12, r12
cmovs	r12, rax
call	0x1400750b0
call	0x1400750b0
mov	eax, dword ptr [rbx + 0x18]
sub	rsp, 0x40
lea	rsi, [rsp + 0x40]
not	eax
test	eax, 0x104
je	0x140054d40
je	0x140054d40
call	0x14009baf0
call	0x14009baf0
fld	xword ptr [rbp - 0x50]
lea	r15, [rbp - 0x30]
lea	r14, [rbp - 0x18]
mov	qword ptr [rbp - 0x18], rax
mov	r9, r13
mov	r8d, 0x36
mov	rdx, rsi
mov	rcx, r14
fstp	xword ptr [rbp - 0x30]
mov	qword ptr [rsp + 0x28], r15
mov	qword ptr [rsp + 0x20], r12
call	0x1400ad890
call	0x1400ad890
mov	dword ptr [rbp - 0x1c], eax
cmp	eax, 0x35
jg	0x140054be0
jg	0x140054be0
mov	rcx, qword ptr [rip + 0x69e03]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rcx, qword ptr [rax + rdx*8]
test	rcx, rcx
je	0x140054e1b
je	0x140054e1b
movsxd	r15, dword ptr [rbp - 0x1c]
lea	rax, [r15 + 0xf]
mov	r12, r15
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
movzx	eax, byte ptr [rcx + 0x38]
lea	r8, [rsi + r15]
lea	r13, [rsp + 0x40]
mov	r14, r13
cmp	al, 1
je	0x140054b37
je	0x140054b37
test	al, al
je	0x140054dc8
je	0x140054dc8
mov	rax, qword ptr [rcx]
lea	rdx, [rip - 0x326ba]
mov	rax, qword ptr [rax + 0x38]
cmp	rax, rdx
jne	0x140054df8
jne	0x140054df8
cmp	r8, rsi
je	0x140054e09
je	0x140054e09
mov	r8, r15
mov	rdx, rsi
mov	rcx, r13
call	0x140015998
call	0x140015998
mov	r8, r15
mov	edx, 0x2e
mov	rcx, rsi
call	0x140015988
call	0x140015988
test	rax, rax
je	0x140054c38
je	0x140054c38
sub	rax, rsi
lea	rdx, [r13 + rax]
movzx	eax, byte ptr [rdi + 0x48]
mov	byte ptr [rdx], al
cmp	byte ptr [rdi + 0x20], 0
jne	0x140054c72
jne	0x140054c72
mov	rsi, qword ptr [rbx + 0x10]
cmp	r15, rsi
jl	0x140054d00
jl	0x140054d00
mov	rax, qword ptr [rbp - 0x40]
mov	qword ptr [rbx + 0x10], 0
mov	ebx, eax
test	al, al
jne	0x140054bb9
jne	0x140054bb9
mov	rcx, qword ptr [rbp - 0x38]
mov	r8, r15
mov	rdx, r14
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	r15, rax
mov	eax, 1
cmovne	ebx, eax
mov	rax, qword ptr [rbp + 0x50]
mov	rdi, qword ptr [rbp - 0x38]
mov	qword ptr [rax], rdi
mov	byte ptr [rax + 8], bl
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
lea	r8d, [rax + 1]
movsxd	rax, r8d
mov	dword ptr [rbp - 0x60], r8d
add	rax, 0xf
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
call	0x14009baf0
call	0x14009baf0
fld	xword ptr [rbp - 0x50]
lea	rsi, [rsp + 0x40]
mov	r9, r13
mov	qword ptr [rbp - 0x18], rax
mov	rdx, rsi
mov	rcx, r14
fstp	xword ptr [rbp - 0x30]
mov	qword ptr [rsp + 0x28], r15
mov	qword ptr [rsp + 0x20], r12
mov	r8d, dword ptr [rbp - 0x60]
call	0x1400ad890
call	0x1400ad890
mov	dword ptr [rbp - 0x1c], eax
jmp	0x140054ac6
jmp	0x140054ac6
nop	dword ptr [rax + rax]
cmp	byte ptr [rdi + 0x20], 0
je	0x140054b7f
je	0x140054b7f
cmp	r12d, 2
jle	0x140054c70
jle	0x140054c70
movzx	eax, byte ptr [rsi + 1]
cmp	al, 0x39
jg	0x140054b7f
jg	0x140054b7f
movzx	edx, byte ptr [rsi + 2]
sub	edx, 0x30
cmp	dl, 9
ja	0x140054b7f
ja	0x140054b7f
cmp	al, 0x2f
jle	0x140054b7f
jle	0x140054b7f
nop	dword ptr [rax]
xor	edx, edx
lea	rax, [r15 + r15 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
movzx	eax, byte ptr [rsi]
lea	r15, [rsp + 0x40]
sub	eax, 0x2b
test	al, 0xfd
jne	0x140054de8
jne	0x140054de8
movzx	eax, byte ptr [r13]
sub	r12d, 1
lea	r14, [r13 + 1]
lea	r10, [r15 + 1]
mov	dword ptr [rbp - 0x1c], r12d
mov	r12d, 1
mov	byte ptr [r15], al
lea	rcx, [rbp - 0x1c]
mov	rax, qword ptr [rdi + 0x10]
movsx	r9d, byte ptr [rdi + 0x49]
mov	r8, qword ptr [rdi + 0x18]
mov	qword ptr [rsp + 0x30], r14
mov	r14, r15
mov	qword ptr [rsp + 0x20], rdx
mov	rdx, rax
mov	qword ptr [rsp + 0x38], rcx
mov	qword ptr [rsp + 0x28], r10
mov	rcx, qword ptr [rbp + 0x58]
call	0x1400544f0
call	0x1400544f0
add	r12d, dword ptr [rbp - 0x1c]
mov	rsi, qword ptr [rbx + 0x10]
movsxd	r15, r12d
mov	dword ptr [rbp - 0x1c], r12d
cmp	r15, rsi
jge	0x140054b8c
jge	0x140054b8c
lea	rax, [rsi + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
movsx	edx, byte ptr [rbp - 0x54]
sub	rsp, rax
mov	r9, r14
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], r15
lea	rdi, [rsp + 0x40]
movsxd	r15, esi
mov	qword ptr [rsp + 0x20], rsi
mov	r8, rdi
mov	r14, rdi
call	0x140098510
call	0x140098510
mov	dword ptr [rbp - 0x1c], esi
jmp	0x140054b8c
jmp	0x140054b8c
nop	
call	0x14009baf0
call	0x14009baf0
fld	xword ptr [rbp - 0x50]
lea	r14, [rbp - 0x30]
lea	r12, [rbp - 0x18]
mov	qword ptr [rbp - 0x18], rax
mov	r9, r13
mov	r8d, 0x36
mov	rdx, rsi
mov	rcx, r12
fstp	xword ptr [rbp - 0x30]
mov	qword ptr [rsp + 0x20], r14
call	0x1400ad890
call	0x1400ad890
mov	dword ptr [rbp - 0x1c], eax
cmp	eax, 0x35
jle	0x140054ac6
jle	0x140054ac6
lea	r15d, [rax + 1]
movsxd	rax, r15d
add	rax, 0xf
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
call	0x14009baf0
call	0x14009baf0
fld	xword ptr [rbp - 0x50]
lea	rsi, [rsp + 0x40]
mov	r9, r13
mov	qword ptr [rbp - 0x18], rax
mov	r8d, r15d
mov	rdx, rsi
mov	rcx, r12
fstp	xword ptr [rbp - 0x30]
mov	qword ptr [rsp + 0x20], r14
call	0x1400ad890
call	0x1400ad890
mov	dword ptr [rbp - 0x1c], eax
jmp	0x140054ac6
jmp	0x140054ac6
nop	dword ptr [rax]
mov	qword ptr [rbp - 0x60], r8
mov	qword ptr [rbp - 0x50], rcx
call	0x140021cb0
call	0x140021cb0
mov	r8, qword ptr [rbp - 0x60]
mov	rcx, qword ptr [rbp - 0x50]
jmp	0x140054b20
jmp	0x140054b20
nop	word ptr [rax + rax]
mov	r10, r15
xor	r12d, r12d
jmp	0x140054cb4
jmp	0x140054cb4
nop	dword ptr [rax + rax]
mov	r9, r13
mov	rdx, rsi
call	rax
call	rax
test	r15, r15
jne	0x140054b4e
jne	0x140054b4e
cmp	byte ptr [rdi + 0x20], 0
jne	0x140054c70
jne	0x140054c70
xor	r15d, r15d
jmp	0x140054b7f
jmp	0x140054b7f
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
mov	rax, qword ptr [rdx]
mov	r10, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	r8, qword ptr [rsp + 0xa8]
mov	rax, qword ptr [rax + 0x48]
mov	rsi, r9
lea	r9, [rip + 0x418]
mov	rdi, rcx
movsx	ecx, byte ptr [rsp + 0xa0]
cmp	rax, r9
jne	0x140054ed0
jne	0x140054ed0
mov	ebp, dword ptr [rsi + 0x18]
mov	r9, rsi
mov	eax, ebp
and	eax, 0xffffbfb5
or	eax, 0x208
mov	dword ptr [rsi + 0x18], eax
lea	rax, [rsp + 0x40]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x30]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rax
mov	qword ptr [rsp + 0x38], rbx
xor	bl, bl
mov	qword ptr [rsp + 0x30], r10
call	0x140054300
call	0x140054300
mov	rax, qword ptr [rsp + 0x40]
mov	qword ptr [rsp + 0x40], rax
mov	rdx, rax
movzx	eax, byte ptr [rsp + 0x48]
mov	dword ptr [rsi + 0x18], ebp
or	rbx, rax
mov	rax, rdi
mov	qword ptr [rdi], rdx
mov	qword ptr [rdi + 8], rbx
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
mov	qword ptr [rsp + 0x28], r8
mov	r9, rsi
lea	r8, [rsp + 0x40]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rdi
mov	qword ptr [rsp + 0x40], r10
mov	qword ptr [rsp + 0x48], rbx
call	rax
call	rax
mov	rax, rdi
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x40
movdqu	xmm0, xmmword ptr [r8]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
movzx	ecx, byte ptr [rsp + 0x78]
movups	xmmword ptr [rsp + 0x30], xmm0
lea	r8, [rsp + 0x30]
mov	dword ptr [rsp + 0x28], ecx
movsx	ecx, byte ptr [rsp + 0x70]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rax, rbx
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x50
mov	rax, qword ptr [rdx]
mov	r10, qword ptr [r8]
movsd	xmm0, qword ptr [rsp + 0x88]
mov	r11, qword ptr [r8 + 8]
lea	r8, [rip + 0x591]
mov	rax, qword ptr [rax + 0x38]
mov	rbx, rcx
mov	qword ptr [rsp + 0x40], r10
movsx	ecx, byte ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x48], r11
cmp	rax, r8
jne	0x140054fa8
jne	0x140054fa8
mov	dword ptr [rsp + 0x20], ecx
lea	r8, [rsp + 0x40]
mov	rcx, rbx
mov	dword ptr [rsp + 0x28], 0
movsd	qword ptr [rsp + 0x30], xmm0
call	0x1400545c0
call	0x1400545c0
mov	rax, rbx
add	rsp, 0x50
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	dword ptr [rsp + 0x20], ecx
lea	r8, [rsp + 0x40]
mov	rcx, rbx
movsd	qword ptr [rsp + 0x28], xmm0
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x50
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0x98]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
lea	r8, [rip + 0x555]
fld	xword ptr [rax]
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x40]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
mov	qword ptr [rsp + 0x58], r11
movsx	ecx, byte ptr [rsp + 0x90]
fstp	xword ptr [rsp + 0x40]
cmp	rax, r8
jne	0x140055040
jne	0x140055040
lea	rax, [rsp + 0x40]
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rax
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
mov	dword ptr [rsp + 0x28], 0x4c
call	0x1400549f0
call	0x1400549f0
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
lea	r8, [rsp + 0x40]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x48
lea	rsi, [rip + 0x523]
mov	rax, qword ptr [rdx]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
mov	r8d, dword ptr [rsp + 0x88]
mov	rax, qword ptr [rax + 0x18]
mov	rbx, rcx
movsx	ecx, byte ptr [rsp + 0x80]
mov	dword ptr [rsp + 0x28], r8d
lea	r8, [rsp + 0x30]
mov	qword ptr [rsp + 0x30], r10
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
mov	qword ptr [rsp + 0x38], r11
cmp	rax, rsi
jne	0x1400550d0
jne	0x1400550d0
call	0x140053c70
call	0x140053c70
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x48
lea	rsi, [rip + 0x4f3]
mov	rax, qword ptr [rdx]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
mov	r8d, dword ptr [rsp + 0x88]
mov	rax, qword ptr [rax + 0x20]
mov	rbx, rcx
movsx	ecx, byte ptr [rsp + 0x80]
mov	dword ptr [rsp + 0x28], r8d
lea	r8, [rsp + 0x30]
mov	qword ptr [rsp + 0x30], r10
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
mov	qword ptr [rsp + 0x38], r11
cmp	rax, rsi
jne	0x140055140
jne	0x140055140
call	0x140053ec0
call	0x140053ec0
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x48
lea	rsi, [rip + 0x4c3]
mov	rax, qword ptr [rdx]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
mov	r8, qword ptr [rsp + 0x88]
mov	rax, qword ptr [rax + 0x28]
mov	rbx, rcx
movsx	ecx, byte ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x30]
mov	qword ptr [rsp + 0x30], r10
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
mov	qword ptr [rsp + 0x38], r11
cmp	rax, rsi
jne	0x1400551b0
jne	0x1400551b0
call	0x1400540b0
call	0x1400540b0
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x48
lea	rsi, [rip + 0x493]
mov	rax, qword ptr [rdx]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
mov	r8, qword ptr [rsp + 0x88]
mov	rax, qword ptr [rax + 0x30]
mov	rbx, rcx
movsx	ecx, byte ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x30]
mov	qword ptr [rsp + 0x30], r10
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
mov	qword ptr [rsp + 0x38], r11
cmp	rax, rsi
jne	0x140055220
jne	0x140055220
call	0x140054300
call	0x140054300
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [rsp + 0x80]
movsxd	rax, dword ptr [rsi]
mov	qword ptr [rsp + 0x20], r8
mov	rbx, r8
mov	rcx, r9
mov	r8, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x28], rax
mov	r9, qword ptr [rsp + 0x78]
movsx	edx, dl
call	0x140098510
call	0x140098510
mov	dword ptr [rsi], ebx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
mov	ebp, dword ptr [r9 + 0x18]
mov	r10, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	eax, ebp
and	eax, 0xffffbfb5
or	eax, 0x208
mov	rdi, rcx
lea	r8, [rsp + 0x30]
mov	rsi, r9
mov	dword ptr [r9 + 0x18], eax
mov	rax, qword ptr [rsp + 0xa8]
lea	rcx, [rsp + 0x40]
mov	qword ptr [rsp + 0x38], rbx
xor	bl, bl
mov	qword ptr [rsp + 0x28], rax
movsx	eax, byte ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x30], r10
mov	dword ptr [rsp + 0x20], eax
call	0x140054300
call	0x140054300
mov	rax, qword ptr [rsp + 0x40]
mov	qword ptr [rsp + 0x40], rax
mov	rdx, rax
movzx	eax, byte ptr [rsp + 0x48]
mov	dword ptr [rsi + 0x18], ebp
or	rbx, rax
mov	rax, rdi
mov	qword ptr [rdi], rdx
mov	qword ptr [rdi + 8], rbx
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0xb8
lea	rbp, [rsp + 0xb0]
mov	r15d, dword ptr [r9 + 0x18]
mov	rdi, qword ptr [r8]
mov	r12, qword ptr [r8 + 8]
mov	r13d, dword ptr [rbp + 0x70]
mov	r14d, dword ptr [rbp + 0x78]
mov	rbx, rcx
mov	rsi, r9
test	r15b, 1
jne	0x140055390
jne	0x140055390
movzx	r14d, r14b
movsx	r13d, r13b
mov	qword ptr [rbp - 0x30], rdi
lea	rcx, [rbp - 0x20]
mov	qword ptr [rbp - 0x28], r12
lea	r8, [rbp - 0x30]
mov	dword ptr [rsp + 0x28], r14d
mov	dword ptr [rsp + 0x20], r13d
call	0x140053c70
call	0x140053c70
mov	rax, qword ptr [rbp - 0x20]
mov	r12b, byte ptr [rbp - 0x18]
mov	qword ptr [rbp - 0x20], rax
mov	rdi, rax
mov	rax, rbx
mov	qword ptr [rbx], rdi
mov	qword ptr [rbx + 8], r12
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
lea	rcx, [r9 + 0xd0]
call	0x14001d6e0
call	0x14001d6e0
test	r14b, r14b
je	0x140055438
je	0x140055438
movsxd	r14, dword ptr [rax + 0x30]
mov	r8, qword ptr [rsi + 0x10]
mov	r10, qword ptr [rax + 0x28]
cmp	r14, r8
jge	0x14005544d
jge	0x14005544d
sub	r8, r14
mov	qword ptr [rbp - 0x70], r10
lea	rax, [r8 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
movsx	edx, r13b
mov	qword ptr [rbp - 0x68], r8
and	r15d, 0xb0
lea	rcx, [rsp + 0x30]
mov	qword ptr [rbp - 0x78], rcx
call	0x1400159a8
call	0x1400159a8
mov	r8, qword ptr [rbp - 0x68]
cmp	r15d, 0x20
mov	qword ptr [rsi + 0x10], 0
mov	r10, qword ptr [rbp - 0x70]
movsxd	r13, r8d
je	0x140055480
je	0x140055480
mov	qword ptr [rbp - 0x68], r10
mov	esi, r12d
test	r12b, r12b
jne	0x140055477
jne	0x140055477
mov	rax, qword ptr [rdi]
mov	rdx, qword ptr [rbp - 0x78]
mov	r8, r13
mov	rcx, rdi
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
mov	r10, qword ptr [rbp - 0x68]
cmp	r13, rax
je	0x14005545d
je	0x14005545d
mov	esi, 1
jmp	0x140055477
jmp	0x140055477
nop	dword ptr [rax + rax]
movsxd	r14, dword ptr [rax + 0x40]
mov	r8, qword ptr [rsi + 0x10]
mov	r10, qword ptr [rax + 0x38]
cmp	r14, r8
jl	0x1400553ba
jl	0x1400553ba
mov	qword ptr [rsi + 0x10], 0
mov	esi, r12d
test	r12b, r12b
jne	0x140055477
jne	0x140055477
mov	rax, qword ptr [rdi]
mov	r8, r14
mov	rdx, r10
mov	rcx, rdi
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	r14, rax
mov	eax, 1
cmovne	esi, eax
mov	r12b, sil
jmp	0x140055370
jmp	0x140055370
nop	
lea	rsi, [rbp - 0x10]
mov	rdx, r10
mov	r8, r14
mov	qword ptr [rbp - 0x10], rdi
mov	rcx, rsi
mov	qword ptr [rbp - 8], r12
xor	r12b, r12b
call	0x1400982d0
call	0x1400982d0
mov	rax, qword ptr [rbp - 0x10]
mov	rdx, qword ptr [rbp - 0x78]
mov	r8, r13
mov	rcx, rsi
mov	qword ptr [rbp - 0x30], rax
mov	rax, qword ptr [rbp - 8]
mov	qword ptr [rbp - 0x28], rax
movzx	eax, byte ptr [rbp - 0x28]
or	r12, rax
mov	qword ptr [rbp - 8], r12
xor	r12b, r12b
call	0x1400982d0
call	0x1400982d0
mov	rax, qword ptr [rbp - 0x10]
mov	qword ptr [rbp - 0x40], rax
mov	rdi, rax
mov	rax, qword ptr [rbp - 8]
mov	qword ptr [rbp - 0x38], rax
movzx	eax, byte ptr [rbp - 0x38]
or	r12, rax
jmp	0x140055370
jmp	0x140055370
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x50
movsx	eax, byte ptr [rsp + 0x80]
movdqu	xmm1, xmmword ptr [r8]
movsd	xmm0, qword ptr [rsp + 0x88]
mov	dword ptr [rsp + 0x20], eax
mov	rbx, rcx
lea	r8, [rsp + 0x40]
mov	dword ptr [rsp + 0x28], 0
movsd	qword ptr [rsp + 0x30], xmm0
movups	xmmword ptr [rsp + 0x40], xmm1
call	0x1400545c0
call	0x1400545c0
mov	rax, rbx
add	rsp, 0x50
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0x98]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
fld	xword ptr [rax]
lea	rax, [rsp + 0x40]
mov	dword ptr [rsp + 0x28], 0x4c
mov	rbx, rcx
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rax
movsx	eax, byte ptr [rsp + 0x90]
fstp	xword ptr [rsp + 0x40]
mov	dword ptr [rsp + 0x20], eax
mov	qword ptr [rsp + 0x50], r10
mov	qword ptr [rsp + 0x58], r11
call	0x1400549f0
call	0x1400549f0
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x40
mov	eax, dword ptr [rsp + 0x78]
movdqu	xmm0, xmmword ptr [r8]
mov	dword ptr [rsp + 0x28], eax
movsx	eax, byte ptr [rsp + 0x70]
mov	rbx, rcx
lea	r8, [rsp + 0x30]
movups	xmmword ptr [rsp + 0x30], xmm0
mov	dword ptr [rsp + 0x20], eax
call	0x140053c70
call	0x140053c70
mov	rax, rbx
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x40
mov	eax, dword ptr [rsp + 0x78]
movdqu	xmm0, xmmword ptr [r8]
mov	dword ptr [rsp + 0x28], eax
movsx	eax, byte ptr [rsp + 0x70]
mov	rbx, rcx
lea	r8, [rsp + 0x30]
movups	xmmword ptr [rsp + 0x30], xmm0
mov	dword ptr [rsp + 0x20], eax
call	0x140053ec0
call	0x140053ec0
mov	rax, rbx
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x40
mov	rax, qword ptr [rsp + 0x78]
movdqu	xmm0, xmmword ptr [r8]
mov	qword ptr [rsp + 0x28], rax
movsx	eax, byte ptr [rsp + 0x70]
mov	rbx, rcx
lea	r8, [rsp + 0x30]
movups	xmmword ptr [rsp + 0x30], xmm0
mov	dword ptr [rsp + 0x20], eax
call	0x1400540b0
call	0x1400540b0
mov	rax, rbx
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x40
mov	rax, qword ptr [rsp + 0x78]
movdqu	xmm0, xmmword ptr [r8]
mov	qword ptr [rsp + 0x28], rax
movsx	eax, byte ptr [rsp + 0x70]
mov	rbx, rcx
lea	r8, [rsp + 0x30]
movups	xmmword ptr [rsp + 0x30], xmm0
mov	dword ptr [rsp + 0x20], eax
call	0x140054300
call	0x140054300
mov	rax, rbx
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, qword ptr [rsp + 0x88]
mov	rax, qword ptr [rsp + 0x80]
mov	rsi, qword ptr [rsp + 0x78]
mov	rcx, rdx
movzx	edx, r9w
movsxd	r9, dword ptr [rbx]
mov	qword ptr [rsp + 0x20], rax
lea	r9, [rax + r9*2]
mov	qword ptr [rsp + 0x28], r9
mov	r9, r8
mov	r8, rcx
mov	rcx, rsi
call	0x1400acbc0
call	0x1400acbc0
sub	rax, rsi
sar	rax, 1
mov	dword ptr [rbx], eax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
lea	rbp, [rsp + 0x50]
mov	eax, dword ptr [rbp + 0x70]
mov	r13d, dword ptr [rbp + 0x78]
mov	r14, qword ptr [r8]
mov	r15, qword ptr [r8 + 8]
mov	rdi, rcx
lea	rcx, [r9 + 0xd0]
mov	rbx, r9
mov	dword ptr [rbp - 8], eax
call	0x14001d7e0
call	0x14001d7e0
sub	rsp, 0x30
mov	edx, r13d
mov	rsi, rax
lea	rax, [rax + 0x4c]
lea	r11, [rsp + 0x30]
mov	qword ptr [rbp - 0x10], rax
mov	eax, dword ptr [rbx + 0x18]
mov	dword ptr [rbp - 4], eax
and	eax, 0x4a
cmp	eax, 0x40
mov	dword ptr [rbp - 0x1c], eax
setne	r12b
cmp	eax, 8
setne	al
and	r12d, eax
test	r13d, r13d
jg	0x140055769
jg	0x140055769
neg	edx
test	r12b, r12b
cmove	edx, r13d
movzx	eax, r12b
mov	qword ptr [rbp - 0x18], r11
lea	rcx, [r11 + 0x28]
mov	dword ptr [rsp + 0x20], eax
mov	r8, qword ptr [rbp - 0x10]
mov	r9d, dword ptr [rbp - 4]
call	0x1400ac860
call	0x1400ac860
mov	r11, qword ptr [rbp - 0x18]
movsxd	r8, eax
mov	eax, 0x14
sub	eax, r8d
cmp	byte ptr [rsi + 0x20], 0
cdqe	
lea	rdx, [r11 + rax*2]
jne	0x140055888
jne	0x140055888
test	r12b, r12b
je	0x1400558ea
je	0x1400558ea
test	r13d, r13d
js	0x140055870
js	0x140055870
test	dword ptr [rbp - 4], 0x800
jne	0x140055810
jne	0x140055810
mov	r12, qword ptr [rbx + 0x10]
movsxd	rsi, r8d
cmp	rsi, r12
jl	0x14005582b
jl	0x14005582b
mov	qword ptr [rbx + 0x10], 0
mov	ebx, r15d
test	r15b, r15b
jne	0x1400557f3
jne	0x1400557f3
mov	rax, qword ptr [r14]
mov	r8, rsi
mov	rcx, r14
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	rsi, rax
mov	eax, 1
cmovne	ebx, eax
mov	rax, rdi
mov	qword ptr [rdi], r14
mov	byte ptr [rdi + 8], bl
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax]
movzx	eax, word ptr [rsi + 0x4e]
add	r8d, 1
mov	r12, qword ptr [rbx + 0x10]
sub	rdx, 2
movsxd	rsi, r8d
mov	word ptr [rdx], ax
cmp	rsi, r12
jge	0x1400557cc
jge	0x1400557cc
lea	rax, [r12 + r12 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
movzx	eax, word ptr [rbp - 8]
mov	r9, rdx
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], rsi
lea	r13, [rsp + 0x30]
movsxd	rsi, r12d
mov	qword ptr [rsp + 0x20], r12
mov	edx, eax
mov	r8, r13
call	0x140098800
call	0x140098800
mov	rdx, r13
jmp	0x1400557cc
jmp	0x1400557cc
nop	word ptr [rax + rax]
movzx	eax, word ptr [rsi + 0x4c]
add	r8d, 1
sub	rdx, 2
mov	word ptr [rdx], ax
jmp	0x1400557c0
jmp	0x1400557c0
nop	dword ptr [rax]
lea	eax, [r8 + 1]
cdqe	
lea	rax, [rax*4 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
mov	r10, qword ptr [rsi + 0x10]
movzx	r11d, word ptr [rsi + 0x4a]
mov	r9, qword ptr [rsi + 0x18]
sub	rsp, rax
lea	rax, [rdx + r8*2]
mov	r8, r10
lea	rcx, [rsp + 0x34]
mov	qword ptr [rsp + 0x20], rdx
mov	edx, r11d
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rbp - 0x18], rcx
call	0x1400acbc0
call	0x1400acbc0
mov	rcx, qword ptr [rbp - 0x18]
sub	rax, rcx
mov	rdx, rcx
mov	r8, rax
sar	r8, 1
test	r12b, r12b
jne	0x1400557ae
jne	0x1400557ae
test	dword ptr [rbp - 4], 0x200
je	0x1400557c0
je	0x1400557c0
test	r13d, r13d
je	0x1400557c0
je	0x1400557c0
cmp	dword ptr [rbp - 0x1c], 0x40
je	0x140055934
je	0x140055934
mov	r10d, dword ptr [rbp - 4]
mov	rax, qword ptr [rbp - 0x10]
add	r8d, 2
sub	rdx, 4
shr	r10d, 0xe
and	r10d, 1
movzx	eax, word ptr [rax + r10*2 + 4]
mov	word ptr [rdx + 2], ax
movzx	eax, word ptr [rsi + 0x54]
mov	word ptr [rdx], ax
jmp	0x1400557c0
jmp	0x1400557c0
movzx	eax, word ptr [rsi + 0x54]
add	r8d, 1
sub	rdx, 2
mov	word ptr [rdx], ax
jmp	0x1400557c0
jmp	0x1400557c0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
lea	rbp, [rsp + 0x50]
mov	eax, dword ptr [rbp + 0x70]
mov	r12, qword ptr [r8]
mov	r15, qword ptr [r8 + 8]
mov	rbx, r9
mov	rdi, rcx
lea	rcx, [r9 + 0xd0]
mov	dword ptr [rbp - 0x14], eax
call	0x14001d7e0
call	0x14001d7e0
mov	r13d, dword ptr [rbx + 0x18]
sub	rsp, 0x30
lea	r8, [rax + 0x4c]
mov	rsi, rax
lea	r11, [rsp + 0x30]
mov	r14d, r13d
mov	qword ptr [rbp - 0x20], r8
lea	rcx, [rsp + 0x58]
mov	r9d, r13d
and	r14d, 0x4a
mov	qword ptr [rbp - 0x10], r11
cmp	r14d, 0x40
setne	r10b
cmp	r14d, 8
setne	al
and	r10d, eax
movzx	eax, r10b
mov	byte ptr [rbp - 8], r10b
mov	dword ptr [rsp + 0x20], eax
mov	edx, dword ptr [rbp + 0x78]
call	0x1400ac860
call	0x1400ac860
mov	r11, qword ptr [rbp - 0x10]
movzx	r10d, byte ptr [rbp - 8]
movsxd	r8, eax
mov	eax, 0x14
sub	eax, r8d
cmp	byte ptr [rsi + 0x20], 0
cdqe	
lea	rdx, [r11 + rax*2]
jne	0x140055a50
jne	0x140055a50
test	r10b, r10b
je	0x140055abb
je	0x140055abb
mov	r13, qword ptr [rbx + 0x10]
movsxd	rsi, r8d
cmp	rsi, r13
jl	0x140055b08
jl	0x140055b08
mov	qword ptr [rbx + 0x10], 0
mov	ebx, r15d
test	r15b, r15b
jne	0x140055a36
jne	0x140055a36
mov	rax, qword ptr [r12]
mov	r8, rsi
mov	rcx, r12
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	rsi, rax
mov	eax, 1
cmovne	ebx, eax
mov	rax, rdi
mov	qword ptr [rdi], r12
mov	byte ptr [rdi + 8], bl
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
lea	eax, [r8 + 1]
mov	byte ptr [rbp - 0x10], r10b
cdqe	
lea	rax, [rax*4 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
movzx	r11d, word ptr [rsi + 0x4a]
mov	r9, qword ptr [rsi + 0x18]
sub	rsp, rax
lea	r8, [rdx + r8*2]
mov	rax, qword ptr [rsi + 0x10]
lea	rcx, [rsp + 0x34]
mov	qword ptr [rsp + 0x28], r8
mov	qword ptr [rsp + 0x20], rdx
mov	r8, rax
mov	edx, r11d
mov	qword ptr [rbp - 8], rcx
call	0x1400acbc0
call	0x1400acbc0
mov	rcx, qword ptr [rbp - 8]
movzx	r10d, byte ptr [rbp - 0x10]
sub	rax, rcx
mov	rdx, rcx
mov	r8, rax
sar	r8, 1
test	r10b, r10b
jne	0x1400559fe
jne	0x1400559fe
test	r13d, 0x200
je	0x1400559fe
je	0x1400559fe
mov	eax, dword ptr [rbp + 0x78]
test	eax, eax
je	0x1400559fe
je	0x1400559fe
cmp	r14d, 0x40
je	0x140055b47
je	0x140055b47
mov	rax, qword ptr [rbp - 0x20]
shr	r13d, 0xe
add	r8d, 2
sub	rdx, 4
and	r13d, 1
movzx	eax, word ptr [rax + r13*2 + 4]
mov	word ptr [rdx + 2], ax
movzx	eax, word ptr [rsi + 0x54]
mov	word ptr [rdx], ax
jmp	0x1400559fe
jmp	0x1400559fe
nop	dword ptr [rax + rax]
lea	rax, [r13 + r13 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
movzx	eax, word ptr [rbp - 0x14]
mov	r9, rdx
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], rsi
lea	r14, [rsp + 0x30]
movsxd	rsi, r13d
mov	qword ptr [rsp + 0x20], r13
mov	edx, eax
mov	r8, r14
call	0x140098800
call	0x140098800
mov	rdx, r14
jmp	0x140055a0e
jmp	0x140055a0e
movzx	eax, word ptr [rsi + 0x54]
add	r8d, 1
sub	rdx, 2
mov	word ptr [rdx], ax
jmp	0x1400559fe
jmp	0x1400559fe
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
lea	rbp, [rsp + 0x50]
mov	eax, dword ptr [rbp + 0x70]
mov	r13, qword ptr [rbp + 0x78]
mov	r14, qword ptr [r8]
mov	r15, qword ptr [r8 + 8]
mov	rdi, rcx
lea	rcx, [r9 + 0xd0]
mov	rbx, r9
mov	dword ptr [rbp - 8], eax
call	0x14001d7e0
call	0x14001d7e0
sub	rsp, 0x50
mov	rdx, r13
mov	rsi, rax
lea	rax, [rax + 0x4c]
lea	r11, [rsp + 0x30]
mov	qword ptr [rbp - 0x10], rax
mov	eax, dword ptr [rbx + 0x18]
mov	dword ptr [rbp - 4], eax
and	eax, 0x4a
cmp	eax, 0x40
mov	dword ptr [rbp - 0x1c], eax
setne	r12b
cmp	eax, 8
setne	al
and	r12d, eax
test	r13, r13
jg	0x140055bda
jg	0x140055bda
neg	rdx
test	r12b, r12b
cmove	rdx, r13
movzx	eax, r12b
mov	qword ptr [rbp - 0x18], r11
lea	rcx, [r11 + 0x50]
mov	dword ptr [rsp + 0x20], eax
mov	r8, qword ptr [rbp - 0x10]
mov	r9d, dword ptr [rbp - 4]
call	0x1400ac930
call	0x1400ac930
mov	r11, qword ptr [rbp - 0x18]
movsxd	r8, eax
mov	eax, 0x28
sub	eax, r8d
cmp	byte ptr [rsi + 0x20], 0
cdqe	
lea	rdx, [r11 + rax*2]
jne	0x140055cf8
jne	0x140055cf8
test	r12b, r12b
je	0x140055d5a
je	0x140055d5a
test	r13, r13
js	0x140055ce0
js	0x140055ce0
test	dword ptr [rbp - 4], 0x800
jne	0x140055c80
jne	0x140055c80
mov	r12, qword ptr [rbx + 0x10]
movsxd	rsi, r8d
cmp	rsi, r12
jl	0x140055c9b
jl	0x140055c9b
mov	qword ptr [rbx + 0x10], 0
mov	ebx, r15d
test	r15b, r15b
jne	0x140055c64
jne	0x140055c64
mov	rax, qword ptr [r14]
mov	r8, rsi
mov	rcx, r14
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	rsi, rax
mov	eax, 1
cmovne	ebx, eax
mov	rax, rdi
mov	qword ptr [rdi], r14
mov	byte ptr [rdi + 8], bl
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	
movzx	eax, word ptr [rsi + 0x4e]
add	r8d, 1
mov	r12, qword ptr [rbx + 0x10]
sub	rdx, 2
movsxd	rsi, r8d
mov	word ptr [rdx], ax
cmp	rsi, r12
jge	0x140055c3d
jge	0x140055c3d
lea	rax, [r12 + r12 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
movzx	eax, word ptr [rbp - 8]
mov	r9, rdx
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], rsi
lea	r13, [rsp + 0x30]
movsxd	rsi, r12d
mov	qword ptr [rsp + 0x20], r12
mov	edx, eax
mov	r8, r13
call	0x140098800
call	0x140098800
mov	rdx, r13
jmp	0x140055c3d
jmp	0x140055c3d
nop	word ptr [rax + rax]
movzx	eax, word ptr [rsi + 0x4c]
add	r8d, 1
sub	rdx, 2
mov	word ptr [rdx], ax
jmp	0x140055c31
jmp	0x140055c31
nop	dword ptr [rax]
lea	eax, [r8 + 1]
cdqe	
lea	rax, [rax*4 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
mov	r10, qword ptr [rsi + 0x10]
movzx	r11d, word ptr [rsi + 0x4a]
mov	r9, qword ptr [rsi + 0x18]
sub	rsp, rax
lea	rax, [rdx + r8*2]
mov	r8, r10
lea	rcx, [rsp + 0x34]
mov	qword ptr [rsp + 0x20], rdx
mov	edx, r11d
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rbp - 0x18], rcx
call	0x1400acbc0
call	0x1400acbc0
mov	rcx, qword ptr [rbp - 0x18]
sub	rax, rcx
mov	rdx, rcx
mov	r8, rax
sar	r8, 1
test	r12b, r12b
jne	0x140055c1f
jne	0x140055c1f
test	dword ptr [rbp - 4], 0x200
je	0x140055c31
je	0x140055c31
test	r13, r13
je	0x140055c31
je	0x140055c31
cmp	dword ptr [rbp - 0x1c], 0x40
je	0x140055da4
je	0x140055da4
mov	r10d, dword ptr [rbp - 4]
mov	rax, qword ptr [rbp - 0x10]
add	r8d, 2
sub	rdx, 4
shr	r10d, 0xe
and	r10d, 1
movzx	eax, word ptr [rax + r10*2 + 4]
mov	word ptr [rdx + 2], ax
movzx	eax, word ptr [rsi + 0x54]
mov	word ptr [rdx], ax
jmp	0x140055c31
jmp	0x140055c31
movzx	eax, word ptr [rsi + 0x54]
add	r8d, 1
sub	rdx, 2
mov	word ptr [rdx], ax
jmp	0x140055c31
jmp	0x140055c31
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
lea	rbp, [rsp + 0x50]
mov	eax, dword ptr [rbp + 0x70]
mov	r12, qword ptr [r8]
mov	r15, qword ptr [r8 + 8]
mov	rbx, r9
mov	rdi, rcx
lea	rcx, [r9 + 0xd0]
mov	dword ptr [rbp - 0x14], eax
call	0x14001d7e0
call	0x14001d7e0
mov	r13d, dword ptr [rbx + 0x18]
sub	rsp, 0x50
lea	r8, [rax + 0x4c]
mov	rsi, rax
lea	r11, [rsp + 0x30]
mov	r14d, r13d
mov	qword ptr [rbp - 0x20], r8
mov	r9d, r13d
lea	rcx, [rsp + 0x80]
and	r14d, 0x4a
mov	qword ptr [rbp - 0x10], r11
cmp	r14d, 0x40
setne	r10b
cmp	r14d, 8
setne	al
and	r10d, eax
movzx	eax, r10b
mov	byte ptr [rbp - 8], r10b
mov	dword ptr [rsp + 0x20], eax
mov	rdx, qword ptr [rbp + 0x78]
call	0x1400ac930
call	0x1400ac930
mov	r11, qword ptr [rbp - 0x10]
movzx	r10d, byte ptr [rbp - 8]
movsxd	r8, eax
mov	eax, 0x28
sub	eax, r8d
cmp	byte ptr [rsi + 0x20], 0
cdqe	
lea	rdx, [r11 + rax*2]
jne	0x140055ec8
jne	0x140055ec8
test	r10b, r10b
je	0x140055f33
je	0x140055f33
mov	r13, qword ptr [rbx + 0x10]
movsxd	rsi, r8d
cmp	rsi, r13
jl	0x140055f80
jl	0x140055f80
mov	qword ptr [rbx + 0x10], 0
mov	ebx, r15d
test	r15b, r15b
jne	0x140055eaa
jne	0x140055eaa
mov	rax, qword ptr [r12]
mov	r8, rsi
mov	rcx, r12
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	rsi, rax
mov	eax, 1
cmovne	ebx, eax
mov	rax, rdi
mov	qword ptr [rdi], r12
mov	byte ptr [rdi + 8], bl
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax]
lea	eax, [r8 + 1]
mov	byte ptr [rbp - 0x10], r10b
cdqe	
lea	rax, [rax*4 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
movzx	r11d, word ptr [rsi + 0x4a]
mov	r9, qword ptr [rsi + 0x18]
sub	rsp, rax
lea	r8, [rdx + r8*2]
mov	rax, qword ptr [rsi + 0x10]
lea	rcx, [rsp + 0x34]
mov	qword ptr [rsp + 0x28], r8
mov	qword ptr [rsp + 0x20], rdx
mov	r8, rax
mov	edx, r11d
mov	qword ptr [rbp - 8], rcx
call	0x1400acbc0
call	0x1400acbc0
mov	rcx, qword ptr [rbp - 8]
movzx	r10d, byte ptr [rbp - 0x10]
sub	rax, rcx
mov	rdx, rcx
mov	r8, rax
sar	r8, 1
test	r10b, r10b
jne	0x140055e72
jne	0x140055e72
test	r13d, 0x200
je	0x140055e72
je	0x140055e72
cmp	qword ptr [rbp + 0x78], 0
je	0x140055e72
je	0x140055e72
cmp	r14d, 0x40
je	0x140055fbf
je	0x140055fbf
mov	rax, qword ptr [rbp - 0x20]
shr	r13d, 0xe
add	r8d, 2
sub	rdx, 4
and	r13d, 1
movzx	eax, word ptr [rax + r13*2 + 4]
mov	word ptr [rdx + 2], ax
movzx	eax, word ptr [rsi + 0x54]
mov	word ptr [rdx], ax
jmp	0x140055e72
jmp	0x140055e72
nop	dword ptr [rax + rax]
lea	rax, [r13 + r13 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
movzx	eax, word ptr [rbp - 0x14]
mov	r9, rdx
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], rsi
lea	r14, [rsp + 0x30]
movsxd	rsi, r13d
mov	qword ptr [rsp + 0x20], r13
mov	edx, eax
mov	r8, r14
call	0x140098800
call	0x140098800
mov	rdx, r14
jmp	0x140055e82
jmp	0x140055e82
movzx	eax, word ptr [rsi + 0x54]
add	r8d, 1
sub	rdx, 2
mov	word ptr [rdx], ax
jmp	0x140055e72
jmp	0x140055e72
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [rsp + 0x80]
mov	rdi, qword ptr [rsp + 0x88]
mov	rcx, qword ptr [rsp + 0x90]
mov	rbx, qword ptr [rsp + 0x98]
mov	rax, rdx
movzx	edx, r9w
test	rsi, rsi
je	0x140056088
je	0x140056088
mov	rbp, rsi
mov	qword ptr [rsp + 0x20], rcx
sub	rbp, rcx
sar	rbp, 1
movsxd	r9, ebp
lea	r9, [rcx + r9*2]
mov	rcx, rdi
mov	qword ptr [rsp + 0x28], r9
mov	r9, r8
mov	r8, rax
call	0x1400acbc0
call	0x1400acbc0
mov	r8d, dword ptr [rbx]
xor	edx, edx
mov	rcx, rax
sub	rax, rdi
sub	r8d, ebp
sar	rax, 1
movsxd	r8, r8d
mov	rdi, rax
test	r8, r8
jne	0x140056070
jne	0x140056070
lea	eax, [rdx + rdi]
mov	dword ptr [rbx], eax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rdx, rsi
add	r8, r8
call	0x140015998
call	0x140015998
mov	edx, dword ptr [rbx]
sub	edx, ebp
jmp	0x140056058
jmp	0x140056058
nop	dword ptr [rax]
movsxd	r9, dword ptr [rbx]
mov	qword ptr [rsp + 0x20], rcx
lea	r9, [rcx + r9*2]
mov	rcx, rdi
mov	qword ptr [rsp + 0x28], r9
mov	r9, r8
mov	r8, rax
call	0x1400acbc0
call	0x1400acbc0
sub	rax, rdi
sar	rax, 1
mov	dword ptr [rbx], eax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
lea	rbp, [rsp + 0x80]
movups	xmmword ptr [rbp], xmm6
mov	rax, qword ptr [r8 + 8]
mov	esi, dword ptr [rbp + 0x88]
mov	r13, qword ptr [r8]
movsd	xmm6, qword ptr [rbp + 0x90]
mov	qword ptr [rbp - 0x28], rax
mov	eax, dword ptr [rbp + 0x80]
mov	rbx, r9
lea	r14, [rbp - 0x10]
mov	qword ptr [rbp + 0x60], rcx
lea	rcx, [r9 + 0xd0]
mov	qword ptr [rbp + 0x68], rdx
mov	dword ptr [rbp - 0x34], eax
call	0x14001d7e0
call	0x14001d7e0
mov	r12, qword ptr [rbx + 8]
movsx	r8d, sil
mov	rdx, r14
mov	rdi, rax
mov	rcx, rbx
mov	eax, 6
test	r12, r12
cmovs	r12, rax
call	0x1400750b0
call	0x1400750b0
mov	eax, dword ptr [rbx + 0x18]
sub	rsp, 0x30
lea	rsi, [rsp + 0x40]
not	eax
test	eax, 0x104
je	0x1400563c8
je	0x1400563c8
call	0x14009baf0
call	0x14009baf0
lea	r15, [rbp - 0x18]
mov	r9, r14
mov	rdx, rsi
mov	qword ptr [rbp - 0x18], rax
mov	r8d, 0x2d
mov	rcx, r15
mov	qword ptr [rsp + 0x20], r12
movsd	qword ptr [rsp + 0x28], xmm6
call	0x1400ad890
call	0x1400ad890
mov	dword ptr [rbp - 0x1c], eax
cmp	eax, 0x2c
jg	0x140056290
jg	0x140056290
mov	rcx, qword ptr [rip + 0x6874a]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rcx, qword ptr [rax + rdx*8]
test	rcx, rcx
je	0x14005648b
je	0x14005648b
movsxd	r12, dword ptr [rbp - 0x1c]
lea	rax, [r12 + r12 + 0xf]
mov	r14, r12
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
lea	r8, [rsi + r12]
mov	rdx, rsi
lea	rax, [rsp + 0x40]
mov	r15, rax
mov	qword ptr [rbp - 0x30], rax
mov	rax, qword ptr [rcx]
mov	r9, r15
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
test	r12, r12
je	0x1400562e0
je	0x1400562e0
mov	edx, 0x2e
mov	r8, r12
mov	rcx, rsi
call	0x140015988
call	0x140015988
mov	rdx, rax
movzx	eax, byte ptr [rdi + 0x20]
test	rdx, rdx
je	0x140056440
je	0x140056440
mov	rcx, qword ptr [rbp - 0x30]
sub	rdx, rsi
lea	rdx, [rcx + rdx*2]
movzx	ecx, word ptr [rdi + 0x48]
mov	word ptr [rdx], cx
test	al, al
jne	0x1400562ec
jne	0x1400562ec
mov	rsi, qword ptr [rbx + 0x10]
cmp	r12, rsi
jl	0x140056382
jl	0x140056382
mov	rax, qword ptr [rbp - 0x28]
mov	qword ptr [rbx + 0x10], 0
mov	ebx, eax
test	al, al
jne	0x140056267
jne	0x140056267
mov	rax, qword ptr [r13]
mov	r8, r12
mov	rdx, r15
mov	rcx, r13
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	rax, r12
mov	eax, 1
cmovne	ebx, eax
mov	rax, qword ptr [rbp + 0x60]
mov	qword ptr [rax], r13
mov	byte ptr [rax + 8], bl
movups	xmm6, xmmword ptr [rbp]
lea	rsp, [rbp + 0x18]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
lea	r8d, [rax + 1]
movsxd	rax, r8d
mov	dword ptr [rbp - 0x30], r8d
add	rax, 0xf
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
call	0x14009baf0
call	0x14009baf0
lea	rsi, [rsp + 0x40]
mov	r9, r14
mov	rcx, r15
mov	qword ptr [rbp - 0x18], rax
mov	rdx, rsi
mov	qword ptr [rsp + 0x20], r12
movsd	qword ptr [rsp + 0x28], xmm6
mov	r8d, dword ptr [rbp - 0x30]
call	0x1400ad890
call	0x1400ad890
mov	dword ptr [rbp - 0x1c], eax
jmp	0x14005618f
jmp	0x14005618f
nop	
cmp	byte ptr [rdi + 0x20], 0
je	0x14005622d
je	0x14005622d
xor	edx, edx
lea	rax, [r12*4 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
movzx	eax, byte ptr [rsi]
lea	r12, [rsp + 0x40]
sub	eax, 0x2b
test	al, 0xfd
jne	0x140056480
jne	0x140056480
mov	rsi, qword ptr [rbp - 0x30]
sub	r14d, 1
lea	rcx, [r12 + 2]
mov	dword ptr [rbp - 0x1c], r14d
mov	r14d, 1
movzx	eax, word ptr [rsi]
lea	r15, [rsi + 2]
mov	word ptr [r12], ax
lea	r10, [rbp - 0x1c]
mov	rax, qword ptr [rdi + 0x10]
movzx	r9d, word ptr [rdi + 0x4a]
mov	r8, qword ptr [rdi + 0x18]
mov	qword ptr [rsp + 0x30], r15
mov	r15, r12
mov	qword ptr [rsp + 0x20], rdx
mov	rdx, rax
mov	qword ptr [rsp + 0x38], r10
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rbp + 0x68]
call	0x140055fe0
call	0x140055fe0
add	r14d, dword ptr [rbp - 0x1c]
mov	rsi, qword ptr [rbx + 0x10]
movsxd	r12, r14d
mov	dword ptr [rbp - 0x1c], r14d
cmp	r12, rsi
jge	0x14005623a
jge	0x14005623a
lea	rax, [rsi + rsi + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
movzx	edx, word ptr [rbp - 0x34]
sub	rsp, rax
mov	r9, r15
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], r12
lea	rdi, [rsp + 0x40]
movsxd	r12, esi
mov	qword ptr [rsp + 0x20], rsi
mov	r8, rdi
mov	r15, rdi
call	0x140098800
call	0x140098800
mov	dword ptr [rbp - 0x1c], esi
jmp	0x14005623a
jmp	0x14005623a
nop	word ptr [rax + rax]
call	0x14009baf0
call	0x14009baf0
lea	r12, [rbp - 0x18]
mov	r9, r14
mov	rdx, rsi
mov	qword ptr [rbp - 0x18], rax
mov	r8d, 0x2d
mov	rcx, r12
movsd	qword ptr [rsp + 0x20], xmm6
call	0x1400ad890
call	0x1400ad890
mov	dword ptr [rbp - 0x1c], eax
cmp	eax, 0x2c
jle	0x14005618f
jle	0x14005618f
lea	r15d, [rax + 1]
movsxd	rax, r15d
add	rax, 0xf
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
call	0x14009baf0
call	0x14009baf0
lea	rsi, [rsp + 0x40]
mov	r9, r14
mov	r8d, r15d
mov	qword ptr [rbp - 0x18], rax
mov	rdx, rsi
mov	rcx, r12
movsd	qword ptr [rsp + 0x20], xmm6
call	0x1400ad890
call	0x1400ad890
mov	dword ptr [rbp - 0x1c], eax
jmp	0x14005618f
jmp	0x14005618f
nop	
test	al, al
je	0x14005622d
je	0x14005622d
cmp	r12d, 2
jle	0x1400562ec
jle	0x1400562ec
movzx	eax, byte ptr [rsi + 1]
cmp	al, 0x39
jg	0x14005622d
jg	0x14005622d
movzx	ecx, byte ptr [rsi + 2]
sub	ecx, 0x30
cmp	cl, 9
ja	0x14005622d
ja	0x14005622d
cmp	al, 0x2f
jle	0x14005622d
jle	0x14005622d
jmp	0x1400562ec
jmp	0x1400562ec
nop	dword ptr [rax + rax]
mov	rcx, r12
xor	r14d, r14d
jmp	0x140056336
jmp	0x140056336
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
lea	rbp, [rsp + 0xa0]
mov	rax, qword ptr [r8 + 8]
mov	esi, dword ptr [rbp + 0x78]
mov	r13, qword ptr [r8]
mov	qword ptr [rbp - 0x48], rax
mov	eax, dword ptr [rbp + 0x70]
mov	rbx, r9
lea	r14, [rbp - 0x10]
mov	qword ptr [rbp + 0x50], rcx
lea	rcx, [r9 + 0xd0]
mov	dword ptr [rbp - 0x4c], eax
mov	rax, qword ptr [rbp + 0x80]
mov	qword ptr [rbp + 0x58], rdx
fld	xword ptr [rax]
fstp	xword ptr [rbp - 0x40]
call	0x14001d7e0
call	0x14001d7e0
mov	r12, qword ptr [rbx + 8]
movsx	r8d, sil
mov	rdx, r14
mov	rdi, rax
mov	rcx, rbx
mov	eax, 6
test	r12, r12
cmovs	r12, rax
call	0x1400750b0
call	0x1400750b0
mov	eax, dword ptr [rbx + 0x18]
sub	rsp, 0x40
lea	rsi, [rsp + 0x40]
not	eax
test	eax, 0x104
je	0x1400567b0
je	0x1400567b0
call	0x14009baf0
call	0x14009baf0
fld	xword ptr [rbp - 0x40]
lea	r15, [rbp - 0x30]
mov	r9, r14
mov	qword ptr [rbp - 0x18], rax
lea	rax, [rbp - 0x18]
mov	r8d, 0x36
mov	rdx, rsi
mov	rcx, rax
fstp	xword ptr [rbp - 0x30]
mov	qword ptr [rsp + 0x28], r15
mov	qword ptr [rsp + 0x20], r12
mov	qword ptr [rbp - 0x58], rax
call	0x1400ad890
call	0x1400ad890
mov	dword ptr [rbp - 0x1c], eax
cmp	eax, 0x35
jg	0x140056670
jg	0x140056670
mov	rcx, qword ptr [rip + 0x68363]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rcx, qword ptr [rax + rdx*8]
test	rcx, rcx
je	0x14005688b
je	0x14005688b
movsxd	r12, dword ptr [rbp - 0x1c]
lea	rax, [r12 + r12 + 0xf]
mov	r14, r12
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
lea	r8, [rsi + r12]
mov	rdx, rsi
lea	rax, [rsp + 0x40]
mov	r15, rax
mov	qword ptr [rbp - 0x40], rax
mov	rax, qword ptr [rcx]
mov	r9, r15
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
test	r12, r12
je	0x1400566c8
je	0x1400566c8
mov	edx, 0x2e
mov	r8, r12
mov	rcx, rsi
call	0x140015988
call	0x140015988
mov	rdx, rax
movzx	eax, byte ptr [rdi + 0x20]
test	rdx, rdx
je	0x140056840
je	0x140056840
mov	rcx, qword ptr [rbp - 0x40]
sub	rdx, rsi
lea	rdx, [rcx + rdx*2]
movzx	ecx, word ptr [rdi + 0x48]
mov	word ptr [rdx], cx
test	al, al
jne	0x1400566d4
jne	0x1400566d4
mov	rsi, qword ptr [rbx + 0x10]
cmp	r12, rsi
jl	0x14005676a
jl	0x14005676a
mov	rax, qword ptr [rbp - 0x48]
mov	qword ptr [rbx + 0x10], 0
mov	ebx, eax
test	al, al
jne	0x14005664e
jne	0x14005664e
mov	rax, qword ptr [r13]
mov	r8, r12
mov	rdx, r15
mov	rcx, r13
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	rax, r12
mov	eax, 1
cmovne	ebx, eax
mov	rax, qword ptr [rbp + 0x50]
mov	qword ptr [rax], r13
mov	byte ptr [rax + 8], bl
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax]
lea	r8d, [rax + 1]
movsxd	rax, r8d
mov	dword ptr [rbp - 0x50], r8d
add	rax, 0xf
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
call	0x14009baf0
call	0x14009baf0
fld	xword ptr [rbp - 0x40]
lea	rsi, [rsp + 0x40]
mov	r9, r14
mov	qword ptr [rbp - 0x18], rax
mov	rdx, rsi
fstp	xword ptr [rbp - 0x30]
mov	qword ptr [rsp + 0x28], r15
mov	qword ptr [rsp + 0x20], r12
mov	r8d, dword ptr [rbp - 0x50]
mov	rcx, qword ptr [rbp - 0x58]
call	0x1400ad890
call	0x1400ad890
mov	dword ptr [rbp - 0x1c], eax
jmp	0x140056576
jmp	0x140056576
nop	dword ptr [rax]
cmp	byte ptr [rdi + 0x20], 0
je	0x140056614
je	0x140056614
xor	edx, edx
lea	rax, [r12*4 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
movzx	eax, byte ptr [rsi]
lea	r12, [rsp + 0x40]
sub	eax, 0x2b
test	al, 0xfd
jne	0x140056880
jne	0x140056880
mov	rsi, qword ptr [rbp - 0x40]
sub	r14d, 1
lea	r10, [r12 + 2]
mov	dword ptr [rbp - 0x1c], r14d
mov	r14d, 1
movzx	eax, word ptr [rsi]
lea	r15, [rsi + 2]
mov	word ptr [r12], ax
lea	r11, [rbp - 0x1c]
mov	rax, qword ptr [rdi + 0x10]
movzx	r9d, word ptr [rdi + 0x4a]
mov	r8, qword ptr [rdi + 0x18]
mov	qword ptr [rsp + 0x30], r15
mov	r15, r12
mov	qword ptr [rsp + 0x20], rdx
mov	rdx, rax
mov	qword ptr [rsp + 0x38], r11
mov	qword ptr [rsp + 0x28], r10
mov	rcx, qword ptr [rbp + 0x58]
call	0x140055fe0
call	0x140055fe0
add	r14d, dword ptr [rbp - 0x1c]
mov	rsi, qword ptr [rbx + 0x10]
movsxd	r12, r14d
mov	dword ptr [rbp - 0x1c], r14d
cmp	r12, rsi
jge	0x140056621
jge	0x140056621
lea	rax, [rsi + rsi + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
movzx	edx, word ptr [rbp - 0x4c]
sub	rsp, rax
mov	r9, r15
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], r12
lea	rdi, [rsp + 0x40]
movsxd	r12, esi
mov	qword ptr [rsp + 0x20], rsi
mov	r8, rdi
mov	r15, rdi
call	0x140098800
call	0x140098800
mov	dword ptr [rbp - 0x1c], esi
jmp	0x140056621
jmp	0x140056621
nop	word ptr [rax + rax]
call	0x14009baf0
call	0x14009baf0
fld	xword ptr [rbp - 0x40]
lea	r15, [rbp - 0x30]
lea	r12, [rbp - 0x18]
mov	qword ptr [rbp - 0x18], rax
mov	r9, r14
mov	r8d, 0x36
mov	rdx, rsi
mov	rcx, r12
fstp	xword ptr [rbp - 0x30]
mov	qword ptr [rsp + 0x20], r15
call	0x1400ad890
call	0x1400ad890
mov	dword ptr [rbp - 0x1c], eax
cmp	eax, 0x35
jle	0x140056576
jle	0x140056576
lea	r8d, [rax + 1]
movsxd	rax, r8d
mov	dword ptr [rbp - 0x58], r8d
add	rax, 0xf
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
call	0x14009baf0
call	0x14009baf0
fld	xword ptr [rbp - 0x40]
lea	rsi, [rsp + 0x40]
mov	r9, r14
mov	qword ptr [rbp - 0x18], rax
mov	rdx, rsi
mov	rcx, r12
fstp	xword ptr [rbp - 0x30]
mov	qword ptr [rsp + 0x20], r15
mov	r8d, dword ptr [rbp - 0x58]
call	0x1400ad890
call	0x1400ad890
mov	dword ptr [rbp - 0x1c], eax
jmp	0x140056576
jmp	0x140056576
nop	word ptr [rax + rax]
test	al, al
je	0x140056614
je	0x140056614
cmp	r12d, 2
jle	0x1400566d4
jle	0x1400566d4
movzx	eax, byte ptr [rsi + 1]
cmp	al, 0x39
jg	0x140056614
jg	0x140056614
movzx	ecx, byte ptr [rsi + 2]
sub	ecx, 0x30
cmp	cl, 9
ja	0x140056614
ja	0x140056614
cmp	al, 0x2f
jle	0x140056614
jle	0x140056614
jmp	0x1400566d4
jmp	0x1400566d4
nop	dword ptr [rax + rax]
mov	r10, r12
xor	r14d, r14d
jmp	0x14005671e
jmp	0x14005671e
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
mov	rax, qword ptr [rdx]
mov	r10, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	r8, qword ptr [rsp + 0xa8]
mov	rax, qword ptr [rax + 0x48]
mov	rsi, r9
lea	r9, [rip + 0x418]
mov	rdi, rcx
movzx	ecx, word ptr [rsp + 0xa0]
cmp	rax, r9
jne	0x140056940
jne	0x140056940
mov	ebp, dword ptr [rsi + 0x18]
mov	r9, rsi
mov	eax, ebp
and	eax, 0xffffbfb5
or	eax, 0x208
mov	dword ptr [rsi + 0x18], eax
lea	rax, [rsp + 0x40]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x30]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rax
mov	qword ptr [rsp + 0x38], rbx
xor	bl, bl
mov	qword ptr [rsp + 0x30], r10
call	0x140055dc0
call	0x140055dc0
mov	rax, qword ptr [rsp + 0x40]
mov	qword ptr [rsp + 0x40], rax
mov	rdx, rax
movzx	eax, byte ptr [rsp + 0x48]
mov	dword ptr [rsi + 0x18], ebp
or	rbx, rax
mov	rax, rdi
mov	qword ptr [rdi], rdx
mov	qword ptr [rdi + 8], rbx
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
mov	qword ptr [rsp + 0x28], r8
mov	r9, rsi
lea	r8, [rsp + 0x40]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rdi
mov	qword ptr [rsp + 0x40], r10
mov	qword ptr [rsp + 0x48], rbx
call	rax
call	rax
mov	rax, rdi
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x40
movdqu	xmm0, xmmword ptr [r8]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
movzx	ecx, byte ptr [rsp + 0x78]
movups	xmmword ptr [rsp + 0x30], xmm0
lea	r8, [rsp + 0x30]
mov	dword ptr [rsp + 0x28], ecx
movzx	ecx, word ptr [rsp + 0x70]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rax, rbx
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x50
mov	rax, qword ptr [rdx]
mov	r10, qword ptr [r8]
movsd	xmm0, qword ptr [rsp + 0x88]
mov	r11, qword ptr [r8 + 8]
lea	r8, [rip + 0x5a1]
mov	rax, qword ptr [rax + 0x38]
mov	rbx, rcx
mov	qword ptr [rsp + 0x40], r10
movzx	ecx, word ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x48], r11
cmp	rax, r8
jne	0x140056a18
jne	0x140056a18
mov	dword ptr [rsp + 0x20], ecx
lea	r8, [rsp + 0x40]
mov	rcx, rbx
mov	dword ptr [rsp + 0x28], 0
movsd	qword ptr [rsp + 0x30], xmm0
call	0x1400560c0
call	0x1400560c0
mov	rax, rbx
add	rsp, 0x50
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	dword ptr [rsp + 0x20], ecx
lea	r8, [rsp + 0x40]
mov	rcx, rbx
movsd	qword ptr [rsp + 0x28], xmm0
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x50
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0x98]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
lea	r8, [rip + 0x565]
fld	xword ptr [rax]
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x40]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
mov	qword ptr [rsp + 0x58], r11
movzx	ecx, word ptr [rsp + 0x90]
fstp	xword ptr [rsp + 0x40]
cmp	rax, r8
jne	0x140056ab0
jne	0x140056ab0
lea	rax, [rsp + 0x40]
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rax
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
mov	dword ptr [rsp + 0x28], 0x4c
call	0x1400564a0
call	0x1400564a0
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
lea	r8, [rsp + 0x40]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x48
lea	rsi, [rip + 0x533]
mov	rax, qword ptr [rdx]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
mov	r8d, dword ptr [rsp + 0x88]
mov	rax, qword ptr [rax + 0x18]
mov	rbx, rcx
movzx	ecx, word ptr [rsp + 0x80]
mov	dword ptr [rsp + 0x28], r8d
lea	r8, [rsp + 0x30]
mov	qword ptr [rsp + 0x30], r10
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
mov	qword ptr [rsp + 0x38], r11
cmp	rax, rsi
jne	0x140056b40
jne	0x140056b40
call	0x1400556f0
call	0x1400556f0
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x48
lea	rsi, [rip + 0x503]
mov	rax, qword ptr [rdx]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
mov	r8d, dword ptr [rsp + 0x88]
mov	rax, qword ptr [rax + 0x20]
mov	rbx, rcx
movzx	ecx, word ptr [rsp + 0x80]
mov	dword ptr [rsp + 0x28], r8d
lea	r8, [rsp + 0x30]
mov	qword ptr [rsp + 0x30], r10
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
mov	qword ptr [rsp + 0x38], r11
cmp	rax, rsi
jne	0x140056bb0
jne	0x140056bb0
call	0x140055950
call	0x140055950
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x48
lea	rsi, [rip + 0x4d3]
mov	rax, qword ptr [rdx]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
mov	r8, qword ptr [rsp + 0x88]
mov	rax, qword ptr [rax + 0x28]
mov	rbx, rcx
movzx	ecx, word ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x30]
mov	qword ptr [rsp + 0x30], r10
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
mov	qword ptr [rsp + 0x38], r11
cmp	rax, rsi
jne	0x140056c20
jne	0x140056c20
call	0x140055b60
call	0x140055b60
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x48
lea	rsi, [rip + 0x4a3]
mov	rax, qword ptr [rdx]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
mov	r8, qword ptr [rsp + 0x88]
mov	rax, qword ptr [rax + 0x30]
mov	rbx, rcx
movzx	ecx, word ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x30]
mov	qword ptr [rsp + 0x30], r10
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
mov	qword ptr [rsp + 0x38], r11
cmp	rax, rsi
jne	0x140056c90
jne	0x140056c90
call	0x140055dc0
call	0x140055dc0
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [rsp + 0x80]
movsxd	rax, dword ptr [rsi]
mov	qword ptr [rsp + 0x20], r8
mov	rbx, r8
mov	rcx, r9
mov	r8, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x28], rax
mov	r9, qword ptr [rsp + 0x78]
movzx	edx, dx
call	0x140098800
call	0x140098800
mov	dword ptr [rsi], ebx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
mov	ebp, dword ptr [r9 + 0x18]
mov	r10, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	eax, ebp
and	eax, 0xffffbfb5
or	eax, 0x208
mov	rdi, rcx
lea	r8, [rsp + 0x30]
mov	rsi, r9
mov	dword ptr [r9 + 0x18], eax
mov	rax, qword ptr [rsp + 0xa8]
lea	rcx, [rsp + 0x40]
mov	qword ptr [rsp + 0x38], rbx
xor	bl, bl
mov	qword ptr [rsp + 0x28], rax
movzx	eax, word ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x30], r10
mov	dword ptr [rsp + 0x20], eax
call	0x140055dc0
call	0x140055dc0
mov	rax, qword ptr [rsp + 0x40]
mov	qword ptr [rsp + 0x40], rax
mov	rdx, rax
movzx	eax, byte ptr [rsp + 0x48]
mov	dword ptr [rsi + 0x18], ebp
or	rbx, rax
mov	rax, rdi
mov	qword ptr [rdi], rdx
mov	qword ptr [rdi + 8], rbx
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x88
lea	rbp, [rsp + 0x80]
mov	rdi, qword ptr [r8]
mov	r12, qword ptr [r8 + 8]
mov	r8d, dword ptr [r9 + 0x18]
mov	r13d, dword ptr [rbp + 0x78]
mov	rbx, rcx
mov	ecx, dword ptr [rbp + 0x70]
mov	rax, rdx
mov	rsi, r9
mov	edx, ecx
test	r8b, 1
jne	0x140056e08
jne	0x140056e08
movzx	ecx, cx
movzx	r13d, r13b
mov	qword ptr [rbp - 0x20], rdi
lea	r10, [rbp - 0x10]
mov	qword ptr [rbp - 0x18], r12
mov	rdx, rax
lea	r8, [rbp - 0x20]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, r10
mov	dword ptr [rsp + 0x28], r13d
call	0x1400556f0
call	0x1400556f0
mov	rax, qword ptr [rbp - 0x10]
mov	r12b, byte ptr [rbp - 8]
mov	qword ptr [rbp - 0x10], rax
mov	rdi, rax
mov	rax, rbx
mov	qword ptr [rbx], rdi
mov	qword ptr [rbx + 8], r12
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
lea	rcx, [r9 + 0xd0]
mov	dword ptr [rbp - 0x4c], edx
mov	dword ptr [rbp - 0x48], r8d
call	0x14001d7e0
call	0x14001d7e0
test	r13b, r13b
mov	r8d, dword ptr [rbp - 0x48]
mov	edx, dword ptr [rbp - 0x4c]
jne	0x140056ef8
jne	0x140056ef8
movsxd	r13, dword ptr [rax + 0x40]
mov	r10, qword ptr [rsi + 0x10]
mov	r15d, r12d
mov	ecx, r12d
mov	r9, qword ptr [rax + 0x38]
cmp	r13, r10
jge	0x140056f13
jge	0x140056f13
sub	r10, r13
lea	rax, [r10 + r10 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
xor	eax, eax
lea	r14, [rsp + 0x30]
test	r10b, 1
je	0x140056e80
je	0x140056e80
mov	word ptr [r14], dx
mov	eax, 1
cmp	r10, 1
je	0x140056e94
je	0x140056e94
nop	word ptr cs:[rax + rax]
mov	word ptr [r14 + rax*2], dx
mov	word ptr [r14 + rax*2 + 2], dx
add	rax, 2
cmp	r10, rax
jne	0x140056e80
jne	0x140056e80
and	r8d, 0xb0
mov	qword ptr [rsi + 0x10], 0
movsxd	rsi, r10d
cmp	r8d, 0x20
je	0x140056f28
je	0x140056f28
mov	qword ptr [rbp - 0x48], r9
test	cl, cl
jne	0x140056eeb
jne	0x140056eeb
mov	rax, qword ptr [rdi]
mov	r8, rsi
mov	rdx, r14
mov	rcx, rdi
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
mov	r9, qword ptr [rbp - 0x48]
cmp	rsi, rax
jne	0x140056f63
jne	0x140056f63
mov	rax, qword ptr [rdi]
mov	r8, r13
mov	rdx, r9
mov	rcx, rdi
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	r13, rax
mov	eax, 1
cmovne	r15d, eax
mov	r12b, r15b
jmp	0x140056de8
jmp	0x140056de8
nop	dword ptr [rax + rax]
movsxd	r13, dword ptr [rax + 0x30]
mov	r10, qword ptr [rsi + 0x10]
mov	r15d, r12d
mov	ecx, r12d
mov	r9, qword ptr [rax + 0x28]
cmp	r13, r10
jl	0x140056e46
jl	0x140056e46
mov	qword ptr [rsi + 0x10], 0
test	r12b, r12b
je	0x140056ed0
je	0x140056ed0
jmp	0x140056eeb
jmp	0x140056eeb
nop	word ptr [rax + rax]
test	cl, cl
jne	0x140056eeb
jne	0x140056eeb
mov	rax, qword ptr [rdi]
mov	r8, r13
mov	rdx, r9
mov	rcx, rdi
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	r13, rax
jne	0x140056f63
jne	0x140056f63
mov	rax, qword ptr [rdi]
mov	r8, rsi
mov	rdx, r14
mov	rcx, rdi
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	rsi, rax
mov	eax, 1
cmovne	r15d, eax
mov	r12b, r15b
jmp	0x140056de8
jmp	0x140056de8
mov	r15d, 1
jmp	0x140056eeb
jmp	0x140056eeb
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x50
movzx	eax, word ptr [rsp + 0x80]
movdqu	xmm1, xmmword ptr [r8]
movsd	xmm0, qword ptr [rsp + 0x88]
mov	dword ptr [rsp + 0x20], eax
mov	rbx, rcx
lea	r8, [rsp + 0x40]
mov	dword ptr [rsp + 0x28], 0
movsd	qword ptr [rsp + 0x30], xmm0
movups	xmmword ptr [rsp + 0x40], xmm1
call	0x1400560c0
call	0x1400560c0
mov	rax, rbx
add	rsp, 0x50
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0x98]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
fld	xword ptr [rax]
lea	rax, [rsp + 0x40]
mov	dword ptr [rsp + 0x28], 0x4c
mov	rbx, rcx
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rax
movzx	eax, word ptr [rsp + 0x90]
fstp	xword ptr [rsp + 0x40]
mov	dword ptr [rsp + 0x20], eax
mov	qword ptr [rsp + 0x50], r10
mov	qword ptr [rsp + 0x58], r11
call	0x1400564a0
call	0x1400564a0
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x40
mov	eax, dword ptr [rsp + 0x78]
movdqu	xmm0, xmmword ptr [r8]
mov	dword ptr [rsp + 0x28], eax
movzx	eax, word ptr [rsp + 0x70]
mov	rbx, rcx
lea	r8, [rsp + 0x30]
movups	xmmword ptr [rsp + 0x30], xmm0
mov	dword ptr [rsp + 0x20], eax
call	0x1400556f0
call	0x1400556f0
mov	rax, rbx
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x40
mov	eax, dword ptr [rsp + 0x78]
movdqu	xmm0, xmmword ptr [r8]
mov	dword ptr [rsp + 0x28], eax
movzx	eax, word ptr [rsp + 0x70]
mov	rbx, rcx
lea	r8, [rsp + 0x30]
movups	xmmword ptr [rsp + 0x30], xmm0
mov	dword ptr [rsp + 0x20], eax
call	0x140055950
call	0x140055950
mov	rax, rbx
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x40
mov	rax, qword ptr [rsp + 0x78]
movdqu	xmm0, xmmword ptr [r8]
mov	qword ptr [rsp + 0x28], rax
movzx	eax, word ptr [rsp + 0x70]
mov	rbx, rcx
lea	r8, [rsp + 0x30]
movups	xmmword ptr [rsp + 0x30], xmm0
mov	dword ptr [rsp + 0x20], eax
call	0x140055b60
call	0x140055b60
mov	rax, rbx
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x40
mov	rax, qword ptr [rsp + 0x78]
movdqu	xmm0, xmmword ptr [r8]
mov	qword ptr [rsp + 0x28], rax
movzx	eax, word ptr [rsp + 0x70]
mov	rbx, rcx
lea	r8, [rsp + 0x30]
movups	xmmword ptr [rsp + 0x30], xmm0
mov	dword ptr [rsp + 0x20], eax
call	0x140055dc0
call	0x140055dc0
mov	rax, rbx
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x63919]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14001d8e0
jmp	0x14001d8e0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
xor	edx, edx
mov	rbx, rcx
lea	r8, [rsp + 0x2f]
xor	ecx, ecx
call	0x140071d40
call	0x140071d40
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	rcx, qword ptr [rsp + 0x68]
mov	qword ptr [rsp + 0x28], rcx
mov	ecx, dword ptr [rsp + 0x60]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
lea	r9, [rip + 0xf9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, r9
jne	0x1400571e0
jne	0x1400571e0
xor	eax, eax
ret	
ret	
nop	word ptr cs:[rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	r9, [rip + 0xc9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, r9
jne	0x140057210
jne	0x140057210
xor	eax, eax
ret	
ret	
nop	word ptr cs:[rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	r8, [rip + 0xa9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x20]
cmp	rax, r8
jne	0x140057238
jne	0x140057238
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rsp + 0x68]
mov	rax, qword ptr [rax]
mov	edx, dword ptr [rax - 8]
mov	rbx, rcx
lea	r8, [rax - 8]
lea	rcx, [rax - 0x18]
test	edx, edx
js	0x140057280
js	0x140057280
mov	rdx, qword ptr [rip + 0x673ca]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x1400572a0
jne	0x1400572a0
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
lock add	dword ptr [r8], 1
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
xor	edx, edx
mov	rbx, rcx
lea	r8, [rsp + 0x2f]
xor	ecx, ecx
call	0x140068880
call	0x140068880
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	rcx, qword ptr [rsp + 0x68]
mov	qword ptr [rsp + 0x28], rcx
mov	ecx, dword ptr [rsp + 0x60]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
lea	r9, [rip + 0xf9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, r9
jne	0x140057370
jne	0x140057370
xor	eax, eax
ret	
ret	
nop	word ptr cs:[rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	r9, [rip + 0xc9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, r9
jne	0x1400573a0
jne	0x1400573a0
xor	eax, eax
ret	
ret	
nop	word ptr cs:[rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	r8, [rip + 0xa9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x20]
cmp	rax, r8
jne	0x1400573c8
jne	0x1400573c8
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rsp + 0x68]
mov	rax, qword ptr [rax]
mov	edx, dword ptr [rax - 8]
mov	rbx, rcx
lea	r8, [rax - 8]
lea	rcx, [rax - 0x18]
test	edx, edx
js	0x140057410
js	0x140057410
mov	rdx, qword ptr [rip + 0x6723a]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x140057430
jne	0x140057430
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140069010
call	0x140069010
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
lock add	dword ptr [r8], 1
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x10]
mov	rbx, rcx
test	rsi, rsi
je	0x140057499
je	0x140057499
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x28]
mov	rbx, rcx
test	rsi, rsi
je	0x1400574e9
je	0x1400574e9
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x38]
mov	rbx, rcx
test	rsi, rsi
je	0x140057539
je	0x140057539
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x59]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x140057580
jne	0x140057580
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x48]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x39]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x18]
cmp	rax, rdx
jne	0x1400575b0
jne	0x1400575b0
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x49]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x48]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, byte ptr [rax + 0x49]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x20]
mov	rbx, rcx
lea	rcx, [rip - 0x187]
cmp	rax, rcx
jne	0x140057640
jne	0x140057640
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x10]
test	rsi, rsi
je	0x14005761c
je	0x14005761c
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x28]
mov	rbx, rcx
lea	rcx, [rip - 0x1a7]
cmp	rax, rcx
jne	0x1400576b0
jne	0x1400576b0
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x28]
test	rsi, rsi
je	0x14005768c
je	0x14005768c
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x30]
mov	rbx, rcx
lea	rcx, [rip - 0x1c7]
cmp	rax, rcx
jne	0x140057720
jne	0x140057720
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x38]
test	rsi, rsi
je	0x1400576fc
je	0x1400576fc
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x10]
mov	rbx, rcx
test	rsi, rsi
je	0x140057759
je	0x140057759
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071ff0
call	0x140071ff0
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	rsi, qword ptr [rax + 0x28]
mov	rbx, rcx
test	rsi, rsi
je	0x1400577a9
je	0x1400577a9
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
lea	rdx, [rsi + rax*2]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140068a90
call	0x140068a90
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	rsi, qword ptr [rax + 0x38]
mov	rbx, rcx
test	rsi, rsi
je	0x1400577f9
je	0x1400577f9
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
lea	rdx, [rsi + rax*2]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140068a90
call	0x140068a90
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x59]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x140057840
jne	0x140057840
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x48]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x39]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x18]
cmp	rax, rdx
jne	0x140057870
jne	0x140057870
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x4a]
ret	
ret	
nop	dword ptr [rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x48]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
movzx	eax, word ptr [rax + 0x4a]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x20]
mov	rbx, rcx
lea	rcx, [rip - 0x187]
cmp	rax, rcx
jne	0x140057900
jne	0x140057900
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rsi, qword ptr [rax + 0x10]
test	rsi, rsi
je	0x1400578dc
je	0x1400578dc
mov	rcx, rsi
call	0x140015a08
call	0x140015a08
lea	rdx, [rsi + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140071ff0
call	0x140071ff0
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x28]
mov	rbx, rcx
lea	rcx, [rip - 0x1a7]
cmp	rax, rcx
jne	0x140057970
jne	0x140057970
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	rsi, qword ptr [rax + 0x28]
test	rsi, rsi
je	0x14005794c
je	0x14005794c
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
lea	rdx, [rsi + rax*2]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140068a90
call	0x140068a90
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rax, qword ptr [rax + 0x30]
mov	rbx, rcx
lea	rcx, [rip - 0x1c7]
cmp	rax, rcx
jne	0x1400579e0
jne	0x1400579e0
mov	rax, qword ptr [rdx + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	rsi, qword ptr [rax + 0x38]
test	rsi, rsi
je	0x1400579bc
je	0x1400579bc
mov	rcx, rsi
call	0x140015a60
call	0x140015a60
lea	rdx, [rsi + rax*2]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x140068a90
call	0x140068a90
mov	qword ptr [rbx], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
lea	rdx, [rip + 0x7c9]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x140057a10
jne	0x140057a10
xor	eax, eax
ret	
ret	
nop	word ptr cs:[rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	r12, qword ptr [rsp + 0x100]
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [r9 + 8]
mov	r14, qword ptr [rsp + 0x108]
mov	rsi, rcx
lea	rcx, [rip + 0x5f5f5]
mov	rdi, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [r12 + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x140057beb
jae	0x140057beb
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x140057beb
je	0x140057beb
xor	r9d, r9d
lea	r8, [rip + 0x697c0]
lea	rdx, [rip + 0x69109]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x140057beb
je	0x140057beb
mov	rax, qword ptr [rax + 0x10]
mov	rdx, rdi
lea	rcx, [rsp + 0x70]
lea	r9, [rsp + 0x50]
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x84], 0
mov	rax, qword ptr [rax + 0x10]
mov	qword ptr [rsp + 0x60], r15
lea	r15, [rsp + 0x84]
mov	qword ptr [rsp + 0x40], r15
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x110]
mov	qword ptr [rsp + 0x20], r12
mov	qword ptr [rsp + 0x30], rax
mov	qword ptr [rsp + 0x28], r14
mov	qword ptr [rsp + 0x68], rbx
mov	dword ptr [rsp + 0x8c], 0
mov	qword ptr [rsp + 0x50], rbp
mov	qword ptr [rsp + 0x58], r13
call	0x1400595d0
call	0x1400595d0
mov	r12, qword ptr [rsp + 0x78]
mov	rdi, qword ptr [rsp + 0x70]
mov	rcx, r15
movabs	rdx, 0xffffffff00000000
and	rbx, rdx
mov	rdx, qword ptr [rsp + 0x110]
mov	eax, r12d
mov	qword ptr [rsp + 0x78], r12
or	rbx, rax
mov	qword ptr [rsp + 0x70], rdi
call	0x140094930
call	0x140094930
cmp	r12d, -1
sete	r12b
test	rdi, rdi
setne	al
and	al, r12b
mov	r15d, eax
jne	0x140057bc0
jne	0x140057bc0
cmp	r13d, -1
sete	al
test	rbp, rbp
je	0x140057b75
je	0x140057b75
test	al, al
jne	0x140057ba0
jne	0x140057ba0
cmp	al, r12b
jne	0x140057b7e
jne	0x140057b7e
or	dword ptr [r14], 2
mov	rax, rsi
mov	qword ptr [rsi], rdi
mov	qword ptr [rsi + 8], rbx
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rdx, qword ptr [rbp + 0x18]
xor	eax, eax
cmp	qword ptr [rbp + 0x10], rdx
jb	0x140057b75
jb	0x140057b75
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jmp	0x140057b75
jmp	0x140057b75
nop	
mov	rax, qword ptr [rdi + 0x18]
xor	r12d, r12d
cmp	qword ptr [rdi + 0x10], rax
jb	0x140057b65
jb	0x140057b65
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmove	r12d, r15d
cmove	rdi, rax
jmp	0x140057b65
jmp	0x140057b65
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	r12, qword ptr [rsp + 0x100]
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [r9 + 8]
mov	r14, qword ptr [rsp + 0x108]
mov	rsi, rcx
lea	rcx, [rip + 0x5f415]
mov	rdi, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [r12 + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x140057dcb
jae	0x140057dcb
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x140057dcb
je	0x140057dcb
xor	r9d, r9d
lea	r8, [rip + 0x695e0]
lea	rdx, [rip + 0x68f29]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x140057dcb
je	0x140057dcb
mov	rax, qword ptr [rax + 0x10]
mov	rdx, rdi
lea	rcx, [rsp + 0x70]
lea	r9, [rsp + 0x50]
mov	dword ptr [rsp + 0x8c], 0
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x84], 0
mov	rax, qword ptr [rax + 0x20]
mov	qword ptr [rsp + 0x60], r15
lea	r15, [rsp + 0x84]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x110]
mov	qword ptr [rsp + 0x40], r15
mov	qword ptr [rsp + 0x30], rax
mov	qword ptr [rsp + 0x20], r12
mov	qword ptr [rsp + 0x28], r14
mov	qword ptr [rsp + 0x68], rbx
mov	qword ptr [rsp + 0x50], rbp
mov	qword ptr [rsp + 0x58], r13
call	0x1400595d0
call	0x1400595d0
mov	r12, qword ptr [rsp + 0x78]
mov	rdi, qword ptr [rsp + 0x70]
mov	rcx, r15
movabs	rdx, 0xffffffff00000000
and	rbx, rdx
mov	rdx, qword ptr [rsp + 0x110]
mov	eax, r12d
mov	qword ptr [rsp + 0x78], r12
or	rbx, rax
mov	qword ptr [rsp + 0x70], rdi
call	0x140094930
call	0x140094930
cmp	r12d, -1
sete	r12b
test	rdi, rdi
setne	al
and	al, r12b
mov	r15d, eax
jne	0x140057da0
jne	0x140057da0
cmp	r13d, -1
sete	al
test	rbp, rbp
je	0x140057d55
je	0x140057d55
test	al, al
jne	0x140057d80
jne	0x140057d80
cmp	al, r12b
jne	0x140057d5e
jne	0x140057d5e
or	dword ptr [r14], 2
mov	rax, rsi
mov	qword ptr [rsi], rdi
mov	qword ptr [rsi + 8], rbx
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rdx, qword ptr [rbp + 0x18]
xor	eax, eax
cmp	qword ptr [rbp + 0x10], rdx
jb	0x140057d55
jb	0x140057d55
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jmp	0x140057d55
jmp	0x140057d55
nop	
mov	rax, qword ptr [rdi + 0x18]
xor	r12d, r12d
cmp	qword ptr [rdi + 0x10], rax
jb	0x140057d45
jb	0x140057d45
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmove	r12d, r15d
cmove	rdi, rax
jmp	0x140057d45
jmp	0x140057d45
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xc0
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	rbp, qword ptr [rsp + 0x120]
mov	rdi, qword ptr [rsp + 0x128]
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0x66abb]
mov	rsi, rdx
mov	dword ptr [rsp + 0xbc], 0
movups	xmmword ptr [rsp + 0xa0], xmm0
movups	xmmword ptr [rsp + 0x90], xmm1
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r12, qword ptr [rax + rdx*8]
test	r12, r12
je	0x140058148
je	0x140058148
lea	rax, [rsp + 0xbc]
mov	qword ptr [rsp + 0x40], rbp
movdqu	xmm2, xmmword ptr [rsp + 0xa0]
lea	rcx, [rsp + 0x80]
mov	qword ptr [rsp + 0x48], rax
lea	r9, [rsp + 0x60]
lea	r8, [rsp + 0x70]
movdqu	xmm3, xmmword ptr [rsp + 0x90]
lea	rax, [rsp + 0xb8]
mov	rdx, rsi
mov	qword ptr [rsp + 0x38], 2
mov	qword ptr [rsp + 0x20], rax
mov	dword ptr [rsp + 0x30], 0x63
mov	dword ptr [rsp + 0x28], 0
movups	xmmword ptr [rsp + 0x70], xmm2
movups	xmmword ptr [rsp + 0x60], xmm3
call	0x140058240
call	0x140058240
mov	rax, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x80], rax
mov	rcx, rax
mov	qword ptr [rsp + 0xa0], rax
mov	eax, dword ptr [rsp + 0x88]
mov	dword ptr [rsp + 0xa8], eax
mov	eax, dword ptr [rsp + 0xbc]
test	eax, eax
je	0x140057f60
je	0x140057f60
or	dword ptr [rdi], 4
cmp	dword ptr [rsp + 0xa8], -1
sete	sil
test	rcx, rcx
je	0x140057f12
je	0x140057f12
test	sil, sil
jne	0x140058020
jne	0x140058020
mov	rcx, qword ptr [rsp + 0x90]
cmp	dword ptr [rsp + 0x98], -1
sete	al
test	rcx, rcx
je	0x140057f32
je	0x140057f32
test	al, al
jne	0x140057fc0
jne	0x140057fc0
cmp	sil, al
jne	0x140057f3a
jne	0x140057f3a
or	dword ptr [rdi], 2
movdqu	xmm4, xmmword ptr [rsp + 0xa0]
mov	rax, rbx
movups	xmmword ptr [rbx], xmm4
add	rsp, 0xc0
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax + rax]
lea	r13, [rsp + 0x90]
lea	rsi, [rsp + 0xa0]
mov	rdx, r13
mov	rcx, rsi
call	0x140020830
call	0x140020830
mov	ebp, dword ptr [rsp + 0xb8]
test	al, al
je	0x140058050
je	0x140058050
cmp	ebp, 0x44
jle	0x140058038
jle	0x140058038
cmp	dword ptr [rsp + 0xa8], -1
mov	rcx, qword ptr [rsp + 0xa0]
sete	sil
mov	rax, qword ptr [rsp + 0x130]
mov	dword ptr [rax + 0x14], ebp
jmp	0x140057f04
jmp	0x140057f04
nop	word ptr [rax + rax]
mov	rdx, qword ptr [rcx + 0x18]
xor	eax, eax
cmp	qword ptr [rcx + 0x10], rdx
jb	0x140057f32
jb	0x140057f32
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jmp	0x140057f32
jmp	0x140057f32
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x58], rcx
call	0x140091a00
call	0x140091a00
lea	eax, [rbp + rbp*4]
mov	rcx, qword ptr [rsp + 0x58]
mov	dword ptr [rsp + 0xa8], 0xffffffff
lea	eax, [rsi + rax*2 - 0x79c]
mov	rsi, qword ptr [rsp + 0x130]
mov	dword ptr [rsp + 0xb8], eax
mov	dword ptr [rsi + 0x14], eax
nop	
mov	rax, qword ptr [rcx + 0x18]
cmp	qword ptr [rcx + 0x10], rax
jae	0x1400580e0
jae	0x1400580e0
xor	esi, esi
jmp	0x140057f12
jmp	0x140057f12
nop	dword ptr [rax]
add	ebp, 0x64
mov	dword ptr [rsp + 0xb8], ebp
jmp	0x140057f93
jmp	0x140057f93
nop	word ptr [rax + rax]
mov	rcx, rsi
call	0x1400208f0
call	0x1400208f0
mov	r8d, 0x2a
mov	rcx, r12
movsx	edx, al
call	0x140022410
call	0x140022410
movsx	r14d, al
lea	eax, [r14 - 0x30]
cmp	al, 9
ja	0x140057f8a
ja	0x140057f8a
mov	rcx, qword ptr [rsp + 0xa0]
call	0x140091a00
call	0x140091a00
lea	eax, [rbp + rbp*4]
mov	rdx, r13
mov	rcx, rsi
mov	dword ptr [rsp + 0xa8], 0xffffffff
lea	ebp, [r14 + rax*2 - 0x30]
mov	dword ptr [rsp + 0xb8], ebp
call	0x140020830
call	0x140020830
test	al, al
je	0x140058108
je	0x140058108
cmp	dword ptr [rsp + 0xa8], -1
mov	rcx, qword ptr [rsp + 0xa0]
sete	sil
sub	ebp, 0x76c
mov	dword ptr [rsp + 0xb8], ebp
jmp	0x140057fa7
jmp	0x140057fa7
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x14005802e
jne	0x14005802e
mov	qword ptr [rsp + 0xa0], 0
mov	esi, 1
jmp	0x140057f12
jmp	0x140057f12
nop	dword ptr [rax]
mov	rcx, rsi
call	0x1400208f0
call	0x1400208f0
mov	rcx, r12
mov	r8d, 0x2a
movsx	edx, al
call	0x140022410
call	0x140022410
mov	rcx, qword ptr [rsp + 0xa0]
movsx	esi, al
lea	eax, [rsi - 0x30]
cmp	al, 9
jbe	0x140057fe8
jbe	0x140057fe8
cmp	dword ptr [rsp + 0xa8], -1
sete	sil
jmp	0x1400580c4
jmp	0x1400580c4
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
mov	rax, qword ptr [r8 + 8]
mov	rdi, qword ptr [r9 + 8]
mov	esi, dword ptr [rsp + 0xc0]
mov	rbx, qword ptr [r8]
mov	r15, qword ptr [r9]
mov	ebp, eax
mov	qword ptr [rsp + 0x90], rcx
mov	rcx, qword ptr [rip + 0x6665a]
mov	qword ptr [rsp + 0x30], rax
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0xd0]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r13, qword ptr [rax + rdx*8]
test	r13, r13
je	0x1400585cd
je	0x1400585cd
cmp	edi, -1
mov	r11d, esi
mov	r10, qword ptr [rsp + 0xc8]
mov	rsi, r15
sete	r14b
lea	r9, [rip - 0x35ddf]
xor	edi, edi
xor	r12d, r12d
mov	r15d, r14d
mov	r14, r13
jmp	0x140058316
jmp	0x140058316
nop	dword ptr [rax]
mov	byte ptr [r14 + r13 + 0x139], dl
movsx	eax, dl
lea	edx, [rax - 0x30]
cmp	dl, 9
ja	0x14005838a
ja	0x14005838a
lea	edx, [rdi + rdi*4]
lea	edi, [rax + rdx*2 - 0x30]
cmp	edi, r11d
jg	0x1400583a7
jg	0x1400583a7
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400584d0
jae	0x1400584d0
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
add	r12, 1
mov	ebp, 0xffffffff
cmp	ebp, -1
sete	dl
test	rbx, rbx
setne	r13b
and	r13b, dl
jne	0x1400583f0
jne	0x1400583f0
mov	r13d, edx
test	rsi, rsi
je	0x14005833d
je	0x14005833d
test	r15b, r15b
jne	0x140058410
jne	0x140058410
xor	r13d, r15d
cmp	r12, r10
jae	0x14005838a
jae	0x14005838a
test	r13b, r13b
je	0x14005838a
je	0x14005838a
test	rbx, rbx
je	0x140058357
je	0x140058357
test	dl, dl
jne	0x140058470
jne	0x140058470
mov	edx, ebp
movzx	r13d, bpl
movsxd	r13, r13d
movsx	eax, byte ptr [r14 + r13 + 0x139]
test	al, al
jne	0x1400582db
jne	0x1400582db
mov	rax, qword ptr [r14]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, r9
jne	0x140058490
jne	0x140058490
cmp	dl, 0x2a
jne	0x1400582d0
jne	0x1400582d0
test	r12, r12
setne	dl
cmp	edi, dword ptr [rsp + 0xb8]
setge	al
test	dl, al
je	0x1400583a7
je	0x1400583a7
cmp	edi, r11d
jle	0x140058510
jle	0x140058510
mov	rax, qword ptr [rsp + 0xd8]
or	dword ptr [rax], 4
mov	rcx, qword ptr [rsp + 0x90]
movabs	rax, 0xffffffff00000000
and	rax, qword ptr [rsp + 0x30]
or	rax, rbp
mov	qword ptr [rcx + 8], rax
mov	rax, rcx
mov	qword ptr [rcx], rbx
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x140058520
jae	0x140058520
xor	r13d, r13d
jmp	0x14005832f
jmp	0x14005832f
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rsi + 0x18]
cmp	qword ptr [rsi + 0x10], rax
jb	0x140058340
jb	0x140058340
mov	rax, qword ptr [rsi]
mov	qword ptr [rsp + 0x38], r9
mov	rcx, rsi
mov	qword ptr [rsp + 0xc8], r10
mov	dword ptr [rsp + 0xc0], r11d
mov	byte ptr [rsp + 0x28], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x28]
mov	r11d, dword ptr [rsp + 0xc0]
cmp	eax, -1
mov	r10, qword ptr [rsp + 0xc8]
mov	r9, qword ptr [rsp + 0x38]
jne	0x140058340
jne	0x140058340
xor	r13d, 1
xor	esi, esi
jmp	0x140058340
jmp	0x140058340
nop	
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140058578
jae	0x140058578
movzx	r13d, byte ptr [rax]
mov	edx, r13d
jmp	0x14005835d
jmp	0x14005835d
nop	word ptr [rax + rax]
mov	qword ptr [rsp + 0x28], r9
movsx	edx, dl
mov	r8d, 0x2a
mov	rcx, r14
mov	qword ptr [rsp + 0xc8], r10
mov	dword ptr [rsp + 0xc0], r11d
call	rax
call	rax
mov	r9, qword ptr [rsp + 0x28]
mov	r10, qword ptr [rsp + 0xc8]
mov	r11d, dword ptr [rsp + 0xc0]
mov	edx, eax
jmp	0x140058381
jmp	0x140058381
nop	
mov	rax, qword ptr [rbx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
mov	qword ptr [rsp + 0xc8], r10
mov	dword ptr [rsp + 0xc0], r11d
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	r9, qword ptr [rsp + 0x28]
mov	r10, qword ptr [rsp + 0xc8]
mov	r11d, dword ptr [rsp + 0xc0]
jmp	0x14005830d
jmp	0x14005830d
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsp + 0xb0]
mov	dword ptr [rax], edi
jmp	0x1400583b2
jmp	0x1400583b2
nop	
mov	rax, qword ptr [rbx]
mov	qword ptr [rsp + 0x38], r9
mov	rcx, rbx
mov	qword ptr [rsp + 0xc8], r10
mov	dword ptr [rsp + 0xc0], r11d
mov	byte ptr [rsp + 0x28], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x28]
mov	r11d, dword ptr [rsp + 0xc0]
cmp	eax, -1
mov	eax, 0
mov	r10, qword ptr [rsp + 0xc8]
mov	r9, qword ptr [rsp + 0x38]
cmove	rbx, rax
cmovne	r13d, eax
jmp	0x14005832f
jmp	0x14005832f
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
mov	qword ptr [rsp + 0xc8], r10
mov	dword ptr [rsp + 0xc0], r11d
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r11d, dword ptr [rsp + 0xc0]
mov	r10, qword ptr [rsp + 0xc8]
cmp	eax, -1
mov	r9, qword ptr [rsp + 0x28]
je	0x1400585bb
je	0x1400585bb
mov	edx, eax
movzx	r13d, al
jmp	0x14005835d
jmp	0x14005835d
mov	r13d, 0xff
mov	edx, 0xffffffff
xor	ebx, ebx
jmp	0x14005835d
jmp	0x14005835d
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x138
movups	xmmword ptr [rsp + 0x110], xmm6
movups	xmmword ptr [rsp + 0x120], xmm7
mov	r12, qword ptr [rsp + 0x1a0]
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [r9 + 8]
mov	r14, qword ptr [rsp + 0x1a8]
mov	rsi, rcx
lea	rcx, [rip + 0x5ea25]
mov	rdi, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [r12 + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x14005889f
jae	0x14005889f
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x14005889f
je	0x14005889f
xor	r9d, r9d
lea	r8, [rip + 0x68bf0]
lea	rdx, [rip + 0x68539]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x14005889f
je	0x14005889f
mov	rax, qword ptr [rax + 0x10]
mov	rdx, rdi
lea	r9, [rsp + 0x60]
lea	rcx, [rsp + 0x80]
mov	dword ptr [rsp + 0x9c], 0
lea	r8, [rsp + 0x70]
movdqu	xmm2, xmmword ptr [rax + 0x58]
movdqu	xmm1, xmmword ptr [rax + 0x68]
movdqu	xmm0, xmmword ptr [rax + 0x78]
movdqu	xmm6, xmmword ptr [rax + 0x88]
movdqu	xmm5, xmmword ptr [rax + 0x98]
movdqu	xmm4, xmmword ptr [rax + 0xa8]
movdqu	xmm3, xmmword ptr [rax + 0xb8]
lea	rax, [rsp + 0x9c]
mov	qword ptr [rsp + 0x38], r12
movdqu	xmm7, xmm6
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xa0]
shufpd	xmm7, xmm5, 1
shufpd	xmm5, xmm4, 1
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x98]
shufpd	xmm4, xmm3, 1
shufpd	xmm3, xmm2, 1
mov	qword ptr [rsp + 0x20], rax
shufpd	xmm2, xmm1, 1
shufpd	xmm1, xmm0, 1
shufpd	xmm0, xmm6, 1
mov	qword ptr [rsp + 0x30], 7
mov	qword ptr [rsp + 0x78], rbx
mov	qword ptr [rsp + 0x70], r15
mov	qword ptr [rsp + 0x60], rbp
mov	qword ptr [rsp + 0x68], r13
movups	xmmword ptr [rsp + 0xa0], xmm7
movups	xmmword ptr [rsp + 0xb0], xmm5
movups	xmmword ptr [rsp + 0xc0], xmm4
movups	xmmword ptr [rsp + 0xd0], xmm3
movups	xmmword ptr [rsp + 0xe0], xmm2
movups	xmmword ptr [rsp + 0xf0], xmm1
movups	xmmword ptr [rsp + 0x100], xmm0
call	0x14005b1a0
call	0x14005b1a0
mov	rax, qword ptr [rsp + 0x88]
movabs	rcx, 0xffffffff00000000
mov	rdi, qword ptr [rsp + 0x80]
and	rbx, rcx
mov	ecx, dword ptr [rsp + 0x9c]
mov	edx, eax
mov	qword ptr [rsp + 0x80], rdi
or	rbx, rdx
mov	qword ptr [rsp + 0x88], rax
mov	rdx, rdi
test	ecx, ecx
je	0x140058820
je	0x140058820
or	dword ptr [r14], 4
cmp	eax, -1
sete	r12b
test	rdi, rdi
setne	al
and	al, r12b
mov	r15d, eax
jne	0x140058840
jne	0x140058840
cmp	r13d, -1
sete	al
test	rbp, rbp
je	0x1400587e2
je	0x1400587e2
test	al, al
jne	0x140058870
jne	0x140058870
cmp	al, r12b
jne	0x1400587eb
jne	0x1400587eb
or	dword ptr [r14], 2
mov	qword ptr [rsi], rdx
mov	rax, rsi
mov	qword ptr [rsi + 8], rbx
movups	xmm6, xmmword ptr [rsp + 0x110]
movups	xmm7, xmmword ptr [rsp + 0x120]
add	rsp, 0x138
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x1b0]
mov	r8d, dword ptr [rsp + 0x98]
mov	dword ptr [rcx + 0x18], r8d
jmp	0x1400587b9
jmp	0x1400587b9
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rdi + 0x18]
xor	r12d, r12d
cmp	qword ptr [rdi + 0x10], rax
jb	0x1400587ce
jb	0x1400587ce
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, 0
cmp	eax, -1
cmove	r12d, r15d
cmovne	rdx, rdi
jmp	0x1400587ce
jmp	0x1400587ce
nop	dword ptr [rax + rax]
mov	rdi, qword ptr [rbp + 0x18]
xor	eax, eax
cmp	qword ptr [rbp + 0x10], rdi
jb	0x1400587e2
jb	0x1400587e2
mov	rax, qword ptr [rbp]
mov	qword ptr [rsp + 0x58], rdx
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rdx, qword ptr [rsp + 0x58]
cmp	eax, -1
sete	al
jmp	0x1400587e2
jmp	0x1400587e2
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
lea	rbp, [rsp + 0x90]
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	rsi, qword ptr [rbp + 0x80]
mov	qword ptr [rbp + 0x50], rcx
mov	rcx, qword ptr [rip + 0x65fe9]
movups	xmmword ptr [rbp - 0x10], xmm0
movups	xmmword ptr [rbp - 0x20], xmm1
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp + 0x88]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rbx, qword ptr [rax + rdx*8]
test	rbx, rbx
je	0x140059153
je	0x140059153
mov	rax, rsi
shl	rax, 4
call	0x14000c150
call	0x14000c150
sub	rsp, rax
lea	rax, [rbp - 0x10]
lea	rdx, [rbp - 0x20]
mov	rcx, rax
mov	qword ptr [rbp - 0x68], rdx
lea	r12, [rsp + 0x20]
mov	qword ptr [rbp - 0x58], rax
call	0x140020830
call	0x140020830
test	al, al
je	0x14005896d
je	0x14005896d
mov	rax, qword ptr [rbp + 0x90]
or	dword ptr [rax], 4
mov	rax, qword ptr [rbp + 0x50]
movdqu	xmm2, xmmword ptr [rbp - 0x10]
movups	xmmword ptr [rax], xmm2
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
mov	rcx, qword ptr [rbp - 0x58]
call	0x1400208f0
call	0x1400208f0
mov	rcx, rbx
movsx	r13d, al
mov	rax, qword ptr [rbx]
mov	edx, r13d
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	edx, r13d
mov	rcx, rbx
mov	edi, eax
mov	rax, qword ptr [rbx]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	r14d, eax
test	rsi, rsi
je	0x140058946
je	0x140058946
lea	rax, [r12 + rsi*8]
xor	r8d, r8d
mov	byte ptr [rbp - 0x28], r14b
mov	r13, qword ptr [rbp + 0x78]
mov	r14, rbx
mov	qword ptr [rbp - 0x38], rax
xor	r15d, r15d
mov	rbx, r8
mov	qword ptr [rbp - 0x30], r12
jmp	0x1400589df
jmp	0x1400589df
nop	
mov	rax, qword ptr [r13 + rbx*8]
mov	rcx, r14
movsx	edx, byte ptr [rax]
mov	rax, qword ptr [r14]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
cmp	byte ptr [rbp - 0x28], al
je	0x1400589f5
je	0x1400589f5
add	rbx, 1
cmp	rsi, rbx
je	0x140058a24
je	0x140058a24
mov	rax, qword ptr [r13 + rbx*8]
mov	rcx, r14
movsx	edx, byte ptr [rax]
mov	rax, qword ptr [r14]
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	dil, al
jne	0x1400589c0
jne	0x1400589c0
mov	rcx, qword ptr [r13 + rbx*8]
lea	r12, [r15*8]
call	0x140015a08
call	0x140015a08
mov	rdx, qword ptr [rbp - 0x38]
mov	qword ptr [rdx + r15*8], rax
mov	rax, qword ptr [rbp - 0x30]
add	r15, 1
mov	qword ptr [rax + r12], rbx
add	rbx, 1
cmp	rsi, rbx
jne	0x1400589df
jne	0x1400589df
mov	r8, rbx
mov	r12, qword ptr [rbp - 0x30]
mov	rbx, r14
cmp	r15, 1
jbe	0x140059158
jbe	0x140059158
mov	rax, qword ptr [rbp - 0x38]
lea	rdi, [r15*8]
mov	qword ptr [rbp - 0x60], r8
mov	r13, r14
mov	qword ptr [rbp - 0x28], 0
mov	r11, qword ptr [rax]
add	rax, 8
mov	qword ptr [rbp - 0x48], rdi
mov	qword ptr [rbp - 0x50], rax
mov	rbx, r11
nop	dword ptr [rax]
mov	rsi, qword ptr [rbp - 0x38]
mov	rdx, qword ptr [rbp - 0x48]
mov	rdi, qword ptr [rbp - 0x50]
lea	rcx, [rsi + rdx]
mov	rsi, rbx
mov	rdx, rcx
mov	rax, rdi
sub	rdx, rdi
and	edx, 8
je	0x140058aa8
je	0x140058aa8
mov	rax, qword ptr [rbp - 0x50]
mov	rsi, qword ptr [rax]
mov	rax, qword ptr [rbp - 0x38]
cmp	rbx, rsi
cmovbe	rsi, rbx
add	rax, 0x10
cmp	rcx, rax
je	0x140058ac6
je	0x140058ac6
nop	dword ptr [rax]
mov	rdx, qword ptr [rax]
cmp	rsi, rdx
cmova	rsi, rdx
mov	rdx, qword ptr [rax + 8]
cmp	rsi, rdx
cmova	rsi, rdx
add	rax, 0x10
cmp	rcx, rax
jne	0x140058aa8
jne	0x140058aa8
mov	rcx, qword ptr [rbp - 0x10]
add	qword ptr [rbp - 0x28], 1
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140058df0
jae	0x140058df0
add	rax, 1
mov	dword ptr [rbp - 8], 0xffffffff
mov	qword ptr [rcx + 0x10], rax
cmp	qword ptr [rbp - 0x28], rsi
je	0x140058e07
je	0x140058e07
cmp	qword ptr [rbp - 0x28], rsi
jae	0x140058c78
jae	0x140058c78
mov	esi, dword ptr [rbp - 8]
mov	rcx, qword ptr [rbp - 0x10]
cmp	esi, -1
sete	dl
test	rcx, rcx
setne	bl
and	bl, dl
jne	0x140058dd8
jne	0x140058dd8
mov	ebx, edx
mov	rcx, qword ptr [rbp - 0x20]
cmp	dword ptr [rbp - 0x18], -1
sete	al
test	rcx, rcx
setne	dil
and	dil, al
jne	0x140058c60
jne	0x140058c60
cmp	bl, al
je	0x140058c78
je	0x140058c78
mov	rdi, qword ptr [rbp - 0x10]
test	rdi, rdi
je	0x140058b51
je	0x140058b51
test	dl, dl
jne	0x140058c20
jne	0x140058c20
mov	edx, esi
mov	rax, qword ptr [r13]
movsx	edx, dl
mov	rcx, r13
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	byte ptr [rbp - 0x30], al
mov	rax, qword ptr [r13]
movsx	edx, sil
mov	rcx, r13
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
test	r15, r15
je	0x140058946
je	0x140058946
mov	byte ptr [rbp - 0x39], al
xor	esi, esi
mov	rdi, r15
mov	r14, r13
jmp	0x140058bcb
jmp	0x140058bcb
nop	word ptr [rax + rax]
mov	rax, qword ptr [r14]
movsx	edx, byte ptr [r13]
mov	rcx, r14
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
cmp	byte ptr [rbp - 0x39], al
je	0x140058bf9
je	0x140058bf9
sub	rdi, 1
mov	rcx, qword ptr [rbp - 0x38]
lea	rax, [rdi*8]
mov	qword ptr [rbp - 0x48], rax
mov	rax, qword ptr [r12 + rdi*8]
mov	qword ptr [r15], rax
mov	rax, qword ptr [rcx + rdi*8]
mov	qword ptr [rcx + rbx], rax
cmp	rsi, rdi
jae	0x140058c02
jae	0x140058c02
lea	rbx, [rsi*8]
mov	rcx, qword ptr [rbp + 0x78]
mov	r13, qword ptr [rbp - 0x28]
lea	r15, [r12 + rbx]
mov	rax, qword ptr [r15]
add	r13, qword ptr [rcx + rax*8]
mov	rax, qword ptr [r14]
mov	rcx, r14
movsx	edx, byte ptr [r13]
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	al, byte ptr [rbp - 0x30]
jne	0x140058b90
jne	0x140058b90
add	rsi, 1
cmp	rsi, rdi
jb	0x140058bcb
jb	0x140058bcb
mov	r15, rdi
mov	r13, r14
cmp	rdi, 1
jbe	0x140058c78
jbe	0x140058c78
mov	rax, qword ptr [rbp - 0x38]
mov	rbx, qword ptr [rax]
jmp	0x140058a68
jmp	0x140058a68
nop	word ptr [rax + rax]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x1400590a5
jae	0x1400590a5
movzx	edx, byte ptr [rax]
mov	rax, qword ptr [r13]
movsx	edx, dl
mov	rcx, r13
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	byte ptr [rbp - 0x30], al
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140059084
jae	0x140059084
movzx	esi, byte ptr [rax]
jmp	0x140058b63
jmp	0x140058b63
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x18]
cmp	qword ptr [rcx + 0x10], rax
jae	0x140058fd3
jae	0x140058fd3
xor	eax, eax
cmp	bl, al
jne	0x140058b40
jne	0x140058b40
mov	rbx, r13
cmp	r15, 1
jne	0x140058946
jne	0x140058946
mov	rcx, qword ptr [rbp - 0x10]
call	0x140091a00
call	0x140091a00
mov	rsi, qword ptr [rbp - 0x28]
mov	dword ptr [rbp - 8], 0xffffffff
add	rsi, 1
mov	rax, qword ptr [r12]
mov	rdi, qword ptr [rbp + 0x78]
mov	rdi, qword ptr [rdi + rax*8]
mov	qword ptr [rbp - 0x28], rdi
mov	rdi, qword ptr [rbp - 0x38]
mov	r10, qword ptr [rdi]
cmp	rsi, r10
jae	0x14005904d
jae	0x14005904d
mov	r15, qword ptr [rbp - 0x10]
cmp	dword ptr [rbp - 0x18], -1
mov	qword ptr [rbp - 0x30], r10
mov	qword ptr [rbp - 0x38], rax
mov	edi, dword ptr [rbp - 8]
sete	r14b
mov	rdx, r15
mov	r15, rbx
mov	rbx, rdx
nop	dword ptr [rax]
cmp	edi, -1
sete	r12b
test	rbx, rbx
setne	al
and	al, r12b
mov	edx, eax
jne	0x140059016
jne	0x140059016
mov	edx, r12d
mov	rcx, qword ptr [rbp - 0x20]
test	rcx, rcx
setne	al
and	al, r14b
mov	r13d, eax
jne	0x14005902b
jne	0x14005902b
mov	r13d, r14d
cmp	dl, r13b
je	0x140059045
je	0x140059045
mov	rax, qword ptr [rbp - 0x28]
mov	rcx, r15
movsx	edx, byte ptr [rax + rsi]
mov	rax, qword ptr [r15]
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rbx, qword ptr [rbp - 0x10]
mov	r13d, eax
test	rbx, rbx
je	0x140058d43
je	0x140058d43
test	r12b, r12b
jne	0x140059000
jne	0x140059000
mov	edx, edi
mov	rax, qword ptr [r15]
movsx	edx, dl
mov	rcx, r15
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	al, r13b
je	0x140058d92
je	0x140058d92
mov	rax, qword ptr [rbp - 0x28]
mov	rcx, r15
movsx	edx, byte ptr [rax + rsi]
mov	rax, qword ptr [r15]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	r13d, eax
test	rbx, rbx
je	0x140058d78
je	0x140058d78
test	r12b, r12b
jne	0x140059060
jne	0x140059060
mov	rax, qword ptr [r15]
movsx	edx, dil
mov	rcx, r15
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
cmp	al, r13b
jne	0x140059045
jne	0x140059045
mov	rbx, qword ptr [rbp - 0x10]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140059076
jae	0x140059076
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
mov	dword ptr [rbp - 8], 0xffffffff
add	rsi, 1
mov	edi, 0xffffffff
cmp	qword ptr [rbp - 0x30], rsi
jne	0x140058ce0
jne	0x140058ce0
mov	rax, qword ptr [rbp - 0x38]
mov	rdx, qword ptr [rbp + 0x70]
mov	dword ptr [rdx], eax
jmp	0x140058950
jmp	0x140058950
nop	dword ptr [rax]
mov	rax, qword ptr [rcx + 0x18]
cmp	qword ptr [rcx + 0x10], rax
jae	0x140058fb0
jae	0x140058fb0
xor	ebx, ebx
jmp	0x140058b1d
jmp	0x140058b1d
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	dword ptr [rbp - 8], 0xffffffff
cmp	qword ptr [rbp - 0x28], rsi
jne	0x140058af6
jne	0x140058af6
mov	rdi, qword ptr [rbp - 0x58]
mov	rdx, qword ptr [rbp - 0x68]
mov	rcx, rdi
call	0x140020830
call	0x140020830
test	al, al
mov	byte ptr [rbp - 0x70], al
jne	0x140058f93
jne	0x140058f93
mov	rcx, rdi
call	0x1400208f0
call	0x1400208f0
mov	rcx, r13
movsx	edx, al
mov	rax, qword ptr [r13]
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rcx, rdi
xor	edi, edi
mov	byte ptr [rbp - 0x30], al
call	0x1400208f0
call	0x1400208f0
mov	rcx, r13
movsx	edx, al
mov	rax, qword ptr [r13]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
movzx	r10d, byte ptr [rbp - 0x70]
mov	r14, qword ptr [rbp - 0x38]
mov	qword ptr [rbp - 0x70], rbx
mov	byte ptr [rbp - 0x39], al
mov	rbx, r12
mov	r12, r13
mov	r13, rdi
mov	byte ptr [rbp - 0x3a], r10b
nop	
mov	rax, qword ptr [rbx + r13*8]
mov	rdi, qword ptr [rbp + 0x78]
mov	rax, qword ptr [rdi + rax*8]
cmp	rsi, qword ptr [r14 + r13*8]
jae	0x140058eb2
jae	0x140058eb2
lea	rdi, [rax + rsi]
mov	rax, qword ptr [r12]
mov	rcx, r12
movsx	edx, byte ptr [rdi]
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	byte ptr [rbp - 0x30], al
je	0x140058f9b
je	0x140058f9b
mov	rax, qword ptr [r12]
movsx	edx, byte ptr [rdi]
mov	rcx, r12
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
cmp	byte ptr [rbp - 0x39], al
je	0x140058f9b
je	0x140058f9b
add	r13, 1
cmp	r13, r15
jne	0x140058e70
jne	0x140058e70
mov	r13, r12
movzx	r10d, byte ptr [rbp - 0x3a]
mov	r12, rbx
mov	rbx, qword ptr [rbp - 0x70]
mov	rcx, qword ptr [rbp - 0x38]
mov	r8, qword ptr [rbp - 0x48]
xor	eax, eax
jmp	0x140058eed
jmp	0x140058eed
nop	word ptr cs:[rax + rax]
add	rax, 1
cmp	rax, r15
jae	0x140058f19
jae	0x140058f19
mov	rbx, qword ptr [rcx + rax*8]
cmp	rbx, rsi
sete	dl
cmp	dl, r10b
jne	0x140058ee0
jne	0x140058ee0
sub	r15, 1
mov	rdx, qword ptr [r12 + r15*8]
lea	r8, [r15*8]
mov	qword ptr [r12 + rax*8], rdx
mov	rdx, qword ptr [rcx + r15*8]
mov	qword ptr [rcx + rax*8], rdx
cmp	rax, r15
jb	0x140058ee9
jb	0x140058ee9
mov	qword ptr [rbp - 0x48], r8
test	r10b, r10b
je	0x140059165
je	0x140059165
mov	rbx, qword ptr [rbp - 0x38]
mov	rsi, qword ptr [rbx]
cmp	r15, 1
jbe	0x140058af6
jbe	0x140058af6
mov	rdi, qword ptr [rbp - 0x50]
lea	rcx, [rbx + r8]
mov	rdx, rcx
sub	rdx, rdi
mov	rax, rdi
and	edx, 8
je	0x140058f70
je	0x140058f70
mov	rax, qword ptr [rbp - 0x50]
mov	rax, qword ptr [rax]
cmp	rsi, rax
cmova	rsi, rax
mov	rax, qword ptr [rbp - 0x38]
add	rax, 0x10
cmp	rcx, rax
je	0x140058af6
je	0x140058af6
nop	dword ptr [rax]
mov	rdx, qword ptr [rax]
cmp	rsi, rdx
cmova	rsi, rdx
mov	rdx, qword ptr [rax + 8]
cmp	rsi, rdx
cmova	rsi, rdx
add	rax, 0x10
cmp	rcx, rax
jne	0x140058f70
jne	0x140058f70
jmp	0x140058af6
jmp	0x140058af6
xor	r10d, r10d
jmp	0x140058eca
jmp	0x140058eca
mov	r13, r12
mov	r10d, 1
mov	r12, rbx
mov	rbx, qword ptr [rbp - 0x70]
jmp	0x140058eca
jmp	0x140058eca
mov	rax, qword ptr [rcx]
mov	byte ptr [rbp - 0x30], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rbp - 0x30]
cmp	eax, -1
jne	0x140058de6
jne	0x140058de6
mov	qword ptr [rbp - 0x10], 0
jmp	0x140058b1d
jmp	0x140058b1d
mov	rax, qword ptr [rcx]
mov	byte ptr [rbp - 0x30], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rbp - 0x30]
cmp	eax, -1
jne	0x140058c6e
jne	0x140058c6e
mov	qword ptr [rbp - 0x20], 0
mov	eax, edi
jmp	0x140058b38
jmp	0x140058b38
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14005910f
jae	0x14005910f
movzx	edx, byte ptr [rax]
jmp	0x140058d45
jmp	0x140058d45
mov	rax, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 0x10], rax
jae	0x1400590c6
jae	0x1400590c6
xor	edx, edx
jmp	0x140058cfb
jmp	0x140058cfb
mov	rax, qword ptr [rcx + 0x18]
cmp	qword ptr [rcx + 0x10], rax
jae	0x1400590ec
jae	0x1400590ec
xor	r13d, r13d
cmp	dl, r13b
jne	0x140058d1d
jne	0x140058d1d
mov	r10, qword ptr [rbp - 0x30]
mov	rax, qword ptr [rbp - 0x38]
cmp	r10, rsi
jne	0x140058946
jne	0x140058946
jmp	0x140058dc6
jmp	0x140058dc6
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140059132
jae	0x140059132
movzx	edi, byte ptr [rax]
jmp	0x140058d78
jmp	0x140058d78
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140058da8
jmp	0x140058da8
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	esi, eax
cmp	eax, -1
jne	0x140058b63
jne	0x140058b63
mov	qword ptr [rbp - 0x10], 0
jmp	0x140058b63
jmp	0x140058b63
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, eax
cmp	eax, -1
jne	0x140058c31
jne	0x140058c31
mov	qword ptr [rbp - 0x10], 0
jmp	0x140058b53
jmp	0x140058b53
mov	rax, qword ptr [rbx]
mov	byte ptr [rbp - 0x39], dl
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rbp - 0x39]
cmp	eax, -1
jne	0x140059024
jne	0x140059024
mov	qword ptr [rbp - 0x10], 0
jmp	0x140058cfb
jmp	0x140058cfb
mov	rax, qword ptr [rcx]
mov	byte ptr [rbp - 0x39], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rbp - 0x39]
cmp	eax, -1
jne	0x140059039
jne	0x140059039
mov	qword ptr [rbp - 0x20], 0
jmp	0x140058d14
jmp	0x140058d14
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, eax
cmp	eax, -1
jne	0x140058d45
jne	0x140058d45
mov	qword ptr [rbp - 0x10], 0
xor	ebx, ebx
jmp	0x140058d45
jmp	0x140058d45
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edi, eax
cmp	eax, -1
jne	0x140058d78
jne	0x140058d78
mov	qword ptr [rbp - 0x10], 0
jmp	0x140058d78
jmp	0x140058d78
call	0x1400b3a30
call	0x1400b3a30
mov	qword ptr [rbp - 0x28], 0
jmp	0x140058c7b
jmp	0x140058c7b
mov	r8, qword ptr [rbp - 0x60]
mov	rbx, r13
cmp	r15, 2
je	0x140059188
je	0x140059188
cmp	r15, 1
je	0x140058c9d
je	0x140058c9d
jmp	0x140058946
jmp	0x140058946
nop	dword ptr [rax]
test	r8b, 1
jne	0x140058946
jne	0x140058946
mov	rax, qword ptr [r12]
shr	r8, 1
mov	rdx, qword ptr [r12 + 8]
mov	r15, r8
cmp	rax, r8
jae	0x1400591b7
jae	0x1400591b7
add	r15, rax
cmp	r15, rdx
jne	0x140058946
jne	0x140058946
jmp	0x140058ca1
jmp	0x140058ca1
sub	rax, r8
cmp	rax, rdx
jne	0x140058946
jne	0x140058946
mov	rdi, qword ptr [rbp - 0x38]
mov	qword ptr [r12], rax
mov	rax, qword ptr [rdi + 8]
mov	qword ptr [rdi], rax
mov	rax, qword ptr [r12]
jmp	0x140058ca1
jmp	0x140058ca1
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x1c8
movups	xmmword ptr [rsp + 0x160], xmm6
movups	xmmword ptr [rsp + 0x170], xmm7
movups	xmmword ptr [rsp + 0x180], xmm8
movups	xmmword ptr [rsp + 0x190], xmm9
movups	xmmword ptr [rsp + 0x1a0], xmm10
movups	xmmword ptr [rsp + 0x1b0], xmm11
mov	r12, qword ptr [rsp + 0x230]
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [r9 + 8]
mov	r14, qword ptr [rsp + 0x238]
mov	rsi, rcx
lea	rcx, [rip + 0x5de01]
mov	rdi, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [r12 + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x14005952f
jae	0x14005952f
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x14005952f
je	0x14005952f
xor	r9d, r9d
lea	r8, [rip + 0x67fcc]
lea	rdx, [rip + 0x67915]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x14005952f
je	0x14005952f
mov	rax, qword ptr [rax + 0x10]
mov	rdx, rdi
mov	dword ptr [rsp + 0x9c], 0
lea	rcx, [rsp + 0x80]
lea	r9, [rsp + 0x60]
lea	r8, [rsp + 0x70]
movdqu	xmm5, xmmword ptr [rax + 0xc8]
movdqu	xmm4, xmmword ptr [rax + 0xd8]
movdqu	xmm3, xmmword ptr [rax + 0xe8]
movdqu	xmm2, xmmword ptr [rax + 0xf8]
movdqu	xmm1, xmmword ptr [rax + 0x108]
movdqu	xmm0, xmmword ptr [rax + 0x118]
movups	xmmword ptr [rsp + 0x100], xmm5
movdqu	xmm7, xmmword ptr [rax + 0x168]
movdqu	xmm6, xmmword ptr [rax + 0x178]
movups	xmmword ptr [rsp + 0x110], xmm4
movdqu	xmm10, xmmword ptr [rax + 0x138]
movdqu	xmm9, xmmword ptr [rax + 0x148]
movups	xmmword ptr [rsp + 0x120], xmm3
movdqu	xmm8, xmmword ptr [rax + 0x158]
movups	xmmword ptr [rsp + 0x130], xmm2
movdqu	xmm11, xmmword ptr [rax + 0x128]
lea	rax, [rsp + 0x9c]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xa0]
mov	qword ptr [rsp + 0x78], rbx
movups	xmmword ptr [rsp + 0x140], xmm1
movups	xmmword ptr [rsp + 0x150], xmm0
mov	qword ptr [rsp + 0x70], r15
mov	qword ptr [rsp + 0x60], rbp
mov	qword ptr [rsp + 0x68], r13
mov	qword ptr [rsp + 0x38], r12
movups	xmmword ptr [rsp + 0xa0], xmm11
movups	xmmword ptr [rsp + 0xb0], xmm10
movups	xmmword ptr [rsp + 0xc0], xmm9
movups	xmmword ptr [rsp + 0xd0], xmm8
movups	xmmword ptr [rsp + 0xe0], xmm7
movups	xmmword ptr [rsp + 0xf0], xmm6
mov	qword ptr [rsp + 0x30], 0xc
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x98]
mov	qword ptr [rsp + 0x20], rax
call	0x14005b1a0
call	0x14005b1a0
mov	rax, qword ptr [rsp + 0x88]
movabs	rcx, 0xffffffff00000000
mov	rdi, qword ptr [rsp + 0x80]
and	rbx, rcx
mov	ecx, dword ptr [rsp + 0x9c]
mov	edx, eax
mov	qword ptr [rsp + 0x80], rdi
or	rbx, rdx
mov	qword ptr [rsp + 0x88], rax
mov	rdx, rdi
test	ecx, ecx
je	0x1400594a8
je	0x1400594a8
or	dword ptr [r14], 4
cmp	eax, -1
sete	r12b
test	rdi, rdi
setne	al
and	al, r12b
mov	r15d, eax
jne	0x1400594c8
jne	0x1400594c8
cmp	r13d, -1
sete	al
test	rbp, rbp
je	0x140059448
je	0x140059448
test	al, al
jne	0x140059500
jne	0x140059500
cmp	al, r12b
jne	0x140059451
jne	0x140059451
or	dword ptr [r14], 2
mov	qword ptr [rsi], rdx
mov	rax, rsi
mov	qword ptr [rsi + 8], rbx
movups	xmm6, xmmword ptr [rsp + 0x160]
movups	xmm7, xmmword ptr [rsp + 0x170]
movups	xmm8, xmmword ptr [rsp + 0x180]
movups	xmm9, xmmword ptr [rsp + 0x190]
movups	xmm10, xmmword ptr [rsp + 0x1a0]
movups	xmm11, xmmword ptr [rsp + 0x1b0]
add	rsp, 0x1c8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x240]
mov	r8d, dword ptr [rsp + 0x98]
mov	dword ptr [rcx + 0x10], r8d
jmp	0x14005941b
jmp	0x14005941b
nop	dword ptr [rax]
mov	rax, qword ptr [rdi + 0x18]
xor	r12d, r12d
cmp	qword ptr [rdi + 0x10], rax
jb	0x140059434
jb	0x140059434
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, 0
cmp	eax, -1
cmove	r12d, r15d
cmovne	rdx, rdi
jmp	0x140059434
jmp	0x140059434
nop	word ptr [rax + rax]
mov	rdi, qword ptr [rbp + 0x18]
xor	eax, eax
cmp	qword ptr [rbp + 0x10], rdi
jb	0x140059448
jb	0x140059448
mov	rax, qword ptr [rbp]
mov	qword ptr [rsp + 0x58], rdx
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rdx, qword ptr [rsp + 0x58]
cmp	eax, -1
sete	al
jmp	0x140059448
jmp	0x140059448
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
add	rsp, -0x80
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
lea	rax, [rsp + 0x74]
mov	rbx, rcx
lea	r9, [rsp + 0x50]
mov	qword ptr [rsp + 0x74], 0
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0xc8]
lea	r8, [rsp + 0x60]
mov	dword ptr [rsp + 0x7c], 0
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xb8]
mov	qword ptr [rsp + 0x68], r11
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0xb0]
movups	xmmword ptr [rsp + 0x50], xmm0
mov	qword ptr [rsp + 0x20], rax
call	0x1400595d0
call	0x1400595d0
mov	rax, rbx
sub	rsp, -0x80
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x1c8
movups	xmmword ptr [rsp + 0x1b0], xmm6
movdqu	xmm1, xmmword ptr [r8]
movdqu	xmm2, xmmword ptr [r9]
mov	r14, qword ptr [rsp + 0x238]
mov	rbp, rcx
lea	rcx, [rip + 0x5da49]
mov	qword ptr [rsp + 0x218], rdx
movups	xmmword ptr [rsp + 0xd0], xmm1
movups	xmmword ptr [rsp + 0xc0], xmm2
call	0x140022a70
call	0x140022a70
mov	rbx, qword ptr [rsp + 0x230]
mov	rdx, qword ptr [rbx + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x14005b12a
jae	0x14005b12a
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x14005b12a
je	0x14005b12a
xor	r9d, r9d
lea	r8, [rip + 0x67bf8]
lea	rdx, [rip + 0x67541]
call	0x1400b35e0
call	0x1400b35e0
mov	qword ptr [rsp + 0x70], rax
test	rax, rax
je	0x14005b12a
je	0x14005b12a
mov	rcx, qword ptr [rip + 0x65257]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x230]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r15, qword ptr [rax + rdx*8]
test	r15, r15
je	0x14005b12a
je	0x14005b12a
mov	rcx, qword ptr [rsp + 0x248]
xor	ebx, ebx
xor	edi, edi
lea	r12, [rsp + 0xd0]
call	0x140015a08
call	0x140015a08
mov	qword ptr [rsp + 0x238], r14
mov	r10, rax
lea	rax, [rsp + 0xc0]
mov	dword ptr [rsp + 0xe8], 0
mov	qword ptr [rsp + 0x58], rax
lea	rax, [rip - 0x37204]
mov	r13, r10
mov	qword ptr [rsp + 0x60], rax
mov	qword ptr [rsp + 0x210], rbp
mov	rbp, qword ptr [rsp + 0x248]
mov	rdx, qword ptr [rsp + 0x58]
mov	rcx, r12
call	0x140020830
call	0x140020830
cmp	rdi, r13
setb	r9b
xor	eax, 1
and	r9b, al
je	0x1400599c0
je	0x1400599c0
test	ebx, ebx
jne	0x140059a30
jne	0x140059a30
lea	r14, [rbp + rdi]
movzx	esi, byte ptr [r14]
movzx	edx, byte ptr [r15 + rsi + 0x139]
mov	rax, rsi
test	dl, dl
jne	0x140059760
jne	0x140059760
mov	rdx, qword ptr [r15]
mov	rcx, qword ptr [rsp + 0x60]
mov	r11, qword ptr [rdx + 0x40]
cmp	r11, rcx
jne	0x140059a10
jne	0x140059a10
test	al, al
je	0x140059769
je	0x140059769
mov	byte ptr [r15 + rsi + 0x139], al
mov	edx, eax
cmp	dl, 0x25
je	0x140059908
je	0x140059908
movzx	ecx, byte ptr [r14]
mov	rax, qword ptr [r15 + 0x30]
test	byte ptr [rax + rcx*2], 0x20
jne	0x140059808
jne	0x140059808
mov	rax, qword ptr [r15]
movsx	edx, cl
mov	rcx, r15
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rcx, r12
mov	esi, eax
call	0x1400208f0
call	0x1400208f0
mov	rcx, r15
movsx	edx, al
mov	rax, qword ptr [r15]
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	sil, al
je	0x1400597e8
je	0x1400597e8
mov	rax, qword ptr [r15]
movsx	edx, byte ptr [r14]
mov	rcx, r15
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rcx, r12
mov	esi, eax
call	0x1400208f0
call	0x1400208f0
mov	rcx, r15
movsx	edx, al
mov	rax, qword ptr [r15]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
cmp	sil, al
je	0x1400597e8
je	0x1400597e8
mov	dword ptr [rsp + 0xe8], 4
mov	ebx, 4
add	rdi, 1
jmp	0x1400596fc
jmp	0x1400596fc
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0xd0]
call	0x140091a00
call	0x140091a00
mov	dword ptr [rsp + 0xd8], 0xffffffff
jmp	0x1400597da
jmp	0x1400597da
nop	word ptr [rax + rax]
mov	r8d, dword ptr [rsp + 0xd8]
cmp	dword ptr [rsp + 0xc8], -1
mov	rsi, qword ptr [rsp + 0xd0]
sete	r14b
cmp	r8d, -1
sete	r10b
test	rsi, rsi
je	0x140059836
je	0x140059836
test	r10b, r10b
jne	0x1400598a3
jne	0x1400598a3
mov	r11d, r10d
mov	rcx, qword ptr [rsp + 0xc0]
test	rcx, rcx
setne	sil
and	sil, r14b
jne	0x1400598c8
jne	0x1400598c8
mov	esi, r14d
cmp	r10b, sil
je	0x1400597da
je	0x1400597da
mov	rsi, qword ptr [rsp + 0xd0]
test	rsi, rsi
je	0x140059867
je	0x140059867
test	r11b, r11b
jne	0x1400598e0
jne	0x1400598e0
mov	rax, qword ptr [r15 + 0x30]
movzx	r8d, r8b
test	byte ptr [rax + r8*2], 0x20
je	0x1400597da
je	0x1400597da
mov	rsi, qword ptr [rsp + 0xd0]
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x140059958
jae	0x140059958
mov	dword ptr [rsp + 0xd8], 0xffffffff
add	rax, 1
mov	qword ptr [rsi + 0x10], rax
mov	rax, qword ptr [rsi + 0x18]
cmp	qword ptr [rsi + 0x10], rax
jae	0x140059985
jae	0x140059985
mov	r11d, r9d
mov	r8d, 0xffffffff
xor	r10d, r10d
jmp	0x140059839
jmp	0x140059839
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x18]
cmp	qword ptr [rcx + 0x10], rax
jae	0x140059a90
jae	0x140059a90
xor	esi, esi
jmp	0x140059850
jmp	0x140059850
nop	dword ptr [rax]
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x140059af0
jae	0x140059af0
movzx	r8d, byte ptr [rax]
mov	rcx, qword ptr [r15 + 0x30]
test	byte ptr [rcx + r8*2], 0x20
jne	0x140059890
jne	0x140059890
jmp	0x1400597da
jmp	0x1400597da
nop	word ptr [rax + rax]
movsx	edx, byte ptr [rbp + rdi + 1]
xor	r8d, r8d
mov	rcx, r15
lea	rsi, [rdi + 1]
call	0x140022410
call	0x140022410
mov	dword ptr [rsp + 0xec], 0
cmp	al, 0x45
je	0x140059a48
je	0x140059a48
cmp	al, 0x4f
je	0x140059a48
je	0x140059a48
sub	eax, 0x25
cmp	al, 0x54
ja	0x140059a70
ja	0x140059a70
lea	rdx, [rip + 0x607af]
movzx	eax, al
movsxd	rax, dword ptr [rdx + rax*4]
add	rax, rdx
jmp	rax
jmp	rax
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
mov	byte ptr [rsp + 0x68], r9b
mov	rcx, rsi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
movzx	r9d, byte ptr [rsp + 0x68]
mov	rax, qword ptr [rsi + 0x18]
mov	dword ptr [rsp + 0xd8], 0xffffffff
cmp	qword ptr [rsi + 0x10], rax
jb	0x1400598b1
jb	0x1400598b1
mov	rax, qword ptr [rsi]
mov	byte ptr [rsp + 0x68], r9b
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r9d, byte ptr [rsp + 0x68]
cmp	eax, -1
mov	r8d, eax
jne	0x1400598b1
jne	0x1400598b1
mov	qword ptr [rsp + 0xd0], 0
mov	r11d, r9d
mov	r10d, r9d
jmp	0x140059839
jmp	0x140059839
nop	dword ptr [rax]
mov	rbp, qword ptr [rsp + 0x210]
mov	r14, qword ptr [rsp + 0x238]
cmp	rdi, r13
jne	0x1400599d9
jne	0x1400599d9
test	ebx, ebx
je	0x1400599dd
je	0x1400599dd
or	dword ptr [r14], 4
movdqu	xmm3, xmmword ptr [rsp + 0xd0]
mov	rax, rbp
movups	xmmword ptr [rbp], xmm3
movups	xmm6, xmmword ptr [rsp + 0x1b0]
add	rsp, 0x1c8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	byte ptr [rsp + 0x68], r9b
movsx	edx, sil
xor	r8d, r8d
mov	rcx, r15
call	r11
call	r11
movzx	r9d, byte ptr [rsp + 0x68]
jmp	0x140059752
jmp	0x140059752
nop	dword ptr [rax]
mov	rbp, qword ptr [rsp + 0x210]
mov	r14, qword ptr [rsp + 0x238]
jmp	0x1400599d9
jmp	0x1400599d9
nop	word ptr [rax + rax]
movsx	edx, byte ptr [rbp + rdi + 2]
xor	r8d, r8d
mov	rcx, r15
lea	rsi, [rdi + 2]
call	0x140022410
call	0x140022410
sub	eax, 0x25
cmp	al, 0x54
jbe	0x140059942
jbe	0x140059942
nop	word ptr [rax + rax]
mov	dword ptr [rsp + 0xe8], 4
mov	ebx, 4
mov	rdi, rsi
jmp	0x1400597da
jmp	0x1400597da
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
mov	byte ptr [rsp + 0x88], r11b
mov	byte ptr [rsp + 0x84], r10b
mov	dword ptr [rsp + 0x78], r8d
mov	byte ptr [rsp + 0x68], r9b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r9d, byte ptr [rsp + 0x68]
mov	r8d, dword ptr [rsp + 0x78]
movzx	r10d, byte ptr [rsp + 0x84]
cmp	eax, -1
movzx	r11d, byte ptr [rsp + 0x88]
jne	0x1400598d6
jne	0x1400598d6
mov	qword ptr [rsp + 0xc0], 0
jmp	0x140059850
jmp	0x140059850
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsi]
mov	byte ptr [rsp + 0x68], r9b
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r9d, byte ptr [rsp + 0x68]
cmp	eax, -1
mov	r8d, eax
jne	0x140059867
jne	0x140059867
mov	qword ptr [rsp + 0xd0], 0
jmp	0x140059867
jmp	0x140059867
mov	rdi, qword ptr [rsp + 0x70]
lea	rbx, [rsp + 0xf0]
mov	rdx, rbx
mov	rcx, rdi
call	0x14001d330
call	0x14001d330
lea	rdx, [rsp + 0x150]
mov	rcx, rdi
call	0x14001d180
call	0x14001d180
lea	rax, [rsp + 0xe8]
mov	qword ptr [rsp + 0x28], rbx
movdqu	xmm6, xmmword ptr [rsp + 0xd0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x230]
lea	rcx, [rsp + 0xb0]
lea	r9, [rsp + 0x90]
mov	rdx, qword ptr [rsp + 0x218]
lea	r8, [rsp + 0xa0]
mov	qword ptr [rsp + 0x30], 0x18
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x38], rax
lea	rax, [rsp + 0xec]
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0xa0], xmm6
movups	xmmword ptr [rsp + 0x90], xmm4
call	0x1400588b0
call	0x1400588b0
mov	rax, qword ptr [rsp + 0xb0]
mov	ebx, dword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0xb0], rax
mov	qword ptr [rsp + 0xd0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0xd8], eax
test	ebx, ebx
jne	0x140059a80
jne	0x140059a80
movsxd	rax, dword ptr [rsp + 0xec]
mov	rdx, rax
imul	rax, rax, 0x2aaaaaab
mov	ecx, edx
sar	ecx, 0x1f
sar	rax, 0x21
sub	eax, ecx
lea	eax, [rax + rax*2]
shl	eax, 2
sub	edx, eax
mov	rax, qword ptr [rsp + 0x240]
mov	dword ptr [rax + 0x10], edx
mov	rax, qword ptr [rsp + 0x250]
or	word ptr [rax], 0x408
jmp	0x140059a80
jmp	0x140059a80
mov	rax, qword ptr [rsp + 0x70]
mov	rdx, qword ptr [rsp + 0x218]
lea	rcx, [rsp + 0xb0]
lea	r9, [rsp + 0x90]
lea	r8, [rsp + 0xa0]
mov	rax, qword ptr [rax + 0x10]
movdqu	xmm5, xmmword ptr [rax + 0x68]
movdqu	xmm4, xmmword ptr [rax + 0x78]
movdqu	xmm3, xmmword ptr [rax + 0x88]
movdqu	xmm2, xmmword ptr [rax + 0x98]
movdqu	xmm1, xmmword ptr [rax + 0xa8]
movdqu	xmm0, xmmword ptr [rax + 0xb8]
movdqu	xmm6, xmmword ptr [rax + 0x58]
lea	rax, [rsp + 0xe8]
mov	qword ptr [rsp + 0x30], 0xe
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x230]
movups	xmmword ptr [rsp + 0x100], xmm5
movdqu	xmm5, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x38], rax
lea	rax, [rsp + 0xf0]
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0xec]
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x110], xmm4
movdqu	xmm4, xmmword ptr [rsp + 0xd0]
movups	xmmword ptr [rsp + 0xf0], xmm6
movups	xmmword ptr [rsp + 0x120], xmm3
movups	xmmword ptr [rsp + 0x130], xmm2
movups	xmmword ptr [rsp + 0x140], xmm1
movups	xmmword ptr [rsp + 0x150], xmm0
movups	xmmword ptr [rsp + 0xa0], xmm4
movups	xmmword ptr [rsp + 0x90], xmm5
call	0x1400588b0
call	0x1400588b0
mov	rax, qword ptr [rsp + 0xb0]
mov	ebx, dword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0xb0], rax
mov	qword ptr [rsp + 0xd0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0xd8], eax
test	ebx, ebx
jne	0x140059a80
jne	0x140059a80
movsxd	rax, dword ptr [rsp + 0xec]
mov	rdx, rax
imul	rax, rax, -0x6db6db6d
mov	ecx, edx
sar	ecx, 0x1f
shr	rax, 0x20
add	eax, edx
sar	eax, 2
sub	eax, ecx
lea	ecx, [rax*8]
sub	ecx, eax
mov	rax, qword ptr [rsp + 0x240]
sub	edx, ecx
mov	dword ptr [rax + 0x18], edx
mov	rax, qword ptr [rsp + 0x250]
or	byte ptr [rax], 2
jmp	0x140059a80
jmp	0x140059a80
mov	rcx, r12
call	0x1400208f0
call	0x1400208f0
mov	rdx, qword ptr [r15 + 0x30]
movzx	eax, al
test	byte ptr [rdx + rax*2], 0x20
jne	0x14005b092
jne	0x14005b092
lea	rax, [rsp + 0xe8]
mov	dword ptr [rsp + 0x30], 0x1f
movdqu	xmm5, xmmword ptr [rsp + 0xd0]
lea	rcx, [rsp + 0xb0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x230]
lea	r9, [rsp + 0x90]
lea	r8, [rsp + 0xa0]
mov	dword ptr [rsp + 0x28], 1
mov	rdx, qword ptr [rsp + 0x218]
movdqu	xmm6, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xec]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0xa0], xmm5
movups	xmmword ptr [rsp + 0x90], xmm6
call	0x140058240
call	0x140058240
mov	rax, qword ptr [rsp + 0xb0]
mov	ebx, dword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0xb0], rax
mov	qword ptr [rsp + 0xd0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0xd8], eax
test	ebx, ebx
jne	0x140059a80
jne	0x140059a80
mov	eax, dword ptr [rsp + 0xec]
mov	rdi, qword ptr [rsp + 0x240]
mov	dword ptr [rdi + 0xc], eax
mov	rax, qword ptr [rsp + 0x250]
or	word ptr [rax], 0x410
jmp	0x140059a80
jmp	0x140059a80
mov	rdi, qword ptr [rsp + 0x58]
jmp	0x140059ee1
jmp	0x140059ee1
nop	dword ptr [rax]
mov	rcx, r12
call	0x1400208f0
call	0x1400208f0
mov	rdx, qword ptr [r15 + 0x30]
movzx	eax, al
test	byte ptr [rdx + rax*2], 0x20
je	0x140059a80
je	0x140059a80
mov	rcx, qword ptr [rsp + 0xd0]
call	0x140091a00
call	0x140091a00
mov	dword ptr [rsp + 0xd8], 0xffffffff
mov	rdx, rdi
mov	rcx, r12
call	0x140020830
call	0x140020830
test	al, al
je	0x140059eb0
je	0x140059eb0
jmp	0x140059a80
jmp	0x140059a80
mov	rax, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rax + 0x10]
movdqu	xmm0, xmmword ptr [rax + 0x40]
movq	rax, xmm0
movups	xmmword ptr [rsp + 0xf0], xmm0
cmp	byte ptr [rax], 0
je	0x140059a80
je	0x140059a80
movhlps	xmm5, xmm0
movq	rax, xmm5
cmp	byte ptr [rax], 0
je	0x140059a80
je	0x140059a80
lea	rax, [rsp + 0xe8]
mov	qword ptr [rsp + 0x30], 2
movdqu	xmm6, xmmword ptr [rsp + 0xd0]
lea	rcx, [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x230]
lea	r9, [rsp + 0x90]
lea	r8, [rsp + 0xa0]
mov	rdx, qword ptr [rsp + 0x218]
movups	xmmword ptr [rsp + 0xa0], xmm6
movdqu	xmm5, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x38], rax
lea	rax, [rsp + 0xf0]
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0xec]
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x90], xmm5
call	0x1400588b0
call	0x1400588b0
mov	rax, qword ptr [rsp + 0xb0]
mov	ebx, dword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0xb0], rax
mov	qword ptr [rsp + 0xd0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0xd8], eax
test	ebx, ebx
jne	0x140059a80
jne	0x140059a80
mov	ecx, dword ptr [rsp + 0xec]
test	ecx, ecx
je	0x140059a80
je	0x140059a80
mov	rax, qword ptr [rsp + 0x250]
or	byte ptr [rax + 1], 1
jmp	0x140059a80
jmp	0x140059a80
nop	dword ptr [rax + rax]
lea	rax, [rsp + 0xe8]
mov	dword ptr [rsp + 0x30], 0x3b
movdqu	xmm5, xmmword ptr [rsp + 0xd0]
lea	rcx, [rsp + 0xb0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x230]
lea	r9, [rsp + 0x90]
lea	r8, [rsp + 0xa0]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x218]
movdqu	xmm6, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xec]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0xa0], xmm5
movups	xmmword ptr [rsp + 0x90], xmm6
call	0x140058240
call	0x140058240
mov	rax, qword ptr [rsp + 0xb0]
mov	ebx, dword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0xb0], rax
mov	qword ptr [rsp + 0xd0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0xd8], eax
test	ebx, ebx
jne	0x140059a80
jne	0x140059a80
mov	eax, dword ptr [rsp + 0xec]
mov	rdi, qword ptr [rsp + 0x240]
mov	dword ptr [rdi + 4], eax
jmp	0x140059a80
jmp	0x140059a80
lea	rax, [rsp + 0xe8]
mov	dword ptr [rsp + 0x30], 0xc
movdqu	xmm0, xmmword ptr [rsp + 0xd0]
lea	rcx, [rsp + 0xb0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x230]
lea	r9, [rsp + 0x90]
lea	r8, [rsp + 0xa0]
mov	dword ptr [rsp + 0x28], 1
mov	rdx, qword ptr [rsp + 0x218]
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xec]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0xa0], xmm0
movups	xmmword ptr [rsp + 0x90], xmm4
call	0x140058240
call	0x140058240
mov	rax, qword ptr [rsp + 0xb0]
mov	ebx, dword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0xb0], rax
mov	qword ptr [rsp + 0xd0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0xd8], eax
test	ebx, ebx
jne	0x140059a80
jne	0x140059a80
movsxd	rax, dword ptr [rsp + 0xec]
mov	rdx, rax
imul	rax, rax, 0x2aaaaaab
mov	ecx, edx
sar	ecx, 0x1f
sar	rax, 0x21
sub	eax, ecx
lea	eax, [rax + rax*2]
shl	eax, 2
sub	edx, eax
mov	rax, qword ptr [rsp + 0x240]
mov	dword ptr [rax + 8], edx
mov	rax, qword ptr [rsp + 0x250]
or	byte ptr [rax], 1
jmp	0x140059a80
jmp	0x140059a80
lea	rax, [rsp + 0xe8]
mov	dword ptr [rsp + 0x30], 0x17
movdqu	xmm5, xmmword ptr [rsp + 0xd0]
lea	rcx, [rsp + 0xb0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x230]
lea	r9, [rsp + 0x90]
lea	r8, [rsp + 0xa0]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x218]
movdqu	xmm6, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xec]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0xa0], xmm5
movups	xmmword ptr [rsp + 0x90], xmm6
call	0x140058240
call	0x140058240
mov	rax, qword ptr [rsp + 0xb0]
mov	ebx, dword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0xb0], rax
mov	qword ptr [rsp + 0xd0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0xd8], eax
test	ebx, ebx
jne	0x140059a80
jne	0x140059a80
mov	eax, dword ptr [rsp + 0xec]
mov	rdi, qword ptr [rsp + 0x240]
mov	dword ptr [rdi + 8], eax
mov	rax, qword ptr [rsp + 0x250]
and	byte ptr [rax], 0xfe
jmp	0x140059a80
jmp	0x140059a80
lea	rbx, [rsp + 0xf0]
lea	r8, [rip + 0x5fe23]
mov	rcx, r15
mov	r9, rbx
lea	rdx, [r8 - 9]
call	0x140022330
call	0x140022330
mov	rax, qword ptr [rsp + 0x250]
movdqu	xmm0, xmmword ptr [rsp + 0xd0]
mov	qword ptr [rsp + 0x38], rbx
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
movups	xmmword ptr [rsp + 0xa0], xmm0
movups	xmmword ptr [rsp + 0x90], xmm4
mov	rax, qword ptr [rsp + 0x240]
mov	rdx, qword ptr [rsp + 0x218]
lea	r9, [rsp + 0x90]
lea	r8, [rsp + 0xa0]
mov	qword ptr [rsp + 0x30], rax
lea	rax, [rsp + 0xe8]
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x230]
mov	qword ptr [rsp + 0x20], rax
call	0x1400595d0
call	0x1400595d0
mov	rax, qword ptr [rsp + 0xb0]
mov	ebx, dword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0xb0], rax
mov	qword ptr [rsp + 0xd0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0xd8], eax
test	ebx, ebx
jne	0x140059a80
jne	0x140059a80
mov	rax, qword ptr [rsp + 0x250]
or	byte ptr [rax + 1], 4
jmp	0x140059a80
jmp	0x140059a80
lea	rax, [rsp + 0xe8]
mov	dword ptr [rsp + 0x30], 0x63
movdqu	xmm5, xmmword ptr [rsp + 0xd0]
lea	rcx, [rsp + 0xb0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x230]
lea	r9, [rsp + 0x90]
lea	r8, [rsp + 0xa0]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x218]
movdqu	xmm6, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xec]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0xa0], xmm5
movups	xmmword ptr [rsp + 0x90], xmm6
call	0x140058240
call	0x140058240
mov	rax, qword ptr [rsp + 0xb0]
mov	ebx, dword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0xb0], rax
mov	qword ptr [rsp + 0xd0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0xd8], eax
test	ebx, ebx
jne	0x140059a80
jne	0x140059a80
mov	rax, qword ptr [rsp + 0x250]
mov	rdx, qword ptr [rsp + 0x58]
mov	rcx, r12
or	byte ptr [rax + 1], 6
call	0x140020830
call	0x140020830
mov	edi, dword ptr [rsp + 0xec]
test	al, al
je	0x14005b0af
je	0x14005b0af
lea	eax, [rdi + 0x64]
cmp	edi, 0x45
cmovl	edi, eax
mov	rax, qword ptr [rsp + 0x240]
mov	dword ptr [rax + 0x14], edi
jmp	0x140059a80
jmp	0x140059a80
mov	rax, qword ptr [rsp + 0x250]
lea	rcx, [rsp + 0xb0]
movdqu	xmm5, xmmword ptr [rsp + 0xd0]
movdqu	xmm6, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x70]
movups	xmmword ptr [rsp + 0xa0], xmm5
mov	rax, qword ptr [rax + 0x10]
movups	xmmword ptr [rsp + 0x90], xmm6
mov	rax, qword ptr [rax + 0x10]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x240]
mov	rdx, qword ptr [rsp + 0x218]
lea	r9, [rsp + 0x90]
lea	r8, [rsp + 0xa0]
mov	qword ptr [rsp + 0x30], rax
lea	rax, [rsp + 0xe8]
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x230]
mov	qword ptr [rsp + 0x20], rax
call	0x1400595d0
call	0x1400595d0
mov	rax, qword ptr [rsp + 0xb0]
mov	ebx, dword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0xb0], rax
mov	qword ptr [rsp + 0xd0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0xd8], eax
jmp	0x140059a80
jmp	0x140059a80
mov	rcx, r12
call	0x1400208f0
call	0x1400208f0
cmp	byte ptr [r15 + 0x38], 0
mov	edi, eax
je	0x14005b080
je	0x14005b080
movzx	eax, byte ptr [r15 + 0x5e]
cmp	dil, al
jne	0x140059a70
jne	0x140059a70
mov	rcx, qword ptr [rsp + 0xd0]
call	0x140091a00
call	0x140091a00
mov	dword ptr [rsp + 0xd8], 0xffffffff
jmp	0x140059a80
jmp	0x140059a80
lea	rbx, [rsp + 0xf0]
lea	r8, [rip + 0x5fb52]
mov	r9, rbx
lea	rdx, [r8 - 9]
mov	rcx, r15
call	0x140022330
call	0x140022330
mov	rax, qword ptr [rsp + 0x250]
movdqu	xmm5, xmmword ptr [rsp + 0xd0]
mov	qword ptr [rsp + 0x38], rbx
movdqu	xmm6, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
movups	xmmword ptr [rsp + 0xa0], xmm5
movups	xmmword ptr [rsp + 0x90], xmm6
jmp	0x14005a4df
jmp	0x14005a4df
lea	rax, [rsp + 0xe8]
mov	dword ptr [rsp + 0x30], 0x63
movdqu	xmm0, xmmword ptr [rsp + 0xd0]
lea	rcx, [rsp + 0xb0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x230]
lea	r9, [rsp + 0x90]
lea	r8, [rsp + 0xa0]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x218]
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xec]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0xa0], xmm0
movups	xmmword ptr [rsp + 0x90], xmm4
call	0x140058240
call	0x140058240
mov	rax, qword ptr [rsp + 0xb0]
mov	ebx, dword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0xb0], rax
mov	qword ptr [rsp + 0xd0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0xd8], eax
test	ebx, ebx
jne	0x140059a80
jne	0x140059a80
mov	rdi, qword ptr [rsp + 0x250]
mov	eax, dword ptr [rsp + 0xec]
or	word ptr [rdi], 0x480
mov	dword ptr [rdi + 4], eax
jmp	0x140059a80
jmp	0x140059a80
lea	rax, [rsp + 0xe8]
mov	dword ptr [rsp + 0x30], 0x270f
movdqu	xmm0, xmmword ptr [rsp + 0xd0]
lea	rcx, [rsp + 0xb0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x230]
lea	r9, [rsp + 0x90]
lea	r8, [rsp + 0xa0]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x218]
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xec]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 4
movups	xmmword ptr [rsp + 0xa0], xmm0
movups	xmmword ptr [rsp + 0x90], xmm4
call	0x140058240
call	0x140058240
mov	rax, qword ptr [rsp + 0xb0]
mov	ebx, dword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0xb0], rax
mov	qword ptr [rsp + 0xd0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0xd8], eax
test	ebx, ebx
jne	0x140059a80
jne	0x140059a80
mov	eax, dword ptr [rsp + 0xec]
mov	rdi, qword ptr [rsp + 0x240]
sub	eax, 0x76c
mov	dword ptr [rdi + 0x14], eax
mov	rax, qword ptr [rsp + 0x250]
mov	rdi, qword ptr [rsp + 0x250]
movzx	eax, byte ptr [rax + 1]
mov	byte ptr [rsp + 0x68], al
and	eax, 0xfffffff9
or	eax, 4
mov	byte ptr [rdi + 1], al
jmp	0x140059a80
jmp	0x140059a80
mov	rax, qword ptr [rsp + 0x250]
lea	rcx, [rsp + 0xb0]
movdqu	xmm0, xmmword ptr [rsp + 0xd0]
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x70]
movups	xmmword ptr [rsp + 0xa0], xmm0
mov	rax, qword ptr [rax + 0x10]
movups	xmmword ptr [rsp + 0x90], xmm4
mov	rax, qword ptr [rax + 0x20]
mov	qword ptr [rsp + 0x38], rax
jmp	0x14005a4df
jmp	0x14005a4df
lea	rax, [rsp + 0xe8]
mov	dword ptr [rsp + 0x30], 0x35
movdqu	xmm0, xmmword ptr [rsp + 0xd0]
lea	rcx, [rsp + 0xb0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x230]
lea	r9, [rsp + 0x90]
lea	r8, [rsp + 0xa0]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x218]
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xec]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0xa0], xmm0
movups	xmmword ptr [rsp + 0x90], xmm4
call	0x140058240
call	0x140058240
mov	rax, qword ptr [rsp + 0xb0]
mov	ebx, dword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0xb0], rax
mov	qword ptr [rsp + 0xd0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0xd8], eax
test	ebx, ebx
jne	0x140059a80
jne	0x140059a80
mov	rdi, qword ptr [rsp + 0x250]
mov	eax, dword ptr [rsp + 0xec]
mov	edi, dword ptr [rdi]
shl	eax, 0x10
and	eax, 0x3f0000
mov	edx, edi
mov	dword ptr [rsp + 0x68], edi
or	eax, 0x40
mov	rdi, qword ptr [rsp + 0x250]
and	edx, 0xffc0ffbf
or	eax, edx
mov	dword ptr [rdi], eax
jmp	0x140059a80
jmp	0x140059a80
lea	rax, [rsp + 0xe8]
mov	dword ptr [rsp + 0x30], 0x35
movdqu	xmm0, xmmword ptr [rsp + 0xd0]
lea	rcx, [rsp + 0xb0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x230]
lea	r9, [rsp + 0x90]
lea	r8, [rsp + 0xa0]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x218]
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xec]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0xa0], xmm0
movups	xmmword ptr [rsp + 0x90], xmm4
call	0x140058240
call	0x140058240
mov	rax, qword ptr [rsp + 0xb0]
mov	ebx, dword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0xb0], rax
mov	qword ptr [rsp + 0xd0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0xd8], eax
test	ebx, ebx
jne	0x140059a80
jne	0x140059a80
mov	rdi, qword ptr [rsp + 0x250]
mov	eax, dword ptr [rsp + 0xec]
mov	edi, dword ptr [rdi]
shl	eax, 0x10
and	eax, 0x3f0000
mov	edx, edi
mov	dword ptr [rsp + 0x68], edi
or	eax, 0x20
mov	rdi, qword ptr [rsp + 0x250]
and	edx, 0xffc0ffdf
or	eax, edx
mov	dword ptr [rdi], eax
jmp	0x140059a80
jmp	0x140059a80
lea	rax, [rsp + 0xe8]
mov	dword ptr [rsp + 0x30], 0x3c
movdqu	xmm0, xmmword ptr [rsp + 0xd0]
lea	rcx, [rsp + 0xb0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x230]
lea	r9, [rsp + 0x90]
lea	r8, [rsp + 0xa0]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x218]
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xec]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0xa0], xmm0
movups	xmmword ptr [rsp + 0x90], xmm4
call	0x140058240
call	0x140058240
mov	rax, qword ptr [rsp + 0xb0]
mov	ebx, dword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0xb0], rax
mov	qword ptr [rsp + 0xd0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0xd8], eax
test	ebx, ebx
jne	0x140059a80
jne	0x140059a80
mov	eax, dword ptr [rsp + 0xec]
mov	rdi, qword ptr [rsp + 0x240]
mov	dword ptr [rdi], eax
jmp	0x140059a80
jmp	0x140059a80
lea	rbx, [rsp + 0xf0]
lea	r8, [rip + 0x5f60f]
mov	r9, rbx
lea	rdx, [r8 - 6]
jmp	0x14005a5ab
jmp	0x14005a5ab
lea	rax, [rsp + 0xe8]
mov	dword ptr [rsp + 0x30], 6
movdqu	xmm5, xmmword ptr [rsp + 0xd0]
lea	rcx, [rsp + 0xb0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x230]
lea	r9, [rsp + 0x90]
lea	r8, [rsp + 0xa0]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x218]
movdqu	xmm6, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xec]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 1
movups	xmmword ptr [rsp + 0xa0], xmm5
movups	xmmword ptr [rsp + 0x90], xmm6
call	0x140058240
call	0x140058240
mov	rax, qword ptr [rsp + 0xb0]
mov	ebx, dword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0xb0], rax
mov	qword ptr [rsp + 0xd0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0xd8], eax
test	ebx, ebx
jne	0x140059a80
jne	0x140059a80
mov	eax, dword ptr [rsp + 0xec]
mov	rdi, qword ptr [rsp + 0x240]
mov	dword ptr [rdi + 0x18], eax
mov	rax, qword ptr [rsp + 0x250]
or	byte ptr [rax], 2
jmp	0x140059a80
jmp	0x140059a80
mov	rax, qword ptr [rsp + 0x250]
lea	rcx, [rsp + 0xb0]
movdqu	xmm0, xmmword ptr [rsp + 0xd0]
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x70]
movups	xmmword ptr [rsp + 0xa0], xmm0
mov	rax, qword ptr [rax + 0x10]
movups	xmmword ptr [rsp + 0x90], xmm4
mov	rax, qword ptr [rax + 0x50]
mov	qword ptr [rsp + 0x38], rax
jmp	0x14005a4df
jmp	0x14005a4df
mov	rax, qword ptr [rsp + 0x250]
lea	rcx, [rsp + 0xb0]
movdqu	xmm5, xmmword ptr [rsp + 0xd0]
movdqu	xmm6, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x70]
movups	xmmword ptr [rsp + 0xa0], xmm5
mov	rax, qword ptr [rax + 0x10]
movups	xmmword ptr [rsp + 0x90], xmm6
mov	rax, qword ptr [rax + 0x30]
mov	qword ptr [rsp + 0x38], rax
jmp	0x14005a30f
jmp	0x14005a30f
lea	rax, [rsp + 0xe8]
mov	dword ptr [rsp + 0x30], 0xc
movdqu	xmm0, xmmword ptr [rsp + 0xd0]
lea	rcx, [rsp + 0xb0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x230]
lea	r9, [rsp + 0x90]
lea	r8, [rsp + 0xa0]
mov	dword ptr [rsp + 0x28], 1
mov	rdx, qword ptr [rsp + 0x218]
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xec]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0xa0], xmm0
movups	xmmword ptr [rsp + 0x90], xmm4
call	0x140058240
call	0x140058240
mov	rax, qword ptr [rsp + 0xb0]
mov	ebx, dword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0xb0], rax
mov	qword ptr [rsp + 0xd0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0xd8], eax
test	ebx, ebx
jne	0x140059a80
jne	0x140059a80
mov	eax, dword ptr [rsp + 0xec]
mov	rdi, qword ptr [rsp + 0x240]
sub	eax, 1
mov	dword ptr [rdi + 0x10], eax
mov	rax, qword ptr [rsp + 0x250]
or	byte ptr [rax], 8
jmp	0x140059a80
jmp	0x140059a80
lea	rax, [rsp + 0xe8]
mov	dword ptr [rsp + 0x30], 0x16e
movdqu	xmm5, xmmword ptr [rsp + 0xd0]
lea	rcx, [rsp + 0xb0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x230]
lea	r9, [rsp + 0x90]
lea	r8, [rsp + 0xa0]
mov	dword ptr [rsp + 0x28], 1
mov	rdx, qword ptr [rsp + 0x218]
movdqu	xmm6, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xec]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 3
movups	xmmword ptr [rsp + 0xa0], xmm5
movups	xmmword ptr [rsp + 0x90], xmm6
call	0x140058240
call	0x140058240
mov	rax, qword ptr [rsp + 0xb0]
mov	ebx, dword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0xb0], rax
mov	qword ptr [rsp + 0xd0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0xd8], eax
test	ebx, ebx
jne	0x140059a80
jne	0x140059a80
mov	eax, dword ptr [rsp + 0xec]
mov	rdi, qword ptr [rsp + 0x240]
sub	eax, 1
mov	dword ptr [rdi + 0x1c], eax
mov	rax, qword ptr [rsp + 0x250]
or	byte ptr [rax], 4
jmp	0x140059a80
jmp	0x140059a80
mov	rcx, r12
call	0x1400208f0
call	0x1400208f0
mov	rdx, qword ptr [r15 + 0x30]
movzx	eax, al
test	byte ptr [rdx + rax*2], 1
je	0x140059a70
je	0x140059a70
mov	rax, qword ptr [rsp + 0x230]
lea	r14, [rsp + 0xe8]
lea	rdi, [rsp + 0xf0]
mov	qword ptr [rsp + 0x30], 0xe
mov	qword ptr [rsp + 0x40], r14
movdqu	xmm0, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xb0]
lea	r9, [rsp + 0x90]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rip + 0x63a16]
lea	r8, [rsp + 0xa0]
mov	qword ptr [rsp + 0x20], rdi
mov	rdx, qword ptr [rsp + 0x218]
movdqu	xmm6, xmmword ptr [rsp + 0xd0]
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x88], rcx
mov	qword ptr [rsp + 0x68], r9
mov	qword ptr [rsp + 0x78], r8
movups	xmmword ptr [rsp + 0x90], xmm0
movups	xmmword ptr [rsp + 0xa0], xmm6
call	0x1400588b0
call	0x1400588b0
mov	rax, qword ptr [rsp + 0xb0]
mov	rdx, qword ptr [rsp + 0x58]
mov	rcx, r12
mov	qword ptr [rsp + 0xb0], rax
mov	qword ptr [rsp + 0xd0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0xd8], eax
call	0x140020830
call	0x140020830
mov	ebx, dword ptr [rsp + 0xe8]
test	al, al
jne	0x140059a80
jne	0x140059a80
mov	eax, ebx
or	eax, dword ptr [rsp + 0xf0]
jne	0x140059a80
jne	0x140059a80
mov	rcx, r12
call	0x1400208f0
call	0x1400208f0
cmp	byte ptr [r15 + 0x38], 0
mov	dword ptr [rsp + 0x84], eax
je	0x14005b179
je	0x14005b179
movzx	eax, byte ptr [r15 + 0x66]
cmp	byte ptr [rsp + 0x84], al
je	0x14005af79
je	0x14005af79
mov	rcx, r12
call	0x1400208f0
call	0x1400208f0
cmp	byte ptr [r15 + 0x38], 0
mov	dword ptr [rsp + 0x84], eax
je	0x14005b18b
je	0x14005b18b
movzx	eax, byte ptr [r15 + 0x64]
cmp	byte ptr [rsp + 0x84], al
jne	0x140059a80
jne	0x140059a80
mov	rax, qword ptr [rsp + 0x230]
mov	qword ptr [rsp + 0x48], r14
mov	rbx, qword ptr [rsp + 0x88]
mov	r9, qword ptr [rsp + 0x68]
mov	qword ptr [rsp + 0x20], rdi
mov	qword ptr [rsp + 0x40], rax
xor	eax, eax
mov	r8, qword ptr [rsp + 0x78]
mov	dword ptr [rsp + 0x28], eax
mov	rcx, rbx
movdqu	xmm5, xmmword ptr [rsp + 0xd0]
mov	dword ptr [rsp + 0x30], 0x17
mov	rdx, qword ptr [rsp + 0x218]
mov	qword ptr [rsp + 0x38], 2
movdqu	xmm6, xmmword ptr [rsp + 0xc0]
movups	xmmword ptr [rsp + 0xa0], xmm5
movups	xmmword ptr [rsp + 0x90], xmm6
call	0x140058240
call	0x140058240
xor	edx, edx
mov	qword ptr [rsp + 0x48], r14
mov	rcx, rbx
mov	rax, qword ptr [rsp + 0xb0]
mov	dword ptr [rsp + 0x28], edx
mov	qword ptr [rsp + 0x38], 2
mov	r9, qword ptr [rsp + 0x68]
mov	qword ptr [rsp + 0xd0], rax
mov	r8, qword ptr [rsp + 0x78]
mov	qword ptr [rsp + 0xb0], rax
mov	eax, dword ptr [rsp + 0xb8]
mov	dword ptr [rsp + 0x30], 0x3b
mov	rdx, qword ptr [rsp + 0x218]
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
mov	dword ptr [rsp + 0xd8], eax
mov	rax, qword ptr [rsp + 0x230]
mov	qword ptr [rsp + 0x20], rdi
movdqu	xmm0, xmmword ptr [rsp + 0xd0]
movups	xmmword ptr [rsp + 0x90], xmm4
mov	qword ptr [rsp + 0x40], rax
movups	xmmword ptr [rsp + 0xa0], xmm0
call	0x140058240
call	0x140058240
jmp	0x14005a523
jmp	0x14005a523
mov	edx, 0x25
mov	rcx, r15
call	0x1400223c0
call	0x1400223c0
jmp	0x14005a56f
jmp	0x14005a56f
mov	rcx, qword ptr [rsp + 0xd0]
call	0x140091a00
call	0x140091a00
mov	dword ptr [rsp + 0xd8], 0xffffffff
jmp	0x140059dc6
jmp	0x140059dc6
mov	rcx, r12
call	0x1400208f0
call	0x1400208f0
mov	r8d, 0x2a
mov	rcx, r15
movsx	edx, al
call	0x140022410
call	0x140022410
mov	r14d, eax
lea	edx, [r14 - 0x30]
cmp	dl, 9
ja	0x14005a47d
ja	0x14005a47d
mov	rcx, qword ptr [rsp + 0xd0]
call	0x140091a00
call	0x140091a00
lea	edx, [rdi + rdi*4]
movsx	eax, r14b
mov	rcx, r12
mov	dword ptr [rsp + 0xd8], 0xffffffff
lea	edi, [rax + rdx*2 - 0x30]
mov	rdx, qword ptr [rsp + 0x58]
mov	dword ptr [rsp + 0xec], edi
call	0x140020830
call	0x140020830
test	al, al
je	0x14005b12f
je	0x14005b12f
mov	rax, qword ptr [rsp + 0x250]
sub	edi, 0x76c
and	byte ptr [rax + 1], 0xfd
jmp	0x14005a486
jmp	0x14005a486
call	0x1400b3a30
call	0x1400b3a30
mov	rcx, r12
call	0x1400208f0
call	0x1400208f0
mov	r8d, 0x2a
mov	rcx, r15
movsx	edx, al
call	0x140022410
call	0x140022410
mov	r14d, eax
lea	edx, [r14 - 0x30]
cmp	dl, 9
ja	0x14005b113
ja	0x14005b113
mov	rcx, qword ptr [rsp + 0xd0]
call	0x140091a00
call	0x140091a00
imul	edx, edi, 0xa
movsx	eax, r14b
mov	dword ptr [rsp + 0xd8], 0xffffffff
lea	edi, [rdx + rax - 0x30]
jmp	0x14005b113
jmp	0x14005b113
mov	edx, 0x2d
mov	rcx, r15
call	0x1400223c0
call	0x1400223c0
jmp	0x14005af44
jmp	0x14005af44
mov	edx, 0x2b
mov	rcx, r15
call	0x1400223c0
call	0x1400223c0
jmp	0x14005af6c
jmp	0x14005af6c
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x68
lea	rbp, [rsp + 0x60]
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	r15, qword ptr [rbp + 0x78]
mov	qword ptr [rbp + 0x50], rcx
mov	rcx, qword ptr [rip + 0x63702]
movups	xmmword ptr [rbp - 0x10], xmm0
movups	xmmword ptr [rbp - 0x20], xmm1
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp + 0x88]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r13, qword ptr [rax + rdx*8]
test	r13, r13
je	0x14005b5ae
je	0x14005b5ae
mov	rax, qword ptr [rbp + 0x80]
lea	rax, [rax*8 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
lea	rbx, [rbp - 0x10]
sub	rsp, rax
lea	rdx, [rbp - 0x20]
mov	rcx, rbx
lea	r14, [rsp + 0x20]
call	0x140020830
call	0x140020830
test	al, al
je	0x14005b427
je	0x14005b427
mov	r11d, dword ptr [rbp - 8]
mov	r12, qword ptr [rbp - 0x10]
xor	ebx, ebx
xor	esi, esi
xor	edi, edi
cmp	dword ptr [rbp - 0x18], -1
sete	r13b
nop	dword ptr [rax + rax]
cmp	r11d, -1
sete	r10b
test	r12, r12
setne	dl
and	dl, r10b
jne	0x14005b3a0
jne	0x14005b3a0
mov	edx, r10d
mov	rcx, qword ptr [rbp - 0x20]
test	rcx, rcx
setne	r8b
and	r8b, r13b
jne	0x14005b380
jne	0x14005b380
mov	r8d, r13d
cmp	dl, r8b
je	0x14005b336
je	0x14005b336
mov	rcx, qword ptr [rbp - 0x10]
test	rcx, rcx
je	0x14005b29c
je	0x14005b29c
test	r10b, r10b
jne	0x14005b3c0
jne	0x14005b3c0
test	rbx, rbx
je	0x14005b350
je	0x14005b350
xor	eax, eax
xor	r8d, r8d
jmp	0x14005b2bd
jmp	0x14005b2bd
nop	dword ptr [rax]
add	r8, 1
add	rax, 1
cmp	rax, rbx
jae	0x14005b2ee
jae	0x14005b2ee
lea	rdx, [rdi + rax*8]
cmp	rsi, qword ptr [rdx]
jae	0x14005b2b0
jae	0x14005b2b0
lea	rcx, [r14 + rax*4]
movsxd	r10, dword ptr [rcx]
mov	r10, qword ptr [r15 + r10*8]
cmp	byte ptr [r10 + rsi], r11b
je	0x14005b330
je	0x14005b330
sub	rbx, 1
mov	r10d, dword ptr [r14 + rbx*4]
mov	dword ptr [rcx], r10d
mov	rcx, qword ptr [rdi + rbx*8]
mov	qword ptr [rdx], rcx
cmp	rax, rbx
jb	0x14005b2bd
jb	0x14005b2bd
cmp	rbx, r8
je	0x14005b336
je	0x14005b336
mov	r12, qword ptr [rbp - 0x10]
mov	rax, qword ptr [r12 + 0x10]
cmp	rax, qword ptr [r12 + 0x18]
jae	0x14005b3e0
jae	0x14005b3e0
add	rax, 1
mov	qword ptr [r12 + 0x10], rax
mov	dword ptr [rbp - 8], 0xffffffff
add	rsi, 1
mov	r11d, 0xffffffff
jmp	0x14005b250
jmp	0x14005b250
nop	word ptr cs:[rax + rax]
add	rax, 1
jmp	0x14005b2b8
jmp	0x14005b2b8
cmp	rbx, 1
jne	0x14005b3ef
jne	0x14005b3ef
cmp	qword ptr [rdi], rsi
je	0x14005b408
je	0x14005b408
nop	dword ptr [rax]
mov	rax, qword ptr [rbp + 0x90]
or	dword ptr [rax], 4
mov	rax, qword ptr [rbp + 0x50]
movdqu	xmm2, xmmword ptr [rbp - 0x10]
movups	xmmword ptr [rax], xmm2
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x18]
cmp	qword ptr [rcx + 0x10], rax
jae	0x14005b560
jae	0x14005b560
xor	r8d, r8d
jmp	0x14005b281
jmp	0x14005b281
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [r12 + 0x18]
cmp	qword ptr [r12 + 0x10], rax
jae	0x14005b49b
jae	0x14005b49b
xor	edx, edx
jmp	0x14005b26a
jmp	0x14005b26a
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14005b53e
jae	0x14005b53e
movzx	r11d, byte ptr [rax]
jmp	0x14005b29c
jmp	0x14005b29c
nop	word ptr [rax + rax]
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x14005b310
jmp	0x14005b310
cmp	rbx, 2
jne	0x14005b350
jne	0x14005b350
cmp	qword ptr [rdi], rsi
je	0x14005b408
je	0x14005b408
cmp	qword ptr [rdi + 8], rsi
jne	0x14005b350
jne	0x14005b350
mov	eax, dword ptr [r14]
mov	edx, eax
sub	edx, dword ptr [rbp + 0x80]
cmp	eax, dword ptr [rbp + 0x80]
cmovge	eax, edx
mov	rdx, qword ptr [rbp + 0x70]
mov	dword ptr [rdx], eax
jmp	0x14005b35a
jmp	0x14005b35a
mov	rcx, rbx
call	0x1400208f0
call	0x1400208f0
mov	rsi, qword ptr [rbp + 0x80]
mov	r12d, eax
add	rsi, rsi
je	0x14005b59d
je	0x14005b59d
xor	edi, edi
xor	ebx, ebx
jmp	0x14005b468
jmp	0x14005b468
nop	dword ptr [rax + rax]
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
cmp	r12b, al
je	0x14005b474
je	0x14005b474
add	rdi, 1
cmp	rdi, rsi
je	0x14005b485
je	0x14005b485
mov	rax, qword ptr [r15 + rdi*8]
movsx	edx, byte ptr [rax]
cmp	dl, r12b
jne	0x14005b450
jne	0x14005b450
mov	dword ptr [r14 + rbx*4], edi
add	rdi, 1
add	rbx, 1
cmp	rdi, rsi
jne	0x14005b468
jne	0x14005b468
mov	r12, qword ptr [rbp - 0x10]
test	rbx, rbx
jne	0x14005b4d3
jne	0x14005b4d3
mov	r11d, dword ptr [rbp - 8]
xor	esi, esi
xor	edi, edi
jmp	0x14005b243
jmp	0x14005b243
mov	rax, qword ptr [r12]
mov	dword ptr [rbp - 0x30], r11d
mov	rcx, r12
mov	byte ptr [rbp - 0x29], dl
mov	byte ptr [rbp - 0x28], r10b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r10d, byte ptr [rbp - 0x28]
movzx	edx, byte ptr [rbp - 0x29]
cmp	eax, -1
mov	r11d, dword ptr [rbp - 0x30]
jne	0x14005b3b0
jne	0x14005b3b0
mov	qword ptr [rbp - 0x10], 0
jmp	0x14005b26a
jmp	0x14005b26a
mov	rcx, r12
call	0x140091a00
call	0x140091a00
lea	rax, [rbx*8 + 0xf]
mov	dword ptr [rbp - 8], 0xffffffff
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
lea	rax, [r14 + rbx*4]
mov	rsi, r14
mov	qword ptr [rbp - 0x28], rax
lea	rdi, [rsp + 0x20]
mov	r13, rdi
nop	dword ptr [rax]
movsxd	rax, dword ptr [rsi]
add	r13, 8
add	rsi, 4
mov	rcx, qword ptr [r15 + rax*8]
call	0x140015a08
call	0x140015a08
mov	qword ptr [r13 - 8], rax
cmp	qword ptr [rbp - 0x28], rsi
jne	0x14005b510
jne	0x14005b510
mov	r11d, 0xffffffff
mov	esi, 1
jmp	0x14005b243
jmp	0x14005b243
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r11d, eax
cmp	eax, -1
jne	0x14005b29c
jne	0x14005b29c
mov	qword ptr [rbp - 0x10], 0
jmp	0x14005b29c
jmp	0x14005b29c
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
mov	dword ptr [rbp - 0x34], r11d
mov	byte ptr [rbp - 0x30], dl
mov	byte ptr [rbp - 0x29], r10b
mov	byte ptr [rbp - 0x28], r8b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, byte ptr [rbp - 0x28]
movzx	r10d, byte ptr [rbp - 0x29]
cmp	eax, -1
movzx	edx, byte ptr [rbp - 0x30]
mov	r11d, dword ptr [rbp - 0x34]
jne	0x14005b38e
jne	0x14005b38e
mov	qword ptr [rbp - 0x20], 0
jmp	0x14005b281
jmp	0x14005b281
mov	r11d, dword ptr [rbp - 8]
mov	r12, qword ptr [rbp - 0x10]
xor	ebx, ebx
xor	edi, edi
jmp	0x14005b243
jmp	0x14005b243
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xd8
mov	rax, qword ptr [r8 + 8]
mov	r14, qword ptr [rsp + 0x148]
mov	rbx, qword ptr [rsp + 0x158]
mov	r13, qword ptr [rsp + 0x160]
mov	rsi, qword ptr [r8]
mov	r12, qword ptr [r9]
mov	r15d, eax
mov	rdi, rcx
mov	rcx, qword ptr [r9 + 8]
mov	qword ptr [rsp + 0x68], rax
mov	qword ptr [rsp + 0x128], rdx
mov	qword ptr [rsp + 0x58], rcx
mov	rcx, qword ptr [rip + 0x632b8]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x140]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rbp, qword ptr [rax + rdx*8]
test	rbp, rbp
je	0x14005be5d
je	0x14005be5d
lea	rax, [rsp + 0xc4]
mov	dword ptr [r14], 0
mov	qword ptr [rsp + 0xc4], 0
mov	dword ptr [rsp + 0xcc], 0
mov	qword ptr [rsp + 0x78], rax
cmp	rbx, r13
je	0x14005b9a8
je	0x14005b9a8
lea	rax, [rip - 0x3919b]
mov	qword ptr [rsp + 0x120], rdi
mov	qword ptr [rsp + 0x60], rax
jmp	0x14005b870
jmp	0x14005b870
nop	dword ptr [rax]
lea	r10, [rbx + 1]
cmp	r13, r10
je	0x14005bd73
je	0x14005bd73
movzx	r11d, byte ptr [rbx + 1]
movzx	eax, byte ptr [rbp + r11 + 0x139]
mov	rdx, r11
test	al, al
jne	0x14005b6da
jne	0x14005b6da
mov	rax, qword ptr [rbp]
mov	rcx, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, rcx
jne	0x14005bc68
jne	0x14005bc68
test	dl, dl
je	0x14005bb00
je	0x14005bb00
mov	byte ptr [rbp + r11 + 0x139], dl
mov	eax, edx
cmp	al, 0x45
je	0x14005b6e6
je	0x14005b6e6
cmp	al, 0x4f
jne	0x14005bb00
jne	0x14005bb00
lea	r10, [rbx + 2]
cmp	r13, r10
je	0x14005bd73
je	0x14005bd73
movzx	r11d, byte ptr [rbx + 2]
cmp	byte ptr [rbp + r11 + 0x139], 0
mov	rdx, r11
jne	0x14005bba0
jne	0x14005bba0
mov	rax, qword ptr [rbp]
mov	rcx, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, rcx
jne	0x14005bd46
jne	0x14005bd46
test	dl, dl
je	0x14005bd00
je	0x14005bd00
mov	byte ptr [rbp + r11 + 0x139], dl
movzx	eax, word ptr [rbx]
movzx	edx, byte ptr [rbx + 2]
mov	word ptr [rsp + 0xc0], ax
mov	byte ptr [rsp + 0xc2], dl
mov	byte ptr [rsp + 0xc3], 0
mov	rax, qword ptr [rsp + 0x58]
mov	qword ptr [rsp + 0x28], r14
mov	r9d, r15d
movabs	rbx, 0xffffffff00000000
mov	rdx, qword ptr [rsp + 0x128]
and	rbx, qword ptr [rsp + 0x68]
lea	rcx, [rsp + 0xb0]
lea	r8, [rsp + 0xa0]
mov	qword ptr [rsp + 0x98], rax
mov	rax, qword ptr [rsp + 0x78]
or	rbx, r9
lea	r9, [rsp + 0x90]
mov	qword ptr [rsp + 0x70], r10
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xc0]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x150]
mov	qword ptr [rsp + 0xa0], rsi
movabs	rsi, 0xffffffff00000000
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x140]
mov	qword ptr [rsp + 0xa8], rbx
and	rbx, rsi
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x90], r12
call	0x1400595d0
call	0x1400595d0
mov	rdx, qword ptr [rsp + 0xb8]
mov	r10, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rsp + 0xb0]
mov	ecx, edx
mov	qword ptr [rsp + 0xb8], rdx
mov	r15d, edx
or	rbx, rcx
cmp	edx, -1
mov	qword ptr [rsp + 0xb0], rax
mov	rsi, rax
mov	qword ptr [rsp + 0x68], rbx
sete	bl
test	rax, rax
setne	dl
and	dl, bl
jne	0x14005bc20
jne	0x14005bc20
test	r12, r12
setne	al
and	al, dil
mov	edx, eax
jne	0x14005bbd0
jne	0x14005bbd0
cmp	bl, dil
jne	0x14005b858
jne	0x14005b858
or	dword ptr [r14], 2
lea	rbx, [r10 + 1]
cmp	r13, rbx
je	0x14005b9a0
je	0x14005b9a0
mov	eax, dword ptr [r14]
test	eax, eax
jne	0x14005b9a0
jne	0x14005b9a0
cmp	r15d, -1
sete	r10b
test	rsi, rsi
setne	r8b
and	r8b, r10b
jne	0x14005bb50
jne	0x14005bb50
mov	r8d, r10d
cmp	dword ptr [rsp + 0x58], -1
sete	dil
test	r12, r12
setne	dl
and	dl, dil
jne	0x14005bb20
jne	0x14005bb20
mov	edx, edi
cmp	r8b, dl
je	0x14005bb3b
je	0x14005bb3b
movzx	r11d, byte ptr [rbx]
movzx	eax, byte ptr [rbp + r11 + 0x139]
mov	rdx, r11
test	al, al
jne	0x14005b8e6
jne	0x14005b8e6
mov	rax, qword ptr [rbp]
mov	rcx, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, rcx
jne	0x14005bb70
jne	0x14005bb70
test	dl, dl
je	0x14005b8ee
je	0x14005b8ee
mov	byte ptr [rbp + r11 + 0x139], dl
mov	eax, edx
cmp	al, 0x25
je	0x14005b690
je	0x14005b690
mov	rdx, qword ptr [rbp + 0x30]
movzx	eax, byte ptr [rbx]
test	byte ptr [rdx + rax*2], 0x20
jne	0x14005b9f9
jne	0x14005b9f9
test	rsi, rsi
je	0x14005b90d
je	0x14005b90d
test	r10b, r10b
jne	0x14005bbb0
jne	0x14005bbb0
mov	edx, r15d
mov	rax, qword ptr [rbp]
movsx	edx, dl
mov	rcx, rbp
mov	byte ptr [rsp + 0x70], r10b
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
movsx	edx, byte ptr [rbx]
mov	rcx, rbp
mov	edi, eax
mov	rax, qword ptr [rbp]
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	dil, al
je	0x14005b972
je	0x14005b972
test	rsi, rsi
je	0x14005b94a
je	0x14005b94a
movzx	r10d, byte ptr [rsp + 0x70]
test	r10b, r10b
jne	0x14005bd30
jne	0x14005bd30
mov	edx, r15d
mov	rax, qword ptr [rbp]
movsx	edx, dl
mov	rcx, rbp
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
movsx	edx, byte ptr [rbx]
mov	rcx, rbp
mov	edi, eax
mov	rax, qword ptr [rbp]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
cmp	dil, al
jne	0x14005bd73
jne	0x14005bd73
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x14005bce8
jae	0x14005bce8
add	rax, 1
mov	qword ptr [rsi + 0x10], rax
add	rbx, 1
mov	r15d, 0xffffffff
cmp	r13, rbx
jne	0x14005b865
jne	0x14005b865
nop	dword ptr [rax + rax]
mov	rdi, qword ptr [rsp + 0x120]
mov	rdx, qword ptr [rsp + 0x150]
mov	rcx, qword ptr [rsp + 0x78]
call	0x140094930
call	0x140094930
mov	r10d, r15d
mov	qword ptr [rdi], rsi
movabs	rax, 0xffffffff00000000
and	rax, qword ptr [rsp + 0x68]
or	rax, r10
mov	qword ptr [rdi + 8], rax
mov	rax, rdi
add	rsp, 0xd8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
movzx	eax, byte ptr [rbx]
test	byte ptr [rdx + rax*2], 0x20
je	0x14005ba02
je	0x14005ba02
add	rbx, 1
cmp	r13, rbx
jne	0x14005b9f0
jne	0x14005b9f0
test	rsi, rsi
je	0x14005ba0c
je	0x14005ba0c
test	r10b, r10b
jne	0x14005ba55
jne	0x14005ba55
mov	r8d, r10d
test	r12, r12
setne	dl
and	dl, dil
jne	0x14005ba80
jne	0x14005ba80
mov	edx, edi
cmp	r10b, dl
je	0x14005b85c
je	0x14005b85c
test	rsi, rsi
je	0x14005ba2f
je	0x14005ba2f
test	r8b, r8b
jne	0x14005ba98
jne	0x14005ba98
mov	eax, r15d
mov	rdx, qword ptr [rbp + 0x30]
movzx	eax, al
test	byte ptr [rdx + rax*2], 0x20
je	0x14005b85c
je	0x14005b85c
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x14005bac0
jae	0x14005bac0
add	rax, 1
mov	qword ptr [rsi + 0x10], rax
mov	rax, qword ptr [rsi + 0x18]
cmp	qword ptr [rsi + 0x10], rax
jae	0x14005bad3
jae	0x14005bad3
xor	r10d, r10d
test	r12, r12
mov	r8d, 1
mov	r15d, 0xffffffff
setne	dl
and	dl, dil
je	0x14005ba1a
je	0x14005ba1a
nop	dword ptr [rax]
mov	rax, qword ptr [r12 + 0x18]
cmp	qword ptr [r12 + 0x10], rax
jae	0x14005bc98
jae	0x14005bc98
xor	edx, edx
jmp	0x14005ba1c
jmp	0x14005ba1c
nop	dword ptr [rax]
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x14005bd18
jae	0x14005bd18
movzx	ecx, byte ptr [rax]
mov	rdx, qword ptr [rbp + 0x30]
test	byte ptr [rdx + rcx*2], 0x20
jne	0x14005ba4d
jne	0x14005ba4d
jmp	0x14005b85c
jmp	0x14005b85c
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rsi + 0x18]
cmp	qword ptr [rsi + 0x10], rax
jb	0x14005ba5f
jb	0x14005ba5f
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r15d, eax
cmp	eax, -1
jne	0x14005ba5f
jne	0x14005ba5f
mov	r8d, 1
mov	r10d, 1
xor	esi, esi
jmp	0x14005ba0f
jmp	0x14005ba0f
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rbx]
mov	byte ptr [rsp + 0xc2], 0
mov	word ptr [rsp + 0xc0], ax
jmp	0x14005b74e
jmp	0x14005b74e
nop	dword ptr [rax + rax]
mov	rax, qword ptr [r12 + 0x18]
cmp	qword ptr [r12 + 0x10], rax
jae	0x14005bd87
jae	0x14005bd87
xor	edx, edx
cmp	r8b, dl
jne	0x14005b8ae
jne	0x14005b8ae
mov	dword ptr [r14], 6
mov	rdi, qword ptr [rsp + 0x120]
jmp	0x14005b9a8
jmp	0x14005b9a8
nop	
mov	rax, qword ptr [rsi + 0x18]
cmp	qword ptr [rsi + 0x10], rax
jae	0x14005bdd0
jae	0x14005bdd0
xor	r8d, r8d
jmp	0x14005b88b
jmp	0x14005b88b
nop	word ptr cs:[rax + rax]
movsx	edx, r11b
mov	byte ptr [rsp + 0x70], r10b
xor	r8d, r8d
mov	rcx, rbp
mov	qword ptr [rsp + 0x80], r11
call	rax
call	rax
mov	r11, qword ptr [rsp + 0x80]
movzx	r10d, byte ptr [rsp + 0x70]
mov	edx, eax
jmp	0x14005b8d8
jmp	0x14005b8d8
nop	
movzx	eax, word ptr [rbx]
mov	word ptr [rsp + 0xc0], ax
jmp	0x14005b73f
jmp	0x14005b73f
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x14005be0a
jae	0x14005be0a
movzx	edx, byte ptr [rax]
jmp	0x14005b910
jmp	0x14005b910
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [r12 + 0x18]
xor	edi, edi
cmp	qword ptr [r12 + 0x10], rax
jb	0x14005b84f
jb	0x14005b84f
mov	rax, qword ptr [r12]
mov	byte ptr [rsp + 0x80], dl
mov	rcx, r12
mov	qword ptr [rsp + 0x70], r10
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x80]
mov	r10, qword ptr [rsp + 0x70]
cmp	eax, -1
mov	eax, 0
cmove	edi, edx
cmove	r12, rax
jmp	0x14005b84f
jmp	0x14005b84f
nop	dword ptr [rax]
mov	rcx, qword ptr [rax + 0x18]
xor	ebx, ebx
cmp	qword ptr [rax + 0x10], rcx
jb	0x14005b83e
jb	0x14005b83e
mov	rax, qword ptr [rax]
mov	byte ptr [rsp + 0x80], dl
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x80]
mov	r10, qword ptr [rsp + 0x70]
cmp	eax, -1
mov	eax, 0
cmove	ebx, edx
cmove	rsi, rax
jmp	0x14005b83e
jmp	0x14005b83e
nop	dword ptr [rax]
movsx	edx, r11b
mov	qword ptr [rsp + 0x70], r10
xor	r8d, r8d
mov	rcx, rbp
mov	qword ptr [rsp + 0x80], r11
call	rax
call	rax
mov	r11, qword ptr [rsp + 0x80]
mov	r10, qword ptr [rsp + 0x70]
mov	edx, eax
jmp	0x14005b6c8
jmp	0x14005b6c8
nop	dword ptr [rax]
mov	rax, qword ptr [r12]
mov	byte ptr [rsp + 0x8f], dl
mov	rcx, r12
mov	byte ptr [rsp + 0x80], r10b
mov	byte ptr [rsp + 0x70], r8b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x8f]
movzx	r8d, byte ptr [rsp + 0x70]
movzx	r10d, byte ptr [rsp + 0x80]
cmp	eax, -1
mov	eax, 0
cmove	r12, rax
cmovne	edx, eax
jmp	0x14005ba1c
jmp	0x14005ba1c
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x14005b988
jmp	0x14005b988
nop	word ptr cs:[rax + rax]
movzx	eax, word ptr [rbx]
movzx	edx, byte ptr [rbx + 2]
mov	word ptr [rsp + 0xc0], ax
jmp	0x14005b73f
jmp	0x14005b73f
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
xor	edx, edx
cmp	eax, -1
cmove	rsi, rdx
jmp	0x14005ba32
jmp	0x14005ba32
nop	
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x14005be39
jae	0x14005be39
movzx	edx, byte ptr [rax]
jmp	0x14005b94d
jmp	0x14005b94d
movsx	edx, r11b
mov	qword ptr [rsp + 0x70], r10
xor	r8d, r8d
mov	rcx, rbp
mov	qword ptr [rsp + 0x80], r11
call	rax
call	rax
mov	r11, qword ptr [rsp + 0x80]
mov	r10, qword ptr [rsp + 0x70]
mov	edx, eax
jmp	0x14005b720
jmp	0x14005b720
mov	dword ptr [r14], 4
mov	rdi, qword ptr [rsp + 0x120]
jmp	0x14005b9a8
jmp	0x14005b9a8
mov	rax, qword ptr [r12]
mov	byte ptr [rsp + 0x8f], dl
mov	rcx, r12
mov	byte ptr [rsp + 0x80], r10b
mov	byte ptr [rsp + 0x70], r8b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x8f]
movzx	r8d, byte ptr [rsp + 0x70]
movzx	r10d, byte ptr [rsp + 0x80]
cmp	eax, -1
mov	eax, 0
cmove	r12, rax
cmovne	edx, eax
jmp	0x14005b8a5
jmp	0x14005b8a5
mov	rax, qword ptr [rsi]
mov	byte ptr [rsp + 0x80], r10b
mov	rcx, rsi
mov	byte ptr [rsp + 0x70], r8b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, byte ptr [rsp + 0x70]
movzx	r10d, byte ptr [rsp + 0x80]
cmp	eax, -1
mov	eax, 0
cmove	rsi, rax
cmovne	r8d, eax
jmp	0x14005b88b
jmp	0x14005b88b
mov	rax, qword ptr [rsi]
mov	byte ptr [rsp + 0x70], r10b
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r10d, byte ptr [rsp + 0x70]
cmp	eax, -1
mov	edx, eax
mov	eax, 0xffffffff
cmove	edx, eax
mov	eax, 0
cmove	rsi, rax
jmp	0x14005b910
jmp	0x14005b910
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	edx, eax
mov	eax, 0xffffffff
cmove	edx, eax
mov	eax, 0
cmove	rsi, rax
jmp	0x14005b94d
jmp	0x14005b94d
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
mov	r13d, dword ptr [rsp + 0x128]
mov	r14d, dword ptr [rsp + 0x130]
mov	rdi, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r12, qword ptr [r9 + 8]
mov	r15d, r14d
mov	rsi, rcx
mov	rcx, qword ptr [rip + 0x62a22]
mov	byte ptr [rsp + 0x57], r13b
mov	qword ptr [rsp + 0xf8], rdx
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x110]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rcx, qword ptr [rax + rdx*8]
test	rcx, rcx
je	0x14005c0f7
je	0x14005c0f7
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 0
cmp	byte ptr [rcx + 0x38], 0
je	0x14005c068
je	0x14005c068
movzx	eax, byte ptr [rcx + 0x5e]
mov	byte ptr [rsp + 0x90], al
test	r14b, r14b
jne	0x14005c050
jne	0x14005c050
movzx	eax, byte ptr [rsp + 0x57]
lea	r13, [rsp + 0x94]
mov	rdx, qword ptr [rsp + 0xf8]
lea	rcx, [rsp + 0x80]
mov	qword ptr [rsp + 0x40], r13
lea	r9, [rsp + 0x60]
lea	r8, [rsp + 0x70]
mov	byte ptr [rsp + 0x91], al
lea	rax, [rsp + 0x90]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x120]
mov	qword ptr [rsp + 0x70], rdi
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x118]
mov	qword ptr [rsp + 0x78], rbx
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x110]
mov	byte ptr [rsp + 0x92], r15b
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x94], 0
mov	dword ptr [rsp + 0x9c], 0
mov	qword ptr [rsp + 0x60], rbp
mov	qword ptr [rsp + 0x68], r12
call	0x1400595d0
call	0x1400595d0
mov	r14, qword ptr [rsp + 0x88]
mov	rdi, qword ptr [rsp + 0x80]
mov	rcx, r13
movabs	rdx, 0xffffffff00000000
and	rbx, rdx
mov	rdx, qword ptr [rsp + 0x120]
mov	eax, r14d
mov	qword ptr [rsp + 0x88], r14
or	rbx, rax
mov	qword ptr [rsp + 0x80], rdi
call	0x140094930
call	0x140094930
cmp	r14d, -1
sete	r13b
test	rdi, rdi
setne	al
and	al, r13b
mov	r14d, eax
jne	0x14005c0c8
jne	0x14005c0c8
cmp	r12d, -1
sete	al
test	rbp, rbp
je	0x14005c01f
je	0x14005c01f
test	al, al
jne	0x14005c0a0
jne	0x14005c0a0
cmp	r13b, al
jne	0x14005c02f
jne	0x14005c02f
mov	rax, qword ptr [rsp + 0x118]
or	dword ptr [rax], 2
mov	rax, rsi
mov	qword ptr [rsi], rdi
mov	qword ptr [rsi + 8], rbx
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	byte ptr [rsp + 0x93], 0
mov	r15d, r13d
mov	byte ptr [rsp + 0x57], r14b
jmp	0x14005bf0f
jmp	0x14005bf0f
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x58], rcx
call	0x140021cb0
call	0x140021cb0
mov	rcx, qword ptr [rsp + 0x58]
lea	rdx, [rip - 0x39bde]
mov	rax, qword ptr [rcx]
mov	r9, qword ptr [rax + 0x30]
mov	eax, 0x25
cmp	r9, rdx
je	0x14005beff
je	0x14005beff
mov	edx, 0x25
call	r9
call	r9
jmp	0x14005beff
jmp	0x14005beff
mov	rdx, qword ptr [rbp + 0x18]
xor	eax, eax
cmp	qword ptr [rbp + 0x10], rdx
jb	0x14005c01f
jb	0x14005c01f
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jmp	0x14005c01f
jmp	0x14005c01f
nop	dword ptr [rax]
mov	rax, qword ptr [rdi + 0x18]
xor	r13d, r13d
cmp	qword ptr [rdi + 0x10], rax
jb	0x14005c00b
jb	0x14005c00b
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmove	r13d, r14d
cmove	rdi, rax
jmp	0x14005c00b
jmp	0x14005c00b
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
mov	rax, qword ptr [r8]
mov	r12d, dword ptr [rsp + 0x128]
mov	r15d, dword ptr [rsp + 0x130]
mov	rbx, qword ptr [r8 + 8]
mov	rdi, qword ptr [r9]
mov	rbp, qword ptr [r9 + 8]
mov	r13d, r12d
mov	r14d, r15d
mov	rsi, rcx
mov	rcx, qword ptr [rip + 0x6278f]
mov	qword ptr [rsp + 0x50], rax
mov	qword ptr [rsp + 0xf8], rdx
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x110]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rcx, qword ptr [rax + rdx*8]
test	rcx, rcx
je	0x14005c38a
je	0x14005c38a
mov	rax, qword ptr [rsp + 0x118]
mov	dword ptr [rax], 0
cmp	byte ptr [rcx + 0x38], 0
je	0x14005c2f8
je	0x14005c2f8
movzx	eax, byte ptr [rcx + 0x5e]
mov	byte ptr [rsp + 0x90], al
test	r15b, r15b
jne	0x14005c2e0
jne	0x14005c2e0
mov	rax, qword ptr [rsp + 0x50]
mov	byte ptr [rsp + 0x91], r13b
lea	r13, [rsp + 0x94]
lea	rcx, [rsp + 0x80]
mov	qword ptr [rsp + 0x40], r13
lea	r9, [rsp + 0x60]
lea	r8, [rsp + 0x70]
mov	rdx, qword ptr [rsp + 0xf8]
mov	qword ptr [rsp + 0x70], rax
lea	rax, [rsp + 0x90]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x120]
mov	byte ptr [rsp + 0x92], r14b
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x118]
mov	qword ptr [rsp + 0x78], rbx
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x110]
mov	qword ptr [rsp + 0x94], 0
mov	qword ptr [rsp + 0x20], rax
mov	dword ptr [rsp + 0x9c], 0
mov	qword ptr [rsp + 0x60], rdi
mov	qword ptr [rsp + 0x68], rbp
call	0x1400595d0
call	0x1400595d0
mov	r14, qword ptr [rsp + 0x88]
mov	r12, qword ptr [rsp + 0x80]
mov	rcx, r13
movabs	rdx, 0xffffffff00000000
and	rbx, rdx
mov	rdx, qword ptr [rsp + 0x120]
mov	eax, r14d
mov	qword ptr [rsp + 0x88], r14
or	rbx, rax
mov	qword ptr [rsp + 0x80], r12
call	0x140094930
call	0x140094930
cmp	r14d, -1
sete	r13b
test	r12, r12
setne	al
and	al, r13b
mov	r14d, eax
jne	0x14005c358
jne	0x14005c358
cmp	ebp, -1
sete	al
test	rdi, rdi
je	0x14005c2b2
je	0x14005c2b2
test	al, al
jne	0x14005c330
jne	0x14005c330
cmp	al, r13b
jne	0x14005c2c2
jne	0x14005c2c2
mov	rax, qword ptr [rsp + 0x118]
or	dword ptr [rax], 2
mov	rax, rsi
mov	qword ptr [rsi], r12
mov	qword ptr [rsi + 8], rbx
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
mov	byte ptr [rsp + 0x93], 0
mov	r13d, r15d
mov	r14d, r12d
jmp	0x14005c1a2
jmp	0x14005c1a2
nop	dword ptr [rax + rax]
mov	qword ptr [rsp + 0x58], rcx
call	0x140021cb0
call	0x140021cb0
mov	rcx, qword ptr [rsp + 0x58]
lea	rdx, [rip - 0x39e6e]
mov	rax, qword ptr [rcx]
mov	r9, qword ptr [rax + 0x30]
mov	eax, 0x25
cmp	r9, rdx
je	0x14005c192
je	0x14005c192
mov	edx, 0x25
call	r9
call	r9
jmp	0x14005c192
jmp	0x14005c192
mov	rdx, qword ptr [rdi + 0x18]
xor	eax, eax
cmp	qword ptr [rdi + 0x10], rdx
jb	0x14005c2b2
jb	0x14005c2b2
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jmp	0x14005c2b2
jmp	0x14005c2b2
nop	dword ptr [rax]
mov	rax, qword ptr [r12 + 0x18]
xor	r13d, r13d
cmp	qword ptr [r12 + 0x10], rax
jb	0x14005c29f
jb	0x14005c29f
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
mov	eax, 0
cmove	r13d, r14d
cmove	r12, rax
jmp	0x14005c29f
jmp	0x14005c29f
call	0x1400b3a30
call	0x1400b3a30
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x829]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x14005c500
jne	0x14005c500
xor	eax, eax
ret	
ret	
nop	word ptr cs:[rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	r12, qword ptr [rsp + 0x100]
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [r9 + 8]
mov	rsi, rcx
lea	rcx, [rip + 0x5ab1d]
mov	rdi, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [r12 + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x14005c6fb
jae	0x14005c6fb
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x14005c6fb
je	0x14005c6fb
xor	r9d, r9d
lea	r8, [rip + 0x64cf8]
lea	rdx, [rip + 0x64621]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x14005c6fb
je	0x14005c6fb
mov	rax, qword ptr [rax + 0x10]
mov	rdx, rdi
lea	rcx, [rsp + 0x70]
lea	r9, [rsp + 0x50]
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x84], 0
mov	rax, qword ptr [rax + 0x10]
mov	qword ptr [rsp + 0x60], r15
lea	r15, [rsp + 0x84]
mov	qword ptr [rsp + 0x40], r15
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x110]
mov	qword ptr [rsp + 0x20], r12
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x108]
mov	qword ptr [rsp + 0x68], rbx
xor	bx, bx
mov	qword ptr [rsp + 0x28], rax
mov	dword ptr [rsp + 0x8c], 0
mov	qword ptr [rsp + 0x50], rbp
mov	qword ptr [rsp + 0x58], r13
call	0x14005e060
call	0x14005e060
mov	r12, qword ptr [rsp + 0x78]
mov	rdi, qword ptr [rsp + 0x70]
mov	rcx, r15
mov	rdx, qword ptr [rsp + 0x110]
movzx	eax, r12w
mov	qword ptr [rsp + 0x78], r12
mov	r14, rdi
or	rbx, rax
mov	qword ptr [rsp + 0x70], rdi
call	0x140094930
call	0x140094930
cmp	r12w, -1
sete	r12b
test	rdi, rdi
setne	al
and	al, r12b
mov	r15d, eax
jne	0x14005c6b8
jne	0x14005c6b8
cmp	r13w, -1
sete	al
mov	edx, eax
test	rbp, rbp
je	0x14005c663
je	0x14005c663
test	al, al
jne	0x14005c698
jne	0x14005c698
cmp	r12b, dl
jne	0x14005c673
jne	0x14005c673
mov	rax, qword ptr [rsp + 0x108]
or	dword ptr [rax], 2
mov	rax, rsi
mov	qword ptr [rsi], r14
mov	qword ptr [rsi + 8], rbx
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x14005c6e0
jae	0x14005c6e0
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	dl
cmp	r12b, dl
jne	0x14005c673
jne	0x14005c673
jmp	0x14005c668
jmp	0x14005c668
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x14005c6f0
jae	0x14005c6f0
movzx	eax, word ptr [rax]
xor	r12d, r12d
mov	r14d, 0
cmp	ax, -1
cmove	r12d, r15d
cmovne	r14, rdi
jmp	0x14005c650
jmp	0x14005c650
nop	
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14005c6a5
jmp	0x14005c6a5
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14005c6c5
jmp	0x14005c6c5
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	r12, qword ptr [rsp + 0x100]
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [r9 + 8]
mov	rsi, rcx
lea	rcx, [rip + 0x5a91d]
mov	rdi, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [r12 + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x14005c8fb
jae	0x14005c8fb
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x14005c8fb
je	0x14005c8fb
xor	r9d, r9d
lea	r8, [rip + 0x64af8]
lea	rdx, [rip + 0x64421]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x14005c8fb
je	0x14005c8fb
mov	rax, qword ptr [rax + 0x10]
mov	rdx, rdi
lea	rcx, [rsp + 0x70]
lea	r9, [rsp + 0x50]
mov	dword ptr [rsp + 0x8c], 0
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x84], 0
mov	rax, qword ptr [rax + 0x20]
mov	qword ptr [rsp + 0x60], r15
lea	r15, [rsp + 0x84]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x110]
mov	qword ptr [rsp + 0x40], r15
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x108]
mov	qword ptr [rsp + 0x20], r12
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x68], rbx
xor	bx, bx
mov	qword ptr [rsp + 0x50], rbp
mov	qword ptr [rsp + 0x58], r13
call	0x14005e060
call	0x14005e060
mov	r12, qword ptr [rsp + 0x78]
mov	rdi, qword ptr [rsp + 0x70]
mov	rcx, r15
mov	rdx, qword ptr [rsp + 0x110]
movzx	eax, r12w
mov	qword ptr [rsp + 0x78], r12
mov	r14, rdi
or	rbx, rax
mov	qword ptr [rsp + 0x70], rdi
call	0x140094930
call	0x140094930
cmp	r12w, -1
sete	r12b
test	rdi, rdi
setne	al
and	al, r12b
mov	r15d, eax
jne	0x14005c8b8
jne	0x14005c8b8
cmp	r13w, -1
sete	al
mov	edx, eax
test	rbp, rbp
je	0x14005c863
je	0x14005c863
test	al, al
jne	0x14005c898
jne	0x14005c898
cmp	r12b, dl
jne	0x14005c873
jne	0x14005c873
mov	rax, qword ptr [rsp + 0x108]
or	dword ptr [rax], 2
mov	rax, rsi
mov	qword ptr [rsi], r14
mov	qword ptr [rsi + 8], rbx
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x14005c8e0
jae	0x14005c8e0
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	dl
cmp	r12b, dl
jne	0x14005c873
jne	0x14005c873
jmp	0x14005c868
jmp	0x14005c868
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x14005c8f0
jae	0x14005c8f0
movzx	eax, word ptr [rax]
xor	r12d, r12d
mov	r14d, 0
cmp	ax, -1
cmove	r12d, r15d
cmovne	r14, rdi
jmp	0x14005c850
jmp	0x14005c850
nop	
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14005c8a5
jmp	0x14005c8a5
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14005c8c5
jmp	0x14005c8c5
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xc0
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	rbp, qword ptr [rsp + 0x120]
mov	rdi, qword ptr [rsp + 0x128]
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0x61f9b]
mov	rsi, rdx
mov	dword ptr [rsp + 0xbc], 0
movups	xmmword ptr [rsp + 0xa0], xmm0
movups	xmmword ptr [rsp + 0x90], xmm1
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r12, qword ptr [rax + rdx*8]
test	r12, r12
je	0x14005cc8b
je	0x14005cc8b
lea	rax, [rsp + 0xbc]
mov	qword ptr [rsp + 0x40], rbp
movdqu	xmm2, xmmword ptr [rsp + 0xa0]
lea	rcx, [rsp + 0x80]
mov	qword ptr [rsp + 0x48], rax
lea	r8, [rsp + 0x70]
lea	r9, [rsp + 0x60]
movdqu	xmm3, xmmword ptr [rsp + 0x90]
lea	rax, [rsp + 0xb8]
mov	rdx, rsi
mov	qword ptr [rsp + 0x38], 2
mov	qword ptr [rsp + 0x20], rax
mov	dword ptr [rsp + 0x30], 0x63
mov	dword ptr [rsp + 0x28], 0
movups	xmmword ptr [rsp + 0x70], xmm2
movups	xmmword ptr [rsp + 0x60], xmm3
call	0x14005cd90
call	0x14005cd90
mov	rax, qword ptr [rsp + 0x80]
mov	r8d, dword ptr [rsp + 0xbc]
mov	qword ptr [rsp + 0x80], rax
mov	rcx, rax
mov	qword ptr [rsp + 0xa0], rax
movzx	eax, word ptr [rsp + 0x88]
mov	word ptr [rsp + 0xa8], ax
test	r8d, r8d
je	0x14005ca98
je	0x14005ca98
or	dword ptr [rdi], 4
cmp	word ptr [rsp + 0xa8], -1
sete	sil
test	rcx, rcx
je	0x14005ca47
je	0x14005ca47
test	sil, sil
jne	0x14005cb58
jne	0x14005cb58
cmp	word ptr [rsp + 0x98], -1
mov	rcx, qword ptr [rsp + 0x90]
sete	al
mov	edx, eax
test	rcx, rcx
je	0x14005ca6a
je	0x14005ca6a
test	al, al
jne	0x14005caf0
jne	0x14005caf0
cmp	sil, dl
jne	0x14005ca72
jne	0x14005ca72
or	dword ptr [rdi], 2
movdqu	xmm4, xmmword ptr [rsp + 0xa0]
mov	rax, rbx
movups	xmmword ptr [rbx], xmm4
add	rsp, 0xc0
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax + rax]
lea	r13, [rsp + 0x90]
lea	rsi, [rsp + 0xa0]
mov	rdx, r13
mov	rcx, rsi
call	0x140020940
call	0x140020940
mov	ebp, dword ptr [rsp + 0xb8]
test	al, al
je	0x14005cba0
je	0x14005cba0
cmp	ebp, 0x44
jle	0x14005cb90
jle	0x14005cb90
cmp	word ptr [rsp + 0xa8], -1
mov	rcx, qword ptr [rsp + 0xa0]
sete	sil
mov	rax, qword ptr [rsp + 0x130]
mov	dword ptr [rax + 0x14], ebp
jmp	0x14005ca39
jmp	0x14005ca39
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14005cc80
jae	0x14005cc80
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	dl
cmp	sil, dl
jne	0x14005ca72
jne	0x14005ca72
jmp	0x14005ca6f
jmp	0x14005ca6f
nop	word ptr cs:[rax + rax]
mov	qword ptr [rsp + 0x58], rcx
call	0x140092490
call	0x140092490
mov	eax, 0xffffffff
mov	rcx, qword ptr [rsp + 0x58]
mov	word ptr [rsp + 0xa8], ax
lea	eax, [rbp + rbp*4]
lea	eax, [rsi + rax*2 - 0x79c]
mov	rsi, qword ptr [rsp + 0x130]
mov	dword ptr [rsi + 0x14], eax
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14005cc70
jae	0x14005cc70
movzx	eax, word ptr [rax]
xor	esi, esi
cmp	ax, -1
jne	0x14005ca47
jne	0x14005ca47
mov	qword ptr [rsp + 0xa0], 0
mov	esi, 1
jmp	0x14005ca47
jmp	0x14005ca47
nop	dword ptr [rax + rax]
add	ebp, 0x64
jmp	0x14005cacb
jmp	0x14005cacb
nop	dword ptr [rax + rax]
mov	rcx, rsi
call	0x1400209f0
call	0x1400209f0
mov	r8d, 0x2a
mov	rcx, r12
movzx	edx, ax
mov	rax, qword ptr [r12]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
movsx	r14d, al
lea	eax, [r14 - 0x30]
cmp	al, 9
ja	0x14005cac2
ja	0x14005cac2
mov	rcx, qword ptr [rsp + 0xa0]
call	0x140092490
call	0x140092490
mov	edx, 0xffffffff
lea	eax, [rbp + rbp*4]
mov	rcx, rsi
mov	word ptr [rsp + 0xa8], dx
lea	ebp, [r14 + rax*2 - 0x30]
mov	rdx, r13
mov	dword ptr [rsp + 0xb8], ebp
call	0x140020940
call	0x140020940
test	al, al
je	0x14005cc28
je	0x14005cc28
cmp	word ptr [rsp + 0xa8], -1
mov	rcx, qword ptr [rsp + 0xa0]
sete	sil
sub	ebp, 0x76c
jmp	0x14005cae0
jmp	0x14005cae0
nop	dword ptr [rax]
mov	rcx, rsi
call	0x1400209f0
call	0x1400209f0
mov	rcx, r12
mov	r8d, 0x2a
movzx	edx, ax
mov	rax, qword ptr [r12]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
mov	rcx, qword ptr [rsp + 0xa0]
movsx	esi, al
lea	eax, [rsi - 0x30]
cmp	al, 9
jbe	0x14005cb20
jbe	0x14005cb20
cmp	word ptr [rsp + 0xa8], -1
sete	sil
jmp	0x14005cc19
jmp	0x14005cc19
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14005cb69
jmp	0x14005cb69
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14005cb01
jmp	0x14005cb01
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9 + 8]
mov	rdi, qword ptr [r8]
mov	r13, qword ptr [r9]
mov	qword ptr [rsp + 0x80], rcx
mov	rcx, qword ptr [rip + 0x61b23]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0xc0]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r15, qword ptr [rax + rdx*8]
test	r15, r15
je	0x14005d039
je	0x14005d039
cmp	bp, -1
mov	eax, esi
mov	qword ptr [rsp + 0x20], rsi
mov	rsi, r15
sete	r12b
xor	r14d, r14d
mov	r15, qword ptr [rsp + 0xb8]
xor	ebp, ebp
mov	rbx, r14
mov	r14d, eax
jmp	0x14005ce9c
jmp	0x14005ce9c
nop	
test	r13, r13
mov	r8d, r11d
setne	dl
and	dl, r12b
jne	0x14005cef0
jne	0x14005cef0
mov	edx, r12d
cmp	r8b, dl
je	0x14005cf20
je	0x14005cf20
cmp	rbx, r15
jae	0x14005cf20
jae	0x14005cf20
test	rdi, rdi
je	0x14005ce45
je	0x14005ce45
test	r11b, r11b
jne	0x14005cf80
jne	0x14005cf80
movzx	edx, r14w
mov	rax, qword ptr [rsi]
mov	r8d, 0x2a
mov	rcx, rsi
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
lea	edx, [rax - 0x30]
cmp	dl, 9
ja	0x14005cf20
ja	0x14005cf20
lea	edx, [rbp + rbp*4]
movsx	eax, al
lea	ebp, [rax + rdx*2 - 0x30]
cmp	ebp, dword ptr [rsp + 0xb0]
jg	0x14005cfc0
jg	0x14005cfc0
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x14005cfa0
jae	0x14005cfa0
add	rax, 2
mov	qword ptr [rdi + 0x10], rax
add	rbx, 1
mov	r14d, 0xffffffff
cmp	r14w, -1
sete	r11b
test	rdi, rdi
setne	r8b
and	r8b, r11b
je	0x14005ce10
je	0x14005ce10
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x14005d000
jae	0x14005d000
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r8d, eax
mov	eax, 0
cmove	rdi, rax
test	r13, r13
setne	dl
and	dl, r12b
je	0x14005ce22
je	0x14005ce22
nop	dword ptr [rax + rax]
mov	rax, qword ptr [r13 + 0x10]
cmp	rax, qword ptr [r13 + 0x18]
jae	0x14005cfd0
jae	0x14005cfd0
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edx, eax
mov	eax, 0
cmove	r13, rax
cmp	r8b, dl
jne	0x14005ce2e
jne	0x14005ce2e
nop	
mov	eax, r14d
mov	r14, rbx
mov	rsi, qword ptr [rsp + 0x20]
test	r14, r14
mov	ebx, eax
setne	dl
cmp	ebp, dword ptr [rsp + 0xa8]
setge	al
test	dl, al
je	0x14005cf4a
je	0x14005cf4a
cmp	ebp, dword ptr [rsp + 0xb0]
jle	0x14005cfb0
jle	0x14005cfb0
mov	rax, qword ptr [rsp + 0xc8]
or	dword ptr [rax], 4
mov	rax, qword ptr [rsp + 0x80]
mov	si, bx
mov	qword ptr [rax], rdi
mov	qword ptr [rax + 8], rsi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x14005d028
jae	0x14005d028
movzx	edx, word ptr [rax]
xor	eax, eax
cmp	dx, -1
cmove	rdi, rax
jmp	0x14005ce49
jmp	0x14005ce49
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x14005ce92
jmp	0x14005ce92
nop	
mov	rax, qword ptr [rsp + 0xa0]
mov	dword ptr [rax], ebp
jmp	0x14005cf55
jmp	0x14005cf55
nop	dword ptr [rax]
mov	rsi, qword ptr [rsp + 0x20]
mov	ebx, r14d
jmp	0x14005cf4a
jmp	0x14005cf4a
nop	word ptr [rax + rax]
mov	rax, qword ptr [r13]
mov	byte ptr [rsp + 0x2f], dl
mov	rcx, r13
mov	byte ptr [rsp + 0x2e], r8b
mov	byte ptr [rsp + 0x2d], r11b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x2f]
movzx	r8d, byte ptr [rsp + 0x2e]
movzx	r11d, byte ptr [rsp + 0x2d]
jmp	0x14005cf01
jmp	0x14005cf01
nop	
mov	rax, qword ptr [rdi]
mov	byte ptr [rsp + 0x2e], r8b
mov	rcx, rdi
mov	byte ptr [rsp + 0x2d], r11b
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, byte ptr [rsp + 0x2e]
movzx	r11d, byte ptr [rsp + 0x2d]
jmp	0x14005cec6
jmp	0x14005cec6
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, ax
jmp	0x14005cf91
jmp	0x14005cf91
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x138
movups	xmmword ptr [rsp + 0x110], xmm6
movups	xmmword ptr [rsp + 0x120], xmm7
mov	r12, qword ptr [rsp + 0x1a0]
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [r9 + 8]
mov	r14, qword ptr [rsp + 0x1a8]
mov	rsi, rcx
lea	rcx, [rip + 0x59fd5]
mov	rdi, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [r12 + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x14005d306
jae	0x14005d306
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x14005d306
je	0x14005d306
xor	r9d, r9d
lea	r8, [rip + 0x641b0]
lea	rdx, [rip + 0x63ad9]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x14005d306
je	0x14005d306
mov	rax, qword ptr [rax + 0x10]
mov	rdx, rdi
lea	r9, [rsp + 0x60]
lea	rcx, [rsp + 0x80]
mov	dword ptr [rsp + 0x9c], 0
lea	r8, [rsp + 0x70]
movdqu	xmm2, xmmword ptr [rax + 0x58]
movdqu	xmm1, xmmword ptr [rax + 0x68]
movdqu	xmm0, xmmword ptr [rax + 0x78]
movdqu	xmm6, xmmword ptr [rax + 0x88]
movdqu	xmm5, xmmword ptr [rax + 0x98]
movdqu	xmm4, xmmword ptr [rax + 0xa8]
movdqu	xmm3, xmmword ptr [rax + 0xb8]
lea	rax, [rsp + 0x9c]
mov	qword ptr [rsp + 0x38], r12
movdqu	xmm7, xmm6
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xa0]
shufpd	xmm7, xmm5, 1
shufpd	xmm5, xmm4, 1
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x98]
shufpd	xmm4, xmm3, 1
shufpd	xmm3, xmm2, 1
mov	qword ptr [rsp + 0x20], rax
shufpd	xmm2, xmm1, 1
shufpd	xmm1, xmm0, 1
shufpd	xmm0, xmm6, 1
mov	qword ptr [rsp + 0x30], 7
mov	qword ptr [rsp + 0x78], rbx
xor	bx, bx
mov	qword ptr [rsp + 0x70], r15
mov	qword ptr [rsp + 0x60], rbp
mov	qword ptr [rsp + 0x68], r13
movups	xmmword ptr [rsp + 0xa0], xmm7
movups	xmmword ptr [rsp + 0xb0], xmm5
movups	xmmword ptr [rsp + 0xc0], xmm4
movups	xmmword ptr [rsp + 0xd0], xmm3
movups	xmmword ptr [rsp + 0xe0], xmm2
movups	xmmword ptr [rsp + 0xf0], xmm1
movups	xmmword ptr [rsp + 0x100], xmm0
call	0x14005fd00
call	0x14005fd00
mov	rax, qword ptr [rsp + 0x88]
mov	rdi, qword ptr [rsp + 0x80]
mov	ecx, dword ptr [rsp + 0x9c]
movzx	edx, ax
mov	qword ptr [rsp + 0x80], rdi
or	rbx, rdx
mov	qword ptr [rsp + 0x88], rax
mov	rdx, rdi
test	ecx, ecx
je	0x14005d278
je	0x14005d278
or	dword ptr [r14], 4
cmp	ax, -1
sete	r12b
test	rdi, rdi
setne	al
and	al, r12b
mov	r15d, eax
jne	0x14005d290
jne	0x14005d290
cmp	r13w, -1
sete	al
mov	ecx, eax
test	rbp, rbp
je	0x14005d23d
je	0x14005d23d
test	al, al
jne	0x14005d2c0
jne	0x14005d2c0
cmp	cl, r12b
jne	0x14005d246
jne	0x14005d246
or	dword ptr [r14], 2
mov	qword ptr [rsi], rdx
mov	rax, rsi
mov	qword ptr [rsi + 8], rbx
movups	xmm6, xmmword ptr [rsp + 0x110]
movups	xmm7, xmmword ptr [rsp + 0x120]
add	rsp, 0x138
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x1b0]
mov	r8d, dword ptr [rsp + 0x98]
mov	dword ptr [rcx + 0x18], r8d
jmp	0x14005d210
jmp	0x14005d210
nop	
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x14005d2e0
jae	0x14005d2e0
movzx	eax, word ptr [rax]
xor	r12d, r12d
mov	edx, 0
cmp	ax, -1
cmove	r12d, r15d
cmovne	rdx, rdi
jmp	0x14005d226
jmp	0x14005d226
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x14005d2f0
jae	0x14005d2f0
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	cl
jmp	0x14005d23d
jmp	0x14005d23d
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14005d29d
jmp	0x14005d29d
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbp]
mov	qword ptr [rsp + 0x58], rdx
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rdx, qword ptr [rsp + 0x58]
jmp	0x14005d2cd
jmp	0x14005d2cd
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
lea	rbp, [rsp + 0xa0]
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	rsi, qword ptr [rbp + 0x80]
mov	qword ptr [rbp + 0x50], rcx
mov	rcx, qword ptr [rip + 0x61599]
movups	xmmword ptr [rbp - 0x10], xmm0
movups	xmmword ptr [rbp - 0x20], xmm1
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp + 0x88]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rbx, qword ptr [rax + rdx*8]
test	rbx, rbx
je	0x14005dc47
je	0x14005dc47
mov	rax, rsi
shl	rax, 4
call	0x14000c150
call	0x14000c150
sub	rsp, rax
lea	rax, [rbp - 0x10]
lea	rdx, [rbp - 0x20]
mov	rcx, rax
mov	qword ptr [rbp - 0x70], rdx
lea	r12, [rsp + 0x20]
mov	qword ptr [rbp - 0x60], rax
call	0x140020940
call	0x140020940
test	al, al
je	0x14005d3cd
je	0x14005d3cd
mov	rax, qword ptr [rbp + 0x90]
or	dword ptr [rax], 4
mov	rax, qword ptr [rbp + 0x50]
movdqu	xmm2, xmmword ptr [rbp - 0x10]
movups	xmmword ptr [rax], xmm2
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
mov	rcx, qword ptr [rbp - 0x60]
call	0x1400209f0
call	0x1400209f0
mov	rcx, rbx
movzx	r13d, ax
mov	rax, qword ptr [rbx]
mov	edx, r13d
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	edx, r13d
mov	rcx, rbx
mov	edi, eax
mov	rax, qword ptr [rbx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	r13d, eax
test	rsi, rsi
je	0x14005d3a6
je	0x14005d3a6
lea	rax, [r12 + rsi*8]
xor	r8d, r8d
mov	qword ptr [rbp - 0x40], r12
mov	r15, qword ptr [rbp + 0x78]
mov	r12, rbx
mov	qword ptr [rbp - 0x38], rax
xor	r14d, r14d
mov	rbx, r8
mov	word ptr [rbp - 0x30], r13w
jmp	0x14005d429
jmp	0x14005d429
nop	
add	rbx, 1
cmp	rsi, rbx
je	0x14005d48f
je	0x14005d48f
mov	rax, qword ptr [r15 + rbx*8]
mov	rcx, r12
movzx	edx, word ptr [rax]
mov	rax, qword ptr [r12]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
cmp	di, ax
je	0x14005d456
je	0x14005d456
mov	rax, qword ptr [r15 + rbx*8]
mov	rcx, r12
movzx	edx, word ptr [rax]
mov	rax, qword ptr [r12]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	word ptr [rbp - 0x30], ax
jne	0x14005d420
jne	0x14005d420
mov	rax, qword ptr [rbp - 0x38]
lea	r13, [r14*8]
mov	rcx, qword ptr [r15 + rbx*8]
add	r14, 1
lea	r10, [rax + r13]
mov	qword ptr [rbp - 0x28], r10
call	0x140015a60
call	0x140015a60
mov	r10, qword ptr [rbp - 0x28]
mov	qword ptr [r10], rax
mov	rax, qword ptr [rbp - 0x40]
mov	qword ptr [rax + r13], rbx
add	rbx, 1
cmp	rsi, rbx
jne	0x14005d429
jne	0x14005d429
mov	r8, rbx
mov	rbx, r12
mov	r12, qword ptr [rbp - 0x40]
cmp	r14, 1
jbe	0x14005dbef
jbe	0x14005dbef
mov	rax, qword ptr [rbp - 0x38]
mov	qword ptr [rbp - 0x68], r8
xor	edx, edx
mov	r13, rbx
lea	rsi, [r14*8]
mov	rdi, qword ptr [rax]
add	rax, 8
mov	qword ptr [rbp - 0x48], rsi
mov	qword ptr [rbp - 0x58], rax
mov	rbx, rdi
mov	rdi, rdx
nop	dword ptr [rax]
mov	rsi, qword ptr [rbp - 0x38]
mov	rdx, qword ptr [rbp - 0x48]
mov	r11, qword ptr [rbp - 0x58]
lea	rcx, [rsi + rdx]
mov	rsi, rbx
mov	rdx, rcx
mov	rax, r11
sub	rdx, r11
and	edx, 8
je	0x14005d510
je	0x14005d510
mov	rax, qword ptr [rbp - 0x58]
mov	rsi, qword ptr [rax]
mov	rax, qword ptr [rbp - 0x38]
cmp	rbx, rsi
cmovbe	rsi, rbx
add	rax, 0x10
cmp	rcx, rax
je	0x14005d52e
je	0x14005d52e
nop	dword ptr [rax]
mov	rdx, qword ptr [rax]
cmp	rsi, rdx
cmova	rsi, rdx
mov	rdx, qword ptr [rax + 8]
cmp	rsi, rdx
cmova	rsi, rdx
add	rax, 0x10
cmp	rcx, rax
jne	0x14005d510
jne	0x14005d510
mov	rcx, qword ptr [rbp - 0x10]
add	rdi, 1
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14005d8b8
jae	0x14005d8b8
add	rax, 2
mov	qword ptr [rcx + 0x10], rax
mov	ecx, 0xffffffff
mov	word ptr [rbp - 8], cx
cmp	rdi, rsi
je	0x14005d8d0
je	0x14005d8d0
cmp	rdi, rsi
jae	0x14005d6bb
jae	0x14005d6bb
movzx	ebx, word ptr [rbp - 8]
mov	rcx, qword ptr [rbp - 0x10]
cmp	bx, -1
sete	r15b
test	rcx, rcx
je	0x14005d585
je	0x14005d585
test	r15b, r15b
jne	0x14005d830
jne	0x14005d830
mov	esi, r15d
cmp	word ptr [rbp - 0x18], -1
mov	rcx, qword ptr [rbp - 0x20]
sete	al
mov	edx, eax
test	rcx, rcx
je	0x14005d5a3
je	0x14005d5a3
test	al, al
jne	0x14005d690
jne	0x14005d690
cmp	sil, dl
je	0x14005d6bb
je	0x14005d6bb
mov	rsi, qword ptr [rbp - 0x10]
test	rsi, rsi
je	0x14005d5be
je	0x14005d5be
test	r15b, r15b
jne	0x14005d860
jne	0x14005d860
movzx	edx, bx
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	word ptr [rbp - 0x28], ax
mov	rax, qword ptr [r13]
mov	rcx, r13
movzx	edx, bx
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	ecx, eax
test	r14, r14
je	0x14005d3a6
je	0x14005d3a6
lea	rax, [rdi + rdi]
mov	qword ptr [rbp - 0x50], rdi
xor	esi, esi
mov	rdi, r13
mov	qword ptr [rbp - 0x30], rax
mov	word ptr [rbp - 0x40], cx
jmp	0x14005d63c
jmp	0x14005d63c
nop	
mov	rax, qword ptr [rdi]
movzx	edx, word ptr [r13]
mov	rcx, rdi
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	word ptr [rbp - 0x40], ax
je	0x14005d66b
je	0x14005d66b
sub	r14, 1
mov	rcx, qword ptr [rbp - 0x38]
lea	rax, [r14*8]
mov	qword ptr [rbp - 0x48], rax
mov	rax, qword ptr [r12 + r14*8]
mov	qword ptr [r15], rax
mov	rax, qword ptr [rcx + r14*8]
mov	qword ptr [rcx + rbx], rax
cmp	rsi, r14
jae	0x14005d674
jae	0x14005d674
lea	rbx, [rsi*8]
mov	rcx, qword ptr [rbp + 0x78]
mov	r13, qword ptr [rbp - 0x30]
lea	r15, [r12 + rbx]
mov	rax, qword ptr [r15]
add	r13, qword ptr [rcx + rax*8]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
movzx	edx, word ptr [r13]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
cmp	word ptr [rbp - 0x28], ax
jne	0x14005d600
jne	0x14005d600
add	rsi, 1
cmp	rsi, r14
jb	0x14005d63c
jb	0x14005d63c
mov	r13, rdi
mov	rdi, qword ptr [rbp - 0x50]
cmp	r14, 1
jbe	0x14005d6bb
jbe	0x14005d6bb
mov	rax, qword ptr [rbp - 0x38]
mov	rbx, qword ptr [rax]
jmp	0x14005d4d0
jmp	0x14005d4d0
nop	dword ptr [rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14005db71
jae	0x14005db71
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14005db0f
je	0x14005db0f
cmp	ax, -1
sete	dl
cmp	sil, dl
jne	0x14005d5ac
jne	0x14005d5ac
mov	rbx, r13
cmp	r14, 1
jne	0x14005d3a6
jne	0x14005d3a6
mov	rcx, qword ptr [rbp - 0x10]
mov	rsi, rdi
add	rsi, 1
call	0x140092490
call	0x140092490
mov	edx, 0xffffffff
mov	word ptr [rbp - 8], dx
mov	rax, qword ptr [r12]
mov	rdi, qword ptr [rbp + 0x78]
mov	r14, qword ptr [rdi + rax*8]
mov	rdi, qword ptr [rbp - 0x38]
mov	rcx, qword ptr [rdi]
cmp	rsi, rcx
jae	0x14005da9e
jae	0x14005da9e
mov	r15, qword ptr [rbp - 0x10]
cmp	word ptr [rbp - 0x18], -1
mov	qword ptr [rbp - 0x30], rcx
mov	qword ptr [rbp - 0x38], rax
movzx	edi, word ptr [rbp - 8]
mov	rdx, r15
sete	byte ptr [rbp - 0x28]
mov	r15, rbx
mov	rbx, rdx
jmp	0x14005d7eb
jmp	0x14005d7eb
nop	dword ptr [rax]
mov	r12d, r13d
mov	rcx, qword ptr [rbp - 0x20]
test	rcx, rcx
je	0x14005d73e
je	0x14005d73e
cmp	byte ptr [rbp - 0x28], 0
jne	0x14005da6b
jne	0x14005da6b
movzx	eax, byte ptr [rbp - 0x28]
cmp	r12b, al
je	0x14005da96
je	0x14005da96
mov	rax, qword ptr [r15]
movzx	edx, word ptr [r14 + rsi*2]
mov	rcx, r15
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	rbx, qword ptr [rbp - 0x10]
mov	r12d, eax
test	rbx, rbx
je	0x14005d76e
je	0x14005d76e
test	r13b, r13b
jne	0x14005dab0
jne	0x14005dab0
movzx	edx, di
mov	rax, qword ptr [r15]
mov	rcx, r15
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
cmp	ax, r12w
je	0x14005d7b9
je	0x14005d7b9
mov	rax, qword ptr [r15]
movzx	edx, word ptr [r14 + rsi*2]
mov	rcx, r15
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	r12d, eax
test	rbx, rbx
je	0x14005d79f
je	0x14005d79f
test	r13b, r13b
jne	0x14005dada
jne	0x14005dada
mov	rax, qword ptr [r15]
movzx	edx, di
mov	rcx, r15
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	ax, r12w
jne	0x14005da96
jne	0x14005da96
mov	rbx, qword ptr [rbp - 0x10]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14005db47
jae	0x14005db47
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
mov	eax, 0xffffffff
add	rsi, 1
mov	edi, 0xffffffff
mov	word ptr [rbp - 8], ax
cmp	qword ptr [rbp - 0x30], rsi
je	0x14005db8c
je	0x14005db8c
cmp	di, -1
sete	r13b
test	rbx, rbx
je	0x14005d728
je	0x14005d728
test	r13b, r13b
je	0x14005d728
je	0x14005d728
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14005dbc0
jae	0x14005dbc0
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14005dba8
je	0x14005dba8
cmp	ax, -1
sete	r12b
jmp	0x14005d72b
jmp	0x14005d72b
nop	dword ptr [rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14005db66
jae	0x14005db66
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14005db02
je	0x14005db02
cmp	ax, -1
sete	sil
jmp	0x14005d588
jmp	0x14005d588
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x14005db55
jae	0x14005db55
movzx	edx, word ptr [rax]
cmp	dx, -1
je	0x14005db1c
je	0x14005db1c
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	word ptr [rbp - 0x28], ax
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x14005db7c
jae	0x14005db7c
movzx	ebx, word ptr [rax]
cmp	bx, -1
jne	0x14005d5cf
jne	0x14005d5cf
mov	qword ptr [rbp - 0x10], 0
jmp	0x14005d5cf
jmp	0x14005d5cf
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	ecx, 0xffffffff
mov	word ptr [rbp - 8], cx
cmp	rdi, rsi
jne	0x14005d55e
jne	0x14005d55e
mov	r15, qword ptr [rbp - 0x60]
mov	rdx, qword ptr [rbp - 0x70]
mov	rcx, r15
call	0x140020940
call	0x140020940
test	al, al
mov	byte ptr [rbp - 0x50], al
jne	0x14005db29
jne	0x14005db29
mov	rcx, r15
call	0x1400209f0
call	0x1400209f0
mov	rcx, r13
movzx	edx, ax
mov	rax, qword ptr [r13]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	rcx, r15
xor	r15d, r15d
mov	word ptr [rbp - 0x28], ax
call	0x1400209f0
call	0x1400209f0
mov	rcx, r13
movzx	edx, ax
mov	rax, qword ptr [r13]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
movzx	r10d, byte ptr [rbp - 0x50]
mov	qword ptr [rbp - 0x78], rbx
mov	word ptr [rbp - 0x40], ax
lea	rax, [rdi + rdi]
mov	qword ptr [rbp - 0x30], rax
mov	byte ptr [rbp - 0x79], r10b
mov	qword ptr [rbp - 0x50], rdi
mov	rdi, r12
mov	r12, r15
mov	r15, qword ptr [rbp - 0x38]
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi + r12*8]
mov	rbx, qword ptr [rbp + 0x78]
mov	rax, qword ptr [rbx + rax*8]
cmp	rsi, qword ptr [r15 + r12*8]
jae	0x14005d98f
jae	0x14005d98f
mov	rbx, qword ptr [rbp - 0x30]
mov	rcx, r13
add	rbx, rax
mov	rax, qword ptr [r13]
movzx	edx, word ptr [rbx]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
cmp	word ptr [rbp - 0x28], ax
je	0x14005db31
je	0x14005db31
mov	rax, qword ptr [r13]
movzx	edx, word ptr [rbx]
mov	rcx, r13
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	word ptr [rbp - 0x40], ax
je	0x14005db31
je	0x14005db31
add	r12, 1
cmp	r12, r14
jne	0x14005d948
jne	0x14005d948
mov	r12, rdi
movzx	r10d, byte ptr [rbp - 0x79]
mov	rbx, qword ptr [rbp - 0x78]
mov	rdi, qword ptr [rbp - 0x50]
mov	rcx, qword ptr [rbp - 0x38]
mov	r8, qword ptr [rbp - 0x48]
xor	eax, eax
jmp	0x14005d9c5
jmp	0x14005d9c5
nop	dword ptr [rax]
add	rax, 1
cmp	rax, r14
jae	0x14005d9f1
jae	0x14005d9f1
mov	rbx, qword ptr [rcx + rax*8]
cmp	rbx, rsi
sete	dl
cmp	dl, r10b
jne	0x14005d9b8
jne	0x14005d9b8
sub	r14, 1
mov	rdx, qword ptr [r12 + r14*8]
lea	r8, [r14*8]
mov	qword ptr [r12 + rax*8], rdx
mov	rdx, qword ptr [rcx + r14*8]
mov	qword ptr [rcx + rax*8], rdx
cmp	rax, r14
jb	0x14005d9c1
jb	0x14005d9c1
mov	qword ptr [rbp - 0x48], r8
test	r10b, r10b
je	0x14005dbf6
je	0x14005dbf6
mov	rbx, qword ptr [rbp - 0x38]
mov	rsi, qword ptr [rbx]
cmp	r14, 1
jbe	0x14005d55e
jbe	0x14005d55e
mov	r9, qword ptr [rbp - 0x58]
lea	rcx, [rbx + r8]
mov	rdx, rcx
sub	rdx, r9
mov	rax, r9
and	edx, 8
je	0x14005da48
je	0x14005da48
mov	rax, qword ptr [rbp - 0x58]
mov	rax, qword ptr [rax]
cmp	rsi, rax
cmova	rsi, rax
mov	rax, qword ptr [rbp - 0x38]
add	rax, 0x10
cmp	rcx, rax
je	0x14005d55e
je	0x14005d55e
nop	dword ptr [rax]
mov	rdx, qword ptr [rax]
cmp	rsi, rdx
cmova	rsi, rdx
mov	rdx, qword ptr [rax + 8]
cmp	rsi, rdx
cmova	rsi, rdx
add	rax, 0x10
cmp	rcx, rax
jne	0x14005da48
jne	0x14005da48
jmp	0x14005d55e
jmp	0x14005d55e
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14005dbb5
jae	0x14005dbb5
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14005db9b
je	0x14005db9b
cmp	ax, -1
sete	al
cmp	r12b, al
jne	0x14005d74b
jne	0x14005d74b
mov	rcx, qword ptr [rbp - 0x30]
mov	rax, qword ptr [rbp - 0x38]
cmp	rsi, rcx
jne	0x14005d3a6
jne	0x14005d3a6
jmp	0x14005db90
jmp	0x14005db90
nop	dword ptr [rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14005dbce
jae	0x14005dbce
movzx	edx, word ptr [rax]
cmp	dx, -1
jne	0x14005d771
jne	0x14005d771
mov	qword ptr [rbp - 0x10], 0
xor	ebx, ebx
jmp	0x14005d771
jmp	0x14005d771
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x14005dbdf
jae	0x14005dbdf
movzx	edi, word ptr [rax]
cmp	di, -1
jne	0x14005d79f
jne	0x14005d79f
mov	qword ptr [rbp - 0x10], 0
jmp	0x14005d79f
jmp	0x14005d79f
mov	qword ptr [rbp - 0x10], 0
jmp	0x14005d84b
jmp	0x14005d84b
mov	qword ptr [rbp - 0x20], 0
jmp	0x14005d6ab
jmp	0x14005d6ab
mov	qword ptr [rbp - 0x10], 0
jmp	0x14005d5c1
jmp	0x14005d5c1
xor	r10d, r10d
jmp	0x14005d9a8
jmp	0x14005d9a8
mov	r12, rdi
mov	rbx, qword ptr [rbp - 0x78]
mov	rdi, qword ptr [rbp - 0x50]
mov	r10d, 1
jmp	0x14005d9a8
jmp	0x14005d9a8
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x14005d7cf
jmp	0x14005d7cf
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, ax
jmp	0x14005d871
jmp	0x14005d871
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14005d841
jmp	0x14005d841
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14005d6a1
jmp	0x14005d6a1
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebx, eax
jmp	0x14005d89a
jmp	0x14005d89a
mov	rax, qword ptr [rbp - 0x38]
mov	rdx, qword ptr [rbp + 0x70]
mov	dword ptr [rdx], eax
jmp	0x14005d3b0
jmp	0x14005d3b0
mov	qword ptr [rbp - 0x20], 0
jmp	0x14005da86
jmp	0x14005da86
mov	qword ptr [rbp - 0x10], 0
jmp	0x14005d820
jmp	0x14005d820
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14005da7c
jmp	0x14005da7c
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14005d816
jmp	0x14005d816
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, ax
jmp	0x14005dac1
jmp	0x14005dac1
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edi, eax
jmp	0x14005daeb
jmp	0x14005daeb
xor	edi, edi
jmp	0x14005d6be
jmp	0x14005d6be
mov	r8, qword ptr [rbp - 0x68]
mov	rbx, r13
cmp	r14, 2
je	0x14005dc18
je	0x14005dc18
cmp	r14, 1
je	0x14005d6e1
je	0x14005d6e1
jmp	0x14005d3a6
jmp	0x14005d3a6
nop	word ptr [rax + rax]
test	r8b, 1
jne	0x14005d3a6
jne	0x14005d3a6
mov	rax, qword ptr [r12]
shr	r8, 1
mov	rdx, qword ptr [r12 + 8]
mov	r15, r8
cmp	rax, r8
jae	0x14005dc4c
jae	0x14005dc4c
add	r15, rax
cmp	r15, rdx
jne	0x14005d3a6
jne	0x14005d3a6
jmp	0x14005d6e5
jmp	0x14005d6e5
call	0x1400b3a30
call	0x1400b3a30
sub	rax, r8
cmp	rax, rdx
jne	0x14005d3a6
jne	0x14005d3a6
mov	rdi, qword ptr [rbp - 0x38]
mov	qword ptr [r12], rax
mov	rax, qword ptr [rdi + 8]
mov	qword ptr [rdi], rax
mov	rax, qword ptr [r12]
jmp	0x14005d6e5
jmp	0x14005d6e5
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x1c8
movups	xmmword ptr [rsp + 0x160], xmm6
movups	xmmword ptr [rsp + 0x170], xmm7
movups	xmmword ptr [rsp + 0x180], xmm8
movups	xmmword ptr [rsp + 0x190], xmm9
movups	xmmword ptr [rsp + 0x1a0], xmm10
movups	xmmword ptr [rsp + 0x1b0], xmm11
mov	r12, qword ptr [rsp + 0x230]
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	rbp, qword ptr [r9]
mov	r13, qword ptr [r9 + 8]
mov	r14, qword ptr [rsp + 0x238]
mov	rsi, rcx
lea	rcx, [rip + 0x59381]
mov	rdi, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [r12 + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x14005dfc6
jae	0x14005dfc6
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x14005dfc6
je	0x14005dfc6
xor	r9d, r9d
lea	r8, [rip + 0x6355c]
lea	rdx, [rip + 0x62e85]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x14005dfc6
je	0x14005dfc6
mov	rax, qword ptr [rax + 0x10]
mov	rdx, rdi
mov	dword ptr [rsp + 0x9c], 0
lea	rcx, [rsp + 0x80]
lea	r9, [rsp + 0x60]
lea	r8, [rsp + 0x70]
movdqu	xmm5, xmmword ptr [rax + 0xc8]
movdqu	xmm4, xmmword ptr [rax + 0xd8]
movdqu	xmm3, xmmword ptr [rax + 0xe8]
movdqu	xmm2, xmmword ptr [rax + 0xf8]
movdqu	xmm1, xmmword ptr [rax + 0x108]
movdqu	xmm0, xmmword ptr [rax + 0x118]
movups	xmmword ptr [rsp + 0x100], xmm5
movdqu	xmm7, xmmword ptr [rax + 0x168]
movdqu	xmm6, xmmword ptr [rax + 0x178]
movups	xmmword ptr [rsp + 0x110], xmm4
movdqu	xmm10, xmmword ptr [rax + 0x138]
movdqu	xmm9, xmmword ptr [rax + 0x148]
movups	xmmword ptr [rsp + 0x120], xmm3
movdqu	xmm8, xmmword ptr [rax + 0x158]
movups	xmmword ptr [rsp + 0x130], xmm2
movdqu	xmm11, xmmword ptr [rax + 0x128]
lea	rax, [rsp + 0x9c]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xa0]
mov	qword ptr [rsp + 0x78], rbx
xor	bx, bx
movups	xmmword ptr [rsp + 0x140], xmm1
movups	xmmword ptr [rsp + 0x150], xmm0
mov	qword ptr [rsp + 0x70], r15
mov	qword ptr [rsp + 0x60], rbp
mov	qword ptr [rsp + 0x68], r13
mov	qword ptr [rsp + 0x38], r12
movups	xmmword ptr [rsp + 0xa0], xmm11
movups	xmmword ptr [rsp + 0xb0], xmm10
movups	xmmword ptr [rsp + 0xc0], xmm9
movups	xmmword ptr [rsp + 0xd0], xmm8
movups	xmmword ptr [rsp + 0xe0], xmm7
movups	xmmword ptr [rsp + 0xf0], xmm6
mov	qword ptr [rsp + 0x30], 0xc
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0x98]
mov	qword ptr [rsp + 0x20], rax
call	0x14005fd00
call	0x14005fd00
mov	rax, qword ptr [rsp + 0x88]
mov	rdi, qword ptr [rsp + 0x80]
mov	ecx, dword ptr [rsp + 0x9c]
movzx	edx, ax
mov	qword ptr [rsp + 0x80], rdi
or	rbx, rdx
mov	qword ptr [rsp + 0x88], rax
mov	rdx, rdi
test	ecx, ecx
je	0x14005df30
je	0x14005df30
or	dword ptr [r14], 4
cmp	ax, -1
sete	r12b
test	rdi, rdi
setne	al
and	al, r12b
mov	r15d, eax
jne	0x14005df50
jne	0x14005df50
cmp	r13w, -1
sete	al
mov	ecx, eax
test	rbp, rbp
je	0x14005ded3
je	0x14005ded3
test	al, al
jne	0x14005df80
jne	0x14005df80
cmp	cl, r12b
jne	0x14005dedc
jne	0x14005dedc
or	dword ptr [r14], 2
mov	qword ptr [rsi], rdx
mov	rax, rsi
mov	qword ptr [rsi + 8], rbx
movups	xmm6, xmmword ptr [rsp + 0x160]
movups	xmm7, xmmword ptr [rsp + 0x170]
movups	xmm8, xmmword ptr [rsp + 0x180]
movups	xmm9, xmmword ptr [rsp + 0x190]
movups	xmm10, xmmword ptr [rsp + 0x1a0]
movups	xmm11, xmmword ptr [rsp + 0x1b0]
add	rsp, 0x1c8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	
mov	rcx, qword ptr [rsp + 0x240]
mov	r8d, dword ptr [rsp + 0x98]
mov	dword ptr [rcx + 0x10], r8d
jmp	0x14005dea2
jmp	0x14005dea2
nop	dword ptr [rax]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x14005dfa0
jae	0x14005dfa0
movzx	eax, word ptr [rax]
xor	r12d, r12d
mov	edx, 0
cmp	ax, -1
cmove	r12d, r15d
cmovne	rdx, rdi
jmp	0x14005debc
jmp	0x14005debc
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x14005dfb0
jae	0x14005dfb0
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	cl
jmp	0x14005ded3
jmp	0x14005ded3
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14005df5d
jmp	0x14005df5d
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbp]
mov	qword ptr [rsp + 0x58], rdx
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rdx, qword ptr [rsp + 0x58]
jmp	0x14005df8d
jmp	0x14005df8d
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
push	rbx
add	rsp, -0x80
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
lea	rax, [rsp + 0x74]
mov	rbx, rcx
lea	r9, [rsp + 0x50]
mov	qword ptr [rsp + 0x74], 0
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0xc8]
lea	r8, [rsp + 0x60]
mov	dword ptr [rsp + 0x7c], 0
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x60], r10
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xb8]
mov	qword ptr [rsp + 0x68], r11
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0xb0]
movups	xmmword ptr [rsp + 0x50], xmm0
mov	qword ptr [rsp + 0x20], rax
call	0x14005e060
call	0x14005e060
mov	rax, rbx
sub	rsp, -0x80
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x208
movups	xmmword ptr [rsp + 0x1a0], xmm6
movups	xmmword ptr [rsp + 0x1b0], xmm7
movups	xmmword ptr [rsp + 0x1c0], xmm8
movups	xmmword ptr [rsp + 0x1d0], xmm9
movups	xmmword ptr [rsp + 0x1e0], xmm10
movups	xmmword ptr [rsp + 0x1f0], xmm11
movdqu	xmm6, xmmword ptr [r8]
movdqu	xmm7, xmmword ptr [r9]
mov	rbp, qword ptr [rsp + 0x278]
mov	r15, rcx
lea	rcx, [rip + 0x58f9d]
mov	qword ptr [rsp + 0x258], rdx
movups	xmmword ptr [rsp + 0xc0], xmm6
movups	xmmword ptr [rsp + 0xb0], xmm7
call	0x140022a70
call	0x140022a70
mov	rdi, qword ptr [rsp + 0x270]
mov	rdx, qword ptr [rdi + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x14005fcee
jae	0x14005fcee
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x14005fcee
je	0x14005fcee
xor	r9d, r9d
lea	r8, [rip + 0x6315c]
lea	rdx, [rip + 0x62a85]
call	0x1400b35e0
call	0x1400b35e0
mov	qword ptr [rsp + 0x60], rax
test	rax, rax
je	0x14005fcee
je	0x14005fcee
mov	rcx, qword ptr [rip + 0x607ab]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x270]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rbx, qword ptr [rax + rdx*8]
test	rbx, rbx
je	0x14005fcee
je	0x14005fcee
mov	rcx, qword ptr [rsp + 0x288]
xor	edi, edi
xor	esi, esi
lea	r13, [rsp + 0xc0]
call	0x140015a60
call	0x140015a60
mov	qword ptr [rsp + 0x250], r15
mov	r14, rax
lea	rax, [rsp + 0xb0]
mov	dword ptr [rsp + 0xd8], 0
mov	qword ptr [rsp + 0x50], rax
mov	qword ptr [rsp + 0x278], rbp
mov	rbp, qword ptr [rsp + 0x288]
mov	rdx, qword ptr [rsp + 0x50]
mov	rcx, r13
call	0x140020940
call	0x140020940
cmp	rsi, r14
jae	0x14005e460
jae	0x14005e460
cmp	al, 1
je	0x14005e460
je	0x14005e460
test	edi, edi
jne	0x14005e520
jne	0x14005e520
lea	r15, [rsi + rsi]
mov	rax, qword ptr [rbx]
xor	r8d, r8d
mov	rcx, rbx
lea	r12, [rbp + r15]
movzx	edx, word ptr [r12]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	al, 0x25
je	0x14005e290
je	0x14005e290
mov	rax, qword ptr [rbx]
movzx	r8d, word ptr [r12]
mov	edx, 0x20
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	r15d, eax
test	al, al
jne	0x14005e320
jne	0x14005e320
mov	rax, qword ptr [rbx]
movzx	edx, word ptr [r12]
mov	rcx, rbx
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	rcx, r13
mov	r15d, eax
call	0x1400209f0
call	0x1400209f0
mov	rcx, rbx
movzx	edx, ax
mov	rax, qword ptr [rbx]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
cmp	r15w, ax
je	0x14005e300
je	0x14005e300
mov	rax, qword ptr [rbx]
movzx	edx, word ptr [r12]
mov	rcx, rbx
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	rcx, r13
mov	r12d, eax
call	0x1400209f0
call	0x1400209f0
mov	rcx, rbx
movzx	edx, ax
mov	rax, qword ptr [rbx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	r12w, ax
je	0x14005e300
je	0x14005e300
mov	dword ptr [rsp + 0xd8], 4
mov	edi, 4
add	rsi, 1
jmp	0x14005e1a9
jmp	0x14005e1a9
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbx]
movzx	edx, word ptr [rbp + r15 + 2]
xor	r8d, r8d
mov	rcx, rbx
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
mov	dword ptr [rsp + 0xdc], 0
cmp	al, 0x45
je	0x14005e4d8
je	0x14005e4d8
cmp	al, 0x4f
je	0x14005e4d8
je	0x14005e4d8
add	rsi, 1
sub	eax, 0x25
cmp	al, 0x54
ja	0x14005e26d
ja	0x14005e26d
lea	rdx, [rip + 0x5c3d9]
movzx	eax, al
movsxd	rax, dword ptr [rdx + rax*4]
add	rax, rdx
jmp	rax
jmp	rax
mov	rcx, r13
call	0x1400209f0
call	0x1400209f0
mov	edx, 0x25
mov	rcx, rbx
mov	r12d, eax
mov	rax, qword ptr [rbx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	r12w, ax
jne	0x14005e26d
jne	0x14005e26d
nop	
mov	rcx, qword ptr [rsp + 0xc0]
call	0x140092490
call	0x140092490
mov	eax, 0xffffffff
mov	word ptr [rsp + 0xc8], ax
jmp	0x14005e27d
jmp	0x14005e27d
nop	
movzx	r8d, word ptr [rsp + 0xc8]
mov	rcx, qword ptr [rsp + 0xc0]
cmp	word ptr [rsp + 0xb8], -1
sete	r12b
cmp	r8w, -1
sete	dl
test	rcx, rcx
je	0x14005e353
je	0x14005e353
test	dl, dl
jne	0x14005e3d4
jne	0x14005e3d4
mov	r9d, edx
mov	rcx, qword ptr [rsp + 0xb0]
test	rcx, rcx
je	0x14005e36c
je	0x14005e36c
test	r12b, r12b
jne	0x14005e408
jne	0x14005e408
mov	eax, r12d
cmp	dl, al
je	0x14005e27d
je	0x14005e27d
mov	rcx, qword ptr [rsp + 0xc0]
test	rcx, rcx
je	0x14005e38d
je	0x14005e38d
test	r9b, r9b
jne	0x14005e430
jne	0x14005e430
mov	rax, qword ptr [rbx]
movzx	r8d, r8w
mov	edx, 0x20
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
test	al, al
je	0x14005e27d
je	0x14005e27d
mov	rcx, qword ptr [rsp + 0xc0]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14005e4f8
jae	0x14005e4f8
add	rax, 2
mov	r8d, 0xffffffff
mov	qword ptr [rcx + 0x10], rax
mov	word ptr [rsp + 0xc8], r8w
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14005e568
jae	0x14005e568
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14005e538
je	0x14005e538
cmp	ax, -1
mov	r9d, r15d
mov	r8d, 0xffffffff
sete	dl
jmp	0x14005e356
jmp	0x14005e356
nop	dword ptr [rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14005e578
jae	0x14005e578
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14005e550
je	0x14005e550
cmp	ax, -1
sete	al
jmp	0x14005e36f
jmp	0x14005e36f
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14005e5a8
jae	0x14005e5a8
movzx	r8d, word ptr [rax]
cmp	r8w, -1
jne	0x14005e38d
jne	0x14005e38d
mov	qword ptr [rsp + 0xc0], 0
jmp	0x14005e38d
jmp	0x14005e38d
nop	
mov	r15, qword ptr [rsp + 0x250]
mov	rbp, qword ptr [rsp + 0x278]
cmp	rsi, r14
jne	0x14005e479
jne	0x14005e479
test	edi, edi
je	0x14005e47d
je	0x14005e47d
or	dword ptr [rbp], 4
movdqu	xmm1, xmmword ptr [rsp + 0xc0]
mov	rax, r15
movups	xmmword ptr [r15], xmm1
movups	xmm6, xmmword ptr [rsp + 0x1a0]
movups	xmm7, xmmword ptr [rsp + 0x1b0]
movups	xmm8, xmmword ptr [rsp + 0x1c0]
movups	xmm9, xmmword ptr [rsp + 0x1d0]
movups	xmm10, xmmword ptr [rsp + 0x1e0]
movups	xmm11, xmmword ptr [rsp + 0x1f0]
add	rsp, 0x208
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
movzx	edx, word ptr [rbp + r15 + 4]
add	rsi, 2
xor	r8d, r8d
mov	rcx, rbx
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
jmp	0x14005e2c1
jmp	0x14005e2c1
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
mov	qword ptr [rsp + 0x58], rcx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	edx, 0xffffffff
mov	rcx, qword ptr [rsp + 0x58]
mov	word ptr [rsp + 0xc8], dx
jmp	0x14005e3d4
jmp	0x14005e3d4
nop	word ptr [rax + rax]
mov	r15, qword ptr [rsp + 0x250]
mov	rbp, qword ptr [rsp + 0x278]
jmp	0x14005e479
jmp	0x14005e479
nop	dword ptr [rax]
mov	qword ptr [rsp + 0xc0], 0
jmp	0x14005e3ef
jmp	0x14005e3ef
nop	dword ptr [rax]
mov	qword ptr [rsp + 0xb0], 0
jmp	0x14005e423
jmp	0x14005e423
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14005e3e5
jmp	0x14005e3e5
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
mov	byte ptr [rsp + 0x70], r9b
mov	dword ptr [rsp + 0x68], r8d
mov	byte ptr [rsp + 0x58], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r9d, byte ptr [rsp + 0x70]
mov	r8d, dword ptr [rsp + 0x68]
movzx	edx, byte ptr [rsp + 0x58]
jmp	0x14005e419
jmp	0x14005e419
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, eax
jmp	0x14005e442
jmp	0x14005e442
mov	rax, qword ptr [rsp + 0x60]
lea	rcx, [rsp + 0xa0]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	rax, qword ptr [rax + 0x10]
movdqu	xmm5, xmmword ptr [rax + 0x128]
movdqu	xmm4, xmmword ptr [rax + 0x138]
movdqu	xmm3, xmmword ptr [rax + 0x148]
movdqu	xmm2, xmmword ptr [rax + 0x158]
movdqu	xmm1, xmmword ptr [rax + 0x168]
movdqu	xmm0, xmmword ptr [rax + 0x178]
movdqu	xmm7, xmmword ptr [rax + 0x108]
movdqu	xmm6, xmmword ptr [rax + 0x118]
movdqu	xmm10, xmmword ptr [rax + 0xd8]
movdqu	xmm9, xmmword ptr [rax + 0xe8]
movdqu	xmm8, xmmword ptr [rax + 0xf8]
movdqu	xmm11, xmmword ptr [rax + 0xc8]
lea	rax, [rsp + 0xd8]
movups	xmmword ptr [rsp + 0x140], xmm5
movdqu	xmm5, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
movups	xmmword ptr [rsp + 0x150], xmm4
mov	rax, qword ptr [rsp + 0x270]
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
movups	xmmword ptr [rsp + 0x160], xmm3
movups	xmmword ptr [rsp + 0x170], xmm2
movups	xmmword ptr [rsp + 0x180], xmm1
movups	xmmword ptr [rsp + 0x190], xmm0
movups	xmmword ptr [rsp + 0x90], xmm4
movups	xmmword ptr [rsp + 0x80], xmm5
movups	xmmword ptr [rsp + 0xe0], xmm11
movups	xmmword ptr [rsp + 0xf0], xmm10
movups	xmmword ptr [rsp + 0x100], xmm9
movups	xmmword ptr [rsp + 0x110], xmm8
movups	xmmword ptr [rsp + 0x120], xmm7
movups	xmmword ptr [rsp + 0x130], xmm6
mov	qword ptr [rsp + 0x38], rax
lea	rax, [rsp + 0xe0]
mov	rdx, qword ptr [rsp + 0x258]
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x30], 0x18
call	0x14005d310
call	0x14005d310
mov	rax, qword ptr [rsp + 0xa0]
mov	edi, dword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	word ptr [rsp + 0xc8], ax
test	edi, edi
jne	0x14005e27d
jne	0x14005e27d
movsxd	rax, dword ptr [rsp + 0xdc]
mov	rdx, rax
imul	rax, rax, 0x2aaaaaab
mov	ecx, edx
sar	ecx, 0x1f
sar	rax, 0x21
sub	eax, ecx
lea	eax, [rax + rax*2]
shl	eax, 2
sub	edx, eax
mov	rax, qword ptr [rsp + 0x280]
mov	dword ptr [rax + 0x10], edx
mov	rax, qword ptr [rsp + 0x290]
or	word ptr [rax], 0x408
jmp	0x14005e27d
jmp	0x14005e27d
mov	rcx, r13
call	0x1400209f0
call	0x1400209f0
mov	r9, qword ptr [rbx]
mov	edx, 0x20
mov	rcx, rbx
movzx	r8d, ax
call	qword ptr [r9 + 0x10]
call	qword ptr [r9 + 0x10]
test	al, al
jne	0x14005fc07
jne	0x14005fc07
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x1f
movdqu	xmm0, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 1
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm2, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm0
movups	xmmword ptr [rsp + 0x80], xmm2
call	0x14005cd90
call	0x14005cd90
mov	rax, qword ptr [rsp + 0xa0]
mov	edi, dword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	word ptr [rsp + 0xc8], ax
test	edi, edi
jne	0x14005e27d
jne	0x14005e27d
mov	eax, dword ptr [rsp + 0xdc]
mov	rdx, qword ptr [rsp + 0x280]
mov	dword ptr [rdx + 0xc], eax
mov	rax, qword ptr [rsp + 0x290]
or	word ptr [rax], 0x410
jmp	0x14005e27d
jmp	0x14005e27d
mov	rax, qword ptr [rsp + 0x60]
mov	rdx, qword ptr [rsp + 0x258]
lea	rcx, [rsp + 0xa0]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	rax, qword ptr [rax + 0x10]
movdqu	xmm3, xmmword ptr [rax + 0x88]
movdqu	xmm2, xmmword ptr [rax + 0x98]
movdqu	xmm5, xmmword ptr [rax + 0x68]
movdqu	xmm4, xmmword ptr [rax + 0x78]
movdqu	xmm1, xmmword ptr [rax + 0xa8]
movdqu	xmm0, xmmword ptr [rax + 0xb8]
movdqu	xmm6, xmmword ptr [rax + 0x58]
lea	rax, [rsp + 0xd8]
mov	qword ptr [rsp + 0x30], 0xe
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x270]
movups	xmmword ptr [rsp + 0x110], xmm3
movdqu	xmm3, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x38], rax
lea	rax, [rsp + 0xe0]
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x120], xmm2
movdqu	xmm2, xmmword ptr [rsp + 0xc0]
movups	xmmword ptr [rsp + 0xe0], xmm6
movups	xmmword ptr [rsp + 0xf0], xmm5
movups	xmmword ptr [rsp + 0x100], xmm4
movups	xmmword ptr [rsp + 0x130], xmm1
movups	xmmword ptr [rsp + 0x140], xmm0
movups	xmmword ptr [rsp + 0x90], xmm2
movups	xmmword ptr [rsp + 0x80], xmm3
call	0x14005d310
call	0x14005d310
mov	rax, qword ptr [rsp + 0xa0]
mov	edi, dword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	word ptr [rsp + 0xc8], ax
test	edi, edi
jne	0x14005e27d
jne	0x14005e27d
movsxd	rax, dword ptr [rsp + 0xdc]
mov	rdx, rax
imul	rax, rax, -0x6db6db6d
mov	ecx, edx
sar	ecx, 0x1f
shr	rax, 0x20
add	eax, edx
sar	eax, 2
sub	eax, ecx
lea	ecx, [rax*8]
sub	ecx, eax
mov	rax, qword ptr [rsp + 0x280]
sub	edx, ecx
mov	dword ptr [rax + 0x18], edx
mov	rax, qword ptr [rsp + 0x290]
or	byte ptr [rax], 2
jmp	0x14005e27d
jmp	0x14005e27d
mov	r12, qword ptr [rsp + 0x50]
jmp	0x14005ea47
jmp	0x14005ea47
nop	dword ptr [rax + rax]
mov	rcx, r13
call	0x1400209f0
call	0x1400209f0
mov	r9, qword ptr [rbx]
mov	edx, 0x20
mov	rcx, rbx
movzx	r8d, ax
call	qword ptr [r9 + 0x10]
call	qword ptr [r9 + 0x10]
test	al, al
je	0x14005e27d
je	0x14005e27d
mov	rcx, qword ptr [rsp + 0xc0]
mov	r15d, 0xffffffff
call	0x140092490
call	0x140092490
mov	word ptr [rsp + 0xc8], r15w
mov	rdx, r12
mov	rcx, r13
call	0x140020940
call	0x140020940
test	al, al
je	0x14005ea08
je	0x14005ea08
jmp	0x14005e27d
jmp	0x14005e27d
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x16e
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 1
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm5, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 3
movups	xmmword ptr [rsp + 0x90], xmm4
movups	xmmword ptr [rsp + 0x80], xmm5
call	0x14005cd90
call	0x14005cd90
mov	rax, qword ptr [rsp + 0xa0]
mov	edi, dword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	word ptr [rsp + 0xc8], ax
test	edi, edi
jne	0x14005e27d
jne	0x14005e27d
mov	eax, dword ptr [rsp + 0xdc]
mov	rdx, qword ptr [rsp + 0x280]
sub	eax, 1
mov	dword ptr [rdx + 0x1c], eax
mov	rax, qword ptr [rsp + 0x290]
or	byte ptr [rax], 4
jmp	0x14005e27d
jmp	0x14005e27d
mov	rax, qword ptr [rsp + 0x290]
lea	rcx, [rsp + 0xa0]
movdqu	xmm2, xmmword ptr [rsp + 0xc0]
movdqu	xmm3, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x60]
movups	xmmword ptr [rsp + 0x90], xmm2
mov	rax, qword ptr [rax + 0x10]
movups	xmmword ptr [rsp + 0x80], xmm3
mov	rax, qword ptr [rax + 0x30]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x280]
mov	rdx, qword ptr [rsp + 0x258]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	qword ptr [rsp + 0x30], rax
lea	rax, [rsp + 0xd8]
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x270]
mov	qword ptr [rsp + 0x20], rax
call	0x14005e060
call	0x14005e060
mov	rax, qword ptr [rsp + 0xa0]
mov	edi, dword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	word ptr [rsp + 0xc8], ax
test	edi, edi
jne	0x14005e27d
jne	0x14005e27d
mov	rax, qword ptr [rsp + 0x290]
or	byte ptr [rax + 1], 4
jmp	0x14005e27d
jmp	0x14005e27d
mov	rcx, r13
call	0x1400209f0
call	0x1400209f0
mov	r9, qword ptr [rbx]
mov	edx, 1
mov	rcx, rbx
movzx	r8d, ax
call	qword ptr [r9 + 0x10]
call	qword ptr [r9 + 0x10]
test	al, al
je	0x14005e26d
je	0x14005e26d
mov	rax, qword ptr [rsp + 0x270]
lea	r15, [rsp + 0xd8]
lea	r12, [rsp + 0xe0]
mov	qword ptr [rsp + 0x30], 0xe
mov	qword ptr [rsp + 0x40], r15
movdqu	xmm3, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
lea	r9, [rsp + 0x80]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rip + 0x5fc2f]
lea	r8, [rsp + 0x90]
mov	qword ptr [rsp + 0x20], r12
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm4, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x70], rcx
mov	qword ptr [rsp + 0x58], r9
mov	qword ptr [rsp + 0x68], r8
movups	xmmword ptr [rsp + 0x90], xmm3
movups	xmmword ptr [rsp + 0x80], xmm4
call	0x14005d310
call	0x14005d310
mov	rax, qword ptr [rsp + 0xa0]
mov	rdx, qword ptr [rsp + 0x50]
mov	rcx, r13
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	word ptr [rsp + 0xc8], ax
call	0x140020940
call	0x140020940
mov	edi, dword ptr [rsp + 0xd8]
test	al, al
jne	0x14005e27d
jne	0x14005e27d
mov	eax, edi
or	eax, dword ptr [rsp + 0xe0]
jne	0x14005e27d
jne	0x14005e27d
mov	rcx, r13
call	0x1400209f0
call	0x1400209f0
mov	edx, 0x2d
mov	rcx, rbx
mov	word ptr [rsp + 0x7e], ax
mov	rax, qword ptr [rbx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	word ptr [rsp + 0x7e], ax
je	0x14005ed63
je	0x14005ed63
mov	rcx, r13
call	0x1400209f0
call	0x1400209f0
mov	edx, 0x2b
mov	rcx, rbx
mov	word ptr [rsp + 0x7e], ax
mov	rax, qword ptr [rbx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	word ptr [rsp + 0x7e], ax
jne	0x14005e27d
jne	0x14005e27d
mov	rax, qword ptr [rsp + 0x270]
xor	r9d, r9d
mov	rdi, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x48], r15
mov	dword ptr [rsp + 0x28], r9d
mov	r8, qword ptr [rsp + 0x68]
mov	qword ptr [rsp + 0x40], rax
mov	r9, qword ptr [rsp + 0x58]
mov	rcx, rdi
mov	dword ptr [rsp + 0x30], 0x17
movdqu	xmm3, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x20], r12
mov	rdx, qword ptr [rsp + 0x258]
mov	qword ptr [rsp + 0x38], 2
movdqu	xmm4, xmmword ptr [rsp + 0xb0]
movups	xmmword ptr [rsp + 0x90], xmm3
movups	xmmword ptr [rsp + 0x80], xmm4
call	0x14005cd90
call	0x14005cd90
xor	r10d, r10d
mov	qword ptr [rsp + 0x48], r15
mov	rcx, rdi
mov	rax, qword ptr [rsp + 0xa0]
mov	r9, qword ptr [rsp + 0x58]
mov	dword ptr [rsp + 0x28], r10d
mov	qword ptr [rsp + 0x38], 2
mov	r8, qword ptr [rsp + 0x68]
mov	qword ptr [rsp + 0xc0], rax
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm2, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x20], r12
mov	qword ptr [rsp + 0xa0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	dword ptr [rsp + 0x30], 0x3b
mov	word ptr [rsp + 0xc8], ax
mov	rax, qword ptr [rsp + 0x270]
movdqu	xmm5, xmmword ptr [rsp + 0xc0]
movups	xmmword ptr [rsp + 0x80], xmm2
mov	qword ptr [rsp + 0x40], rax
movups	xmmword ptr [rsp + 0x90], xmm5
call	0x14005cd90
call	0x14005cd90
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsp + 0xa0]
mov	edi, dword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	word ptr [rsp + 0xc8], ax
jmp	0x14005e27d
jmp	0x14005e27d
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x270f
movdqu	xmm5, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm0, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 4
movups	xmmword ptr [rsp + 0x90], xmm5
movups	xmmword ptr [rsp + 0x80], xmm0
call	0x14005cd90
call	0x14005cd90
mov	rax, qword ptr [rsp + 0xa0]
mov	edi, dword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	word ptr [rsp + 0xc8], ax
test	edi, edi
jne	0x14005e27d
jne	0x14005e27d
mov	eax, dword ptr [rsp + 0xdc]
mov	rdx, qword ptr [rsp + 0x280]
sub	eax, 0x76c
mov	dword ptr [rdx + 0x14], eax
mov	rax, qword ptr [rsp + 0x290]
mov	rdx, qword ptr [rsp + 0x290]
movzx	eax, byte ptr [rax + 1]
mov	byte ptr [rsp + 0x58], al
and	eax, 0xfffffff9
or	eax, 4
mov	byte ptr [rdx + 1], al
jmp	0x14005e27d
jmp	0x14005e27d
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x63
movdqu	xmm3, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm4, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm3
movups	xmmword ptr [rsp + 0x80], xmm4
call	0x14005cd90
call	0x14005cd90
mov	rax, qword ptr [rsp + 0xa0]
mov	edi, dword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	word ptr [rsp + 0xc8], ax
test	edi, edi
jne	0x14005e27d
jne	0x14005e27d
mov	rax, qword ptr [rsp + 0x290]
mov	rdx, qword ptr [rsp + 0x50]
mov	rcx, r13
or	byte ptr [rax + 1], 6
call	0x140020940
call	0x140020940
mov	r12d, dword ptr [rsp + 0xdc]
test	al, al
je	0x14005fc26
je	0x14005fc26
lea	eax, [r12 + 0x64]
cmp	r12d, 0x45
cmovl	r12d, eax
mov	rax, qword ptr [rsp + 0x280]
mov	dword ptr [rax + 0x14], r12d
jmp	0x14005e27d
jmp	0x14005e27d
mov	rax, qword ptr [rsp + 0x290]
lea	rcx, [rsp + 0xa0]
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
movdqu	xmm5, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x60]
movups	xmmword ptr [rsp + 0x90], xmm4
mov	rax, qword ptr [rax + 0x10]
movups	xmmword ptr [rsp + 0x80], xmm5
mov	rax, qword ptr [rax + 0x10]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x280]
mov	rdx, qword ptr [rsp + 0x258]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	qword ptr [rsp + 0x30], rax
lea	rax, [rsp + 0xd8]
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x270]
mov	qword ptr [rsp + 0x20], rax
call	0x14005e060
call	0x14005e060
jmp	0x14005ee70
jmp	0x14005ee70
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 6
movdqu	xmm5, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm0, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 1
movups	xmmword ptr [rsp + 0x90], xmm5
movups	xmmword ptr [rsp + 0x80], xmm0
call	0x14005cd90
call	0x14005cd90
mov	rax, qword ptr [rsp + 0xa0]
mov	edi, dword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	word ptr [rsp + 0xc8], ax
test	edi, edi
jne	0x14005e27d
jne	0x14005e27d
mov	eax, dword ptr [rsp + 0xdc]
mov	rdx, qword ptr [rsp + 0x280]
mov	dword ptr [rdx + 0x18], eax
mov	rax, qword ptr [rsp + 0x290]
or	byte ptr [rax], 2
jmp	0x14005e27d
jmp	0x14005e27d
mov	rax, qword ptr [rbx]
lea	rdi, [rsp + 0xe0]
lea	r8, [rip + 0x5b46f]
mov	rcx, rbx
mov	r9, rdi
lea	rdx, [r8 - 9]
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
mov	rax, qword ptr [rsp + 0x290]
mov	qword ptr [rsp + 0x38], rdi
lea	rcx, [rsp + 0xa0]
movdqu	xmm3, xmmword ptr [rsp + 0xc0]
movdqu	xmm4, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
movups	xmmword ptr [rsp + 0x90], xmm3
movups	xmmword ptr [rsp + 0x80], xmm4
jmp	0x14005eb87
jmp	0x14005eb87
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0xc
movdqu	xmm0, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 1
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm2, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm0
movups	xmmword ptr [rsp + 0x80], xmm2
call	0x14005cd90
call	0x14005cd90
mov	rax, qword ptr [rsp + 0xa0]
mov	edi, dword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	word ptr [rsp + 0xc8], ax
test	edi, edi
jne	0x14005e27d
jne	0x14005e27d
mov	eax, dword ptr [rsp + 0xdc]
mov	rdx, qword ptr [rsp + 0x280]
sub	eax, 1
mov	dword ptr [rdx + 0x10], eax
mov	rax, qword ptr [rsp + 0x290]
or	byte ptr [rax], 8
jmp	0x14005e27d
jmp	0x14005e27d
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0xc
movdqu	xmm2, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 1
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm3, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm2
movups	xmmword ptr [rsp + 0x80], xmm3
call	0x14005cd90
call	0x14005cd90
mov	rax, qword ptr [rsp + 0xa0]
mov	edi, dword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	word ptr [rsp + 0xc8], ax
test	edi, edi
jne	0x14005e27d
jne	0x14005e27d
movsxd	rax, dword ptr [rsp + 0xdc]
mov	rdx, rax
imul	rax, rax, 0x2aaaaaab
mov	ecx, edx
sar	ecx, 0x1f
sar	rax, 0x21
sub	eax, ecx
lea	eax, [rax + rax*2]
shl	eax, 2
sub	edx, eax
mov	rax, qword ptr [rsp + 0x280]
mov	dword ptr [rax + 8], edx
mov	rax, qword ptr [rsp + 0x290]
or	byte ptr [rax], 1
jmp	0x14005e27d
jmp	0x14005e27d
mov	rax, qword ptr [rsp + 0x60]
mov	rax, qword ptr [rax + 0x10]
movdqu	xmm0, xmmword ptr [rax + 0x40]
movq	rax, xmm0
movups	xmmword ptr [rsp + 0xe0], xmm0
cmp	word ptr [rax], 0
je	0x14005e27d
je	0x14005e27d
movhlps	xmm2, xmm0
movq	rax, xmm2
cmp	word ptr [rax], 0
je	0x14005e27d
je	0x14005e27d
lea	rax, [rsp + 0xd8]
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm5, xmmword ptr [rsp + 0xc0]
mov	qword ptr [rsp + 0x30], 2
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x270]
lea	rcx, [rsp + 0xa0]
lea	r9, [rsp + 0x80]
movups	xmmword ptr [rsp + 0x90], xmm5
lea	r8, [rsp + 0x90]
movdqu	xmm5, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x38], rax
lea	rax, [rsp + 0xe0]
mov	qword ptr [rsp + 0x28], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x80], xmm5
call	0x14005d310
call	0x14005d310
mov	rax, qword ptr [rsp + 0xa0]
mov	edi, dword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	word ptr [rsp + 0xc8], ax
test	edi, edi
jne	0x14005e27d
jne	0x14005e27d
mov	r12d, dword ptr [rsp + 0xdc]
test	r12d, r12d
je	0x14005e27d
je	0x14005e27d
mov	rax, qword ptr [rsp + 0x290]
or	byte ptr [rax + 1], 1
jmp	0x14005e27d
jmp	0x14005e27d
nop	dword ptr [rax + rax]
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x63
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm5, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm4
movups	xmmword ptr [rsp + 0x80], xmm5
call	0x14005cd90
call	0x14005cd90
mov	rax, qword ptr [rsp + 0xa0]
mov	edi, dword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	word ptr [rsp + 0xc8], ax
test	edi, edi
jne	0x14005e27d
jne	0x14005e27d
mov	rdx, qword ptr [rsp + 0x290]
mov	eax, dword ptr [rsp + 0xdc]
or	word ptr [rdx], 0x480
mov	dword ptr [rdx + 4], eax
jmp	0x14005e27d
jmp	0x14005e27d
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x17
movdqu	xmm5, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm0, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm5
movups	xmmword ptr [rsp + 0x80], xmm0
call	0x14005cd90
call	0x14005cd90
mov	rax, qword ptr [rsp + 0xa0]
mov	edi, dword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	word ptr [rsp + 0xc8], ax
test	edi, edi
jne	0x14005e27d
jne	0x14005e27d
mov	eax, dword ptr [rsp + 0xdc]
mov	rdx, qword ptr [rsp + 0x280]
mov	dword ptr [rdx + 8], eax
mov	rax, qword ptr [rsp + 0x290]
and	byte ptr [rax], 0xfe
jmp	0x14005e27d
jmp	0x14005e27d
mov	rax, qword ptr [rsp + 0x290]
lea	rcx, [rsp + 0xa0]
movdqu	xmm5, xmmword ptr [rsp + 0xc0]
movdqu	xmm0, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x60]
movups	xmmword ptr [rsp + 0x90], xmm5
mov	rax, qword ptr [rax + 0x10]
movups	xmmword ptr [rsp + 0x80], xmm0
mov	rax, qword ptr [rax + 0x50]
mov	qword ptr [rsp + 0x38], rax
jmp	0x14005f0ed
jmp	0x14005f0ed
mov	rax, qword ptr [rsp + 0x290]
lea	rcx, [rsp + 0xa0]
movdqu	xmm0, xmmword ptr [rsp + 0xc0]
movdqu	xmm2, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsp + 0x60]
movups	xmmword ptr [rsp + 0x90], xmm0
mov	rax, qword ptr [rax + 0x10]
movups	xmmword ptr [rsp + 0x80], xmm2
mov	rax, qword ptr [rax + 0x20]
mov	qword ptr [rsp + 0x38], rax
jmp	0x14005f0ed
jmp	0x14005f0ed
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x35
movdqu	xmm2, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm3, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm2
movups	xmmword ptr [rsp + 0x80], xmm3
call	0x14005cd90
call	0x14005cd90
mov	rax, qword ptr [rsp + 0xa0]
mov	edi, dword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	word ptr [rsp + 0xc8], ax
test	edi, edi
jne	0x14005e27d
jne	0x14005e27d
mov	eax, dword ptr [rsp + 0xdc]
mov	rdx, qword ptr [rsp + 0x290]
shl	eax, 0x10
mov	edx, dword ptr [rdx]
and	eax, 0x3f0000
mov	dword ptr [rsp + 0x58], edx
or	eax, 0x40
and	edx, 0xffc0ffbf
or	eax, edx
mov	rdx, qword ptr [rsp + 0x290]
mov	dword ptr [rdx], eax
jmp	0x14005e27d
jmp	0x14005e27d
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x35
movdqu	xmm3, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm4, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm3
movups	xmmword ptr [rsp + 0x80], xmm4
call	0x14005cd90
call	0x14005cd90
mov	rax, qword ptr [rsp + 0xa0]
mov	edi, dword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	word ptr [rsp + 0xc8], ax
test	edi, edi
jne	0x14005e27d
jne	0x14005e27d
mov	eax, dword ptr [rsp + 0xdc]
mov	rdx, qword ptr [rsp + 0x290]
shl	eax, 0x10
mov	edx, dword ptr [rdx]
and	eax, 0x3f0000
mov	dword ptr [rsp + 0x58], edx
or	eax, 0x20
and	edx, 0xffc0ffdf
or	eax, edx
mov	rdx, qword ptr [rsp + 0x290]
mov	dword ptr [rdx], eax
jmp	0x14005e27d
jmp	0x14005e27d
mov	rax, qword ptr [rbx]
lea	r8, [rip + 0x5acec]
lea	rdi, [rsp + 0xe0]
mov	rcx, rbx
mov	r9, rdi
lea	rdx, [r8 - 9]
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
lea	rcx, [rsp + 0xa0]
movdqu	xmm0, xmmword ptr [rsp + 0xc0]
movdqu	xmm2, xmmword ptr [rsp + 0xb0]
movups	xmmword ptr [rsp + 0x90], xmm0
movups	xmmword ptr [rsp + 0x80], xmm2
mov	rax, qword ptr [rsp + 0x290]
mov	qword ptr [rsp + 0x38], rdi
mov	qword ptr [rsp + 0x40], rax
jmp	0x14005f0ed
jmp	0x14005f0ed
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x3c
movdqu	xmm4, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm5, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm4
movups	xmmword ptr [rsp + 0x80], xmm5
call	0x14005cd90
call	0x14005cd90
mov	rax, qword ptr [rsp + 0xa0]
mov	edi, dword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	word ptr [rsp + 0xc8], ax
test	edi, edi
jne	0x14005e27d
jne	0x14005e27d
mov	eax, dword ptr [rsp + 0xdc]
mov	rdx, qword ptr [rsp + 0x280]
mov	dword ptr [rdx], eax
jmp	0x14005e27d
jmp	0x14005e27d
mov	rax, qword ptr [rbx]
lea	r8, [rip + 0x5abaf]
lea	rdi, [rsp + 0xe0]
mov	rcx, rbx
mov	r9, rdi
lea	rdx, [r8 - 6]
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
lea	rcx, [rsp + 0xa0]
movdqu	xmm2, xmmword ptr [rsp + 0xc0]
movdqu	xmm3, xmmword ptr [rsp + 0xb0]
movups	xmmword ptr [rsp + 0x90], xmm2
movups	xmmword ptr [rsp + 0x80], xmm3
jmp	0x14005f9f9
jmp	0x14005f9f9
lea	rax, [rsp + 0xd8]
mov	dword ptr [rsp + 0x30], 0x3b
movdqu	xmm3, xmmword ptr [rsp + 0xc0]
lea	rcx, [rsp + 0xa0]
mov	qword ptr [rsp + 0x48], rax
mov	rax, qword ptr [rsp + 0x270]
lea	r9, [rsp + 0x80]
lea	r8, [rsp + 0x90]
mov	dword ptr [rsp + 0x28], 0
mov	rdx, qword ptr [rsp + 0x258]
movdqu	xmm4, xmmword ptr [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xdc]
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x38], 2
movups	xmmword ptr [rsp + 0x90], xmm3
movups	xmmword ptr [rsp + 0x80], xmm4
call	0x14005cd90
call	0x14005cd90
mov	rax, qword ptr [rsp + 0xa0]
mov	edi, dword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0xa0], rax
mov	qword ptr [rsp + 0xc0], rax
movzx	eax, word ptr [rsp + 0xa8]
mov	word ptr [rsp + 0xc8], ax
test	edi, edi
jne	0x14005e27d
jne	0x14005e27d
mov	eax, dword ptr [rsp + 0xdc]
mov	rdx, qword ptr [rsp + 0x280]
mov	dword ptr [rdx + 4], eax
jmp	0x14005e27d
jmp	0x14005e27d
mov	rcx, qword ptr [rsp + 0xc0]
call	0x140092490
call	0x140092490
mov	eax, 0xffffffff
mov	word ptr [rsp + 0xc8], ax
jmp	0x14005e7a7
jmp	0x14005e7a7
mov	rcx, r13
call	0x1400209f0
call	0x1400209f0
mov	r8d, 0x2a
mov	rcx, rbx
movzx	edx, ax
mov	rax, qword ptr [rbx]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
movsx	r15d, al
lea	eax, [r15 - 0x30]
cmp	al, 9
ja	0x14005f086
ja	0x14005f086
mov	rcx, qword ptr [rsp + 0xc0]
call	0x140092490
call	0x140092490
lea	eax, [r12 + r12*4]
mov	rdx, qword ptr [rsp + 0x50]
mov	rcx, r13
mov	r11d, 0xffffffff
lea	r12d, [r15 + rax*2 - 0x30]
mov	word ptr [rsp + 0xc8], r11w
mov	dword ptr [rsp + 0xdc], r12d
call	0x140020940
call	0x140020940
test	al, al
je	0x14005fca6
je	0x14005fca6
mov	rax, qword ptr [rsp + 0x290]
sub	r12d, 0x76c
and	byte ptr [rax + 1], 0xfd
jmp	0x14005f093
jmp	0x14005f093
mov	rcx, r13
call	0x1400209f0
call	0x1400209f0
mov	r8d, 0x2a
mov	rcx, rbx
movzx	edx, ax
mov	rax, qword ptr [rbx]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
movsx	r15d, al
lea	eax, [r15 - 0x30]
cmp	al, 9
ja	0x14005fc8e
ja	0x14005fc8e
mov	rcx, qword ptr [rsp + 0xc0]
call	0x140092490
call	0x140092490
imul	eax, r12d, 0xa
mov	word ptr [rsp + 0xc8], 0xffff
lea	r12d, [rax + r15 - 0x30]
jmp	0x14005fc8e
jmp	0x14005fc8e
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
lea	rbp, [rsp + 0x50]
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	r15, qword ptr [rbp + 0x78]
mov	qword ptr [rbp + 0x50], rcx
mov	rcx, qword ptr [rip + 0x5ebb2]
movups	xmmword ptr [rbp - 0x10], xmm0
movups	xmmword ptr [rbp - 0x20], xmm1
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp + 0x88]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r12, qword ptr [rax + rdx*8]
test	r12, r12
je	0x1400600fb
je	0x1400600fb
mov	rax, qword ptr [rbp + 0x80]
lea	rax, [rax*8 + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
lea	rbx, [rbp - 0x10]
sub	rsp, rax
lea	rdx, [rbp - 0x20]
mov	rcx, rbx
lea	r13, [rsp + 0x20]
call	0x140020940
call	0x140020940
test	al, al
je	0x14005ffbc
je	0x14005ffbc
movzx	r14d, word ptr [rbp - 8]
mov	rcx, qword ptr [rbp - 0x10]
xor	ebx, ebx
xor	esi, esi
xor	edi, edi
cmp	word ptr [rbp - 0x18], -1
sete	r9b
mov	r12d, r9d
cmp	r14w, -1
sete	dl
test	rcx, rcx
je	0x14005fdc5
je	0x14005fdc5
test	dl, dl
jne	0x14005fee0
jne	0x14005fee0
mov	r8d, edx
mov	rcx, qword ptr [rbp - 0x20]
test	rcx, rcx
je	0x14005fdda
je	0x14005fdda
test	r12b, r12b
jne	0x14005ff10
jne	0x14005ff10
mov	eax, r12d
cmp	r8b, al
je	0x14005fe96
je	0x14005fe96
mov	rcx, qword ptr [rbp - 0x10]
test	rcx, rcx
je	0x14005fdf7
je	0x14005fdf7
test	dl, dl
jne	0x14005ff40
jne	0x14005ff40
test	rbx, rbx
je	0x14005feb0
je	0x14005feb0
lea	r11, [rsi + rsi]
xor	eax, eax
xor	r8d, r8d
jmp	0x14005fe1d
jmp	0x14005fe1d
nop	dword ptr [rax + rax]
add	r8, 1
add	rax, 1
cmp	rax, rbx
jae	0x14005fe51
jae	0x14005fe51
lea	rdx, [rdi + rax*8]
cmp	rsi, qword ptr [rdx]
jae	0x14005fe10
jae	0x14005fe10
lea	rcx, [r13 + rax*4]
movsxd	r9, dword ptr [rcx]
mov	r9, qword ptr [r15 + r9*8]
cmp	word ptr [r9 + r11], r14w
je	0x14005fe90
je	0x14005fe90
sub	rbx, 1
mov	r9d, dword ptr [r13 + rbx*4]
mov	dword ptr [rcx], r9d
mov	rcx, qword ptr [rdi + rbx*8]
mov	qword ptr [rdx], rcx
cmp	rax, rbx
jb	0x14005fe1d
jb	0x14005fe1d
cmp	rbx, r8
je	0x14005fe96
je	0x14005fe96
mov	rcx, qword ptr [rbp - 0x10]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14005ff70
jae	0x14005ff70
add	rax, 2
mov	qword ptr [rcx + 0x10], rax
mov	eax, 0xffffffff
add	rsi, 1
mov	r14d, 0xffffffff
mov	word ptr [rbp - 8], ax
jmp	0x14005fdb0
jmp	0x14005fdb0
nop	dword ptr [rax + rax]
add	rax, 1
jmp	0x14005fe18
jmp	0x14005fe18
cmp	rbx, 1
jne	0x14005ff83
jne	0x14005ff83
cmp	qword ptr [rdi], rsi
je	0x14005ff9c
je	0x14005ff9c
nop	dword ptr [rax]
mov	rax, qword ptr [rbp + 0x90]
or	dword ptr [rax], 4
mov	rax, qword ptr [rbp + 0x50]
movdqu	xmm2, xmmword ptr [rbp - 0x10]
movups	xmmword ptr [rax], xmm2
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400600bc
jae	0x1400600bc
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14006003c
je	0x14006003c
cmp	ax, -1
sete	r8b
jmp	0x14005fdc8
jmp	0x14005fdc8
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400600ce
jae	0x1400600ce
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x14006002f
je	0x14006002f
cmp	ax, -1
sete	al
jmp	0x14005fddd
jmp	0x14005fddd
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400600ae
jae	0x1400600ae
movzx	r14d, word ptr [rax]
cmp	r14w, -1
jne	0x14005fdf7
jne	0x14005fdf7
mov	qword ptr [rbp - 0x10], 0
jmp	0x14005fdf7
jmp	0x14005fdf7
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx]
mov	qword ptr [rbp - 0x28], rcx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rcx, qword ptr [rbp - 0x28]
jmp	0x14005fe70
jmp	0x14005fe70
cmp	rbx, 2
jne	0x14005feb0
jne	0x14005feb0
cmp	qword ptr [rdi], rsi
je	0x14005ff9c
je	0x14005ff9c
cmp	qword ptr [rdi + 8], rsi
jne	0x14005feb0
jne	0x14005feb0
mov	eax, dword ptr [r13]
mov	edx, eax
sub	edx, dword ptr [rbp + 0x80]
cmp	eax, dword ptr [rbp + 0x80]
cmovge	eax, edx
mov	rdx, qword ptr [rbp + 0x70]
mov	dword ptr [rdx], eax
jmp	0x14005feba
jmp	0x14005feba
mov	rcx, rbx
call	0x1400209f0
call	0x1400209f0
mov	rbx, qword ptr [rbp + 0x80]
mov	r14d, eax
add	rbx, rbx
je	0x1400600e9
je	0x1400600e9
xor	edi, edi
xor	esi, esi
jmp	0x14005fff9
jmp	0x14005fff9
nop	dword ptr [rax]
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	r14w, ax
je	0x140060006
je	0x140060006
add	rdi, 1
cmp	rdi, rbx
je	0x140060018
je	0x140060018
mov	rax, qword ptr [r15 + rdi*8]
movzx	edx, word ptr [rax]
cmp	dx, r14w
jne	0x14005ffe0
jne	0x14005ffe0
mov	dword ptr [r13 + rsi*4], edi
add	rdi, 1
add	rsi, 1
cmp	rdi, rbx
jne	0x14005fff9
jne	0x14005fff9
mov	rcx, qword ptr [rbp - 0x10]
test	rsi, rsi
jne	0x140060049
jne	0x140060049
movzx	r14d, word ptr [rbp - 8]
xor	ebx, ebx
xor	edi, edi
jmp	0x14005fda4
jmp	0x14005fda4
mov	qword ptr [rbp - 0x20], 0
jmp	0x14005ff2b
jmp	0x14005ff2b
mov	qword ptr [rbp - 0x10], 0
jmp	0x14005fefb
jmp	0x14005fefb
mov	qword ptr [rbp - 0x28], rcx
call	0x140092490
call	0x140092490
lea	rax, [rsi*8 + 0xf]
mov	edx, 0xffffffff
and	rax, 0xfffffffffffffff0
mov	word ptr [rbp - 8], dx
call	0x14000c150
call	0x14000c150
xor	ebx, ebx
mov	r12, qword ptr [rbp - 0x28]
sub	rsp, rax
lea	r14, [rsp + 0x20]
mov	rdi, r14
nop	dword ptr [rax]
movsxd	rax, dword ptr [r13 + rbx*4]
mov	rcx, qword ptr [r15 + rax*8]
call	0x140015a60
call	0x140015a60
mov	qword ptr [r14 + rbx*8], rax
add	rbx, 1
cmp	rsi, rbx
jne	0x140060080
jne	0x140060080
mov	rcx, r12
mov	r14d, 0xffffffff
mov	esi, 1
jmp	0x14005fda4
jmp	0x14005fda4
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r14d, eax
jmp	0x14005ff52
jmp	0x14005ff52
mov	rax, qword ptr [rcx]
mov	byte ptr [rbp - 0x28], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rbp - 0x28]
jmp	0x14005fef1
jmp	0x14005fef1
mov	rax, qword ptr [rcx]
mov	byte ptr [rbp - 0x29], r8b
mov	byte ptr [rbp - 0x28], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, byte ptr [rbp - 0x29]
movzx	edx, byte ptr [rbp - 0x28]
jmp	0x14005ff21
jmp	0x14005ff21
movzx	r14d, word ptr [rbp - 8]
mov	rcx, qword ptr [rbp - 0x10]
xor	esi, esi
xor	edi, edi
jmp	0x14005fda4
jmp	0x14005fda4
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xd8
mov	r10, qword ptr [r8 + 8]
mov	rax, qword ptr [r9 + 8]
mov	rsi, qword ptr [rsp + 0x158]
mov	rbx, qword ptr [r8]
mov	rbp, qword ptr [r9]
mov	r12d, r10d
mov	rdi, rcx
mov	rcx, qword ptr [rip + 0x5e79a]
mov	qword ptr [rsp + 0x58], rax
mov	qword ptr [rsp + 0x128], rdx
mov	qword ptr [rsp + 0x60], r10
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x140]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r13, qword ptr [rax + rdx*8]
test	r13, r13
je	0x1400608a1
je	0x1400608a1
mov	rax, qword ptr [rsp + 0x148]
mov	r10, qword ptr [rsp + 0x60]
mov	qword ptr [rsp + 0xc4], 0
cmp	rsi, qword ptr [rsp + 0x160]
mov	dword ptr [rsp + 0xcc], 0
mov	dword ptr [rax], 0
lea	rax, [rsp + 0xc4]
mov	qword ptr [rsp + 0x70], rax
je	0x14006045d
je	0x14006045d
mov	qword ptr [rsp + 0x120], rdi
mov	qword ptr [rsp + 0x60], r10
jmp	0x1400602a2
jmp	0x1400602a2
nop	word ptr [rax + rax]
mov	rax, qword ptr [r13]
movzx	r8d, word ptr [rsi]
mov	edx, 0x20
mov	rcx, r13
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	r15d, eax
test	al, al
jne	0x1400604a0
jne	0x1400604a0
test	rbx, rbx
je	0x14006020c
je	0x14006020c
test	r14b, r14b
jne	0x140060700
jne	0x140060700
movzx	edx, r12w
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
movzx	edx, word ptr [rsi]
mov	rcx, r13
mov	edi, eax
mov	rax, qword ptr [r13]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
cmp	di, ax
je	0x140060262
je	0x140060262
test	rbx, rbx
je	0x14006023c
je	0x14006023c
test	r14b, r14b
jne	0x1400607e8
jne	0x1400607e8
movzx	edx, r12w
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
movzx	edx, word ptr [rsi]
mov	rcx, r13
mov	edi, eax
mov	rax, qword ptr [r13]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	di, ax
jne	0x140060808
jne	0x140060808
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400607b8
jae	0x1400607b8
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
add	rsi, 2
mov	r12d, 0xffffffff
cmp	qword ptr [rsp + 0x160], rsi
je	0x140060450
je	0x140060450
mov	rax, qword ptr [rsp + 0x148]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140060450
jne	0x140060450
cmp	r12w, -1
sete	r14b
test	rbx, rbx
setne	dl
and	dl, r14b
jne	0x1400606d0
jne	0x1400606d0
mov	edx, r14d
cmp	word ptr [rsp + 0x58], -1
sete	dil
test	rbp, rbp
setne	r15b
and	r15b, dil
jne	0x140060680
jne	0x140060680
mov	r15d, edi
cmp	dl, r15b
je	0x1400606b0
je	0x1400606b0
mov	rax, qword ptr [r13]
xor	r8d, r8d
movzx	edx, word ptr [rsi]
mov	rcx, r13
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	al, 0x25
jne	0x1400601e0
jne	0x1400601e0
lea	r15, [rsi + 2]
cmp	qword ptr [rsp + 0x160], r15
je	0x140060808
je	0x140060808
mov	rax, qword ptr [r13]
xor	r8d, r8d
movzx	edx, word ptr [rsi + 2]
mov	rcx, r13
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	al, 0x45
je	0x140060630
je	0x140060630
cmp	al, 0x4f
je	0x140060630
je	0x140060630
mov	eax, dword ptr [rsi]
xor	edx, edx
mov	word ptr [rsp + 0xc0], dx
mov	dword ptr [rsp + 0xbc], eax
mov	rax, qword ptr [rsp + 0x58]
mov	rsi, qword ptr [rsp + 0x60]
lea	r8, [rsp + 0x90]
lea	rcx, [rsp + 0xa0]
mov	rdx, qword ptr [rsp + 0x128]
lea	r9, [rsp + 0x80]
mov	qword ptr [rsp + 0x90], rbx
mov	qword ptr [rsp + 0x88], rax
mov	rax, qword ptr [rsp + 0x70]
mov	si, r12w
mov	qword ptr [rsp + 0x98], rsi
mov	qword ptr [rsp + 0x40], rax
lea	rax, [rsp + 0xbc]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x150]
mov	qword ptr [rsp + 0x80], rbp
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x148]
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rsp + 0x140]
mov	qword ptr [rsp + 0x20], rax
call	0x14005e060
call	0x14005e060
mov	rax, qword ptr [rsp + 0xa8]
mov	r14, qword ptr [rsp + 0xa0]
mov	si, ax
cmp	ax, -1
mov	r12d, eax
mov	rbx, r14
mov	qword ptr [rsp + 0x60], rsi
sete	sil
test	r14, r14
mov	qword ptr [rsp + 0xa8], rax
setne	al
and	al, sil
mov	qword ptr [rsp + 0xa0], r14
mov	r8d, eax
jne	0x140060720
jne	0x140060720
test	rbp, rbp
setne	al
and	al, dil
mov	r14d, eax
jne	0x140060760
jne	0x140060760
cmp	dil, sil
jne	0x14006043c
jne	0x14006043c
mov	rax, qword ptr [rsp + 0x148]
or	dword ptr [rax], 2
lea	rsi, [r15 + 2]
cmp	qword ptr [rsp + 0x160], rsi
jne	0x140060290
jne	0x140060290
nop	
mov	rdi, qword ptr [rsp + 0x120]
mov	r10, qword ptr [rsp + 0x60]
mov	rdx, qword ptr [rsp + 0x150]
mov	rcx, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x58], r10
call	0x140094930
call	0x140094930
mov	r10, qword ptr [rsp + 0x58]
mov	rax, rdi
mov	qword ptr [rdi], rbx
mov	r10w, r12w
mov	qword ptr [rdi + 8], r10
add	rsp, 0xd8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
add	rsi, 2
cmp	qword ptr [rsp + 0x160], rsi
je	0x1400604f4
je	0x1400604f4
mov	eax, edi
mov	qword ptr [rsp + 0x68], rbx
mov	rdi, r13
mov	rbx, qword ptr [rsp + 0x160]
mov	r13d, eax
jmp	0x1400604d1
jmp	0x1400604d1
nop	dword ptr [rax]
add	rsi, 2
cmp	rbx, rsi
je	0x1400604e7
je	0x1400604e7
mov	rax, qword ptr [rdi]
movzx	r8d, word ptr [rsi]
mov	edx, 0x20
mov	rcx, rdi
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
test	al, al
jne	0x1400604c8
jne	0x1400604c8
mov	eax, r13d
mov	rbx, qword ptr [rsp + 0x68]
mov	r13, rdi
mov	edi, eax
test	rbx, rbx
je	0x1400604fe
je	0x1400604fe
test	r14b, r14b
jne	0x14006055a
jne	0x14006055a
mov	r8d, r14d
test	rbp, rbp
setne	dl
and	dl, dil
jne	0x140060590
jne	0x140060590
mov	edx, edi
cmp	r14b, dl
je	0x140060282
je	0x140060282
test	rbx, rbx
je	0x140060529
je	0x140060529
test	r8b, r8b
jne	0x1400605c0
jne	0x1400605c0
movzx	r8d, r12w
mov	rax, qword ptr [r13]
mov	edx, 0x20
mov	rcx, r13
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
test	al, al
je	0x140060282
je	0x140060282
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400605e8
jae	0x1400605e8
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400605ff
jae	0x1400605ff
movzx	r12d, word ptr [rax]
mov	r8d, r15d
cmp	r12w, -1
je	0x140060620
je	0x140060620
xor	r14d, r14d
test	rbp, rbp
mov	r12d, 0xffffffff
setne	dl
and	dl, dil
je	0x140060510
je	0x140060510
nop	
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140060790
jae	0x140060790
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edx, eax
mov	eax, 0
cmove	rbp, rax
jmp	0x140060512
jmp	0x140060512
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400607d0
jae	0x1400607d0
movzx	r8d, word ptr [rax]
xor	eax, eax
cmp	r8w, -1
cmove	rbx, rax
jmp	0x14006052d
jmp	0x14006052d
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jb	0x140060568
jb	0x140060568
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r8d, r15d
mov	r12d, eax
cmp	r12w, -1
jne	0x14006057a
jne	0x14006057a
nop	dword ptr [rax]
mov	r14d, r15d
xor	ebx, ebx
jmp	0x140060501
jmp	0x140060501
nop	word ptr [rax + rax]
lea	r15, [rsi + 4]
cmp	qword ptr [rsp + 0x160], r15
je	0x140060808
je	0x140060808
mov	rax, qword ptr [r13]
mov	rcx, r13
movzx	edx, word ptr [rsi + 4]
xor	r8d, r8d
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
mov	eax, dword ptr [rsi]
xor	ecx, ecx
mov	word ptr [rsp + 0xc2], cx
mov	dword ptr [rsp + 0xbc], eax
movzx	eax, word ptr [rsi + 4]
mov	word ptr [rsp + 0xc0], ax
jmp	0x140060341
jmp	0x140060341
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140060828
jae	0x140060828
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	r15d, eax
mov	eax, 0
cmove	rbp, rax
cmp	dl, r15b
jne	0x1400602e3
jne	0x1400602e3
mov	rax, qword ptr [rsp + 0x148]
mov	rdi, qword ptr [rsp + 0x120]
mov	r10, qword ptr [rsp + 0x60]
mov	dword ptr [rax], 6
jmp	0x14006045d
jmp	0x14006045d
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140060840
jae	0x140060840
movzx	eax, word ptr [rax]
cmp	ax, -1
mov	eax, 0
cmovne	edx, eax
mov	eax, 0
cmove	rbx, rax
jmp	0x1400602bd
jmp	0x1400602bd
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140060857
jae	0x140060857
movzx	edx, word ptr [rax]
xor	eax, eax
cmp	dx, -1
cmove	rbx, rax
jmp	0x140060210
jmp	0x140060210
mov	rax, qword ptr [r14 + 0x10]
cmp	rax, qword ptr [r14 + 0x18]
jae	0x140060868
jae	0x140060868
movzx	eax, word ptr [rax]
xor	esi, esi
mov	ebx, 0
cmp	ax, -1
cmovne	rbx, r14
cmove	esi, r8d
test	rbp, rbp
setne	al
and	al, dil
mov	r14d, eax
je	0x14006042c
je	0x14006042c
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140060881
jae	0x140060881
movzx	eax, word ptr [rax]
xor	edi, edi
cmp	ax, -1
mov	eax, 0
cmove	edi, r14d
cmove	rbp, rax
jmp	0x14006042c
jmp	0x14006042c
nop	dword ptr [rax]
mov	rax, qword ptr [rbp]
mov	byte ptr [rsp + 0x7f], r8b
mov	rcx, rbp
mov	byte ptr [rsp + 0x68], dl
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, byte ptr [rsp + 0x7f]
movzx	edx, byte ptr [rsp + 0x68]
jmp	0x1400605a1
jmp	0x1400605a1
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140060278
jmp	0x140060278
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, ax
jmp	0x1400605d2
jmp	0x1400605d2
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140060890
jae	0x140060890
movzx	edx, word ptr [rax]
xor	eax, eax
cmp	dx, -1
cmove	rbx, rax
jmp	0x140060240
jmp	0x140060240
mov	rax, qword ptr [rsp + 0x148]
mov	rdi, qword ptr [rsp + 0x120]
mov	r10, qword ptr [rsp + 0x60]
mov	dword ptr [rax], 4
jmp	0x14006045d
jmp	0x14006045d
mov	rax, qword ptr [rbp]
mov	byte ptr [rsp + 0x68], dl
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x68]
jmp	0x140060691
jmp	0x140060691
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x68], dl
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, byte ptr [rsp + 0x68]
jmp	0x1400606e1
jmp	0x1400606e1
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, ax
jmp	0x140060711
jmp	0x140060711
mov	rax, qword ptr [r14]
mov	byte ptr [rsp + 0x68], r8b
mov	rcx, r14
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, byte ptr [rsp + 0x68]
jmp	0x140060731
jmp	0x140060731
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140060771
jmp	0x140060771
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, ax
jmp	0x1400607f9
jmp	0x1400607f9
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
mov	r14, qword ptr [rsp + 0x110]
mov	rdi, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	r13, qword ptr [r9]
mov	r15, qword ptr [r9 + 8]
mov	ebp, dword ptr [rsp + 0x128]
mov	r12d, dword ptr [rsp + 0x130]
mov	rsi, rcx
mov	rcx, qword ptr [rip + 0x5dfee]
mov	qword ptr [rsp + 0xf8], rdx
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [r14 + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rcx, qword ptr [rax + rdx*8]
test	rcx, rcx
je	0x140060afb
je	0x140060afb
mov	rax, qword ptr [rsp + 0x118]
mov	edx, 0x25
mov	dword ptr [rax], 0
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
xor	edx, edx
mov	word ptr [rsp + 0x8c], ax
movsx	ax, bpl
test	r12b, r12b
jne	0x140060a70
jne	0x140060a70
mov	qword ptr [rsp + 0x20], r14
lea	r12, [rsp + 0x94]
lea	rcx, [rsp + 0x70]
mov	qword ptr [rsp + 0x40], r12
lea	r9, [rsp + 0x50]
lea	r8, [rsp + 0x60]
mov	word ptr [rsp + 0x8e], ax
lea	rax, [rsp + 0x8c]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x120]
mov	word ptr [rsp + 0x90], dx
mov	rdx, qword ptr [rsp + 0xf8]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x118]
mov	qword ptr [rsp + 0x60], rdi
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x68], rbx
xor	bx, bx
mov	qword ptr [rsp + 0x94], 0
mov	dword ptr [rsp + 0x9c], 0
mov	qword ptr [rsp + 0x50], r13
mov	qword ptr [rsp + 0x58], r15
call	0x14005e060
call	0x14005e060
mov	r14, qword ptr [rsp + 0x78]
mov	rdi, qword ptr [rsp + 0x70]
mov	rcx, r12
mov	rdx, qword ptr [rsp + 0x120]
movzx	eax, r14w
mov	qword ptr [rsp + 0x78], r14
mov	rbp, rdi
or	rbx, rax
mov	qword ptr [rsp + 0x70], rdi
call	0x140094930
call	0x140094930
cmp	r14w, -1
sete	r12b
test	rdi, rdi
setne	al
and	al, r12b
mov	r14d, eax
jne	0x140060ab0
jne	0x140060ab0
cmp	r15w, -1
sete	al
mov	edx, eax
test	r13, r13
je	0x140060a3a
je	0x140060a3a
test	al, al
jne	0x140060a90
jne	0x140060a90
cmp	dl, r12b
jne	0x140060a4a
jne	0x140060a4a
mov	rax, qword ptr [rsp + 0x118]
or	dword ptr [rax], 2
mov	rax, rsi
mov	qword ptr [rsi], rbp
mov	qword ptr [rsi + 8], rbx
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
xor	edx, edx
movsx	r12w, r12b
mov	word ptr [rsp + 0x92], dx
mov	edx, eax
mov	eax, r12d
jmp	0x14006094b
jmp	0x14006094b
nop	dword ptr [rax]
mov	rax, qword ptr [r13 + 0x10]
cmp	rax, qword ptr [r13 + 0x18]
jae	0x140060ae0
jae	0x140060ae0
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	dl
cmp	dl, r12b
jne	0x140060a4a
jne	0x140060a4a
jmp	0x140060a3f
jmp	0x140060a3f
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140060af0
jae	0x140060af0
movzx	eax, word ptr [rax]
xor	r12d, r12d
mov	r8d, 0
cmp	ax, -1
cmovne	r8, rdi
cmove	r12d, r14d
mov	rbp, r8
jmp	0x140060a27
jmp	0x140060a27
nop	word ptr [rax + rax]
mov	rax, qword ptr [r13]
mov	rcx, r13
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140060a9d
jmp	0x140060a9d
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140060abd
jmp	0x140060abd
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
mov	r13, qword ptr [rsp + 0x110]
mov	r15, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
mov	r12, qword ptr [r9]
mov	r14, qword ptr [r9 + 8]
mov	edi, dword ptr [rsp + 0x128]
mov	ebp, dword ptr [rsp + 0x130]
mov	rsi, rcx
mov	rcx, qword ptr [rip + 0x5dd8f]
mov	qword ptr [rsp + 0xf8], rdx
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [r13 + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rcx, qword ptr [rax + rdx*8]
test	rcx, rcx
je	0x140060d4c
je	0x140060d4c
mov	rax, qword ptr [rsp + 0x118]
mov	edx, 0x25
mov	dword ptr [rax], 0
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
xor	edx, edx
mov	word ptr [rsp + 0x8c], ax
movsx	ax, dil
test	bpl, bpl
jne	0x140060cc8
jne	0x140060cc8
mov	qword ptr [rsp + 0x60], r15
lea	r15, [rsp + 0x94]
lea	rcx, [rsp + 0x70]
mov	qword ptr [rsp + 0x40], r15
lea	r9, [rsp + 0x50]
lea	r8, [rsp + 0x60]
mov	word ptr [rsp + 0x8e], ax
lea	rax, [rsp + 0x8c]
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x120]
mov	qword ptr [rsp + 0x20], r13
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x118]
mov	word ptr [rsp + 0x90], dx
mov	rdx, qword ptr [rsp + 0xf8]
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x68], rbx
xor	bx, bx
mov	qword ptr [rsp + 0x94], 0
mov	dword ptr [rsp + 0x9c], 0
mov	qword ptr [rsp + 0x50], r12
mov	qword ptr [rsp + 0x58], r14
call	0x14005e060
call	0x14005e060
mov	r13, qword ptr [rsp + 0x78]
mov	rbp, qword ptr [rsp + 0x70]
mov	rcx, r15
mov	rdx, qword ptr [rsp + 0x120]
movzx	eax, r13w
mov	qword ptr [rsp + 0x78], r13
mov	rdi, rbp
or	rbx, rax
mov	qword ptr [rsp + 0x70], rbp
call	0x140094930
call	0x140094930
cmp	r13w, -1
sete	r13b
test	rbp, rbp
setne	al
and	al, r13b
mov	r15d, eax
jne	0x140060d00
jne	0x140060d00
cmp	r14w, -1
sete	al
mov	edx, eax
test	r12, r12
je	0x140060c95
je	0x140060c95
test	al, al
jne	0x140060ce0
jne	0x140060ce0
cmp	dl, r13b
jne	0x140060ca5
jne	0x140060ca5
mov	rax, qword ptr [rsp + 0x118]
or	dword ptr [rax], 2
mov	rax, rsi
mov	qword ptr [rsi], rdi
mov	qword ptr [rsi + 8], rbx
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
xor	edx, edx
movsx	bp, bpl
mov	word ptr [rsp + 0x92], dx
mov	edx, eax
mov	eax, ebp
jmp	0x140060baa
jmp	0x140060baa
mov	rax, qword ptr [r12 + 0x10]
cmp	rax, qword ptr [r12 + 0x18]
jae	0x140060d30
jae	0x140060d30
movzx	eax, word ptr [rax]
cmp	ax, -1
sete	dl
cmp	dl, r13b
jne	0x140060ca5
jne	0x140060ca5
jmp	0x140060c9a
jmp	0x140060c9a
nop	dword ptr [rax]
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140060d40
jae	0x140060d40
movzx	eax, word ptr [rax]
xor	r13d, r13d
mov	edi, 0
cmp	ax, -1
cmove	r13d, r15d
cmovne	rdi, rbp
jmp	0x140060c82
jmp	0x140060c82
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140060cef
jmp	0x140060cef
nop	dword ptr [rax]
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140060d0d
jmp	0x140060d0d
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
movzx	eax, byte ptr [rsp + 0x100]
mov	r13, qword ptr [r8 + 8]
mov	rbx, qword ptr [rsp + 0x110]
mov	r12, qword ptr [rsp + 0x118]
mov	rbp, qword ptr [r8]
mov	edi, r13d
mov	r15, rcx
mov	rcx, qword ptr [rip + 0x5d9e1]
mov	qword ptr [rsp + 0xe8], rdx
mov	qword ptr [rsp + 0xf8], r9
mov	byte ptr [rsp + 0x47], al
call	0x140022a70
call	0x140022a70
mov	r9, qword ptr [rsp + 0xf8]
mov	rdx, rax
mov	rax, qword ptr [r9 + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rsi, qword ptr [rax + rdx*8]
test	rsi, rsi
je	0x1400611e1
je	0x1400611e1
lea	rax, [rsp + 0x80]
lea	rcx, [rsp + 0x70]
mov	qword ptr [rsp + 0x48], rax
lea	r14, [rip - 0x3ea64]
cmp	rbx, r12
je	0x1400610f0
je	0x1400610f0
mov	qword ptr [rsp + 0xe0], r15
mov	r15, qword ptr [rsp + 0xe8]
mov	qword ptr [rsp + 0xf8], r9
mov	qword ptr [rsp + 0x50], rcx
jmp	0x140061088
jmp	0x140061088
nop	
lea	r9, [rbx + 1]
cmp	r12, r9
je	0x1400610e8
je	0x1400610e8
movzx	r10d, byte ptr [rbx + 1]
movzx	ecx, byte ptr [rsi + r10 + 0x139]
mov	rax, r10
test	cl, cl
jne	0x140060fb4
jne	0x140060fb4
mov	rdx, qword ptr [rsi]
mov	r11, qword ptr [rdx + 0x40]
cmp	r11, r14
jne	0x140061160
jne	0x140061160
test	al, al
je	0x140061150
je	0x140061150
mov	byte ptr [rsi + r10 + 0x139], al
mov	ecx, eax
cmp	cl, 0x45
je	0x140060fc2
je	0x140060fc2
cmp	cl, 0x4f
jne	0x140061138
jne	0x140061138
lea	r10, [rbx + 2]
cmp	r12, r10
je	0x1400610e8
je	0x1400610e8
movzx	r11d, byte ptr [rbx + 2]
movsx	r9d, cl
mov	rbx, r10
movzx	eax, byte ptr [rsi + r11 + 0x139]
mov	r8, r11
movsx	edx, al
test	al, al
jne	0x140061012
jne	0x140061012
mov	rax, qword ptr [rsi]
movsx	edx, r11b
mov	rax, qword ptr [rax + 0x40]
cmp	rax, r14
jne	0x1400611b0
jne	0x1400611b0
mov	rbx, r10
test	r8b, r8b
je	0x140061012
je	0x140061012
mov	byte ptr [rsi + r11 + 0x139], r8b
mov	rax, qword ptr [r15]
mov	rcx, qword ptr [rsp + 0x108]
mov	r13b, dil
mov	r8, qword ptr [rsp + 0x50]
mov	rax, qword ptr [rax + 0x10]
mov	dword ptr [rsp + 0x30], edx
movsx	edx, byte ptr [rsp + 0x47]
mov	qword ptr [rsp + 0x70], rbp
mov	qword ptr [rsp + 0x78], r13
mov	dword ptr [rsp + 0x38], r9d
mov	r9, qword ptr [rsp + 0xf8]
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, qword ptr [rsp + 0x48]
mov	dword ptr [rsp + 0x20], edx
mov	rdx, r15
call	rax
call	rax
mov	rdi, qword ptr [rsp + 0x88]
mov	rbp, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x88], rdi
mov	r13b, dil
mov	qword ptr [rsp + 0x80], rbp
add	rbx, 1
cmp	r12, rbx
je	0x1400610e8
je	0x1400610e8
movzx	r9d, byte ptr [rbx]
movzx	edx, byte ptr [rsi + r9 + 0x139]
mov	rax, r9
test	dl, dl
jne	0x1400610b6
jne	0x1400610b6
mov	rdx, qword ptr [rsi]
mov	r10, qword ptr [rdx + 0x40]
cmp	r10, r14
jne	0x140061118
jne	0x140061118
test	al, al
je	0x1400610bf
je	0x1400610bf
mov	byte ptr [rsi + r9 + 0x139], al
mov	edx, eax
cmp	dl, 0x25
je	0x140060f70
je	0x140060f70
test	dil, dil
jne	0x14006107f
jne	0x14006107f
movzx	edx, byte ptr [rbx]
mov	rax, qword ptr [rbp + 0x28]
cmp	rax, qword ptr [rbp + 0x30]
jae	0x140061190
jae	0x140061190
add	rbx, 1
mov	byte ptr [rax], dl
add	qword ptr [rbp + 0x28], 1
cmp	r12, rbx
jne	0x140061088
jne	0x140061088
nop	dword ptr [rax]
mov	r15, qword ptr [rsp + 0xe0]
mov	r13b, dil
mov	rax, r15
mov	qword ptr [r15], rbp
mov	qword ptr [r15 + 8], r13
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x58], r9
movsx	edx, r9b
xor	r8d, r8d
mov	rcx, rsi
call	r10
call	r10
mov	r9, qword ptr [rsp + 0x58]
jmp	0x1400610a8
jmp	0x1400610a8
nop	dword ptr [rax]
mov	rbx, r9
movsx	edx, cl
xor	r9d, r9d
jmp	0x140061012
jmp	0x140061012
nop	word ptr cs:[rax + rax]
mov	rbx, r9
xor	edx, edx
xor	r9d, r9d
jmp	0x140061012
jmp	0x140061012
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x60], r10
movsx	edx, r10b
xor	r8d, r8d
mov	rcx, rsi
mov	qword ptr [rsp + 0x58], r9
call	r11
call	r11
mov	r10, qword ptr [rsp + 0x60]
mov	r9, qword ptr [rsp + 0x58]
jmp	0x140060fa2
jmp	0x140060fa2
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	eax, -1
sete	dil
jmp	0x14006107f
jmp	0x14006107f
nop	word ptr cs:[rax + rax]
mov	qword ptr [rsp + 0x68], r11
xor	r8d, r8d
mov	rcx, rsi
mov	qword ptr [rsp + 0x60], r10
mov	dword ptr [rsp + 0x58], r9d
call	rax
call	rax
mov	r11, qword ptr [rsp + 0x68]
mov	r10, qword ptr [rsp + 0x60]
movsx	edx, al
mov	r9d, dword ptr [rsp + 0x58]
mov	r8d, edx
jmp	0x140061002
jmp	0x140061002
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x50
movdqu	xmm0, xmmword ptr [r8]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
movsx	ecx, byte ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
lea	r8, [rsp + 0x40]
mov	dword ptr [rsp + 0x38], ecx
movsx	ecx, byte ptr [rsp + 0x90]
mov	dword ptr [rsp + 0x30], ecx
mov	rcx, qword ptr [rsp + 0x88]
mov	qword ptr [rsp + 0x28], rcx
movsx	ecx, byte ptr [rsp + 0x80]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rax, rbx
add	rsp, 0x50
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xd8
mov	r13d, dword ptr [rsp + 0x150]
mov	ebp, dword ptr [rsp + 0x158]
mov	rdi, qword ptr [r8]
mov	r12, qword ptr [r8 + 8]
mov	r15d, ebp
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0x5d64a]
mov	rsi, r9
mov	byte ptr [rsp + 0x3f], r13b
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsi + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r14, qword ptr [rax + rdx*8]
test	r14, r14
je	0x1400613ec
je	0x1400613ec
lea	rcx, [rip + 0x55d9b]
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [rsi + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x1400613ec
jae	0x1400613ec
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x1400613ec
je	0x1400613ec
xor	r9d, r9d
lea	r8, [rip + 0x5ff6a]
lea	rdx, [rip + 0x5f8b3]
call	0x1400b35e0
call	0x1400b35e0
mov	rsi, rax
test	rax, rax
je	0x1400613ec
je	0x1400613ec
cmp	byte ptr [r14 + 0x38], 0
je	0x1400613b8
je	0x1400613b8
movzx	eax, byte ptr [r14 + 0x5e]
mov	byte ptr [rsp + 0x4c], al
test	bpl, bpl
jne	0x1400613a0
jne	0x1400613a0
movzx	eax, byte ptr [rsp + 0x3f]
lea	rbp, [rsp + 0x50]
mov	rcx, rsi
mov	r13d, r12d
lea	r9, [rsp + 0x4c]
mov	r8d, 0x80
mov	rdx, rbp
mov	byte ptr [rsp + 0x4e], r15b
mov	byte ptr [rsp + 0x4d], al
mov	rax, qword ptr [rsp + 0x148]
mov	qword ptr [rsp + 0x20], rax
call	0x14001d210
call	0x14001d210
mov	rcx, rbp
call	0x140015a08
call	0x140015a08
mov	rsi, rax
test	r12b, r12b
jne	0x14006137f
jne	0x14006137f
mov	rax, qword ptr [rdi]
mov	r8, rsi
mov	rdx, rbp
mov	rcx, rdi
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	rsi, rax
mov	eax, 1
cmovne	r13d, eax
mov	rax, rbx
mov	qword ptr [rbx], rdi
mov	byte ptr [rbx + 8], r13b
add	rsp, 0xd8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	byte ptr [rsp + 0x4f], 0
mov	r15d, r13d
mov	byte ptr [rsp + 0x3f], bpl
jmp	0x14006131b
jmp	0x14006131b
nop	word ptr [rax + rax]
mov	rcx, r14
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [r14]
lea	rdx, [rip - 0x3ef2a]
mov	r8, qword ptr [rax + 0x30]
mov	eax, 0x25
cmp	r8, rdx
je	0x14006130e
je	0x14006130e
mov	edx, 0x25
mov	rcx, r14
call	r8
call	r8
jmp	0x14006130e
jmp	0x14006130e
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x88
mov	r15, qword ptr [r8 + 8]
mov	rbx, qword ptr [rsp + 0x100]
mov	r13, qword ptr [rsp + 0x108]
movzx	ebp, word ptr [rsp + 0xf0]
mov	r12, qword ptr [r8]
mov	edi, r15d
mov	r14, rcx
mov	rcx, qword ptr [rip + 0x5d4a1]
mov	qword ptr [rsp + 0xe8], r9
mov	qword ptr [rsp + 0xd8], rdx
call	0x140022a70
call	0x140022a70
mov	r9, qword ptr [rsp + 0xe8]
mov	rcx, rax
mov	rax, qword ptr [r9 + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rsi, qword ptr [rax + rcx*8]
test	rsi, rsi
je	0x14006163f
je	0x14006163f
lea	r8, [rsp + 0x70]
lea	rcx, [rsp + 0x60]
movzx	r10d, bp
cmp	rbx, r13
je	0x1400615a8
je	0x1400615a8
mov	qword ptr [rsp + 0x100], rbx
mov	rbx, rsi
mov	rsi, qword ptr [rsp + 0x100]
mov	qword ptr [rsp + 0xd0], r14
mov	r14, qword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0xe8], r9
mov	qword ptr [rsp + 0x48], r8
mov	qword ptr [rsp + 0x50], rcx
mov	dword ptr [rsp + 0x58], r10d
jmp	0x1400614e6
jmp	0x1400614e6
nop	word ptr [rax + rax]
test	dil, dil
je	0x1400615d0
je	0x1400615d0
add	rsi, 2
cmp	r13, rsi
je	0x1400615a0
je	0x1400615a0
mov	rax, qword ptr [rbx]
xor	r8d, r8d
movzx	edx, word ptr [rsi]
mov	rcx, rbx
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	al, 0x25
jne	0x1400614d0
jne	0x1400614d0
lea	rbp, [rsi + 2]
cmp	r13, rbp
je	0x1400615a0
je	0x1400615a0
mov	rax, qword ptr [rbx]
movzx	edx, word ptr [rsi + 2]
xor	r8d, r8d
mov	rcx, rbx
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
movsx	r11d, al
cmp	r11b, 0x45
je	0x140061600
je	0x140061600
xor	edx, edx
cmp	r11b, 0x4f
je	0x140061600
je	0x140061600
mov	rax, qword ptr [r14]
mov	ecx, dword ptr [rsp + 0x58]
mov	r15b, dil
mov	rsi, rbp
mov	rdi, qword ptr [rsp + 0xf8]
mov	r9, qword ptr [rsp + 0xe8]
add	rsi, 2
mov	rax, qword ptr [rax + 0x10]
mov	r8, qword ptr [rsp + 0x50]
mov	qword ptr [rsp + 0x60], r12
mov	qword ptr [rsp + 0x68], r15
mov	dword ptr [rsp + 0x38], edx
mov	rdx, r14
mov	qword ptr [rsp + 0x28], rdi
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, qword ptr [rsp + 0x48]
mov	dword ptr [rsp + 0x30], r11d
call	rax
call	rax
mov	rdi, qword ptr [rsp + 0x78]
mov	r12, qword ptr [rsp + 0x70]
mov	qword ptr [rsp + 0x78], rdi
mov	r15b, dil
mov	qword ptr [rsp + 0x70], r12
cmp	r13, rsi
jne	0x1400614e6
jne	0x1400614e6
mov	r14, qword ptr [rsp + 0xd0]
mov	r15b, dil
mov	rax, r14
mov	qword ptr [r14], r12
mov	qword ptr [r14 + 8], r15
add	rsp, 0x88
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
movzx	eax, word ptr [rsi]
mov	rcx, qword ptr [r12 + 0x28]
cmp	rcx, qword ptr [r12 + 0x30]
jae	0x140061630
jae	0x140061630
mov	word ptr [rcx], ax
add	rcx, 2
mov	qword ptr [r12 + 0x28], rcx
cmp	ax, -1
sete	dil
jmp	0x1400614d9
jmp	0x1400614d9
nop	dword ptr [rax + rax]
lea	rbp, [rsi + 4]
mov	byte ptr [rsp + 0x5f], r11b
cmp	r13, rbp
je	0x1400615a0
je	0x1400615a0
mov	rax, qword ptr [rbx]
movzx	edx, word ptr [rsi + 4]
xor	r8d, r8d
mov	rcx, rbx
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
movsx	edx, byte ptr [rsp + 0x5f]
movsx	r11d, al
jmp	0x140061530
jmp	0x140061530
nop	dword ptr [rax]
movzx	edx, ax
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
jmp	0x1400615eb
jmp	0x1400615eb
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x50
movdqu	xmm0, xmmword ptr [r8]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
movsx	ecx, byte ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x40], xmm0
lea	r8, [rsp + 0x40]
mov	dword ptr [rsp + 0x38], ecx
movsx	ecx, byte ptr [rsp + 0x90]
mov	dword ptr [rsp + 0x30], ecx
mov	rcx, qword ptr [rsp + 0x88]
mov	qword ptr [rsp + 0x28], rcx
movzx	ecx, word ptr [rsp + 0x80]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rax, rbx
add	rsp, 0x50
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x140
mov	rbp, qword ptr [r8]
mov	r12, qword ptr [r8 + 8]
mov	edi, dword ptr [rsp + 0x1b0]
mov	r13d, dword ptr [rsp + 0x1b8]
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0x5d1ff]
mov	rsi, r9
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsi + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r14, qword ptr [rax + rdx*8]
test	r14, r14
je	0x140061806
je	0x140061806
lea	rcx, [rip + 0x55955]
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [rsi + 0xd0]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x140061806
jae	0x140061806
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x140061806
je	0x140061806
xor	r9d, r9d
lea	r8, [rip + 0x5fb34]
lea	rdx, [rip + 0x5f45d]
call	0x1400b35e0
call	0x1400b35e0
mov	rsi, rax
test	rax, rax
je	0x140061806
je	0x140061806
mov	rax, qword ptr [r14]
mov	edx, 0x25
mov	rcx, r14
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
xor	edx, edx
mov	word ptr [rsp + 0x38], ax
movsx	ax, dil
test	r13b, r13b
jne	0x1400617f0
jne	0x1400617f0
mov	word ptr [rsp + 0x3a], ax
lea	rdi, [rsp + 0x40]
mov	rcx, rsi
mov	r13d, r12d
mov	word ptr [rsp + 0x3c], dx
lea	r9, [rsp + 0x38]
mov	r8d, 0x80
mov	rdx, rdi
mov	rax, qword ptr [rsp + 0x1a8]
mov	qword ptr [rsp + 0x20], rax
call	0x14001d530
call	0x14001d530
mov	rcx, rdi
call	0x140015a60
call	0x140015a60
movsxd	rsi, eax
test	r12b, r12b
jne	0x1400617d4
jne	0x1400617d4
mov	rax, qword ptr [rbp]
mov	r8, rsi
mov	rdx, rdi
mov	rcx, rbp
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	rsi, rax
mov	eax, 1
cmovne	r13d, eax
mov	rax, rbx
mov	qword ptr [rbx], rbp
mov	byte ptr [rbx + 8], r13b
add	rsp, 0x140
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
xor	edx, edx
movsx	r13w, r13b
mov	word ptr [rsp + 0x3e], dx
mov	edx, eax
mov	eax, r13d
jmp	0x140061773
jmp	0x140061773
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x591f9]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x1c]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x20]
and	eax, 1
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x20]
shr	eax, 1
and	eax, 1
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0xd8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
test	byte ptr [rcx + 0x20], 5
setne	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
cmp	byte ptr [rcx + 0xe1], 0
mov	rbx, rcx
je	0x140061890
je	0x140061890
movzx	eax, byte ptr [rcx + 0xe0]
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, qword ptr [rcx + 0xf0]
test	rsi, rsi
je	0x1400618ed
je	0x1400618ed
cmp	byte ptr [rsi + 0x38], 0
je	0x1400618c0
je	0x1400618c0
movzx	eax, byte ptr [rsi + 0x59]
mov	byte ptr [rbx + 0xe0], al
mov	byte ptr [rbx + 0xe1], 1
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
mov	rcx, rsi
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x3f432]
mov	r8, qword ptr [rax + 0x30]
mov	eax, 0x20
cmp	r8, rdx
je	0x1400618a6
je	0x1400618a6
mov	edx, 0x20
mov	rcx, rsi
call	r8
call	r8
jmp	0x1400618a6
jmp	0x1400618a6
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x20]
test	eax, eax
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0xe8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, qword ptr [rcx + 0xf0]
mov	ebx, edx
test	rsi, rsi
je	0x14006197c
je	0x14006197c
cmp	byte ptr [rsi + 0x38], 0
je	0x140061950
je	0x140061950
movzx	ebx, dl
movzx	eax, byte ptr [rsi + rbx + 0x39]
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rsi
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x3f4c2]
mov	r8, qword ptr [rax + 0x30]
mov	eax, ebx
cmp	r8, rdx
je	0x140061942
je	0x140061942
movsx	edx, bl
mov	rcx, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	r8
jmp	r8
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, rcx
mov	edi, r8d
mov	ecx, edx
mov	rbx, qword ptr [rax + 0xf0]
test	rbx, rbx
je	0x1400619f8
je	0x1400619f8
movzx	esi, dl
movzx	eax, byte ptr [rbx + rsi + 0x139]
test	al, al
jne	0x1400619db
jne	0x1400619db
mov	rax, qword ptr [rbx]
lea	r8, [rip - 0x3f4e4]
mov	rax, qword ptr [rax + 0x40]
cmp	rax, r8
jne	0x1400619e8
jne	0x1400619e8
cmp	dil, cl
je	0x1400619d9
je	0x1400619d9
mov	byte ptr [rbx + rsi + 0x139], cl
mov	eax, ecx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
mov	rcx, rbx
movsx	edx, dl
movsx	r8d, dil
call	rax
call	rax
mov	ecx, eax
jmp	0x1400619cd
jmp	0x1400619cd
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x20]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	edx, edx
test	byte ptr [rcx + 0x20], 5
mov	rax, rcx
cmovne	rax, rdx
ret	
ret	
nop	
nop	
test	byte ptr [rcx + 0x20], 5
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
test	byte ptr [rcx + 0x20], 5
setne	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x1c]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x20]
and	eax, 1
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x20]
shr	eax, 1
and	eax, 1
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0xd8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
test	byte ptr [rcx + 0x20], 5
setne	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
cmp	byte ptr [rcx + 0xe2], 0
mov	rbx, rcx
je	0x140061ab0
je	0x140061ab0
movzx	eax, word ptr [rcx + 0xe0]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
mov	rcx, qword ptr [rcx + 0xf0]
test	rcx, rcx
je	0x140061adb
je	0x140061adb
mov	rax, qword ptr [rcx]
mov	edx, 0x20
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	byte ptr [rbx + 0xe2], 1
mov	word ptr [rbx + 0xe0], ax
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x20]
test	eax, eax
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0xe8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rcx, qword ptr [rcx + 0xf0]
test	rcx, rcx
je	0x140061b31
je	0x140061b31
mov	rax, qword ptr [rcx]
movsx	edx, dl
mov	rax, qword ptr [rax + 0x50]
add	rsp, 0x28
jmp	rax
jmp	rax
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rcx, qword ptr [rcx + 0xf0]
test	rcx, rcx
je	0x140061b65
je	0x140061b65
mov	rax, qword ptr [rcx]
movzx	edx, dx
movsx	r8d, r8b
mov	rax, qword ptr [rax + 0x60]
add	rsp, 0x28
jmp	rax
jmp	rax
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x20]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	edx, edx
test	byte ptr [rcx + 0x20], 5
mov	rax, rcx
cmovne	rax, rdx
ret	
ret	
nop	
nop	
test	byte ptr [rcx + 0x20], 5
sete	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
test	byte ptr [rcx + 0x20], 5
setne	al
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x58f39]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xc8
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	qword ptr [rsp + 0x110], rcx
mov	rcx, qword ptr [rip + 0x5cce4]
movups	xmmword ptr [rsp + 0x90], xmm0
movups	xmmword ptr [rsp + 0x80], xmm1
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x130]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
mov	qword ptr [rsp + 0x58], rax
test	rax, rax
je	0x140062a80
je	0x140062a80
lea	rcx, [rip + 0x553e0]
call	0x140022a70
call	0x140022a70
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x130]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	rdi, [rax + rbx*8]
mov	rsi, qword ptr [rdi]
test	rsi, rsi
je	0x1400628b8
je	0x1400628b8
lea	rax, [rsi + 0x64]
cmp	qword ptr [rsi + 0x40], 0
mov	qword ptr [rsp + 0x48], rax
jne	0x140062230
jne	0x140062230
mov	byte ptr [rsp + 0x7b], 0
lea	rax, [rsp + 0xb8]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x30], rax
call	0x140071d40
call	0x140071d40
cmp	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsp + 0xb0], rax
je	0x140061cad
je	0x140061cad
lea	rcx, [rsp + 0xb0]
mov	edx, 0x20
call	0x140073cf0
call	0x140073cf0
lea	rax, [rsp + 0xab]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x70], rax
call	0x140071d40
call	0x140071d40
mov	rcx, qword ptr [rsp + 0x30]
mov	edx, 0x20
mov	qword ptr [rsp + 0xb8], rax
call	0x140073cf0
call	0x140073cf0
lea	rax, [rsi + 0x65]
mov	byte ptr [rsp + 0x6b], 0
xor	r14d, r14d
xor	ebx, ebx
mov	qword ptr [rsp + 0x40], rax
mov	eax, dword ptr [rsi + 0x60]
mov	dword ptr [rsp + 0x6c], 0
mov	dword ptr [rsp + 0xac], eax
lea	rax, [rsp + 0xac]
mov	qword ptr [rsp + 0x60], rax
lea	rax, [rsp + 0xb0]
mov	qword ptr [rsp + 0x50], 0
mov	byte ptr [rsp + 0x7a], 0
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x60]
cmp	byte ptr [rax + r14], 4
ja	0x140062685
ja	0x140062685
movzx	eax, byte ptr [rax + r14]
lea	rdx, [rip + 0x5851a]
movsxd	rax, dword ptr [rdx + rax*4]
add	rax, rdx
jmp	rax
jmp	rax
nop	
cmp	qword ptr [rsi + 0x40], 0
jne	0x1400626f0
jne	0x1400626f0
cmp	qword ptr [rsi + 0x50], 0
lea	r12, [rsp + 0x80]
lea	rbp, [rsp + 0x90]
jne	0x140062738
jne	0x140062738
movzx	r12d, byte ptr [rsp + 0x7b]
xor	r12d, 1
lea	eax, [r14 + 1]
cmp	eax, 3
setle	al
add	r14, 1
test	al, r12b
jne	0x140061d2a
jne	0x140061d2a
jmp	0x140061f28
jmp	0x140061f28
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x130]
test	byte ptr [rax + 0x19], 2
jne	0x140062568
jne	0x140062568
cmp	qword ptr [rsp + 0x50], 1
ja	0x140062568
ja	0x140062568
test	r14d, r14d
je	0x140062568
je	0x140062568
cmp	r14, 1
je	0x140062546
je	0x140062546
cmp	r14, 2
je	0x1400627b7
je	0x1400627b7
mov	rax, qword ptr [rsp + 0xb8]
cmp	qword ptr [rax - 0x18], 1
ja	0x140062768
ja	0x140062768
cmp	byte ptr [rsp + 0x7a], 0
jne	0x14006296e
jne	0x14006296e
mov	rax, qword ptr [rsp + 0xb0]
cmp	qword ptr [rax - 0x18], 0
je	0x140061e47
je	0x140061e47
movsx	eax, byte ptr [rsp + 0x6c]
movsx	edx, bl
cmp	byte ptr [rsp + 0x6b], 0
lea	rdi, [rsp + 0xb0]
mov	rcx, rdi
cmovne	edx, eax
call	0x140073fa0
call	0x140073fa0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	r8, rdi
call	0x1400ae880
call	0x1400ae880
test	al, al
jne	0x140061e47
jne	0x140061e47
mov	rax, qword ptr [rsp + 0x138]
or	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x6b], 0
je	0x1400627e0
je	0x1400627e0
lea	r12, [rsp + 0x80]
lea	rbp, [rsp + 0x90]
cmp	dword ptr [rsi + 0x58], ebx
je	0x1400627e0
je	0x1400627e0
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x138]
or	dword ptr [rax], 4
mov	rdx, r12
mov	rcx, rbp
call	0x140020830
call	0x140020830
test	al, al
je	0x140061e95
je	0x140061e95
mov	rax, qword ptr [rsp + 0x138]
or	dword ptr [rax], 2
mov	rax, qword ptr [rsp + 0x110]
mov	rdx, qword ptr [rsp + 0x70]
movdqu	xmm2, xmmword ptr [rsp + 0x90]
movups	xmmword ptr [rax], xmm2
mov	rax, qword ptr [rsp + 0xb8]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xb0]
mov	rdx, qword ptr [rsp + 0x30]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0x110]
add	rsp, 0xc8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
lea	r12, [rsp + 0x80]
lea	rbp, [rsp + 0x90]
mov	rdx, r12
mov	rcx, rbp
call	0x140020830
call	0x140020830
test	al, al
je	0x1400626a0
je	0x1400626a0
xor	r12d, r12d
cmp	r14, 3
jne	0x1400623c0
jne	0x1400623c0
cmp	qword ptr [rsp + 0x50], 1
seta	al
and	eax, r12d
mov	byte ptr [rsp + 0x38], al
cmp	byte ptr [rsp + 0x38], 0
je	0x140062a72
je	0x140062a72
cmp	byte ptr [rsp + 0x7a], 0
je	0x140062690
je	0x140062690
mov	r15, qword ptr [rsi + 0x48]
mov	r13d, dword ptr [rsp + 0x98]
mov	rdi, qword ptr [rsp + 0x90]
mov	ebp, 1
cmp	r13d, -1
sete	r14b
mov	r12d, r14d
test	rdi, rdi
je	0x140061f80
je	0x140061f80
test	r14b, r14b
jne	0x140062007
jne	0x140062007
mov	rcx, qword ptr [rsp + 0x80]
cmp	dword ptr [rsp + 0x88], -1
sete	al
test	rcx, rcx
je	0x140061fa0
je	0x140061fa0
test	al, al
jne	0x140062360
jne	0x140062360
xor	r12d, eax
mov	rax, qword ptr [rsp + 0x50]
cmp	rbp, rax
jae	0x140062648
jae	0x140062648
test	r12b, r12b
je	0x140062648
je	0x140062648
mov	rdi, qword ptr [rsp + 0x90]
test	rdi, rdi
je	0x140061fd0
je	0x140061fd0
test	r14b, r14b
jne	0x1400623a0
jne	0x1400623a0
cmp	byte ptr [r15 + rbp], r13b
jne	0x140062339
jne	0x140062339
mov	rdi, qword ptr [rsp + 0x90]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140062538
jae	0x140062538
add	rax, 1
mov	qword ptr [rdi + 0x10], rax
mov	dword ptr [rsp + 0x98], 0xffffffff
add	rbp, 1
movzx	r14d, byte ptr [rsp + 0x38]
mov	rax, qword ptr [rdi + 0x18]
mov	r13d, 0xffffffff
xor	r12d, r12d
cmp	qword ptr [rdi + 0x10], rax
jb	0x140061f80
jb	0x140061f80
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	r12b
je	0x140062a61
je	0x140062a61
movzx	r14d, byte ptr [rsp + 0x38]
mov	r13d, 0xffffffff
jmp	0x140061f80
jmp	0x140061f80
nop	dword ptr [rax + rax]
mov	rbp, qword ptr [rsp + 0x90]
mov	edi, dword ptr [rsp + 0x98]
mov	r15, qword ptr [rip + 0x5c72a]
jmp	0x14006211d
jmp	0x14006211d
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x48]
mov	rdx, qword ptr [r15]
sub	rax, rcx
movzx	r12d, byte ptr [rdx + rax]
mov	rax, qword ptr [rsp + 0xb8]
mov	rbp, qword ptr [rax - 0x18]
lea	rdi, [rbp + 1]
cmp	qword ptr [rax - 0x10], rdi
jb	0x1400620b7
jb	0x1400620b7
mov	rcx, qword ptr [rip + 0x5c593]
mov	r9d, dword ptr [rcx]
test	r9d, r9d
jne	0x140062310
jne	0x140062310
mov	r8d, dword ptr [rax - 8]
test	r8d, r8d
setg	al
test	al, al
je	0x1400620c4
je	0x1400620c4
mov	rcx, qword ptr [rsp + 0x30]
mov	rdx, rdi
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rsp + 0xb8]
add	ebx, 1
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], r12b
mov	rax, qword ptr [rsp + 0xb8]
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rdi
mov	byte ptr [rax + rbp + 1], 0
mov	rbp, qword ptr [rsp + 0x90]
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140062300
jae	0x140062300
add	rax, 1
mov	qword ptr [rbp + 0x10], rax
mov	dword ptr [rsp + 0x98], 0xffffffff
mov	edi, 0xffffffff
cmp	edi, -1
sete	r12b
test	rbp, rbp
je	0x140062132
je	0x140062132
test	r12b, r12b
jne	0x140062270
jne	0x140062270
mov	r13d, r12d
mov	rcx, qword ptr [rsp + 0x80]
cmp	dword ptr [rsp + 0x88], -1
sete	al
test	rcx, rcx
je	0x140062155
je	0x140062155
test	al, al
jne	0x1400622b0
jne	0x1400622b0
cmp	r13b, al
je	0x140062638
je	0x140062638
mov	rcx, qword ptr [rsp + 0x90]
test	rcx, rcx
je	0x140062174
je	0x140062174
test	r12b, r12b
jne	0x1400622e8
jne	0x1400622e8
mov	rcx, qword ptr [rsp + 0x40]
movsx	edx, dil
mov	r8d, 0xa
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x140062070
jne	0x140062070
cmp	byte ptr [rsi + 0x21], dil
je	0x140062240
je	0x140062240
cmp	byte ptr [rsi + 0x20], 0
je	0x140062638
je	0x140062638
cmp	byte ptr [rsi + 0x22], dil
jne	0x140062638
jne	0x140062638
cmp	byte ptr [rsp + 0x6b], 0
jne	0x140062320
jne	0x140062320
test	ebx, ebx
je	0x1400629c6
je	0x1400629c6
mov	rax, qword ptr [rsp + 0xb0]
mov	rbp, qword ptr [rax - 0x18]
lea	rdi, [rbp + 1]
cmp	qword ptr [rax - 0x10], rdi
jb	0x1400621f5
jb	0x1400621f5
mov	rcx, qword ptr [rip + 0x5c451]
mov	edx, dword ptr [rcx]
test	edx, edx
jne	0x140062350
jne	0x140062350
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
test	al, al
je	0x140062202
je	0x140062202
mov	rcx, qword ptr [rsp + 0x38]
mov	rdx, rdi
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rsp + 0xb0]
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], bl
mov	rax, qword ptr [rsp + 0xb0]
xor	ebx, ebx
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rdi
mov	byte ptr [rax + rbp + 1], 0
jmp	0x1400620ef
jmp	0x1400620ef
cmp	qword ptr [rsi + 0x50], 0
setne	byte ptr [rsp + 0x7b]
jmp	0x140061c74
jmp	0x140061c74
nop	
cmp	byte ptr [rsp + 0x6b], 0
jne	0x140062320
jne	0x140062320
mov	ecx, dword ptr [rsi + 0x58]
test	ecx, ecx
jle	0x140062638
jle	0x140062638
mov	dword ptr [rsp + 0x6c], ebx
xor	ebx, ebx
mov	byte ptr [rsp + 0x6b], 1
jmp	0x1400620ef
jmp	0x1400620ef
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbp + 0x18]
xor	r13d, r13d
cmp	qword ptr [rbp + 0x10], rax
jb	0x140062135
jb	0x140062135
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	r13b
jne	0x140062135
jne	0x140062135
mov	qword ptr [rsp + 0x90], 0
jmp	0x140062135
jmp	0x140062135
nop	dword ptr [rax]
mov	rdx, qword ptr [rcx + 0x18]
xor	eax, eax
cmp	qword ptr [rcx + 0x10], rdx
jb	0x140062155
jb	0x140062155
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jne	0x140062155
jne	0x140062155
mov	qword ptr [rsp + 0x80], 0
jmp	0x140062155
jmp	0x140062155
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140062890
jae	0x140062890
movzx	edi, byte ptr [rax]
jmp	0x140062174
jmp	0x140062174
nop	
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x14006210d
jmp	0x14006210d
nop	
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
jmp	0x1400620b3
jmp	0x1400620b3
nop	dword ptr [rax]
movzx	r12d, byte ptr [rsp + 0x6b]
mov	rax, qword ptr [rsp + 0xb8]
cmp	qword ptr [rax - 0x18], 0
jne	0x140061d80
jne	0x140061d80
lea	r12, [rsp + 0x80]
lea	rbp, [rsp + 0x90]
jmp	0x140061e70
jmp	0x140061e70
nop	
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
jmp	0x1400621f1
jmp	0x1400621f1
nop	dword ptr [rax]
mov	rax, qword ptr [rcx + 0x18]
cmp	qword ptr [rcx + 0x10], rax
jb	0x140061fa3
jb	0x140061fa3
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	dl
xor	r12d, edx
cmp	eax, -1
jne	0x140061fa3
jne	0x140061fa3
mov	qword ptr [rsp + 0x80], 0
jmp	0x140061fa3
jmp	0x140061fa3
nop	word ptr [rax + rax]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x1400629f3
jae	0x1400629f3
movzx	ecx, byte ptr [rax]
cmp	byte ptr [r15 + rbp], cl
je	0x140061ff0
je	0x140061ff0
jmp	0x140062339
jmp	0x140062339
mov	ebp, dword ptr [rsp + 0x98]
mov	rdi, qword ptr [rsp + 0x90]
cmp	ebp, -1
sete	r13b
test	rdi, rdi
je	0x1400623e4
je	0x1400623e4
test	r13b, r13b
jne	0x140062466
jne	0x140062466
mov	r15d, r13d
mov	rcx, qword ptr [rsp + 0x80]
cmp	dword ptr [rsp + 0x88], -1
sete	al
test	rcx, rcx
je	0x140062407
je	0x140062407
test	al, al
jne	0x1400624b0
jne	0x1400624b0
cmp	r13b, al
je	0x140061d80
je	0x140061d80
mov	rdi, qword ptr [rsp + 0x90]
test	rdi, rdi
je	0x140062426
je	0x140062426
test	r15b, r15b
jne	0x1400624e8
jne	0x1400624e8
mov	rax, qword ptr [rsp + 0x58]
movzx	ebp, bpl
mov	rax, qword ptr [rax + 0x30]
test	byte ptr [rax + rbp*2], 0x20
je	0x140061d80
je	0x140061d80
mov	rdi, qword ptr [rsp + 0x90]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140062518
jae	0x140062518
mov	dword ptr [rsp + 0x98], 0xffffffff
add	rax, 1
mov	qword ptr [rdi + 0x10], rax
mov	rax, qword ptr [rdi + 0x18]
mov	r15d, 1
mov	ebp, 0xffffffff
xor	r13d, r13d
cmp	qword ptr [rdi + 0x10], rax
jb	0x1400623e7
jb	0x1400623e7
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	r13b
je	0x140062a50
je	0x140062a50
mov	r15d, 1
mov	ebp, 0xffffffff
jmp	0x1400623e7
jmp	0x1400623e7
nop	dword ptr [rax + rax]
mov	rdx, qword ptr [rcx + 0x18]
xor	eax, eax
cmp	qword ptr [rcx + 0x10], rdx
jb	0x140062407
jb	0x140062407
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jne	0x140062407
jne	0x140062407
mov	qword ptr [rsp + 0x80], 0
jmp	0x140062407
jmp	0x140062407
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x1400629ce
jae	0x1400629ce
mov	rdx, qword ptr [rsp + 0x58]
movzx	ecx, byte ptr [rax]
mov	rdx, qword ptr [rdx + 0x30]
test	byte ptr [rdx + rcx*2], 0x20
jne	0x140062453
jne	0x140062453
jmp	0x140061d80
jmp	0x140061d80
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	dword ptr [rsp + 0x98], 0xffffffff
jmp	0x140062466
jmp	0x140062466
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140061ff8
jmp	0x140061ff8
cmp	byte ptr [rsp + 0x7b], 0
jne	0x140062568
jne	0x140062568
cmp	byte ptr [rsp + 0xac], 3
je	0x140062568
je	0x140062568
cmp	byte ptr [rsp + 0xae], 1
jne	0x140062685
jne	0x140062685
nop	dword ptr [rax]
mov	r13, qword ptr [rsi + 0x30]
xor	edi, edi
lea	r12, [rsp + 0x80]
lea	rbp, [rsp + 0x90]
jmp	0x1400625b6
jmp	0x1400625b6
mov	rdx, qword ptr [rsi + 0x28]
cmp	byte ptr [rdx + rdi], al
jne	0x140062608
jne	0x140062608
mov	rcx, qword ptr [rsp + 0x90]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140062670
jae	0x140062670
add	rax, 1
mov	qword ptr [rcx + 0x10], rax
mov	dword ptr [rsp + 0x98], 0xffffffff
add	rdi, 1
mov	rdx, r12
mov	rcx, rbp
call	0x140020830
call	0x140020830
cmp	al, 1
je	0x140062680
je	0x140062680
cmp	rdi, r13
jae	0x140062680
jae	0x140062680
mov	rcx, qword ptr [rsp + 0x90]
mov	eax, dword ptr [rsp + 0x98]
test	rcx, rcx
je	0x140062580
je	0x140062580
cmp	eax, -1
jne	0x140062580
jne	0x140062580
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140062a19
jae	0x140062a19
mov	rdx, qword ptr [rsi + 0x28]
movzx	edx, byte ptr [rdx + rdi]
cmp	byte ptr [rax], dl
je	0x14006259f
je	0x14006259f
nop	dword ptr [rax]
test	rdi, rdi
jne	0x140061e70
jne	0x140061e70
mov	rax, qword ptr [rsp + 0x130]
mov	eax, dword ptr [rax + 0x18]
mov	r12d, eax
mov	dword ptr [rsp + 0x7c], eax
shr	r12d, 9
xor	r12d, 1
and	r12d, 1
jmp	0x140061d80
jmp	0x140061d80
nop	dword ptr [rax]
mov	r12d, 1
jmp	0x140062326
jmp	0x140062326
nop	dword ptr [rax + rax]
cmp	qword ptr [rsp + 0x50], rbp
jne	0x140062339
jne	0x140062339
mov	rax, qword ptr [rsp + 0xb8]
cmp	qword ptr [rax - 0x18], 1
jbe	0x140061dee
jbe	0x140061dee
jmp	0x140062768
jmp	0x140062768
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x1400625a7
jmp	0x1400625a7
nop	dword ptr [rax + rax]
cmp	rdi, r13
jne	0x140062608
jne	0x140062608
mov	r12d, 1
jmp	0x140061d80
jmp	0x140061d80
mov	r15, qword ptr [rsi + 0x38]
jmp	0x140061f52
jmp	0x140061f52
nop	dword ptr [rax]
mov	rcx, rbp
call	0x1400208f0
call	0x1400208f0
mov	rcx, qword ptr [rsp + 0x58]
movzx	eax, al
mov	rdx, qword ptr [rcx + 0x30]
test	byte ptr [rdx + rax*2], 0x20
je	0x140061f1b
je	0x140061f1b
mov	rcx, qword ptr [rsp + 0x90]
call	0x140091a00
call	0x140091a00
mov	dword ptr [rsp + 0x98], 0xffffffff
nop	word ptr cs:[rax + rax]
mov	r12d, 1
jmp	0x140061f1e
jmp	0x140061f1e
nop	dword ptr [rax + rax]
lea	r12, [rsp + 0x80]
lea	rbp, [rsp + 0x90]
mov	rdx, r12
mov	rcx, rbp
call	0x140020830
call	0x140020830
test	al, al
je	0x140062807
je	0x140062807
cmp	qword ptr [rsi + 0x50], 0
jne	0x140062738
jne	0x140062738
cmp	qword ptr [rsi + 0x40], 0
je	0x140061d76
je	0x140061d76
mov	byte ptr [rsp + 0x7a], 1
mov	r12d, 1
jmp	0x140061d80
jmp	0x140061d80
nop	dword ptr [rax]
mov	rdx, r12
mov	rcx, rbp
call	0x140020830
call	0x140020830
test	al, al
je	0x140062847
je	0x140062847
cmp	qword ptr [rsi + 0x40], 0
je	0x140061d76
je	0x140061d76
cmp	qword ptr [rsi + 0x50], 0
jne	0x140061d76
jne	0x140061d76
jmp	0x140062725
jmp	0x140062725
nop	dword ptr [rax + rax]
mov	rdi, qword ptr [rsp + 0x30]
xor	r8d, r8d
mov	edx, 0x30
mov	rcx, rdi
call	0x14001b630
call	0x14001b630
test	rax, rax
je	0x140061dee
je	0x140061dee
mov	rdx, qword ptr [rsp + 0xb8]
cmp	rax, -1
mov	rcx, rdi
mov	r8, qword ptr [rdx - 0x18]
lea	rdx, [r8 - 1]
cmove	rax, rdx
xor	r9d, r9d
cmp	rax, r8
cmovbe	r8, rax
xor	edx, edx
call	0x140073e00
call	0x140073e00
jmp	0x140061dee
jmp	0x140061dee
movzx	eax, byte ptr [rsp + 0xaf]
cmp	al, 4
je	0x140062568
je	0x140062568
cmp	al, 3
jne	0x140062685
jne	0x140062685
cmp	byte ptr [rsp + 0x7b], 0
je	0x140062685
je	0x140062685
jmp	0x140062568
jmp	0x140062568
nop	
mov	rdx, qword ptr [rsp + 0x30]
mov	rcx, qword ptr [rsp + 0x140]
lea	r12, [rsp + 0x80]
lea	rbp, [rsp + 0x90]
call	0x140072780
call	0x140072780
jmp	0x140061e7b
jmp	0x140061e7b
mov	rcx, rbp
call	0x1400208f0
call	0x1400208f0
mov	rdx, qword ptr [rsi + 0x38]
cmp	byte ptr [rdx], al
jne	0x140062713
jne	0x140062713
mov	rax, qword ptr [rsi + 0x40]
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x50], rax
call	0x140091a00
call	0x140091a00
mov	dword ptr [rsp + 0x98], 0xffffffff
mov	r12d, 1
jmp	0x140061d80
jmp	0x140061d80
mov	rcx, rbp
call	0x1400208f0
call	0x1400208f0
mov	rdx, qword ptr [rsi + 0x48]
cmp	byte ptr [rdx], al
jne	0x14006274b
jne	0x14006274b
mov	rax, qword ptr [rsi + 0x50]
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x50], rax
call	0x140091a00
call	0x140091a00
mov	byte ptr [rsp + 0x7a], 1
mov	r12d, 1
mov	dword ptr [rsp + 0x98], 0xffffffff
jmp	0x140061d80
jmp	0x140061d80
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edi, eax
cmp	eax, -1
jne	0x140062174
jne	0x140062174
mov	qword ptr [rsp + 0x90], 0
jmp	0x140062174
jmp	0x140062174
nop	word ptr [rax + rax]
mov	ecx, 0x70
call	0x1400b2c30
call	0x1400b2c30
mov	rsi, rax
mov	dword ptr [rax + 8], 0
xor	r10d, r10d
lea	rax, [rip + 0x64aba]
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rsp + 0x130]
mov	rcx, rsi
mov	qword ptr [rsi + 0x10], 0
mov	qword ptr [rsi + 0x18], 0
lea	rdx, [rax + 0xd0]
mov	byte ptr [rsi + 0x20], 0
mov	word ptr [rsi + 0x21], r10w
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
mov	qword ptr [rsi + 0x38], 0
mov	qword ptr [rsi + 0x40], 0
mov	qword ptr [rsi + 0x48], 0
mov	qword ptr [rsi + 0x50], 0
mov	dword ptr [rsi + 0x58], 0
mov	qword ptr [rsi + 0x5c], 0
mov	byte ptr [rsi + 0x6f], 0
call	0x1400961b0
call	0x1400961b0
mov	rax, qword ptr [rsp + 0x130]
mov	rdx, rsi
mov	r8, rbx
mov	rcx, qword ptr [rax + 0xd0]
call	0x140099d30
call	0x140099d30
mov	rsi, qword ptr [rdi]
jmp	0x140061c5b
jmp	0x140061c5b
mov	rax, qword ptr [rsp + 0xb8]
mov	edx, dword ptr [rax - 8]
test	edx, edx
jns	0x140062a39
jns	0x140062a39
cmp	byte ptr [rax], 0x30
je	0x140061df9
je	0x140061df9
mov	rdi, qword ptr [rsp + 0x30]
mov	rcx, rdi
call	0x140073640
call	0x140073640
mov	dword ptr [rsp + 0x20], 0x2d
xor	r8d, r8d
xor	edx, edx
mov	rcx, rdi
mov	r9d, 1
call	0x140072270
call	0x140072270
mov	rax, qword ptr [rsp + 0xb8]
mov	dword ptr [rax - 8], 0xffffffff
jmp	0x140061df9
jmp	0x140061df9
xor	r12d, r12d
jmp	0x140062326
jmp	0x140062326
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x140062426
jne	0x140062426
mov	qword ptr [rsp + 0x90], 0
jmp	0x140062426
jmp	0x140062426
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r13d, eax
cmp	eax, -1
jne	0x140061fd0
jne	0x140061fd0
mov	qword ptr [rsp + 0x90], 0
jmp	0x140061fd0
jmp	0x140061fd0
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x140062580
jne	0x140062580
mov	qword ptr [rsp + 0x90], 0
jmp	0x140062580
jmp	0x140062580
mov	rcx, qword ptr [rsp + 0x30]
call	0x140071cd0
call	0x140071cd0
mov	rax, qword ptr [rsp + 0xb8]
jmp	0x140062981
jmp	0x140062981
mov	qword ptr [rsp + 0x90], 0
jmp	0x140062498
jmp	0x140062498
mov	qword ptr [rsp + 0x90], 0
jmp	0x14006203a
jmp	0x14006203a
test	r12b, r12b
je	0x140062339
je	0x140062339
jmp	0x140061ddb
jmp	0x140061ddb
call	0x1400b3a30
call	0x1400b3a30
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rax, qword ptr [rsp + 0xb8]
mov	rdx, qword ptr [rsp + 0x70]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xb0]
mov	rdx, qword ptr [rsp + 0x30]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x140062ab4
jmp	0x140062ab4
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x140062a96
jmp	0x140062a96
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xc8
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	qword ptr [rsp + 0x110], rcx
mov	rcx, qword ptr [rip + 0x5bda4]
movups	xmmword ptr [rsp + 0x90], xmm0
movups	xmmword ptr [rsp + 0x80], xmm1
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x130]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
mov	qword ptr [rsp + 0x58], rax
test	rax, rax
je	0x1400639c0
je	0x1400639c0
lea	rcx, [rip + 0x544b0]
call	0x140022a70
call	0x140022a70
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x130]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	rdi, [rax + rbx*8]
mov	rsi, qword ptr [rdi]
test	rsi, rsi
je	0x1400637f8
je	0x1400637f8
lea	rax, [rsi + 0x64]
cmp	qword ptr [rsi + 0x40], 0
mov	qword ptr [rsp + 0x48], rax
jne	0x140063170
jne	0x140063170
mov	byte ptr [rsp + 0x7b], 0
lea	rax, [rsp + 0xb8]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x30], rax
call	0x140071d40
call	0x140071d40
cmp	byte ptr [rsi + 0x20], 0
mov	qword ptr [rsp + 0xb0], rax
je	0x140062bed
je	0x140062bed
lea	rcx, [rsp + 0xb0]
mov	edx, 0x20
call	0x140073cf0
call	0x140073cf0
lea	rax, [rsp + 0xab]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x70], rax
call	0x140071d40
call	0x140071d40
mov	rcx, qword ptr [rsp + 0x30]
mov	edx, 0x20
mov	qword ptr [rsp + 0xb8], rax
call	0x140073cf0
call	0x140073cf0
lea	rax, [rsi + 0x65]
mov	byte ptr [rsp + 0x6b], 0
xor	r14d, r14d
xor	ebx, ebx
mov	qword ptr [rsp + 0x40], rax
mov	eax, dword ptr [rsi + 0x60]
mov	dword ptr [rsp + 0x6c], 0
mov	dword ptr [rsp + 0xac], eax
lea	rax, [rsp + 0xac]
mov	qword ptr [rsp + 0x60], rax
lea	rax, [rsp + 0xb0]
mov	qword ptr [rsp + 0x50], 0
mov	byte ptr [rsp + 0x7a], 0
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x60]
cmp	byte ptr [rax + r14], 4
ja	0x1400635c5
ja	0x1400635c5
movzx	eax, byte ptr [rax + r14]
lea	rdx, [rip + 0x575c6]
movsxd	rax, dword ptr [rdx + rax*4]
add	rax, rdx
jmp	rax
jmp	rax
nop	
cmp	qword ptr [rsi + 0x40], 0
jne	0x140063630
jne	0x140063630
cmp	qword ptr [rsi + 0x50], 0
lea	r12, [rsp + 0x80]
lea	rbp, [rsp + 0x90]
jne	0x140063678
jne	0x140063678
movzx	r12d, byte ptr [rsp + 0x7b]
xor	r12d, 1
lea	eax, [r14 + 1]
cmp	eax, 3
setle	al
add	r14, 1
test	al, r12b
jne	0x140062c6a
jne	0x140062c6a
jmp	0x140062e68
jmp	0x140062e68
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x130]
test	byte ptr [rax + 0x19], 2
jne	0x1400634a8
jne	0x1400634a8
cmp	qword ptr [rsp + 0x50], 1
ja	0x1400634a8
ja	0x1400634a8
test	r14d, r14d
je	0x1400634a8
je	0x1400634a8
cmp	r14, 1
je	0x140063486
je	0x140063486
cmp	r14, 2
je	0x1400636f7
je	0x1400636f7
mov	rax, qword ptr [rsp + 0xb8]
cmp	qword ptr [rax - 0x18], 1
ja	0x1400636a8
ja	0x1400636a8
cmp	byte ptr [rsp + 0x7a], 0
jne	0x1400638ae
jne	0x1400638ae
mov	rax, qword ptr [rsp + 0xb0]
cmp	qword ptr [rax - 0x18], 0
je	0x140062d87
je	0x140062d87
movsx	eax, byte ptr [rsp + 0x6c]
movsx	edx, bl
cmp	byte ptr [rsp + 0x6b], 0
lea	rdi, [rsp + 0xb0]
mov	rcx, rdi
cmovne	edx, eax
call	0x140073fa0
call	0x140073fa0
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	r8, rdi
call	0x1400ae880
call	0x1400ae880
test	al, al
jne	0x140062d87
jne	0x140062d87
mov	rax, qword ptr [rsp + 0x138]
or	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x6b], 0
je	0x140063720
je	0x140063720
lea	r12, [rsp + 0x80]
lea	rbp, [rsp + 0x90]
cmp	dword ptr [rsi + 0x58], ebx
je	0x140063720
je	0x140063720
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x138]
or	dword ptr [rax], 4
mov	rdx, r12
mov	rcx, rbp
call	0x140020830
call	0x140020830
test	al, al
je	0x140062dd5
je	0x140062dd5
mov	rax, qword ptr [rsp + 0x138]
or	dword ptr [rax], 2
mov	rax, qword ptr [rsp + 0x110]
mov	rdx, qword ptr [rsp + 0x70]
movdqu	xmm2, xmmword ptr [rsp + 0x90]
movups	xmmword ptr [rax], xmm2
mov	rax, qword ptr [rsp + 0xb8]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xb0]
mov	rdx, qword ptr [rsp + 0x30]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0x110]
add	rsp, 0xc8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
lea	r12, [rsp + 0x80]
lea	rbp, [rsp + 0x90]
mov	rdx, r12
mov	rcx, rbp
call	0x140020830
call	0x140020830
test	al, al
je	0x1400635e0
je	0x1400635e0
xor	r12d, r12d
cmp	r14, 3
jne	0x140063300
jne	0x140063300
cmp	qword ptr [rsp + 0x50], 1
seta	al
and	eax, r12d
mov	byte ptr [rsp + 0x38], al
cmp	byte ptr [rsp + 0x38], 0
je	0x1400639b2
je	0x1400639b2
cmp	byte ptr [rsp + 0x7a], 0
je	0x1400635d0
je	0x1400635d0
mov	r15, qword ptr [rsi + 0x48]
mov	r13d, dword ptr [rsp + 0x98]
mov	rdi, qword ptr [rsp + 0x90]
mov	ebp, 1
cmp	r13d, -1
sete	r14b
mov	r12d, r14d
test	rdi, rdi
je	0x140062ec0
je	0x140062ec0
test	r14b, r14b
jne	0x140062f47
jne	0x140062f47
mov	rcx, qword ptr [rsp + 0x80]
cmp	dword ptr [rsp + 0x88], -1
sete	al
test	rcx, rcx
je	0x140062ee0
je	0x140062ee0
test	al, al
jne	0x1400632a0
jne	0x1400632a0
xor	r12d, eax
mov	rax, qword ptr [rsp + 0x50]
cmp	rbp, rax
jae	0x140063588
jae	0x140063588
test	r12b, r12b
je	0x140063588
je	0x140063588
mov	rdi, qword ptr [rsp + 0x90]
test	rdi, rdi
je	0x140062f10
je	0x140062f10
test	r14b, r14b
jne	0x1400632e0
jne	0x1400632e0
cmp	byte ptr [r15 + rbp], r13b
jne	0x140063279
jne	0x140063279
mov	rdi, qword ptr [rsp + 0x90]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140063478
jae	0x140063478
add	rax, 1
mov	qword ptr [rdi + 0x10], rax
mov	dword ptr [rsp + 0x98], 0xffffffff
add	rbp, 1
movzx	r14d, byte ptr [rsp + 0x38]
mov	rax, qword ptr [rdi + 0x18]
mov	r13d, 0xffffffff
xor	r12d, r12d
cmp	qword ptr [rdi + 0x10], rax
jb	0x140062ec0
jb	0x140062ec0
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	r12b
je	0x1400639a1
je	0x1400639a1
movzx	r14d, byte ptr [rsp + 0x38]
mov	r13d, 0xffffffff
jmp	0x140062ec0
jmp	0x140062ec0
nop	dword ptr [rax + rax]
mov	rbp, qword ptr [rsp + 0x90]
mov	edi, dword ptr [rsp + 0x98]
mov	r15, qword ptr [rip + 0x5b7ea]
jmp	0x14006305d
jmp	0x14006305d
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x48]
mov	rdx, qword ptr [r15]
sub	rax, rcx
movzx	r12d, byte ptr [rdx + rax]
mov	rax, qword ptr [rsp + 0xb8]
mov	rbp, qword ptr [rax - 0x18]
lea	rdi, [rbp + 1]
cmp	qword ptr [rax - 0x10], rdi
jb	0x140062ff7
jb	0x140062ff7
mov	rcx, qword ptr [rip + 0x5b653]
mov	r9d, dword ptr [rcx]
test	r9d, r9d
jne	0x140063250
jne	0x140063250
mov	r8d, dword ptr [rax - 8]
test	r8d, r8d
setg	al
test	al, al
je	0x140063004
je	0x140063004
mov	rcx, qword ptr [rsp + 0x30]
mov	rdx, rdi
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rsp + 0xb8]
add	ebx, 1
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], r12b
mov	rax, qword ptr [rsp + 0xb8]
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rdi
mov	byte ptr [rax + rbp + 1], 0
mov	rbp, qword ptr [rsp + 0x90]
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140063240
jae	0x140063240
add	rax, 1
mov	qword ptr [rbp + 0x10], rax
mov	dword ptr [rsp + 0x98], 0xffffffff
mov	edi, 0xffffffff
cmp	edi, -1
sete	r12b
test	rbp, rbp
je	0x140063072
je	0x140063072
test	r12b, r12b
jne	0x1400631b0
jne	0x1400631b0
mov	r13d, r12d
mov	rcx, qword ptr [rsp + 0x80]
cmp	dword ptr [rsp + 0x88], -1
sete	al
test	rcx, rcx
je	0x140063095
je	0x140063095
test	al, al
jne	0x1400631f0
jne	0x1400631f0
cmp	r13b, al
je	0x140063578
je	0x140063578
mov	rcx, qword ptr [rsp + 0x90]
test	rcx, rcx
je	0x1400630b4
je	0x1400630b4
test	r12b, r12b
jne	0x140063228
jne	0x140063228
mov	rcx, qword ptr [rsp + 0x40]
movsx	edx, dil
mov	r8d, 0xa
call	0x140015988
call	0x140015988
test	rax, rax
jne	0x140062fb0
jne	0x140062fb0
cmp	byte ptr [rsi + 0x21], dil
je	0x140063180
je	0x140063180
cmp	byte ptr [rsi + 0x20], 0
je	0x140063578
je	0x140063578
cmp	byte ptr [rsi + 0x22], dil
jne	0x140063578
jne	0x140063578
cmp	byte ptr [rsp + 0x6b], 0
jne	0x140063260
jne	0x140063260
test	ebx, ebx
je	0x140063906
je	0x140063906
mov	rax, qword ptr [rsp + 0xb0]
mov	rbp, qword ptr [rax - 0x18]
lea	rdi, [rbp + 1]
cmp	qword ptr [rax - 0x10], rdi
jb	0x140063135
jb	0x140063135
mov	rcx, qword ptr [rip + 0x5b511]
mov	edx, dword ptr [rcx]
test	edx, edx
jne	0x140063290
jne	0x140063290
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
test	al, al
je	0x140063142
je	0x140063142
mov	rcx, qword ptr [rsp + 0x38]
mov	rdx, rdi
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rsp + 0xb0]
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], bl
mov	rax, qword ptr [rsp + 0xb0]
xor	ebx, ebx
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rdi
mov	byte ptr [rax + rbp + 1], 0
jmp	0x14006302f
jmp	0x14006302f
cmp	qword ptr [rsi + 0x50], 0
setne	byte ptr [rsp + 0x7b]
jmp	0x140062bb4
jmp	0x140062bb4
nop	
cmp	byte ptr [rsp + 0x6b], 0
jne	0x140063260
jne	0x140063260
mov	ecx, dword ptr [rsi + 0x58]
test	ecx, ecx
jle	0x140063578
jle	0x140063578
mov	dword ptr [rsp + 0x6c], ebx
xor	ebx, ebx
mov	byte ptr [rsp + 0x6b], 1
jmp	0x14006302f
jmp	0x14006302f
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbp + 0x18]
xor	r13d, r13d
cmp	qword ptr [rbp + 0x10], rax
jb	0x140063075
jb	0x140063075
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	r13b
jne	0x140063075
jne	0x140063075
mov	qword ptr [rsp + 0x90], 0
jmp	0x140063075
jmp	0x140063075
nop	dword ptr [rax]
mov	rdx, qword ptr [rcx + 0x18]
xor	eax, eax
cmp	qword ptr [rcx + 0x10], rdx
jb	0x140063095
jb	0x140063095
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jne	0x140063095
jne	0x140063095
mov	qword ptr [rsp + 0x80], 0
jmp	0x140063095
jmp	0x140063095
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400637d0
jae	0x1400637d0
movzx	edi, byte ptr [rax]
jmp	0x1400630b4
jmp	0x1400630b4
nop	
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x14006304d
jmp	0x14006304d
nop	
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
jmp	0x140062ff3
jmp	0x140062ff3
nop	dword ptr [rax]
movzx	r12d, byte ptr [rsp + 0x6b]
mov	rax, qword ptr [rsp + 0xb8]
cmp	qword ptr [rax - 0x18], 0
jne	0x140062cc0
jne	0x140062cc0
lea	r12, [rsp + 0x80]
lea	rbp, [rsp + 0x90]
jmp	0x140062db0
jmp	0x140062db0
nop	
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
jmp	0x140063131
jmp	0x140063131
nop	dword ptr [rax]
mov	rax, qword ptr [rcx + 0x18]
cmp	qword ptr [rcx + 0x10], rax
jb	0x140062ee3
jb	0x140062ee3
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	dl
xor	r12d, edx
cmp	eax, -1
jne	0x140062ee3
jne	0x140062ee3
mov	qword ptr [rsp + 0x80], 0
jmp	0x140062ee3
jmp	0x140062ee3
nop	word ptr [rax + rax]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140063933
jae	0x140063933
movzx	ecx, byte ptr [rax]
cmp	byte ptr [r15 + rbp], cl
je	0x140062f30
je	0x140062f30
jmp	0x140063279
jmp	0x140063279
mov	ebp, dword ptr [rsp + 0x98]
mov	rdi, qword ptr [rsp + 0x90]
cmp	ebp, -1
sete	r13b
test	rdi, rdi
je	0x140063324
je	0x140063324
test	r13b, r13b
jne	0x1400633a6
jne	0x1400633a6
mov	r15d, r13d
mov	rcx, qword ptr [rsp + 0x80]
cmp	dword ptr [rsp + 0x88], -1
sete	al
test	rcx, rcx
je	0x140063347
je	0x140063347
test	al, al
jne	0x1400633f0
jne	0x1400633f0
cmp	r13b, al
je	0x140062cc0
je	0x140062cc0
mov	rdi, qword ptr [rsp + 0x90]
test	rdi, rdi
je	0x140063366
je	0x140063366
test	r15b, r15b
jne	0x140063428
jne	0x140063428
mov	rax, qword ptr [rsp + 0x58]
movzx	ebp, bpl
mov	rax, qword ptr [rax + 0x30]
test	byte ptr [rax + rbp*2], 0x20
je	0x140062cc0
je	0x140062cc0
mov	rdi, qword ptr [rsp + 0x90]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140063458
jae	0x140063458
mov	dword ptr [rsp + 0x98], 0xffffffff
add	rax, 1
mov	qword ptr [rdi + 0x10], rax
mov	rax, qword ptr [rdi + 0x18]
mov	r15d, 1
mov	ebp, 0xffffffff
xor	r13d, r13d
cmp	qword ptr [rdi + 0x10], rax
jb	0x140063327
jb	0x140063327
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	r13b
je	0x140063990
je	0x140063990
mov	r15d, 1
mov	ebp, 0xffffffff
jmp	0x140063327
jmp	0x140063327
nop	dword ptr [rax + rax]
mov	rdx, qword ptr [rcx + 0x18]
xor	eax, eax
cmp	qword ptr [rcx + 0x10], rdx
jb	0x140063347
jb	0x140063347
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
sete	al
jne	0x140063347
jne	0x140063347
mov	qword ptr [rsp + 0x80], 0
jmp	0x140063347
jmp	0x140063347
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x14006390e
jae	0x14006390e
mov	rdx, qword ptr [rsp + 0x58]
movzx	ecx, byte ptr [rax]
mov	rdx, qword ptr [rdx + 0x30]
test	byte ptr [rdx + rcx*2], 0x20
jne	0x140063393
jne	0x140063393
jmp	0x140062cc0
jmp	0x140062cc0
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	dword ptr [rsp + 0x98], 0xffffffff
jmp	0x1400633a6
jmp	0x1400633a6
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140062f38
jmp	0x140062f38
cmp	byte ptr [rsp + 0x7b], 0
jne	0x1400634a8
jne	0x1400634a8
cmp	byte ptr [rsp + 0xac], 3
je	0x1400634a8
je	0x1400634a8
cmp	byte ptr [rsp + 0xae], 1
jne	0x1400635c5
jne	0x1400635c5
nop	dword ptr [rax]
mov	r13, qword ptr [rsi + 0x30]
xor	edi, edi
lea	r12, [rsp + 0x80]
lea	rbp, [rsp + 0x90]
jmp	0x1400634f6
jmp	0x1400634f6
mov	rdx, qword ptr [rsi + 0x28]
cmp	byte ptr [rdx + rdi], al
jne	0x140063548
jne	0x140063548
mov	rcx, qword ptr [rsp + 0x90]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400635b0
jae	0x1400635b0
add	rax, 1
mov	qword ptr [rcx + 0x10], rax
mov	dword ptr [rsp + 0x98], 0xffffffff
add	rdi, 1
mov	rdx, r12
mov	rcx, rbp
call	0x140020830
call	0x140020830
cmp	al, 1
je	0x1400635c0
je	0x1400635c0
cmp	rdi, r13
jae	0x1400635c0
jae	0x1400635c0
mov	rcx, qword ptr [rsp + 0x90]
mov	eax, dword ptr [rsp + 0x98]
test	rcx, rcx
je	0x1400634c0
je	0x1400634c0
cmp	eax, -1
jne	0x1400634c0
jne	0x1400634c0
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140063959
jae	0x140063959
mov	rdx, qword ptr [rsi + 0x28]
movzx	edx, byte ptr [rdx + rdi]
cmp	byte ptr [rax], dl
je	0x1400634df
je	0x1400634df
nop	dword ptr [rax]
test	rdi, rdi
jne	0x140062db0
jne	0x140062db0
mov	rax, qword ptr [rsp + 0x130]
mov	eax, dword ptr [rax + 0x18]
mov	r12d, eax
mov	dword ptr [rsp + 0x7c], eax
shr	r12d, 9
xor	r12d, 1
and	r12d, 1
jmp	0x140062cc0
jmp	0x140062cc0
nop	dword ptr [rax]
mov	r12d, 1
jmp	0x140063266
jmp	0x140063266
nop	dword ptr [rax + rax]
cmp	qword ptr [rsp + 0x50], rbp
jne	0x140063279
jne	0x140063279
mov	rax, qword ptr [rsp + 0xb8]
cmp	qword ptr [rax - 0x18], 1
jbe	0x140062d2e
jbe	0x140062d2e
jmp	0x1400636a8
jmp	0x1400636a8
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x1400634e7
jmp	0x1400634e7
nop	dword ptr [rax + rax]
cmp	rdi, r13
jne	0x140063548
jne	0x140063548
mov	r12d, 1
jmp	0x140062cc0
jmp	0x140062cc0
mov	r15, qword ptr [rsi + 0x38]
jmp	0x140062e92
jmp	0x140062e92
nop	dword ptr [rax]
mov	rcx, rbp
call	0x1400208f0
call	0x1400208f0
mov	rcx, qword ptr [rsp + 0x58]
movzx	eax, al
mov	rdx, qword ptr [rcx + 0x30]
test	byte ptr [rdx + rax*2], 0x20
je	0x140062e5b
je	0x140062e5b
mov	rcx, qword ptr [rsp + 0x90]
call	0x140091a00
call	0x140091a00
mov	dword ptr [rsp + 0x98], 0xffffffff
nop	word ptr cs:[rax + rax]
mov	r12d, 1
jmp	0x140062e5e
jmp	0x140062e5e
nop	dword ptr [rax + rax]
lea	r12, [rsp + 0x80]
lea	rbp, [rsp + 0x90]
mov	rdx, r12
mov	rcx, rbp
call	0x140020830
call	0x140020830
test	al, al
je	0x140063747
je	0x140063747
cmp	qword ptr [rsi + 0x50], 0
jne	0x140063678
jne	0x140063678
cmp	qword ptr [rsi + 0x40], 0
je	0x140062cb6
je	0x140062cb6
mov	byte ptr [rsp + 0x7a], 1
mov	r12d, 1
jmp	0x140062cc0
jmp	0x140062cc0
nop	dword ptr [rax]
mov	rdx, r12
mov	rcx, rbp
call	0x140020830
call	0x140020830
test	al, al
je	0x140063787
je	0x140063787
cmp	qword ptr [rsi + 0x40], 0
je	0x140062cb6
je	0x140062cb6
cmp	qword ptr [rsi + 0x50], 0
jne	0x140062cb6
jne	0x140062cb6
jmp	0x140063665
jmp	0x140063665
nop	dword ptr [rax + rax]
mov	rdi, qword ptr [rsp + 0x30]
xor	r8d, r8d
mov	edx, 0x30
mov	rcx, rdi
call	0x14001b630
call	0x14001b630
test	rax, rax
je	0x140062d2e
je	0x140062d2e
mov	rdx, qword ptr [rsp + 0xb8]
cmp	rax, -1
mov	rcx, rdi
mov	r8, qword ptr [rdx - 0x18]
lea	rdx, [r8 - 1]
cmove	rax, rdx
xor	r9d, r9d
cmp	rax, r8
cmovbe	r8, rax
xor	edx, edx
call	0x140073e00
call	0x140073e00
jmp	0x140062d2e
jmp	0x140062d2e
movzx	eax, byte ptr [rsp + 0xaf]
cmp	al, 4
je	0x1400634a8
je	0x1400634a8
cmp	al, 3
jne	0x1400635c5
jne	0x1400635c5
cmp	byte ptr [rsp + 0x7b], 0
je	0x1400635c5
je	0x1400635c5
jmp	0x1400634a8
jmp	0x1400634a8
nop	
mov	rdx, qword ptr [rsp + 0x30]
mov	rcx, qword ptr [rsp + 0x140]
lea	r12, [rsp + 0x80]
lea	rbp, [rsp + 0x90]
call	0x140072780
call	0x140072780
jmp	0x140062dbb
jmp	0x140062dbb
mov	rcx, rbp
call	0x1400208f0
call	0x1400208f0
mov	rdx, qword ptr [rsi + 0x38]
cmp	byte ptr [rdx], al
jne	0x140063653
jne	0x140063653
mov	rax, qword ptr [rsi + 0x40]
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x50], rax
call	0x140091a00
call	0x140091a00
mov	dword ptr [rsp + 0x98], 0xffffffff
mov	r12d, 1
jmp	0x140062cc0
jmp	0x140062cc0
mov	rcx, rbp
call	0x1400208f0
call	0x1400208f0
mov	rdx, qword ptr [rsi + 0x48]
cmp	byte ptr [rdx], al
jne	0x14006368b
jne	0x14006368b
mov	rax, qword ptr [rsi + 0x50]
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x50], rax
call	0x140091a00
call	0x140091a00
mov	byte ptr [rsp + 0x7a], 1
mov	r12d, 1
mov	dword ptr [rsp + 0x98], 0xffffffff
jmp	0x140062cc0
jmp	0x140062cc0
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edi, eax
cmp	eax, -1
jne	0x1400630b4
jne	0x1400630b4
mov	qword ptr [rsp + 0x90], 0
jmp	0x1400630b4
jmp	0x1400630b4
nop	word ptr [rax + rax]
mov	ecx, 0x70
call	0x1400b2c30
call	0x1400b2c30
mov	rsi, rax
mov	dword ptr [rax + 8], 0
xor	r10d, r10d
lea	rax, [rip + 0x63b9a]
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rsp + 0x130]
mov	rcx, rsi
mov	qword ptr [rsi + 0x10], 0
mov	qword ptr [rsi + 0x18], 0
lea	rdx, [rax + 0xd0]
mov	byte ptr [rsi + 0x20], 0
mov	word ptr [rsi + 0x21], r10w
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
mov	qword ptr [rsi + 0x38], 0
mov	qword ptr [rsi + 0x40], 0
mov	qword ptr [rsi + 0x48], 0
mov	qword ptr [rsi + 0x50], 0
mov	dword ptr [rsi + 0x58], 0
mov	qword ptr [rsi + 0x5c], 0
mov	byte ptr [rsi + 0x6f], 0
call	0x1400969b0
call	0x1400969b0
mov	rax, qword ptr [rsp + 0x130]
mov	rdx, rsi
mov	r8, rbx
mov	rcx, qword ptr [rax + 0xd0]
call	0x140099d30
call	0x140099d30
mov	rsi, qword ptr [rdi]
jmp	0x140062b9b
jmp	0x140062b9b
mov	rax, qword ptr [rsp + 0xb8]
mov	edx, dword ptr [rax - 8]
test	edx, edx
jns	0x140063979
jns	0x140063979
cmp	byte ptr [rax], 0x30
je	0x140062d39
je	0x140062d39
mov	rdi, qword ptr [rsp + 0x30]
mov	rcx, rdi
call	0x140073640
call	0x140073640
mov	dword ptr [rsp + 0x20], 0x2d
xor	r8d, r8d
xor	edx, edx
mov	rcx, rdi
mov	r9d, 1
call	0x140072270
call	0x140072270
mov	rax, qword ptr [rsp + 0xb8]
mov	dword ptr [rax - 8], 0xffffffff
jmp	0x140062d39
jmp	0x140062d39
xor	r12d, r12d
jmp	0x140063266
jmp	0x140063266
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	ebp, eax
cmp	eax, -1
jne	0x140063366
jne	0x140063366
mov	qword ptr [rsp + 0x90], 0
jmp	0x140063366
jmp	0x140063366
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r13d, eax
cmp	eax, -1
jne	0x140062f10
jne	0x140062f10
mov	qword ptr [rsp + 0x90], 0
jmp	0x140062f10
jmp	0x140062f10
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x1400634c0
jne	0x1400634c0
mov	qword ptr [rsp + 0x90], 0
jmp	0x1400634c0
jmp	0x1400634c0
mov	rcx, qword ptr [rsp + 0x30]
call	0x140071cd0
call	0x140071cd0
mov	rax, qword ptr [rsp + 0xb8]
jmp	0x1400638c1
jmp	0x1400638c1
mov	qword ptr [rsp + 0x90], 0
jmp	0x1400633d8
jmp	0x1400633d8
mov	qword ptr [rsp + 0x90], 0
jmp	0x140062f7a
jmp	0x140062f7a
test	r12b, r12b
je	0x140063279
je	0x140063279
jmp	0x140062d1b
jmp	0x140062d1b
call	0x1400b3a30
call	0x1400b3a30
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rax, qword ptr [rsp + 0xb8]
mov	rdx, qword ptr [rsp + 0x70]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xb0]
mov	rdx, qword ptr [rsp + 0x30]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x1400639f4
jmp	0x1400639f4
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x1400639d6
jmp	0x1400639d6
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa8]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x38], rcx
mov	rcx, qword ptr [rsp + 0xa0]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
mov	qword ptr [rsp + 0x28], rcx
movzx	ecx, byte ptr [rsp + 0x90]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa8]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x38], rcx
mov	rcx, qword ptr [rsp + 0xa0]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
mov	qword ptr [rsp + 0x28], rcx
movzx	ecx, byte ptr [rsp + 0x90]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
movups	xmmword ptr [rsp + 0x90], xmm6
mov	r12, qword ptr [rsp + 0x118]
mov	rbp, qword ptr [r8]
mov	rsi, qword ptr [r8 + 8]
movdqu	xmm6, xmmword ptr [r9]
mov	r15d, dword ptr [rsp + 0x110]
mov	rdi, rcx
mov	rcx, qword ptr [rip + 0x5ad4f]
mov	rbx, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [r12 + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r13, qword ptr [rax + rdx*8]
test	r13, r13
je	0x140063df8
je	0x140063df8
lea	r14, [rsp + 0x87]
xor	edx, edx
xor	ecx, ecx
mov	r8, r14
call	0x140071d40
call	0x140071d40
mov	qword ptr [rsp + 0x88], rax
test	r15b, r15b
jne	0x140063d20
jne	0x140063d20
lea	rax, [rsp + 0x88]
mov	qword ptr [rsp + 0x20], r12
lea	rcx, [rsp + 0x70]
mov	rdx, rbx
mov	qword ptr [rsp + 0x30], rax
lea	r9, [rsp + 0x50]
lea	r8, [rsp + 0x60]
mov	rax, qword ptr [rsp + 0x120]
mov	qword ptr [rsp + 0x60], rbp
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x68], rsi
movups	xmmword ptr [rsp + 0x50], xmm6
call	0x140061bc0
call	0x140061bc0
mov	rax, qword ptr [rsp + 0x70]
mov	rdx, qword ptr [rsp + 0x78]
mov	rbx, qword ptr [rsp + 0x88]
mov	qword ptr [rsp + 0x78], rdx
mov	rbp, rax
movabs	rdx, 0xffffffff00000000
mov	qword ptr [rsp + 0x70], rax
mov	eax, dword ptr [rsp + 0x78]
and	rsi, rdx
mov	r12, qword ptr [rbx - 0x18]
or	rsi, rax
test	r12, r12
je	0x140063cd8
je	0x140063cd8
mov	rcx, qword ptr [rsp + 0x128]
xor	r8d, r8d
mov	rdx, r12
call	0x1400735a0
call	0x1400735a0
mov	rax, qword ptr [rsp + 0x128]
mov	r15, qword ptr [rax]
mov	eax, dword ptr [r15 - 8]
test	eax, eax
jns	0x140063d98
jns	0x140063d98
mov	rbx, qword ptr [rsp + 0x88]
lea	rax, [rbx + r12]
mov	qword ptr [rsp + 0x48], rax
movzx	eax, byte ptr [r13 + 0x38]
cmp	al, 1
je	0x140063de8
je	0x140063de8
test	al, al
je	0x140063db8
je	0x140063db8
mov	rax, qword ptr [r13]
lea	rdx, [rip - 0x4183a]
mov	rax, qword ptr [rax + 0x38]
cmp	rax, rdx
jne	0x140063dc8
jne	0x140063dc8
cmp	qword ptr [rsp + 0x48], rbx
je	0x140063dd8
je	0x140063dd8
mov	rdx, rbx
mov	r8, r12
mov	rcx, r15
call	0x140015998
call	0x140015998
mov	rbx, qword ptr [rsp + 0x88]
mov	rax, qword ptr [rip + 0x5a951]
mov	qword ptr [rdi], rbp
mov	qword ptr [rdi + 8], rsi
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140063d70
jne	0x140063d70
mov	eax, dword ptr [rbx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rbx - 8], edx
test	eax, eax
jle	0x140063d82
jle	0x140063d82
movups	xmm6, xmmword ptr [rsp + 0x90]
mov	rax, rdi
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
lea	rax, [rsp + 0x88]
mov	qword ptr [rsp + 0x20], r12
lea	rcx, [rsp + 0x70]
mov	rdx, rbx
mov	qword ptr [rsp + 0x30], rax
lea	r9, [rsp + 0x50]
lea	r8, [rsp + 0x60]
mov	rax, qword ptr [rsp + 0x120]
mov	qword ptr [rsp + 0x60], rbp
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x68], rsi
movups	xmmword ptr [rsp + 0x50], xmm6
call	0x140062b00
call	0x140062b00
jmp	0x140063c0f
jmp	0x140063c0f
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rbx - 8], eax
test	eax, eax
jg	0x140063d01
jg	0x140063d01
lea	rcx, [rbx - 0x18]
mov	rdx, r14
call	0x140072480
call	0x140072480
jmp	0x140063d01
jmp	0x140063d01
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x128]
call	0x140071cd0
call	0x140071cd0
mov	rax, qword ptr [rsp + 0x128]
mov	r15, qword ptr [rax]
jmp	0x140063c79
jmp	0x140063c79
nop	dword ptr [rax]
mov	rcx, r13
call	0x140021cb0
call	0x140021cb0
jmp	0x140063c9f
jmp	0x140063c9f
nop	dword ptr [rax]
mov	r8, qword ptr [rsp + 0x48]
mov	r9, r15
mov	rdx, rbx
mov	rcx, r13
call	rax
call	rax
mov	rbx, qword ptr [rsp + 0x88]
jmp	0x140063cd8
jmp	0x140063cd8
nop	dword ptr [rax]
cmp	qword ptr [rsp + 0x48], rbx
jne	0x140063cc2
jne	0x140063cc2
jmp	0x140063cd8
jmp	0x140063cd8
call	0x1400b3a30
call	0x1400b3a30
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x88]
mov	rdx, r14
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x90
movups	xmmword ptr [rsp + 0x80], xmm6
mov	rsi, qword ptr [r8]
mov	r13, qword ptr [r8 + 8]
movdqu	xmm6, xmmword ptr [r9]
mov	r12, qword ptr [rsp + 0x100]
mov	r14d, dword ptr [rsp + 0xf0]
lea	rbp, [rsp + 0x78]
mov	rdi, rdx
mov	rbx, rcx
xor	edx, edx
mov	r8, rbp
xor	ecx, ecx
call	0x140071d40
call	0x140071d40
mov	qword ptr [rsp + 0x50], rsi
lea	rcx, [rsp + 0x60]
mov	rdx, rdi
mov	qword ptr [rsp + 0x70], rax
lea	rax, [rsp + 0x70]
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xf8]
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x58], r13
mov	qword ptr [rsp + 0x28], r12
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x40], xmm6
test	r14b, r14b
je	0x140063f50
je	0x140063f50
call	0x140062b00
call	0x140062b00
mov	rax, qword ptr [rsp + 0x60]
mov	rdx, qword ptr [rsp + 0x68]
movabs	rdi, 0xffffffff00000000
and	rdi, r13
mov	qword ptr [rsp + 0x60], rax
mov	rsi, rax
mov	qword ptr [rsp + 0x68], rdx
mov	eax, dword ptr [rsp + 0x68]
or	rdi, rax
call	0x14009baf0
call	0x14009baf0
mov	rcx, qword ptr [rsp + 0x70]
mov	r9, rbp
mov	r8, r12
mov	qword ptr [rsp + 0x78], rax
mov	rdx, qword ptr [rsp + 0x108]
call	0x1400ace20
call	0x1400ace20
mov	rax, qword ptr [rip + 0x5a720]
mov	qword ptr [rbx], rsi
mov	qword ptr [rbx + 8], rdi
mov	rcx, qword ptr [rsp + 0x70]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140063f60
jne	0x140063f60
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140063f6e
jle	0x140063f6e
movups	xmm6, xmmword ptr [rsp + 0x80]
mov	rax, rbx
add	rsp, 0x90
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax]
call	0x140061bc0
call	0x140061bc0
jmp	0x140063ebc
jmp	0x140063ebc
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140063f2f
jg	0x140063f2f
sub	rcx, 0x18
mov	rdx, rbp
call	0x140072480
call	0x140072480
jmp	0x140063f2f
jmp	0x140063f2f
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x70]
mov	rdx, rbp
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xc8
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	qword ptr [rsp + 0x110], rcx
mov	rcx, qword ptr [rip + 0x5a914]
movups	xmmword ptr [rsp + 0x90], xmm0
movups	xmmword ptr [rsp + 0x80], xmm1
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x130]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
mov	qword ptr [rsp + 0x60], rax
test	rax, rax
je	0x140064e85
je	0x140064e85
lea	rcx, [rip + 0x53020]
call	0x140022a70
call	0x140022a70
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x130]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	rdi, [rax + rbx*8]
mov	r14, qword ptr [rdi]
test	r14, r14
je	0x140064ca6
je	0x140064ca6
lea	rax, [r14 + 0x64]
cmp	qword ptr [r14 + 0x40], 0
mov	qword ptr [rsp + 0x48], rax
jne	0x140064574
jne	0x140064574
mov	byte ptr [rsp + 0x7f], 0
lea	rbp, [rsp + 0xb8]
xor	edx, edx
xor	ecx, ecx
mov	r8, rbp
call	0x140071d40
call	0x140071d40
cmp	byte ptr [r14 + 0x20], 0
mov	qword ptr [rsp + 0xb0], rax
je	0x140064089
je	0x140064089
lea	rcx, [rsp + 0xb0]
mov	edx, 0x20
call	0x140073cf0
call	0x140073cf0
lea	rax, [rsp + 0xab]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x70], rax
call	0x140071d40
call	0x140071d40
mov	edx, 0x20
mov	rcx, rbp
mov	qword ptr [rsp + 0xb8], rax
call	0x140073cf0
call	0x140073cf0
lea	rax, [r14 + 0x66]
mov	byte ptr [rsp + 0x7d], 0
xor	ebx, ebx
lea	r13, [r14 + 0x7a]
mov	qword ptr [rsp + 0x38], rax
mov	eax, dword ptr [r14 + 0x60]
lea	r12, [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], 0
mov	dword ptr [rsp + 0xac], eax
lea	rax, [rsp + 0xac]
mov	dword ptr [rsp + 0x78], 0
mov	qword ptr [rsp + 0x50], 0
mov	byte ptr [rsp + 0x7e], 0
mov	qword ptr [rsp + 0x68], rax
mov	rax, qword ptr [rsp + 0x68]
mov	rcx, qword ptr [rsp + 0x40]
cmp	byte ptr [rax + rcx], 4
ja	0x140064a77
ja	0x140064a77
movzx	eax, byte ptr [rax + rcx]
lea	rdi, [rip + 0x566e7]
movsxd	rax, dword ptr [rdi + rax*4]
add	rax, rdi
jmp	rax
jmp	rax
cmp	qword ptr [r14 + 0x40], 0
jne	0x140064ad7
jne	0x140064ad7
cmp	qword ptr [r14 + 0x50], 0
lea	r15, [rsp + 0x80]
lea	rdi, [rsp + 0x90]
jne	0x140064b01
jne	0x140064b01
movzx	r15d, byte ptr [rsp + 0x7f]
xor	r15d, 1
mov	rdi, qword ptr [rsp + 0x40]
mov	eax, edi
add	eax, 1
cmp	eax, 3
setle	al
add	rdi, 1
mov	qword ptr [rsp + 0x40], rdi
test	al, r15b
jne	0x14006410a
jne	0x14006410a
jmp	0x14006430b
jmp	0x14006430b
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x130]
test	byte ptr [rax + 0x19], 2
jne	0x140064968
jne	0x140064968
cmp	qword ptr [rsp + 0x50], 1
ja	0x140064968
ja	0x140064968
mov	rax, qword ptr [rsp + 0x40]
test	eax, eax
je	0x140064968
je	0x140064968
cmp	rax, 1
je	0x140064949
je	0x140064949
cmp	qword ptr [rsp + 0x40], 2
je	0x140064b9a
je	0x140064b9a
mov	rax, qword ptr [rsp + 0xb8]
cmp	qword ptr [rax - 0x18], 1
ja	0x140064b50
ja	0x140064b50
cmp	byte ptr [rsp + 0x7e], 0
jne	0x140064d9f
jne	0x140064d9f
mov	rax, qword ptr [rsp + 0xb0]
cmp	qword ptr [rax - 0x18], 0
je	0x140064235
je	0x140064235
movsx	eax, byte ptr [rsp + 0x78]
movsx	edx, bl
cmp	byte ptr [rsp + 0x7d], 0
lea	rsi, [rsp + 0xb0]
mov	rcx, rsi
cmovne	edx, eax
call	0x140073fa0
call	0x140073fa0
mov	rdx, qword ptr [r14 + 0x18]
mov	rcx, qword ptr [r14 + 0x10]
mov	r8, rsi
call	0x1400ae880
call	0x1400ae880
test	al, al
jne	0x140064235
jne	0x140064235
mov	rax, qword ptr [rsp + 0x138]
or	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x7d], 0
je	0x140064bc8
je	0x140064bc8
lea	r15, [rsp + 0x80]
lea	rdi, [rsp + 0x90]
cmp	dword ptr [r14 + 0x58], ebx
je	0x140064bc8
je	0x140064bc8
mov	rax, qword ptr [rsp + 0x138]
or	dword ptr [rax], 4
mov	rdx, r15
mov	rcx, rdi
call	0x140020940
call	0x140020940
test	al, al
je	0x14006427f
je	0x14006427f
mov	rax, qword ptr [rsp + 0x138]
or	dword ptr [rax], 2
mov	rax, qword ptr [rsp + 0x110]
mov	rdx, qword ptr [rsp + 0x70]
movdqu	xmm2, xmmword ptr [rsp + 0x90]
movups	xmmword ptr [rax], xmm2
mov	rax, qword ptr [rsp + 0xb8]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xb0]
mov	rdx, rbp
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0x110]
add	rsp, 0xc8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
lea	r15, [rsp + 0x80]
lea	rdi, [rsp + 0x90]
mov	rdx, r15
mov	rcx, rdi
call	0x140020940
call	0x140020940
test	al, al
je	0x140064a8b
je	0x140064a8b
xor	r15d, r15d
cmp	qword ptr [rsp + 0x40], 3
jne	0x1400647be
jne	0x1400647be
cmp	qword ptr [rsp + 0x50], 1
seta	al
and	eax, r15d
test	al, al
je	0x140064e77
je	0x140064e77
cmp	byte ptr [rsp + 0x7e], 0
je	0x140064a82
je	0x140064a82
mov	r15, qword ptr [r14 + 0x48]
mov	rsi, qword ptr [rsp + 0x90]
mov	edi, 1
movzx	r12d, word ptr [rsp + 0x98]
jmp	0x1400643e3
jmp	0x1400643e3
nop	dword ptr [rax]
mov	esi, r13d
cmp	word ptr [rsp + 0x88], -1
mov	rcx, qword ptr [rsp + 0x80]
sete	al
mov	edx, eax
test	rcx, rcx
je	0x140064376
je	0x140064376
test	al, al
jne	0x14006473e
jne	0x14006473e
mov	rax, qword ptr [rsp + 0x50]
cmp	rdi, rax
jae	0x14006476e
jae	0x14006476e
cmp	dl, sil
je	0x14006476e
je	0x14006476e
mov	rcx, qword ptr [rsp + 0x90]
test	rcx, rcx
je	0x1400643a3
je	0x1400643a3
test	r13b, r13b
jne	0x140064790
jne	0x140064790
cmp	word ptr [r15 + rdi*2], r12w
jne	0x14006471c
jne	0x14006471c
mov	rsi, qword ptr [rsp + 0x90]
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x140064919
jae	0x140064919
add	rax, 2
mov	qword ptr [rsi + 0x10], rax
mov	eax, 0xffffffff
add	rdi, 1
mov	r12d, 0xffffffff
mov	word ptr [rsp + 0x98], ax
cmp	r12w, -1
sete	r13b
test	rsi, rsi
je	0x140064350
je	0x140064350
test	r13b, r13b
je	0x140064350
je	0x140064350
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x140064e2e
jae	0x140064e2e
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140064d8e
je	0x140064d8e
cmp	ax, -1
sete	sil
jmp	0x140064353
jmp	0x140064353
movzx	esi, word ptr [rsp + 0x98]
mov	rdi, qword ptr [rsp + 0x90]
nop	word ptr cs:[rax + rax]
cmp	si, -1
sete	r15b
test	rdi, rdi
je	0x140064456
je	0x140064456
test	r15b, r15b
jne	0x140064658
jne	0x140064658
mov	edi, r15d
cmp	word ptr [rsp + 0x88], -1
mov	rcx, qword ptr [rsp + 0x80]
sete	al
mov	edx, eax
test	rcx, rcx
je	0x14006447c
je	0x14006447c
test	al, al
jne	0x140064680
jne	0x140064680
cmp	dil, dl
je	0x1400646ab
je	0x1400646ab
mov	rcx, qword ptr [rsp + 0x90]
test	rcx, rcx
je	0x14006449b
je	0x14006449b
test	r15b, r15b
jne	0x1400646b8
jne	0x1400646b8
mov	rax, qword ptr [rsp + 0x38]
jmp	0x1400644b5
jmp	0x1400644b5
nop	word ptr [rax + rax]
add	rax, 2
cmp	rax, r13
je	0x140064588
je	0x140064588
cmp	si, word ptr [rax]
jne	0x1400644a8
jne	0x1400644a8
mov	rdi, qword ptr [rsp + 0x48]
sub	rax, rdi
mov	rdi, qword ptr [rip + 0x5a2c7]
sar	rax, 1
mov	rdx, qword ptr [rdi]
movzx	r15d, byte ptr [rdx + rax]
mov	rax, qword ptr [rsp + 0xb8]
mov	rdi, qword ptr [rax - 0x18]
lea	rsi, [rdi + 1]
cmp	qword ptr [rax - 0x10], rsi
jb	0x140064507
jb	0x140064507
mov	rcx, qword ptr [rip + 0x5a13f]
mov	edx, dword ptr [rcx]
test	edx, edx
jne	0x1400646f6
jne	0x1400646f6
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
test	al, al
je	0x140064512
je	0x140064512
mov	rdx, rsi
mov	rcx, rbp
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rsp + 0xb8]
add	ebx, 1
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], r15b
mov	rax, qword ptr [rsp + 0xb8]
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rsi
mov	byte ptr [rax + rdi + 1], 0
mov	rdi, qword ptr [rsp + 0x90]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x1400646e8
jae	0x1400646e8
add	rax, 2
mov	qword ptr [rdi + 0x10], rax
mov	r9d, 0xffffffff
mov	esi, 0xffffffff
mov	word ptr [rsp + 0x98], r9w
jmp	0x140064440
jmp	0x140064440
cmp	qword ptr [r14 + 0x50], 0
setne	byte ptr [rsp + 0x7f]
jmp	0x140064054
jmp	0x140064054
nop	dword ptr [rax + rax]
cmp	word ptr [r14 + 0x22], si
je	0x140064630
je	0x140064630
cmp	byte ptr [r14 + 0x20], 0
je	0x1400646ab
je	0x1400646ab
cmp	word ptr [r14 + 0x24], si
jne	0x1400646ab
jne	0x1400646ab
cmp	byte ptr [rsp + 0x7d], 0
jne	0x140064703
jne	0x140064703
test	ebx, ebx
je	0x140064df5
je	0x140064df5
mov	rax, qword ptr [rsp + 0xb0]
mov	rdi, qword ptr [rax - 0x18]
lea	rsi, [rdi + 1]
cmp	qword ptr [rax - 0x10], rsi
jb	0x1400645f3
jb	0x1400645f3
mov	rcx, qword ptr [rip + 0x5a057]
mov	r11d, dword ptr [rcx]
test	r11d, r11d
jne	0x140064731
jne	0x140064731
mov	r10d, dword ptr [rax - 8]
test	r10d, r10d
setg	al
test	al, al
je	0x1400645fe
je	0x1400645fe
mov	rdx, rsi
mov	rcx, r12
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rsp + 0xb0]
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], bl
mov	rax, qword ptr [rsp + 0xb0]
xor	ebx, ebx
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rsi
mov	byte ptr [rax + rdi + 1], 0
jmp	0x14006453d
jmp	0x14006453d
nop	dword ptr [rax]
cmp	byte ptr [rsp + 0x7d], 0
jne	0x140064703
jne	0x140064703
mov	esi, dword ptr [r14 + 0x58]
test	esi, esi
jle	0x1400646ab
jle	0x1400646ab
mov	dword ptr [rsp + 0x78], ebx
xor	ebx, ebx
mov	byte ptr [rsp + 0x7d], 1
jmp	0x14006453d
jmp	0x14006453d
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140064c8b
jae	0x140064c8b
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140064927
je	0x140064927
cmp	ax, -1
sete	dil
jmp	0x140064459
jmp	0x140064459
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140064c80
jae	0x140064c80
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140064938
je	0x140064938
cmp	ax, -1
sete	dl
cmp	dil, dl
jne	0x140064485
jne	0x140064485
mov	r15d, 1
jmp	0x140064709
jmp	0x140064709
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140064c99
jae	0x140064c99
movzx	esi, word ptr [rax]
cmp	si, -1
jne	0x14006449b
jne	0x14006449b
mov	qword ptr [rsp + 0x90], 0
jmp	0x14006449b
jmp	0x14006449b
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x14006455b
jmp	0x14006455b
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
jmp	0x140064503
jmp	0x140064503
movzx	r15d, byte ptr [rsp + 0x7d]
mov	rax, qword ptr [rsp + 0xb8]
cmp	qword ptr [rax - 0x18], 0
jne	0x140064162
jne	0x140064162
lea	r15, [rsp + 0x80]
lea	rdi, [rsp + 0x90]
jmp	0x14006425a
jmp	0x14006425a
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
jmp	0x1400645ef
jmp	0x1400645ef
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140064dfd
jae	0x140064dfd
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140064d7d
je	0x140064d7d
cmp	ax, -1
mov	rax, qword ptr [rsp + 0x50]
sete	dl
cmp	rdi, rax
jb	0x140064384
jb	0x140064384
mov	rax, qword ptr [rsp + 0x50]
cmp	rdi, rax
jne	0x14006471c
jne	0x14006471c
mov	rax, qword ptr [rsp + 0xb8]
cmp	qword ptr [rax - 0x18], 1
jbe	0x1400641dc
jbe	0x1400641dc
jmp	0x140064b50
jmp	0x140064b50
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140064e3c
jae	0x140064e3c
movzx	r12d, word ptr [rax]
cmp	r12w, -1
jne	0x1400643a3
jne	0x1400643a3
mov	qword ptr [rsp + 0x90], 0
jmp	0x1400643a3
jmp	0x1400643a3
movzx	edi, word ptr [rsp + 0x98]
mov	rsi, qword ptr [rsp + 0x90]
cmp	di, -1
sete	byte ptr [rsp + 0x58]
movzx	eax, byte ptr [rsp + 0x58]
test	rsi, rsi
je	0x1400647e9
je	0x1400647e9
test	al, al
jne	0x140064878
jne	0x140064878
movzx	esi, byte ptr [rsp + 0x58]
cmp	word ptr [rsp + 0x88], -1
mov	rcx, qword ptr [rsp + 0x80]
sete	al
mov	edx, eax
test	rcx, rcx
je	0x140064811
je	0x140064811
test	al, al
jne	0x1400648ab
jne	0x1400648ab
cmp	byte ptr [rsp + 0x58], dl
je	0x140064162
je	0x140064162
mov	rcx, qword ptr [rsp + 0x90]
test	rcx, rcx
je	0x140064831
je	0x140064831
test	sil, sil
jne	0x1400648d2
jne	0x1400648d2
mov	rcx, qword ptr [rsp + 0x60]
movzx	r8d, di
mov	edx, 0x20
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
test	al, al
je	0x140064162
je	0x140064162
mov	rsi, qword ptr [rsp + 0x90]
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x1400648fe
jae	0x1400648fe
add	rax, 2
mov	ecx, 0xffffffff
mov	qword ptr [rsi + 0x10], rax
mov	word ptr [rsp + 0x98], cx
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x140064e08
jae	0x140064e08
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140064d6c
je	0x140064d6c
cmp	ax, -1
mov	esi, 1
mov	edi, 0xffffffff
sete	byte ptr [rsp + 0x58]
jmp	0x1400647ee
jmp	0x1400647ee
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140064e23
jae	0x140064e23
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140064d5b
je	0x140064d5b
cmp	ax, -1
sete	dl
jmp	0x140064811
jmp	0x140064811
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140064e16
jae	0x140064e16
movzx	edi, word ptr [rax]
cmp	di, -1
jne	0x140064831
jne	0x140064831
mov	qword ptr [rsp + 0x90], 0
jmp	0x140064831
jmp	0x140064831
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	edx, 0xffffffff
mov	word ptr [rsp + 0x98], dx
jmp	0x140064878
jmp	0x140064878
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x1400643cc
jmp	0x1400643cc
mov	qword ptr [rsp + 0x90], 0
jmp	0x140064673
jmp	0x140064673
mov	qword ptr [rsp + 0x80], 0
jmp	0x14006469b
jmp	0x14006469b
cmp	byte ptr [rsp + 0x7f], 0
jne	0x140064968
jne	0x140064968
cmp	byte ptr [rsp + 0xac], 3
je	0x140064968
je	0x140064968
cmp	byte ptr [rsp + 0xae], 1
jne	0x140064a77
jne	0x140064a77
mov	rax, qword ptr [r14 + 0x30]
xor	esi, esi
lea	r15, [rsp + 0x80]
lea	rdi, [rsp + 0x90]
mov	qword ptr [rsp + 0x58], rax
jmp	0x1400649c7
jmp	0x1400649c7
nop	dword ptr [rax]
mov	rdx, qword ptr [r14 + 0x28]
cmp	word ptr [rdx + rsi*2], ax
jne	0x140064a38
jne	0x140064a38
mov	rcx, qword ptr [rsp + 0x90]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140064a62
jae	0x140064a62
add	rax, 2
mov	qword ptr [rcx + 0x10], rax
mov	r9d, 0xffffffff
add	rsi, 1
mov	word ptr [rsp + 0x98], r9w
mov	rdx, r15
mov	rcx, rdi
call	0x140020940
call	0x140020940
mov	rcx, qword ptr [rsp + 0x58]
cmp	rsi, rcx
jae	0x140064a6d
jae	0x140064a6d
cmp	al, 1
je	0x140064a6d
je	0x140064a6d
movzx	eax, word ptr [rsp + 0x98]
mov	rcx, qword ptr [rsp + 0x90]
cmp	ax, -1
jne	0x140064988
jne	0x140064988
test	rcx, rcx
je	0x140064988
je	0x140064988
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140064e6c
jae	0x140064e6c
movzx	eax, word ptr [rax]
cmp	ax, -1
jne	0x140064988
jne	0x140064988
mov	qword ptr [rsp + 0x90], 0
mov	rdx, qword ptr [r14 + 0x28]
cmp	word ptr [rdx + rsi*2], ax
je	0x140064996
je	0x140064996
test	rsi, rsi
jne	0x14006425a
jne	0x14006425a
mov	rax, qword ptr [rsp + 0x130]
mov	eax, dword ptr [rax + 0x18]
mov	dword ptr [rsp + 0x58], eax
shr	eax, 9
xor	eax, 1
mov	r15d, eax
and	r15d, 1
jmp	0x140064162
jmp	0x140064162
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x1400649b4
jmp	0x1400649b4
mov	rax, qword ptr [rsp + 0x58]
cmp	rsi, rax
jne	0x140064a38
jne	0x140064a38
mov	r15d, 1
jmp	0x140064162
jmp	0x140064162
mov	r15, qword ptr [r14 + 0x38]
jmp	0x14006432e
jmp	0x14006432e
mov	rcx, rdi
call	0x1400209f0
call	0x1400209f0
mov	rcx, qword ptr [rsp + 0x60]
movzx	r8d, ax
mov	edx, 0x20
mov	r9, qword ptr [rcx]
call	qword ptr [r9 + 0x10]
call	qword ptr [r9 + 0x10]
test	al, al
je	0x1400642fc
je	0x1400642fc
mov	rcx, qword ptr [rsp + 0x90]
call	0x140092490
call	0x140092490
mov	r8d, 0xffffffff
mov	word ptr [rsp + 0x98], r8w
mov	r15d, 1
jmp	0x1400642ff
jmp	0x1400642ff
lea	r15, [rsp + 0x80]
lea	rdi, [rsp + 0x90]
mov	rdx, r15
mov	rcx, rdi
call	0x140020940
call	0x140020940
test	al, al
je	0x140064bed
je	0x140064bed
cmp	qword ptr [r14 + 0x50], 0
je	0x140064b30
je	0x140064b30
mov	rdx, r15
mov	rcx, rdi
call	0x140020940
call	0x140020940
test	al, al
je	0x140064c32
je	0x140064c32
cmp	qword ptr [r14 + 0x40], 0
je	0x140064158
je	0x140064158
cmp	qword ptr [r14 + 0x50], 0
jne	0x140064158
jne	0x140064158
jmp	0x140064b3b
jmp	0x140064b3b
nop	dword ptr [rax]
cmp	qword ptr [r14 + 0x40], 0
je	0x140064158
je	0x140064158
mov	byte ptr [rsp + 0x7e], 1
mov	r15d, 1
jmp	0x140064162
jmp	0x140064162
nop	dword ptr [rax + rax]
xor	r8d, r8d
mov	edx, 0x30
mov	rcx, rbp
call	0x14001b630
call	0x14001b630
test	rax, rax
je	0x1400641dc
je	0x1400641dc
mov	rdx, qword ptr [rsp + 0xb8]
cmp	rax, -1
mov	rcx, rbp
mov	r8, qword ptr [rdx - 0x18]
lea	rdx, [r8 - 1]
cmove	rax, rdx
xor	r9d, r9d
cmp	rax, r8
cmovbe	r8, rax
xor	edx, edx
call	0x140073e00
call	0x140073e00
jmp	0x1400641dc
jmp	0x1400641dc
movzx	eax, byte ptr [rsp + 0xaf]
cmp	al, 4
je	0x140064968
je	0x140064968
cmp	al, 3
jne	0x140064a77
jne	0x140064a77
cmp	byte ptr [rsp + 0x7f], 0
je	0x140064a77
je	0x140064a77
jmp	0x140064968
jmp	0x140064968
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x140]
mov	rdx, rbp
lea	r15, [rsp + 0x80]
lea	rdi, [rsp + 0x90]
call	0x140072780
call	0x140072780
jmp	0x140064265
jmp	0x140064265
mov	rcx, rdi
call	0x1400209f0
call	0x1400209f0
mov	rdx, qword ptr [r14 + 0x38]
cmp	word ptr [rdx], ax
jne	0x140064afa
jne	0x140064afa
mov	rax, qword ptr [r14 + 0x40]
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x50], rax
call	0x140092490
call	0x140092490
mov	r8d, 0xffffffff
mov	r15d, 1
mov	word ptr [rsp + 0x98], r8w
jmp	0x140064162
jmp	0x140064162
mov	rcx, rdi
call	0x1400209f0
call	0x1400209f0
mov	rdx, qword ptr [r14 + 0x48]
cmp	word ptr [rdx], ax
jne	0x140064b14
jne	0x140064b14
mov	rax, qword ptr [r14 + 0x50]
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x50], rax
call	0x140092490
call	0x140092490
mov	ecx, 0xffffffff
mov	byte ptr [rsp + 0x7e], 1
mov	r15d, 1
mov	word ptr [rsp + 0x98], cx
jmp	0x140064162
jmp	0x140064162
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140064691
jmp	0x140064691
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140064669
jmp	0x140064669
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	esi, eax
jmp	0x1400646c9
jmp	0x1400646c9
mov	ecx, 0x80
call	0x1400b2c30
call	0x1400b2c30
mov	rsi, rax
mov	dword ptr [rax + 8], 0
lea	rax, [rip + 0x6270f]
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rsp + 0x130]
mov	rcx, rsi
mov	qword ptr [rsi + 0x10], 0
mov	qword ptr [rsi + 0x18], 0
lea	rdx, [rax + 0xd0]
mov	byte ptr [rsi + 0x20], 0
mov	dword ptr [rsi + 0x22], 0
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
mov	qword ptr [rsi + 0x38], 0
mov	qword ptr [rsi + 0x40], 0
mov	qword ptr [rsi + 0x48], 0
mov	qword ptr [rsi + 0x50], 0
mov	dword ptr [rsi + 0x58], 0
mov	qword ptr [rsi + 0x5c], 0
mov	byte ptr [rsi + 0x7a], 0
call	0x1400971b0
call	0x1400971b0
mov	rax, qword ptr [rsp + 0x130]
mov	r8, rbx
mov	rdx, rsi
mov	rcx, qword ptr [rax + 0xd0]
call	0x140099d30
call	0x140099d30
mov	r14, qword ptr [rdi]
jmp	0x14006403b
jmp	0x14006403b
mov	qword ptr [rsp + 0x80], 0
jmp	0x1400648c6
jmp	0x1400648c6
mov	qword ptr [rsp + 0x90], 0
jmp	0x140064893
jmp	0x140064893
mov	qword ptr [rsp + 0x80], 0
jmp	0x140064759
jmp	0x140064759
mov	qword ptr [rsp + 0x90], 0
jmp	0x140064419
jmp	0x140064419
mov	rax, qword ptr [rsp + 0xb8]
mov	edx, dword ptr [rax - 8]
test	edx, edx
jns	0x140064e57
jns	0x140064e57
cmp	byte ptr [rax], 0x30
je	0x1400641e7
je	0x1400641e7
mov	eax, dword ptr [rax - 8]
test	eax, eax
jns	0x140064e4a
jns	0x140064e4a
mov	dword ptr [rsp + 0x20], 0x2d
xor	r8d, r8d
xor	edx, edx
mov	rcx, rbp
mov	r9d, 1
call	0x140072270
call	0x140072270
mov	rax, qword ptr [rsp + 0xb8]
mov	dword ptr [rax - 8], 0xffffffff
jmp	0x1400641e7
jmp	0x1400641e7
xor	r15d, r15d
jmp	0x140064709
jmp	0x140064709
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14006474f
jmp	0x14006474f
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140064889
jmp	0x140064889
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edi, eax
jmp	0x1400648e3
jmp	0x1400648e3
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400648bc
jmp	0x1400648bc
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14006440f
jmp	0x14006440f
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r12d, eax
jmp	0x1400647a2
jmp	0x1400647a2
mov	rcx, rbp
call	0x140071cd0
call	0x140071cd0
jmp	0x140064dc6
jmp	0x140064dc6
mov	rcx, rbp
call	0x140071cd0
call	0x140071cd0
mov	rax, qword ptr [rsp + 0xb8]
jmp	0x140064db2
jmp	0x140064db2
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140064a14
jmp	0x140064a14
test	r15b, r15b
jne	0x1400641c9
jne	0x1400641c9
jmp	0x14006471c
jmp	0x14006471c
call	0x1400b3a30
call	0x1400b3a30
mov	rbx, rax
jmp	0x140064ea8
jmp	0x140064ea8
mov	rbx, rax
mov	rax, qword ptr [rsp + 0xb8]
mov	rdx, qword ptr [rsp + 0x70]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xb0]
mov	rdx, rbp
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x140064ed5
jmp	0x140064ed5
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xc8
movdqu	xmm0, xmmword ptr [r8]
movdqu	xmm1, xmmword ptr [r9]
mov	qword ptr [rsp + 0x110], rcx
mov	rcx, qword ptr [rip + 0x599b4]
movups	xmmword ptr [rsp + 0x90], xmm0
movups	xmmword ptr [rsp + 0x80], xmm1
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x130]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
mov	qword ptr [rsp + 0x60], rax
test	rax, rax
je	0x140065de5
je	0x140065de5
lea	rcx, [rip + 0x520d0]
call	0x140022a70
call	0x140022a70
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x130]
mov	rax, qword ptr [rax + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	rdi, [rax + rbx*8]
mov	r14, qword ptr [rdi]
test	r14, r14
je	0x140065c06
je	0x140065c06
lea	rax, [r14 + 0x64]
cmp	qword ptr [r14 + 0x40], 0
mov	qword ptr [rsp + 0x48], rax
jne	0x1400654d4
jne	0x1400654d4
mov	byte ptr [rsp + 0x7f], 0
lea	rbp, [rsp + 0xb8]
xor	edx, edx
xor	ecx, ecx
mov	r8, rbp
call	0x140071d40
call	0x140071d40
cmp	byte ptr [r14 + 0x20], 0
mov	qword ptr [rsp + 0xb0], rax
je	0x140064fe9
je	0x140064fe9
lea	rcx, [rsp + 0xb0]
mov	edx, 0x20
call	0x140073cf0
call	0x140073cf0
lea	rax, [rsp + 0xab]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x70], rax
call	0x140071d40
call	0x140071d40
mov	edx, 0x20
mov	rcx, rbp
mov	qword ptr [rsp + 0xb8], rax
call	0x140073cf0
call	0x140073cf0
lea	rax, [r14 + 0x66]
mov	byte ptr [rsp + 0x7d], 0
xor	ebx, ebx
lea	r13, [r14 + 0x7a]
mov	qword ptr [rsp + 0x38], rax
mov	eax, dword ptr [r14 + 0x60]
lea	r12, [rsp + 0xb0]
mov	qword ptr [rsp + 0x40], 0
mov	dword ptr [rsp + 0xac], eax
lea	rax, [rsp + 0xac]
mov	dword ptr [rsp + 0x78], 0
mov	qword ptr [rsp + 0x50], 0
mov	byte ptr [rsp + 0x7e], 0
mov	qword ptr [rsp + 0x68], rax
mov	rax, qword ptr [rsp + 0x68]
mov	rcx, qword ptr [rsp + 0x40]
cmp	byte ptr [rax + rcx], 4
ja	0x1400659d7
ja	0x1400659d7
movzx	eax, byte ptr [rax + rcx]
lea	rdi, [rip + 0x55773]
movsxd	rax, dword ptr [rdi + rax*4]
add	rax, rdi
jmp	rax
jmp	rax
cmp	qword ptr [r14 + 0x40], 0
jne	0x140065a37
jne	0x140065a37
cmp	qword ptr [r14 + 0x50], 0
lea	r15, [rsp + 0x80]
lea	rdi, [rsp + 0x90]
jne	0x140065a61
jne	0x140065a61
movzx	r15d, byte ptr [rsp + 0x7f]
xor	r15d, 1
mov	rdi, qword ptr [rsp + 0x40]
mov	eax, edi
add	eax, 1
cmp	eax, 3
setle	al
add	rdi, 1
mov	qword ptr [rsp + 0x40], rdi
test	al, r15b
jne	0x14006506a
jne	0x14006506a
jmp	0x14006526b
jmp	0x14006526b
nop	dword ptr [rax]
mov	rax, qword ptr [rsp + 0x130]
test	byte ptr [rax + 0x19], 2
jne	0x1400658c8
jne	0x1400658c8
cmp	qword ptr [rsp + 0x50], 1
ja	0x1400658c8
ja	0x1400658c8
mov	rax, qword ptr [rsp + 0x40]
test	eax, eax
je	0x1400658c8
je	0x1400658c8
cmp	rax, 1
je	0x1400658a9
je	0x1400658a9
cmp	qword ptr [rsp + 0x40], 2
je	0x140065afa
je	0x140065afa
mov	rax, qword ptr [rsp + 0xb8]
cmp	qword ptr [rax - 0x18], 1
ja	0x140065ab0
ja	0x140065ab0
cmp	byte ptr [rsp + 0x7e], 0
jne	0x140065cff
jne	0x140065cff
mov	rax, qword ptr [rsp + 0xb0]
cmp	qword ptr [rax - 0x18], 0
je	0x140065195
je	0x140065195
movsx	eax, byte ptr [rsp + 0x78]
movsx	edx, bl
cmp	byte ptr [rsp + 0x7d], 0
lea	rsi, [rsp + 0xb0]
mov	rcx, rsi
cmovne	edx, eax
call	0x140073fa0
call	0x140073fa0
mov	rdx, qword ptr [r14 + 0x18]
mov	rcx, qword ptr [r14 + 0x10]
mov	r8, rsi
call	0x1400ae880
call	0x1400ae880
test	al, al
jne	0x140065195
jne	0x140065195
mov	rax, qword ptr [rsp + 0x138]
or	dword ptr [rax], 4
cmp	byte ptr [rsp + 0x7d], 0
je	0x140065b28
je	0x140065b28
lea	r15, [rsp + 0x80]
lea	rdi, [rsp + 0x90]
cmp	dword ptr [r14 + 0x58], ebx
je	0x140065b28
je	0x140065b28
mov	rax, qword ptr [rsp + 0x138]
or	dword ptr [rax], 4
mov	rdx, r15
mov	rcx, rdi
call	0x140020940
call	0x140020940
test	al, al
je	0x1400651df
je	0x1400651df
mov	rax, qword ptr [rsp + 0x138]
or	dword ptr [rax], 2
mov	rax, qword ptr [rsp + 0x110]
mov	rdx, qword ptr [rsp + 0x70]
movdqu	xmm2, xmmword ptr [rsp + 0x90]
movups	xmmword ptr [rax], xmm2
mov	rax, qword ptr [rsp + 0xb8]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xb0]
mov	rdx, rbp
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0x110]
add	rsp, 0xc8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
lea	r15, [rsp + 0x80]
lea	rdi, [rsp + 0x90]
mov	rdx, r15
mov	rcx, rdi
call	0x140020940
call	0x140020940
test	al, al
je	0x1400659eb
je	0x1400659eb
xor	r15d, r15d
cmp	qword ptr [rsp + 0x40], 3
jne	0x14006571e
jne	0x14006571e
cmp	qword ptr [rsp + 0x50], 1
seta	al
and	eax, r15d
test	al, al
je	0x140065dd7
je	0x140065dd7
cmp	byte ptr [rsp + 0x7e], 0
je	0x1400659e2
je	0x1400659e2
mov	r15, qword ptr [r14 + 0x48]
mov	rsi, qword ptr [rsp + 0x90]
mov	edi, 1
movzx	r12d, word ptr [rsp + 0x98]
jmp	0x140065343
jmp	0x140065343
nop	dword ptr [rax]
mov	esi, r13d
cmp	word ptr [rsp + 0x88], -1
mov	rcx, qword ptr [rsp + 0x80]
sete	al
mov	edx, eax
test	rcx, rcx
je	0x1400652d6
je	0x1400652d6
test	al, al
jne	0x14006569e
jne	0x14006569e
mov	rax, qword ptr [rsp + 0x50]
cmp	rdi, rax
jae	0x1400656ce
jae	0x1400656ce
cmp	dl, sil
je	0x1400656ce
je	0x1400656ce
mov	rcx, qword ptr [rsp + 0x90]
test	rcx, rcx
je	0x140065303
je	0x140065303
test	r13b, r13b
jne	0x1400656f0
jne	0x1400656f0
cmp	word ptr [r15 + rdi*2], r12w
jne	0x14006567c
jne	0x14006567c
mov	rsi, qword ptr [rsp + 0x90]
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x140065879
jae	0x140065879
add	rax, 2
mov	qword ptr [rsi + 0x10], rax
mov	eax, 0xffffffff
add	rdi, 1
mov	r12d, 0xffffffff
mov	word ptr [rsp + 0x98], ax
cmp	r12w, -1
sete	r13b
test	rsi, rsi
je	0x1400652b0
je	0x1400652b0
test	r13b, r13b
je	0x1400652b0
je	0x1400652b0
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x140065d8e
jae	0x140065d8e
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140065cee
je	0x140065cee
cmp	ax, -1
sete	sil
jmp	0x1400652b3
jmp	0x1400652b3
movzx	esi, word ptr [rsp + 0x98]
mov	rdi, qword ptr [rsp + 0x90]
nop	word ptr cs:[rax + rax]
cmp	si, -1
sete	r15b
test	rdi, rdi
je	0x1400653b6
je	0x1400653b6
test	r15b, r15b
jne	0x1400655b8
jne	0x1400655b8
mov	edi, r15d
cmp	word ptr [rsp + 0x88], -1
mov	rcx, qword ptr [rsp + 0x80]
sete	al
mov	edx, eax
test	rcx, rcx
je	0x1400653dc
je	0x1400653dc
test	al, al
jne	0x1400655e0
jne	0x1400655e0
cmp	dil, dl
je	0x14006560b
je	0x14006560b
mov	rcx, qword ptr [rsp + 0x90]
test	rcx, rcx
je	0x1400653fb
je	0x1400653fb
test	r15b, r15b
jne	0x140065618
jne	0x140065618
mov	rax, qword ptr [rsp + 0x38]
jmp	0x140065415
jmp	0x140065415
nop	word ptr [rax + rax]
add	rax, 2
cmp	rax, r13
je	0x1400654e8
je	0x1400654e8
cmp	si, word ptr [rax]
jne	0x140065408
jne	0x140065408
mov	rdi, qword ptr [rsp + 0x48]
sub	rax, rdi
mov	rdi, qword ptr [rip + 0x59367]
sar	rax, 1
mov	rdx, qword ptr [rdi]
movzx	r15d, byte ptr [rdx + rax]
mov	rax, qword ptr [rsp + 0xb8]
mov	rdi, qword ptr [rax - 0x18]
lea	rsi, [rdi + 1]
cmp	qword ptr [rax - 0x10], rsi
jb	0x140065467
jb	0x140065467
mov	rcx, qword ptr [rip + 0x591df]
mov	edx, dword ptr [rcx]
test	edx, edx
jne	0x140065656
jne	0x140065656
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
test	al, al
je	0x140065472
je	0x140065472
mov	rdx, rsi
mov	rcx, rbp
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rsp + 0xb8]
add	ebx, 1
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], r15b
mov	rax, qword ptr [rsp + 0xb8]
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rsi
mov	byte ptr [rax + rdi + 1], 0
mov	rdi, qword ptr [rsp + 0x90]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140065648
jae	0x140065648
add	rax, 2
mov	qword ptr [rdi + 0x10], rax
mov	r9d, 0xffffffff
mov	esi, 0xffffffff
mov	word ptr [rsp + 0x98], r9w
jmp	0x1400653a0
jmp	0x1400653a0
cmp	qword ptr [r14 + 0x50], 0
setne	byte ptr [rsp + 0x7f]
jmp	0x140064fb4
jmp	0x140064fb4
nop	dword ptr [rax + rax]
cmp	word ptr [r14 + 0x22], si
je	0x140065590
je	0x140065590
cmp	byte ptr [r14 + 0x20], 0
je	0x14006560b
je	0x14006560b
cmp	word ptr [r14 + 0x24], si
jne	0x14006560b
jne	0x14006560b
cmp	byte ptr [rsp + 0x7d], 0
jne	0x140065663
jne	0x140065663
test	ebx, ebx
je	0x140065d55
je	0x140065d55
mov	rax, qword ptr [rsp + 0xb0]
mov	rdi, qword ptr [rax - 0x18]
lea	rsi, [rdi + 1]
cmp	qword ptr [rax - 0x10], rsi
jb	0x140065553
jb	0x140065553
mov	rcx, qword ptr [rip + 0x590f7]
mov	r11d, dword ptr [rcx]
test	r11d, r11d
jne	0x140065691
jne	0x140065691
mov	r10d, dword ptr [rax - 8]
test	r10d, r10d
setg	al
test	al, al
je	0x14006555e
je	0x14006555e
mov	rdx, rsi
mov	rcx, r12
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rsp + 0xb0]
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], bl
mov	rax, qword ptr [rsp + 0xb0]
xor	ebx, ebx
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rsi
mov	byte ptr [rax + rdi + 1], 0
jmp	0x14006549d
jmp	0x14006549d
nop	dword ptr [rax]
cmp	byte ptr [rsp + 0x7d], 0
jne	0x140065663
jne	0x140065663
mov	esi, dword ptr [r14 + 0x58]
test	esi, esi
jle	0x14006560b
jle	0x14006560b
mov	dword ptr [rsp + 0x78], ebx
xor	ebx, ebx
mov	byte ptr [rsp + 0x7d], 1
jmp	0x14006549d
jmp	0x14006549d
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140065beb
jae	0x140065beb
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140065887
je	0x140065887
cmp	ax, -1
sete	dil
jmp	0x1400653b9
jmp	0x1400653b9
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140065be0
jae	0x140065be0
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140065898
je	0x140065898
cmp	ax, -1
sete	dl
cmp	dil, dl
jne	0x1400653e5
jne	0x1400653e5
mov	r15d, 1
jmp	0x140065669
jmp	0x140065669
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140065bf9
jae	0x140065bf9
movzx	esi, word ptr [rax]
cmp	si, -1
jne	0x1400653fb
jne	0x1400653fb
mov	qword ptr [rsp + 0x90], 0
jmp	0x1400653fb
jmp	0x1400653fb
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x1400654bb
jmp	0x1400654bb
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
jmp	0x140065463
jmp	0x140065463
movzx	r15d, byte ptr [rsp + 0x7d]
mov	rax, qword ptr [rsp + 0xb8]
cmp	qword ptr [rax - 0x18], 0
jne	0x1400650c2
jne	0x1400650c2
lea	r15, [rsp + 0x80]
lea	rdi, [rsp + 0x90]
jmp	0x1400651ba
jmp	0x1400651ba
mov	eax, dword ptr [rax - 8]
test	eax, eax
setg	al
jmp	0x14006554f
jmp	0x14006554f
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140065d5d
jae	0x140065d5d
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140065cdd
je	0x140065cdd
cmp	ax, -1
mov	rax, qword ptr [rsp + 0x50]
sete	dl
cmp	rdi, rax
jb	0x1400652e4
jb	0x1400652e4
mov	rax, qword ptr [rsp + 0x50]
cmp	rdi, rax
jne	0x14006567c
jne	0x14006567c
mov	rax, qword ptr [rsp + 0xb8]
cmp	qword ptr [rax - 0x18], 1
jbe	0x14006513c
jbe	0x14006513c
jmp	0x140065ab0
jmp	0x140065ab0
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140065d9c
jae	0x140065d9c
movzx	r12d, word ptr [rax]
cmp	r12w, -1
jne	0x140065303
jne	0x140065303
mov	qword ptr [rsp + 0x90], 0
jmp	0x140065303
jmp	0x140065303
movzx	edi, word ptr [rsp + 0x98]
mov	rsi, qword ptr [rsp + 0x90]
cmp	di, -1
sete	byte ptr [rsp + 0x58]
movzx	eax, byte ptr [rsp + 0x58]
test	rsi, rsi
je	0x140065749
je	0x140065749
test	al, al
jne	0x1400657d8
jne	0x1400657d8
movzx	esi, byte ptr [rsp + 0x58]
cmp	word ptr [rsp + 0x88], -1
mov	rcx, qword ptr [rsp + 0x80]
sete	al
mov	edx, eax
test	rcx, rcx
je	0x140065771
je	0x140065771
test	al, al
jne	0x14006580b
jne	0x14006580b
cmp	byte ptr [rsp + 0x58], dl
je	0x1400650c2
je	0x1400650c2
mov	rcx, qword ptr [rsp + 0x90]
test	rcx, rcx
je	0x140065791
je	0x140065791
test	sil, sil
jne	0x140065832
jne	0x140065832
mov	rcx, qword ptr [rsp + 0x60]
movzx	r8d, di
mov	edx, 0x20
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
test	al, al
je	0x1400650c2
je	0x1400650c2
mov	rsi, qword ptr [rsp + 0x90]
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x14006585e
jae	0x14006585e
add	rax, 2
mov	ecx, 0xffffffff
mov	qword ptr [rsi + 0x10], rax
mov	word ptr [rsp + 0x98], cx
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x140065d68
jae	0x140065d68
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140065ccc
je	0x140065ccc
cmp	ax, -1
mov	esi, 1
mov	edi, 0xffffffff
sete	byte ptr [rsp + 0x58]
jmp	0x14006574e
jmp	0x14006574e
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140065d83
jae	0x140065d83
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140065cbb
je	0x140065cbb
cmp	ax, -1
sete	dl
jmp	0x140065771
jmp	0x140065771
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140065d76
jae	0x140065d76
movzx	edi, word ptr [rax]
cmp	di, -1
jne	0x140065791
jne	0x140065791
mov	qword ptr [rsp + 0x90], 0
jmp	0x140065791
jmp	0x140065791
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	edx, 0xffffffff
mov	word ptr [rsp + 0x98], dx
jmp	0x1400657d8
jmp	0x1400657d8
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x14006532c
jmp	0x14006532c
mov	qword ptr [rsp + 0x90], 0
jmp	0x1400655d3
jmp	0x1400655d3
mov	qword ptr [rsp + 0x80], 0
jmp	0x1400655fb
jmp	0x1400655fb
cmp	byte ptr [rsp + 0x7f], 0
jne	0x1400658c8
jne	0x1400658c8
cmp	byte ptr [rsp + 0xac], 3
je	0x1400658c8
je	0x1400658c8
cmp	byte ptr [rsp + 0xae], 1
jne	0x1400659d7
jne	0x1400659d7
mov	rax, qword ptr [r14 + 0x30]
xor	esi, esi
lea	r15, [rsp + 0x80]
lea	rdi, [rsp + 0x90]
mov	qword ptr [rsp + 0x58], rax
jmp	0x140065927
jmp	0x140065927
nop	dword ptr [rax]
mov	rdx, qword ptr [r14 + 0x28]
cmp	word ptr [rdx + rsi*2], ax
jne	0x140065998
jne	0x140065998
mov	rcx, qword ptr [rsp + 0x90]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400659c2
jae	0x1400659c2
add	rax, 2
mov	qword ptr [rcx + 0x10], rax
mov	r9d, 0xffffffff
add	rsi, 1
mov	word ptr [rsp + 0x98], r9w
mov	rdx, r15
mov	rcx, rdi
call	0x140020940
call	0x140020940
mov	rcx, qword ptr [rsp + 0x58]
cmp	rsi, rcx
jae	0x1400659cd
jae	0x1400659cd
cmp	al, 1
je	0x1400659cd
je	0x1400659cd
movzx	eax, word ptr [rsp + 0x98]
mov	rcx, qword ptr [rsp + 0x90]
cmp	ax, -1
jne	0x1400658e8
jne	0x1400658e8
test	rcx, rcx
je	0x1400658e8
je	0x1400658e8
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140065dcc
jae	0x140065dcc
movzx	eax, word ptr [rax]
cmp	ax, -1
jne	0x1400658e8
jne	0x1400658e8
mov	qword ptr [rsp + 0x90], 0
mov	rdx, qword ptr [r14 + 0x28]
cmp	word ptr [rdx + rsi*2], ax
je	0x1400658f6
je	0x1400658f6
test	rsi, rsi
jne	0x1400651ba
jne	0x1400651ba
mov	rax, qword ptr [rsp + 0x130]
mov	eax, dword ptr [rax + 0x18]
mov	dword ptr [rsp + 0x58], eax
shr	eax, 9
xor	eax, 1
mov	r15d, eax
and	r15d, 1
jmp	0x1400650c2
jmp	0x1400650c2
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140065914
jmp	0x140065914
mov	rax, qword ptr [rsp + 0x58]
cmp	rsi, rax
jne	0x140065998
jne	0x140065998
mov	r15d, 1
jmp	0x1400650c2
jmp	0x1400650c2
mov	r15, qword ptr [r14 + 0x38]
jmp	0x14006528e
jmp	0x14006528e
mov	rcx, rdi
call	0x1400209f0
call	0x1400209f0
mov	rcx, qword ptr [rsp + 0x60]
movzx	r8d, ax
mov	edx, 0x20
mov	r9, qword ptr [rcx]
call	qword ptr [r9 + 0x10]
call	qword ptr [r9 + 0x10]
test	al, al
je	0x14006525c
je	0x14006525c
mov	rcx, qword ptr [rsp + 0x90]
call	0x140092490
call	0x140092490
mov	r8d, 0xffffffff
mov	word ptr [rsp + 0x98], r8w
mov	r15d, 1
jmp	0x14006525f
jmp	0x14006525f
lea	r15, [rsp + 0x80]
lea	rdi, [rsp + 0x90]
mov	rdx, r15
mov	rcx, rdi
call	0x140020940
call	0x140020940
test	al, al
je	0x140065b4d
je	0x140065b4d
cmp	qword ptr [r14 + 0x50], 0
je	0x140065a90
je	0x140065a90
mov	rdx, r15
mov	rcx, rdi
call	0x140020940
call	0x140020940
test	al, al
je	0x140065b92
je	0x140065b92
cmp	qword ptr [r14 + 0x40], 0
je	0x1400650b8
je	0x1400650b8
cmp	qword ptr [r14 + 0x50], 0
jne	0x1400650b8
jne	0x1400650b8
jmp	0x140065a9b
jmp	0x140065a9b
nop	dword ptr [rax]
cmp	qword ptr [r14 + 0x40], 0
je	0x1400650b8
je	0x1400650b8
mov	byte ptr [rsp + 0x7e], 1
mov	r15d, 1
jmp	0x1400650c2
jmp	0x1400650c2
nop	dword ptr [rax + rax]
xor	r8d, r8d
mov	edx, 0x30
mov	rcx, rbp
call	0x14001b630
call	0x14001b630
test	rax, rax
je	0x14006513c
je	0x14006513c
mov	rdx, qword ptr [rsp + 0xb8]
cmp	rax, -1
mov	rcx, rbp
mov	r8, qword ptr [rdx - 0x18]
lea	rdx, [r8 - 1]
cmove	rax, rdx
xor	r9d, r9d
cmp	rax, r8
cmovbe	r8, rax
xor	edx, edx
call	0x140073e00
call	0x140073e00
jmp	0x14006513c
jmp	0x14006513c
movzx	eax, byte ptr [rsp + 0xaf]
cmp	al, 4
je	0x1400658c8
je	0x1400658c8
cmp	al, 3
jne	0x1400659d7
jne	0x1400659d7
cmp	byte ptr [rsp + 0x7f], 0
je	0x1400659d7
je	0x1400659d7
jmp	0x1400658c8
jmp	0x1400658c8
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x140]
mov	rdx, rbp
lea	r15, [rsp + 0x80]
lea	rdi, [rsp + 0x90]
call	0x140072780
call	0x140072780
jmp	0x1400651c5
jmp	0x1400651c5
mov	rcx, rdi
call	0x1400209f0
call	0x1400209f0
mov	rdx, qword ptr [r14 + 0x38]
cmp	word ptr [rdx], ax
jne	0x140065a5a
jne	0x140065a5a
mov	rax, qword ptr [r14 + 0x40]
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x50], rax
call	0x140092490
call	0x140092490
mov	r8d, 0xffffffff
mov	r15d, 1
mov	word ptr [rsp + 0x98], r8w
jmp	0x1400650c2
jmp	0x1400650c2
mov	rcx, rdi
call	0x1400209f0
call	0x1400209f0
mov	rdx, qword ptr [r14 + 0x48]
cmp	word ptr [rdx], ax
jne	0x140065a74
jne	0x140065a74
mov	rax, qword ptr [r14 + 0x50]
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x50], rax
call	0x140092490
call	0x140092490
mov	ecx, 0xffffffff
mov	byte ptr [rsp + 0x7e], 1
mov	r15d, 1
mov	word ptr [rsp + 0x98], cx
jmp	0x1400650c2
jmp	0x1400650c2
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400655f1
jmp	0x1400655f1
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400655c9
jmp	0x1400655c9
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	esi, eax
jmp	0x140065629
jmp	0x140065629
mov	ecx, 0x80
call	0x1400b2c30
call	0x1400b2c30
mov	rsi, rax
mov	dword ptr [rax + 8], 0
lea	rax, [rip + 0x617cf]
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rsp + 0x130]
mov	rcx, rsi
mov	qword ptr [rsi + 0x10], 0
mov	qword ptr [rsi + 0x18], 0
lea	rdx, [rax + 0xd0]
mov	byte ptr [rsi + 0x20], 0
mov	dword ptr [rsi + 0x22], 0
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
mov	qword ptr [rsi + 0x38], 0
mov	qword ptr [rsi + 0x40], 0
mov	qword ptr [rsi + 0x48], 0
mov	qword ptr [rsi + 0x50], 0
mov	dword ptr [rsi + 0x58], 0
mov	qword ptr [rsi + 0x5c], 0
mov	byte ptr [rsi + 0x7a], 0
call	0x1400979c0
call	0x1400979c0
mov	rax, qword ptr [rsp + 0x130]
mov	r8, rbx
mov	rdx, rsi
mov	rcx, qword ptr [rax + 0xd0]
call	0x140099d30
call	0x140099d30
mov	r14, qword ptr [rdi]
jmp	0x140064f9b
jmp	0x140064f9b
mov	qword ptr [rsp + 0x80], 0
jmp	0x140065826
jmp	0x140065826
mov	qword ptr [rsp + 0x90], 0
jmp	0x1400657f3
jmp	0x1400657f3
mov	qword ptr [rsp + 0x80], 0
jmp	0x1400656b9
jmp	0x1400656b9
mov	qword ptr [rsp + 0x90], 0
jmp	0x140065379
jmp	0x140065379
mov	rax, qword ptr [rsp + 0xb8]
mov	edx, dword ptr [rax - 8]
test	edx, edx
jns	0x140065db7
jns	0x140065db7
cmp	byte ptr [rax], 0x30
je	0x140065147
je	0x140065147
mov	eax, dword ptr [rax - 8]
test	eax, eax
jns	0x140065daa
jns	0x140065daa
mov	dword ptr [rsp + 0x20], 0x2d
xor	r8d, r8d
xor	edx, edx
mov	rcx, rbp
mov	r9d, 1
call	0x140072270
call	0x140072270
mov	rax, qword ptr [rsp + 0xb8]
mov	dword ptr [rax - 8], 0xffffffff
jmp	0x140065147
jmp	0x140065147
xor	r15d, r15d
jmp	0x140065669
jmp	0x140065669
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400656af
jmp	0x1400656af
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400657e9
jmp	0x1400657e9
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edi, eax
jmp	0x140065843
jmp	0x140065843
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14006581c
jmp	0x14006581c
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14006536f
jmp	0x14006536f
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r12d, eax
jmp	0x140065702
jmp	0x140065702
mov	rcx, rbp
call	0x140071cd0
call	0x140071cd0
jmp	0x140065d26
jmp	0x140065d26
mov	rcx, rbp
call	0x140071cd0
call	0x140071cd0
mov	rax, qword ptr [rsp + 0xb8]
jmp	0x140065d12
jmp	0x140065d12
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140065974
jmp	0x140065974
test	r15b, r15b
jne	0x140065129
jne	0x140065129
jmp	0x14006567c
jmp	0x14006567c
call	0x1400b3a30
call	0x1400b3a30
mov	rbx, rax
jmp	0x140065e08
jmp	0x140065e08
mov	rbx, rax
mov	rax, qword ptr [rsp + 0xb8]
mov	rdx, qword ptr [rsp + 0x70]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xb0]
mov	rdx, rbp
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x140065e35
jmp	0x140065e35
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa8]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x38], rcx
mov	rcx, qword ptr [rsp + 0xa0]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
mov	qword ptr [rsp + 0x28], rcx
movzx	ecx, byte ptr [rsp + 0x90]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movdqu	xmm0, xmmword ptr [r9]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rsp + 0x50], r10
lea	r9, [rsp + 0x40]
mov	rcx, qword ptr [rsp + 0xa8]
mov	qword ptr [rsp + 0x58], r11
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x38], rcx
mov	rcx, qword ptr [rsp + 0xa0]
movups	xmmword ptr [rsp + 0x40], xmm0
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rsp + 0x98]
mov	qword ptr [rsp + 0x28], rcx
movzx	ecx, byte ptr [rsp + 0x90]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
movups	xmmword ptr [rsp + 0x80], xmm6
mov	r13, qword ptr [rsp + 0x108]
mov	rdi, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
movdqu	xmm6, xmmword ptr [r9]
mov	r15d, dword ptr [rsp + 0x100]
mov	rsi, rcx
mov	rcx, qword ptr [rip + 0x5893f]
mov	rbp, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [r13 + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r12, qword ptr [rax + rdx*8]
test	r12, r12
je	0x140066175
je	0x140066175
lea	r14, [rsp + 0x77]
xor	edx, edx
xor	ecx, ecx
mov	r8, r14
call	0x140071d40
call	0x140071d40
mov	qword ptr [rsp + 0x78], rax
test	r15b, r15b
jne	0x1400660e0
jne	0x1400660e0
lea	rax, [rsp + 0x78]
mov	qword ptr [rsp + 0x20], r13
lea	rcx, [rsp + 0x60]
mov	rdx, rbp
mov	qword ptr [rsp + 0x30], rax
lea	r9, [rsp + 0x40]
lea	r8, [rsp + 0x50]
mov	rax, qword ptr [rsp + 0x110]
mov	qword ptr [rsp + 0x50], rdi
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x58], rbx
movups	xmmword ptr [rsp + 0x40], xmm6
call	0x140063fa0
call	0x140063fa0
mov	rax, qword ptr [rsp + 0x60]
mov	rdx, qword ptr [rsp + 0x68]
xor	bx, bx
mov	rcx, qword ptr [rsp + 0x78]
mov	qword ptr [rsp + 0x60], rax
mov	rdi, rax
mov	qword ptr [rsp + 0x68], rdx
movzx	eax, word ptr [rsp + 0x68]
mov	rbp, qword ptr [rcx - 0x18]
or	rbx, rax
test	rbp, rbp
je	0x140066097
je	0x140066097
mov	rcx, qword ptr [rsp + 0x118]
xor	r8d, r8d
mov	rdx, rbp
call	0x14006a0f0
call	0x14006a0f0
mov	rax, qword ptr [rsp + 0x118]
mov	r9, qword ptr [rax]
mov	eax, dword ptr [r9 - 8]
test	eax, eax
jns	0x140066158
jns	0x140066158
mov	rdx, qword ptr [rsp + 0x78]
mov	rax, qword ptr [r12]
mov	rcx, r12
lea	r8, [rdx + rbp]
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
mov	rcx, qword ptr [rsp + 0x78]
mov	rax, qword ptr [rip + 0x58592]
mov	qword ptr [rsi], rdi
mov	qword ptr [rsi + 8], rbx
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140066130
jne	0x140066130
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140066142
jle	0x140066142
movups	xmm6, xmmword ptr [rsp + 0x80]
mov	rax, rsi
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	
lea	rax, [rsp + 0x78]
mov	qword ptr [rsp + 0x20], r13
lea	rcx, [rsp + 0x60]
mov	rdx, rbp
mov	qword ptr [rsp + 0x30], rax
lea	r9, [rsp + 0x40]
lea	r8, [rsp + 0x50]
mov	rax, qword ptr [rsp + 0x110]
mov	qword ptr [rsp + 0x50], rdi
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x58], rbx
movups	xmmword ptr [rsp + 0x40], xmm6
call	0x140064f00
call	0x140064f00
jmp	0x140066025
jmp	0x140066025
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x1400660c0
jg	0x1400660c0
sub	rcx, 0x18
mov	rdx, r14
call	0x140072480
call	0x140072480
jmp	0x1400660c0
jmp	0x1400660c0
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x118]
call	0x140068810
call	0x140068810
mov	rax, qword ptr [rsp + 0x118]
mov	r9, qword ptr [rax]
jmp	0x14006607f
jmp	0x14006607f
call	0x1400b3a30
call	0x1400b3a30
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x78]
mov	rdx, r14
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x90
movups	xmmword ptr [rsp + 0x80], xmm6
mov	rdi, qword ptr [r8]
mov	rbx, qword ptr [r8 + 8]
movdqu	xmm6, xmmword ptr [r9]
mov	r13, qword ptr [rsp + 0x100]
mov	r14d, dword ptr [rsp + 0xf0]
lea	rbp, [rsp + 0x78]
mov	r12, rdx
mov	rsi, rcx
xor	edx, edx
mov	r8, rbp
xor	ecx, ecx
call	0x140071d40
call	0x140071d40
mov	qword ptr [rsp + 0x50], rdi
lea	rcx, [rsp + 0x60]
mov	rdx, r12
mov	qword ptr [rsp + 0x70], rax
lea	rax, [rsp + 0x70]
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0xf8]
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x58], rbx
mov	qword ptr [rsp + 0x28], r13
mov	qword ptr [rsp + 0x20], rax
movups	xmmword ptr [rsp + 0x40], xmm6
test	r14b, r14b
je	0x1400662c8
je	0x1400662c8
call	0x140064f00
call	0x140064f00
mov	rax, qword ptr [rsp + 0x60]
mov	rdx, qword ptr [rsp + 0x68]
xor	bx, bx
mov	qword ptr [rsp + 0x60], rax
mov	rdi, rax
mov	qword ptr [rsp + 0x68], rdx
movzx	eax, word ptr [rsp + 0x68]
or	rbx, rax
call	0x14009baf0
call	0x14009baf0
mov	rcx, qword ptr [rsp + 0x70]
mov	r9, rbp
mov	r8, r13
mov	qword ptr [rsp + 0x78], rax
mov	rdx, qword ptr [rsp + 0x108]
call	0x1400ace20
call	0x1400ace20
mov	rax, qword ptr [rip + 0x583a9]
mov	qword ptr [rsi], rdi
mov	qword ptr [rsi + 8], rbx
mov	rcx, qword ptr [rsp + 0x70]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400662d8
jne	0x1400662d8
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x1400662e6
jle	0x1400662e6
movups	xmm6, xmmword ptr [rsp + 0x80]
mov	rax, rsi
add	rsp, 0x90
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax + rax]
call	0x140063fa0
call	0x140063fa0
jmp	0x14006623c
jmp	0x14006623c
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x1400662a6
jg	0x1400662a6
sub	rcx, 0x18
mov	rdx, rbp
call	0x140072480
call	0x140072480
jmp	0x1400662a6
jmp	0x1400662a6
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x70]
mov	rdx, rbp
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x58
lea	rsi, [rip + 0x113]
mov	rax, qword ptr [rdx]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
mov	r8, qword ptr [rsp + 0xa0]
mov	rax, qword ptr [rax + 0x18]
mov	rbx, rcx
mov	qword ptr [rsp + 0x40], r10
movsx	ecx, byte ptr [rsp + 0x98]
mov	qword ptr [rsp + 0x48], r11
cmp	rax, rsi
jne	0x1400663a0
jne	0x1400663a0
test	r9b, r9b
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
mov	r9, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x40]
jne	0x140066390
jne	0x140066390
call	0x140066750
call	0x140066750
mov	rax, rbx
add	rsp, 0x58
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
call	0x140066e40
call	0x140066e40
mov	rax, rbx
add	rsp, 0x58
pop	rbx
pop	rsi
ret	
ret	
nop	
mov	rsi, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x30], r8
movzx	r9d, r9b
lea	r8, [rsp + 0x40]
mov	dword ptr [rsp + 0x28], ecx
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], rsi
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x58
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0xa0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
fld	xword ptr [rax]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
lea	rcx, [rsp + 0x40]
mov	qword ptr [rsp + 0x50], r10
movzx	r9d, r9b
mov	qword ptr [rsp + 0x30], rcx
movsx	ecx, byte ptr [rsp + 0x98]
lea	r8, [rsp + 0x50]
fstp	xword ptr [rsp + 0x40]
mov	dword ptr [rsp + 0x28], ecx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x58], r11
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x40
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movsx	eax, byte ptr [rsp + 0x78]
mov	rbx, rcx
test	r9b, r9b
mov	qword ptr [rsp + 0x30], r10
mov	r9, qword ptr [rsp + 0x70]
mov	rcx, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x38], r11
lea	r8, [rsp + 0x30]
mov	dword ptr [rsp + 0x20], eax
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, rbx
je	0x140066490
je	0x140066490
call	0x140066e40
call	0x140066e40
mov	rax, rbx
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
call	0x140066750
call	0x140066750
mov	rax, rbx
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
lea	rbp, [rsp + 0x90]
movups	xmmword ptr [rbp], xmm6
mov	eax, dword ptr [rbp + 0x88]
movdqu	xmm6, xmmword ptr [r8]
mov	dword ptr [rbp - 0x58], eax
mov	rax, qword ptr [rbp + 0x90]
lea	r13, [rbp - 0x10]
mov	qword ptr [rbp + 0x60], rcx
mov	rcx, r13
fld	xword ptr [rax]
mov	rax, qword ptr [rbp + 0x80]
mov	qword ptr [rbp + 0x68], rdx
mov	dword ptr [rbp - 0x54], r9d
lea	rdx, [rax + 0xd0]
fstp	xword ptr [rbp - 0x50]
call	0x14009be20
call	0x14009be20
mov	rcx, qword ptr [rip + 0x583ca]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp - 0x10]
mov	rax, qword ptr [rax + 8]
mov	rdi, qword ptr [rax + rdx*8]
test	rdi, rdi
je	0x140066714
je	0x140066714
sub	rsp, 0x40
lea	rbx, [rsp + 0x30]
mov	rsi, rbx
call	0x14009baf0
call	0x14009baf0
fld	xword ptr [rbp - 0x50]
lea	r14, [rbp - 0x30]
mov	qword ptr [rbp - 8], rax
lea	r12, [rbp - 8]
lea	r9, [rip + 0x53b8e]
mov	r8d, 0x40
mov	rdx, rbx
mov	rcx, r12
fstp	xword ptr [rbp - 0x30]
mov	qword ptr [rsp + 0x28], r14
mov	dword ptr [rsp + 0x20], 0
call	0x1400ad890
call	0x1400ad890
cmp	eax, 0x3f
jg	0x140066660
jg	0x140066660
movsxd	rbx, eax
lea	r15, [rbp - 0x11]
xor	edx, edx
mov	r8, r15
mov	rcx, rbx
call	0x140071d40
call	0x140071d40
mov	qword ptr [rbp - 8], rax
mov	eax, dword ptr [rax - 8]
test	eax, eax
jns	0x1400666b8
jns	0x1400666b8
mov	rax, qword ptr [rbp - 8]
lea	r14, [rsi + rbx]
mov	qword ptr [rbp - 0x50], rax
movzx	eax, byte ptr [rdi + 0x38]
cmp	al, 1
je	0x1400665ca
je	0x1400665ca
test	al, al
je	0x1400666f0
je	0x1400666f0
mov	rax, qword ptr [rdi]
lea	rdx, [rip - 0x4414d]
mov	rax, qword ptr [rax + 0x38]
cmp	rax, rdx
jne	0x140066700
jne	0x140066700
cmp	r14, rsi
je	0x1400665de
je	0x1400665de
mov	rcx, qword ptr [rbp - 0x50]
mov	r8, rbx
mov	rdx, rsi
call	0x140015998
call	0x140015998
movsx	eax, byte ptr [rbp - 0x58]
cmp	byte ptr [rbp - 0x54], 0
movups	xmmword ptr [rbp - 0x40], xmm6
lea	r8, [rbp - 0x40]
mov	qword ptr [rsp + 0x28], r12
mov	dword ptr [rsp + 0x20], eax
mov	r9, qword ptr [rbp + 0x80]
mov	rdx, qword ptr [rbp + 0x68]
mov	rcx, qword ptr [rbp + 0x60]
jne	0x140066658
jne	0x140066658
call	0x140066750
call	0x140066750
mov	rax, qword ptr [rip + 0x5801c]
mov	rcx, qword ptr [rbp - 8]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400666c8
jne	0x1400666c8
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x1400666da
jle	0x1400666da
mov	rcx, r13
call	0x14009bf30
call	0x14009bf30
mov	rax, qword ptr [rbp + 0x60]
movups	xmm6, xmmword ptr [rbp]
lea	rsp, [rbp + 0x18]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	dword ptr [rax]
call	0x140066e40
call	0x140066e40
jmp	0x14006660d
jmp	0x14006660d
nop	
lea	ebx, [rax + 1]
movsxd	rax, ebx
add	rax, 0xf
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
lea	r15, [rsp + 0x30]
mov	rsi, r15
call	0x14009baf0
call	0x14009baf0
fld	xword ptr [rbp - 0x50]
mov	qword ptr [rbp - 8], rax
mov	r8d, ebx
mov	rdx, r15
lea	r9, [rip + 0x53a41]
mov	rcx, r12
fstp	xword ptr [rbp - 0x30]
mov	qword ptr [rsp + 0x28], r14
mov	dword ptr [rsp + 0x20], 0
call	0x1400ad890
call	0x1400ad890
jmp	0x140066574
jmp	0x140066574
nop	dword ptr [rax]
mov	rcx, r12
call	0x140071cd0
call	0x140071cd0
jmp	0x140066597
jmp	0x140066597
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140066633
jg	0x140066633
sub	rcx, 0x18
mov	rdx, r15
call	0x140072480
call	0x140072480
jmp	0x140066633
jmp	0x140066633
nop	dword ptr [rax + rax]
mov	rcx, rdi
call	0x140021cb0
call	0x140021cb0
jmp	0x1400665b3
jmp	0x1400665b3
nop	dword ptr [rax]
mov	r9, qword ptr [rbp - 0x50]
mov	r8, r14
mov	rdx, rsi
mov	rcx, rdi
call	rax
call	rax
jmp	0x1400665de
jmp	0x1400665de
call	0x1400b3a30
call	0x1400b3a30
mov	rbx, rax
jmp	0x140066731
jmp	0x140066731
mov	rbx, rax
mov	rax, qword ptr [rbp - 8]
mov	rdx, r15
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, r13
call	0x14009bf30
call	0x14009bf30
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xb8
mov	eax, dword ptr [rsp + 0x120]
mov	r15, qword ptr [r8]
mov	r13, qword ptr [r8 + 8]
mov	r12, rcx
mov	rcx, qword ptr [rip + 0x58155]
mov	rbp, r9
mov	dword ptr [rsp + 0x54], eax
mov	byte ptr [rsp + 0x53], al
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r14, qword ptr [rax + rdx*8]
test	r14, r14
je	0x140066dae
je	0x140066dae
lea	rcx, [rip + 0x50863]
call	0x140022a70
call	0x140022a70
mov	rbx, rax
mov	rax, qword ptr [rbp + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	rsi, [rax + rbx*8]
mov	rdi, qword ptr [rsi]
test	rdi, rdi
je	0x140066c88
je	0x140066c88
mov	rax, qword ptr [rsp + 0x128]
mov	rsi, qword ptr [rax]
movzx	eax, byte ptr [rdi + 0x64]
mov	rdx, qword ptr [rsi - 0x18]
cmp	byte ptr [rsi], al
je	0x140066860
je	0x140066860
mov	eax, dword ptr [rdi + 0x5c]
mov	dword ptr [rsp + 0x9c], eax
mov	rax, qword ptr [rdi + 0x38]
mov	qword ptr [rsp + 0x58], rax
mov	rax, qword ptr [rdi + 0x40]
mov	qword ptr [rsp + 0x48], rax
add	rdx, rsi
cmp	rsi, rdx
jae	0x14006682f
jae	0x14006682f
mov	rcx, qword ptr [r14 + 0x30]
mov	rbx, rsi
jmp	0x140066821
jmp	0x140066821
nop	dword ptr [rax]
add	rbx, 1
cmp	rdx, rbx
je	0x14006682a
je	0x14006682a
movzx	eax, byte ptr [rbx]
test	byte ptr [rcx + rax*2], 8
jne	0x140066818
jne	0x140066818
sub	rbx, rsi
jne	0x140066890
jne	0x140066890
mov	rax, r12
mov	qword ptr [rbp + 0x10], 0
mov	qword ptr [r12], r15
mov	qword ptr [r12 + 8], r13
add	rsp, 0xb8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, dword ptr [rdi + 0x60]
mov	dword ptr [rsp + 0x9c], eax
mov	rax, qword ptr [rdi + 0x48]
mov	qword ptr [rsp + 0x58], rax
mov	rax, qword ptr [rdi + 0x50]
mov	qword ptr [rsp + 0x48], rax
test	rdx, rdx
je	0x14006682f
je	0x14006682f
add	rsi, 1
jmp	0x140066803
jmp	0x140066803
nop	word ptr [rax + rax]
lea	rax, [rsp + 0xa8]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x40], rax
call	0x140071d40
call	0x140071d40
lea	rdx, [rbx + rbx]
mov	qword ptr [rsp + 0xa0], rax
lea	rax, [rsp + 0xa0]
mov	rcx, rax
mov	qword ptr [rsp + 0x38], rax
call	0x140073cf0
call	0x140073cf0
mov	eax, dword ptr [rdi + 0x58]
mov	r14d, ebx
sub	r14d, eax
test	r14d, r14d
jle	0x1400669b2
jle	0x1400669b2
test	eax, eax
cmovs	r14d, ebx
cmp	qword ptr [rdi + 0x18], 0
je	0x140066d40
je	0x140066d40
mov	rax, qword ptr [rsp + 0xa0]
lea	r9d, [r14 + r14]
mov	rcx, qword ptr [rsp + 0x38]
xor	edx, edx
movsxd	r9, r9d
mov	r8, qword ptr [rax - 0x18]
mov	dword ptr [rsp + 0x20], 0
call	0x140072270
call	0x140072270
movsxd	rax, r14d
mov	rcx, qword ptr [rsp + 0xa0]
lea	rdx, [rsi + rax]
mov	qword ptr [rsp + 0x60], rdx
mov	rdx, qword ptr [rdi + 0x18]
mov	qword ptr [rsp + 0x68], rdx
mov	rdx, qword ptr [rdi + 0x10]
mov	qword ptr [rsp + 0x70], rdx
movsx	edx, byte ptr [rdi + 0x22]
mov	dword ptr [rsp + 0x78], edx
mov	eax, dword ptr [rcx - 8]
test	eax, eax
jns	0x140066d80
jns	0x140066d80
mov	rax, qword ptr [rsp + 0x60]
mov	r9, qword ptr [rsp + 0x68]
mov	qword ptr [rsp + 0x20], rsi
mov	r8, qword ptr [rsp + 0x70]
mov	edx, dword ptr [rsp + 0x78]
mov	qword ptr [rsp + 0x28], rax
call	0x1400aca30
call	0x1400aca30
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], rax
mov	eax, dword ptr [rcx - 8]
test	eax, eax
jns	0x140066d97
jns	0x140066d97
mov	rdx, qword ptr [rsp + 0x60]
mov	r9, qword ptr [rcx - 0x18]
sub	rdx, rcx
mov	r8, r9
sub	r8, rdx
cmp	r9, rdx
jb	0x140066db3
jb	0x140066db3
mov	rcx, qword ptr [rsp + 0x38]
xor	r9d, r9d
call	0x140073e00
call	0x140073e00
mov	eax, dword ptr [rdi + 0x58]
test	eax, eax
jg	0x140066c10
jg	0x140066c10
mov	eax, dword ptr [rbp + 0x18]
mov	rdx, qword ptr [rsp + 0xa0]
mov	esi, eax
and	esi, 0xb0
mov	dword ptr [rsp + 0x68], esi
mov	rsi, qword ptr [rsp + 0x48]
add	rsi, qword ptr [rdx - 0x18]
mov	qword ptr [rsp + 0x60], rsi
test	ah, 2
jne	0x140066bf8
jne	0x140066bf8
lea	rax, [rsp + 0x9b]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x78], rax
call	0x140071d40
call	0x140071d40
mov	rsi, qword ptr [rsp + 0x60]
mov	rcx, qword ptr [rsp + 0x40]
mov	qword ptr [rsp + 0xa8], rax
lea	rdx, [rsi + rsi]
call	0x140073cf0
call	0x140073cf0
mov	r14, qword ptr [rbp + 0x10]
cmp	dword ptr [rsp + 0x68], 0x10
lea	rbx, [rsp + 0x9c]
sete	dl
cmp	rsi, r14
lea	rsi, [rip + 0x5368a]
setb	al
and	edx, eax
mov	byte ptr [rsp + 0x70], dl
cmp	byte ptr [rbx], 4
ja	0x140066b20
ja	0x140066b20
movzx	eax, byte ptr [rbx]
movsxd	rax, dword ptr [rsi + rax*4]
add	rax, rsi
jmp	rax
jmp	rax
nop	dword ptr [rax + rax]
cmp	qword ptr [rsp + 0x48], 0
je	0x140066b20
je	0x140066b20
mov	rax, qword ptr [rsp + 0x58]
mov	rcx, qword ptr [rsp + 0x40]
movsx	edx, byte ptr [rax]
call	0x140073fa0
call	0x140073fa0
jmp	0x140066b20
jmp	0x140066b20
nop	dword ptr [rax + rax]
test	byte ptr [rbp + 0x19], 2
je	0x140066b20
je	0x140066b20
mov	rdx, qword ptr [rdi + 0x28]
mov	r8, qword ptr [rdi + 0x30]
mov	rcx, qword ptr [rsp + 0x40]
call	0x1400729e0
call	0x1400729e0
jmp	0x140066b20
jmp	0x140066b20
nop	word ptr cs:[rax + rax]
cmp	byte ptr [rsp + 0x70], 0
movsx	r8d, byte ptr [rsp + 0x53]
je	0x140066c60
je	0x140066c60
mov	rax, qword ptr [rsp + 0x60]
mov	rdx, r14
mov	rcx, qword ptr [rsp + 0x40]
sub	rdx, rax
call	0x140072ca0
call	0x140072ca0
jmp	0x140066b20
jmp	0x140066b20
nop	dword ptr [rax + rax]
cmp	byte ptr [rsp + 0x70], 0
je	0x140066b20
je	0x140066b20
mov	rax, qword ptr [rsp + 0x60]
mov	rdx, r14
movsx	r8d, byte ptr [rsp + 0x53]
mov	rcx, qword ptr [rsp + 0x40]
sub	rdx, rax
call	0x140072ca0
call	0x140072ca0
jmp	0x140066b20
jmp	0x140066b20
nop	dword ptr [rax]
mov	rdx, qword ptr [rsp + 0x38]
mov	rcx, qword ptr [rsp + 0x40]
call	0x140072af0
call	0x140072af0
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x38]
add	rbx, 1
cmp	rbx, rax
jne	0x140066a43
jne	0x140066a43
mov	rax, qword ptr [rsp + 0x48]
cmp	rax, 1
ja	0x140066c40
ja	0x140066c40
mov	rdx, qword ptr [rsp + 0xa8]
mov	rax, qword ptr [rdx - 0x18]
cmp	rax, r14
jae	0x140066d30
jae	0x140066d30
mov	r9, r14
movsx	r8d, byte ptr [rsp + 0x54]
sub	r9, rax
cmp	dword ptr [rsp + 0x68], 0x20
je	0x140066c72
je	0x140066c72
mov	dword ptr [rsp + 0x20], r8d
mov	rcx, qword ptr [rsp + 0x40]
xor	r8d, r8d
xor	edx, edx
call	0x140072270
call	0x140072270
mov	rdx, qword ptr [rsp + 0xa8]
mov	ebx, r13d
movsxd	r14, r14d
test	r13b, r13b
jne	0x140066bb3
jne	0x140066bb3
mov	rax, qword ptr [r15]
mov	r8, r14
mov	rcx, r15
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	r14, rax
mov	eax, 1
mov	rdx, qword ptr [rsp + 0xa8]
cmovne	ebx, eax
lea	rcx, [rdx - 0x18]
mov	rdx, qword ptr [rsp + 0x78]
movzx	eax, bl
mov	qword ptr [rsp + 0x80], r15
mov	qword ptr [rsp + 0x88], rax
mov	r13b, al
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xa0]
mov	rdx, qword ptr [rsp + 0x40]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
jmp	0x14006682f
jmp	0x14006682f
nop	word ptr [rax + rax]
mov	rax, qword ptr [rdi + 0x30]
add	rsi, rax
mov	qword ptr [rsp + 0x60], rsi
jmp	0x1400669e8
jmp	0x1400669e8
nop	dword ptr [rax]
movsx	edx, byte ptr [rdi + 0x21]
mov	rcx, qword ptr [rsp + 0x38]
call	0x140073fa0
call	0x140073fa0
test	r14d, r14d
js	0x140066d55
js	0x140066d55
movsxd	rdx, r14d
movsxd	r8, dword ptr [rdi + 0x58]
mov	rcx, qword ptr [rsp + 0x38]
add	rdx, rsi
call	0x1400729e0
call	0x1400729e0
jmp	0x1400669ba
jmp	0x1400669ba
mov	rdx, qword ptr [rsp + 0x58]
mov	rcx, qword ptr [rsp + 0x40]
lea	r8, [rax - 1]
add	rdx, 1
call	0x1400729e0
call	0x1400729e0
jmp	0x140066b41
jmp	0x140066b41
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x40]
mov	edx, r8d
call	0x140073fa0
call	0x140073fa0
jmp	0x140066b20
jmp	0x140066b20
mov	rcx, qword ptr [rsp + 0x40]
mov	rdx, r9
call	0x140072ca0
call	0x140072ca0
jmp	0x140066b81
jmp	0x140066b81
nop	dword ptr [rax]
mov	ecx, 0x70
call	0x1400b2c30
call	0x1400b2c30
mov	rdi, rax
mov	dword ptr [rax + 8], 0
lea	rax, [rip + 0x606ed]
lea	rdx, [rbp + 0xd0]
mov	qword ptr [rdi], rax
xor	eax, eax
mov	rcx, rdi
mov	qword ptr [rdi + 0x10], 0
mov	qword ptr [rdi + 0x18], 0
mov	byte ptr [rdi + 0x20], 0
mov	word ptr [rdi + 0x21], ax
mov	qword ptr [rdi + 0x28], 0
mov	qword ptr [rdi + 0x30], 0
mov	qword ptr [rdi + 0x38], 0
mov	qword ptr [rdi + 0x40], 0
mov	qword ptr [rdi + 0x48], 0
mov	qword ptr [rdi + 0x50], 0
mov	dword ptr [rdi + 0x58], 0
mov	qword ptr [rdi + 0x5c], 0
mov	byte ptr [rdi + 0x6f], 0
call	0x1400961b0
call	0x1400961b0
mov	rcx, qword ptr [rbp + 0xd0]
mov	rdx, rdi
mov	r8, rbx
call	0x140099d30
call	0x140099d30
mov	rdi, qword ptr [rsi]
jmp	0x1400667d0
jmp	0x1400667d0
nop	dword ptr [rax]
mov	r14, rax
jmp	0x140066b89
jmp	0x140066b89
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x38]
movsxd	r8, r14d
mov	rdx, rsi
call	0x140072de0
call	0x140072de0
jmp	0x1400669af
jmp	0x1400669af
neg	r14d
movsx	r8d, byte ptr [rdi + 0x65]
movsxd	rdx, r14d
mov	r14, qword ptr [rsp + 0x38]
mov	rcx, r14
call	0x140072ca0
call	0x140072ca0
mov	r8, rbx
mov	rdx, rsi
mov	rcx, r14
call	0x1400729e0
call	0x1400729e0
jmp	0x1400669ba
jmp	0x1400669ba
mov	rcx, qword ptr [rsp + 0x38]
call	0x140071cd0
call	0x140071cd0
mov	rcx, qword ptr [rsp + 0xa0]
jmp	0x14006694d
jmp	0x14006694d
mov	rcx, qword ptr [rsp + 0x38]
call	0x140071cd0
call	0x140071cd0
mov	rcx, qword ptr [rsp + 0xa0]
jmp	0x140066987
jmp	0x140066987
call	0x1400b3a30
call	0x1400b3a30
mov	r8, rdx
lea	rcx, [rip + 0x532bb]
lea	rdx, [rip + 0x5329e]
call	0x1400aed20
call	0x1400aed20
mov	rbx, rax
jmp	0x140066de7
jmp	0x140066de7
mov	rbx, rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rdx, qword ptr [rsp + 0x78]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xa0]
mov	rdx, qword ptr [rsp + 0x40]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x140066e16
jmp	0x140066e16
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xb8
mov	eax, dword ptr [rsp + 0x120]
mov	r15, qword ptr [r8]
mov	r13, qword ptr [r8 + 8]
mov	r12, rcx
mov	rcx, qword ptr [rip + 0x57a65]
mov	rbp, r9
mov	dword ptr [rsp + 0x54], eax
mov	byte ptr [rsp + 0x53], al
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r14, qword ptr [rax + rdx*8]
test	r14, r14
je	0x14006749e
je	0x14006749e
lea	rcx, [rip + 0x50183]
call	0x140022a70
call	0x140022a70
mov	rbx, rax
mov	rax, qword ptr [rbp + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	rsi, [rax + rbx*8]
mov	rdi, qword ptr [rsi]
test	rdi, rdi
je	0x140067378
je	0x140067378
mov	rax, qword ptr [rsp + 0x128]
mov	rsi, qword ptr [rax]
movzx	eax, byte ptr [rdi + 0x64]
mov	rdx, qword ptr [rsi - 0x18]
cmp	byte ptr [rsi], al
je	0x140066f50
je	0x140066f50
mov	eax, dword ptr [rdi + 0x5c]
mov	dword ptr [rsp + 0x9c], eax
mov	rax, qword ptr [rdi + 0x38]
mov	qword ptr [rsp + 0x58], rax
mov	rax, qword ptr [rdi + 0x40]
mov	qword ptr [rsp + 0x48], rax
add	rdx, rsi
cmp	rsi, rdx
jae	0x140066f1f
jae	0x140066f1f
mov	rcx, qword ptr [r14 + 0x30]
mov	rbx, rsi
jmp	0x140066f11
jmp	0x140066f11
nop	dword ptr [rax]
add	rbx, 1
cmp	rdx, rbx
je	0x140066f1a
je	0x140066f1a
movzx	eax, byte ptr [rbx]
test	byte ptr [rcx + rax*2], 8
jne	0x140066f08
jne	0x140066f08
sub	rbx, rsi
jne	0x140066f80
jne	0x140066f80
mov	rax, r12
mov	qword ptr [rbp + 0x10], 0
mov	qword ptr [r12], r15
mov	qword ptr [r12 + 8], r13
add	rsp, 0xb8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, dword ptr [rdi + 0x60]
mov	dword ptr [rsp + 0x9c], eax
mov	rax, qword ptr [rdi + 0x48]
mov	qword ptr [rsp + 0x58], rax
mov	rax, qword ptr [rdi + 0x50]
mov	qword ptr [rsp + 0x48], rax
test	rdx, rdx
je	0x140066f1f
je	0x140066f1f
add	rsi, 1
jmp	0x140066ef3
jmp	0x140066ef3
nop	word ptr [rax + rax]
lea	rax, [rsp + 0xa8]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x40], rax
call	0x140071d40
call	0x140071d40
lea	rdx, [rbx + rbx]
mov	qword ptr [rsp + 0xa0], rax
lea	rax, [rsp + 0xa0]
mov	rcx, rax
mov	qword ptr [rsp + 0x38], rax
call	0x140073cf0
call	0x140073cf0
mov	eax, dword ptr [rdi + 0x58]
mov	r14d, ebx
sub	r14d, eax
test	r14d, r14d
jle	0x1400670a2
jle	0x1400670a2
test	eax, eax
cmovs	r14d, ebx
cmp	qword ptr [rdi + 0x18], 0
je	0x140067430
je	0x140067430
mov	rax, qword ptr [rsp + 0xa0]
lea	r9d, [r14 + r14]
mov	rcx, qword ptr [rsp + 0x38]
xor	edx, edx
movsxd	r9, r9d
mov	r8, qword ptr [rax - 0x18]
mov	dword ptr [rsp + 0x20], 0
call	0x140072270
call	0x140072270
movsxd	rax, r14d
mov	rcx, qword ptr [rsp + 0xa0]
lea	rdx, [rsi + rax]
mov	qword ptr [rsp + 0x60], rdx
mov	rdx, qword ptr [rdi + 0x18]
mov	qword ptr [rsp + 0x68], rdx
mov	rdx, qword ptr [rdi + 0x10]
mov	qword ptr [rsp + 0x70], rdx
movsx	edx, byte ptr [rdi + 0x22]
mov	dword ptr [rsp + 0x78], edx
mov	eax, dword ptr [rcx - 8]
test	eax, eax
jns	0x140067470
jns	0x140067470
mov	rax, qword ptr [rsp + 0x60]
mov	r9, qword ptr [rsp + 0x68]
mov	qword ptr [rsp + 0x20], rsi
mov	r8, qword ptr [rsp + 0x70]
mov	edx, dword ptr [rsp + 0x78]
mov	qword ptr [rsp + 0x28], rax
call	0x1400aca30
call	0x1400aca30
mov	rcx, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], rax
mov	eax, dword ptr [rcx - 8]
test	eax, eax
jns	0x140067487
jns	0x140067487
mov	rdx, qword ptr [rsp + 0x60]
mov	r9, qword ptr [rcx - 0x18]
sub	rdx, rcx
mov	r8, r9
sub	r8, rdx
cmp	r9, rdx
jb	0x1400674a3
jb	0x1400674a3
mov	rcx, qword ptr [rsp + 0x38]
xor	r9d, r9d
call	0x140073e00
call	0x140073e00
mov	eax, dword ptr [rdi + 0x58]
test	eax, eax
jg	0x140067300
jg	0x140067300
mov	eax, dword ptr [rbp + 0x18]
mov	rdx, qword ptr [rsp + 0xa0]
mov	esi, eax
and	esi, 0xb0
mov	dword ptr [rsp + 0x68], esi
mov	rsi, qword ptr [rsp + 0x48]
add	rsi, qword ptr [rdx - 0x18]
mov	qword ptr [rsp + 0x60], rsi
test	ah, 2
jne	0x1400672e8
jne	0x1400672e8
lea	rax, [rsp + 0x9b]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x78], rax
call	0x140071d40
call	0x140071d40
mov	rsi, qword ptr [rsp + 0x60]
mov	rcx, qword ptr [rsp + 0x40]
mov	qword ptr [rsp + 0xa8], rax
lea	rdx, [rsi + rsi]
call	0x140073cf0
call	0x140073cf0
mov	r14, qword ptr [rbp + 0x10]
cmp	dword ptr [rsp + 0x68], 0x10
lea	rbx, [rsp + 0x9c]
sete	dl
cmp	rsi, r14
lea	rsi, [rip + 0x52f86]
setb	al
and	edx, eax
mov	byte ptr [rsp + 0x70], dl
cmp	byte ptr [rbx], 4
ja	0x140067210
ja	0x140067210
movzx	eax, byte ptr [rbx]
movsxd	rax, dword ptr [rsi + rax*4]
add	rax, rsi
jmp	rax
jmp	rax
nop	dword ptr [rax + rax]
cmp	qword ptr [rsp + 0x48], 0
je	0x140067210
je	0x140067210
mov	rax, qword ptr [rsp + 0x58]
mov	rcx, qword ptr [rsp + 0x40]
movsx	edx, byte ptr [rax]
call	0x140073fa0
call	0x140073fa0
jmp	0x140067210
jmp	0x140067210
nop	dword ptr [rax + rax]
test	byte ptr [rbp + 0x19], 2
je	0x140067210
je	0x140067210
mov	rdx, qword ptr [rdi + 0x28]
mov	r8, qword ptr [rdi + 0x30]
mov	rcx, qword ptr [rsp + 0x40]
call	0x1400729e0
call	0x1400729e0
jmp	0x140067210
jmp	0x140067210
nop	word ptr cs:[rax + rax]
cmp	byte ptr [rsp + 0x70], 0
movsx	r8d, byte ptr [rsp + 0x53]
je	0x140067350
je	0x140067350
mov	rax, qword ptr [rsp + 0x60]
mov	rdx, r14
mov	rcx, qword ptr [rsp + 0x40]
sub	rdx, rax
call	0x140072ca0
call	0x140072ca0
jmp	0x140067210
jmp	0x140067210
nop	dword ptr [rax + rax]
cmp	byte ptr [rsp + 0x70], 0
je	0x140067210
je	0x140067210
mov	rax, qword ptr [rsp + 0x60]
mov	rdx, r14
movsx	r8d, byte ptr [rsp + 0x53]
mov	rcx, qword ptr [rsp + 0x40]
sub	rdx, rax
call	0x140072ca0
call	0x140072ca0
jmp	0x140067210
jmp	0x140067210
nop	dword ptr [rax]
mov	rdx, qword ptr [rsp + 0x38]
mov	rcx, qword ptr [rsp + 0x40]
call	0x140072af0
call	0x140072af0
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x38]
add	rbx, 1
cmp	rbx, rax
jne	0x140067133
jne	0x140067133
mov	rax, qword ptr [rsp + 0x48]
cmp	rax, 1
ja	0x140067330
ja	0x140067330
mov	rdx, qword ptr [rsp + 0xa8]
mov	rax, qword ptr [rdx - 0x18]
cmp	rax, r14
jae	0x140067420
jae	0x140067420
mov	r9, r14
movsx	r8d, byte ptr [rsp + 0x54]
sub	r9, rax
cmp	dword ptr [rsp + 0x68], 0x20
je	0x140067362
je	0x140067362
mov	dword ptr [rsp + 0x20], r8d
mov	rcx, qword ptr [rsp + 0x40]
xor	r8d, r8d
xor	edx, edx
call	0x140072270
call	0x140072270
mov	rdx, qword ptr [rsp + 0xa8]
mov	ebx, r13d
movsxd	r14, r14d
test	r13b, r13b
jne	0x1400672a3
jne	0x1400672a3
mov	rax, qword ptr [r15]
mov	r8, r14
mov	rcx, r15
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	r14, rax
mov	eax, 1
mov	rdx, qword ptr [rsp + 0xa8]
cmovne	ebx, eax
lea	rcx, [rdx - 0x18]
mov	rdx, qword ptr [rsp + 0x78]
movzx	eax, bl
mov	qword ptr [rsp + 0x80], r15
mov	qword ptr [rsp + 0x88], rax
mov	r13b, al
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xa0]
mov	rdx, qword ptr [rsp + 0x40]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
jmp	0x140066f1f
jmp	0x140066f1f
nop	word ptr [rax + rax]
mov	rax, qword ptr [rdi + 0x30]
add	rsi, rax
mov	qword ptr [rsp + 0x60], rsi
jmp	0x1400670d8
jmp	0x1400670d8
nop	dword ptr [rax]
movsx	edx, byte ptr [rdi + 0x21]
mov	rcx, qword ptr [rsp + 0x38]
call	0x140073fa0
call	0x140073fa0
test	r14d, r14d
js	0x140067445
js	0x140067445
movsxd	rdx, r14d
movsxd	r8, dword ptr [rdi + 0x58]
mov	rcx, qword ptr [rsp + 0x38]
add	rdx, rsi
call	0x1400729e0
call	0x1400729e0
jmp	0x1400670aa
jmp	0x1400670aa
mov	rdx, qword ptr [rsp + 0x58]
mov	rcx, qword ptr [rsp + 0x40]
lea	r8, [rax - 1]
add	rdx, 1
call	0x1400729e0
call	0x1400729e0
jmp	0x140067231
jmp	0x140067231
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x40]
mov	edx, r8d
call	0x140073fa0
call	0x140073fa0
jmp	0x140067210
jmp	0x140067210
mov	rcx, qword ptr [rsp + 0x40]
mov	rdx, r9
call	0x140072ca0
call	0x140072ca0
jmp	0x140067271
jmp	0x140067271
nop	dword ptr [rax]
mov	ecx, 0x70
call	0x1400b2c30
call	0x1400b2c30
mov	rdi, rax
mov	dword ptr [rax + 8], 0
lea	rax, [rip + 0x6001d]
lea	rdx, [rbp + 0xd0]
mov	qword ptr [rdi], rax
xor	eax, eax
mov	rcx, rdi
mov	qword ptr [rdi + 0x10], 0
mov	qword ptr [rdi + 0x18], 0
mov	byte ptr [rdi + 0x20], 0
mov	word ptr [rdi + 0x21], ax
mov	qword ptr [rdi + 0x28], 0
mov	qword ptr [rdi + 0x30], 0
mov	qword ptr [rdi + 0x38], 0
mov	qword ptr [rdi + 0x40], 0
mov	qword ptr [rdi + 0x48], 0
mov	qword ptr [rdi + 0x50], 0
mov	dword ptr [rdi + 0x58], 0
mov	qword ptr [rdi + 0x5c], 0
mov	byte ptr [rdi + 0x6f], 0
call	0x1400969b0
call	0x1400969b0
mov	rcx, qword ptr [rbp + 0xd0]
mov	rdx, rdi
mov	r8, rbx
call	0x140099d30
call	0x140099d30
mov	rdi, qword ptr [rsi]
jmp	0x140066ec0
jmp	0x140066ec0
nop	dword ptr [rax]
mov	r14, rax
jmp	0x140067279
jmp	0x140067279
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x38]
movsxd	r8, r14d
mov	rdx, rsi
call	0x140072de0
call	0x140072de0
jmp	0x14006709f
jmp	0x14006709f
neg	r14d
movsx	r8d, byte ptr [rdi + 0x65]
movsxd	rdx, r14d
mov	r14, qword ptr [rsp + 0x38]
mov	rcx, r14
call	0x140072ca0
call	0x140072ca0
mov	r8, rbx
mov	rdx, rsi
mov	rcx, r14
call	0x1400729e0
call	0x1400729e0
jmp	0x1400670aa
jmp	0x1400670aa
mov	rcx, qword ptr [rsp + 0x38]
call	0x140071cd0
call	0x140071cd0
mov	rcx, qword ptr [rsp + 0xa0]
jmp	0x14006703d
jmp	0x14006703d
mov	rcx, qword ptr [rsp + 0x38]
call	0x140071cd0
call	0x140071cd0
mov	rcx, qword ptr [rsp + 0xa0]
jmp	0x140067077
jmp	0x140067077
call	0x1400b3a30
call	0x1400b3a30
mov	r8, rdx
lea	rcx, [rip + 0x52bcb]
lea	rdx, [rip + 0x52bae]
call	0x1400aed20
call	0x1400aed20
mov	rbx, rax
jmp	0x1400674d7
jmp	0x1400674d7
mov	rbx, rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rdx, qword ptr [rsp + 0x78]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0xa0]
mov	rdx, qword ptr [rsp + 0x40]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x140067506
jmp	0x140067506
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x58
lea	rsi, [rip + 0x113]
mov	rax, qword ptr [rdx]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
mov	r8, qword ptr [rsp + 0xa0]
mov	rax, qword ptr [rax + 0x18]
mov	rbx, rcx
mov	qword ptr [rsp + 0x40], r10
movzx	ecx, word ptr [rsp + 0x98]
mov	qword ptr [rsp + 0x48], r11
cmp	rax, rsi
jne	0x1400675b0
jne	0x1400675b0
test	r9b, r9b
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
mov	r9, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x40]
jne	0x1400675a0
jne	0x1400675a0
call	0x140067900
call	0x140067900
mov	rax, rbx
add	rsp, 0x58
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
call	0x140068010
call	0x140068010
mov	rax, rbx
add	rsp, 0x58
pop	rbx
pop	rsi
ret	
ret	
nop	
mov	rsi, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x30], r8
movzx	r9d, r9b
lea	r8, [rsp + 0x40]
mov	dword ptr [rsp + 0x28], ecx
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], rsi
call	rax
call	rax
mov	rax, rbx
add	rsp, 0x58
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0xa0]
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
fld	xword ptr [rax]
mov	rax, qword ptr [rdx]
mov	rbx, rcx
lea	rcx, [rsp + 0x40]
mov	qword ptr [rsp + 0x50], r10
movzx	r9d, r9b
mov	qword ptr [rsp + 0x30], rcx
movzx	ecx, word ptr [rsp + 0x98]
lea	r8, [rsp + 0x50]
fstp	xword ptr [rsp + 0x40]
mov	dword ptr [rsp + 0x28], ecx
mov	rcx, qword ptr [rsp + 0x90]
mov	qword ptr [rsp + 0x58], r11
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x40
mov	r10, qword ptr [r8]
mov	r11, qword ptr [r8 + 8]
movzx	eax, word ptr [rsp + 0x78]
mov	rbx, rcx
test	r9b, r9b
mov	qword ptr [rsp + 0x30], r10
mov	r9, qword ptr [rsp + 0x70]
mov	rcx, qword ptr [rsp + 0x80]
mov	qword ptr [rsp + 0x38], r11
lea	r8, [rsp + 0x30]
mov	dword ptr [rsp + 0x20], eax
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, rbx
je	0x1400676a0
je	0x1400676a0
call	0x140068010
call	0x140068010
mov	rax, rbx
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
call	0x140067900
call	0x140067900
mov	rax, rbx
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
lea	rbp, [rsp + 0x90]
movups	xmmword ptr [rbp], xmm6
mov	eax, dword ptr [rbp + 0x88]
movdqu	xmm6, xmmword ptr [r8]
mov	dword ptr [rbp - 0x58], eax
mov	rax, qword ptr [rbp + 0x90]
lea	r13, [rbp - 0x10]
mov	r15, rcx
mov	qword ptr [rbp + 0x68], rdx
mov	rcx, r13
fld	xword ptr [rax]
mov	rax, qword ptr [rbp + 0x80]
mov	dword ptr [rbp - 0x54], r9d
lea	rdx, [rax + 0xd0]
fstp	xword ptr [rbp - 0x50]
call	0x14009be20
call	0x14009be20
mov	rcx, qword ptr [rip + 0x571cb]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp - 0x10]
mov	rax, qword ptr [rax + 8]
mov	rsi, qword ptr [rax + rdx*8]
test	rsi, rsi
je	0x1400678d3
je	0x1400678d3
sub	rsp, 0x40
lea	rbx, [rsp + 0x30]
mov	r12, rbx
call	0x14009baf0
call	0x14009baf0
fld	xword ptr [rbp - 0x50]
lea	r14, [rbp - 0x30]
mov	qword ptr [rbp - 8], rax
lea	rdi, [rbp - 8]
lea	r9, [rip + 0x52f2f]
mov	r8d, 0x40
mov	rdx, rbx
mov	rcx, rdi
fstp	xword ptr [rbp - 0x30]
mov	qword ptr [rsp + 0x28], r14
mov	dword ptr [rsp + 0x20], 0
call	0x1400ad890
call	0x1400ad890
cmp	eax, 0x3f
jg	0x140067840
jg	0x140067840
movsxd	rbx, eax
lea	r14, [rbp - 0x11]
xor	edx, edx
mov	r8, r14
mov	rcx, rbx
call	0x140068880
call	0x140068880
mov	qword ptr [rbp - 8], rax
mov	eax, dword ptr [rax - 8]
test	eax, eax
jns	0x1400678a0
jns	0x1400678a0
mov	rax, qword ptr [rsi]
mov	r9, qword ptr [rbp - 8]
lea	r8, [r12 + rbx]
mov	rdx, r12
mov	rcx, rsi
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
movzx	eax, word ptr [rbp - 0x58]
cmp	byte ptr [rbp - 0x54], 0
movups	xmmword ptr [rbp - 0x40], xmm6
lea	r8, [rbp - 0x40]
mov	qword ptr [rsp + 0x28], rdi
mov	rcx, r15
mov	dword ptr [rsp + 0x20], eax
mov	r9, qword ptr [rbp + 0x80]
mov	rdx, qword ptr [rbp + 0x68]
jne	0x140067830
jne	0x140067830
call	0x140067900
call	0x140067900
mov	rax, qword ptr [rip + 0x56e41]
mov	rcx, qword ptr [rbp - 8]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400678b0
jne	0x1400678b0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x1400678c2
jle	0x1400678c2
mov	rcx, r13
call	0x14009bf30
call	0x14009bf30
nop	
movups	xmm6, xmmword ptr [rbp]
mov	rax, r15
lea	rsp, [rbp + 0x18]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	
call	0x140068010
call	0x140068010
jmp	0x1400677e8
jmp	0x1400677e8
nop	word ptr [rax + rax]
add	eax, 1
mov	dword ptr [rbp - 0x5c], eax
cdqe	
add	rax, 0xf
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
lea	rbx, [rsp + 0x30]
mov	r12, rbx
call	0x14009baf0
call	0x14009baf0
fld	xword ptr [rbp - 0x50]
mov	qword ptr [rbp - 8], rax
mov	rdx, rbx
mov	rcx, rdi
lea	r9, [rip + 0x52e0f]
fstp	xword ptr [rbp - 0x30]
mov	qword ptr [rsp + 0x28], r14
mov	dword ptr [rsp + 0x20], 0
mov	r8d, dword ptr [rbp - 0x5c]
call	0x1400ad890
call	0x1400ad890
jmp	0x140067783
jmp	0x140067783
nop	word ptr [rax + rax]
mov	rcx, rdi
call	0x140068810
call	0x140068810
jmp	0x1400677a6
jmp	0x1400677a6
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14006780e
jg	0x14006780e
sub	rcx, 0x18
mov	rdx, r14
call	0x140068ef0
call	0x140068ef0
jmp	0x14006780e
jmp	0x14006780e
call	0x1400b3a30
call	0x1400b3a30
mov	rbx, rax
mov	rax, qword ptr [rbp - 8]
mov	rdx, r14
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
mov	rcx, r13
call	0x14009bf30
call	0x14009bf30
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x1400678eb
jmp	0x1400678eb
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xb8
mov	eax, dword ptr [rsp + 0x120]
mov	r15, qword ptr [r8]
mov	r12, qword ptr [r8 + 8]
mov	rbp, rcx
mov	rcx, qword ptr [rip + 0x56fb5]
mov	rdi, r9
mov	dword ptr [rsp + 0x54], eax
mov	word ptr [rsp + 0x52], ax
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rdi + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r13, qword ptr [rax + rdx*8]
test	r13, r13
je	0x140067f7f
je	0x140067f7f
lea	rcx, [rip + 0x4f6d2]
call	0x140022a70
call	0x140022a70
mov	rsi, rax
mov	rax, qword ptr [rdi + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	r14, [rax + rsi*8]
mov	rbx, qword ptr [r14]
test	rbx, rbx
je	0x140067e58
je	0x140067e58
mov	rax, qword ptr [rsp + 0x128]
movzx	ecx, word ptr [rbx + 0x64]
mov	rsi, qword ptr [rax]
mov	rax, qword ptr [rsi - 0x18]
cmp	word ptr [rsi], cx
je	0x140067a08
je	0x140067a08
mov	edx, dword ptr [rbx + 0x5c]
mov	rcx, qword ptr [rbx + 0x40]
mov	dword ptr [rsp + 0x9c], edx
mov	rdx, qword ptr [rbx + 0x38]
mov	qword ptr [rsp + 0x48], rcx
mov	qword ptr [rsp + 0x58], rdx
mov	r10, qword ptr [r13]
mov	rcx, r13
lea	r9, [rsi + rax*2]
mov	r8, rsi
mov	edx, 8
call	qword ptr [r10 + 0x28]
call	qword ptr [r10 + 0x28]
sub	rax, rsi
mov	r14, rax
mov	r13, rax
sar	r14, 1
jne	0x140067a38
jne	0x140067a38
mov	rax, rbp
mov	qword ptr [rdi + 0x10], 0
mov	qword ptr [rbp], r15
mov	qword ptr [rbp + 8], r12
add	rsp, 0xb8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rbx + 0x60]
mov	rcx, qword ptr [rbx + 0x48]
test	rax, rax
mov	dword ptr [rsp + 0x9c], edx
mov	rdx, qword ptr [rbx + 0x50]
mov	qword ptr [rsp + 0x58], rcx
mov	qword ptr [rsp + 0x48], rdx
lea	rdx, [rsi + 2]
cmovne	rsi, rdx
jmp	0x1400679b5
jmp	0x1400679b5
nop	dword ptr [rax]
lea	rax, [rsp + 0xa8]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x40], rax
call	0x140068880
call	0x140068880
mov	rdx, r13
mov	qword ptr [rsp + 0xa0], rax
lea	rax, [rsp + 0xa0]
mov	rcx, rax
mov	qword ptr [rsp + 0x38], rax
call	0x14006a8f0
call	0x14006a8f0
mov	eax, dword ptr [rbx + 0x58]
mov	r13d, r14d
sub	r13d, eax
test	r13d, r13d
jle	0x140067b70
jle	0x140067b70
test	eax, eax
cmovs	r13d, r14d
cmp	qword ptr [rbx + 0x18], 0
je	0x140067f10
je	0x140067f10
lea	eax, [r13 + r13]
mov	rcx, qword ptr [rsp + 0x38]
movsxd	rdx, eax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], rdx
mov	r9, rdx
xor	edx, edx
mov	r8, qword ptr [rax - 0x18]
mov	dword ptr [rsp + 0x20], 0
call	0x140068c90
call	0x140068c90
mov	rdx, qword ptr [rsp + 0x60]
mov	rcx, qword ptr [rsp + 0xa0]
add	rdx, rsi
mov	qword ptr [rsp + 0x60], rdx
mov	rdx, qword ptr [rbx + 0x18]
mov	qword ptr [rsp + 0x68], rdx
mov	rdx, qword ptr [rbx + 0x10]
mov	qword ptr [rsp + 0x70], rdx
movzx	edx, word ptr [rbx + 0x24]
mov	dword ptr [rsp + 0x78], edx
mov	eax, dword ptr [rcx - 8]
test	eax, eax
jns	0x140067f58
jns	0x140067f58
mov	rax, qword ptr [rsp + 0x60]
mov	r9, qword ptr [rsp + 0x68]
mov	qword ptr [rsp + 0x20], rsi
mov	r8, qword ptr [rsp + 0x70]
mov	edx, dword ptr [rsp + 0x78]
mov	qword ptr [rsp + 0x68], rcx
mov	qword ptr [rsp + 0x28], rax
call	0x1400acbc0
call	0x1400acbc0
mov	rcx, qword ptr [rsp + 0x68]
mov	qword ptr [rsp + 0x60], rax
mov	eax, dword ptr [rcx - 8]
test	eax, eax
jns	0x140067f70
jns	0x140067f70
mov	rax, qword ptr [rsp + 0xa0]
mov	rdx, qword ptr [rsp + 0x60]
mov	r9, qword ptr [rax - 0x18]
sub	rdx, rax
sar	rdx, 1
mov	r8, r9
sub	r8, rdx
cmp	r9, rdx
jb	0x140067f84
jb	0x140067f84
mov	rcx, qword ptr [rsp + 0x38]
xor	r9d, r9d
call	0x14006aa20
call	0x14006aa20
mov	eax, dword ptr [rbx + 0x58]
test	eax, eax
jg	0x140067df0
jg	0x140067df0
mov	eax, dword ptr [rdi + 0x18]
mov	rdx, qword ptr [rsp + 0xa0]
mov	esi, eax
and	esi, 0xb0
mov	dword ptr [rsp + 0x68], esi
mov	rsi, qword ptr [rsp + 0x48]
add	rsi, qword ptr [rdx - 0x18]
mov	qword ptr [rsp + 0x60], rsi
test	ah, 2
jne	0x140067db8
jne	0x140067db8
lea	rax, [rsp + 0x9b]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x78], rax
call	0x140068880
call	0x140068880
mov	rsi, qword ptr [rsp + 0x60]
mov	rcx, qword ptr [rsp + 0x40]
mov	qword ptr [rsp + 0xa8], rax
lea	rdx, [rsi + rsi]
call	0x14006a8f0
call	0x14006a8f0
mov	r14, qword ptr [rdi + 0x10]
cmp	dword ptr [rsp + 0x68], 0x10
lea	r13, [rip + 0x52a8a]
sete	dl
cmp	rsi, r14
lea	rsi, [rsp + 0x9c]
setb	al
and	edx, eax
mov	byte ptr [rsp + 0x70], dl
cmp	byte ptr [rsi], 4
ja	0x140067ce0
ja	0x140067ce0
movzx	eax, byte ptr [rsi]
movsxd	rax, dword ptr [r13 + rax*4]
add	rax, r13
jmp	rax
jmp	rax
nop	word ptr [rax + rax]
cmp	qword ptr [rsp + 0x48], 0
je	0x140067ce0
je	0x140067ce0
mov	rax, qword ptr [rsp + 0x58]
mov	rcx, qword ptr [rsp + 0x40]
movzx	edx, word ptr [rax]
call	0x14006abe0
call	0x14006abe0
jmp	0x140067ce0
jmp	0x140067ce0
nop	dword ptr [rax + rax]
test	byte ptr [rdi + 0x19], 2
je	0x140067ce0
je	0x140067ce0
mov	rdx, qword ptr [rbx + 0x28]
mov	r8, qword ptr [rbx + 0x30]
mov	rcx, qword ptr [rsp + 0x40]
call	0x140069490
call	0x140069490
jmp	0x140067ce0
jmp	0x140067ce0
nop	word ptr cs:[rax + rax]
cmp	byte ptr [rsp + 0x70], 0
movzx	r8d, word ptr [rsp + 0x52]
je	0x140067e28
je	0x140067e28
mov	rax, qword ptr [rsp + 0x60]
mov	rdx, r14
mov	rcx, qword ptr [rsp + 0x40]
sub	rdx, rax
call	0x140069760
call	0x140069760
jmp	0x140067ce0
jmp	0x140067ce0
nop	dword ptr [rax + rax]
cmp	byte ptr [rsp + 0x70], 0
je	0x140067ce0
je	0x140067ce0
mov	rax, qword ptr [rsp + 0x60]
mov	rdx, r14
movzx	r8d, word ptr [rsp + 0x52]
mov	rcx, qword ptr [rsp + 0x40]
sub	rdx, rax
call	0x140069760
call	0x140069760
jmp	0x140067ce0
jmp	0x140067ce0
nop	dword ptr [rax]
mov	rdx, qword ptr [rsp + 0x38]
mov	rcx, qword ptr [rsp + 0x40]
call	0x1400695a0
call	0x1400695a0
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x38]
add	rsi, 1
cmp	rsi, rax
jne	0x140067c01
jne	0x140067c01
mov	rax, qword ptr [rsp + 0x48]
cmp	rax, 1
ja	0x140067dd0
ja	0x140067dd0
mov	rdx, qword ptr [rsp + 0xa8]
mov	rax, qword ptr [rdx - 0x18]
cmp	rax, r14
jae	0x140067f00
jae	0x140067f00
mov	r9, r14
movzx	r8d, word ptr [rsp + 0x54]
sub	r9, rax
cmp	dword ptr [rsp + 0x68], 0x20
je	0x140067e40
je	0x140067e40
mov	dword ptr [rsp + 0x20], r8d
mov	rcx, qword ptr [rsp + 0x40]
xor	r8d, r8d
xor	edx, edx
call	0x140068c90
call	0x140068c90
mov	rdx, qword ptr [rsp + 0xa8]
mov	ebx, r12d
movsxd	r14, r14d
test	r12b, r12b
jne	0x140067d73
jne	0x140067d73
mov	rax, qword ptr [r15]
mov	r8, r14
mov	rcx, r15
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	r14, rax
mov	eax, 1
mov	rdx, qword ptr [rsp + 0xa8]
cmovne	ebx, eax
lea	rcx, [rdx - 0x18]
mov	rdx, qword ptr [rsp + 0x78]
movzx	eax, bl
mov	qword ptr [rsp + 0x80], r15
mov	qword ptr [rsp + 0x88], rax
mov	r12b, al
call	0x140068f00
call	0x140068f00
mov	rax, qword ptr [rsp + 0xa0]
mov	rdx, qword ptr [rsp + 0x40]
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
jmp	0x1400679da
jmp	0x1400679da
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x30]
add	rsi, rax
mov	qword ptr [rsp + 0x60], rsi
jmp	0x140067ba6
jmp	0x140067ba6
nop	dword ptr [rax]
mov	rdx, qword ptr [rsp + 0x58]
mov	rcx, qword ptr [rsp + 0x40]
lea	r8, [rax - 1]
add	rdx, 2
call	0x140069490
call	0x140069490
jmp	0x140067d01
jmp	0x140067d01
nop	dword ptr [rax]
movzx	edx, word ptr [rbx + 0x22]
mov	rcx, qword ptr [rsp + 0x38]
call	0x14006abe0
call	0x14006abe0
test	r13d, r13d
js	0x140067f28
js	0x140067f28
movsxd	r13, r13d
movsxd	r8, dword ptr [rbx + 0x58]
mov	rcx, qword ptr [rsp + 0x38]
lea	rdx, [rsi + r13*2]
call	0x140069490
call	0x140069490
jmp	0x140067b78
jmp	0x140067b78
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x40]
mov	edx, r8d
call	0x14006abe0
call	0x14006abe0
jmp	0x140067ce0
jmp	0x140067ce0
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x40]
mov	rdx, r9
call	0x140069760
call	0x140069760
jmp	0x140067d41
jmp	0x140067d41
nop	word ptr [rax + rax]
mov	ecx, 0x80
call	0x1400b2c30
call	0x1400b2c30
mov	rbx, rax
mov	dword ptr [rax + 8], 0
lea	rax, [rip + 0x5f55d]
lea	rdx, [rdi + 0xd0]
mov	qword ptr [rbx], rax
mov	rcx, rbx
mov	qword ptr [rbx + 0x10], 0
mov	qword ptr [rbx + 0x18], 0
mov	byte ptr [rbx + 0x20], 0
mov	dword ptr [rbx + 0x22], 0
mov	qword ptr [rbx + 0x28], 0
mov	qword ptr [rbx + 0x30], 0
mov	qword ptr [rbx + 0x38], 0
mov	qword ptr [rbx + 0x40], 0
mov	qword ptr [rbx + 0x48], 0
mov	qword ptr [rbx + 0x50], 0
mov	dword ptr [rbx + 0x58], 0
mov	qword ptr [rbx + 0x5c], 0
mov	byte ptr [rbx + 0x7a], 0
call	0x1400971b0
call	0x1400971b0
mov	rcx, qword ptr [rdi + 0xd0]
mov	rdx, rbx
mov	r8, rsi
call	0x140099d30
call	0x140099d30
mov	rbx, qword ptr [r14]
jmp	0x140067981
jmp	0x140067981
nop	dword ptr [rax]
mov	r14, rax
jmp	0x140067d49
jmp	0x140067d49
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x38]
movsxd	r8, r13d
mov	rdx, rsi
call	0x1400698d0
call	0x1400698d0
jmp	0x140067b6d
jmp	0x140067b6d
nop	dword ptr [rax]
neg	r13d
movzx	r8d, word ptr [rbx + 0x66]
movsxd	rdx, r13d
mov	r13, qword ptr [rsp + 0x38]
mov	rcx, r13
call	0x140069760
call	0x140069760
mov	r8, r14
mov	rdx, rsi
mov	rcx, r13
call	0x140069490
call	0x140069490
jmp	0x140067b78
jmp	0x140067b78
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x38]
call	0x140068810
call	0x140068810
mov	rcx, qword ptr [rsp + 0xa0]
jmp	0x140067afe
jmp	0x140067afe
nop	
mov	rcx, qword ptr [rsp + 0x38]
call	0x140068810
call	0x140068810
jmp	0x140067b3a
jmp	0x140067b3a
call	0x1400b3a30
call	0x1400b3a30
mov	r8, rdx
lea	rcx, [rip + 0x5269a]
lea	rdx, [rip + 0x5267d]
call	0x1400aed20
call	0x1400aed20
mov	rbx, rax
jmp	0x140067fb8
jmp	0x140067fb8
mov	rbx, rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rdx, qword ptr [rsp + 0x78]
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
mov	rax, qword ptr [rsp + 0xa0]
mov	rdx, qword ptr [rsp + 0x40]
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x140067fe7
jmp	0x140067fe7
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xb8
mov	eax, dword ptr [rsp + 0x120]
mov	r15, qword ptr [r8]
mov	r12, qword ptr [r8 + 8]
mov	rbp, rcx
mov	rcx, qword ptr [rip + 0x568a5]
mov	rdi, r9
mov	dword ptr [rsp + 0x54], eax
mov	word ptr [rsp + 0x52], ax
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rdi + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r13, qword ptr [rax + rdx*8]
test	r13, r13
je	0x14006868f
je	0x14006868f
lea	rcx, [rip + 0x4efd2]
call	0x140022a70
call	0x140022a70
mov	rsi, rax
mov	rax, qword ptr [rdi + 0xd0]
mov	rax, qword ptr [rax + 0x18]
lea	r14, [rax + rsi*8]
mov	rbx, qword ptr [r14]
test	rbx, rbx
je	0x140068568
je	0x140068568
mov	rax, qword ptr [rsp + 0x128]
movzx	ecx, word ptr [rbx + 0x64]
mov	rsi, qword ptr [rax]
mov	rax, qword ptr [rsi - 0x18]
cmp	word ptr [rsi], cx
je	0x140068118
je	0x140068118
mov	edx, dword ptr [rbx + 0x5c]
mov	rcx, qword ptr [rbx + 0x40]
mov	dword ptr [rsp + 0x9c], edx
mov	rdx, qword ptr [rbx + 0x38]
mov	qword ptr [rsp + 0x48], rcx
mov	qword ptr [rsp + 0x58], rdx
mov	r10, qword ptr [r13]
mov	rcx, r13
lea	r9, [rsi + rax*2]
mov	r8, rsi
mov	edx, 8
call	qword ptr [r10 + 0x28]
call	qword ptr [r10 + 0x28]
sub	rax, rsi
mov	r14, rax
mov	r13, rax
sar	r14, 1
jne	0x140068148
jne	0x140068148
mov	rax, rbp
mov	qword ptr [rdi + 0x10], 0
mov	qword ptr [rbp], r15
mov	qword ptr [rbp + 8], r12
add	rsp, 0xb8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rbx + 0x60]
mov	rcx, qword ptr [rbx + 0x48]
test	rax, rax
mov	dword ptr [rsp + 0x9c], edx
mov	rdx, qword ptr [rbx + 0x50]
mov	qword ptr [rsp + 0x58], rcx
mov	qword ptr [rsp + 0x48], rdx
lea	rdx, [rsi + 2]
cmovne	rsi, rdx
jmp	0x1400680c5
jmp	0x1400680c5
nop	dword ptr [rax]
lea	rax, [rsp + 0xa8]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x40], rax
call	0x140068880
call	0x140068880
mov	rdx, r13
mov	qword ptr [rsp + 0xa0], rax
lea	rax, [rsp + 0xa0]
mov	rcx, rax
mov	qword ptr [rsp + 0x38], rax
call	0x14006a8f0
call	0x14006a8f0
mov	eax, dword ptr [rbx + 0x58]
mov	r13d, r14d
sub	r13d, eax
test	r13d, r13d
jle	0x140068280
jle	0x140068280
test	eax, eax
cmovs	r13d, r14d
cmp	qword ptr [rbx + 0x18], 0
je	0x140068620
je	0x140068620
lea	eax, [r13 + r13]
mov	rcx, qword ptr [rsp + 0x38]
movsxd	rdx, eax
mov	rax, qword ptr [rsp + 0xa0]
mov	qword ptr [rsp + 0x60], rdx
mov	r9, rdx
xor	edx, edx
mov	r8, qword ptr [rax - 0x18]
mov	dword ptr [rsp + 0x20], 0
call	0x140068c90
call	0x140068c90
mov	rdx, qword ptr [rsp + 0x60]
mov	rcx, qword ptr [rsp + 0xa0]
add	rdx, rsi
mov	qword ptr [rsp + 0x60], rdx
mov	rdx, qword ptr [rbx + 0x18]
mov	qword ptr [rsp + 0x68], rdx
mov	rdx, qword ptr [rbx + 0x10]
mov	qword ptr [rsp + 0x70], rdx
movzx	edx, word ptr [rbx + 0x24]
mov	dword ptr [rsp + 0x78], edx
mov	eax, dword ptr [rcx - 8]
test	eax, eax
jns	0x140068668
jns	0x140068668
mov	rax, qword ptr [rsp + 0x60]
mov	r9, qword ptr [rsp + 0x68]
mov	qword ptr [rsp + 0x20], rsi
mov	r8, qword ptr [rsp + 0x70]
mov	edx, dword ptr [rsp + 0x78]
mov	qword ptr [rsp + 0x68], rcx
mov	qword ptr [rsp + 0x28], rax
call	0x1400acbc0
call	0x1400acbc0
mov	rcx, qword ptr [rsp + 0x68]
mov	qword ptr [rsp + 0x60], rax
mov	eax, dword ptr [rcx - 8]
test	eax, eax
jns	0x140068680
jns	0x140068680
mov	rax, qword ptr [rsp + 0xa0]
mov	rdx, qword ptr [rsp + 0x60]
mov	r9, qword ptr [rax - 0x18]
sub	rdx, rax
sar	rdx, 1
mov	r8, r9
sub	r8, rdx
cmp	r9, rdx
jb	0x140068694
jb	0x140068694
mov	rcx, qword ptr [rsp + 0x38]
xor	r9d, r9d
call	0x14006aa20
call	0x14006aa20
mov	eax, dword ptr [rbx + 0x58]
test	eax, eax
jg	0x140068500
jg	0x140068500
mov	eax, dword ptr [rdi + 0x18]
mov	rdx, qword ptr [rsp + 0xa0]
mov	esi, eax
and	esi, 0xb0
mov	dword ptr [rsp + 0x68], esi
mov	rsi, qword ptr [rsp + 0x48]
add	rsi, qword ptr [rdx - 0x18]
mov	qword ptr [rsp + 0x60], rsi
test	ah, 2
jne	0x1400684c8
jne	0x1400684c8
lea	rax, [rsp + 0x9b]
xor	edx, edx
xor	ecx, ecx
mov	r8, rax
mov	qword ptr [rsp + 0x78], rax
call	0x140068880
call	0x140068880
mov	rsi, qword ptr [rsp + 0x60]
mov	rcx, qword ptr [rsp + 0x40]
mov	qword ptr [rsp + 0xa8], rax
lea	rdx, [rsi + rsi]
call	0x14006a8f0
call	0x14006a8f0
mov	r14, qword ptr [rdi + 0x10]
cmp	dword ptr [rsp + 0x68], 0x10
lea	r13, [rip + 0x52366]
sete	dl
cmp	rsi, r14
lea	rsi, [rsp + 0x9c]
setb	al
and	edx, eax
mov	byte ptr [rsp + 0x70], dl
cmp	byte ptr [rsi], 4
ja	0x1400683f0
ja	0x1400683f0
movzx	eax, byte ptr [rsi]
movsxd	rax, dword ptr [r13 + rax*4]
add	rax, r13
jmp	rax
jmp	rax
nop	word ptr [rax + rax]
cmp	qword ptr [rsp + 0x48], 0
je	0x1400683f0
je	0x1400683f0
mov	rax, qword ptr [rsp + 0x58]
mov	rcx, qword ptr [rsp + 0x40]
movzx	edx, word ptr [rax]
call	0x14006abe0
call	0x14006abe0
jmp	0x1400683f0
jmp	0x1400683f0
nop	dword ptr [rax + rax]
test	byte ptr [rdi + 0x19], 2
je	0x1400683f0
je	0x1400683f0
mov	rdx, qword ptr [rbx + 0x28]
mov	r8, qword ptr [rbx + 0x30]
mov	rcx, qword ptr [rsp + 0x40]
call	0x140069490
call	0x140069490
jmp	0x1400683f0
jmp	0x1400683f0
nop	word ptr cs:[rax + rax]
cmp	byte ptr [rsp + 0x70], 0
movzx	r8d, word ptr [rsp + 0x52]
je	0x140068538
je	0x140068538
mov	rax, qword ptr [rsp + 0x60]
mov	rdx, r14
mov	rcx, qword ptr [rsp + 0x40]
sub	rdx, rax
call	0x140069760
call	0x140069760
jmp	0x1400683f0
jmp	0x1400683f0
nop	dword ptr [rax + rax]
cmp	byte ptr [rsp + 0x70], 0
je	0x1400683f0
je	0x1400683f0
mov	rax, qword ptr [rsp + 0x60]
mov	rdx, r14
movzx	r8d, word ptr [rsp + 0x52]
mov	rcx, qword ptr [rsp + 0x40]
sub	rdx, rax
call	0x140069760
call	0x140069760
jmp	0x1400683f0
jmp	0x1400683f0
nop	dword ptr [rax]
mov	rdx, qword ptr [rsp + 0x38]
mov	rcx, qword ptr [rsp + 0x40]
call	0x1400695a0
call	0x1400695a0
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x38]
add	rsi, 1
cmp	rsi, rax
jne	0x140068311
jne	0x140068311
mov	rax, qword ptr [rsp + 0x48]
cmp	rax, 1
ja	0x1400684e0
ja	0x1400684e0
mov	rdx, qword ptr [rsp + 0xa8]
mov	rax, qword ptr [rdx - 0x18]
cmp	rax, r14
jae	0x140068610
jae	0x140068610
mov	r9, r14
movzx	r8d, word ptr [rsp + 0x54]
sub	r9, rax
cmp	dword ptr [rsp + 0x68], 0x20
je	0x140068550
je	0x140068550
mov	dword ptr [rsp + 0x20], r8d
mov	rcx, qword ptr [rsp + 0x40]
xor	r8d, r8d
xor	edx, edx
call	0x140068c90
call	0x140068c90
mov	rdx, qword ptr [rsp + 0xa8]
mov	ebx, r12d
movsxd	r14, r14d
test	r12b, r12b
jne	0x140068483
jne	0x140068483
mov	rax, qword ptr [r15]
mov	r8, r14
mov	rcx, r15
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	r14, rax
mov	eax, 1
mov	rdx, qword ptr [rsp + 0xa8]
cmovne	ebx, eax
lea	rcx, [rdx - 0x18]
mov	rdx, qword ptr [rsp + 0x78]
movzx	eax, bl
mov	qword ptr [rsp + 0x80], r15
mov	qword ptr [rsp + 0x88], rax
mov	r12b, al
call	0x140068f00
call	0x140068f00
mov	rax, qword ptr [rsp + 0xa0]
mov	rdx, qword ptr [rsp + 0x40]
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
jmp	0x1400680ea
jmp	0x1400680ea
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x30]
add	rsi, rax
mov	qword ptr [rsp + 0x60], rsi
jmp	0x1400682b6
jmp	0x1400682b6
nop	dword ptr [rax]
mov	rdx, qword ptr [rsp + 0x58]
mov	rcx, qword ptr [rsp + 0x40]
lea	r8, [rax - 1]
add	rdx, 2
call	0x140069490
call	0x140069490
jmp	0x140068411
jmp	0x140068411
nop	dword ptr [rax]
movzx	edx, word ptr [rbx + 0x22]
mov	rcx, qword ptr [rsp + 0x38]
call	0x14006abe0
call	0x14006abe0
test	r13d, r13d
js	0x140068638
js	0x140068638
movsxd	r13, r13d
movsxd	r8, dword ptr [rbx + 0x58]
mov	rcx, qword ptr [rsp + 0x38]
lea	rdx, [rsi + r13*2]
call	0x140069490
call	0x140069490
jmp	0x140068288
jmp	0x140068288
nop	dword ptr [rax]
mov	rcx, qword ptr [rsp + 0x40]
mov	edx, r8d
call	0x14006abe0
call	0x14006abe0
jmp	0x1400683f0
jmp	0x1400683f0
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x40]
mov	rdx, r9
call	0x140069760
call	0x140069760
jmp	0x140068451
jmp	0x140068451
nop	word ptr [rax + rax]
mov	ecx, 0x80
call	0x1400b2c30
call	0x1400b2c30
mov	rbx, rax
mov	dword ptr [rax + 8], 0
lea	rax, [rip + 0x5ee6d]
lea	rdx, [rdi + 0xd0]
mov	qword ptr [rbx], rax
mov	rcx, rbx
mov	qword ptr [rbx + 0x10], 0
mov	qword ptr [rbx + 0x18], 0
mov	byte ptr [rbx + 0x20], 0
mov	dword ptr [rbx + 0x22], 0
mov	qword ptr [rbx + 0x28], 0
mov	qword ptr [rbx + 0x30], 0
mov	qword ptr [rbx + 0x38], 0
mov	qword ptr [rbx + 0x40], 0
mov	qword ptr [rbx + 0x48], 0
mov	qword ptr [rbx + 0x50], 0
mov	dword ptr [rbx + 0x58], 0
mov	qword ptr [rbx + 0x5c], 0
mov	byte ptr [rbx + 0x7a], 0
call	0x1400979c0
call	0x1400979c0
mov	rcx, qword ptr [rdi + 0xd0]
mov	rdx, rbx
mov	r8, rsi
call	0x140099d30
call	0x140099d30
mov	rbx, qword ptr [r14]
jmp	0x140068091
jmp	0x140068091
nop	dword ptr [rax]
mov	r14, rax
jmp	0x140068459
jmp	0x140068459
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x38]
movsxd	r8, r13d
mov	rdx, rsi
call	0x1400698d0
call	0x1400698d0
jmp	0x14006827d
jmp	0x14006827d
nop	dword ptr [rax]
neg	r13d
movzx	r8d, word ptr [rbx + 0x66]
movsxd	rdx, r13d
mov	r13, qword ptr [rsp + 0x38]
mov	rcx, r13
call	0x140069760
call	0x140069760
mov	r8, r14
mov	rdx, rsi
mov	rcx, r13
call	0x140069490
call	0x140069490
jmp	0x140068288
jmp	0x140068288
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsp + 0x38]
call	0x140068810
call	0x140068810
mov	rcx, qword ptr [rsp + 0xa0]
jmp	0x14006820e
jmp	0x14006820e
nop	
mov	rcx, qword ptr [rsp + 0x38]
call	0x140068810
call	0x140068810
jmp	0x14006824a
jmp	0x14006824a
call	0x1400b3a30
call	0x1400b3a30
mov	r8, rdx
lea	rcx, [rip + 0x51f8a]
lea	rdx, [rip + 0x51f6d]
call	0x1400aed20
call	0x1400aed20
mov	rbx, rax
jmp	0x1400686c8
jmp	0x1400686c8
mov	rbx, rax
mov	rax, qword ptr [rsp + 0xa8]
mov	rdx, qword ptr [rsp + 0x78]
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
mov	rax, qword ptr [rsp + 0xa0]
mov	rdx, qword ptr [rsp + 0x40]
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x1400686f7
jmp	0x1400686f7
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	eax, 1
cmp	rcx, rdx
je	0x140068752
je	0x140068752
mov	rcx, qword ptr [rcx + 8]
xor	eax, eax
cmp	byte ptr [rcx], 0x2a
je	0x140068752
je	0x140068752
mov	rdx, qword ptr [rdx + 8]
xor	eax, eax
cmp	byte ptr [rdx], 0x2a
sete	al
add	rdx, rax
call	0x1400159e8
call	0x1400159e8
test	eax, eax
sete	al
add	rsp, 0x28
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	eax, 1
cmp	rdx, rcx
je	0x1400687b2
je	0x1400687b2
mov	rcx, qword ptr [rcx + 8]
xor	eax, eax
cmp	byte ptr [rcx], 0x2a
je	0x1400687b2
je	0x1400687b2
mov	rdx, qword ptr [rdx + 8]
xor	eax, eax
cmp	byte ptr [rdx], 0x2a
sete	al
add	rdx, rax
call	0x1400159e8
call	0x1400159e8
test	eax, eax
sete	al
add	rsp, 0x28
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, 0x7fffffff
sub	rcx, rdx
cmp	rcx, 0x7fffffff
jg	0x1400687e0
jg	0x1400687e0
cmp	rcx, -0x80000000
mov	eax, 0x80000000
cmovge	eax, ecx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
cmp	qword ptr [rax - 0x18], 0
jne	0x140068828
jne	0x140068828
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax + rax]
mov	rdx, qword ptr [rip + 0x55e01]
mov	r8d, dword ptr [rdx]
test	r8d, r8d
jne	0x140068850
jne	0x140068850
mov	edx, dword ptr [rax - 8]
test	edx, edx
jg	0x140068860
jg	0x140068860
mov	dword ptr [rax - 8], 0xffffffff
add	rsp, 0x28
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x140068860
jg	0x140068860
mov	rax, qword ptr [rcx]
jmp	0x14006883e
jmp	0x14006883e
nop	dword ptr [rax]
xor	r9d, r9d
xor	r8d, r8d
xor	edx, edx
mov	qword ptr [rsp + 0x30], rcx
call	0x14006aa20
call	0x14006aa20
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
jmp	0x14006883e
jmp	0x14006883e
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	esi, edx
mov	edi, edx
xor	edx, edx
call	0x140069080
call	0x140069080
test	rbx, rbx
jne	0x1400688c0
jne	0x1400688c0
lea	rdx, [rax + 0x18]
xor	ecx, ecx
mov	dword ptr [rax + 0x10], 0
mov	qword ptr [rax], rbx
mov	word ptr [rax + rbx*2 + 0x18], cx
mov	rax, rdx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
xor	edx, edx
cmp	rbx, 1
je	0x1400688f8
je	0x1400688f8
test	bl, 1
je	0x1400688e0
je	0x1400688e0
mov	word ptr [rax + 0x18], si
mov	edx, 1
nop	word ptr cs:[rax + rax]
mov	word ptr [rax + rdx*2 + 0x18], di
mov	word ptr [rax + rdx*2 + 0x1a], di
add	rdx, 2
cmp	rbx, rdx
jne	0x1400688e0
jne	0x1400688e0
jmp	0x14006889a
jmp	0x14006889a
nop	dword ptr [rax]
mov	word ptr [rax + 0x18], si
jmp	0x14006889a
jmp	0x14006889a
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rdx
mov	rdi, rcx
xor	edx, edx
sub	rsi, rcx
mov	rbp, rsi
sar	rbp, 1
mov	rcx, rbp
call	0x140069080
call	0x140069080
mov	rbx, rax
lea	rcx, [rax + 0x18]
cmp	rbp, 1
je	0x140068960
je	0x140068960
test	rbp, rbp
jne	0x140068950
jne	0x140068950
xor	eax, eax
mov	dword ptr [rbx + 0x10], 0
mov	qword ptr [rbx], rbp
mov	word ptr [rbx + rsi + 0x18], ax
mov	rax, rcx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x140068933
jmp	0x140068933
movzx	eax, word ptr [rdi]
mov	word ptr [rbx + 0x18], ax
jmp	0x140068933
jmp	0x140068933
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rdi, rcx
mov	rbx, rdx
test	rdx, rdx
je	0x140068988
je	0x140068988
test	rcx, rcx
je	0x1400689e9
je	0x1400689e9
sub	rbx, rdi
xor	edx, edx
mov	rbp, rbx
sar	rbp, 1
mov	rcx, rbp
call	0x140069080
call	0x140069080
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbp, 1
je	0x1400689e0
je	0x1400689e0
test	rbp, rbp
jne	0x1400689d0
jne	0x1400689d0
xor	eax, eax
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbp
mov	word ptr [rsi + rbx + 0x18], ax
mov	rax, rcx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x1400689ad
jmp	0x1400689ad
movzx	eax, word ptr [rdi]
mov	word ptr [rsi + 0x18], ax
jmp	0x1400689ad
jmp	0x1400689ad
lea	rcx, [rip + 0x50c08]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rdi, rcx
mov	rbx, rdx
test	rdx, rdx
je	0x140068a18
je	0x140068a18
test	rcx, rcx
je	0x140068a79
je	0x140068a79
sub	rbx, rdi
xor	edx, edx
mov	rbp, rbx
sar	rbp, 1
mov	rcx, rbp
call	0x140069080
call	0x140069080
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbp, 1
je	0x140068a70
je	0x140068a70
test	rbp, rbp
jne	0x140068a60
jne	0x140068a60
xor	eax, eax
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbp
mov	word ptr [rsi + rbx + 0x18], ax
mov	rax, rcx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x140068a3d
jmp	0x140068a3d
movzx	eax, word ptr [rdi]
mov	word ptr [rsi + 0x18], ax
jmp	0x140068a3d
jmp	0x140068a3d
lea	rcx, [rip + 0x50730]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rdi, rcx
mov	rbx, rdx
test	rdx, rdx
je	0x140068aa8
je	0x140068aa8
test	rcx, rcx
je	0x140068b09
je	0x140068b09
sub	rbx, rdi
xor	edx, edx
mov	rbp, rbx
sar	rbp, 1
mov	rcx, rbp
call	0x140069080
call	0x140069080
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbp, 1
je	0x140068b00
je	0x140068b00
test	rbp, rbp
jne	0x140068af0
jne	0x140068af0
xor	eax, eax
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbp
mov	word ptr [rsi + rbx + 0x18], ax
mov	rax, rcx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x140068acd
jmp	0x140068acd
movzx	eax, word ptr [rdi]
mov	word ptr [rsi + 0x18], ax
jmp	0x140068acd
jmp	0x140068acd
lea	rcx, [rip + 0x51ad0]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rdi, rcx
mov	rbx, rdx
test	rdx, rdx
je	0x140068b38
je	0x140068b38
test	rcx, rcx
je	0x140068b99
je	0x140068b99
sub	rbx, rdi
xor	edx, edx
mov	rbp, rbx
sar	rbp, 1
mov	rcx, rbp
call	0x140069080
call	0x140069080
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbp, 1
je	0x140068b90
je	0x140068b90
test	rbp, rbp
jne	0x140068b80
jne	0x140068b80
xor	eax, eax
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbp
mov	word ptr [rsi + rbx + 0x18], ax
mov	rax, rcx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x140068b5d
jmp	0x140068b5d
movzx	eax, word ptr [rdi]
mov	word ptr [rsi + 0x18], ax
jmp	0x140068b5d
jmp	0x140068b5d
lea	rcx, [rip + 0x50a58]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x4e3e9]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	r8, rdx
mov	rax, r8
sar	rax, 1
cmp	rax, 1
je	0x140068be0
je	0x140068be0
test	rax, rax
jne	0x140068bd8
jne	0x140068bd8
ret	
ret	
nop	dword ptr [rax]
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	r8, rdx
mov	rax, r8
sar	rax, 1
cmp	rax, 1
je	0x140068c10
je	0x140068c10
test	rax, rax
jne	0x140068c08
jne	0x140068c08
ret	
ret	
nop	dword ptr [rax]
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	r8, rdx
mov	rax, r8
sar	rax, 1
cmp	rax, 1
je	0x140068c40
je	0x140068c40
test	rax, rax
jne	0x140068c38
jne	0x140068c38
ret	
ret	
nop	dword ptr [rax]
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	r8, rdx
mov	rax, r8
sar	rax, 1
cmp	rax, 1
je	0x140068c70
je	0x140068c70
test	rax, rax
jne	0x140068c68
jne	0x140068c68
ret	
ret	
nop	dword ptr [rax]
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
call	0x14006a810
call	0x14006a810
nop	
add	rsp, 0x28
ret	
ret	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
movabs	rax, 0x1ffffffffffffffc
mov	ebp, dword ptr [rsp + 0x70]
mov	r12d, ebp
mov	rsi, rdx
mov	rdx, qword ptr [rcx]
add	rax, r8
mov	rdi, rcx
mov	rbx, r9
sub	rax, qword ptr [rdx - 0x18]
cmp	rax, r9
jb	0x140068d31
jb	0x140068d31
mov	rdx, rsi
call	0x14006aa20
call	0x14006aa20
test	rbx, rbx
jne	0x140068ce0
jne	0x140068ce0
mov	rax, rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
mov	rax, qword ptr [rdi]
lea	rdx, [rax + rsi*2]
xor	eax, eax
cmp	rbx, 1
je	0x140068d20
je	0x140068d20
test	bl, 1
je	0x140068d00
je	0x140068d00
mov	word ptr [rdx], bp
mov	eax, 1
nop	dword ptr [rax]
mov	word ptr [rdx + rax*2], r12w
mov	word ptr [rdx + rax*2 + 2], r12w
add	rax, 2
cmp	rbx, rax
jne	0x140068d00
jne	0x140068d00
jmp	0x140068cd0
jmp	0x140068cd0
nop	word ptr cs:[rax + rax]
mov	rax, rdi
mov	word ptr [rdx], bp
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
lea	rcx, [rip + 0x50839]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rdi, qword ptr [rsp + 0x70]
mov	rbp, r9
mov	r9, rdi
mov	rbx, rcx
mov	rsi, rdx
call	0x14006aa20
call	0x14006aa20
test	rdi, rdi
je	0x140068d7c
je	0x140068d7c
mov	rax, qword ptr [rbx]
lea	rcx, [rax + rsi*2]
cmp	rdi, 1
je	0x140068d90
je	0x140068d90
lea	r8, [rdi + rdi]
mov	rdx, rbp
call	0x140015998
call	0x140015998
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rbp]
mov	word ptr [rcx], ax
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	esi, edx
mov	edi, edx
xor	edx, edx
call	0x140069080
call	0x140069080
test	rbx, rbx
jne	0x140068df0
jne	0x140068df0
lea	rdx, [rax + 0x18]
xor	ecx, ecx
mov	dword ptr [rax + 0x10], 0
mov	qword ptr [rax], rbx
mov	word ptr [rax + rbx*2 + 0x18], cx
mov	rax, rdx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
xor	edx, edx
cmp	rbx, 1
je	0x140068e28
je	0x140068e28
test	bl, 1
je	0x140068e10
je	0x140068e10
mov	word ptr [rax + 0x18], si
mov	edx, 1
nop	word ptr cs:[rax + rax]
mov	word ptr [rax + rdx*2 + 0x18], di
mov	word ptr [rax + rdx*2 + 0x1a], di
add	rdx, 2
cmp	rbx, rdx
jne	0x140068e10
jne	0x140068e10
jmp	0x140068dca
jmp	0x140068dca
nop	dword ptr [rax]
mov	word ptr [rax + 0x18], si
jmp	0x140068dca
jmp	0x140068dca
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	r8, qword ptr [rax - 0x18]
mov	rsi, rcx
mov	rbx, rdx
cmp	rdx, r8
jae	0x140068e62
jae	0x140068e62
mov	edx, dword ptr [rax - 8]
test	edx, edx
js	0x140068e57
js	0x140068e57
call	0x140068810
call	0x140068810
mov	rax, qword ptr [rsi]
lea	rax, [rax + rbx*2]
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x5066f]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	edx, dword ptr [rax - 8]
test	edx, edx
mov	rdx, qword ptr [rax - 0x18]
jns	0x140068e90
jns	0x140068e90
lea	rax, [rax + rdx*2]
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax + rax]
test	rdx, rdx
je	0x140068e82
je	0x140068e82
mov	r8, qword ptr [rip + 0x55794]
mov	r9d, dword ptr [r8]
test	r9d, r9d
jne	0x140068ec0
jne	0x140068ec0
mov	r8d, dword ptr [rax - 8]
test	r8d, r8d
jg	0x140068ed0
jg	0x140068ed0
mov	dword ptr [rax - 8], 0xffffffff
lea	rax, [rax + rdx*2]
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x140068ed0
jg	0x140068ed0
mov	rax, qword ptr [rcx]
mov	rdx, qword ptr [rax - 0x18]
jmp	0x140068ead
jmp	0x140068ead
xor	edx, edx
xor	r9d, r9d
xor	r8d, r8d
mov	qword ptr [rsp + 0x30], rcx
call	0x14006aa20
call	0x14006aa20
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
mov	rdx, qword ptr [rax - 0x18]
jmp	0x140068ead
jmp	0x140068ead
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x55729]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140068f20
jne	0x140068f20
mov	eax, dword ptr [rcx + 0x10]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 0x10], edx
test	eax, eax
jle	0x140068f2e
jle	0x140068f2e
ret	
ret	
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 0x10], eax
test	eax, eax
jg	0x140068f1a
jg	0x140068f1a
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x556e9]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140068f60
jne	0x140068f60
add	dword ptr [rcx + 0x10], 1
lea	rax, [rcx + 0x18]
ret	
ret	
nop	word ptr cs:[rax + rax]
lock add	dword ptr [rcx + 0x10], 1
lea	rax, [rcx + 0x18]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rcx + 0x18]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x4e019]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	dword ptr [rcx + 0x10], 0xffffffff
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	dword ptr [rcx + 0x10], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
mov	dword ptr [rcx + 0x10], 0
mov	qword ptr [rcx], rdx
mov	word ptr [rcx + rdx*2 + 0x18], ax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rcx + 0x10]
test	eax, eax
js	0x140068ff0
js	0x140068ff0
mov	rax, qword ptr [rip + 0x55652]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140069000
jne	0x140069000
add	dword ptr [rcx + 0x10], 1
lea	rax, [rcx + 0x18]
ret	
ret	
nop	dword ptr [rax]
xor	r8d, r8d
jmp	0x140069010
jmp	0x140069010
nop	dword ptr [rax + rax]
lock add	dword ptr [rcx + 0x10], 1
lea	rax, [rcx + 0x18]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rcx, qword ptr [rcx]
add	rcx, r8
mov	r8, rdx
mov	rdx, qword ptr [rsi + 8]
call	0x140069080
call	0x140069080
mov	rbx, rax
mov	rax, qword ptr [rsi]
lea	rcx, [rbx + 0x18]
test	rax, rax
je	0x140069053
je	0x140069053
cmp	rax, 1
je	0x140069070
je	0x140069070
lea	rdx, [rsi + 0x18]
lea	r8, [rax + rax]
call	0x140015998
call	0x140015998
mov	rcx, rax
mov	rax, qword ptr [rsi]
xor	edx, edx
mov	qword ptr [rbx], rax
mov	dword ptr [rbx + 0x10], 0
mov	word ptr [rbx + rax*2 + 0x18], dx
mov	rax, rcx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
movzx	edx, word ptr [rsi + 0x18]
mov	word ptr [rbx + 0x18], dx
jmp	0x140069053
jmp	0x140069053
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
movabs	rax, 0x1ffffffffffffffc
mov	rbx, rcx
cmp	rax, rcx
jb	0x1400690ff
jb	0x1400690ff
cmp	rdx, rcx
jae	0x1400690e4
jae	0x1400690e4
lea	rax, [rdx + rdx]
cmp	rcx, rax
cmovb	rbx, rax
lea	rcx, [rbx + rbx + 0x1a]
lea	rax, [rcx + 0x20]
cmp	rax, 0x1000
jbe	0x14006910b
jbe	0x14006910b
cmp	rdx, rbx
jae	0x14006910b
jae	0x14006910b
and	eax, 0xfff
mov	rdx, rax
mov	eax, 0x1000
sub	rax, rdx
shr	rax, 1
add	rbx, rax
movabs	rax, 0x1ffffffffffffffc
cmp	rbx, rax
cmova	rbx, rax
lea	rcx, [rbx + rbx + 0x1a]
call	0x1400b2c30
call	0x1400b2c30
mov	qword ptr [rax + 8], rbx
mov	dword ptr [rax + 0x10], 0
add	rsp, 0x20
pop	rbx
ret	
ret	
lea	rcx, [rip + 0x5043f]
call	0x1400b3ba0
call	0x1400b3ba0
test	rcx, rcx
jns	0x1400690e9
jns	0x1400690e9
call	0x1400b39b0
call	0x1400b39b0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rax - 8]
sub	rsi, 1
test	edx, edx
jns	0x140069148
jns	0x140069148
lea	rax, [rax + rsi*2]
add	rsp, 0x20
pop	rsi
ret	
ret	
nop	dword ptr [rax]
cmp	qword ptr [rax - 0x18], 0
je	0x140069137
je	0x140069137
mov	rdx, qword ptr [rip + 0x554da]
mov	r8d, dword ptr [rdx]
test	r8d, r8d
jne	0x140069180
jne	0x140069180
mov	edx, dword ptr [rax - 8]
test	edx, edx
jg	0x140069190
jg	0x140069190
mov	dword ptr [rax - 8], 0xffffffff
lea	rax, [rax + rsi*2]
add	rsp, 0x20
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x140069190
jg	0x140069190
mov	rax, qword ptr [rcx]
jmp	0x140069165
jmp	0x140069165
nop	dword ptr [rax]
xor	r9d, r9d
xor	r8d, r8d
xor	edx, edx
mov	qword ptr [rsp + 0x30], rcx
call	0x14006aa20
call	0x14006aa20
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
jmp	0x140069165
jmp	0x140069165
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	r8, qword ptr [rdx]
mov	rbx, rdx
mov	edx, dword ptr [r8 - 8]
mov	rax, rcx
test	edx, edx
jns	0x1400691d0
jns	0x1400691d0
mov	qword ptr [rax], r8
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
cmp	qword ptr [r8 - 0x18], 0
je	0x1400691c6
je	0x1400691c6
mov	rdx, qword ptr [rip + 0x55452]
mov	ecx, dword ptr [rdx]
test	ecx, ecx
jne	0x140069200
jne	0x140069200
mov	edx, dword ptr [r8 - 8]
test	edx, edx
jg	0x140069210
jg	0x140069210
mov	dword ptr [r8 - 8], 0xffffffff
mov	qword ptr [rax], r8
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [r8 - 8]
test	edx, edx
jg	0x140069210
jg	0x140069210
mov	r8, qword ptr [rbx]
jmp	0x1400691ec
jmp	0x1400691ec
nop	dword ptr [rax]
xor	r8d, r8d
xor	r9d, r9d
xor	edx, edx
mov	rcx, rbx
mov	qword ptr [rsp + 0x30], rax
call	0x14006aa20
call	0x14006aa20
mov	r8, qword ptr [rbx]
mov	rax, qword ptr [rsp + 0x30]
jmp	0x1400691ec
jmp	0x1400691ec
nop	
mov	rax, qword ptr [rcx]
mov	r8d, dword ptr [rax - 8]
test	r8d, r8d
jns	0x140069243
jns	0x140069243
mov	dword ptr [rax - 8], 0
mov	r8, qword ptr [rdx]
mov	r9d, dword ptr [r8 - 8]
test	r9d, r9d
jns	0x140069257
jns	0x140069257
mov	dword ptr [r8 - 8], 0
mov	qword ptr [rcx], r8
mov	qword ptr [rdx], rax
ret	
ret	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	edx, dword ptr [rax - 8]
test	edx, edx
jns	0x140069278
jns	0x140069278
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax + rax]
cmp	qword ptr [rax - 0x18], 0
je	0x14006926e
je	0x14006926e
mov	rdx, qword ptr [rip + 0x553aa]
mov	r8d, dword ptr [rdx]
test	r8d, r8d
jne	0x1400692a8
jne	0x1400692a8
mov	edx, dword ptr [rax - 8]
test	edx, edx
jg	0x1400692b8
jg	0x1400692b8
mov	dword ptr [rax - 8], 0xffffffff
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x1400692b8
jg	0x1400692b8
mov	rax, qword ptr [rcx]
jmp	0x140069295
jmp	0x140069295
nop	dword ptr [rax]
xor	r9d, r9d
xor	r8d, r8d
xor	edx, edx
mov	qword ptr [rsp + 0x30], rcx
call	0x14006aa20
call	0x14006aa20
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
jmp	0x140069295
jmp	0x140069295
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	r9d, r9d
xor	edx, edx
mov	rax, qword ptr [rcx]
mov	r8, qword ptr [rax - 0x18]
jmp	0x14006aa20
jmp	0x14006aa20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	r9d, r9d
mov	r8d, 1
mov	rsi, rdx
sub	rsi, qword ptr [rcx]
mov	rbx, rcx
mov	rdx, rsi
sar	rdx, 1
call	0x14006aa20
call	0x14006aa20
mov	rax, qword ptr [rbx]
mov	dword ptr [rax - 8], 0xffffffff
add	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
sub	r8, rdx
mov	rsi, rcx
mov	rax, rdx
sar	r8, 1
jne	0x140069360
jne	0x140069360
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
sub	rax, qword ptr [rcx]
xor	r9d, r9d
mov	rdx, rax
mov	rbx, rax
sar	rdx, 1
call	0x14006aa20
call	0x14006aa20
mov	rax, qword ptr [rsi]
mov	dword ptr [rax - 8], 0xffffffff
add	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	r9, qword ptr [rax - 0x18]
mov	rax, r9
mov	rbx, rcx
sub	rax, rdx
cmp	rax, r8
cmovbe	r8, rax
cmp	r9, rdx
jb	0x1400693c2
jb	0x1400693c2
xor	r9d, r9d
call	0x14006aa20
call	0x14006aa20
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	r8, rdx
lea	rcx, [rip + 0x500d4]
lea	rdx, [rip + 0x5018a]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	edx, dword ptr [rax - 8]
test	edx, edx
jns	0x1400693f8
jns	0x1400693f8
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax + rax]
cmp	qword ptr [rax - 0x18], 0
je	0x1400693ee
je	0x1400693ee
mov	rdx, qword ptr [rip + 0x5522a]
mov	r8d, dword ptr [rdx]
test	r8d, r8d
jne	0x140069428
jne	0x140069428
mov	edx, dword ptr [rax - 8]
test	edx, edx
jg	0x140069438
jg	0x140069438
mov	dword ptr [rax - 8], 0xffffffff
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x140069438
jg	0x140069438
mov	rax, qword ptr [rcx]
jmp	0x140069415
jmp	0x140069415
nop	dword ptr [rax]
xor	r9d, r9d
xor	r8d, r8d
xor	edx, edx
mov	qword ptr [rsp + 0x30], rcx
call	0x14006aa20
call	0x14006aa20
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
jmp	0x140069415
jmp	0x140069415
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
call	0x140015a60
call	0x140015a60
mov	rdx, rbx
mov	rcx, rsi
mov	r8, rax
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x140069490
jmp	0x140069490
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rdi, rdx
mov	rbx, r8
test	r8, r8
je	0x14006951f
je	0x14006951f
mov	rax, qword ptr [rcx]
movabs	rcx, 0x1ffffffffffffffc
mov	rdx, qword ptr [rax - 0x18]
sub	rcx, rdx
cmp	rcx, r8
jb	0x140069590
jb	0x140069590
lea	rbp, [r8 + rdx]
cmp	qword ptr [rax - 0x10], rbp
jae	0x140069560
jae	0x140069560
cmp	rdi, rax
jb	0x1400694e3
jb	0x1400694e3
mov	rdx, qword ptr [rax - 0x18]
lea	rdx, [rax + rdx*2]
cmp	rdx, rdi
jae	0x140069530
jae	0x140069530
mov	rdx, rbp
mov	rcx, rsi
call	0x14006a8f0
call	0x14006a8f0
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rax - 0x18]
lea	rcx, [rax + rdx*2]
cmp	rbx, 1
je	0x140069552
je	0x140069552
lea	r8, [rbx + rbx]
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rsi]
xor	edx, edx
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rbp
mov	word ptr [rax + rbp*2], dx
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	rdx, rbp
mov	rcx, rsi
sub	rdi, rax
call	0x14006a8f0
call	0x14006a8f0
mov	rax, qword ptr [rsi]
add	rdi, rax
mov	rdx, qword ptr [rax - 0x18]
lea	rcx, [rax + rdx*2]
cmp	rbx, 1
jne	0x1400694ff
jne	0x1400694ff
movzx	edx, word ptr [rdi]
mov	word ptr [rcx], dx
jmp	0x14006950e
jmp	0x14006950e
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rip + 0x550c9]
mov	r8d, dword ptr [rcx]
test	r8d, r8d
jne	0x140069580
jne	0x140069580
mov	ecx, dword ptr [rax - 8]
test	ecx, ecx
jle	0x1400694f5
jle	0x1400694f5
jmp	0x1400694d1
jmp	0x1400694d1
nop	
mov	eax, dword ptr [rax - 8]
test	eax, eax
mov	rax, qword ptr [rsi]
jg	0x1400694d1
jg	0x1400694d1
jmp	0x140069544
jmp	0x140069544
lea	rcx, [rip + 0x50037]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rdx
mov	rdx, qword ptr [rdx]
mov	rbx, rcx
mov	rdi, qword ptr [rdx - 0x18]
test	rdi, rdi
je	0x140069607
je	0x140069607
mov	rax, qword ptr [rcx]
mov	rcx, qword ptr [rax - 0x18]
lea	rbp, [rcx + rdi]
cmp	qword ptr [rax - 0x10], rbp
jae	0x140069618
jae	0x140069618
mov	rdx, rbp
mov	rcx, rbx
call	0x14006a8f0
call	0x14006a8f0
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rsi]
mov	rcx, qword ptr [rax - 0x18]
lea	rcx, [rax + rcx*2]
cmp	rdi, 1
je	0x140069650
je	0x140069650
lea	r8, [rdi + rdi]
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rbx]
xor	edx, edx
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rbp
mov	word ptr [rax + rbp*2], dx
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	r8, qword ptr [rip + 0x55011]
mov	r9d, dword ptr [r8]
test	r9d, r9d
jne	0x140069638
jne	0x140069638
mov	r8d, dword ptr [rax - 8]
test	r8d, r8d
jg	0x1400695cb
jg	0x1400695cb
jmp	0x1400695e0
jmp	0x1400695e0
nop	word ptr [rax + rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x1400695cb
jg	0x1400695cb
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rsi]
mov	rcx, qword ptr [rax - 0x18]
jmp	0x1400695e0
jmp	0x1400695e0
nop	dword ptr [rax + rax]
movzx	edx, word ptr [rdx]
mov	word ptr [rcx], dx
jmp	0x1400695f6
jmp	0x1400695f6
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbp, rdx
mov	rdx, qword ptr [rdx]
mov	rsi, rcx
mov	rdi, r8
mov	rbx, qword ptr [rdx - 0x18]
cmp	rbx, r8
jb	0x140069730
jb	0x140069730
sub	rbx, r8
cmp	rbx, r9
cmova	rbx, r9
test	rbx, rbx
je	0x1400696fd
je	0x1400696fd
mov	rax, qword ptr [rcx]
mov	rcx, qword ptr [rax - 0x18]
lea	r12, [rcx + rbx]
cmp	qword ptr [rax - 0x10], r12
jb	0x1400696bb
jb	0x1400696bb
mov	r8, qword ptr [rip + 0x54f86]
mov	r9d, dword ptr [r8]
test	r9d, r9d
jne	0x140069710
jne	0x140069710
mov	r8d, dword ptr [rax - 8]
test	r8d, r8d
jle	0x1400696d1
jle	0x1400696d1
mov	rdx, r12
mov	rcx, rsi
call	0x14006a8f0
call	0x14006a8f0
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rbp]
mov	rcx, qword ptr [rax - 0x18]
lea	rdx, [rdx + rdi*2]
lea	rcx, [rax + rcx*2]
cmp	rbx, 1
je	0x140069728
je	0x140069728
lea	r8, [rbx + rbx]
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rsi]
xor	edx, edx
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], r12
mov	word ptr [rax + r12*2], dx
mov	rax, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax + rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x1400696bb
jg	0x1400696bb
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rbp]
mov	rcx, qword ptr [rax - 0x18]
jmp	0x1400696d1
jmp	0x1400696d1
nop	dword ptr [rax]
movzx	edx, word ptr [rdx]
mov	word ptr [rcx], dx
jmp	0x1400696eb
jmp	0x1400696eb
mov	r9, rbx
lea	rdx, [rip + 0x4fe94]
lea	rcx, [rip + 0x4fd5f]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	r8, qword ptr [rdx + 8]
mov	rdx, rax
jmp	0x140069490
jmp	0x140069490
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rbx, rdx
mov	edi, r8d
mov	ebp, r8d
test	rdx, rdx
je	0x140069814
je	0x140069814
mov	rdx, qword ptr [rcx]
movabs	rcx, 0x1ffffffffffffffc
mov	rax, qword ptr [rdx - 0x18]
sub	rcx, rax
cmp	rcx, rbx
jb	0x140069845
jb	0x140069845
lea	r12, [rbx + rax]
cmp	qword ptr [rdx - 0x10], r12
jb	0x1400697bc
jb	0x1400697bc
mov	rcx, qword ptr [rip + 0x54e83]
mov	r8d, dword ptr [rcx]
test	r8d, r8d
jne	0x140069828
jne	0x140069828
mov	ecx, dword ptr [rdx - 8]
test	ecx, ecx
jle	0x1400697ce
jle	0x1400697ce
mov	rdx, r12
mov	rcx, rsi
call	0x14006a8f0
call	0x14006a8f0
mov	rdx, qword ptr [rsi]
mov	rax, qword ptr [rdx - 0x18]
lea	rcx, [rdx + rax*2]
xor	eax, eax
cmp	rbx, 1
je	0x140069840
je	0x140069840
test	bl, 1
je	0x1400697f0
je	0x1400697f0
mov	eax, 1
mov	word ptr [rcx], bp
cmp	rax, rbx
je	0x140069802
je	0x140069802
nop	dword ptr [rax]
mov	word ptr [rcx + rax*2], bp
mov	word ptr [rcx + rax*2 + 2], bp
add	rax, 2
cmp	rax, rbx
jne	0x1400697f0
jne	0x1400697f0
xor	eax, eax
mov	dword ptr [rdx - 8], 0
mov	qword ptr [rdx - 0x18], r12
mov	word ptr [rdx + r12*2], ax
mov	rax, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, dword ptr [rdx - 8]
test	eax, eax
jg	0x1400697bc
jg	0x1400697bc
mov	rdx, qword ptr [rsi]
mov	rax, qword ptr [rdx - 0x18]
jmp	0x1400697ce
jmp	0x1400697ce
nop	dword ptr [rax + rax]
mov	word ptr [rcx], di
jmp	0x140069802
jmp	0x140069802
lea	rcx, [rip + 0x4fd82]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rcx]
mov	r8d, dword ptr [rcx - 8]
test	r8d, r8d
jns	0x140069876
jns	0x140069876
mov	dword ptr [rcx - 8], 0
mov	r8, qword ptr [rdx]
mov	r9d, dword ptr [r8 - 8]
test	r9d, r9d
jns	0x14006988a
jns	0x14006988a
mov	dword ptr [r8 - 8], 0
mov	qword ptr [rax], r8
mov	qword ptr [rdx], rcx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
call	0x140015a60
call	0x140015a60
mov	rdx, rbx
mov	rcx, rsi
mov	r8, rax
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400698d0
jmp	0x1400698d0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
movabs	rax, 0x1ffffffffffffffc
mov	rsi, rcx
mov	rcx, qword ptr [rcx]
mov	rbx, r8
mov	rdi, rdx
mov	r8, qword ptr [rcx - 0x18]
cmp	rax, rbx
jb	0x140069a1b
jb	0x140069a1b
cmp	rdx, rcx
jb	0x140069990
jb	0x140069990
lea	rax, [rcx + r8*2]
cmp	rax, rdx
jb	0x140069990
jb	0x140069990
mov	rax, qword ptr [rip + 0x54d19]
mov	r9d, dword ptr [rax]
test	r9d, r9d
jne	0x140069980
jne	0x140069980
mov	edx, dword ptr [rcx - 8]
test	edx, edx
jg	0x140069990
jg	0x140069990
mov	rax, rdi
lea	r8, [rbx + rbx]
sub	rax, rcx
sar	rax, 1
cmp	rax, rbx
jae	0x1400699e0
jae	0x1400699e0
test	rax, rax
je	0x140069960
je	0x140069960
cmp	rbx, 1
je	0x140069a10
je	0x140069a10
mov	rdx, rdi
call	0x1400159a0
call	0x1400159a0
mov	rcx, qword ptr [rsi]
nop	word ptr cs:[rax + rax]
xor	eax, eax
mov	dword ptr [rcx - 8], 0
mov	qword ptr [rcx - 0x18], rbx
mov	word ptr [rcx + rbx*2], ax
mov	rax, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	eax, dword ptr [rcx - 8]
test	eax, eax
jle	0x140069a00
jle	0x140069a00
mov	rax, qword ptr [rsi]
mov	r8, qword ptr [rax - 0x18]
nop	
xor	edx, edx
mov	r9, rbx
mov	rcx, rsi
call	0x14006aa20
call	0x14006aa20
test	rbx, rbx
je	0x140069971
je	0x140069971
mov	rcx, qword ptr [rsi]
cmp	rbx, 1
je	0x1400699c8
je	0x1400699c8
lea	r8, [rbx + rbx]
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rax, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
movzx	eax, word ptr [rdi]
mov	word ptr [rcx], ax
mov	rax, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
cmp	rbx, 1
je	0x140069a10
je	0x140069a10
test	rbx, rbx
je	0x140069960
je	0x140069960
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
jmp	0x140069960
jmp	0x140069960
nop	
mov	rcx, qword ptr [rsi]
jmp	0x140069926
jmp	0x140069926
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rdi]
mov	word ptr [rcx], ax
jmp	0x140069960
jmp	0x140069960
lea	rcx, [rip + 0x4fb97]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [rdx]
mov	rbx, rcx
cmp	qword ptr [rcx], rsi
je	0x140069a7a
je	0x140069a7a
mov	eax, dword ptr [rsi - 8]
lea	rcx, [rsi - 0x18]
lea	rdx, [rsi - 8]
test	eax, eax
js	0x140069a88
js	0x140069a88
mov	rax, qword ptr [rip + 0x54bd9]
mov	ecx, dword ptr [rax]
test	ecx, ecx
jne	0x140069ac8
jne	0x140069ac8
add	dword ptr [rsi - 8], 1
mov	eax, dword ptr [rax]
mov	rcx, qword ptr [rbx]
test	eax, eax
jne	0x140069aa8
jne	0x140069aa8
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140069ab6
jle	0x140069ab6
mov	qword ptr [rbx], rsi
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140069010
call	0x140069010
mov	rcx, qword ptr [rbx]
mov	rsi, rax
mov	rax, qword ptr [rip + 0x54b8e]
mov	eax, dword ptr [rax]
test	eax, eax
je	0x140069a6a
je	0x140069a6a
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140069a77
jg	0x140069a77
sub	rcx, 0x18
call	0x1400b2be0
call	0x1400b2be0
jmp	0x140069a77
jmp	0x140069a77
nop	dword ptr [rax]
lock add	dword ptr [rdx], 1
jmp	0x140069a61
jmp	0x140069a61
nop	
nop	
sub	rsp, 0x28
mov	r10, qword ptr [rdx]
mov	rdx, qword ptr [r10 - 0x18]
mov	rax, r8
mov	r8, rdx
sub	r8, rax
cmp	r8, r9
cmova	r8, r9
cmp	rdx, rax
jb	0x140069afd
jb	0x140069afd
lea	rdx, [r10 + rax*2]
add	rsp, 0x28
jmp	0x1400698d0
jmp	0x1400698d0
mov	r9, rdx
mov	r8, rax
lea	rdx, [rip + 0x4faaf]
lea	rcx, [rip + 0x4f98f]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	r8, qword ptr [rdx + 8]
mov	rdx, rax
jmp	0x1400698d0
jmp	0x1400698d0
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	edi, r8d
mov	ebp, r8d
mov	r8, qword ptr [rax - 0x18]
mov	rsi, rcx
movabs	rax, 0x1ffffffffffffffc
mov	rbx, rdx
cmp	rax, rdx
jb	0x140069bd7
jb	0x140069bd7
mov	r9, rdx
xor	edx, edx
call	0x14006aa20
call	0x14006aa20
test	rbx, rbx
jne	0x140069b78
jne	0x140069b78
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
cmp	rbx, 1
je	0x140069bc8
je	0x140069bc8
lea	rdx, [rax + rbx*2]
and	ebx, 1
je	0x140069ba0
je	0x140069ba0
mov	word ptr [rax], di
add	rax, 2
cmp	rdx, rax
je	0x140069b69
je	0x140069b69
nop	word ptr cs:[rax + rax]
mov	word ptr [rax], bp
add	rax, 4
mov	word ptr [rax - 2], bp
cmp	rdx, rax
je	0x140069b69
je	0x140069b69
mov	word ptr [rax], bp
add	rax, 4
mov	word ptr [rax - 2], bp
cmp	rdx, rax
jne	0x140069ba0
jne	0x140069ba0
jmp	0x140069b69
jmp	0x140069b69
nop	word ptr [rax + rax]
mov	word ptr [rax], di
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
lea	rcx, [rip + 0x4f993]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	r9, qword ptr [r8 + 8]
sub	rdx, qword ptr [rcx]
mov	r8, qword ptr [r8]
sar	rdx, 1
jmp	0x140069d70
jmp	0x140069d70
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rbx, rdx
mov	rsi, rcx
mov	edi, r8d
movabs	rdx, 0x1ffffffffffffffc
sub	rbx, rax
mov	rcx, rbx
sar	rcx, 1
cmp	qword ptr [rax - 0x18], rdx
je	0x140069c69
je	0x140069c69
mov	rdx, rcx
mov	r9d, 1
xor	r8d, r8d
mov	rcx, rsi
call	0x14006aa20
call	0x14006aa20
mov	rdx, qword ptr [rsi]
lea	rax, [rdx + rbx]
mov	word ptr [rax], di
mov	dword ptr [rdx - 8], 0xffffffff
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x4f901]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
movabs	rax, 0x1ffffffffffffffc
mov	rsi, rdx
mov	rdx, qword ptr [rcx]
mov	rdi, rcx
mov	rbx, r8
mov	ebp, r9d
mov	r12d, r9d
sub	rsi, rdx
sub	rax, qword ptr [rdx - 0x18]
mov	rcx, rsi
sar	rcx, 1
cmp	rax, r8
jb	0x140069d2e
jb	0x140069d2e
mov	r9, r8
mov	rdx, rcx
xor	r8d, r8d
mov	rcx, rdi
call	0x14006aa20
call	0x14006aa20
test	rbx, rbx
jne	0x140069ce0
jne	0x140069ce0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
add	rsi, qword ptr [rdi]
xor	eax, eax
cmp	rbx, 1
je	0x140069d20
je	0x140069d20
test	bl, 1
je	0x140069d00
je	0x140069d00
mov	word ptr [rsi], bp
mov	eax, 1
nop	dword ptr [rax + rax]
mov	word ptr [rsi + rax*2], r12w
mov	word ptr [rsi + rax*2 + 2], r12w
add	rax, 2
cmp	rbx, rax
jne	0x140069d00
jne	0x140069d00
jmp	0x140069cce
jmp	0x140069cce
nop	word ptr cs:[rax + rax]
mov	word ptr [rsi], bp
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
lea	rcx, [rip + 0x4f83c]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rcx, r8
mov	rdi, rdx
mov	rbx, r8
call	0x140015a60
call	0x140015a60
mov	r8, rbx
mov	rdx, rdi
mov	rcx, rsi
mov	r9, rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x140069d70
jmp	0x140069d70
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rdx
mov	rdx, qword ptr [rcx]
mov	rbx, r9
mov	rdi, rcx
mov	rbp, r8
mov	r9, qword ptr [rdx - 0x18]
cmp	r9, rsi
jb	0x140069f18
jb	0x140069f18
movabs	rax, 0x1ffffffffffffffc
sub	rax, r9
cmp	rax, rbx
jb	0x140069f0c
jb	0x140069f0c
cmp	r8, rdx
jb	0x140069dd0
jb	0x140069dd0
lea	rax, [rdx + r9*2]
cmp	rax, r8
jb	0x140069dd0
jb	0x140069dd0
mov	rax, qword ptr [rip + 0x5486f]
mov	ecx, dword ptr [rax]
test	ecx, ecx
jne	0x140069e10
jne	0x140069e10
mov	eax, dword ptr [rdx - 8]
test	eax, eax
jle	0x140069e1a
jle	0x140069e1a
nop	
xor	r8d, r8d
mov	r9, rbx
mov	rdx, rsi
mov	rcx, rdi
call	0x14006aa20
call	0x14006aa20
test	rbx, rbx
je	0x140069dff
je	0x140069dff
mov	rax, qword ptr [rdi]
lea	rcx, [rax + rsi*2]
cmp	rbx, 1
je	0x140069e70
je	0x140069e70
lea	r8, [rbx + rbx]
mov	rdx, rbp
call	0x140015998
call	0x140015998
mov	rax, rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	eax, dword ptr [rdx - 8]
test	eax, eax
jg	0x140069dd0
jg	0x140069dd0
mov	rdx, qword ptr [rdi]
sub	rbp, rdx
mov	rcx, rdi
mov	rdx, rsi
mov	r9, rbx
xor	r8d, r8d
add	rsi, rsi
lea	r12, [rbx + rbx]
call	0x14006aa20
call	0x14006aa20
mov	rcx, qword ptr [rdi]
lea	rdx, [rcx + rbp]
add	rcx, rsi
lea	rax, [rdx + r12]
cmp	rcx, rax
jae	0x140069e88
jae	0x140069e88
cmp	rdx, rcx
jb	0x140069eb8
jb	0x140069eb8
cmp	rbx, 1
je	0x140069ef9
je	0x140069ef9
test	rbx, rbx
je	0x140069dff
je	0x140069dff
mov	r8, r12
mov	rdx, rax
call	0x140015998
call	0x140015998
jmp	0x140069dff
jmp	0x140069dff
nop	dword ptr [rax]
movzx	eax, word ptr [rbp]
mov	word ptr [rcx], ax
mov	rax, rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
cmp	rbx, 1
je	0x140069ea8
je	0x140069ea8
test	rbx, rbx
je	0x140069dff
je	0x140069dff
mov	r8, r12
call	0x140015998
call	0x140015998
jmp	0x140069dff
jmp	0x140069dff
nop	dword ptr [rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
jmp	0x140069dff
jmp	0x140069dff
nop	dword ptr [rax + rax]
sub	rsi, rbp
mov	rbp, rsi
sar	rbp, 1
cmp	rsi, 2
je	0x140069f04
je	0x140069f04
mov	r8, rsi
call	0x140015998
call	0x140015998
mov	rcx, rax
sub	rbx, rbp
lea	rdx, [rcx + r12]
add	rcx, rsi
cmp	rbx, 1
je	0x140069ea8
je	0x140069ea8
test	rbx, rbx
je	0x140069dff
je	0x140069dff
lea	r8, [rbx + rbx]
call	0x140015998
call	0x140015998
jmp	0x140069dff
jmp	0x140069dff
movzx	eax, word ptr [rax]
mov	word ptr [rcx], ax
jmp	0x140069dff
jmp	0x140069dff
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
jmp	0x140069ed2
jmp	0x140069ed2
lea	rcx, [rip + 0x4f67b]
call	0x1400b3ba0
call	0x1400b3ba0
mov	r8, rsi
lea	rdx, [rip + 0x4f66c]
lea	rcx, [rip + 0x4f577]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
mov	r8, qword ptr [r8]
mov	r9, qword ptr [r8 - 0x18]
jmp	0x140069d70
jmp	0x140069d70
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r11, qword ptr [r8]
mov	r10, qword ptr [rsp + 0x50]
mov	r8, qword ptr [r11 - 0x18]
mov	rax, r9
mov	r9, r8
sub	r9, rax
cmp	r9, r10
cmova	r9, r10
cmp	r8, rax
jb	0x140069f72
jb	0x140069f72
lea	r8, [r11 + rax*2]
add	rsp, 0x28
jmp	0x140069d70
jmp	0x140069d70
mov	r9, r8
lea	rdx, [rip + 0x4f612]
mov	r8, rax
lea	rcx, [rip + 0x4f51a]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
movzx	r9d, r9w
cmp	rax, rdx
jb	0x140069fb9
jb	0x140069fb9
mov	dword ptr [rsp + 0x20], r9d
mov	r9, r8
xor	r8d, r8d
call	0x140068c90
call	0x140068c90
add	rsp, 0x38
ret	
ret	
mov	r8, rdx
mov	r9, rax
lea	rdx, [rip + 0x4f5c8]
lea	rcx, [rip + 0x4f4d3]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	r8, qword ptr [rdx]
mov	rbx, rdx
mov	edx, dword ptr [r8 - 8]
mov	rax, rcx
test	edx, edx
mov	rdx, qword ptr [r8 - 0x18]
jns	0x14006a010
jns	0x14006a010
lea	rdx, [r8 + rdx*2]
mov	qword ptr [rax], rdx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	word ptr [rax + rax]
test	rdx, rdx
je	0x140069ffa
je	0x140069ffa
mov	rcx, qword ptr [rip + 0x54614]
mov	r9d, dword ptr [rcx]
test	r9d, r9d
jne	0x14006a048
jne	0x14006a048
mov	ecx, dword ptr [r8 - 8]
test	ecx, ecx
jg	0x14006a060
jg	0x14006a060
lea	rdx, [r8 + rdx*2]
mov	dword ptr [r8 - 8], 0xffffffff
mov	qword ptr [rax], rdx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [r8 - 8]
test	edx, edx
jg	0x14006a060
jg	0x14006a060
mov	r8, qword ptr [rbx]
mov	rdx, qword ptr [r8 - 0x18]
jmp	0x14006a02c
jmp	0x14006a02c
nop	dword ptr [rax]
xor	r8d, r8d
xor	edx, edx
xor	r9d, r9d
mov	rcx, rbx
mov	qword ptr [rsp + 0x30], rax
call	0x14006aa20
call	0x14006aa20
mov	r8, qword ptr [rbx]
mov	rax, qword ptr [rsp + 0x30]
mov	rdx, qword ptr [r8 - 0x18]
jmp	0x14006a02c
jmp	0x14006a02c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	r8, qword ptr [rax - 0x18]
movabs	rax, 0x1ffffffffffffffc
cmp	rax, rdx
jb	0x14006a0df
jb	0x14006a0df
cmp	r8, rdx
jb	0x14006a0d0
jb	0x14006a0d0
cmp	rdx, r8
jb	0x14006a0c0
jb	0x14006a0c0
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax]
xor	r9d, r9d
sub	r8, rdx
add	rsp, 0x28
jmp	0x14006aa20
jmp	0x14006aa20
nop	
sub	rdx, r8
xor	r8d, r8d
add	rsp, 0x28
jmp	0x140069760
jmp	0x140069760
lea	rcx, [rip + 0x4f4fd]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
movabs	r9, 0x1ffffffffffffffc
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
cmp	r9, rdx
jb	0x14006a148
jb	0x14006a148
cmp	rax, rdx
jb	0x14006a138
jb	0x14006a138
cmp	rdx, rax
jb	0x14006a120
jb	0x14006a120
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax]
sub	rax, rdx
xor	r9d, r9d
mov	r8, rax
add	rsp, 0x28
jmp	0x14006aa20
jmp	0x14006aa20
nop	word ptr [rax + rax]
sub	rdx, rax
movzx	r8d, r8w
add	rsp, 0x28
jmp	0x140069760
jmp	0x140069760
lea	rcx, [rip + 0x4f494]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
cmp	r8, 1
je	0x14006a180
je	0x14006a180
test	r8, r8
jne	0x14006a170
jne	0x14006a170
ret	
ret	
nop	dword ptr [rax]
add	r8, r8
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rdx
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	edx, dword ptr [rax - 8]
test	edx, edx
jns	0x14006a1b8
jns	0x14006a1b8
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax + rax]
cmp	qword ptr [rax - 0x18], 0
je	0x14006a1ae
je	0x14006a1ae
mov	rdx, qword ptr [rip + 0x5446a]
mov	r8d, dword ptr [rdx]
test	r8d, r8d
jne	0x14006a1e8
jne	0x14006a1e8
mov	edx, dword ptr [rax - 8]
test	edx, edx
jg	0x14006a1f8
jg	0x14006a1f8
mov	dword ptr [rax - 8], 0xffffffff
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x14006a1f8
jg	0x14006a1f8
mov	rax, qword ptr [rcx]
jmp	0x14006a1d5
jmp	0x14006a1d5
nop	dword ptr [rax]
xor	r9d, r9d
xor	r8d, r8d
xor	edx, edx
mov	qword ptr [rsp + 0x30], rcx
call	0x14006aa20
call	0x14006aa20
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
jmp	0x14006a1d5
jmp	0x14006a1d5
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
cmp	r8, 1
je	0x14006a240
je	0x14006a240
test	r8, r8
jne	0x14006a230
jne	0x14006a230
ret	
ret	
nop	dword ptr [rax]
add	r8, r8
jmp	0x1400159a0
jmp	0x1400159a0
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rsp + 0x28]
sub	r8, rdx
sub	rax, r9
sub	rdx, qword ptr [rcx]
sar	rax, 1
sar	rdx, 1
sar	r8, 1
mov	qword ptr [rsp + 0x28], rax
jmp	0x14006a4e0
jmp	0x14006a4e0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rdi, rcx
mov	rcx, r9
mov	rbx, rdx
mov	rsi, r8
mov	rbp, r9
sub	rsi, rbx
call	0x140015a60
call	0x140015a60
sub	rbx, qword ptr [rdi]
mov	r8, rsi
mov	r9, rbp
mov	qword ptr [rsp + 0x20], rax
mov	rdx, rbx
sar	r8, 1
mov	rcx, rdi
sar	rdx, 1
call	0x14006a4e0
call	0x14006a4e0
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rsp + 0x28]
sub	r8, rdx
sub	rax, r9
sub	rdx, qword ptr [rcx]
sar	rax, 1
sar	rdx, 1
sar	r8, 1
mov	qword ptr [rsp + 0x28], rax
jmp	0x14006a4e0
jmp	0x14006a4e0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	r8, rdx
sub	rdx, qword ptr [rcx]
sar	rdx, 1
sar	r8, 1
jmp	0x14006a4e0
jmp	0x14006a4e0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	r9, qword ptr [r9]
mov	rax, qword ptr [r9 - 0x18]
mov	qword ptr [rsp + 0x20], rax
sub	r8, rdx
sub	rdx, qword ptr [rcx]
sar	rdx, 1
sar	r8, 1
call	0x14006a4e0
call	0x14006a4e0
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rsp + 0x28]
sub	r8, rdx
sub	rax, r9
sub	rdx, qword ptr [rcx]
sar	rax, 1
sar	rdx, 1
sar	r8, 1
mov	qword ptr [rsp + 0x28], rax
jmp	0x14006a4e0
jmp	0x14006a4e0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rsp + 0x28]
sub	r8, rdx
sub	rax, r9
sub	rdx, qword ptr [rcx]
sar	rax, 1
sar	rdx, 1
sar	r8, 1
mov	qword ptr [rsp + 0x28], rax
jmp	0x14006a4e0
jmp	0x14006a4e0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [r9 + 8]
add	rax, rax
sar	rax, 1
mov	qword ptr [rsp + 0x20], rax
sub	r8, rdx
mov	r9, qword ptr [r9]
sub	rdx, qword ptr [rcx]
sar	r8, 1
sar	rdx, 1
call	0x14006a4e0
call	0x14006a4e0
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
movabs	rax, 0x1ffffffffffffffc
mov	ebp, dword ptr [rsp + 0x70]
mov	r12d, ebp
mov	rbx, rdx
sub	r8, rdx
mov	rdx, qword ptr [rcx]
mov	rdi, rcx
sar	r8, 1
mov	rsi, r9
sub	rbx, rdx
add	rax, r8
sub	rax, qword ptr [rdx - 0x18]
mov	rcx, rbx
sar	rcx, 1
cmp	rax, r9
jb	0x14006a491
jb	0x14006a491
mov	rdx, rcx
mov	rcx, rdi
call	0x14006aa20
call	0x14006aa20
test	rsi, rsi
jne	0x14006a440
jne	0x14006a440
mov	rax, rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
add	rbx, qword ptr [rdi]
xor	eax, eax
cmp	rsi, 1
je	0x14006a480
je	0x14006a480
test	sil, 1
je	0x14006a460
je	0x14006a460
mov	word ptr [rbx], bp
mov	eax, 1
nop	dword ptr [rax]
mov	word ptr [rbx + rax*2], r12w
mov	word ptr [rbx + rax*2 + 2], r12w
add	rax, 2
cmp	rsi, rax
jne	0x14006a460
jne	0x14006a460
jmp	0x14006a432
jmp	0x14006a432
nop	word ptr cs:[rax + rax]
mov	rax, rdi
mov	word ptr [rbx], bp
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
lea	rcx, [rip + 0x4f0d9]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, rcx
mov	rcx, r9
mov	rdi, rdx
mov	rbp, r8
mov	rbx, r9
call	0x140015a60
call	0x140015a60
mov	r9, rbx
mov	r8, rbp
mov	rdx, rdi
mov	qword ptr [rsp + 0x20], rax
mov	rcx, rsi
call	0x14006a4e0
call	0x14006a4e0
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
mov	rdi, qword ptr [rsp + 0xb0]
mov	rbx, rdx
mov	rdx, qword ptr [rcx]
mov	r14, r9
mov	rsi, rcx
mov	r9, qword ptr [rdx - 0x18]
cmp	r9, rbx
jb	0x14006a70c
jb	0x14006a70c
movabs	rax, 0x1ffffffffffffffc
mov	r10, r9
sub	r10, rbx
cmp	r10, r8
cmova	r10, r8
sub	rax, r9
add	rax, r10
cmp	rax, rdi
jb	0x14006a700
jb	0x14006a700
cmp	r14, rdx
jb	0x14006a600
jb	0x14006a600
lea	rax, [rdx + r9*2]
cmp	rax, r14
jb	0x14006a600
jb	0x14006a600
mov	rbp, qword ptr [rip + 0x540dc]
mov	r8d, dword ptr [rbp]
test	r8d, r8d
jne	0x14006a5f0
jne	0x14006a5f0
mov	ecx, dword ptr [rdx - 8]
test	ecx, ecx
jg	0x14006a600
jg	0x14006a600
lea	r13, [rdi + rdi]
lea	r12, [rbx + rbx]
lea	rax, [r14 + r13]
lea	rcx, [rdx + r12]
cmp	rcx, rax
jae	0x14006a6c8
jae	0x14006a6c8
lea	rcx, [rbx + r10]
lea	rcx, [rdx + rcx*2]
cmp	r14, rcx
jb	0x14006a650
jb	0x14006a650
mov	rax, r14
mov	r14, rdi
sub	rax, rdx
sub	r14, r10
sar	rax, 1
add	r14, rax
mov	rdx, rbx
mov	rcx, rsi
mov	r9, rdi
mov	r8, r10
call	0x14006aa20
call	0x14006aa20
mov	rcx, qword ptr [rsi]
lea	rdx, [rcx + r14*2]
add	rcx, r12
cmp	rdi, 1
je	0x14006a6d8
je	0x14006a6d8
test	rdi, rdi
je	0x14006a5da
je	0x14006a5da
mov	r8, r13
call	0x140015998
call	0x140015998
mov	rax, rsi
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	
mov	eax, dword ptr [rdx - 8]
test	eax, eax
jle	0x14006a648
jle	0x14006a648
nop	word ptr [rax + rax]
mov	r9, rdi
mov	r8, r10
mov	rdx, rbx
mov	rcx, rsi
call	0x14006aa20
call	0x14006aa20
test	rdi, rdi
je	0x14006a5da
je	0x14006a5da
mov	rax, qword ptr [rsi]
lea	rcx, [rax + rbx*2]
cmp	rdi, 1
je	0x14006a638
je	0x14006a638
lea	r8, [rdi + rdi]
mov	rdx, r14
call	0x140015998
call	0x140015998
jmp	0x14006a5da
jmp	0x14006a5da
nop	dword ptr [rax]
movzx	eax, word ptr [r14]
mov	word ptr [rcx], ax
jmp	0x14006a5da
jmp	0x14006a5da
nop	dword ptr [rax]
mov	rdx, qword ptr [rcx]
jmp	0x14006a56c
jmp	0x14006a56c
lea	r15, [rsp + 0x3f]
mov	rcx, r14
xor	r9d, r9d
mov	rdx, rax
mov	r8, r15
mov	qword ptr [rsp + 0x28], r10
call	0x140068970
call	0x140068970
mov	r8, qword ptr [rsp + 0x28]
mov	r9, rdi
mov	rdx, rbx
mov	rcx, rsi
mov	r14, rax
call	0x14006aa20
call	0x14006aa20
test	rdi, rdi
je	0x14006a69d
je	0x14006a69d
add	r12, qword ptr [rsi]
cmp	rdi, 1
je	0x14006a6f5
je	0x14006a6f5
mov	r8, r13
mov	rdx, r14
mov	rcx, r12
call	0x140015998
call	0x140015998
mov	eax, dword ptr [rbp]
test	eax, eax
jne	0x14006a6e8
jne	0x14006a6e8
mov	eax, dword ptr [r14 - 8]
lea	edx, [rax - 1]
mov	dword ptr [r14 - 8], edx
test	eax, eax
jg	0x14006a5da
jg	0x14006a5da
lea	rcx, [r14 - 0x18]
call	0x1400b2be0
call	0x1400b2be0
jmp	0x14006a5da
jmp	0x14006a5da
nop	dword ptr [rax]
sub	r14, rdx
sar	r14, 1
jmp	0x14006a5a8
jmp	0x14006a5a8
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
jmp	0x14006a5da
jmp	0x14006a5da
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [r14 - 8], eax
jmp	0x14006a6af
jmp	0x14006a6af
movzx	eax, word ptr [r14]
mov	word ptr [r12], ax
jmp	0x14006a69d
jmp	0x14006a69d
lea	rcx, [rip + 0x4ee9c]
call	0x1400b3ba0
call	0x1400b3ba0
mov	r8, rbx
lea	rdx, [rip + 0x4ee8d]
lea	rcx, [rip + 0x4ed83]
call	0x1400aed20
call	0x1400aed20
mov	rbx, rax
lea	rcx, [r14 - 0x18]
mov	rdx, r15
call	0x140068f00
call	0x140068f00
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	r9, qword ptr [r9]
mov	rax, qword ptr [r9 - 0x18]
mov	qword ptr [rsp + 0x20], rax
call	0x14006a4e0
call	0x14006a4e0
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, qword ptr [r9]
mov	r10, qword ptr [rsp + 0x50]
mov	r11, qword ptr [rsp + 0x58]
mov	r9, qword ptr [rbx - 0x18]
mov	rax, r9
sub	rax, r10
cmp	rax, r11
cmova	rax, r11
cmp	r9, r10
jb	0x14006a79b
jb	0x14006a79b
lea	r9, [rbx + r10*2]
mov	qword ptr [rsp + 0x50], rax
add	rsp, 0x20
pop	rbx
jmp	0x14006a4e0
jmp	0x14006a4e0
mov	r8, r10
lea	rdx, [rip + 0x4edfe]
lea	rcx, [rip + 0x4ecf4]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
movzx	r11d, word ptr [rsp + 0x50]
mov	r10, qword ptr [rax - 0x18]
mov	rax, r10
sub	rax, rdx
cmp	rax, r8
cmovbe	r8, rax
cmp	r10, rdx
jb	0x14006a7f1
jb	0x14006a7f1
mov	dword ptr [rsp + 0x50], r11d
add	rsp, 0x28
jmp	0x140068c90
jmp	0x140068c90
mov	r8, rdx
mov	r9, r10
lea	rdx, [rip + 0x4eda5]
lea	rcx, [rip + 0x4ec9b]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, rcx
mov	rcx, qword ptr [rcx]
mov	rax, qword ptr [rcx - 0x10]
cmp	qword ptr [rcx - 0x18], rax
jb	0x14006a83c
jb	0x14006a83c
mov	rax, qword ptr [rip + 0x53e03]
mov	r8d, dword ptr [rax]
test	r8d, r8d
jne	0x14006a8a0
jne	0x14006a8a0
mov	edx, dword ptr [rcx - 8]
test	edx, edx
jle	0x14006a870
jle	0x14006a870
lea	rdx, [rsp + 0x2f]
sub	rcx, 0x18
xor	r8d, r8d
call	0x140069010
call	0x140069010
mov	rsi, rax
mov	rax, qword ptr [rip + 0x53dd9]
mov	rcx, qword ptr [rbx]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14006a880
jne	0x14006a880
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14006a88e
jle	0x14006a88e
mov	qword ptr [rbx], rsi
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14006a86d
jg	0x14006a86d
sub	rcx, 0x18
call	0x1400b2be0
call	0x1400b2be0
jmp	0x14006a86d
jmp	0x14006a86d
nop	dword ptr [rax]
mov	eax, dword ptr [rcx - 8]
test	eax, eax
jle	0x14006a870
jle	0x14006a870
mov	rcx, qword ptr [rbx]
jmp	0x14006a83c
jmp	0x14006a83c
sub	rdx, 1
mov	rcx, rax
jne	0x14006a8bf
jne	0x14006a8bf
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
nop	
add	rsp, 0x38
pop	rbx
pop	rsi
jmp	0x1400b2f60
jmp	0x1400b2f60
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rdi, qword ptr [rip + 0x53d32]
mov	rax, qword ptr [rcx]
mov	r8, rdx
mov	rdx, qword ptr [rax - 0x10]
mov	rbx, rcx
cmp	rdx, r8
jb	0x14006a922
jb	0x14006a922
mov	r8d, dword ptr [rdi]
test	r8d, r8d
jne	0x14006a980
jne	0x14006a980
mov	ecx, dword ptr [rax - 8]
test	ecx, ecx
jle	0x14006a950
jle	0x14006a950
mov	r8, rdx
lea	rcx, [rax - 0x18]
lea	rdx, [rsp + 0x2f]
sub	r8, qword ptr [rax - 0x18]
call	0x140069010
call	0x140069010
mov	rcx, qword ptr [rbx]
mov	rsi, rax
mov	eax, dword ptr [rdi]
test	eax, eax
jne	0x14006a960
jne	0x14006a960
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14006a96e
jle	0x14006a96e
mov	qword ptr [rbx], rsi
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14006a94d
jg	0x14006a94d
sub	rcx, 0x18
call	0x1400b2be0
call	0x1400b2be0
jmp	0x14006a94d
jmp	0x14006a94d
nop	dword ptr [rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jle	0x14006a950
jle	0x14006a950
mov	rax, qword ptr [rcx]
mov	r8, rdx
jmp	0x14006a922
jmp	0x14006a922
nop	
sub	rsp, 0x28
xor	r9d, r9d
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
lea	rdx, [rax - 1]
cmp	rax, rdx
jb	0x14006a9b6
jb	0x14006a9b6
mov	r8d, 1
add	rsp, 0x28
jmp	0x14006aa20
jmp	0x14006aa20
or	r8, 0xffffffffffffffff
lea	rdx, [rip + 0x4eb9c]
lea	rcx, [rip + 0x4ead8]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
mov	r9d, r8d
cmp	rdx, 1
je	0x14006aa10
je	0x14006aa10
test	rdx, rdx
je	0x14006aa0c
je	0x14006aa0c
xor	eax, eax
test	dl, 1
je	0x14006a9f8
je	0x14006a9f8
mov	word ptr [rcx], r8w
mov	eax, 1
cmp	rdx, 1
je	0x14006aa0c
je	0x14006aa0c
nop	dword ptr [rax]
mov	word ptr [rcx + rax*2], r9w
mov	word ptr [rcx + rax*2 + 2], r9w
add	rax, 2
cmp	rdx, rax
jne	0x14006a9f8
jne	0x14006a9f8
ret	
ret	
nop	dword ptr [rax]
mov	word ptr [rcx], r8w
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
mov	r13, qword ptr [rip + 0x53bf9]
mov	rbx, qword ptr [rcx]
mov	rax, qword ptr [rbx - 0x18]
mov	rsi, r9
lea	r15, [r8 + rdx]
mov	rbp, rdx
mov	rdx, qword ptr [rbx - 0x10]
sub	rsi, r8
mov	r14, r9
mov	rdi, rcx
add	rsi, rax
sub	rax, r15
mov	r9, rax
cmp	rdx, rsi
jb	0x14006aa7d
jb	0x14006aa7d
mov	r11d, dword ptr [r13]
test	r11d, r11d
jne	0x14006ab90
jne	0x14006ab90
mov	r10d, dword ptr [rbx - 8]
test	r10d, r10d
jle	0x14006ab43
jle	0x14006ab43
lea	r8, [rsp + 0x3f]
mov	rcx, rsi
mov	qword ptr [rsp + 0x28], r9
call	0x140069080
call	0x140069080
test	rbp, rbp
mov	r9, qword ptr [rsp + 0x28]
mov	r12, rax
jne	0x14006ab10
jne	0x14006ab10
mov	rdx, qword ptr [rdi]
lea	rbx, [rax + 0x18]
test	r9, r9
je	0x14006aacd
je	0x14006aacd
add	r14, rbp
lea	rax, [rdx + r15*2]
lea	rcx, [r12 + r14*2 + 0x18]
cmp	r9, 1
je	0x14006aba8
je	0x14006aba8
mov	rdx, rax
lea	r8, [r9 + r9]
call	0x140015998
call	0x140015998
mov	rdx, qword ptr [rdi]
mov	ecx, dword ptr [r13]
test	ecx, ecx
jne	0x14006ab70
jne	0x14006ab70
mov	eax, dword ptr [rdx - 8]
lea	ecx, [rax - 1]
mov	dword ptr [rdx - 8], ecx
test	eax, eax
jle	0x14006ab82
jle	0x14006ab82
mov	qword ptr [rdi], rbx
xor	eax, eax
mov	dword ptr [rbx - 8], 0
mov	qword ptr [rbx - 0x18], rsi
mov	word ptr [rbx + rsi*2], ax
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	
mov	rdx, qword ptr [rdi]
lea	rbx, [rax + 0x18]
cmp	rbp, 1
je	0x14006abb8
je	0x14006abb8
lea	r8, [rbp + rbp]
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], r9
call	0x140015998
call	0x140015998
mov	rdx, qword ptr [rdi]
mov	r9, qword ptr [rsp + 0x28]
jmp	0x14006aaa3
jmp	0x14006aaa3
mov	rbx, qword ptr [rcx]
test	r9, r9
je	0x14006aaed
je	0x14006aaed
cmp	r14, r8
je	0x14006aaed
je	0x14006aaed
add	r14, rbp
lea	rdx, [rbx + r15*2]
lea	rcx, [rbx + r14*2]
cmp	r9, 1
je	0x14006abd0
je	0x14006abd0
lea	r8, [r9 + r9]
call	0x1400159a0
call	0x1400159a0
mov	rbx, qword ptr [rdi]
jmp	0x14006aaed
jmp	0x14006aaed
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rdx - 8], eax
test	eax, eax
jg	0x14006aaea
jg	0x14006aaea
lea	rcx, [rdx - 0x18]
call	0x1400b2be0
call	0x1400b2be0
jmp	0x14006aaea
jmp	0x14006aaea
mov	eax, dword ptr [rbx - 8]
test	eax, eax
jle	0x14006ab40
jle	0x14006ab40
mov	rax, qword ptr [rcx]
mov	rdx, qword ptr [rax - 0x10]
jmp	0x14006aa7d
jmp	0x14006aa7d
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rax]
mov	word ptr [rcx], ax
jmp	0x14006aacd
jmp	0x14006aacd
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rdx]
mov	word ptr [r12 + 0x18], ax
jmp	0x14006aaa3
jmp	0x14006aaa3
nop	word ptr cs:[rax + rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
jmp	0x14006aaed
jmp	0x14006aaed
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	edi, edx
mov	rdx, qword ptr [rax - 0x18]
mov	rbx, rcx
lea	rsi, [rdx + 1]
cmp	qword ptr [rax - 0x10], rsi
jb	0x14006ac13
jb	0x14006ac13
mov	rcx, qword ptr [rip + 0x53a2c]
mov	r8d, dword ptr [rcx]
test	r8d, r8d
jne	0x14006ac48
jne	0x14006ac48
mov	ecx, dword ptr [rax - 8]
test	ecx, ecx
jle	0x14006ac25
jle	0x14006ac25
mov	rdx, rsi
mov	rcx, rbx
call	0x14006a8f0
call	0x14006a8f0
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
mov	word ptr [rax + rdx*2], di
xor	edx, edx
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rsi
mov	word ptr [rax + rsi*2], dx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x14006ac13
jg	0x14006ac13
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
jmp	0x14006ac25
jmp	0x14006ac25
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	rdx, qword ptr [rip + 0x539c6]
mov	r8d, dword ptr [rdx]
mov	qword ptr [rcx], rax
test	r8d, r8d
jne	0x14006ac88
jne	0x14006ac88
mov	edx, dword ptr [rax - 8]
test	edx, edx
jle	0x14006ac92
jle	0x14006ac92
add	edx, 1
mov	dword ptr [rax - 8], edx
ret	
ret	
nop	dword ptr [rax + rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x14006aca0
jg	0x14006aca0
mov	rax, qword ptr [rcx]
mov	dword ptr [rax - 8], 1
ret	
ret	
nop	word ptr [rax + rax]
mov	edx, dword ptr [rdx]
mov	rax, qword ptr [rcx]
test	edx, edx
je	0x14006acaf
je	0x14006acaf
lock add	dword ptr [rax - 8], 1
ret	
ret	
mov	edx, dword ptr [rax - 8]
jmp	0x14006ac7c
jmp	0x14006ac7c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx]
mov	qword ptr [rcx], rax
mov	ecx, 0x1a
mov	rbx, rdx
call	0x1400b2c30
call	0x1400b2c30
pxor	xmm0, xmm0
xor	edx, edx
mov	dword ptr [rax + 0x10], 0
add	rax, 0x18
movups	xmmword ptr [rax - 0x18], xmm0
mov	word ptr [rax], dx
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rdx
mov	rsi, rcx
mov	rdi, r8
mov	rdx, 0xfffffffffffffffe
test	rbx, rbx
je	0x14006ad28
je	0x14006ad28
mov	rcx, rbx
call	0x140015a60
call	0x140015a60
lea	rdx, [rbx + rax*2]
xor	r9d, r9d
mov	r8, rdi
mov	rcx, rbx
call	0x140068970
call	0x140068970
mov	qword ptr [rsi], rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, r9
mov	rbx, rcx
xor	r9d, r9d
mov	rcx, rdx
lea	rdx, [rdx + r8*2]
mov	r8, rax
call	0x140068970
call	0x140068970
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	ecx, 0x1a
call	0x1400b2c30
call	0x1400b2c30
pxor	xmm0, xmm0
xor	edx, edx
mov	dword ptr [rax + 0x10], 0
add	rax, 0x18
movups	xmmword ptr [rax - 0x18], xmm0
mov	word ptr [rax], dx
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rdx]
mov	edx, dword ptr [rax - 8]
lea	r8, [rax - 8]
mov	rbx, rcx
lea	rcx, [rax - 0x18]
test	edx, edx
js	0x14006adf8
js	0x14006adf8
mov	rdx, qword ptr [rip + 0x5384f]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x14006ae10
jne	0x14006ae10
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140069010
call	0x140069010
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
lock add	dword ptr [r8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, rdx
mov	rbx, rcx
mov	rdx, r8
mov	rax, qword ptr [rax]
mov	ecx, dword ptr [rax - 8]
lea	r9, [rax - 0x18]
lea	r8, [rax - 8]
test	ecx, ecx
js	0x14006ae60
js	0x14006ae60
mov	rdx, qword ptr [rip + 0x537e9]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x14006ae78
jne	0x14006ae78
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	word ptr [rax + rax]
xor	r8d, r8d
mov	rcx, r9
call	0x140069010
call	0x140069010
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
lock add	dword ptr [r8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rdx, qword ptr [rdx]
mov	rax, r8
mov	r8, r9
mov	r9, qword ptr [rdx - 0x18]
mov	rbx, rcx
lea	rcx, [rdx + r9*2]
cmp	r9, rax
jb	0x14006aec9
jb	0x14006aec9
lea	rax, [rdx + rax*2]
xor	r9d, r9d
mov	rdx, rcx
mov	rcx, rax
call	0x140068b20
call	0x140068b20
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	r8, rax
lea	rdx, [rip + 0x4e74f]
lea	rcx, [rip + 0x4e5c6]
call	0x1400aed20
call	0x1400aed20
nop	
push	rbx
sub	rsp, 0x30
mov	rdx, qword ptr [rdx]
mov	rbx, rcx
mov	rcx, qword ptr [rdx - 0x18]
mov	rax, rcx
sub	rax, r8
cmp	rax, r9
cmova	rax, r9
add	rax, r8
lea	rax, [rdx + rax*2]
cmp	rcx, r8
jb	0x14006af25
jb	0x14006af25
lea	rcx, [rdx + r8*2]
xor	r9d, r9d
lea	r8, [rsp + 0x2f]
mov	rdx, rax
call	0x140068b20
call	0x140068b20
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
mov	r9, rcx
lea	rdx, [rip + 0x4e6f3]
lea	rcx, [rip + 0x4e56a]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rdx, qword ptr [rdx]
mov	rbx, rcx
mov	rcx, qword ptr [rdx - 0x18]
mov	rax, rcx
sub	rax, r8
cmp	rax, r9
cmova	rax, r9
add	rax, r8
lea	rax, [rdx + rax*2]
cmp	rcx, r8
jb	0x14006af85
jb	0x14006af85
lea	rcx, [rdx + r8*2]
mov	r8, qword ptr [rsp + 0x50]
xor	r9d, r9d
mov	rdx, rax
call	0x140068b20
call	0x140068b20
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	r9, rcx
lea	rdx, [rip + 0x4e693]
lea	rcx, [rip + 0x4e50a]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
xor	r9d, r9d
mov	rax, qword ptr [rdx + 8]
mov	rbx, rcx
mov	rcx, qword ptr [rdx]
lea	rdx, [rcx + rax*2]
call	0x140068970
call	0x140068970
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	ecx, 0x1a
call	0x1400b2c30
call	0x1400b2c30
pxor	xmm0, xmm0
xor	edx, edx
mov	dword ptr [rax + 0x10], 0
add	rax, 0x18
movups	xmmword ptr [rax - 0x18], xmm0
mov	word ptr [rax], dx
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rdx
mov	esi, r8d
mov	rdi, rcx
xor	edx, edx
mov	r8, r9
mov	rcx, rbx
mov	ebp, esi
call	0x140069080
call	0x140069080
test	rbx, rbx
jne	0x14006b060
jne	0x14006b060
lea	rdx, [rax + 0x18]
xor	ecx, ecx
mov	dword ptr [rax + 0x10], 0
mov	qword ptr [rax], rbx
mov	word ptr [rax + rbx*2 + 0x18], cx
mov	qword ptr [rdi], rdx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
xor	edx, edx
cmp	rbx, 1
je	0x14006b098
je	0x14006b098
test	bl, 1
je	0x14006b080
je	0x14006b080
mov	word ptr [rax + 0x18], si
mov	edx, 1
nop	word ptr cs:[rax + rax]
mov	word ptr [rax + rdx*2 + 0x18], bp
mov	word ptr [rax + rdx*2 + 0x1a], bp
add	rdx, 2
cmp	rbx, rdx
jne	0x14006b080
jne	0x14006b080
jmp	0x14006b035
jmp	0x14006b035
nop	dword ptr [rax]
mov	word ptr [rax + 0x18], si
jmp	0x14006b035
jmp	0x14006b035
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, r8
mov	r12, rcx
mov	rdi, rdx
mov	r8, r9
sub	rsi, rdx
xor	edx, edx
mov	rbp, rsi
sar	rbp, 1
mov	rcx, rbp
call	0x140069080
call	0x140069080
mov	rbx, rax
lea	rcx, [rax + 0x18]
cmp	rbp, 1
je	0x14006b110
je	0x14006b110
test	rbp, rbp
jne	0x14006b100
jne	0x14006b100
xor	eax, eax
mov	dword ptr [rbx + 0x10], 0
mov	qword ptr [rbx], rbp
mov	word ptr [rbx + rsi + 0x18], ax
mov	qword ptr [r12], rcx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax + rax]
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x14006b0db
jmp	0x14006b0db
movzx	eax, word ptr [rdi]
mov	word ptr [rbx + 0x18], ax
jmp	0x14006b0db
jmp	0x14006b0db
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, r8
mov	r12, rcx
mov	rdi, rdx
mov	r8, r9
test	rbx, rbx
je	0x14006b140
je	0x14006b140
test	rdx, rdx
je	0x14006b1a9
je	0x14006b1a9
sub	rbx, rdi
xor	edx, edx
mov	rbp, rbx
sar	rbp, 1
mov	rcx, rbp
call	0x140069080
call	0x140069080
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbp, 1
je	0x14006b1a0
je	0x14006b1a0
test	rbp, rbp
jne	0x14006b188
jne	0x14006b188
xor	eax, eax
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbp
mov	word ptr [rsi + rbx + 0x18], ax
mov	qword ptr [r12], rcx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x14006b165
jmp	0x14006b165
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rdi]
mov	word ptr [rsi + 0x18], ax
jmp	0x14006b165
jmp	0x14006b165
lea	rcx, [rip + 0x4e448]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, r8
mov	r12, rcx
mov	rdi, rdx
mov	r8, r9
test	rbx, rbx
je	0x14006b1e0
je	0x14006b1e0
test	rdx, rdx
je	0x14006b249
je	0x14006b249
sub	rbx, rdi
xor	edx, edx
mov	rbp, rbx
sar	rbp, 1
mov	rcx, rbp
call	0x140069080
call	0x140069080
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbp, 1
je	0x14006b240
je	0x14006b240
test	rbp, rbp
jne	0x14006b228
jne	0x14006b228
xor	eax, eax
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbp
mov	word ptr [rsi + rbx + 0x18], ax
mov	qword ptr [r12], rcx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x14006b205
jmp	0x14006b205
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rdi]
mov	word ptr [rsi + 0x18], ax
jmp	0x14006b205
jmp	0x14006b205
lea	rcx, [rip + 0x4e3a8]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	rdx, qword ptr [rip + 0x533c6]
mov	r8d, dword ptr [rdx]
mov	qword ptr [rcx], rax
test	r8d, r8d
jne	0x14006b288
jne	0x14006b288
mov	edx, dword ptr [rax - 8]
test	edx, edx
jle	0x14006b292
jle	0x14006b292
add	edx, 1
mov	dword ptr [rax - 8], edx
ret	
ret	
nop	dword ptr [rax + rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x14006b2a0
jg	0x14006b2a0
mov	rax, qword ptr [rcx]
mov	dword ptr [rax - 8], 1
ret	
ret	
nop	word ptr [rax + rax]
mov	edx, dword ptr [rdx]
mov	rax, qword ptr [rcx]
test	edx, edx
je	0x14006b2af
je	0x14006b2af
lock add	dword ptr [rax - 8], 1
ret	
ret	
mov	edx, dword ptr [rax - 8]
jmp	0x14006b27c
jmp	0x14006b27c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx]
mov	qword ptr [rcx], rax
mov	ecx, 0x1a
mov	rbx, rdx
call	0x1400b2c30
call	0x1400b2c30
pxor	xmm0, xmm0
xor	edx, edx
mov	dword ptr [rax + 0x10], 0
add	rax, 0x18
movups	xmmword ptr [rax - 0x18], xmm0
mov	word ptr [rax], dx
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rdx
mov	rsi, rcx
mov	rdi, r8
mov	rdx, 0xfffffffffffffffe
test	rbx, rbx
je	0x14006b328
je	0x14006b328
mov	rcx, rbx
call	0x140015a60
call	0x140015a60
lea	rdx, [rbx + rax*2]
xor	r9d, r9d
mov	r8, rdi
mov	rcx, rbx
call	0x140068970
call	0x140068970
mov	qword ptr [rsi], rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, r9
mov	rbx, rcx
xor	r9d, r9d
mov	rcx, rdx
lea	rdx, [rdx + r8*2]
mov	r8, rax
call	0x140068970
call	0x140068970
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	ecx, 0x1a
call	0x1400b2c30
call	0x1400b2c30
pxor	xmm0, xmm0
xor	edx, edx
mov	dword ptr [rax + 0x10], 0
add	rax, 0x18
movups	xmmword ptr [rax - 0x18], xmm0
mov	word ptr [rax], dx
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rdx]
mov	edx, dword ptr [rax - 8]
lea	r8, [rax - 8]
mov	rbx, rcx
lea	rcx, [rax - 0x18]
test	edx, edx
js	0x14006b3f8
js	0x14006b3f8
mov	rdx, qword ptr [rip + 0x5324f]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x14006b410
jne	0x14006b410
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140069010
call	0x140069010
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
lock add	dword ptr [r8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, rdx
mov	rbx, rcx
mov	rdx, r8
mov	rax, qword ptr [rax]
mov	ecx, dword ptr [rax - 8]
lea	r9, [rax - 0x18]
lea	r8, [rax - 8]
test	ecx, ecx
js	0x14006b460
js	0x14006b460
mov	rdx, qword ptr [rip + 0x531e9]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x14006b478
jne	0x14006b478
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	word ptr [rax + rax]
xor	r8d, r8d
mov	rcx, r9
call	0x140069010
call	0x140069010
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
lock add	dword ptr [r8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rdx, qword ptr [rdx]
mov	rax, r8
mov	r8, r9
mov	r9, qword ptr [rdx - 0x18]
mov	rbx, rcx
lea	rcx, [rdx + r9*2]
cmp	r9, rax
jb	0x14006b4c9
jb	0x14006b4c9
lea	rax, [rdx + rax*2]
xor	r9d, r9d
mov	rdx, rcx
mov	rcx, rax
call	0x140068b20
call	0x140068b20
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	r8, rax
lea	rdx, [rip + 0x4e14f]
lea	rcx, [rip + 0x4dfc6]
call	0x1400aed20
call	0x1400aed20
nop	
push	rbx
sub	rsp, 0x30
mov	rdx, qword ptr [rdx]
mov	rbx, rcx
mov	rcx, qword ptr [rdx - 0x18]
mov	rax, rcx
sub	rax, r8
cmp	rax, r9
cmova	rax, r9
add	rax, r8
lea	rax, [rdx + rax*2]
cmp	rcx, r8
jb	0x14006b525
jb	0x14006b525
lea	rcx, [rdx + r8*2]
xor	r9d, r9d
lea	r8, [rsp + 0x2f]
mov	rdx, rax
call	0x140068b20
call	0x140068b20
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
mov	r9, rcx
lea	rdx, [rip + 0x4e0f3]
lea	rcx, [rip + 0x4df6a]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rdx, qword ptr [rdx]
mov	rbx, rcx
mov	rcx, qword ptr [rdx - 0x18]
mov	rax, rcx
sub	rax, r8
cmp	rax, r9
cmova	rax, r9
add	rax, r8
lea	rax, [rdx + rax*2]
cmp	rcx, r8
jb	0x14006b585
jb	0x14006b585
lea	rcx, [rdx + r8*2]
mov	r8, qword ptr [rsp + 0x50]
xor	r9d, r9d
mov	rdx, rax
call	0x140068b20
call	0x140068b20
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	r9, rcx
lea	rdx, [rip + 0x4e093]
lea	rcx, [rip + 0x4df0a]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
xor	r9d, r9d
mov	rax, qword ptr [rdx + 8]
mov	rbx, rcx
mov	rcx, qword ptr [rdx]
lea	rdx, [rcx + rax*2]
call	0x140068970
call	0x140068970
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	ecx, 0x1a
call	0x1400b2c30
call	0x1400b2c30
pxor	xmm0, xmm0
xor	edx, edx
mov	dword ptr [rax + 0x10], 0
add	rax, 0x18
movups	xmmword ptr [rax - 0x18], xmm0
mov	word ptr [rax], dx
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rdx
mov	esi, r8d
mov	rdi, rcx
xor	edx, edx
mov	r8, r9
mov	rcx, rbx
mov	ebp, esi
call	0x140069080
call	0x140069080
test	rbx, rbx
jne	0x14006b660
jne	0x14006b660
lea	rdx, [rax + 0x18]
xor	ecx, ecx
mov	dword ptr [rax + 0x10], 0
mov	qword ptr [rax], rbx
mov	word ptr [rax + rbx*2 + 0x18], cx
mov	qword ptr [rdi], rdx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
xor	edx, edx
cmp	rbx, 1
je	0x14006b698
je	0x14006b698
test	bl, 1
je	0x14006b680
je	0x14006b680
mov	word ptr [rax + 0x18], si
mov	edx, 1
nop	word ptr cs:[rax + rax]
mov	word ptr [rax + rdx*2 + 0x18], bp
mov	word ptr [rax + rdx*2 + 0x1a], bp
add	rdx, 2
cmp	rbx, rdx
jne	0x14006b680
jne	0x14006b680
jmp	0x14006b635
jmp	0x14006b635
nop	dword ptr [rax]
mov	word ptr [rax + 0x18], si
jmp	0x14006b635
jmp	0x14006b635
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, r8
mov	r12, rcx
mov	rdi, rdx
mov	r8, r9
sub	rsi, rdx
xor	edx, edx
mov	rbp, rsi
sar	rbp, 1
mov	rcx, rbp
call	0x140069080
call	0x140069080
mov	rbx, rax
lea	rcx, [rax + 0x18]
cmp	rbp, 1
je	0x14006b710
je	0x14006b710
test	rbp, rbp
jne	0x14006b700
jne	0x14006b700
xor	eax, eax
mov	dword ptr [rbx + 0x10], 0
mov	qword ptr [rbx], rbp
mov	word ptr [rbx + rsi + 0x18], ax
mov	qword ptr [r12], rcx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax + rax]
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x14006b6db
jmp	0x14006b6db
movzx	eax, word ptr [rdi]
mov	word ptr [rbx + 0x18], ax
jmp	0x14006b6db
jmp	0x14006b6db
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, r8
mov	r12, rcx
mov	rdi, rdx
mov	r8, r9
test	rbx, rbx
je	0x14006b740
je	0x14006b740
test	rdx, rdx
je	0x14006b7a9
je	0x14006b7a9
sub	rbx, rdi
xor	edx, edx
mov	rbp, rbx
sar	rbp, 1
mov	rcx, rbp
call	0x140069080
call	0x140069080
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbp, 1
je	0x14006b7a0
je	0x14006b7a0
test	rbp, rbp
jne	0x14006b788
jne	0x14006b788
xor	eax, eax
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbp
mov	word ptr [rsi + rbx + 0x18], ax
mov	qword ptr [r12], rcx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x14006b765
jmp	0x14006b765
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rdi]
mov	word ptr [rsi + 0x18], ax
jmp	0x14006b765
jmp	0x14006b765
lea	rcx, [rip + 0x4de48]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, r8
mov	r12, rcx
mov	rdi, rdx
mov	r8, r9
test	rbx, rbx
je	0x14006b7e0
je	0x14006b7e0
test	rdx, rdx
je	0x14006b849
je	0x14006b849
sub	rbx, rdi
xor	edx, edx
mov	rbp, rbx
sar	rbp, 1
mov	rcx, rbp
call	0x140069080
call	0x140069080
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbp, 1
je	0x14006b840
je	0x14006b840
test	rbp, rbp
jne	0x14006b828
jne	0x14006b828
xor	eax, eax
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbp
mov	word ptr [rsi + rbx + 0x18], ax
mov	qword ptr [r12], rcx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x14006b805
jmp	0x14006b805
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rdi]
mov	word ptr [rsi + 0x18], ax
jmp	0x14006b805
jmp	0x14006b805
lea	rcx, [rip + 0x4dda8]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x52dc9]
mov	eax, dword ptr [rax]
mov	rcx, qword ptr [rcx]
test	eax, eax
jne	0x14006b880
jne	0x14006b880
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14006b88e
jle	0x14006b88e
ret	
ret	
nop	
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14006b87d
jg	0x14006b87d
sub	rcx, 0x18
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x52d89]
mov	eax, dword ptr [rax]
mov	rcx, qword ptr [rcx]
test	eax, eax
jne	0x14006b8c0
jne	0x14006b8c0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14006b8ce
jle	0x14006b8ce
ret	
ret	
nop	
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14006b8bd
jg	0x14006b8bd
sub	rcx, 0x18
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rcx]
mov	r8d, dword ptr [rcx - 8]
test	r8d, r8d
jns	0x14006b8f6
jns	0x14006b8f6
mov	dword ptr [rcx - 8], 0
mov	r8, qword ptr [rdx]
mov	r9d, dword ptr [r8 - 8]
test	r9d, r9d
jns	0x14006b90a
jns	0x14006b90a
mov	dword ptr [r8 - 8], 0
mov	qword ptr [rax], r8
mov	qword ptr [rdx], rcx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
call	0x140015a60
call	0x140015a60
mov	rdx, rbx
mov	rcx, rsi
mov	r8, rax
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400698d0
jmp	0x1400698d0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [rdx]
mov	rbx, rcx
cmp	qword ptr [rcx], rsi
je	0x14006b99a
je	0x14006b99a
mov	eax, dword ptr [rsi - 8]
lea	rcx, [rsi - 0x18]
lea	rdx, [rsi - 8]
test	eax, eax
js	0x14006b9a8
js	0x14006b9a8
mov	rax, qword ptr [rip + 0x52cb9]
mov	ecx, dword ptr [rax]
test	ecx, ecx
jne	0x14006b9e8
jne	0x14006b9e8
add	dword ptr [rsi - 8], 1
mov	eax, dword ptr [rax]
mov	rcx, qword ptr [rbx]
test	eax, eax
jne	0x14006b9c8
jne	0x14006b9c8
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14006b9d6
jle	0x14006b9d6
mov	qword ptr [rbx], rsi
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140069010
call	0x140069010
mov	rcx, qword ptr [rbx]
mov	rsi, rax
mov	rax, qword ptr [rip + 0x52c6e]
mov	eax, dword ptr [rax]
test	eax, eax
je	0x14006b98a
je	0x14006b98a
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14006b997
jg	0x14006b997
sub	rcx, 0x18
call	0x1400b2be0
call	0x1400b2be0
jmp	0x14006b997
jmp	0x14006b997
nop	dword ptr [rax]
lock add	dword ptr [rdx], 1
jmp	0x14006b981
jmp	0x14006b981
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx]
mov	r8, qword ptr [rdx + 8]
mov	rdx, rax
mov	rbx, rcx
call	0x1400698d0
call	0x1400698d0
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
push	rsi
push	rbx
sub	rsp, 0x28
mov	r9d, 1
mov	rax, qword ptr [rcx]
mov	r8, qword ptr [rax - 0x18]
mov	rbx, rcx
mov	esi, edx
xor	edx, edx
call	0x14006aa20
call	0x14006aa20
mov	rax, qword ptr [rbx]
mov	word ptr [rax], si
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rsi
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rsi, rdx
mov	edx, dword ptr [rax - 8]
test	edx, edx
jns	0x14006ba60
jns	0x14006ba60
lea	rax, [rax + rsi*2]
add	rsp, 0x20
pop	rsi
ret	
ret	
nop	dword ptr [rax]
cmp	qword ptr [rax - 0x18], 0
je	0x14006ba52
je	0x14006ba52
mov	rdx, qword ptr [rip + 0x52bc2]
mov	r8d, dword ptr [rdx]
test	r8d, r8d
jne	0x14006ba90
jne	0x14006ba90
mov	edx, dword ptr [rax - 8]
test	edx, edx
jg	0x14006baa0
jg	0x14006baa0
mov	dword ptr [rax - 8], 0xffffffff
lea	rax, [rax + rsi*2]
add	rsp, 0x20
pop	rsi
ret	
ret	
nop	
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x14006baa0
jg	0x14006baa0
mov	rax, qword ptr [rcx]
jmp	0x14006ba7d
jmp	0x14006ba7d
nop	dword ptr [rax]
xor	r9d, r9d
xor	r8d, r8d
xor	edx, edx
mov	qword ptr [rsp + 0x30], rcx
call	0x14006aa20
call	0x14006aa20
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
jmp	0x14006ba7d
jmp	0x14006ba7d
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
call	0x140015a60
call	0x140015a60
mov	rdx, rbx
mov	rcx, rsi
mov	r8, rax
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x140069490
jmp	0x140069490
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x1400695a0
jmp	0x1400695a0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	r8, qword ptr [rdx + 8]
mov	rdx, rax
jmp	0x140069490
jmp	0x140069490
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	r8, qword ptr [rcx]
mov	rax, qword ptr [r8 - 0x18]
mov	rbx, rcx
mov	edi, edx
lea	rsi, [rax + 1]
cmp	qword ptr [r8 - 0x10], rsi
jb	0x14006bb42
jb	0x14006bb42
mov	rdx, qword ptr [rip + 0x52afc]
mov	ecx, dword ptr [rdx]
test	ecx, ecx
jne	0x14006bb80
jne	0x14006bb80
mov	edx, dword ptr [r8 - 8]
test	edx, edx
jle	0x14006bb54
jle	0x14006bb54
mov	rdx, rsi
mov	rcx, rbx
call	0x14006a8f0
call	0x14006a8f0
mov	r8, qword ptr [rbx]
mov	rax, qword ptr [r8 - 0x18]
mov	word ptr [r8 + rax*2], di
xor	eax, eax
mov	dword ptr [r8 - 8], 0
mov	qword ptr [r8 - 0x18], rsi
mov	word ptr [r8 + rsi*2], ax
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, dword ptr [r8 - 8]
test	eax, eax
jg	0x14006bb42
jg	0x14006bb42
mov	r8, qword ptr [rbx]
mov	rax, qword ptr [r8 - 0x18]
jmp	0x14006bb54
jmp	0x14006bb54
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rsi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rbx, qword ptr [rax - 0x18]
add	rsi, rcx
mov	rbp, rcx
mov	rdi, rdx
mov	rcx, rsi
add	rbx, rdx
mov	rdx, rbx
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400ab190
call	0x1400ab190
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rsi + 0xd8]
mov	rdx, qword ptr [rbx + 0xd8]
mov	qword ptr [rsi + 0xd8], rdx
movzx	edx, byte ptr [rbx + 0xe0]
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, byte ptr [rsi + 0xe0]
mov	byte ptr [rsi + 0xe0], dl
movzx	edx, byte ptr [rbx + 0xe1]
mov	byte ptr [rbx + 0xe0], al
movzx	eax, byte ptr [rsi + 0xe1]
mov	byte ptr [rsi + 0xe1], dl
mov	rdx, qword ptr [rdi + 8]
mov	byte ptr [rbx + 0xe1], al
mov	rax, qword ptr [rbp + 8]
mov	qword ptr [rbp + 8], rdx
mov	qword ptr [rdi + 8], rax
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rcx + 0x18]
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rbp
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
mov	rcx, rbp
mov	word ptr [rbx + 0xf8], ax
lea	rax, [rip + 0x54047]
mov	qword ptr [rbx], rax
add	rax, 0x28
movups	xmmword ptr [rbx + 0x100], xmm0
movups	xmmword ptr [rbx + 0x110], xmm0
mov	qword ptr [rbx + 0x18], rax
mov	rax, qword ptr [rsi + 8]
mov	qword ptr [rbx + 0xf0], 0
mov	qword ptr [rbx + 8], rax
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
mov	rdx, rdi
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0xe8]
mov	rcx, rbp
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rdi + 0xd8]
mov	qword ptr [rbx + 0x100], 0
mov	qword ptr [rdi + 0xd8], 0
mov	qword ptr [rbx + 0xf0], rax
movzx	eax, word ptr [rdi + 0xe0]
mov	word ptr [rbx + 0xf8], ax
lea	rax, [rip + 0x5a511]
mov	qword ptr [rsi + 8], 0
lea	rsi, [rax + 0x28]
mov	qword ptr [rbx], rax
add	rax, 0x50
movq	xmm0, rsi
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx + 0x10], xmm0
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rsi, rax
mov	rax, qword ptr [rip + 0x53411]
mov	rcx, rbp
add	rax, 0x10
mov	qword ptr [rbx + 0x18], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rip + 0x53f59]
lea	rdi, [rcx + 0x18]
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rdi
call	0x1400aa250
call	0x1400aa250
xor	r8d, r8d
lea	rax, [rbp + 0x28]
mov	qword ptr [rbx], rbp
mov	qword ptr [rbx + 0x18], rax
pxor	xmm0, xmm0
mov	rdx, rsi
mov	rcx, rdi
mov	qword ptr [rbx + 0xf0], 0
mov	word ptr [rbx + 0xf8], r8w
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x100], xmm0
movups	xmmword ptr [rbx + 0x110], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x53f72]
mov	rcx, rdi
lea	rdx, [rax - 0x28]
movq	xmm1, rax
movq	xmm0, rdx
mov	rdx, rsi
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx + 0x10], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x5a422]
lea	rsi, [rax + 0x28]
mov	qword ptr [rbx], rax
add	rax, 0x50
movq	xmm0, rsi
movq	xmm2, rax
punpcklqdq	xmm0, xmm2
movups	xmmword ptr [rbx + 0x10], xmm0
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rsi, rax
mov	rax, qword ptr [rip + 0x5332a]
mov	rcx, rdi
add	rax, 0x10
mov	qword ptr [rbx + 0x18], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
xor	ecx, ecx
mov	qword ptr [rbx], rbp
mov	rsi, rax
mov	qword ptr [rbx + 8], rcx
jmp	0x14006be2f
jmp	0x14006be2f
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rdi, [rip + 0x53e6a]
lea	rsi, [rcx + 0x18]
mov	rbx, rcx
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	r8d, r8d
lea	rax, [rdi + 0x28]
mov	qword ptr [rbx], rdi
mov	qword ptr [rbx + 0x18], rax
pxor	xmm0, xmm0
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0xf0], 0
mov	word ptr [rbx + 0xf8], r8w
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x100], xmm0
movups	xmmword ptr [rbx + 0x110], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x53e87]
mov	rcx, rsi
lea	rdx, [rax - 0x28]
movq	xmm1, rax
movq	xmm0, rdx
xor	edx, edx
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx + 0x10], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x5a338]
lea	rdi, [rax + 0x28]
mov	qword ptr [rbx], rax
add	rax, 0x50
movq	xmm0, rdi
movq	xmm2, rax
punpcklqdq	xmm0, xmm2
movups	xmmword ptr [rbx + 0x10], xmm0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rdi, rax
mov	rax, qword ptr [rip + 0x53241]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0x18], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rdi
call	0x14000c940
call	0x14000c940
xor	ecx, ecx
mov	qword ptr [rbx], rdi
mov	rdi, rax
mov	qword ptr [rbx + 8], rcx
jmp	0x14006bf18
jmp	0x14006bf18
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	rdi, r8
mov	qword ptr [rbx + rdx], rcx
mov	rdx, qword ptr [r8 + 8]
mov	qword ptr [rbx + 8], rdx
mov	rbp, qword ptr [rax - 0x18]
mov	rax, qword ptr [r8]
add	rbp, rbx
mov	r12, qword ptr [rax - 0x18]
mov	rcx, rbp
add	r12, r8
mov	rdx, r12
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbp + 0xd0]
mov	rcx, rbp
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [r12 + 0xd8]
mov	qword ptr [rbp + 0xe8], 0
mov	qword ptr [r12 + 0xd8], 0
mov	qword ptr [rbp + 0xd8], rax
movzx	eax, word ptr [r12 + 0xe0]
mov	word ptr [rbp + 0xe0], ax
mov	rax, qword ptr [rsi + 0x18]
mov	qword ptr [rdi + 8], 0
mov	rdx, qword ptr [rsi + 0x20]
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax + 0x10], rdx
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x28]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x30]
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	rdi, r8
mov	qword ptr [rbx + rdx], rcx
mov	rdx, r8
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi + 0x18]
mov	rdx, rdi
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
lea	rcx, [rbx + rax + 0x10]
mov	rax, qword ptr [rsi + 0x20]
mov	qword ptr [rcx], rax
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x28]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x30]
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rcx, rax
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 8]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	qword ptr [rbx + rdx], rcx
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi + 0x18]
xor	edx, edx
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
lea	rcx, [rbx + rax + 0x10]
mov	rax, qword ptr [rsi + 0x20]
mov	qword ptr [rcx], rax
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x28]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x30]
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rcx, rax
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x53b5c]
lea	rdx, [rip + 0x53ba5]
movq	xmm0, rdx
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x52fce]
mov	rbx, rcx
lea	rcx, [rcx + 0x18]
mov	qword ptr [rcx - 0x10], 0
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x53b01]
lea	rdx, [rip + 0x53b4a]
movq	xmm0, rdx
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x52f73]
add	rcx, 0x18
mov	qword ptr [rcx - 0x10], 0
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
jmp	0x1400aa330
jmp	0x1400aa330
nop	
mov	rax, qword ptr [rdx]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rax - 0x18]
mov	r8, qword ptr [rdx + 0x28]
mov	qword ptr [rcx + rax], r8
mov	rax, qword ptr [rdx + 0x30]
mov	qword ptr [rcx + 0x10], rax
mov	rax, qword ptr [rdx + 0x18]
mov	qword ptr [rcx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
mov	r8, qword ptr [rdx + 0x20]
mov	qword ptr [rcx + rax + 0x10], r8
mov	rax, qword ptr [rdx + 8]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rdx, qword ptr [rdx + 0x10]
mov	qword ptr [rcx + rax], rdx
mov	qword ptr [rcx + 8], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rsi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rbx, qword ptr [rax - 0x18]
add	rsi, rcx
mov	rdi, rcx
mov	rbp, rdx
mov	rcx, rsi
add	rbx, rdx
mov	rdx, rbx
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400ab190
call	0x1400ab190
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rsi + 0xd8]
mov	rdx, qword ptr [rbx + 0xd8]
mov	qword ptr [rsi + 0xd8], rdx
movzx	edx, byte ptr [rbx + 0xe0]
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, byte ptr [rsi + 0xe0]
mov	byte ptr [rsi + 0xe0], dl
movzx	edx, byte ptr [rbx + 0xe1]
mov	byte ptr [rbx + 0xe0], al
movzx	eax, byte ptr [rsi + 0xe1]
mov	byte ptr [rsi + 0xe1], dl
mov	rdx, qword ptr [rbp + 8]
mov	byte ptr [rbx + 0xe1], al
mov	rax, qword ptr [rdi + 8]
mov	qword ptr [rdi + 8], rdx
mov	qword ptr [rbp + 8], rax
mov	rax, rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x7b], 0
je	0x14006c3c4
je	0x14006c3c4
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x14006c3f7
je	0x14006c3f7
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
mov	ecx, 0xffffffff
lea	r11, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], rcx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x48], rcx
lea	rcx, [rsp + 0x7c]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, r11
mov	qword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x60]
call	qword ptr [r10 + 0x60]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x14006c3d8
jne	0x14006c3d8
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14006c423
jne	0x14006c423
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006c3bc
jmp	0x14006c3bc
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x7b], 0
je	0x14006c514
je	0x14006c514
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x14006c547
je	0x14006c547
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
mov	ecx, 0xffffffff
lea	r11, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], rcx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x48], rcx
lea	rcx, [rsp + 0x7c]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, r11
mov	qword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x10]
call	qword ptr [r10 + 0x10]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x14006c528
jne	0x14006c528
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14006c573
jne	0x14006c573
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006c50c
jmp	0x14006c50c
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x7b], 0
je	0x14006c664
je	0x14006c664
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x14006c697
je	0x14006c697
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
mov	ecx, 0xffffffff
lea	r11, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], rcx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x48], rcx
lea	rcx, [rsp + 0x7c]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, r11
mov	qword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x50]
call	qword ptr [r10 + 0x50]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x14006c678
jne	0x14006c678
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14006c6c3
jne	0x14006c6c3
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006c65c
jmp	0x14006c65c
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x7b], 0
je	0x14006c7b4
je	0x14006c7b4
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x14006c7e7
je	0x14006c7e7
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
mov	ecx, 0xffffffff
lea	r11, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], rcx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x48], rcx
lea	rcx, [rsp + 0x7c]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, r11
mov	qword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x58]
call	qword ptr [r10 + 0x58]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x14006c7c8
jne	0x14006c7c8
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14006c813
jne	0x14006c813
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006c7ac
jmp	0x14006c7ac
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x7b], 0
je	0x14006c904
je	0x14006c904
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x14006c937
je	0x14006c937
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
mov	ecx, 0xffffffff
lea	r11, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], rcx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x48], rcx
lea	rcx, [rsp + 0x7c]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, r11
mov	qword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x48]
call	qword ptr [r10 + 0x48]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x14006c918
jne	0x14006c918
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14006c963
jne	0x14006c963
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006c8fc
jmp	0x14006c8fc
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x7b], 0
je	0x14006ca54
je	0x14006ca54
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x14006ca87
je	0x14006ca87
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
mov	ecx, 0xffffffff
lea	r11, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], rcx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x48], rcx
lea	rcx, [rsp + 0x7c]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, r11
mov	qword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x28]
call	qword ptr [r10 + 0x28]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x14006ca68
jne	0x14006ca68
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14006cab3
jne	0x14006cab3
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006ca4c
jmp	0x14006ca4c
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x7b], 0
je	0x14006cba4
je	0x14006cba4
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x14006cbd7
je	0x14006cbd7
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
mov	ecx, 0xffffffff
lea	r11, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], rcx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x48], rcx
lea	rcx, [rsp + 0x7c]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, r11
mov	qword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x18]
call	qword ptr [r10 + 0x18]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x14006cbb8
jne	0x14006cbb8
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14006cc03
jne	0x14006cc03
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006cb9c
jmp	0x14006cb9c
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x7b], 0
je	0x14006ccf4
je	0x14006ccf4
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x14006cd27
je	0x14006cd27
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
mov	ecx, 0xffffffff
lea	r11, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], rcx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x48], rcx
lea	rcx, [rsp + 0x7c]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, r11
mov	qword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x30]
call	qword ptr [r10 + 0x30]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x14006cd08
jne	0x14006cd08
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14006cd53
jne	0x14006cd53
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006ccec
jmp	0x14006ccec
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x7b], 0
je	0x14006ce44
je	0x14006ce44
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x14006ce77
je	0x14006ce77
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
mov	ecx, 0xffffffff
lea	r11, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], rcx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x48], rcx
lea	rcx, [rsp + 0x7c]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, r11
mov	qword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x20]
call	qword ptr [r10 + 0x20]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x14006ce58
jne	0x14006ce58
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14006cea3
jne	0x14006cea3
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006ce3c
jmp	0x14006ce3c
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x7b], 0
je	0x14006cf94
je	0x14006cf94
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x14006cfc7
je	0x14006cfc7
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
mov	ecx, 0xffffffff
lea	r11, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], rcx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x48], rcx
lea	rcx, [rsp + 0x7c]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, r11
mov	qword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x38]
call	qword ptr [r10 + 0x38]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x14006cfa8
jne	0x14006cfa8
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14006cff3
jne	0x14006cff3
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006cf8c
jmp	0x14006cf8c
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x7b], 0
je	0x14006d0e4
je	0x14006d0e4
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x14006d117
je	0x14006d117
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
mov	ecx, 0xffffffff
lea	r11, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], rcx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x48], rcx
lea	rcx, [rsp + 0x7c]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, r11
mov	qword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x40]
call	qword ptr [r10 + 0x40]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x14006d0f8
jne	0x14006d0f8
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14006d143
jne	0x14006d143
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006d0dc
jmp	0x14006d0dc
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
mov	rsi, qword ptr [rcx + rax + 0xf0]
mov	rbx, rcx
mov	rbp, rdx
mov	rdi, r8
test	rsi, rsi
je	0x14006d211
je	0x14006d211
cmp	byte ptr [rsi + 0x38], 0
je	0x14006d1e0
je	0x14006d1e0
movsx	r9d, byte ptr [rsi + 0x43]
mov	r8, rdi
mov	rdx, rbp
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x14006d220
jmp	0x14006d220
nop	word ptr cs:[rax + rax]
mov	rcx, rsi
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x4ad52]
mov	r9d, 0xa
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rdx
je	0x14006d1c0
je	0x14006d1c0
mov	edx, 0xa
mov	rcx, rsi
call	rax
call	rax
movsx	r9d, al
jmp	0x14006d1c0
jmp	0x14006d1c0
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rbx, rcx
mov	rsi, rdx
mov	rbp, r8
mov	r8d, 1
mov	qword ptr [rcx + 8], 0
mov	rdx, rbx
lea	rcx, [rsp + 0x2f]
mov	r12d, r9d
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x2f], 0
jne	0x14006d2e0
jne	0x14006d2e0
test	rbp, rbp
jle	0x14006d2c8
jle	0x14006d2c8
mov	byte ptr [rsi], 0
cmp	qword ptr [rbx + 8], 0
jne	0x14006d282
jne	0x14006d282
mov	edx, 4
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
mov	rax, rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
sub	rdx, 1
mov	rcx, rax
je	0x14006d3f4
je	0x14006d3f4
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
test	rbp, rbp
jle	0x14006d2c8
jle	0x14006d2c8
mov	byte ptr [rsi], 0
nop	dword ptr [rax + rax]
cmp	qword ptr [rbx + 8], 0
je	0x14006d26b
je	0x14006d26b
mov	rax, rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
movzx	r12d, r12b
mov	rax, qword ptr [rax - 0x18]
mov	rdi, qword ptr [rbx + rax + 0xe8]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x14006d3c8
jae	0x14006d3c8
mov	rcx, qword ptr [rbx + 8]
movzx	eax, byte ptr [rax]
lea	rdx, [rcx + 1]
cmp	rdx, rbp
jge	0x14006d25c
jge	0x14006d25c
cmp	r12d, eax
jne	0x14006d34a
jne	0x14006d34a
jmp	0x14006d25c
jmp	0x14006d25c
nop	
add	rax, 1
mov	qword ptr [rdi + 0x10], rax
cmp	rax, rdx
jae	0x14006d380
jae	0x14006d380
mov	rcx, qword ptr [rbx + 8]
movzx	eax, byte ptr [rax]
lea	rdx, [rcx + 1]
cmp	rbp, rdx
jle	0x14006d25c
jle	0x14006d25c
cmp	eax, r12d
je	0x14006d25c
je	0x14006d25c
mov	byte ptr [rsi], al
mov	rax, qword ptr [rdi + 0x10]
add	rsi, 1
mov	rdx, qword ptr [rdi + 0x18]
add	qword ptr [rbx + 8], 1
cmp	rax, rdx
jb	0x14006d320
jb	0x14006d320
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	eax, -1
je	0x14006d3a0
je	0x14006d3a0
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
cmp	rax, rdx
jb	0x14006d32d
jb	0x14006d32d
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rcx, qword ptr [rbx + 8]
lea	rdx, [rcx + 1]
cmp	rdx, rbp
jge	0x14006d3e9
jge	0x14006d3e9
cmp	eax, -1
jne	0x14006d341
jne	0x14006d341
nop	dword ptr [rax + rax]
test	rbp, rbp
jle	0x14006d3a8
jle	0x14006d3a8
mov	byte ptr [rsi], 0
cmp	qword ptr [rbx + 8], 0
mov	edx, 6
je	0x14006d270
je	0x14006d270
mov	edx, 2
jmp	0x14006d270
jmp	0x14006d270
nop	word ptr [rax + rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rcx, qword ptr [rbx + 8]
lea	rdx, [rcx + 1]
cmp	rbp, rdx
jle	0x14006d3e9
jle	0x14006d3e9
cmp	eax, -1
jne	0x14006d315
jne	0x14006d315
jmp	0x14006d3a0
jmp	0x14006d3a0
cmp	eax, -1
jne	0x14006d25c
jne	0x14006d25c
jmp	0x14006d3a0
jmp	0x14006d3a0
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
mov	rsi, qword ptr [rcx + rax + 0xf0]
mov	rbx, rcx
mov	rdi, rdx
test	rsi, rsi
je	0x14006d4b1
je	0x14006d4b1
cmp	byte ptr [rsi + 0x38], 0
je	0x14006d480
je	0x14006d480
movsx	r8d, byte ptr [rsi + 0x43]
mov	rdx, rdi
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14006d4c0
jmp	0x14006d4c0
nop	
mov	rcx, rsi
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x4aff2]
mov	r8d, 0xa
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rdx
je	0x14006d46c
je	0x14006d46c
mov	edx, 0xa
mov	rcx, rsi
call	rax
call	rax
movsx	r8d, al
jmp	0x14006d46c
jmp	0x14006d46c
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	qword ptr [rcx + 8], 0
mov	rdi, rcx
mov	rbx, rdx
mov	ebp, r8d
lea	rcx, [rsp + 0x2f]
mov	r8d, 1
mov	rdx, rdi
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x2f], 0
jne	0x14006d528
jne	0x14006d528
cmp	qword ptr [rdi + 8], 0
jne	0x14006d513
jne	0x14006d513
mov	edx, 4
mov	rax, qword ptr [rdi]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rdi
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
mov	rax, rdi
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
movzx	ebp, bpl
mov	rax, qword ptr [rax - 0x18]
mov	rsi, qword ptr [rdi + rax + 0xe8]
mov	rax, qword ptr [rsi + 0x10]
cmp	rax, qword ptr [rsi + 0x18]
jae	0x14006d628
jae	0x14006d628
movzx	eax, byte ptr [rax]
mov	edx, eax
xor	r12d, r12d
cmp	ebp, eax
jne	0x14006d58f
jne	0x14006d58f
jmp	0x14006d668
jmp	0x14006d668
nop	word ptr [rax + rax]
mov	byte ptr [rax], dl
add	qword ptr [rbx + 0x28], 1
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, qword ptr [rsi + 0x18]
add	r12, 1
cmp	rax, rdx
jae	0x14006d5c0
jae	0x14006d5c0
add	rax, 1
mov	qword ptr [rsi + 0x10], rax
cmp	rax, rdx
jae	0x14006d5e0
jae	0x14006d5e0
movzx	edx, byte ptr [rax]
movzx	eax, dl
cmp	ebp, eax
je	0x14006d5a7
je	0x14006d5a7
mov	rax, qword ptr [rbx + 0x28]
cmp	rax, qword ptr [rbx + 0x30]
jb	0x14006d560
jb	0x14006d560
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	eax, -1
jne	0x14006d567
jne	0x14006d567
test	r12, r12
js	0x14006d610
js	0x14006d610
mov	qword ptr [rdi + 8], r12
jne	0x14006d513
jne	0x14006d513
jmp	0x14006d4fc
jmp	0x14006d4fc
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	eax, -1
je	0x14006d5f8
je	0x14006d5f8
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, qword ptr [rsi + 0x18]
cmp	rax, rdx
jb	0x14006d585
jb	0x14006d585
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, al
cmp	eax, -1
jne	0x14006d58b
jne	0x14006d58b
nop	dword ptr [rax]
test	r12, r12
js	0x14006d658
js	0x14006d658
mov	qword ptr [rdi + 8], r12
je	0x14006d648
je	0x14006d648
mov	edx, 2
jmp	0x14006d501
jmp	0x14006d501
nop	dword ptr [rax]
movabs	rax, 0x7fffffffffffffff
mov	qword ptr [rdi + 8], rax
jmp	0x14006d513
jmp	0x14006d513
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	edx, al
cmp	eax, -1
jne	0x14006d54e
jne	0x14006d54e
mov	qword ptr [rdi + 8], 0
nop	dword ptr [rax]
mov	edx, 6
jmp	0x14006d501
jmp	0x14006d501
nop	word ptr [rax + rax]
movabs	rax, 0x7fffffffffffffff
mov	qword ptr [rdi + 8], rax
jmp	0x14006d603
jmp	0x14006d603
mov	qword ptr [rdi + 8], 0
jmp	0x14006d4fc
jmp	0x14006d4fc
sub	rdx, 1
mov	rcx, rax
jne	0x14006d69c
jne	0x14006d69c
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rdi]
mov	edx, 1
add	rdi, qword ptr [rax - 0x18]
mov	rcx, rdi
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rdi]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rdi
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006d4f5
jmp	0x14006d4f5
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	r8d, 1
mov	qword ptr [rcx + 8], 0
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x2f]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x2f], 0
jne	0x14006d740
jne	0x14006d740
cmp	qword ptr [rbx + 8], 0
jne	0x14006d72c
jne	0x14006d72c
mov	edx, 4
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rdx, qword ptr [rcx + 0x10]
cmp	rdx, qword ptr [rcx + 0x18]
jae	0x14006d770
jae	0x14006d770
movzx	eax, byte ptr [rdx]
add	rdx, 1
mov	qword ptr [rcx + 0x10], rdx
mov	qword ptr [rbx + 8], 1
mov	byte ptr [rsi], al
jmp	0x14006d70e
jmp	0x14006d70e
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	eax, -1
jne	0x14006d764
jne	0x14006d764
cmp	qword ptr [rbx + 8], 1
sbb	edx, edx
and	edx, 4
add	edx, 2
jmp	0x14006d71a
jmp	0x14006d71a
sub	rdx, 1
mov	rcx, rax
jne	0x14006d7b1
jne	0x14006d7b1
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
cmp	qword ptr [rbx + 8], 0
je	0x14006d715
je	0x14006d715
jmp	0x14006d72c
jmp	0x14006d72c
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
push	rbx
sub	rsp, 0x30
mov	r8d, 1
mov	qword ptr [rcx + 8], 0
mov	rbx, rcx
lea	rcx, [rsp + 0x2f]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x2f], 0
je	0x14006d8c0
je	0x14006d8c0
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rdx, qword ptr [rcx + 0x10]
cmp	rdx, qword ptr [rcx + 0x18]
jae	0x14006d860
jae	0x14006d860
movzx	eax, byte ptr [rdx]
add	rdx, 1
mov	qword ptr [rcx + 0x10], rdx
mov	qword ptr [rbx + 8], 1
add	rsp, 0x30
pop	rbx
ret	
ret	
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	eax, -1
jne	0x14006d852
jne	0x14006d852
cmp	qword ptr [rbx + 8], 1
sbb	edx, edx
and	edx, 4
add	edx, 2
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
or	edx, dword ptr [rbx + 0x20]
call	0x1400ab490
call	0x1400ab490
mov	eax, 0xffffffff
jmp	0x14006d85a
jmp	0x14006d85a
sub	rdx, 1
mov	rcx, rax
je	0x14006d8ce
je	0x14006d8ce
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
cmp	qword ptr [rbx + 8], 0
jne	0x14006d892
jne	0x14006d892
mov	edx, 4
jmp	0x14006d880
jmp	0x14006d880
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x40
mov	r8d, 1
mov	qword ptr [rcx + 8], 0
mov	rbx, rcx
lea	rcx, [rsp + 0x3f]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x3f], 0
je	0x14006d9b8
je	0x14006d9b8
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14006d960
jae	0x14006d960
movzx	eax, byte ptr [rax]
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x14006d956
jne	0x14006d956
mov	rdx, qword ptr [rbx]
mov	dword ptr [rsp + 0x2c], eax
add	rbx, qword ptr [rdx - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 2
call	0x1400ab490
call	0x1400ab490
mov	eax, dword ptr [rsp + 0x2c]
jmp	0x14006d956
jmp	0x14006d956
sub	rdx, 1
mov	rcx, rax
je	0x14006d9bf
je	0x14006d9bf
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
nop	dword ptr [rax]
mov	eax, 0xffffffff
jmp	0x14006d956
jmp	0x14006d956
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	qword ptr [rcx + 8], 0
mov	rbx, rcx
mov	rdi, rdx
mov	rsi, r8
lea	rcx, [rsp + 0x2f]
mov	r8d, 1
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x2f], 0
je	0x14006da56
je	0x14006da56
mov	rax, qword ptr [rbx]
mov	r8, rsi
mov	rdx, rdi
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	qword ptr [rbx + 8], rax
cmp	rsi, rax
jne	0x14006da68
jne	0x14006da68
mov	rax, rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 6
call	0x1400ab490
call	0x1400ab490
mov	rax, rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
sub	rdx, 1
mov	rcx, rax
jne	0x14006daaf
jne	0x14006daaf
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006da56
jmp	0x14006da56
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rsi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rbx, qword ptr [rax - 0x18]
add	rsi, rcx
mov	rbp, rcx
mov	rdi, rdx
mov	rcx, rsi
add	rbx, rdx
mov	rdx, rbx
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400ab190
call	0x1400ab190
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rsi + 0xd8]
mov	rdx, qword ptr [rbx + 0xd8]
mov	qword ptr [rsi + 0xd8], rdx
movzx	edx, byte ptr [rbx + 0xe0]
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, byte ptr [rsi + 0xe0]
mov	byte ptr [rsi + 0xe0], dl
movzx	edx, byte ptr [rbx + 0xe1]
mov	byte ptr [rbx + 0xe0], al
movzx	eax, byte ptr [rsi + 0xe1]
mov	byte ptr [rsi + 0xe1], dl
mov	rdx, qword ptr [rdi + 8]
mov	byte ptr [rbx + 0xe1], al
mov	rax, qword ptr [rbp + 8]
mov	qword ptr [rbp + 8], rdx
mov	qword ptr [rdi + 8], rax
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	r8d, 1
mov	rbx, rcx
lea	rcx, [rsp + 0x2f]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x2f], 0
je	0x14006dc10
je	0x14006dc10
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
test	rcx, rcx
je	0x14006dc10
je	0x14006dc10
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14006dbf9
je	0x14006dbf9
xor	eax, eax
add	rsp, 0x30
pop	rbx
ret	
ret	
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 1
call	0x1400ab490
call	0x1400ab490
nop	
mov	eax, 0xffffffff
jmp	0x14006dbf3
jmp	0x14006dbf3
sub	rdx, 1
mov	rcx, rax
jne	0x14006dc3e
jne	0x14006dc3e
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006dc10
jmp	0x14006dc10
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
push	rbx
sub	rsp, 0x60
movups	xmmword ptr [rsp + 0x50], xmm6
mov	rax, qword ptr [rcx]
movdqu	xmm6, xmmword ptr [rdx]
mov	rbx, rcx
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
and	edx, 0xfffffffd
call	0x1400ab490
call	0x1400ab490
lea	rcx, [rsp + 0x4f]
mov	r8d, 1
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x4f], 0
je	0x14006dcfa
je	0x14006dcfa
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
test	byte ptr [rdx + 0x20], 5
jne	0x14006dcfa
jne	0x14006dcfa
lea	rcx, [rsp + 0x30]
mov	r9d, 8
lea	r8, [rsp + 0x20]
mov	rdx, qword ptr [rdx + 0xe8]
movups	xmmword ptr [rsp + 0x20], xmm6
mov	rax, qword ptr [rdx]
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
cmp	qword ptr [rsp + 0x30], -1
je	0x14006dd10
je	0x14006dd10
movups	xmm6, xmmword ptr [rsp + 0x50]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
jmp	0x14006dcfa
jmp	0x14006dcfa
sub	rdx, 1
mov	rcx, rax
jne	0x14006dd4e
jne	0x14006dd4e
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006dcfa
jmp	0x14006dcfa
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x50
mov	rax, qword ptr [rcx]
mov	rbx, rcx
mov	rcx, qword ptr [rax - 0x18]
mov	rdi, rdx
mov	esi, r8d
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
and	edx, 0xfffffffd
call	0x1400ab490
call	0x1400ab490
lea	rcx, [rsp + 0x4f]
mov	r8d, 1
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x4f], 0
je	0x14006de07
je	0x14006de07
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
test	byte ptr [rdx + 0x20], 5
jne	0x14006de07
jne	0x14006de07
mov	rdx, qword ptr [rdx + 0xe8]
lea	rcx, [rsp + 0x30]
mov	r9d, esi
mov	r8, rdi
mov	rax, qword ptr [rdx]
mov	dword ptr [rsp + 0x20], 8
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	qword ptr [rsp + 0x30], -1
je	0x14006de18
je	0x14006de18
mov	rax, rbx
add	rsp, 0x50
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
jmp	0x14006de07
jmp	0x14006de07
sub	rdx, 1
mov	rcx, rax
jne	0x14006de56
jne	0x14006de56
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006de07
jmp	0x14006de07
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x58
mov	r8d, 1
mov	qword ptr [rcx], 0xffffffffffffffff
mov	rbx, rcx
mov	rsi, rdx
mov	dword ptr [rcx + 8], 0
lea	rcx, [rsp + 0x4f]
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x4f], 0
je	0x14006df18
je	0x14006df18
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rsi
test	byte ptr [rdx + 0x20], 5
jne	0x14006df18
jne	0x14006df18
mov	rdx, qword ptr [rdx + 0xe8]
lea	rcx, [rsp + 0x30]
mov	r9d, 1
xor	r8d, r8d
mov	rax, qword ptr [rdx]
mov	dword ptr [rsp + 0x20], 8
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rsp + 0x30], rax
mov	qword ptr [rbx], rax
mov	eax, dword ptr [rsp + 0x38]
mov	dword ptr [rbx + 8], eax
mov	rax, rbx
add	rsp, 0x58
pop	rbx
pop	rsi
ret	
ret	
sub	rdx, 1
mov	rcx, rax
jne	0x14006df49
jne	0x14006df49
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	edx, 1
add	rsi, qword ptr [rax - 0x18]
mov	rcx, rsi
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	edx, 1
add	rsi, qword ptr [rax - 0x18]
mov	rcx, rsi
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006df18
jmp	0x14006df18
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rcx]
mov	rbx, rcx
mov	qword ptr [rcx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
and	edx, 0xfffffffd
call	0x1400ab490
call	0x1400ab490
lea	rcx, [rsp + 0x2f]
mov	r8d, 1
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x2f], 0
je	0x14006dffa
je	0x14006dffa
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rcx, qword ptr [rdx + 0xe8]
mov	rax, rdx
test	rcx, rcx
je	0x14006e025
je	0x14006e025
mov	rax, qword ptr [rcx + 0x10]
cmp	qword ptr [rcx + 8], rax
jae	0x14006e008
jae	0x14006e008
sub	rax, 1
mov	qword ptr [rcx + 0x10], rax
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
mov	edx, 0xffffffff
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
cmp	eax, -1
jne	0x14006dffa
jne	0x14006dffa
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	edx, dword ptr [rax + 0x20]
mov	rcx, rax
or	edx, 1
call	0x1400ab490
call	0x1400ab490
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
sub	rdx, 1
mov	rcx, rax
jne	0x14006e063
jne	0x14006e063
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006dffa
jmp	0x14006dffa
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	r8d, 1
mov	qword ptr [rcx + 8], 0
mov	rbx, rcx
lea	rcx, [rsp + 0x2f]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x2f], 0
jne	0x14006e0e8
jne	0x14006e0e8
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x14006e120
jae	0x14006e120
add	rax, 1
mov	qword ptr [rcx + 0x10], rax
mov	rax, rbx
mov	qword ptr [rbx + 8], 1
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	eax, -1
jne	0x14006e109
jne	0x14006e109
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 2
call	0x1400ab490
call	0x1400ab490
jmp	0x14006e0da
jmp	0x14006e0da
sub	rdx, 1
mov	rcx, rax
jne	0x14006e169
jne	0x14006e169
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006e0da
jmp	0x14006e0da
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rsi, rcx
mov	rbx, rdx
cmp	rdx, 1
je	0x14006e210
je	0x14006e210
mov	qword ptr [rcx + 8], 0
mov	r8d, 1
lea	rcx, [rsp + 0x2f]
mov	rdx, rsi
call	0x14006e7d0
call	0x14006e7d0
test	rbx, rbx
jle	0x14006e1f4
jle	0x14006e1f4
movzx	ebp, byte ptr [rsp + 0x2f]
test	bpl, bpl
jne	0x14006e228
jne	0x14006e228
mov	rax, rsi
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	word ptr cs:[rax + rax]
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
jmp	0x14006e0b0
jmp	0x14006e0b0
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsi]
mov	rax, qword ptr [rax - 0x18]
mov	rdi, qword ptr [rsi + rax + 0xe8]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x14006e378
jae	0x14006e378
movzx	eax, byte ptr [rax]
movabs	r13, 0x7fffffffffffffff
xor	r12d, r12d
movabs	r14, 0x8000000000000000
mov	rdx, qword ptr [rsi + 8]
cmp	rdx, rbx
jge	0x14006e2a0
jge	0x14006e2a0
cmp	eax, -1
jne	0x14006e2bf
jne	0x14006e2bf
movabs	rax, 0x7fffffffffffffff
cmp	rbx, rax
jne	0x14006e285
jne	0x14006e285
test	r12b, r12b
je	0x14006e285
je	0x14006e285
mov	qword ptr [rsi + 8], rbx
mov	rax, qword ptr [rsi]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
mov	edx, dword ptr [rcx + 0x20]
or	edx, 2
call	0x1400ab490
call	0x1400ab490
jmp	0x14006e1f4
jmp	0x14006e1f4
nop	
cmp	rbx, r13
jne	0x14006e1f4
jne	0x14006e1f4
cmp	eax, -1
je	0x14006e3a8
je	0x14006e3a8
movabs	rdx, 0x8000000000000000
mov	r12d, ebp
mov	r8, qword ptr [rdi + 0x18]
jmp	0x14006e2fa
jmp	0x14006e2fa
nop	dword ptr [rax]
add	rax, rcx
add	rdx, rcx
mov	qword ptr [rdi + 0x10], rax
mov	qword ptr [rsi + 8], rdx
cmp	rax, r8
jae	0x14006e350
jae	0x14006e350
cmp	rdx, rbx
jl	0x14006e2fa
jl	0x14006e2fa
cmp	rbx, r13
jne	0x14006e1f4
jne	0x14006e1f4
mov	qword ptr [rsi + 8], r14
mov	r12d, ebp
movabs	rdx, 0x8000000000000000
mov	rax, qword ptr [rdi + 0x10]
mov	rcx, rbx
mov	r9, r8
sub	rcx, rdx
sub	r9, rax
cmp	rcx, r9
cmovg	rcx, r9
cmp	rcx, 1
jg	0x14006e2c8
jg	0x14006e2c8
add	rdx, 1
mov	qword ptr [rsi + 8], rdx
cmp	rax, r8
jae	0x14006e360
jae	0x14006e360
add	rax, 1
mov	qword ptr [rdi + 0x10], rax
cmp	rax, r8
jae	0x14006e350
jae	0x14006e350
mov	rdx, qword ptr [rsi + 8]
cmp	rbx, rdx
jg	0x14006e2fa
jg	0x14006e2fa
movabs	rax, 0x7fffffffffffffff
cmp	rbx, rax
je	0x14006e2e9
je	0x14006e2e9
jmp	0x14006e1f4
jmp	0x14006e1f4
nop	
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14006e25f
jmp	0x14006e25f
nop	
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	eax, -1
je	0x14006e386
je	0x14006e386
mov	rax, qword ptr [rdi + 0x10]
mov	r8, qword ptr [rdi + 0x18]
jmp	0x14006e32c
jmp	0x14006e32c
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14006e248
jmp	0x14006e248
cmp	rbx, qword ptr [rsi + 8]
jg	0x14006e26d
jg	0x14006e26d
movabs	rax, 0x7fffffffffffffff
cmp	rbx, rax
jne	0x14006e1f4
jne	0x14006e1f4
nop	dword ptr [rax + rax]
test	r12b, r12b
je	0x14006e285
je	0x14006e285
movabs	rax, 0x7fffffffffffffff
mov	qword ptr [rsi + 8], rax
jmp	0x14006e285
jmp	0x14006e285
sub	rdx, 1
mov	rcx, rax
jne	0x14006e3eb
jne	0x14006e3eb
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	edx, 1
add	rsi, qword ptr [rax - 0x18]
mov	rcx, rsi
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006e1f4
jmp	0x14006e1f4
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x68
mov	rbx, rcx
mov	rsi, rdx
mov	edi, r8d
cmp	r8d, -1
je	0x14006e490
je	0x14006e490
mov	qword ptr [rcx + 8], 0
mov	r8d, 1
lea	rcx, [rsp + 0x5f]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
test	rsi, rsi
jle	0x14006e479
jle	0x14006e479
movzx	ebp, byte ptr [rsp + 0x5f]
test	bpl, bpl
jne	0x14006e4a8
jne	0x14006e4a8
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
add	rsp, 0x68
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
jmp	0x14006e1b0
jmp	0x14006e1b0
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	byte ptr [rsp + 0x4f], dil
mov	rax, qword ptr [rax - 0x18]
mov	r12, qword ptr [rbx + rax + 0xe8]
mov	rax, qword ptr [r12 + 0x10]
cmp	rax, qword ptr [r12 + 0x18]
jae	0x14006e6af
jae	0x14006e6af
movzx	eax, byte ptr [rax]
movabs	r15, 0x7fffffffffffffff
xor	r13d, r13d
movabs	r14, 0x8000000000000000
mov	r9, qword ptr [rbx + 8]
cmp	r9, rsi
jge	0x14006e640
jge	0x14006e640
cmp	eax, -1
jne	0x14006e5e2
jne	0x14006e5e2
movabs	rax, 0x7fffffffffffffff
cmp	rsi, rax
jne	0x14006e514
jne	0x14006e514
test	r13b, r13b
je	0x14006e514
je	0x14006e514
mov	qword ptr [rbx + 8], rsi
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 2
call	0x1400ab490
call	0x1400ab490
jmp	0x14006e479
jmp	0x14006e479
nop	
mov	r10, qword ptr [r12 + 0x18]
mov	rcx, qword ptr [r12 + 0x10]
mov	r8, rsi
sub	r8, r9
mov	rax, r10
sub	rax, rcx
cmp	r8, rax
cmovg	r8, rax
cmp	r8, 1
jle	0x14006e670
jle	0x14006e670
movsx	edx, byte ptr [rsp + 0x4f]
mov	qword ptr [rsp + 0x40], r10
mov	qword ptr [rsp + 0x38], r9
mov	qword ptr [rsp + 0x30], r8
mov	qword ptr [rsp + 0x28], rcx
call	0x140015988
call	0x140015988
mov	rcx, qword ptr [rsp + 0x28]
mov	r8, qword ptr [rsp + 0x30]
mov	rdx, rax
mov	r9, qword ptr [rsp + 0x38]
mov	r10, qword ptr [rsp + 0x40]
sub	rdx, rcx
test	rax, rax
cmovne	r8, rdx
add	rcx, r8
add	r9, r8
mov	qword ptr [r12 + 0x10], rcx
mov	qword ptr [rbx + 8], r9
cmp	rcx, r10
jae	0x14006e6a0
jae	0x14006e6a0
movzx	eax, byte ptr [rcx]
cmp	r9, rsi
jl	0x14006e5e2
jl	0x14006e5e2
movabs	rdx, 0x7fffffffffffffff
cmp	rsi, rdx
jne	0x14006e479
jne	0x14006e479
cmp	edi, eax
je	0x14006e73d
je	0x14006e73d
mov	qword ptr [rbx + 8], r14
mov	r13d, ebp
movabs	r9, 0x8000000000000000
cmp	edi, eax
jne	0x14006e530
jne	0x14006e530
movabs	rax, 0x7fffffffffffffff
cmp	rsi, rax
je	0x14006e721
je	0x14006e721
cmp	rsi, r9
jle	0x14006e479
jle	0x14006e479
nop	word ptr cs:[rax + rax]
add	r9, 1
mov	qword ptr [rbx + 8], r9
mov	rax, qword ptr [r12 + 0x10]
cmp	rax, qword ptr [r12 + 0x18]
jae	0x14006e712
jae	0x14006e712
add	rax, 1
mov	qword ptr [r12 + 0x10], rax
jmp	0x14006e479
jmp	0x14006e479
nop	word ptr cs:[rax + rax]
cmp	rsi, r15
jne	0x14006e479
jne	0x14006e479
cmp	eax, -1
je	0x14006e6f6
je	0x14006e6f6
cmp	eax, edi
je	0x14006e73d
je	0x14006e73d
mov	qword ptr [rbx + 8], r14
mov	r13d, ebp
movabs	r9, 0x8000000000000000
jmp	0x14006e5e2
jmp	0x14006e5e2
add	r9, 1
mov	qword ptr [rbx + 8], r9
cmp	rcx, r10
jae	0x14006e6be
jae	0x14006e6be
add	rcx, 1
mov	qword ptr [r12 + 0x10], rcx
cmp	rcx, r10
jae	0x14006e6a0
jae	0x14006e6a0
mov	r9, qword ptr [rbx + 8]
movzx	eax, byte ptr [rcx]
cmp	rsi, r9
jg	0x14006e5e2
jg	0x14006e5e2
jmp	0x14006e5b6
jmp	0x14006e5b6
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14006e4e6
jmp	0x14006e4e6
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14006e4cf
jmp	0x14006e4cf
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	eax, -1
je	0x14006e6d9
je	0x14006e6d9
mov	rcx, qword ptr [r12 + 0x10]
mov	r10, qword ptr [r12 + 0x18]
jmp	0x14006e686
jmp	0x14006e686
cmp	qword ptr [rbx + 8], rsi
jl	0x14006e4fc
jl	0x14006e4fc
movabs	rax, 0x7fffffffffffffff
cmp	rsi, rax
jne	0x14006e479
jne	0x14006e479
test	r13b, r13b
je	0x14006e514
je	0x14006e514
movabs	rax, 0x7fffffffffffffff
mov	qword ptr [rbx + 8], rax
jmp	0x14006e514
jmp	0x14006e514
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x14006e479
jmp	0x14006e479
test	r13b, r13b
je	0x14006e610
je	0x14006e610
movabs	rax, 0x7fffffffffffffff
mov	qword ptr [rbx + 8], rax
jmp	0x14006e618
jmp	0x14006e618
test	r13b, r13b
jne	0x14006e72a
jne	0x14006e72a
movabs	rax, 0x7fffffffffffffff
cmp	r9, rax
jne	0x14006e610
jne	0x14006e610
jmp	0x14006e618
jmp	0x14006e618
sub	rdx, 1
mov	rcx, rax
jne	0x14006e781
jne	0x14006e781
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006e479
jmp	0x14006e479
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	byte ptr [rcx], 0
mov	rsi, rcx
mov	rcx, qword ptr [rax - 0x18]
mov	rbx, rdx
mov	edi, r8d
add	rcx, rdx
mov	edx, dword ptr [rcx + 0x20]
test	edx, edx
jne	0x14006e825
jne	0x14006e825
mov	rax, qword ptr [rcx + 0xd8]
test	rax, rax
je	0x14006e838
je	0x14006e838
mov	rcx, rax
call	0x14006fd10
call	0x14006fd10
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
test	dil, dil
jne	0x14006e81e
jne	0x14006e81e
test	byte ptr [rcx + 0x19], 0x10
jne	0x14006e850
jne	0x14006e850
mov	edx, dword ptr [rcx + 0x20]
test	edx, edx
je	0x14006e843
je	0x14006e843
or	edx, 4
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x1400ab490
jmp	0x1400ab490
nop	dword ptr [rax]
test	r8b, r8b
jne	0x14006e843
jne	0x14006e843
test	byte ptr [rcx + 0x19], 0x10
jne	0x14006e850
jne	0x14006e850
mov	byte ptr [rsi], 1
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
mov	rdi, qword ptr [rcx + 0xe8]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x14006e903
jae	0x14006e903
mov	rbp, qword ptr [rcx + 0xf0]
movzx	eax, byte ptr [rax]
test	rbp, rbp
je	0x14006e92d
je	0x14006e92d
mov	rdx, qword ptr [rbp + 0x30]
movzx	eax, al
test	byte ptr [rdx + rax*2], 0x20
je	0x14006e8af
je	0x14006e8af
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
cmp	rax, rdx
jae	0x14006e8c0
jae	0x14006e8c0
add	rax, 1
mov	qword ptr [rdi + 0x10], rax
cmp	rax, rdx
jae	0x14006e8e0
jae	0x14006e8e0
movzx	eax, byte ptr [rax]
mov	rdx, qword ptr [rbp + 0x30]
movzx	eax, al
test	byte ptr [rdx + rax*2], 0x20
jne	0x14006e885
jne	0x14006e885
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
jmp	0x14006e81e
jmp	0x14006e81e
nop	
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	eax, -1
je	0x14006e8ee
je	0x14006e8ee
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
jmp	0x14006e89a
jmp	0x14006e89a
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x14006e878
jne	0x14006e878
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 2
jmp	0x14006e825
jmp	0x14006e825
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
mov	rbp, qword ptr [rcx + 0xf0]
test	rbp, rbp
je	0x14006e92d
je	0x14006e92d
cmp	eax, -1
jne	0x14006e878
jne	0x14006e878
jmp	0x14006e8f8
jmp	0x14006e8f8
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14006e959
jne	0x14006e959
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006e8af
jmp	0x14006e8af
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	byte ptr [rcx], 0
mov	rsi, rcx
mov	rcx, qword ptr [rax - 0x18]
mov	rbx, rdx
mov	edi, r8d
add	rcx, rdx
mov	edx, dword ptr [rcx + 0x20]
test	edx, edx
jne	0x14006e9f5
jne	0x14006e9f5
mov	rax, qword ptr [rcx + 0xd8]
test	rax, rax
je	0x14006ea08
je	0x14006ea08
mov	rcx, rax
call	0x14006fd10
call	0x14006fd10
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
test	dil, dil
jne	0x14006e9ee
jne	0x14006e9ee
test	byte ptr [rcx + 0x19], 0x10
jne	0x14006ea20
jne	0x14006ea20
mov	edx, dword ptr [rcx + 0x20]
test	edx, edx
je	0x14006ea13
je	0x14006ea13
or	edx, 4
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x1400ab490
jmp	0x1400ab490
nop	dword ptr [rax]
test	r8b, r8b
jne	0x14006ea13
jne	0x14006ea13
test	byte ptr [rcx + 0x19], 0x10
jne	0x14006ea20
jne	0x14006ea20
mov	byte ptr [rsi], 1
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
mov	rdi, qword ptr [rcx + 0xe8]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x14006ead3
jae	0x14006ead3
mov	rbp, qword ptr [rcx + 0xf0]
movzx	eax, byte ptr [rax]
test	rbp, rbp
je	0x14006eafd
je	0x14006eafd
mov	rdx, qword ptr [rbp + 0x30]
movzx	eax, al
test	byte ptr [rdx + rax*2], 0x20
je	0x14006ea7f
je	0x14006ea7f
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
cmp	rax, rdx
jae	0x14006ea90
jae	0x14006ea90
add	rax, 1
mov	qword ptr [rdi + 0x10], rax
cmp	rax, rdx
jae	0x14006eab0
jae	0x14006eab0
movzx	eax, byte ptr [rax]
mov	rdx, qword ptr [rbp + 0x30]
movzx	eax, al
test	byte ptr [rdx + rax*2], 0x20
jne	0x14006ea55
jne	0x14006ea55
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
jmp	0x14006e9ee
jmp	0x14006e9ee
nop	
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	eax, -1
je	0x14006eabe
je	0x14006eabe
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
jmp	0x14006ea6a
jmp	0x14006ea6a
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x14006ea48
jne	0x14006ea48
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 2
jmp	0x14006e9f5
jmp	0x14006e9f5
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
mov	rbp, qword ptr [rcx + 0xf0]
test	rbp, rbp
je	0x14006eafd
je	0x14006eafd
cmp	eax, -1
jne	0x14006ea48
jne	0x14006ea48
jmp	0x14006eac8
jmp	0x14006eac8
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14006eb29
jne	0x14006eb29
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006ea7f
jmp	0x14006ea7f
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
mov	rsi, qword ptr [rcx + rax + 0xf0]
mov	rbx, rcx
mov	rbp, rdx
mov	rdi, r8
test	rsi, rsi
je	0x14006ebf1
je	0x14006ebf1
cmp	byte ptr [rsi + 0x38], 0
je	0x14006ebc0
je	0x14006ebc0
movsx	r9d, byte ptr [rsi + 0x43]
mov	r8, rdi
mov	rdx, rbp
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x14006ec00
jmp	0x14006ec00
nop	word ptr cs:[rax + rax]
mov	rcx, rsi
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x4c732]
mov	r9d, 0xa
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rdx
je	0x14006eba0
je	0x14006eba0
mov	edx, 0xa
mov	rcx, rsi
call	rax
call	rax
movsx	r9d, al
jmp	0x14006eba0
jmp	0x14006eba0
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
mov	rsi, rcx
mov	r12, rdx
mov	rbp, r8
mov	r8d, 1
mov	qword ptr [rcx + 8], 0
mov	rdx, rsi
lea	rcx, [rsp + 0x3f]
mov	r13d, r9d
mov	byte ptr [rsp + 0x2c], r9b
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x3f], 0
jne	0x14006ecd0
jne	0x14006ecd0
test	rbp, rbp
jle	0x14006ecc0
jle	0x14006ecc0
mov	byte ptr [r12], 0
cmp	qword ptr [rsi + 8], 0
jne	0x14006ec6f
jne	0x14006ec6f
mov	edx, 4
mov	rax, qword ptr [rsi]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
mov	rax, rsi
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
mov	rcx, rax
mov	r15, r12
mov	rax, rdx
sub	rax, 1
je	0x14006ef43
je	0x14006ef43
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
test	rbp, rbp
jle	0x14006ecc0
jle	0x14006ecc0
mov	byte ptr [r15], 0
nop	dword ptr [rax]
cmp	qword ptr [rsi + 8], 0
jne	0x14006ec6f
jne	0x14006ec6f
jmp	0x14006ec58
jmp	0x14006ec58
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
movzx	r13d, r13b
mov	rax, qword ptr [rax - 0x18]
mov	rdi, qword ptr [rsi + rax + 0xe8]
mov	r14, qword ptr [rdi + 0x10]
mov	r15, qword ptr [rdi + 0x18]
cmp	r14, r15
jae	0x14006eee0
jae	0x14006eee0
mov	rbx, qword ptr [rsi + 8]
movzx	edx, byte ptr [r14]
lea	rax, [rbx + 1]
cmp	rbp, rax
jle	0x14006edd8
jle	0x14006edd8
movsx	ecx, byte ptr [rsp + 0x2c]
mov	dword ptr [rsp + 0x2c], ecx
cmp	r13d, edx
jne	0x14006ed73
jne	0x14006ed73
jmp	0x14006eea8
jmp	0x14006eea8
nop	dword ptr [rax]
mov	edx, dword ptr [rsp + 0x2c]
mov	r8, rbx
mov	rcx, r14
call	0x140015988
call	0x140015988
test	rax, rax
je	0x14006edf8
je	0x14006edf8
sub	rax, r14
mov	rbx, rax
jne	0x14006edf8
jne	0x14006edf8
add	rbx, qword ptr [rsi + 8]
mov	qword ptr [rdi + 0x10], r14
mov	qword ptr [rsi + 8], rbx
cmp	r14, r15
jae	0x14006ee20
jae	0x14006ee20
lea	rax, [rbx + 1]
movzx	edx, byte ptr [r14]
cmp	rbp, rax
jle	0x14006edd8
jle	0x14006edd8
cmp	edx, r13d
je	0x14006edd8
je	0x14006edd8
mov	r15, qword ptr [rdi + 0x18]
mov	r14, qword ptr [rdi + 0x10]
mov	rax, rbp
sub	rax, rbx
mov	rbx, r15
sub	rax, 1
sub	rbx, r14
cmp	rax, rbx
cmovle	rbx, rax
cmp	rbx, 1
jg	0x14006ed20
jg	0x14006ed20
mov	byte ptr [r12], dl
mov	rax, qword ptr [rdi + 0x10]
lea	r15, [r12 + 1]
mov	rdx, qword ptr [rdi + 0x18]
add	qword ptr [rsi + 8], 1
cmp	rax, rdx
jae	0x14006ee70
jae	0x14006ee70
add	rax, 1
mov	qword ptr [rdi + 0x10], rax
cmp	rax, rdx
jae	0x14006ee90
jae	0x14006ee90
mov	rbx, qword ptr [rsi + 8]
movzx	edx, byte ptr [rax]
mov	r12, r15
lea	rax, [rbx + 1]
cmp	rbp, rax
jg	0x14006ed66
jg	0x14006ed66
nop	dword ptr [rax + rax]
cmp	r13d, edx
je	0x14006eea0
je	0x14006eea0
test	rbp, rbp
jle	0x14006ec58
jle	0x14006ec58
mov	byte ptr [r12], 0
jmp	0x14006ec58
jmp	0x14006ec58
nop	dword ptr [rax]
mov	rdx, r14
mov	rcx, r12
mov	r8, rbx
add	r12, rbx
call	0x140015998
call	0x140015998
mov	r14, qword ptr [rdi + 0x10]
mov	r15, qword ptr [rdi + 0x18]
add	r14, rbx
jmp	0x14006ed44
jmp	0x14006ed44
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, eax
mov	rbx, qword ptr [rsi + 8]
lea	rax, [rbx + 1]
cmp	rax, rbp
jge	0x14006ef0e
jge	0x14006ef0e
cmp	edx, -1
jne	0x14006ed66
jne	0x14006ed66
test	rbp, rbp
jle	0x14006ee4f
jle	0x14006ee4f
mov	byte ptr [r12], 0
cmp	qword ptr [rsi + 8], 0
mov	edx, 6
je	0x14006ec5d
je	0x14006ec5d
mov	edx, 2
jmp	0x14006ec5d
jmp	0x14006ec5d
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	eax, -1
je	0x14006eed0
je	0x14006eed0
mov	rax, qword ptr [rdi + 0x10]
mov	rdx, qword ptr [rdi + 0x18]
jmp	0x14006edb7
jmp	0x14006edb7
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, eax
mov	r12, r15
jmp	0x14006ee2b
jmp	0x14006ee2b
mov	r14, qword ptr [rdi + 0x10]
mov	r15, qword ptr [rdi + 0x18]
mov	qword ptr [rsi + 8], rax
cmp	r14, r15
jae	0x14006ef20
jae	0x14006ef20
lea	rcx, [r14 + 1]
mov	qword ptr [rdi + 0x10], rcx
test	rbp, rbp
jg	0x14006ec4c
jg	0x14006ec4c
test	rax, rax
je	0x14006ec58
je	0x14006ec58
jmp	0x14006ec6f
jmp	0x14006ec6f
mov	r12, r15
jmp	0x14006ee45
jmp	0x14006ee45
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rbx, qword ptr [rsi + 8]
mov	edx, eax
lea	rax, [rbx + 1]
cmp	rbp, rax
jle	0x14006ef0e
jle	0x14006ef0e
cmp	edx, -1
je	0x14006ee45
je	0x14006ee45
mov	r14, qword ptr [rdi + 0x10]
mov	r15, qword ptr [rdi + 0x18]
jmp	0x14006ed09
jmp	0x14006ed09
cmp	edx, -1
jne	0x14006edd8
jne	0x14006edd8
jmp	0x14006ee45
jmp	0x14006ee45
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x14006ec47
jmp	0x14006ec47
jmp	0x14006ec83
jmp	0x14006ec83
mov	rcx, rax
mov	rax, rdx
jmp	0x14006ec8c
jmp	0x14006ec8c
jmp	0x14006ec83
jmp	0x14006ec83
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	edx, 1
add	rsi, qword ptr [rax - 0x18]
mov	rcx, rsi
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rcx]
mov	rbx, rcx
mov	qword ptr [rcx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
mov	esi, edx
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
and	edx, 0xfffffffd
call	0x1400ab490
call	0x1400ab490
lea	rcx, [rsp + 0x2f]
mov	r8d, 1
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x2f], 0
je	0x14006f003
je	0x14006f003
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rcx, qword ptr [rdx + 0xe8]
mov	rax, rdx
test	rcx, rcx
je	0x14006f02c
je	0x14006f02c
mov	rax, qword ptr [rcx + 0x10]
cmp	qword ptr [rcx + 8], rax
jae	0x14006f010
jae	0x14006f010
cmp	sil, byte ptr [rax - 1]
jne	0x14006f010
jne	0x14006f010
sub	rax, 1
mov	qword ptr [rcx + 0x10], rax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
movzx	edx, sil
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
cmp	eax, -1
jne	0x14006f003
jne	0x14006f003
mov	rax, qword ptr [rbx]
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
mov	rax, rsi
mov	edx, dword ptr [rax + 0x20]
mov	rcx, rax
or	edx, 1
call	0x1400ab490
call	0x1400ab490
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
sub	rdx, 1
mov	rcx, rax
jne	0x14006f06b
jne	0x14006f06b
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006f003
jmp	0x14006f003
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	qword ptr [rcx + 8], 0
mov	rbx, rcx
mov	rdi, rdx
mov	rsi, r8
lea	rcx, [rsp + 0x2f]
mov	r8d, 1
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x2f], 0
jne	0x14006f0f0
jne	0x14006f0f0
mov	rax, qword ptr [rbx + 8]
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rax, qword ptr [rcx + 0x18]
sub	rax, qword ptr [rcx + 0x10]
jne	0x14006f10f
jne	0x14006f10f
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
test	rax, rax
jle	0x14006f148
jle	0x14006f148
mov	rdx, qword ptr [rbx]
cmp	rax, rsi
cmovle	rsi, rax
mov	rdx, qword ptr [rdx - 0x18]
mov	r8, rsi
mov	rcx, qword ptr [rbx + rdx + 0xe8]
mov	rdx, rdi
mov	r9, qword ptr [rcx]
call	qword ptr [r9 + 0x40]
call	qword ptr [r9 + 0x40]
mov	qword ptr [rbx + 8], rax
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
cmp	rax, -1
jne	0x14006f0e2
jne	0x14006f0e2
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 2
call	0x1400ab490
call	0x1400ab490
jmp	0x14006f0e2
jmp	0x14006f0e2
sub	rdx, 1
mov	rcx, rax
jne	0x14006f18f
jne	0x14006f18f
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006f0e2
jmp	0x14006f0e2
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rcx + 0x10]
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rbp
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
mov	rcx, rbp
mov	word ptr [rbx + 0xf0], ax
lea	rax, [rip + 0x57097]
mov	qword ptr [rbx], rax
add	rax, 0x28
movups	xmmword ptr [rbx + 0xf8], xmm0
movups	xmmword ptr [rbx + 0x108], xmm0
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rsi + 8]
mov	qword ptr [rbx + 0xe8], 0
mov	qword ptr [rbx + 8], rax
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
mov	rdx, rdi
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0xe0]
mov	rcx, rbp
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rdi + 0xd8]
mov	qword ptr [rbx + 0xf8], 0
mov	qword ptr [rdi + 0xd8], 0
mov	qword ptr [rbx + 0xe8], rax
movzx	eax, word ptr [rdi + 0xe0]
mov	qword ptr [rsi + 8], 0
mov	word ptr [rbx + 0xf0], ax
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rsi, rax
mov	rax, qword ptr [rip + 0x4feb5]
mov	rcx, rbp
add	rax, 0x10
mov	qword ptr [rbx + 0x10], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rdi, [rcx + 0x10]
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rdi
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
mov	rdx, rsi
mov	word ptr [rbx + 0xf0], ax
lea	rax, [rip + 0x56fa8]
mov	rcx, rdi
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	qword ptr [rbx + 0xe8], 0
mov	qword ptr [rbx + 0x10], rax
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0xf8], xmm0
movups	xmmword ptr [rbx + 0x108], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rax, qword ptr [rip + 0x4fe19]
mov	rcx, rdi
add	rax, 0x10
mov	qword ptr [rbx + 0x10], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rsi, [rcx + 0x10]
mov	rbx, rcx
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
xor	edx, edx
mov	word ptr [rbx + 0xf0], ax
lea	rax, [rip + 0x56f1c]
mov	rcx, rsi
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	qword ptr [rbx + 0xe8], 0
mov	qword ptr [rbx + 0x10], rax
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0xf8], xmm0
movups	xmmword ptr [rbx + 0x108], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rdi, rax
mov	rax, qword ptr [rip + 0x4fd8d]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0x10], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rdi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx]
mov	rdx, qword ptr [rdx + 8]
mov	qword ptr [rcx], rax
mov	rbx, rcx
mov	rcx, qword ptr [rax - 0x18]
mov	rsi, r8
mov	qword ptr [rbx + rcx], rdx
mov	rdx, qword ptr [r8 + 8]
mov	qword ptr [rbx + 8], rdx
add	rbx, qword ptr [rax - 0x18]
mov	rax, qword ptr [r8]
mov	rcx, rbx
mov	rdi, qword ptr [rax - 0x18]
add	rdi, r8
mov	rdx, rdi
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rdi + 0xd8]
mov	qword ptr [rbx + 0xe8], 0
mov	qword ptr [rdi + 0xd8], 0
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, word ptr [rdi + 0xe0]
mov	qword ptr [rsi + 8], 0
mov	word ptr [rbx + 0xe0], ax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rdx
mov	rdx, r8
mov	r8, qword ptr [rax]
mov	rax, qword ptr [rax + 8]
mov	r9, qword ptr [r8 - 0x18]
mov	qword ptr [rcx], r8
mov	qword ptr [rcx + r9], rax
mov	qword ptr [rcx + 8], 0
add	rcx, qword ptr [r8 - 0x18]
jmp	0x1400ab2c0
jmp	0x1400ab2c0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	rdx, qword ptr [rdx + 8]
mov	r8, qword ptr [rax - 0x18]
mov	qword ptr [rcx], rax
mov	qword ptr [rcx + r8], rdx
xor	edx, edx
mov	qword ptr [rcx + 8], 0
add	rcx, qword ptr [rax - 0x18]
jmp	0x1400ab2c0
jmp	0x1400ab2c0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x56dac]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4fc5a]
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	qword ptr [rcx - 8], 0
add	rax, 0x10
mov	qword ptr [rcx], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
lea	rax, [rip + 0x56d71]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4fc1f]
add	rcx, 0x10
mov	qword ptr [rcx - 8], 0
add	rax, 0x10
mov	qword ptr [rcx], rax
jmp	0x1400aa330
jmp	0x1400aa330
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rdx, qword ptr [rdx + 8]
mov	qword ptr [rcx + rax], rdx
mov	qword ptr [rcx + 8], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rsi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rbx, qword ptr [rax - 0x18]
add	rsi, rcx
mov	rdi, rcx
mov	rbp, rdx
mov	rcx, rsi
add	rbx, rdx
mov	rdx, rbx
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400ab190
call	0x1400ab190
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rsi + 0xd8]
mov	rdx, qword ptr [rbx + 0xd8]
mov	qword ptr [rsi + 0xd8], rdx
movzx	edx, byte ptr [rbx + 0xe0]
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, byte ptr [rsi + 0xe0]
mov	byte ptr [rsi + 0xe0], dl
movzx	edx, byte ptr [rbx + 0xe1]
mov	byte ptr [rbx + 0xe0], al
movzx	eax, byte ptr [rsi + 0xe1]
mov	byte ptr [rsi + 0xe1], dl
mov	rdx, qword ptr [rbp + 8]
mov	byte ptr [rbx + 0xe1], al
mov	rax, qword ptr [rdi + 8]
mov	qword ptr [rdi + 8], rdx
mov	qword ptr [rbp + 8], rax
mov	rax, rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	rdx
jmp	rdx
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rbx, rcx
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	rdx
call	rdx
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rbx, rcx
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	rdx
call	rdx
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x2e]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x2e], 0
je	0x14006f708
je	0x14006f708
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
test	rsi, rsi
je	0x14006f710
je	0x14006f710
mov	rcx, qword ptr [rbx + rdx + 0xe8]
lea	r8, [rsp + 0x2f]
mov	rdx, rsi
call	0x1400ae8e0
call	0x1400ae8e0
movzx	edx, byte ptr [rsp + 0x2f]
test	rax, rax
je	0x14006f720
je	0x14006f720
test	dl, dl
je	0x14006f6f9
je	0x14006f6f9
mov	rax, qword ptr [rbx]
mov	edx, 2
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
test	rsi, rsi
jne	0x14006f6f9
jne	0x14006f6f9
mov	rax, qword ptr [rbx]
mov	edx, 4
jmp	0x14006f6ea
jmp	0x14006f6ea
nop	word ptr [rax + rax]
test	dl, dl
je	0x14006f70d
je	0x14006f70d
mov	rax, qword ptr [rbx]
mov	edx, 6
jmp	0x14006f6ea
jmp	0x14006f6ea
sub	rdx, 1
mov	rcx, rax
jne	0x14006f755
jne	0x14006f755
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 4
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 4
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006f6f9
jmp	0x14006f6f9
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14006c320
jmp	0x14006c320
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14006c470
jmp	0x14006c470
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14006c5c0
jmp	0x14006c5c0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14006c710
jmp	0x14006c710
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14006c860
jmp	0x14006c860
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x77]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x77], 0
je	0x14006f8a3
je	0x14006f8a3
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x78], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x14006f8cf
je	0x14006f8cf
mov	ecx, 0xffffffff
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
lea	r11, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], rcx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x48], rcx
lea	rcx, [rsp + 0x7c]
mov	qword ptr [rsp + 0x30], rcx
lea	rcx, [rsp + 0x78]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, r11
mov	qword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x18]
call	qword ptr [r10 + 0x18]
mov	eax, dword ptr [rsp + 0x7c]
mov	dword ptr [rsi], eax
mov	edx, dword ptr [rsp + 0x78]
test	edx, edx
jne	0x14006f8b0
jne	0x14006f8b0
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14006f8fb
jne	0x14006f8fb
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006f89b
jmp	0x14006f89b
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
jmp	0x14006c9b0
jmp	0x14006c9b0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14006cb00
jmp	0x14006cb00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14006cc50
jmp	0x14006cc50
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x77]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x77], 0
je	0x14006fa45
je	0x14006fa45
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x78], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x14006fa89
je	0x14006fa89
mov	ecx, 0xffffffff
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
lea	r11, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], rcx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x48], rcx
lea	rcx, [rsp + 0x7c]
mov	qword ptr [rsp + 0x30], rcx
lea	rcx, [rsp + 0x78]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, r11
mov	qword ptr [rsp + 0x40], 0
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x18]
call	qword ptr [r10 + 0x18]
mov	eax, dword ptr [rsp + 0x7c]
mov	edx, dword ptr [rsp + 0x78]
cmp	eax, 0xffff8000
jge	0x14006fa58
jge	0x14006fa58
or	edx, 4
mov	ecx, 0xffff8000
mov	dword ptr [rsp + 0x78], edx
mov	word ptr [rsi], cx
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
cmp	eax, 0x7fff
jg	0x14006fa78
jg	0x14006fa78
mov	word ptr [rsi], ax
test	edx, edx
jne	0x14006fa33
jne	0x14006fa33
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
or	edx, 4
mov	eax, 0x7fff
mov	dword ptr [rsp + 0x78], edx
mov	word ptr [rsi], ax
jmp	0x14006fa33
jmp	0x14006fa33
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14006fab5
jne	0x14006fab5
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
mov	edx, dword ptr [rsp + 0x78]
jmp	0x14006fa62
jmp	0x14006fa62
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14006cda0
jmp	0x14006cda0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14006cef0
jmp	0x14006cef0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14006d040
jmp	0x14006d040
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
lea	rdi, [rsp + 0x20]
mov	rbx, rcx
mov	esi, edx
mov	rdx, rcx
mov	rcx, rdi
call	0x140070250
call	0x140070250
cmp	byte ptr [rsp + 0x20], 0
je	0x14006fb74
je	0x14006fb74
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rax, qword ptr [rcx + 0x28]
cmp	rax, qword ptr [rcx + 0x30]
jae	0x14006fbb8
jae	0x14006fbb8
mov	byte ptr [rax], sil
add	qword ptr [rcx + 0x28], 1
mov	rsi, qword ptr [rsp + 0x28]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x14006fba9
je	0x14006fba9
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14006fba9
jne	0x14006fba9
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14006fba9
je	0x14006fba9
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14006fbe0
je	0x14006fbe0
mov	rax, rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
movzx	edx, sil
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	eax, -1
jne	0x14006fb74
jne	0x14006fb74
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x14006fb74
jmp	0x14006fb74
nop	
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x14006fba9
jmp	0x14006fba9
mov	rbx, rax
mov	rcx, rdi
call	0x140070350
call	0x140070350
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
sub	rdx, 1
mov	rcx, rax
jne	0x14006fc31
jne	0x14006fc31
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006fb74
jmp	0x14006fb74
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006fbfa
jmp	0x14006fbfa
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006fbfa
jmp	0x14006fbfa
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rsi, rcx
add	rsi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rbx, rdx
mov	rcx, rsi
add	rbx, qword ptr [rax - 0x18]
mov	rdx, rbx
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400ab190
call	0x1400ab190
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rsi + 0xd8]
mov	rdx, qword ptr [rbx + 0xd8]
mov	qword ptr [rsi + 0xd8], rdx
movzx	edx, byte ptr [rbx + 0xe0]
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, byte ptr [rsi + 0xe0]
mov	byte ptr [rsi + 0xe0], dl
movzx	edx, byte ptr [rbx + 0xe1]
mov	byte ptr [rbx + 0xe0], al
movzx	eax, byte ptr [rsi + 0xe1]
mov	byte ptr [rsi + 0xe1], dl
mov	byte ptr [rbx + 0xe1], al
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
cmp	qword ptr [rcx + rax + 0xe8], 0
mov	rbx, rcx
je	0x14006fd92
je	0x14006fd92
lea	rsi, [rsp + 0x20]
mov	rdx, rcx
mov	rcx, rsi
call	0x140070250
call	0x140070250
cmp	byte ptr [rsp + 0x20], 0
je	0x14006fd5d
je	0x14006fd5d
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14006fda0
je	0x14006fda0
mov	rsi, qword ptr [rsp + 0x28]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x14006fd92
je	0x14006fd92
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14006fd92
jne	0x14006fd92
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14006fd92
je	0x14006fd92
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14006fdc0
je	0x14006fdc0
mov	rax, rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x14006fd5d
jmp	0x14006fd5d
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x14006fd92
jmp	0x14006fd92
sub	rdx, 1
mov	rcx, rax
jne	0x14006fe11
jne	0x14006fe11
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, rsi
call	0x140070350
call	0x140070350
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006fd5d
jmp	0x14006fd5d
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006fe01
jmp	0x14006fe01
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14006fe01
jmp	0x14006fe01
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x60
movups	xmmword ptr [rsp + 0x50], xmm6
movdqu	xmm6, xmmword ptr [rdx]
lea	rsi, [rsp + 0x40]
mov	rbx, rcx
mov	rdx, rcx
mov	rcx, rsi
call	0x140070250
call	0x140070250
mov	rax, qword ptr [rbx]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rbx
test	byte ptr [rdi + 0x20], 5
jne	0x14006fead
jne	0x14006fead
lea	rcx, [rsp + 0x30]
mov	r9d, 0x10
lea	r8, [rsp + 0x20]
mov	rdx, qword ptr [rdi + 0xe8]
movups	xmmword ptr [rsp + 0x20], xmm6
mov	rax, qword ptr [rdx]
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
cmp	qword ptr [rsp + 0x30], -1
je	0x14006fef8
je	0x14006fef8
mov	rsi, qword ptr [rsp + 0x48]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x14006fee2
je	0x14006fee2
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14006fee2
jne	0x14006fee2
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14006fee2
je	0x14006fee2
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14006ff10
je	0x14006ff10
movups	xmm6, xmmword ptr [rsp + 0x50]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
jmp	0x14006fead
jmp	0x14006fead
nop	
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x14006fee2
jmp	0x14006fee2
mov	rbx, rax
mov	rcx, rsi
call	0x140070350
call	0x140070350
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
lea	rsi, [rsp + 0x40]
mov	rbx, rcx
mov	rbp, rdx
mov	rdx, rcx
mov	rcx, rsi
mov	edi, r8d
call	0x140070250
call	0x140070250
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
test	byte ptr [rdx + 0x20], 5
jne	0x14006ff99
jne	0x14006ff99
mov	rdx, qword ptr [rdx + 0xe8]
lea	rcx, [rsp + 0x30]
mov	r9d, edi
mov	r8, rbp
mov	rax, qword ptr [rdx]
mov	dword ptr [rsp + 0x20], 0x10
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	qword ptr [rsp + 0x30], -1
je	0x14006ffe0
je	0x14006ffe0
mov	rsi, qword ptr [rsp + 0x48]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x14006ffce
je	0x14006ffce
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14006ffce
jne	0x14006ffce
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14006ffce
je	0x14006ffce
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x140070000
je	0x140070000
mov	rax, rbx
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
jmp	0x14006ff99
jmp	0x14006ff99
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x14006ffce
jmp	0x14006ffce
mov	rbx, rax
mov	rcx, rsi
call	0x140070350
call	0x140070350
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x50
lea	rdi, [rsp + 0x40]
mov	rsi, rcx
mov	rbx, rdx
mov	rcx, rdi
call	0x140070250
call	0x140070250
mov	rax, qword ptr [rbx]
mov	qword ptr [rsi], 0xffffffffffffffff
mov	dword ptr [rsi + 8], 0
add	rbx, qword ptr [rax - 0x18]
test	byte ptr [rbx + 0x20], 5
jne	0x14007009c
jne	0x14007009c
mov	rdx, qword ptr [rbx + 0xe8]
lea	rcx, [rsp + 0x30]
mov	r9d, 1
xor	r8d, r8d
mov	rax, qword ptr [rdx]
mov	dword ptr [rsp + 0x20], 0x10
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rsp + 0x30], rax
mov	qword ptr [rsi], rax
mov	eax, dword ptr [rsp + 0x38]
mov	dword ptr [rsi + 8], eax
mov	rbx, qword ptr [rsp + 0x48]
mov	rax, qword ptr [rbx]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rbx
test	byte ptr [rdi + 0x19], 0x20
je	0x1400700d1
je	0x1400700d1
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x1400700d1
jne	0x1400700d1
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x1400700d1
je	0x1400700d1
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x1400700e0
je	0x1400700e0
mov	rax, rsi
add	rsp, 0x50
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x1400700d1
jmp	0x1400700d1
mov	rbx, rax
mov	rcx, rdi
call	0x140070350
call	0x140070350
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
lea	rdi, [rsp + 0x20]
mov	rbx, rcx
mov	rbp, rdx
mov	rdx, rcx
mov	rcx, rdi
mov	rsi, r8
call	0x140070250
call	0x140070250
cmp	byte ptr [rsp + 0x20], 0
je	0x140070158
je	0x140070158
mov	rax, qword ptr [rbx]
mov	r8, rsi
mov	rdx, rbp
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	rsi, rax
jne	0x1400701a0
jne	0x1400701a0
mov	rsi, qword ptr [rsp + 0x28]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x14007018d
je	0x14007018d
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14007018d
jne	0x14007018d
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14007018d
je	0x14007018d
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x1400701c0
je	0x1400701c0
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x140070158
jmp	0x140070158
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x14007018d
jmp	0x14007018d
sub	rdx, 1
mov	rcx, rax
jne	0x140070211
jne	0x140070211
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, rdi
call	0x140070350
call	0x140070350
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140070158
jmp	0x140070158
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140070201
jmp	0x140070201
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140070201
jmp	0x140070201
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	qword ptr [rcx + 8], rdx
mov	rsi, rcx
mov	rbx, rdx
mov	byte ptr [rcx], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rdx
mov	rax, qword ptr [rcx + 0xd8]
mov	edx, dword ptr [rcx + 0x20]
test	rax, rax
je	0x1400702a2
je	0x1400702a2
test	edx, edx
je	0x140070290
je	0x140070290
test	dl, 1
jne	0x1400702b8
jne	0x1400702b8
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rax
call	0x14006fd10
call	0x14006fd10
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
test	edx, edx
jne	0x140070280
jne	0x140070280
mov	byte ptr [rsi], 1
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
or	edx, 4
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400ab490
jmp	0x1400ab490
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	qword ptr [rcx + 8], rdx
mov	rsi, rcx
mov	rbx, rdx
mov	byte ptr [rcx], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rdx
mov	rax, qword ptr [rcx + 0xd8]
mov	edx, dword ptr [rcx + 0x20]
test	rax, rax
je	0x140070322
je	0x140070322
test	edx, edx
je	0x140070310
je	0x140070310
test	dl, 1
jne	0x140070338
jne	0x140070338
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rax
call	0x14006fd10
call	0x14006fd10
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
test	edx, edx
jne	0x140070300
jne	0x140070300
mov	byte ptr [rsi], 1
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
or	edx, 4
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400ab490
jmp	0x1400ab490
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx + 8]
mov	rdx, qword ptr [rax]
add	rax, qword ptr [rdx - 0x18]
mov	rsi, rcx
mov	rbx, rax
test	byte ptr [rax + 0x19], 0x20
je	0x14007038d
je	0x14007038d
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14007038d
jne	0x14007038d
mov	rcx, qword ptr [rbx + 0xe8]
test	rcx, rcx
je	0x14007038d
je	0x14007038d
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x140070398
je	0x140070398
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, qword ptr [rsi + 8]
mov	rax, qword ptr [rcx]
add	rcx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x14007038d
jmp	0x14007038d
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx + 8]
mov	rdx, qword ptr [rax]
add	rax, qword ptr [rdx - 0x18]
mov	rsi, rcx
mov	rbx, rax
test	byte ptr [rax + 0x19], 0x20
je	0x1400703ed
je	0x1400703ed
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x1400703ed
jne	0x1400703ed
mov	rcx, qword ptr [rbx + 0xe8]
test	rcx, rcx
je	0x1400703ed
je	0x1400703ed
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x1400703f8
je	0x1400703f8
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, qword ptr [rsi + 8]
mov	rax, qword ptr [rcx]
add	rcx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x1400703ed
jmp	0x1400703ed
jmp	0x1400ad970
jmp	0x1400ad970
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x68
lea	rbp, [rsp + 0x50]
mov	rbx, rcx
mov	r12, rdx
mov	rdx, rcx
mov	rcx, rbp
call	0x140070250
call	0x140070250
cmp	byte ptr [rsp + 0x50], 0
je	0x1400704d2
je	0x1400704d2
mov	rax, qword ptr [rbx]
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
mov	rdi, qword ptr [rsi + 0xf8]
test	rdi, rdi
je	0x1400705ba
je	0x1400705ba
cmp	byte ptr [rsi + 0xe1], 0
je	0x140070520
je	0x140070520
movsx	ecx, byte ptr [rsi + 0xe0]
xor	eax, eax
lea	r10, [rsp + 0x40]
lea	r8, [rsp + 0x30]
mov	r9, rsi
mov	rdx, qword ptr [rsi + 0xe8]
test	rdx, rdx
mov	qword ptr [rsp + 0x30], rdx
mov	rdx, rdi
sete	al
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rdi]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, r10
mov	qword ptr [rsp + 0x28], r12
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	byte ptr [rsp + 0x48], 0
je	0x1400704d2
je	0x1400704d2
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
mov	rsi, qword ptr [rsp + 0x58]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x14007050b
je	0x14007050b
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14007050b
jne	0x14007050b
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14007050b
je	0x14007050b
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x1400705a0
je	0x1400705a0
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	r13, qword ptr [rsi + 0xf0]
test	r13, r13
je	0x1400705bf
je	0x1400705bf
cmp	byte ptr [r13 + 0x38], 0
je	0x140070560
je	0x140070560
movsx	ecx, byte ptr [r13 + 0x59]
mov	eax, ecx
mov	byte ptr [rsi + 0xe0], al
mov	rax, qword ptr [rbx]
mov	byte ptr [rsi + 0xe1], 1
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
jmp	0x14007047b
jmp	0x14007047b
nop	word ptr [rax + rax]
mov	rcx, r13
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [r13]
lea	rdx, [rip - 0x4e0d3]
mov	ecx, 0x20
mov	r8, qword ptr [rax + 0x30]
mov	eax, 0x20
cmp	r8, rdx
je	0x14007053e
je	0x14007053e
mov	edx, 0x20
mov	rcx, r13
call	r8
call	r8
movsx	ecx, al
jmp	0x14007053e
jmp	0x14007053e
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rsi]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x14007050b
jmp	0x14007050b
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x1400705fe
jne	0x1400705fe
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, rbp
call	0x140070350
call	0x140070350
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400704d2
jmp	0x1400704d2
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400705ee
jmp	0x1400705ee
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400705ee
jmp	0x1400705ee
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x68
lea	r12, [rsp + 0x50]
mov	rbx, rcx
mov	esi, edx
mov	rdx, rcx
mov	rcx, r12
call	0x140070250
call	0x140070250
cmp	byte ptr [rsp + 0x50], 0
je	0x1400706f8
je	0x1400706f8
mov	rax, qword ptr [rbx]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rbx
mov	rbp, qword ptr [rdi + 0xf8]
test	rbp, rbp
je	0x1400707da
je	0x1400707da
cmp	byte ptr [rdi + 0xe1], 0
je	0x140070748
je	0x140070748
movsx	r8d, byte ptr [rdi + 0xe0]
mov	rcx, qword ptr [rdi + 0xe8]
mov	r10, qword ptr [rbp]
xor	edx, edx
mov	r9, rdi
lea	r11, [rsp + 0x40]
movzx	eax, sil
mov	dword ptr [rsp + 0x20], r8d
lea	r8, [rsp + 0x30]
test	rcx, rcx
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, r11
sete	dl
mov	dword ptr [rsp + 0x28], eax
mov	qword ptr [rsp + 0x38], rdx
mov	rdx, rbp
call	qword ptr [r10 + 0x10]
call	qword ptr [r10 + 0x10]
cmp	byte ptr [rsp + 0x48], 0
je	0x1400706f8
je	0x1400706f8
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
mov	rsi, qword ptr [rsp + 0x58]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x140070731
je	0x140070731
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x140070731
jne	0x140070731
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x140070731
je	0x140070731
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x1400707c0
je	0x1400707c0
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	r13, qword ptr [rdi + 0xf0]
test	r13, r13
je	0x1400707df
je	0x1400707df
cmp	byte ptr [r13 + 0x38], 0
je	0x140070788
je	0x140070788
movsx	r8d, byte ptr [r13 + 0x59]
mov	eax, r8d
mov	byte ptr [rdi + 0xe0], al
mov	rax, qword ptr [rbx]
mov	byte ptr [rdi + 0xe1], 1
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rbx
jmp	0x14007069b
jmp	0x14007069b
nop	dword ptr [rax + rax]
mov	rcx, r13
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [r13]
lea	rdx, [rip - 0x4e2fb]
mov	r8d, 0x20
mov	r9, qword ptr [rax + 0x30]
mov	eax, 0x20
cmp	r9, rdx
je	0x140070767
je	0x140070767
mov	edx, 0x20
mov	rcx, r13
call	r9
call	r9
movsx	r8d, al
jmp	0x140070767
jmp	0x140070767
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x140070731
jmp	0x140070731
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14007081e
jne	0x14007081e
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, r12
call	0x140070350
call	0x140070350
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400706f8
jmp	0x1400706f8
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14007080e
jmp	0x14007080e
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14007080e
jmp	0x14007080e
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x70
movups	xmmword ptr [rsp + 0x60], xmm6
lea	rbp, [rsp + 0x50]
mov	rdx, rcx
movupd	xmm6, xmm1
mov	rbx, rcx
mov	rcx, rbp
call	0x140070250
call	0x140070250
cmp	byte ptr [rsp + 0x50], 0
je	0x140070917
je	0x140070917
mov	rax, qword ptr [rbx]
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
mov	rdi, qword ptr [rsi + 0xf8]
test	rdi, rdi
je	0x1400709fa
je	0x1400709fa
cmp	byte ptr [rsi + 0xe1], 0
je	0x140070968
je	0x140070968
movsx	ecx, byte ptr [rsi + 0xe0]
xor	eax, eax
lea	r10, [rsp + 0x40]
lea	r8, [rsp + 0x30]
mov	r9, rsi
mov	rdx, qword ptr [rsi + 0xe8]
test	rdx, rdx
mov	qword ptr [rsp + 0x30], rdx
mov	rdx, rdi
sete	al
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rdi]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, r10
movsd	qword ptr [rsp + 0x28], xmm6
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
cmp	byte ptr [rsp + 0x48], 0
je	0x140070917
je	0x140070917
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
mov	rsi, qword ptr [rsp + 0x58]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x140070950
je	0x140070950
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x140070950
jne	0x140070950
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x140070950
je	0x140070950
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x1400709e0
je	0x1400709e0
movups	xmm6, xmmword ptr [rsp + 0x60]
mov	rax, rbx
add	rsp, 0x70
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax + rax]
mov	r12, qword ptr [rsi + 0xf0]
test	r12, r12
je	0x1400709ff
je	0x1400709ff
cmp	byte ptr [r12 + 0x38], 0
je	0x1400709a8
je	0x1400709a8
movsx	ecx, byte ptr [r12 + 0x59]
mov	eax, ecx
mov	byte ptr [rsi + 0xe0], al
mov	rax, qword ptr [rbx]
mov	byte ptr [rsi + 0xe1], 1
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
jmp	0x1400708bf
jmp	0x1400708bf
nop	dword ptr [rax]
mov	rcx, r12
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [r12]
lea	rdx, [rip - 0x4e51b]
mov	ecx, 0x20
mov	r8, qword ptr [rax + 0x30]
mov	eax, 0x20
cmp	r8, rdx
je	0x140070988
je	0x140070988
mov	edx, 0x20
mov	rcx, r12
call	r8
call	r8
movsx	ecx, al
jmp	0x140070988
jmp	0x140070988
nop	
mov	rax, qword ptr [rsi]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x140070950
jmp	0x140070950
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x140070a3e
jne	0x140070a3e
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, rbp
call	0x140070350
call	0x140070350
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140070917
jmp	0x140070917
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140070a2e
jmp	0x140070a2e
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140070a2e
jmp	0x140070a2e
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
add	rsp, -0x80
fld	xword ptr [rdx]
lea	rbp, [rsp + 0x70]
mov	rdx, rcx
mov	rbx, rcx
fstp	xword ptr [rsp + 0x30]
mov	rcx, rbp
call	0x140070250
call	0x140070250
cmp	byte ptr [rsp + 0x70], 0
je	0x140070b40
je	0x140070b40
mov	rax, qword ptr [rbx]
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
mov	rdi, qword ptr [rsi + 0xf8]
test	rdi, rdi
je	0x140070c2a
je	0x140070c2a
cmp	byte ptr [rsi + 0xe1], 0
je	0x140070b90
je	0x140070b90
movsx	ecx, byte ptr [rsi + 0xe0]
mov	rdx, qword ptr [rsi + 0xe8]
fld	xword ptr [rsp + 0x30]
xor	eax, eax
mov	r9, rsi
lea	r10, [rsp + 0x60]
lea	r8, [rsp + 0x50]
test	rdx, rdx
mov	qword ptr [rsp + 0x50], rdx
lea	rdx, [rsp + 0x40]
sete	al
fstp	xword ptr [rsp + 0x40]
mov	qword ptr [rsp + 0x58], rax
mov	rax, qword ptr [rdi]
mov	qword ptr [rsp + 0x28], rdx
mov	rdx, rdi
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, r10
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
cmp	byte ptr [rsp + 0x68], 0
je	0x140070b40
je	0x140070b40
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
mov	rsi, qword ptr [rsp + 0x78]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x140070b79
je	0x140070b79
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x140070b79
jne	0x140070b79
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x140070b79
je	0x140070b79
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x140070c10
je	0x140070c10
mov	rax, rbx
sub	rsp, -0x80
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
mov	r12, qword ptr [rsi + 0xf0]
test	r12, r12
je	0x140070c2f
je	0x140070c2f
cmp	byte ptr [r12 + 0x38], 0
je	0x140070bd0
je	0x140070bd0
movsx	ecx, byte ptr [r12 + 0x59]
mov	eax, ecx
mov	byte ptr [rsi + 0xe0], al
mov	rax, qword ptr [rbx]
mov	byte ptr [rsi + 0xe1], 1
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
jmp	0x140070adc
jmp	0x140070adc
nop	dword ptr [rax]
mov	rcx, r12
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [r12]
lea	rdx, [rip - 0x4e743]
mov	ecx, 0x20
mov	r8, qword ptr [rax + 0x30]
mov	eax, 0x20
cmp	r8, rdx
je	0x140070bb0
je	0x140070bb0
mov	edx, 0x20
mov	rcx, r12
call	r8
call	r8
movsx	ecx, al
jmp	0x140070bb0
jmp	0x140070bb0
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rsi]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x140070b79
jmp	0x140070b79
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x140070c6e
jne	0x140070c6e
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, rbp
call	0x140070350
call	0x140070350
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140070b40
jmp	0x140070b40
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140070c5e
jmp	0x140070c5e
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140070c5e
jmp	0x140070c5e
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x68
lea	rbp, [rsp + 0x50]
mov	rbx, rcx
mov	r12d, edx
mov	rdx, rcx
mov	rcx, rbp
call	0x140070250
call	0x140070250
cmp	byte ptr [rsp + 0x50], 0
je	0x140070d62
je	0x140070d62
mov	rax, qword ptr [rbx]
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
mov	rdi, qword ptr [rsi + 0xf8]
test	rdi, rdi
je	0x140070e4a
je	0x140070e4a
cmp	byte ptr [rsi + 0xe1], 0
je	0x140070db0
je	0x140070db0
movsx	ecx, byte ptr [rsi + 0xe0]
xor	eax, eax
lea	r10, [rsp + 0x40]
lea	r8, [rsp + 0x30]
mov	r9, rsi
mov	rdx, qword ptr [rsi + 0xe8]
test	rdx, rdx
mov	qword ptr [rsp + 0x30], rdx
mov	rdx, rdi
sete	al
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rdi]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, r10
mov	dword ptr [rsp + 0x28], r12d
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
cmp	byte ptr [rsp + 0x48], 0
je	0x140070d62
je	0x140070d62
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
mov	rsi, qword ptr [rsp + 0x58]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x140070d9b
je	0x140070d9b
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x140070d9b
jne	0x140070d9b
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x140070d9b
je	0x140070d9b
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x140070e30
je	0x140070e30
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	r13, qword ptr [rsi + 0xf0]
test	r13, r13
je	0x140070e4f
je	0x140070e4f
cmp	byte ptr [r13 + 0x38], 0
je	0x140070df0
je	0x140070df0
movsx	ecx, byte ptr [r13 + 0x59]
mov	eax, ecx
mov	byte ptr [rsi + 0xe0], al
mov	rax, qword ptr [rbx]
mov	byte ptr [rsi + 0xe1], 1
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
jmp	0x140070d0b
jmp	0x140070d0b
nop	word ptr [rax + rax]
mov	rcx, r13
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [r13]
lea	rdx, [rip - 0x4e963]
mov	ecx, 0x20
mov	r8, qword ptr [rax + 0x30]
mov	eax, 0x20
cmp	r8, rdx
je	0x140070dce
je	0x140070dce
mov	edx, 0x20
mov	rcx, r13
call	r8
call	r8
movsx	ecx, al
jmp	0x140070dce
jmp	0x140070dce
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rsi]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x140070d9b
jmp	0x140070d9b
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x140070e8e
jne	0x140070e8e
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, rbp
call	0x140070350
call	0x140070350
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140070d62
jmp	0x140070d62
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140070e7e
jmp	0x140070e7e
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140070e7e
jmp	0x140070e7e
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x68
lea	rbp, [rsp + 0x50]
mov	rbx, rcx
mov	r12d, edx
mov	rdx, rcx
mov	rcx, rbp
call	0x140070250
call	0x140070250
cmp	byte ptr [rsp + 0x50], 0
je	0x140070f82
je	0x140070f82
mov	rax, qword ptr [rbx]
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
mov	rdi, qword ptr [rsi + 0xf8]
test	rdi, rdi
je	0x14007106a
je	0x14007106a
cmp	byte ptr [rsi + 0xe1], 0
je	0x140070fd0
je	0x140070fd0
movsx	ecx, byte ptr [rsi + 0xe0]
xor	eax, eax
lea	r10, [rsp + 0x40]
lea	r8, [rsp + 0x30]
mov	r9, rsi
mov	rdx, qword ptr [rsi + 0xe8]
test	rdx, rdx
mov	qword ptr [rsp + 0x30], rdx
mov	rdx, rdi
sete	al
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rdi]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, r10
mov	dword ptr [rsp + 0x28], r12d
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	byte ptr [rsp + 0x48], 0
je	0x140070f82
je	0x140070f82
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
mov	rsi, qword ptr [rsp + 0x58]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x140070fbb
je	0x140070fbb
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x140070fbb
jne	0x140070fbb
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x140070fbb
je	0x140070fbb
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x140071050
je	0x140071050
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	r13, qword ptr [rsi + 0xf0]
test	r13, r13
je	0x14007106f
je	0x14007106f
cmp	byte ptr [r13 + 0x38], 0
je	0x140071010
je	0x140071010
movsx	ecx, byte ptr [r13 + 0x59]
mov	eax, ecx
mov	byte ptr [rsi + 0xe0], al
mov	rax, qword ptr [rbx]
mov	byte ptr [rsi + 0xe1], 1
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
jmp	0x140070f2b
jmp	0x140070f2b
nop	word ptr [rax + rax]
mov	rcx, r13
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [r13]
lea	rdx, [rip - 0x4eb83]
mov	ecx, 0x20
mov	r8, qword ptr [rax + 0x30]
mov	eax, 0x20
cmp	r8, rdx
je	0x140070fee
je	0x140070fee
mov	edx, 0x20
mov	rcx, r13
call	r8
call	r8
movsx	ecx, al
jmp	0x140070fee
jmp	0x140070fee
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rsi]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x140070fbb
jmp	0x140070fbb
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x1400710ae
jne	0x1400710ae
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, rbp
call	0x140070350
call	0x140070350
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140070f82
jmp	0x140070f82
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14007109e
jmp	0x14007109e
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14007109e
jmp	0x14007109e
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x68
lea	rbp, [rsp + 0x50]
mov	rbx, rcx
mov	r12, rdx
mov	rdx, rcx
mov	rcx, rbp
call	0x140070250
call	0x140070250
cmp	byte ptr [rsp + 0x50], 0
je	0x1400711a2
je	0x1400711a2
mov	rax, qword ptr [rbx]
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
mov	rdi, qword ptr [rsi + 0xf8]
test	rdi, rdi
je	0x14007128a
je	0x14007128a
cmp	byte ptr [rsi + 0xe1], 0
je	0x1400711f0
je	0x1400711f0
movsx	ecx, byte ptr [rsi + 0xe0]
xor	eax, eax
lea	r10, [rsp + 0x40]
lea	r8, [rsp + 0x30]
mov	r9, rsi
mov	rdx, qword ptr [rsi + 0xe8]
test	rdx, rdx
mov	qword ptr [rsp + 0x30], rdx
mov	rdx, rdi
sete	al
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rdi]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, r10
mov	qword ptr [rsp + 0x28], r12
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
cmp	byte ptr [rsp + 0x48], 0
je	0x1400711a2
je	0x1400711a2
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
mov	rsi, qword ptr [rsp + 0x58]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x1400711db
je	0x1400711db
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x1400711db
jne	0x1400711db
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x1400711db
je	0x1400711db
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x140071270
je	0x140071270
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	r13, qword ptr [rsi + 0xf0]
test	r13, r13
je	0x14007128f
je	0x14007128f
cmp	byte ptr [r13 + 0x38], 0
je	0x140071230
je	0x140071230
movsx	ecx, byte ptr [r13 + 0x59]
mov	eax, ecx
mov	byte ptr [rsi + 0xe0], al
mov	rax, qword ptr [rbx]
mov	byte ptr [rsi + 0xe1], 1
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
jmp	0x14007114b
jmp	0x14007114b
nop	word ptr [rax + rax]
mov	rcx, r13
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [r13]
lea	rdx, [rip - 0x4eda3]
mov	ecx, 0x20
mov	r8, qword ptr [rax + 0x30]
mov	eax, 0x20
cmp	r8, rdx
je	0x14007120e
je	0x14007120e
mov	edx, 0x20
mov	rcx, r13
call	r8
call	r8
movsx	ecx, al
jmp	0x14007120e
jmp	0x14007120e
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rsi]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x1400711db
jmp	0x1400711db
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x1400712ce
jne	0x1400712ce
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, rbp
call	0x140070350
call	0x140070350
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400711a2
jmp	0x1400711a2
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400712be
jmp	0x1400712be
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400712be
jmp	0x1400712be
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x68
lea	rbp, [rsp + 0x50]
mov	rbx, rcx
mov	r12, rdx
mov	rdx, rcx
mov	rcx, rbp
call	0x140070250
call	0x140070250
cmp	byte ptr [rsp + 0x50], 0
je	0x1400713c2
je	0x1400713c2
mov	rax, qword ptr [rbx]
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
mov	rdi, qword ptr [rsi + 0xf8]
test	rdi, rdi
je	0x1400714aa
je	0x1400714aa
cmp	byte ptr [rsi + 0xe1], 0
je	0x140071410
je	0x140071410
movsx	ecx, byte ptr [rsi + 0xe0]
xor	eax, eax
lea	r10, [rsp + 0x40]
lea	r8, [rsp + 0x30]
mov	r9, rsi
mov	rdx, qword ptr [rsi + 0xe8]
test	rdx, rdx
mov	qword ptr [rsp + 0x30], rdx
mov	rdx, rdi
sete	al
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rdi]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, r10
mov	qword ptr [rsp + 0x28], r12
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	byte ptr [rsp + 0x48], 0
je	0x1400713c2
je	0x1400713c2
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
mov	rsi, qword ptr [rsp + 0x58]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x1400713fb
je	0x1400713fb
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x1400713fb
jne	0x1400713fb
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x1400713fb
je	0x1400713fb
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x140071490
je	0x140071490
mov	rax, rbx
add	rsp, 0x68
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	r13, qword ptr [rsi + 0xf0]
test	r13, r13
je	0x1400714af
je	0x1400714af
cmp	byte ptr [r13 + 0x38], 0
je	0x140071450
je	0x140071450
movsx	ecx, byte ptr [r13 + 0x59]
mov	eax, ecx
mov	byte ptr [rsi + 0xe0], al
mov	rax, qword ptr [rbx]
mov	byte ptr [rsi + 0xe1], 1
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
jmp	0x14007136b
jmp	0x14007136b
nop	word ptr [rax + rax]
mov	rcx, r13
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [r13]
lea	rdx, [rip - 0x4efc3]
mov	ecx, 0x20
mov	r8, qword ptr [rax + 0x30]
mov	eax, 0x20
cmp	r8, rdx
je	0x14007142e
je	0x14007142e
mov	edx, 0x20
mov	rcx, r13
call	r8
call	r8
movsx	ecx, al
jmp	0x14007142e
jmp	0x14007142e
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rsi]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x1400713fb
jmp	0x1400713fb
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x1400714ee
jne	0x1400714ee
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, rbp
call	0x140070350
call	0x140070350
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400713c2
jmp	0x1400713c2
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400714de
jmp	0x1400714de
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400714de
jmp	0x1400714de
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rdi, [rcx + 8]
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rdi
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
mov	qword ptr [rbx + 0xe0], 0
mov	word ptr [rbx + 0xe8], ax
lea	rax, [rip + 0x54db8]
movups	xmmword ptr [rbx + 0xf0], xmm0
lea	rcx, [rax - 0x28]
movq	xmm1, rax
movups	xmmword ptr [rbx + 0x100], xmm0
mov	rax, qword ptr [rsi]
movq	xmm0, rcx
mov	rcx, rdi
punpcklqdq	xmm0, xmm1
add	rsi, qword ptr [rax - 0x18]
movups	xmmword ptr [rbx], xmm0
mov	rdx, rsi
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0xd8]
mov	rcx, rdi
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rsi + 0xd8]
mov	qword ptr [rbx + 0xf0], 0
mov	qword ptr [rsi + 0xd8], 0
mov	qword ptr [rbx + 0xe0], rax
movzx	eax, word ptr [rsi + 0xe0]
mov	word ptr [rbx + 0xe8], ax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rax, qword ptr [rip + 0x4db70]
mov	rcx, rdi
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rdi, [rcx + 8]
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rdi
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
mov	rcx, rdi
mov	word ptr [rbx + 0xe8], ax
lea	rax, [rip + 0x54ce0]
lea	rdx, [rax - 0x28]
movups	xmmword ptr [rbx + 0xf0], xmm0
movq	xmm1, rax
movups	xmmword ptr [rbx + 0x100], xmm0
movq	xmm0, rdx
mov	rdx, rsi
mov	qword ptr [rbx + 0xe0], 0
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rax, qword ptr [rip + 0x4dad7]
mov	rcx, rdi
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rcx + 8]
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
mov	qword ptr [rbx + 0xe0], 0
mov	word ptr [rbx + 0xe8], ax
lea	rax, [rip + 0x54c40]
lea	rdx, [rax - 0x28]
movups	xmmword ptr [rbx + 0xf0], xmm0
movq	xmm1, rax
movups	xmmword ptr [rbx + 0x100], xmm0
movq	xmm0, rdx
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx], xmm0
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rsi, [rcx + 8]
mov	rbx, rcx
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
xor	edx, edx
mov	word ptr [rbx + 0xe8], ax
mov	rcx, rsi
lea	rax, [rip + 0x54be1]
lea	rdi, [rax - 0x28]
movups	xmmword ptr [rbx + 0xf0], xmm0
movq	xmm1, rax
movups	xmmword ptr [rbx + 0x100], xmm0
movq	xmm0, rdi
mov	qword ptr [rbx + 0xe0], 0
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rdi, rax
mov	rax, qword ptr [rip + 0x4d9db]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rdi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rcx], rax
add	rbx, qword ptr [rax - 0x18]
mov	rsi, r8
mov	rax, qword ptr [rdx + 8]
mov	rcx, rbx
mov	qword ptr [rbx], rax
mov	rax, qword ptr [r8]
add	rsi, qword ptr [rax - 0x18]
mov	rdx, rsi
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rsi + 0xd8]
mov	qword ptr [rbx + 0xe8], 0
mov	qword ptr [rsi + 0xd8], 0
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, word ptr [rsi + 0xe0]
mov	word ptr [rbx + 0xe0], ax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rdx
mov	rdx, r8
mov	r8, qword ptr [rax]
mov	rax, qword ptr [rax + 8]
mov	qword ptr [rcx], r8
add	rcx, qword ptr [r8 - 0x18]
mov	qword ptr [rcx], rax
jmp	0x1400ab2c0
jmp	0x1400ab2c0
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	rdx, qword ptr [rdx + 8]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rcx + rax], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	qword ptr [rcx], rax
add	rcx, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx + 8]
xor	edx, edx
mov	qword ptr [rcx], rax
jmp	0x1400ab2c0
jmp	0x1400ab2c0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0x4d8d4]
lea	rdx, [rip + 0x54a65]
movq	xmm0, rdx
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx], xmm0
mov	rbx, rcx
lea	rcx, [rcx + 8]
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x4d889]
lea	rdx, [rip + 0x54a1a]
movq	xmm0, rdx
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx], xmm0
add	rcx, 8
jmp	0x1400aa330
jmp	0x1400aa330
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rdx, qword ptr [rdx + 8]
mov	qword ptr [rcx + rax], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rsi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
add	rsi, rcx
mov	rbx, rdx
add	rbx, qword ptr [rax - 0x18]
mov	rdi, rcx
mov	rdx, rbx
mov	rcx, rsi
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400ab190
call	0x1400ab190
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rsi + 0xd8]
mov	rdx, qword ptr [rbx + 0xd8]
mov	qword ptr [rsi + 0xd8], rdx
movzx	edx, byte ptr [rbx + 0xe0]
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, byte ptr [rsi + 0xe0]
mov	byte ptr [rsi + 0xe0], dl
movzx	edx, byte ptr [rbx + 0xe1]
mov	byte ptr [rbx + 0xe0], al
movzx	eax, byte ptr [rsi + 0xe1]
mov	byte ptr [rsi + 0xe1], dl
mov	byte ptr [rbx + 0xe1], al
mov	rax, rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	rdx
jmp	rdx
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rbx, rcx
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	rdx
call	rdx
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rbx, rcx
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	rdx
call	rdx
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
jmp	0x140070420
jmp	0x140070420
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
lea	rdi, [rsp + 0x30]
mov	rbx, rcx
mov	rsi, rdx
mov	rdx, rcx
mov	rcx, rdi
call	0x140070250
call	0x140070250
cmp	byte ptr [rsp + 0x30], 0
je	0x140071ac0
je	0x140071ac0
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
test	rsi, rsi
je	0x140071ad0
je	0x140071ad0
mov	rdx, qword ptr [rbx + rdx + 0xe8]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x1400ae8e0
call	0x1400ae8e0
test	rax, rax
je	0x140071af0
je	0x140071af0
nop	word ptr [rax + rax]
mov	rsi, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x140071ab5
je	0x140071ab5
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x140071ab5
jne	0x140071ab5
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x140071ab5
je	0x140071ab5
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x140071b00
je	0x140071b00
mov	rax, rbx
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
test	rsi, rsi
jne	0x140071a80
jne	0x140071a80
mov	rax, qword ptr [rbx]
mov	edx, 1
jmp	0x140071ad5
jmp	0x140071ad5
nop	
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
jmp	0x140071a80
jmp	0x140071a80
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbx]
mov	edx, 4
jmp	0x140071ad5
jmp	0x140071ad5
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x140071ab5
jmp	0x140071ab5
mov	rbx, rax
mov	rcx, rdi
call	0x140070350
call	0x140070350
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
sub	rdx, 1
mov	rcx, rax
jne	0x140071b51
jne	0x140071b51
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 4
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140071a80
jmp	0x140071a80
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140071b1a
jmp	0x140071b1a
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140071b1a
jmp	0x140071b1a
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movzx	edx, dl
jmp	0x140070640
jmp	0x140070640
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x140070860
jmp	0x140070860
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
fld	xword ptr [rdx]
fstp	xword ptr [rsp + 0x20]
lea	rdx, [rsp + 0x20]
call	0x140070a80
call	0x140070a80
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
cvtss2sd	xmm1, xmm1
jmp	0x140070860
jmp	0x140070860
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x140070cb0
jmp	0x140070cb0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x140070ed0
jmp	0x140070ed0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x140070cb0
jmp	0x140070cb0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x140070ed0
jmp	0x140070ed0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
mov	eax, dword ptr [rcx + rax + 0x18]
and	eax, 0x4a
cmp	eax, 0x40
je	0x140071c40
je	0x140071c40
cmp	eax, 8
je	0x140071c40
je	0x140071c40
movsx	edx, dx
jmp	0x140070cb0
jmp	0x140070cb0
movzx	edx, dx
jmp	0x140070cb0
jmp	0x140070cb0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movzx	edx, dx
jmp	0x140070ed0
jmp	0x140070ed0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x1400710f0
jmp	0x1400710f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x140071310
jmp	0x140071310
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, 0x7fffffff
sub	rcx, rdx
cmp	rcx, 0x7fffffff
jg	0x140071ca0
jg	0x140071ca0
cmp	rcx, -0x80000000
mov	eax, 0x80000000
cmovge	eax, ecx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
cmp	qword ptr [rax - 0x18], 0
jne	0x140071ce8
jne	0x140071ce8
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax + rax]
mov	rdx, qword ptr [rip + 0x4c941]
mov	r8d, dword ptr [rdx]
test	r8d, r8d
jne	0x140071d10
jne	0x140071d10
mov	edx, dword ptr [rax - 8]
test	edx, edx
jg	0x140071d20
jg	0x140071d20
mov	dword ptr [rax - 8], 0xffffffff
add	rsp, 0x28
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x140071d20
jg	0x140071d20
mov	rax, qword ptr [rcx]
jmp	0x140071cfe
jmp	0x140071cfe
nop	dword ptr [rax]
xor	r9d, r9d
xor	r8d, r8d
xor	edx, edx
mov	qword ptr [rsp + 0x30], rcx
call	0x140073e00
call	0x140073e00
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
jmp	0x140071cfe
jmp	0x140071cfe
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	edi, edx
xor	edx, edx
mov	rbx, rcx
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
test	rbx, rbx
je	0x140071d74
je	0x140071d74
cmp	rbx, 1
je	0x140071d90
je	0x140071d90
movsx	edx, dil
mov	r8, rbx
call	0x1400159a8
call	0x1400159a8
mov	rcx, rax
mov	rax, rcx
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [rsi + rbx + 0x18], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
mov	byte ptr [rax + 0x18], dil
jmp	0x140071d74
jmp	0x140071d74
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
sub	rdx, rcx
mov	rdi, rcx
mov	rbx, rdx
xor	edx, edx
mov	rcx, rbx
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbx, 1
je	0x140071e00
je	0x140071e00
test	rbx, rbx
jne	0x140071df0
jne	0x140071df0
mov	rax, rcx
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [rsi + rbx + 0x18], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x140071dcc
jmp	0x140071dcc
movzx	eax, byte ptr [rdi]
mov	byte ptr [rsi + 0x18], al
jmp	0x140071dcc
jmp	0x140071dcc
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rdi, rcx
test	rcx, rcx
je	0x140071e68
je	0x140071e68
mov	rbx, rdx
xor	edx, edx
sub	rbx, rcx
mov	rcx, rbx
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbx, 1
jne	0x140071e88
jne	0x140071e88
movzx	eax, byte ptr [rdi]
lea	rbp, [rsi + 0x19]
mov	byte ptr [rsi + 0x18], al
mov	rax, rcx
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [rbp], 0
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
test	rdx, rdx
jne	0x140071ea2
jne	0x140071ea2
xor	ecx, ecx
xor	edx, edx
xor	ebx, ebx
call	0x140072600
call	0x140072600
lea	rcx, [rax + 0x18]
mov	rsi, rax
mov	rbp, rcx
jmp	0x140071e47
jmp	0x140071e47
nop	dword ptr [rax]
lea	rbp, [rax + rbx + 0x18]
test	rbx, rbx
je	0x140071e47
je	0x140071e47
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x140071e47
jmp	0x140071e47
lea	rcx, [rip + 0x47567]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rdi, rcx
test	rcx, rcx
je	0x140071f08
je	0x140071f08
mov	rbx, rdx
xor	edx, edx
sub	rbx, rcx
mov	rcx, rbx
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbx, 1
jne	0x140071f28
jne	0x140071f28
movzx	eax, byte ptr [rdi]
lea	rbp, [rsi + 0x19]
mov	byte ptr [rsi + 0x18], al
mov	rax, rcx
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [rbp], 0
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
test	rdx, rdx
jne	0x140071f42
jne	0x140071f42
xor	ecx, ecx
xor	edx, edx
xor	ebx, ebx
call	0x140072600
call	0x140072600
lea	rcx, [rax + 0x18]
mov	rsi, rax
mov	rbp, rcx
jmp	0x140071ee7
jmp	0x140071ee7
nop	dword ptr [rax]
lea	rbp, [rax + rbx + 0x18]
test	rbx, rbx
je	0x140071ee7
je	0x140071ee7
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x140071ee7
jmp	0x140071ee7
lea	rcx, [rip + 0x47267]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rdi, rcx
test	rcx, rcx
je	0x140071fa8
je	0x140071fa8
mov	rbx, rdx
xor	edx, edx
sub	rbx, rcx
mov	rcx, rbx
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbx, 1
jne	0x140071fc8
jne	0x140071fc8
movzx	eax, byte ptr [rdi]
lea	rbp, [rsi + 0x19]
mov	byte ptr [rsi + 0x18], al
mov	rax, rcx
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [rbp], 0
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
test	rdx, rdx
jne	0x140071fe2
jne	0x140071fe2
xor	ecx, ecx
xor	edx, edx
xor	ebx, ebx
call	0x140072600
call	0x140072600
lea	rcx, [rax + 0x18]
mov	rsi, rax
mov	rbp, rcx
jmp	0x140071f87
jmp	0x140071f87
nop	dword ptr [rax]
lea	rbp, [rax + rbx + 0x18]
test	rbx, rbx
je	0x140071f87
je	0x140071f87
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x140071f87
jmp	0x140071f87
lea	rcx, [rip + 0x48047]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rdi, rcx
test	rcx, rcx
je	0x140072048
je	0x140072048
mov	rbx, rdx
xor	edx, edx
sub	rbx, rcx
mov	rcx, rbx
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbx, 1
jne	0x140072068
jne	0x140072068
movzx	eax, byte ptr [rdi]
lea	rbp, [rsi + 0x19]
mov	byte ptr [rsi + 0x18], al
mov	rax, rcx
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [rbp], 0
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
test	rdx, rdx
jne	0x140072082
jne	0x140072082
xor	ecx, ecx
xor	edx, edx
xor	ebx, ebx
call	0x140072600
call	0x140072600
lea	rcx, [rax + 0x18]
mov	rsi, rax
mov	rbp, rcx
jmp	0x140072027
jmp	0x140072027
nop	dword ptr [rax]
lea	rbp, [rax + rbx + 0x18]
test	rbx, rbx
je	0x140072027
je	0x140072027
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x140072027
jmp	0x140072027
lea	rcx, [rip + 0x48557]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rdi, rcx
test	rcx, rcx
je	0x1400720e8
je	0x1400720e8
mov	rbx, rdx
xor	edx, edx
sub	rbx, rcx
mov	rcx, rbx
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbx, 1
jne	0x140072108
jne	0x140072108
movzx	eax, byte ptr [rdi]
lea	rbp, [rsi + 0x19]
mov	byte ptr [rsi + 0x18], al
mov	rax, rcx
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [rbp], 0
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
test	rdx, rdx
jne	0x140072122
jne	0x140072122
xor	ecx, ecx
xor	edx, edx
xor	ebx, ebx
call	0x140072600
call	0x140072600
lea	rcx, [rax + 0x18]
mov	rsi, rax
mov	rbp, rcx
jmp	0x1400720c7
jmp	0x1400720c7
nop	dword ptr [rax]
lea	rbp, [rax + rbx + 0x18]
test	rbx, rbx
je	0x1400720c7
je	0x1400720c7
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x1400720c7
jmp	0x1400720c7
lea	rcx, [rip + 0x492d7]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rdi, rcx
test	rcx, rcx
je	0x140072188
je	0x140072188
mov	rbx, rdx
xor	edx, edx
sub	rbx, rcx
mov	rcx, rbx
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbx, 1
jne	0x1400721a8
jne	0x1400721a8
movzx	eax, byte ptr [rdi]
lea	rbp, [rsi + 0x19]
mov	byte ptr [rsi + 0x18], al
mov	rax, rcx
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [rbp], 0
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
test	rdx, rdx
jne	0x1400721c2
jne	0x1400721c2
xor	ecx, ecx
xor	edx, edx
xor	ebx, ebx
call	0x140072600
call	0x140072600
lea	rcx, [rax + 0x18]
mov	rsi, rax
mov	rbp, rcx
jmp	0x140072167
jmp	0x140072167
nop	dword ptr [rax]
lea	rbp, [rax + rbx + 0x18]
test	rbx, rbx
je	0x140072167
je	0x140072167
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x140072167
jmp	0x140072167
lea	rcx, [rip + 0x47247]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
lea	rax, [rip + 0x44de9]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	r8, rdx
cmp	r8, 1
je	0x1400721f8
je	0x1400721f8
test	r8, r8
jne	0x1400721f0
jne	0x1400721f0
ret	
ret	
nop	
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
ret	
ret	
nop	
nop	
sub	r8, rdx
cmp	r8, 1
je	0x140072218
je	0x140072218
test	r8, r8
jne	0x140072210
jne	0x140072210
ret	
ret	
nop	
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
ret	
ret	
nop	
nop	
sub	r8, rdx
cmp	r8, 1
je	0x140072238
je	0x140072238
test	r8, r8
jne	0x140072230
jne	0x140072230
ret	
ret	
nop	
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
ret	
ret	
nop	
nop	
sub	r8, rdx
cmp	r8, 1
je	0x140072258
je	0x140072258
test	r8, r8
jne	0x140072250
jne	0x140072250
ret	
ret	
nop	
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
ret	
ret	
nop	
nop	
sub	rsp, 0x28
call	0x140073c10
call	0x140073c10
nop	
add	rsp, 0x28
ret	
ret	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
movabs	rax, 0x3ffffffffffffff9
mov	ebp, dword ptr [rsp + 0x70]
mov	rdi, rdx
mov	rdx, qword ptr [rcx]
add	rax, r8
mov	rsi, rcx
mov	rbx, r9
sub	rax, qword ptr [rdx - 0x18]
cmp	rax, r9
jb	0x1400722df
jb	0x1400722df
mov	rdx, rdi
call	0x140073e00
call	0x140073e00
test	rbx, rbx
je	0x1400722c3
je	0x1400722c3
add	rdi, qword ptr [rsi]
cmp	rbx, 1
je	0x1400722d0
je	0x1400722d0
movsx	edx, bpl
mov	r8, rbx
mov	rcx, rdi
call	0x1400159a8
call	0x1400159a8
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
mov	rax, rsi
mov	byte ptr [rdi], bpl
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
lea	rcx, [rip + 0x470cb]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rdi, qword ptr [rsp + 0x70]
mov	rbp, r9
mov	r9, rdi
mov	rbx, rcx
mov	rsi, rdx
call	0x140073e00
call	0x140073e00
test	rdi, rdi
je	0x14007232a
je	0x14007232a
add	rsi, qword ptr [rbx]
cmp	rdi, 1
je	0x140072340
je	0x140072340
mov	r8, rdi
mov	rdx, rbp
mov	rcx, rsi
call	0x140015998
call	0x140015998
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
movzx	eax, byte ptr [rbp]
mov	byte ptr [rsi], al
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	edi, edx
xor	edx, edx
mov	rbx, rcx
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
test	rbx, rbx
je	0x140072394
je	0x140072394
cmp	rbx, 1
je	0x1400723b0
je	0x1400723b0
movsx	edx, dil
mov	r8, rbx
call	0x1400159a8
call	0x1400159a8
mov	rcx, rax
mov	rax, rcx
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [rsi + rbx + 0x18], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
mov	byte ptr [rax + 0x18], dil
jmp	0x140072394
jmp	0x140072394
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	r8, qword ptr [rax - 0x18]
mov	rsi, rcx
mov	rbx, rdx
cmp	rdx, r8
jae	0x1400723f1
jae	0x1400723f1
mov	edx, dword ptr [rax - 8]
test	edx, edx
js	0x1400723e7
js	0x1400723e7
call	0x140071cd0
call	0x140071cd0
mov	rax, qword ptr [rsi]
add	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
lea	rcx, [rip + 0x46f20]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	edx, dword ptr [rax - 8]
test	edx, edx
mov	rdx, qword ptr [rax - 0x18]
jns	0x140072420
jns	0x140072420
add	rax, rdx
add	rsp, 0x28
ret	
ret	
nop	word ptr [rax + rax]
test	rdx, rdx
je	0x140072412
je	0x140072412
mov	r8, qword ptr [rip + 0x4c204]
mov	r9d, dword ptr [r8]
test	r9d, r9d
jne	0x140072450
jne	0x140072450
mov	r8d, dword ptr [rax - 8]
test	r8d, r8d
jg	0x140072460
jg	0x140072460
mov	dword ptr [rax - 8], 0xffffffff
add	rax, rdx
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x140072460
jg	0x140072460
mov	rax, qword ptr [rcx]
mov	rdx, qword ptr [rax - 0x18]
jmp	0x14007243d
jmp	0x14007243d
xor	edx, edx
xor	r9d, r9d
xor	r8d, r8d
mov	qword ptr [rsp + 0x30], rcx
call	0x140073e00
call	0x140073e00
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
mov	rdx, qword ptr [rax - 0x18]
jmp	0x14007243d
jmp	0x14007243d
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x4c199]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400724b0
jne	0x1400724b0
mov	eax, dword ptr [rcx + 0x10]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 0x10], edx
test	eax, eax
jle	0x1400724be
jle	0x1400724be
ret	
ret	
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 0x10], eax
test	eax, eax
jg	0x1400724aa
jg	0x1400724aa
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x4c159]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400724f0
jne	0x1400724f0
add	dword ptr [rcx + 0x10], 1
lea	rax, [rcx + 0x18]
ret	
ret	
nop	word ptr cs:[rax + rax]
lock add	dword ptr [rcx + 0x10], 1
lea	rax, [rcx + 0x18]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rcx + 0x18]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x44aa9]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	dword ptr [rcx + 0x10], 0xffffffff
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	dword ptr [rcx + 0x10], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	dword ptr [rcx + 0x10], 0
mov	qword ptr [rcx], rdx
mov	byte ptr [rcx + rdx + 0x18], 0
ret	
ret	
mov	eax, dword ptr [rcx + 0x10]
test	eax, eax
js	0x140072570
js	0x140072570
mov	rax, qword ptr [rip + 0x4c0d2]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140072580
jne	0x140072580
add	dword ptr [rcx + 0x10], 1
lea	rax, [rcx + 0x18]
ret	
ret	
nop	dword ptr [rax]
xor	r8d, r8d
jmp	0x140072590
jmp	0x140072590
nop	dword ptr [rax + rax]
lock add	dword ptr [rcx + 0x10], 1
lea	rax, [rcx + 0x18]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rcx, qword ptr [rcx]
add	rcx, r8
mov	r8, rdx
mov	rdx, qword ptr [rsi + 8]
call	0x140072600
call	0x140072600
mov	r8, qword ptr [rsi]
mov	rbx, rax
lea	rcx, [rax + 0x18]
test	r8, r8
je	0x1400725cf
je	0x1400725cf
cmp	r8, 1
je	0x1400725f0
je	0x1400725f0
lea	rdx, [rsi + 0x18]
call	0x140015998
call	0x140015998
mov	r8, qword ptr [rsi]
mov	rcx, rax
mov	rax, rcx
mov	dword ptr [rbx + 0x10], 0
mov	qword ptr [rbx], r8
mov	byte ptr [rbx + r8 + 0x18], 0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
movzx	eax, byte ptr [rsi + 0x18]
mov	byte ptr [rbx + 0x18], al
mov	r8, qword ptr [rsi]
jmp	0x1400725cf
jmp	0x1400725cf
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
movabs	rax, 0x3ffffffffffffff9
mov	rbx, rcx
cmp	rax, rcx
jb	0x140072672
jb	0x140072672
cmp	rdx, rcx
jae	0x140072658
jae	0x140072658
lea	rax, [rdx + rdx]
cmp	rcx, rax
cmovb	rbx, rax
lea	rax, [rbx + 0x39]
cmp	rax, 0x1000
jbe	0x140072658
jbe	0x140072658
cmp	rdx, rbx
jae	0x140072658
jae	0x140072658
and	eax, 0xfff
add	rbx, 0x1000
sub	rbx, rax
movabs	rax, 0x3ffffffffffffff9
cmp	rbx, rax
cmova	rbx, rax
lea	rcx, [rbx + 0x19]
call	0x1400b2c30
call	0x1400b2c30
mov	qword ptr [rax + 8], rbx
mov	dword ptr [rax + 0x10], 0
add	rsp, 0x20
pop	rbx
ret	
ret	
lea	rcx, [rip + 0x46d0c]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
push	rsi
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rax - 8]
sub	rsi, 1
test	edx, edx
jns	0x1400726a0
jns	0x1400726a0
add	rax, rsi
add	rsp, 0x20
pop	rsi
ret	
ret	
cmp	qword ptr [rax - 0x18], 0
je	0x140072697
je	0x140072697
mov	rdx, qword ptr [rip + 0x4bf82]
mov	r8d, dword ptr [rdx]
test	r8d, r8d
jne	0x1400726d0
jne	0x1400726d0
mov	edx, dword ptr [rax - 8]
test	edx, edx
jg	0x1400726e0
jg	0x1400726e0
mov	dword ptr [rax - 8], 0xffffffff
add	rax, rsi
add	rsp, 0x20
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x1400726e0
jg	0x1400726e0
mov	rax, qword ptr [rcx]
jmp	0x1400726bd
jmp	0x1400726bd
nop	dword ptr [rax]
xor	r9d, r9d
xor	r8d, r8d
xor	edx, edx
mov	qword ptr [rsp + 0x30], rcx
call	0x140073e00
call	0x140073e00
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
jmp	0x1400726bd
jmp	0x1400726bd
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	r8, qword ptr [rdx]
mov	rbx, rdx
mov	edx, dword ptr [r8 - 8]
mov	rax, rcx
test	edx, edx
jns	0x140072720
jns	0x140072720
mov	qword ptr [rax], r8
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
cmp	qword ptr [r8 - 0x18], 0
je	0x140072716
je	0x140072716
mov	rdx, qword ptr [rip + 0x4bf02]
mov	ecx, dword ptr [rdx]
test	ecx, ecx
jne	0x140072750
jne	0x140072750
mov	edx, dword ptr [r8 - 8]
test	edx, edx
jg	0x140072760
jg	0x140072760
mov	dword ptr [r8 - 8], 0xffffffff
mov	qword ptr [rax], r8
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [r8 - 8]
test	edx, edx
jg	0x140072760
jg	0x140072760
mov	r8, qword ptr [rbx]
jmp	0x14007273c
jmp	0x14007273c
nop	dword ptr [rax]
xor	r8d, r8d
xor	r9d, r9d
xor	edx, edx
mov	rcx, rbx
mov	qword ptr [rsp + 0x30], rax
call	0x140073e00
call	0x140073e00
mov	r8, qword ptr [rbx]
mov	rax, qword ptr [rsp + 0x30]
jmp	0x14007273c
jmp	0x14007273c
nop	
mov	rax, qword ptr [rcx]
mov	r8d, dword ptr [rax - 8]
test	r8d, r8d
jns	0x140072793
jns	0x140072793
mov	dword ptr [rax - 8], 0
mov	r8, qword ptr [rdx]
mov	r9d, dword ptr [r8 - 8]
test	r9d, r9d
jns	0x1400727a7
jns	0x1400727a7
mov	dword ptr [r8 - 8], 0
mov	qword ptr [rcx], r8
mov	qword ptr [rdx], rax
ret	
ret	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	edx, dword ptr [rax - 8]
test	edx, edx
jns	0x1400727c8
jns	0x1400727c8
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax + rax]
cmp	qword ptr [rax - 0x18], 0
je	0x1400727be
je	0x1400727be
mov	rdx, qword ptr [rip + 0x4be5a]
mov	r8d, dword ptr [rdx]
test	r8d, r8d
jne	0x1400727f8
jne	0x1400727f8
mov	edx, dword ptr [rax - 8]
test	edx, edx
jg	0x140072808
jg	0x140072808
mov	dword ptr [rax - 8], 0xffffffff
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x140072808
jg	0x140072808
mov	rax, qword ptr [rcx]
jmp	0x1400727e5
jmp	0x1400727e5
nop	dword ptr [rax]
xor	r9d, r9d
xor	r8d, r8d
xor	edx, edx
mov	qword ptr [rsp + 0x30], rcx
call	0x140073e00
call	0x140073e00
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
jmp	0x1400727e5
jmp	0x1400727e5
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	r9d, r9d
xor	edx, edx
mov	rax, qword ptr [rcx]
mov	r8, qword ptr [rax - 0x18]
jmp	0x140073e00
jmp	0x140073e00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	r9d, r9d
mov	r8d, 1
mov	rsi, rdx
sub	rsi, qword ptr [rcx]
mov	rbx, rcx
mov	rdx, rsi
call	0x140073e00
call	0x140073e00
mov	rax, qword ptr [rbx]
mov	dword ptr [rax - 8], 0xffffffff
add	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rax, rdx
sub	r8, rdx
jne	0x1400728b0
jne	0x1400728b0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
sub	rax, qword ptr [rcx]
xor	r9d, r9d
mov	rdx, rax
mov	rbx, rax
call	0x140073e00
call	0x140073e00
mov	rax, qword ptr [rsi]
mov	dword ptr [rax - 8], 0xffffffff
add	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	r9, qword ptr [rax - 0x18]
mov	rax, r9
mov	rbx, rcx
sub	rax, rdx
cmp	rax, r8
cmovbe	r8, rax
cmp	r9, rdx
jb	0x140072912
jb	0x140072912
xor	r9d, r9d
call	0x140073e00
call	0x140073e00
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	r8, rdx
lea	rcx, [rip + 0x469c4]
lea	rdx, [rip + 0x46a7a]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	edx, dword ptr [rax - 8]
test	edx, edx
jns	0x140072948
jns	0x140072948
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax + rax]
cmp	qword ptr [rax - 0x18], 0
je	0x14007293e
je	0x14007293e
mov	rdx, qword ptr [rip + 0x4bcda]
mov	r8d, dword ptr [rdx]
test	r8d, r8d
jne	0x140072978
jne	0x140072978
mov	edx, dword ptr [rax - 8]
test	edx, edx
jg	0x140072988
jg	0x140072988
mov	dword ptr [rax - 8], 0xffffffff
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x140072988
jg	0x140072988
mov	rax, qword ptr [rcx]
jmp	0x140072965
jmp	0x140072965
nop	dword ptr [rax]
xor	r9d, r9d
xor	r8d, r8d
xor	edx, edx
mov	qword ptr [rsp + 0x30], rcx
call	0x140073e00
call	0x140073e00
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
jmp	0x140072965
jmp	0x140072965
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
call	0x140015a08
call	0x140015a08
mov	rdx, rbx
mov	rcx, rsi
mov	r8, rax
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400729e0
jmp	0x1400729e0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rdi, rdx
mov	rsi, r8
test	r8, r8
je	0x140072a6a
je	0x140072a6a
movabs	rdx, 0x3ffffffffffffff9
mov	rcx, qword ptr [rcx]
mov	rax, qword ptr [rcx - 0x18]
sub	rdx, rax
cmp	rdx, r8
jb	0x140072ae0
jb	0x140072ae0
lea	rbp, [r8 + rax]
cmp	qword ptr [rcx - 0x10], rbp
jae	0x140072ab0
jae	0x140072ab0
cmp	rdi, rcx
jb	0x140072a32
jb	0x140072a32
mov	rax, qword ptr [rcx - 0x18]
add	rax, rcx
cmp	rax, rdi
jae	0x140072a80
jae	0x140072a80
mov	rcx, rbx
mov	rdx, rbp
call	0x140073cf0
call	0x140073cf0
mov	rcx, qword ptr [rbx]
mov	rax, qword ptr [rcx - 0x18]
add	rcx, rax
cmp	rsi, 1
je	0x140072aa1
je	0x140072aa1
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rbx]
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rbp
mov	byte ptr [rax + rbp], 0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
sub	rdi, rcx
mov	rdx, rbp
mov	rcx, rbx
call	0x140073cf0
call	0x140073cf0
mov	rcx, qword ptr [rbx]
add	rdi, rcx
mov	rax, qword ptr [rcx - 0x18]
add	rcx, rax
cmp	rsi, 1
jne	0x140072a4d
jne	0x140072a4d
movzx	eax, byte ptr [rdi]
mov	byte ptr [rcx], al
jmp	0x140072a58
jmp	0x140072a58
nop	dword ptr [rax + rax]
mov	rdx, qword ptr [rip + 0x4bb79]
mov	r8d, dword ptr [rdx]
test	r8d, r8d
jne	0x140072ad0
jne	0x140072ad0
mov	edx, dword ptr [rcx - 8]
test	edx, edx
jle	0x140072a44
jle	0x140072a44
jmp	0x140072a21
jmp	0x140072a21
nop	
mov	eax, dword ptr [rcx - 8]
mov	rcx, qword ptr [rbx]
test	eax, eax
jg	0x140072a21
jg	0x140072a21
jmp	0x140072a94
jmp	0x140072a94
lea	rcx, [rip + 0x46953]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rdx
mov	rdx, qword ptr [rdx]
mov	rbx, rcx
mov	rdi, qword ptr [rdx - 0x18]
test	rdi, rdi
je	0x140072b53
je	0x140072b53
mov	rcx, qword ptr [rcx]
mov	rax, qword ptr [rcx - 0x18]
lea	rbp, [rax + rdi]
cmp	qword ptr [rcx - 0x10], rbp
jae	0x140072b60
jae	0x140072b60
mov	rdx, rbp
mov	rcx, rbx
call	0x140073cf0
call	0x140073cf0
mov	rcx, qword ptr [rbx]
mov	rdx, qword ptr [rsi]
mov	rax, qword ptr [rcx - 0x18]
add	rcx, rax
cmp	rdi, 1
je	0x140072b98
je	0x140072b98
mov	r8, rdi
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rbx]
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rbp
mov	byte ptr [rax + rbp], 0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
mov	r8, qword ptr [rip + 0x4bac9]
mov	r9d, dword ptr [r8]
test	r9d, r9d
jne	0x140072b80
jne	0x140072b80
mov	r8d, dword ptr [rcx - 8]
test	r8d, r8d
jg	0x140072b1b
jg	0x140072b1b
jmp	0x140072b30
jmp	0x140072b30
nop	word ptr [rax + rax]
mov	eax, dword ptr [rcx - 8]
test	eax, eax
jg	0x140072b1b
jg	0x140072b1b
mov	rcx, qword ptr [rbx]
mov	rdx, qword ptr [rsi]
mov	rax, qword ptr [rcx - 0x18]
jmp	0x140072b30
jmp	0x140072b30
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
jmp	0x140072b41
jmp	0x140072b41
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbp, rdx
mov	rdx, qword ptr [rdx]
mov	rsi, rcx
mov	rdi, r8
mov	rbx, qword ptr [rdx - 0x18]
cmp	rbx, r8
jb	0x140072c6f
jb	0x140072c6f
sub	rbx, r8
cmp	rbx, r9
cmova	rbx, r9
test	rbx, rbx
je	0x140072c38
je	0x140072c38
mov	rcx, qword ptr [rcx]
mov	rax, qword ptr [rcx - 0x18]
lea	r12, [rax + rbx]
cmp	qword ptr [rcx - 0x10], r12
jb	0x140072bfb
jb	0x140072bfb
mov	r8, qword ptr [rip + 0x4ba46]
mov	r9d, dword ptr [r8]
test	r9d, r9d
jne	0x140072c50
jne	0x140072c50
mov	r8d, dword ptr [rcx - 8]
test	r8d, r8d
jle	0x140072c11
jle	0x140072c11
mov	rdx, r12
mov	rcx, rsi
call	0x140073cf0
call	0x140073cf0
mov	rcx, qword ptr [rsi]
mov	rdx, qword ptr [rbp]
mov	rax, qword ptr [rcx - 0x18]
add	rdx, rdi
add	rcx, rax
cmp	rbx, 1
je	0x140072c68
je	0x140072c68
mov	r8, rbx
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rsi]
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], r12
mov	byte ptr [rax + r12], 0
mov	rax, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	eax, dword ptr [rcx - 8]
test	eax, eax
jg	0x140072bfb
jg	0x140072bfb
mov	rcx, qword ptr [rsi]
mov	rdx, qword ptr [rbp]
mov	rax, qword ptr [rcx - 0x18]
jmp	0x140072c11
jmp	0x140072c11
nop	dword ptr [rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
jmp	0x140072c25
jmp	0x140072c25
mov	r9, rbx
lea	rdx, [rip + 0x467c1]
lea	rcx, [rip + 0x46660]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	r8, qword ptr [rdx + 8]
mov	rdx, rax
jmp	0x1400729e0
jmp	0x1400729e0
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rbx, rdx
mov	edi, r8d
test	rdx, rdx
je	0x140072d2c
je	0x140072d2c
movabs	rdx, 0x3ffffffffffffff9
mov	rcx, qword ptr [rcx]
mov	rax, qword ptr [rcx - 0x18]
sub	rdx, rax
cmp	rdx, rbx
jb	0x140072d55
jb	0x140072d55
lea	rbp, [rbx + rax]
cmp	qword ptr [rcx - 0x10], rbp
jb	0x140072cf3
jb	0x140072cf3
mov	rdx, qword ptr [rip + 0x4b94c]
mov	r8d, dword ptr [rdx]
test	r8d, r8d
jne	0x140072d40
jne	0x140072d40
mov	edx, dword ptr [rcx - 8]
test	edx, edx
jle	0x140072d05
jle	0x140072d05
mov	rcx, rsi
mov	rdx, rbp
call	0x140073cf0
call	0x140073cf0
mov	rcx, qword ptr [rsi]
mov	rax, qword ptr [rcx - 0x18]
add	rcx, rax
cmp	rbx, 1
je	0x140072d50
je	0x140072d50
movsx	edx, dil
mov	r8, rbx
call	0x1400159a8
call	0x1400159a8
mov	rax, qword ptr [rsi]
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rbp
mov	byte ptr [rax + rbp], 0
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	eax, dword ptr [rcx - 8]
test	eax, eax
jg	0x140072cf3
jg	0x140072cf3
mov	rcx, qword ptr [rsi]
mov	rax, qword ptr [rcx - 0x18]
jmp	0x140072d05
jmp	0x140072d05
mov	byte ptr [rcx], dil
jmp	0x140072d1a
jmp	0x140072d1a
lea	rcx, [rip + 0x466de]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rcx]
mov	r8d, dword ptr [rcx - 8]
test	r8d, r8d
jns	0x140072d86
jns	0x140072d86
mov	dword ptr [rcx - 8], 0
mov	r8, qword ptr [rdx]
mov	r9d, dword ptr [r8 - 8]
test	r9d, r9d
jns	0x140072d9a
jns	0x140072d9a
mov	dword ptr [r8 - 8], 0
mov	qword ptr [rax], r8
mov	qword ptr [rdx], rcx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
call	0x140015a08
call	0x140015a08
mov	rdx, rbx
mov	rcx, rsi
mov	r8, rax
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x140072de0
jmp	0x140072de0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
movabs	rax, 0x3ffffffffffffff9
mov	rsi, rcx
mov	rcx, qword ptr [rcx]
mov	rbx, r8
mov	rdi, rdx
mov	r8, qword ptr [rcx - 0x18]
cmp	rax, rbx
jb	0x140072f1d
jb	0x140072f1d
cmp	rdx, rcx
jb	0x140072e98
jb	0x140072e98
lea	rax, [rcx + r8]
cmp	rax, rdx
jb	0x140072e98
jb	0x140072e98
mov	rax, qword ptr [rip + 0x4b80d]
mov	edx, dword ptr [rax]
test	edx, edx
jne	0x140072e80
jne	0x140072e80
mov	eax, dword ptr [rcx - 8]
test	eax, eax
jg	0x140072e98
jg	0x140072e98
mov	rax, rdi
sub	rax, rcx
cmp	rax, rbx
jae	0x140072ee0
jae	0x140072ee0
test	rax, rax
je	0x140072e60
je	0x140072e60
cmp	rbx, 1
je	0x140072f10
je	0x140072f10
mov	r8, rbx
mov	rdx, rdi
call	0x1400159a0
call	0x1400159a0
mov	rcx, qword ptr [rsi]
nop	dword ptr [rax]
mov	dword ptr [rcx - 8], 0
mov	qword ptr [rcx - 0x18], rbx
mov	byte ptr [rcx + rbx], 0
mov	rax, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, dword ptr [rcx - 8]
test	eax, eax
jle	0x140072f08
jle	0x140072f08
mov	rax, qword ptr [rsi]
mov	r8, qword ptr [rax - 0x18]
nop	word ptr [rax + rax]
xor	edx, edx
mov	r9, rbx
mov	rcx, rsi
call	0x140073e00
call	0x140073e00
test	rbx, rbx
je	0x140072e6f
je	0x140072e6f
mov	rcx, qword ptr [rsi]
cmp	rbx, 1
je	0x140072ed0
je	0x140072ed0
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rax, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
movzx	eax, byte ptr [rdi]
mov	byte ptr [rcx], al
mov	rax, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
cmp	rbx, 1
je	0x140072f10
je	0x140072f10
test	rbx, rbx
je	0x140072e60
je	0x140072e60
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
jmp	0x140072e60
jmp	0x140072e60
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rsi]
jmp	0x140072e30
jmp	0x140072e30
movzx	eax, byte ptr [rdi]
mov	byte ptr [rcx], al
mov	rcx, qword ptr [rsi]
jmp	0x140072e60
jmp	0x140072e60
lea	rcx, [rip + 0x464c0]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [rdx]
mov	rbx, rcx
cmp	qword ptr [rcx], rsi
je	0x140072f7a
je	0x140072f7a
mov	eax, dword ptr [rsi - 8]
lea	rcx, [rsi - 0x18]
lea	rdx, [rsi - 8]
test	eax, eax
js	0x140072f88
js	0x140072f88
mov	rax, qword ptr [rip + 0x4b6d9]
mov	ecx, dword ptr [rax]
test	ecx, ecx
jne	0x140072fc8
jne	0x140072fc8
add	dword ptr [rsi - 8], 1
mov	eax, dword ptr [rax]
mov	rcx, qword ptr [rbx]
test	eax, eax
jne	0x140072fa8
jne	0x140072fa8
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140072fb6
jle	0x140072fb6
mov	qword ptr [rbx], rsi
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
mov	rcx, qword ptr [rbx]
mov	rsi, rax
mov	rax, qword ptr [rip + 0x4b68e]
mov	eax, dword ptr [rax]
test	eax, eax
je	0x140072f6a
je	0x140072f6a
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140072f77
jg	0x140072f77
sub	rcx, 0x18
call	0x1400b2be0
call	0x1400b2be0
jmp	0x140072f77
jmp	0x140072f77
nop	dword ptr [rax]
lock add	dword ptr [rdx], 1
jmp	0x140072f61
jmp	0x140072f61
nop	
nop	
sub	rsp, 0x28
mov	rdx, qword ptr [rdx]
mov	r10, qword ptr [rdx - 0x18]
mov	rax, r8
mov	r8, r10
sub	r8, rax
cmp	r8, r9
cmova	r8, r9
cmp	r10, rax
jb	0x140072ffc
jb	0x140072ffc
add	rdx, rax
add	rsp, 0x28
jmp	0x140072de0
jmp	0x140072de0
mov	r9, r10
mov	r8, rax
lea	rdx, [rip + 0x463db]
lea	rcx, [rip + 0x462d0]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	r8, qword ptr [rdx + 8]
mov	rdx, rax
jmp	0x140072de0
jmp	0x140072de0
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	edi, r8d
mov	r8, qword ptr [rax - 0x18]
mov	rsi, rcx
mov	rbx, rdx
movabs	rax, 0x3ffffffffffffff9
cmp	rax, rdx
jb	0x140073096
jb	0x140073096
mov	r9, rdx
xor	edx, edx
call	0x140073e00
call	0x140073e00
test	rbx, rbx
je	0x14007307a
je	0x14007307a
mov	rcx, qword ptr [rsi]
cmp	rbx, 1
je	0x140073088
je	0x140073088
movsx	edx, dil
mov	r8, rbx
call	0x1400159a8
call	0x1400159a8
mov	rax, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rax, rsi
mov	byte ptr [rcx], dil
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x46314]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	r9, qword ptr [r8 + 8]
mov	r8, qword ptr [r8]
sub	rdx, qword ptr [rcx]
jmp	0x1400731e0
jmp	0x1400731e0
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rsi, rdx
mov	rbx, rcx
mov	edi, r8d
movabs	rdx, 0x3ffffffffffffff9
sub	rsi, rax
cmp	qword ptr [rax - 0x18], rdx
je	0x140073113
je	0x140073113
mov	r9d, 1
xor	r8d, r8d
mov	rdx, rsi
call	0x140073e00
call	0x140073e00
mov	rax, qword ptr [rbx]
mov	byte ptr [rax + rsi], dil
mov	rax, qword ptr [rbx]
mov	dword ptr [rax - 8], 0xffffffff
add	rax, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x46297]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
movabs	rax, 0x3ffffffffffffff9
mov	rsi, rcx
mov	rcx, qword ptr [rcx]
mov	rdi, rdx
mov	rbx, r8
mov	ebp, r9d
sub	rax, qword ptr [rcx - 0x18]
sub	rdi, rcx
cmp	rax, r8
jb	0x140073194
jb	0x140073194
mov	r9, r8
mov	rdx, rdi
xor	r8d, r8d
mov	rcx, rsi
call	0x140073e00
call	0x140073e00
test	rbx, rbx
je	0x14007318b
je	0x14007318b
add	rdi, qword ptr [rsi]
cmp	rbx, 1
je	0x140073188
je	0x140073188
movsx	edx, bpl
mov	r8, rbx
mov	rcx, rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x1400159a8
jmp	0x1400159a8
nop	dword ptr [rax + rax]
mov	byte ptr [rdi], bpl
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
lea	rcx, [rip + 0x46216]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rcx, r8
mov	rdi, rdx
mov	rbx, r8
call	0x140015a08
call	0x140015a08
mov	r8, rbx
mov	rdx, rdi
mov	rcx, rsi
mov	r9, rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x1400731e0
jmp	0x1400731e0
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rdx
mov	rdx, qword ptr [rcx]
mov	rbx, r9
mov	rdi, rcx
mov	rbp, r8
mov	r9, qword ptr [rdx - 0x18]
cmp	r9, rsi
jb	0x140073377
jb	0x140073377
movabs	rax, 0x3ffffffffffffff9
sub	rax, r9
cmp	rax, rbx
jb	0x14007336b
jb	0x14007336b
cmp	r8, rdx
jb	0x140073240
jb	0x140073240
add	r9, rdx
cmp	r9, r8
jb	0x140073240
jb	0x140073240
mov	rax, qword ptr [rip + 0x4b402]
mov	ecx, dword ptr [rax]
test	ecx, ecx
jne	0x140073280
jne	0x140073280
mov	eax, dword ptr [rdx - 8]
test	eax, eax
jle	0x14007328a
jle	0x14007328a
nop	dword ptr [rax + rax]
xor	r8d, r8d
mov	r9, rbx
mov	rdx, rsi
mov	rcx, rdi
call	0x140073e00
call	0x140073e00
test	rbx, rbx
je	0x14007326d
je	0x14007326d
add	rsi, qword ptr [rdi]
cmp	rbx, 1
je	0x1400732d8
je	0x1400732d8
mov	r8, rbx
mov	rdx, rbp
mov	rcx, rsi
call	0x140015998
call	0x140015998
mov	rax, rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	eax, dword ptr [rdx - 8]
test	eax, eax
jg	0x140073240
jg	0x140073240
mov	rdx, qword ptr [rdi]
sub	rbp, rdx
mov	rcx, rdi
mov	rdx, rsi
mov	r9, rbx
xor	r8d, r8d
call	0x140073e00
call	0x140073e00
mov	rcx, qword ptr [rdi]
lea	rdx, [rcx + rbp]
add	rcx, rsi
lea	rax, [rdx + rbx]
cmp	rcx, rax
jae	0x1400732f0
jae	0x1400732f0
cmp	rdx, rcx
jb	0x140073320
jb	0x140073320
cmp	rbx, 1
je	0x14007335a
je	0x14007335a
test	rbx, rbx
je	0x14007326d
je	0x14007326d
mov	r8, rbx
mov	rdx, rax
call	0x140015998
call	0x140015998
jmp	0x14007326d
jmp	0x14007326d
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rbp]
mov	byte ptr [rsi], al
mov	rax, rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
cmp	rbx, 1
je	0x140073310
je	0x140073310
test	rbx, rbx
je	0x14007326d
je	0x14007326d
mov	r8, rbx
call	0x140015998
call	0x140015998
jmp	0x14007326d
jmp	0x14007326d
nop	dword ptr [rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
jmp	0x14007326d
jmp	0x14007326d
nop	word ptr [rax + rax]
sub	rsi, rbp
cmp	rsi, 1
je	0x140073364
je	0x140073364
mov	r8, rsi
call	0x140015998
call	0x140015998
mov	rcx, rax
mov	r8, rbx
lea	rdx, [rcx + rbx]
add	rcx, rsi
sub	r8, rsi
cmp	r8, 1
je	0x140073310
je	0x140073310
test	r8, r8
je	0x14007326d
je	0x14007326d
call	0x140015998
call	0x140015998
jmp	0x14007326d
jmp	0x14007326d
movzx	eax, byte ptr [rax]
mov	byte ptr [rcx], al
jmp	0x14007326d
jmp	0x14007326d
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
jmp	0x140073334
jmp	0x140073334
lea	rcx, [rip + 0x46087]
call	0x1400b3ba0
call	0x1400b3ba0
mov	r8, rsi
lea	rdx, [rip + 0x46078]
lea	rcx, [rip + 0x45f58]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
mov	r8, qword ptr [r8]
mov	r9, qword ptr [r8 - 0x18]
jmp	0x1400731e0
jmp	0x1400731e0
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r11, qword ptr [r8]
mov	r10, qword ptr [rsp + 0x50]
mov	r8, qword ptr [r11 - 0x18]
mov	rax, r9
mov	r9, r8
sub	r9, rax
cmp	r9, r10
cmova	r9, r10
cmp	r8, rax
jb	0x1400733d2
jb	0x1400733d2
lea	r8, [r11 + rax]
add	rsp, 0x28
jmp	0x1400731e0
jmp	0x1400731e0
mov	r9, r8
lea	rdx, [rip + 0x4601d]
mov	r8, rax
lea	rcx, [rip + 0x45efa]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	ebp, r9d
mov	r9, qword ptr [rax - 0x18]
mov	rsi, rcx
mov	rdi, rdx
mov	rbx, r8
cmp	r9, rdx
jb	0x14007346f
jb	0x14007346f
movabs	rax, 0x3ffffffffffffff9
sub	rax, r9
cmp	rax, r8
jb	0x140073485
jb	0x140073485
mov	r9, r8
xor	r8d, r8d
call	0x140073e00
call	0x140073e00
test	rbx, rbx
je	0x14007344a
je	0x14007344a
add	rdi, qword ptr [rsi]
cmp	rbx, 1
je	0x140073460
je	0x140073460
movsx	edx, bpl
mov	r8, rbx
mov	rcx, rdi
call	0x1400159a8
call	0x1400159a8
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rax, rsi
mov	byte ptr [rdi], bpl
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	r8, rdx
lea	rcx, [rip + 0x45e67]
lea	rdx, [rip + 0x45f79]
call	0x1400aed20
call	0x1400aed20
lea	rcx, [rip + 0x45f25]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	r8, qword ptr [rdx]
mov	rbx, rdx
mov	edx, dword ptr [r8 - 8]
mov	rax, rcx
test	edx, edx
mov	rdx, qword ptr [r8 - 0x18]
jns	0x1400734d0
jns	0x1400734d0
add	r8, rdx
mov	qword ptr [rax], r8
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	word ptr cs:[rax + rax]
test	rdx, rdx
je	0x1400734ba
je	0x1400734ba
mov	rcx, qword ptr [rip + 0x4b154]
mov	r9d, dword ptr [rcx]
test	r9d, r9d
jne	0x140073500
jne	0x140073500
mov	ecx, dword ptr [r8 - 8]
test	ecx, ecx
jg	0x140073518
jg	0x140073518
mov	dword ptr [r8 - 8], 0xffffffff
add	r8, rdx
mov	qword ptr [rax], r8
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	edx, dword ptr [r8 - 8]
test	edx, edx
jg	0x140073518
jg	0x140073518
mov	r8, qword ptr [rbx]
mov	rdx, qword ptr [r8 - 0x18]
jmp	0x1400734ec
jmp	0x1400734ec
nop	dword ptr [rax]
xor	r8d, r8d
xor	edx, edx
xor	r9d, r9d
mov	rcx, rbx
mov	qword ptr [rsp + 0x30], rax
call	0x140073e00
call	0x140073e00
mov	r8, qword ptr [rbx]
mov	rax, qword ptr [rsp + 0x30]
mov	rdx, qword ptr [r8 - 0x18]
jmp	0x1400734ec
jmp	0x1400734ec
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	r8, qword ptr [rax - 0x18]
movabs	rax, 0x3ffffffffffffff9
cmp	rax, rdx
jb	0x14007358f
jb	0x14007358f
cmp	r8, rdx
jb	0x140073580
jb	0x140073580
cmp	rdx, r8
jb	0x140073570
jb	0x140073570
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax]
xor	r9d, r9d
sub	r8, rdx
add	rsp, 0x28
jmp	0x140073e00
jmp	0x140073e00
nop	
sub	rdx, r8
xor	r8d, r8d
add	rsp, 0x28
jmp	0x140072ca0
jmp	0x140072ca0
lea	rcx, [rip + 0x45eb9]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
movabs	r9, 0x3ffffffffffffff9
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
cmp	r9, rdx
jb	0x1400735f8
jb	0x1400735f8
cmp	rax, rdx
jb	0x1400735e8
jb	0x1400735e8
cmp	rdx, rax
jb	0x1400735d0
jb	0x1400735d0
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax]
sub	rax, rdx
xor	r9d, r9d
mov	r8, rax
add	rsp, 0x28
jmp	0x140073e00
jmp	0x140073e00
nop	word ptr [rax + rax]
sub	rdx, rax
movsx	r8d, r8b
add	rsp, 0x28
jmp	0x140072ca0
jmp	0x140072ca0
lea	rcx, [rip + 0x45e50]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
cmp	r8, 1
je	0x140073628
je	0x140073628
test	r8, r8
jne	0x140073620
jne	0x140073620
ret	
ret	
nop	dword ptr [rax]
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
ret	
ret	
nop	
nop	
mov	rax, rdx
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	edx, dword ptr [rax - 8]
test	edx, edx
jns	0x140073658
jns	0x140073658
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax + rax]
cmp	qword ptr [rax - 0x18], 0
je	0x14007364e
je	0x14007364e
mov	rdx, qword ptr [rip + 0x4afca]
mov	r8d, dword ptr [rdx]
test	r8d, r8d
jne	0x140073688
jne	0x140073688
mov	edx, dword ptr [rax - 8]
test	edx, edx
jg	0x140073698
jg	0x140073698
mov	dword ptr [rax - 8], 0xffffffff
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x140073698
jg	0x140073698
mov	rax, qword ptr [rcx]
jmp	0x140073675
jmp	0x140073675
nop	dword ptr [rax]
xor	r9d, r9d
xor	r8d, r8d
xor	edx, edx
mov	qword ptr [rsp + 0x30], rcx
call	0x140073e00
call	0x140073e00
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
jmp	0x140073675
jmp	0x140073675
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
cmp	r8, 1
je	0x1400736d8
je	0x1400736d8
test	r8, r8
jne	0x1400736d0
jne	0x1400736d0
ret	
ret	
nop	dword ptr [rax]
jmp	0x1400159a0
jmp	0x1400159a0
nop	dword ptr [rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
ret	
ret	
nop	
nop	
sub	qword ptr [rsp + 0x28], r9
mov	rax, rdx
sub	rax, qword ptr [rcx]
sub	r8, rdx
mov	rdx, rax
jmp	0x140073900
jmp	0x140073900
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, rcx
mov	rcx, r9
mov	rsi, rdx
mov	rbp, r8
mov	rdi, r9
call	0x140015a08
call	0x140015a08
mov	rdx, rsi
sub	rdx, qword ptr [rbx]
mov	r8, rbp
mov	qword ptr [rsp + 0x20], rax
mov	r9, rdi
sub	r8, rsi
mov	rcx, rbx
call	0x140073900
call	0x140073900
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	qword ptr [rsp + 0x28], r9
mov	rax, rdx
sub	rax, qword ptr [rcx]
sub	r8, rdx
mov	rdx, rax
jmp	0x140073900
jmp	0x140073900
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rdx
sub	rax, qword ptr [rcx]
sub	r8, rdx
mov	rdx, rax
jmp	0x140073900
jmp	0x140073900
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	r9, qword ptr [r9]
mov	r10, qword ptr [r9 - 0x18]
mov	qword ptr [rsp + 0x20], r10
mov	rax, rdx
sub	rax, qword ptr [rcx]
sub	r8, rdx
mov	rdx, rax
call	0x140073900
call	0x140073900
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	qword ptr [rsp + 0x28], r9
mov	rax, rdx
sub	rax, qword ptr [rcx]
sub	r8, rdx
mov	rdx, rax
jmp	0x140073900
jmp	0x140073900
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	qword ptr [rsp + 0x28], r9
mov	rax, rdx
sub	rax, qword ptr [rcx]
sub	r8, rdx
mov	rdx, rax
jmp	0x140073900
jmp	0x140073900
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	r10, qword ptr [r9 + 8]
mov	qword ptr [rsp + 0x20], r10
mov	rax, rdx
mov	r9, qword ptr [r9]
sub	r8, rdx
sub	rax, qword ptr [rcx]
mov	rdx, rax
call	0x140073900
call	0x140073900
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
movabs	rax, 0x3ffffffffffffff9
mov	ebp, dword ptr [rsp + 0x70]
mov	rdi, rcx
mov	rcx, qword ptr [rcx]
sub	r8, rdx
mov	rbx, rdx
add	rax, r8
mov	rsi, r9
sub	rax, qword ptr [rcx - 0x18]
sub	rbx, rcx
cmp	rax, r9
jb	0x1400738af
jb	0x1400738af
mov	rdx, rbx
mov	rcx, rdi
call	0x140073e00
call	0x140073e00
test	rsi, rsi
je	0x14007388c
je	0x14007388c
add	rbx, qword ptr [rdi]
cmp	rsi, 1
je	0x1400738a0
je	0x1400738a0
movsx	edx, bpl
mov	r8, rsi
mov	rcx, rbx
call	0x1400159a8
call	0x1400159a8
mov	rax, rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, rdi
mov	byte ptr [rbx], bpl
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
lea	rcx, [rip + 0x45afb]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, rcx
mov	rcx, r9
mov	rdi, rdx
mov	rbp, r8
mov	rbx, r9
call	0x140015a08
call	0x140015a08
mov	r9, rbx
mov	r8, rbp
mov	rdx, rdi
mov	qword ptr [rsp + 0x20], rax
mov	rcx, rsi
call	0x140073900
call	0x140073900
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	r12, qword ptr [rsp + 0x90]
mov	rbx, rdx
mov	rdx, qword ptr [rcx]
mov	rbp, r9
mov	rsi, rcx
mov	r9, qword ptr [rdx - 0x18]
cmp	r9, rbx
jb	0x140073b10
jb	0x140073b10
movabs	rax, 0x3ffffffffffffff9
mov	rdi, r9
sub	rdi, rbx
cmp	rdi, r8
cmova	rdi, r8
sub	rax, r9
add	rax, rdi
cmp	rax, r12
jb	0x140073b04
jb	0x140073b04
cmp	rbp, rdx
jb	0x140073a10
jb	0x140073a10
add	r9, rdx
cmp	r9, rbp
jb	0x140073a10
jb	0x140073a10
mov	r13, qword ptr [rip + 0x4acbf]
mov	r8d, dword ptr [r13]
test	r8d, r8d
jne	0x140073a00
jne	0x140073a00
mov	ecx, dword ptr [rdx - 8]
test	ecx, ecx
jg	0x140073a10
jg	0x140073a10
lea	rcx, [rbp + r12]
lea	rax, [rdx + rbx]
cmp	rax, rcx
jae	0x140073ad0
jae	0x140073ad0
lea	rax, [rbx + rdi]
add	rax, rdx
cmp	rbp, rax
jb	0x140073a60
jb	0x140073a60
mov	rax, rbp
mov	rbp, r12
sub	rax, rdx
sub	rbp, rdi
add	rbp, rax
mov	rdx, rbx
mov	rcx, rsi
mov	r9, r12
mov	r8, rdi
call	0x140073e00
call	0x140073e00
mov	rcx, qword ptr [rsi]
lea	rdx, [rcx + rbp]
add	rcx, rbx
cmp	r12, 1
je	0x140073ae0
je	0x140073ae0
test	r12, r12
je	0x1400739ec
je	0x1400739ec
mov	r8, r12
call	0x140015998
call	0x140015998
mov	rax, rsi
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	
mov	eax, dword ptr [rdx - 8]
test	eax, eax
jle	0x140073a50
jle	0x140073a50
nop	word ptr [rax + rax]
mov	r9, r12
mov	r8, rdi
mov	rdx, rbx
mov	rcx, rsi
call	0x140073e00
call	0x140073e00
test	r12, r12
je	0x1400739ec
je	0x1400739ec
add	rbx, qword ptr [rsi]
cmp	r12, 1
je	0x140073a40
je	0x140073a40
mov	r8, r12
mov	rdx, rbp
mov	rcx, rbx
call	0x140015998
call	0x140015998
jmp	0x1400739ec
jmp	0x1400739ec
nop	
movzx	eax, byte ptr [rbp]
mov	byte ptr [rbx], al
jmp	0x1400739ec
jmp	0x1400739ec
nop	dword ptr [rax + rax]
mov	rdx, qword ptr [rcx]
jmp	0x140073989
jmp	0x140073989
nop	dword ptr [rax + rax]
lea	r14, [rsp + 0x2f]
mov	rdx, rcx
xor	r9d, r9d
mov	rcx, rbp
mov	r8, r14
call	0x140071e10
call	0x140071e10
mov	r9, r12
mov	r8, rdi
mov	rdx, rbx
mov	rcx, rsi
mov	rbp, rax
call	0x140073e00
call	0x140073e00
test	r12, r12
je	0x140073aa6
je	0x140073aa6
add	rbx, qword ptr [rsi]
cmp	r12, 1
je	0x140073afc
je	0x140073afc
mov	r8, r12
mov	rdx, rbp
mov	rcx, rbx
call	0x140015998
call	0x140015998
mov	eax, dword ptr [r13]
test	eax, eax
jne	0x140073af0
jne	0x140073af0
mov	eax, dword ptr [rbp - 8]
lea	edx, [rax - 1]
mov	dword ptr [rbp - 8], edx
test	eax, eax
jg	0x1400739ec
jg	0x1400739ec
lea	rcx, [rbp - 0x18]
call	0x1400b2be0
call	0x1400b2be0
jmp	0x1400739ec
jmp	0x1400739ec
nop	dword ptr [rax]
sub	rbp, rdx
jmp	0x1400739ba
jmp	0x1400739ba
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
jmp	0x1400739ec
jmp	0x1400739ec
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rbp - 8], eax
jmp	0x140073ab7
jmp	0x140073ab7
movzx	eax, byte ptr [rbp]
mov	byte ptr [rbx], al
jmp	0x140073aa6
jmp	0x140073aa6
lea	rcx, [rip + 0x458c3]
call	0x1400b3ba0
call	0x1400b3ba0
mov	r8, rbx
lea	rdx, [rip + 0x458b4]
lea	rcx, [rip + 0x457bf]
call	0x1400aed20
call	0x1400aed20
mov	rbx, rax
lea	rcx, [rbp - 0x18]
mov	rdx, r14
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
sub	rsp, 0x38
mov	r9, qword ptr [r9]
mov	rax, qword ptr [r9 - 0x18]
mov	qword ptr [rsp + 0x20], rax
call	0x140073900
call	0x140073900
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, qword ptr [r9]
mov	r10, qword ptr [rsp + 0x50]
mov	r11, qword ptr [rsp + 0x58]
mov	r9, qword ptr [rbx - 0x18]
mov	rax, r9
sub	rax, r10
cmp	rax, r11
cmova	rax, r11
cmp	r9, r10
jb	0x140073b9b
jb	0x140073b9b
lea	r9, [rbx + r10]
mov	qword ptr [rsp + 0x50], rax
add	rsp, 0x20
pop	rbx
jmp	0x140073900
jmp	0x140073900
mov	r8, r10
lea	rdx, [rip + 0x45829]
lea	rcx, [rip + 0x45734]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
movsx	r11d, byte ptr [rsp + 0x50]
mov	r10, qword ptr [rax - 0x18]
mov	rax, r10
sub	rax, rdx
cmp	rax, r8
cmovbe	r8, rax
cmp	r10, rdx
jb	0x140073bf1
jb	0x140073bf1
mov	dword ptr [rsp + 0x50], r11d
add	rsp, 0x28
jmp	0x140072270
jmp	0x140072270
mov	r8, rdx
mov	r9, r10
lea	rdx, [rip + 0x457d0]
lea	rcx, [rip + 0x456db]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, rcx
mov	rcx, qword ptr [rcx]
mov	rax, qword ptr [rcx - 0x10]
cmp	qword ptr [rcx - 0x18], rax
jb	0x140073c3c
jb	0x140073c3c
mov	rax, qword ptr [rip + 0x4aa03]
mov	r8d, dword ptr [rax]
test	r8d, r8d
jne	0x140073ca0
jne	0x140073ca0
mov	edx, dword ptr [rcx - 8]
test	edx, edx
jle	0x140073c70
jle	0x140073c70
lea	rdx, [rsp + 0x2f]
sub	rcx, 0x18
xor	r8d, r8d
call	0x140072590
call	0x140072590
mov	rsi, rax
mov	rax, qword ptr [rip + 0x4a9d9]
mov	rcx, qword ptr [rbx]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140073c80
jne	0x140073c80
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140073c8e
jle	0x140073c8e
mov	qword ptr [rbx], rsi
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140073c6d
jg	0x140073c6d
sub	rcx, 0x18
call	0x1400b2be0
call	0x1400b2be0
jmp	0x140073c6d
jmp	0x140073c6d
nop	dword ptr [rax]
mov	eax, dword ptr [rcx - 8]
test	eax, eax
jle	0x140073c70
jle	0x140073c70
mov	rcx, qword ptr [rbx]
jmp	0x140073c3c
jmp	0x140073c3c
sub	rdx, 1
mov	rcx, rax
jne	0x140073cbf
jne	0x140073cbf
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
nop	
add	rsp, 0x38
pop	rbx
pop	rsi
jmp	0x1400b2f60
jmp	0x1400b2f60
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rdi, qword ptr [rip + 0x4a932]
mov	rax, qword ptr [rcx]
mov	r8, rdx
mov	rdx, qword ptr [rax - 0x10]
mov	rbx, rcx
cmp	rdx, r8
jb	0x140073d22
jb	0x140073d22
mov	r8d, dword ptr [rdi]
test	r8d, r8d
jne	0x140073d80
jne	0x140073d80
mov	ecx, dword ptr [rax - 8]
test	ecx, ecx
jle	0x140073d50
jle	0x140073d50
mov	r8, rdx
lea	rcx, [rax - 0x18]
lea	rdx, [rsp + 0x2f]
sub	r8, qword ptr [rax - 0x18]
call	0x140072590
call	0x140072590
mov	rcx, qword ptr [rbx]
mov	rsi, rax
mov	eax, dword ptr [rdi]
test	eax, eax
jne	0x140073d60
jne	0x140073d60
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140073d6e
jle	0x140073d6e
mov	qword ptr [rbx], rsi
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140073d4d
jg	0x140073d4d
sub	rcx, 0x18
call	0x1400b2be0
call	0x1400b2be0
jmp	0x140073d4d
jmp	0x140073d4d
nop	dword ptr [rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jle	0x140073d50
jle	0x140073d50
mov	rax, qword ptr [rcx]
mov	r8, rdx
jmp	0x140073d22
jmp	0x140073d22
nop	
sub	rsp, 0x28
xor	r9d, r9d
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
lea	rdx, [rax - 1]
cmp	rax, rdx
jb	0x140073db6
jb	0x140073db6
mov	r8d, 1
add	rsp, 0x28
jmp	0x140073e00
jmp	0x140073e00
or	r8, 0xffffffffffffffff
lea	rdx, [rip + 0x455dc]
lea	rcx, [rip + 0x45518]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
cmp	rdx, 1
je	0x140073df0
je	0x140073df0
test	rdx, rdx
jne	0x140073de0
jne	0x140073de0
ret	
ret	
nop	dword ptr [rax]
movsx	eax, r8b
mov	r8, rdx
mov	edx, eax
jmp	0x1400159a8
jmp	0x1400159a8
nop	
mov	byte ptr [rcx], r8b
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
mov	r14, qword ptr [rip + 0x4a819]
mov	rbx, qword ptr [rcx]
mov	r12, qword ptr [rbx - 0x18]
mov	rsi, r9
lea	r15, [r8 + rdx]
mov	rbp, rdx
mov	rdx, qword ptr [rbx - 0x10]
sub	rsi, r8
mov	rdi, rcx
mov	r13, r9
add	rsi, r12
sub	r12, r15
cmp	rdx, rsi
jb	0x140073e57
jb	0x140073e57
mov	r9d, dword ptr [r14]
test	r9d, r9d
jne	0x140073f50
jne	0x140073f50
mov	ecx, dword ptr [rbx - 8]
test	ecx, ecx
jle	0x140073f23
jle	0x140073f23
lea	r8, [rsp + 0x3f]
mov	rcx, rsi
call	0x140072600
call	0x140072600
mov	r9, rax
lea	rbx, [rax + 0x18]
test	rbp, rbp
je	0x140073e96
je	0x140073e96
mov	rdx, qword ptr [rdi]
lea	rbx, [rax + 0x18]
cmp	rbp, 1
je	0x140073f68
je	0x140073f68
mov	r8, rbp
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], rax
call	0x140015998
call	0x140015998
mov	r9, qword ptr [rsp + 0x28]
test	r12, r12
jne	0x140073ed8
jne	0x140073ed8
mov	eax, dword ptr [r14]
mov	rcx, qword ptr [rdi]
test	eax, eax
jne	0x140073f03
jne	0x140073f03
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140073f11
jle	0x140073f11
mov	qword ptr [rdi], rbx
mov	dword ptr [rbx - 8], 0
mov	qword ptr [rbx - 0x18], rsi
mov	byte ptr [rbx + rsi], 0
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
lea	rax, [rbp + r13 + 0x18]
add	r15, qword ptr [rdi]
lea	rcx, [r9 + rax]
cmp	r12, 1
je	0x140073f80
je	0x140073f80
mov	r8, r12
mov	rdx, r15
call	0x140015998
call	0x140015998
mov	eax, dword ptr [r14]
mov	rcx, qword ptr [rdi]
test	eax, eax
je	0x140073ea5
je	0x140073ea5
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140073eb2
jg	0x140073eb2
sub	rcx, 0x18
call	0x1400b2be0
call	0x1400b2be0
jmp	0x140073eb2
jmp	0x140073eb2
nop	dword ptr [rax]
mov	rbx, qword ptr [rcx]
test	r12, r12
je	0x140073eb5
je	0x140073eb5
cmp	r13, r8
je	0x140073eb5
je	0x140073eb5
add	r13, rbp
lea	rdx, [rbx + r15]
lea	rcx, [rbx + r13]
cmp	r12, 1
je	0x140073f90
je	0x140073f90
mov	r8, r12
call	0x1400159a0
call	0x1400159a0
mov	rbx, qword ptr [rdi]
jmp	0x140073eb5
jmp	0x140073eb5
nop	
mov	eax, dword ptr [rbx - 8]
test	eax, eax
jle	0x140073f20
jle	0x140073f20
mov	rax, qword ptr [rcx]
mov	rdx, qword ptr [rax - 0x10]
jmp	0x140073e57
jmp	0x140073e57
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [r9 + 0x18], al
test	r12, r12
je	0x140073e9b
je	0x140073e9b
jmp	0x140073ed8
jmp	0x140073ed8
nop	dword ptr [rax]
movzx	eax, byte ptr [r15]
mov	byte ptr [rcx], al
jmp	0x140073e9b
jmp	0x140073e9b
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
mov	rbx, qword ptr [rdi]
jmp	0x140073eb5
jmp	0x140073eb5
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	edi, edx
mov	rdx, qword ptr [rax - 0x18]
mov	rbx, rcx
lea	rsi, [rdx + 1]
cmp	qword ptr [rax - 0x10], rsi
jb	0x140073fd3
jb	0x140073fd3
mov	rcx, qword ptr [rip + 0x4a66c]
mov	r8d, dword ptr [rcx]
test	r8d, r8d
jne	0x140074008
jne	0x140074008
mov	ecx, dword ptr [rax - 8]
test	ecx, ecx
jle	0x140073fe5
jle	0x140073fe5
mov	rdx, rsi
mov	rcx, rbx
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], dil
mov	rax, qword ptr [rbx]
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rsi
mov	byte ptr [rax + rsi], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x140073fd3
jg	0x140073fd3
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
jmp	0x140073fe5
jmp	0x140073fe5
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	rdx, qword ptr [rip + 0x4a606]
mov	r8d, dword ptr [rdx]
mov	qword ptr [rcx], rax
test	r8d, r8d
jne	0x140074048
jne	0x140074048
mov	edx, dword ptr [rax - 8]
test	edx, edx
jle	0x140074052
jle	0x140074052
add	edx, 1
mov	dword ptr [rax - 8], edx
ret	
ret	
nop	dword ptr [rax + rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x140074060
jg	0x140074060
mov	rax, qword ptr [rcx]
mov	dword ptr [rax - 8], 1
ret	
ret	
nop	word ptr [rax + rax]
mov	edx, dword ptr [rdx]
mov	rax, qword ptr [rcx]
test	edx, edx
je	0x14007406f
je	0x14007406f
lock add	dword ptr [rax - 8], 1
ret	
ret	
mov	edx, dword ptr [rax - 8]
jmp	0x14007403c
jmp	0x14007403c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx]
mov	qword ptr [rcx], rax
mov	ecx, 0x19
mov	rbx, rdx
call	0x1400b2c30
call	0x1400b2c30
pxor	xmm0, xmm0
mov	dword ptr [rax + 0x10], 0
add	rax, 0x18
movups	xmmword ptr [rax - 0x18], xmm0
mov	byte ptr [rax], 0
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rdx
mov	rsi, rcx
mov	rdi, r8
mov	rdx, 0xffffffffffffffff
test	rbx, rbx
je	0x1400740e8
je	0x1400740e8
mov	rcx, rbx
call	0x140015a08
call	0x140015a08
lea	rdx, [rbx + rax]
xor	r9d, r9d
mov	r8, rdi
mov	rcx, rbx
call	0x140071e10
call	0x140071e10
mov	qword ptr [rsi], rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, r8
mov	rax, rdx
mov	rbp, rcx
mov	rdi, rdx
add	rax, rbx
mov	r8, r9
je	0x140074131
je	0x140074131
test	rdx, rdx
je	0x140074188
je	0x140074188
mov	rcx, rbx
xor	edx, edx
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbx, 1
je	0x140074180
je	0x140074180
test	rbx, rbx
jne	0x140074170
jne	0x140074170
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [rsi + rbx + 0x18], 0
mov	qword ptr [rbp], rcx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x14007414d
jmp	0x14007414d
movzx	eax, byte ptr [rdi]
mov	byte ptr [rsi + 0x18], al
jmp	0x14007414d
jmp	0x14007414d
lea	rcx, [rip + 0x45281]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	ecx, 0x19
call	0x1400b2c30
call	0x1400b2c30
pxor	xmm0, xmm0
mov	dword ptr [rax + 0x10], 0
add	rax, 0x18
movups	xmmword ptr [rax - 0x18], xmm0
mov	byte ptr [rax], 0
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rdx]
mov	edx, dword ptr [rax - 8]
lea	r8, [rax - 8]
mov	rbx, rcx
lea	rcx, [rax - 0x18]
test	edx, edx
js	0x140074218
js	0x140074218
mov	rdx, qword ptr [rip + 0x4a42f]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x140074230
jne	0x140074230
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
lock add	dword ptr [r8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, rdx
mov	rbx, rcx
mov	rdx, r8
mov	rax, qword ptr [rax]
mov	ecx, dword ptr [rax - 8]
lea	r9, [rax - 0x18]
lea	r8, [rax - 8]
test	ecx, ecx
js	0x140074280
js	0x140074280
mov	rdx, qword ptr [rip + 0x4a3c9]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x140074298
jne	0x140074298
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	word ptr [rax + rax]
xor	r8d, r8d
mov	rcx, r9
call	0x140072590
call	0x140072590
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
lock add	dword ptr [r8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rdx]
mov	rax, r8
mov	r8, r9
mov	r9, qword ptr [rcx - 0x18]
lea	rdx, [rcx + r9]
cmp	r9, rax
jb	0x1400742e2
jb	0x1400742e2
add	rcx, rax
xor	r9d, r9d
call	0x140072130
call	0x140072130
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	r8, rax
lea	rdx, [rip + 0x45178]
lea	rcx, [rip + 0x44fed]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rbx, rcx
mov	rcx, qword ptr [rdx]
mov	rax, qword ptr [rcx - 0x18]
mov	rdx, rax
sub	rdx, r8
cmp	rdx, r9
cmova	rdx, r9
add	rdx, r8
add	rdx, rcx
cmp	rax, r8
jb	0x140074340
jb	0x140074340
add	rcx, r8
xor	r9d, r9d
lea	r8, [rsp + 0x2f]
call	0x140072130
call	0x140072130
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
mov	r9, rax
lea	rdx, [rip + 0x4511a]
lea	rcx, [rip + 0x44f8f]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rdx]
mov	rax, qword ptr [rcx - 0x18]
mov	rdx, rax
sub	rdx, r8
cmp	rdx, r9
cmova	rdx, r9
add	rdx, r8
add	rdx, rcx
cmp	rax, r8
jb	0x1400743a0
jb	0x1400743a0
add	rcx, r8
mov	r8, qword ptr [rsp + 0x50]
xor	r9d, r9d
call	0x140072130
call	0x140072130
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	r9, rax
lea	rdx, [rip + 0x450ba]
lea	rcx, [rip + 0x44f2f]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbp, qword ptr [rdx]
mov	rsi, qword ptr [rdx + 8]
mov	rax, rbp
add	rax, rsi
mov	rdi, rcx
je	0x1400743df
je	0x1400743df
test	rbp, rbp
je	0x140074439
je	0x140074439
mov	rcx, rsi
xor	edx, edx
call	0x140072600
call	0x140072600
mov	rbx, rax
lea	rcx, [rax + 0x18]
cmp	rsi, 1
je	0x140074430
je	0x140074430
test	rsi, rsi
jne	0x140074420
jne	0x140074420
mov	dword ptr [rbx + 0x10], 0
mov	qword ptr [rbx], rsi
mov	byte ptr [rbx + rsi + 0x18], 0
mov	qword ptr [rdi], rcx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	r8, rsi
mov	rdx, rbp
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x1400743fb
jmp	0x1400743fb
movzx	eax, byte ptr [rbp]
mov	byte ptr [rbx + 0x18], al
jmp	0x1400743fb
jmp	0x1400743fb
lea	rcx, [rip + 0x44fd0]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	ecx, 0x19
call	0x1400b2c30
call	0x1400b2c30
pxor	xmm0, xmm0
mov	dword ptr [rax + 0x10], 0
add	rax, 0x18
movups	xmmword ptr [rax - 0x18], xmm0
mov	byte ptr [rax], 0
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rdx
mov	rbp, rcx
mov	edi, r8d
xor	edx, edx
mov	rcx, rbx
mov	r8, r9
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
test	rbx, rbx
je	0x1400744cf
je	0x1400744cf
cmp	rbx, 1
je	0x1400744f0
je	0x1400744f0
movsx	edx, dil
mov	r8, rbx
call	0x1400159a8
call	0x1400159a8
mov	rcx, rax
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [rsi + rbx + 0x18], 0
mov	qword ptr [rbp], rcx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	byte ptr [rax + 0x18], dil
jmp	0x1400744cf
jmp	0x1400744cf
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, r8
mov	rbp, rcx
mov	rdi, rdx
mov	r8, r9
sub	rbx, rdx
xor	edx, edx
mov	rcx, rbx
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbx, 1
je	0x140074560
je	0x140074560
test	rbx, rbx
jne	0x140074550
jne	0x140074550
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [rsi + rbx + 0x18], 0
mov	qword ptr [rbp], rcx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x140074533
jmp	0x140074533
movzx	eax, byte ptr [rdi]
mov	byte ptr [rsi + 0x18], al
jmp	0x140074533
jmp	0x140074533
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, r8
mov	rbp, rcx
mov	rdi, rdx
mov	r8, r9
test	rdx, rdx
je	0x1400745d0
je	0x1400745d0
sub	rbx, rdx
xor	edx, edx
mov	rcx, rbx
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbx, 1
jne	0x1400745f0
jne	0x1400745f0
movzx	eax, byte ptr [rdi]
lea	r12, [rsi + 0x19]
mov	byte ptr [rsi + 0x18], al
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [r12], 0
mov	qword ptr [rbp], rcx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
test	rbx, rbx
jne	0x14007460a
jne	0x14007460a
xor	ecx, ecx
xor	edx, edx
xor	ebx, ebx
call	0x140072600
call	0x140072600
lea	rcx, [rax + 0x18]
mov	rsi, rax
mov	r12, rcx
jmp	0x1400745af
jmp	0x1400745af
nop	dword ptr [rax]
lea	r12, [rax + rbx + 0x18]
test	rbx, rbx
je	0x1400745af
je	0x1400745af
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x1400745af
jmp	0x1400745af
lea	rcx, [rip + 0x44dff]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, r8
mov	rbp, rcx
mov	rdi, rdx
mov	r8, r9
test	rdx, rdx
je	0x140074680
je	0x140074680
sub	rbx, rdx
xor	edx, edx
mov	rcx, rbx
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbx, 1
jne	0x1400746a0
jne	0x1400746a0
movzx	eax, byte ptr [rdi]
lea	r12, [rsi + 0x19]
mov	byte ptr [rsi + 0x18], al
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [r12], 0
mov	qword ptr [rbp], rcx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
test	rbx, rbx
jne	0x1400746ba
jne	0x1400746ba
xor	ecx, ecx
xor	edx, edx
xor	ebx, ebx
call	0x140072600
call	0x140072600
lea	rcx, [rax + 0x18]
mov	rsi, rax
mov	r12, rcx
jmp	0x14007465f
jmp	0x14007465f
nop	dword ptr [rax]
lea	r12, [rax + rbx + 0x18]
test	rbx, rbx
je	0x14007465f
je	0x14007465f
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x14007465f
jmp	0x14007465f
lea	rcx, [rip + 0x44d4f]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	rdx, qword ptr [rip + 0x49f56]
mov	r8d, dword ptr [rdx]
mov	qword ptr [rcx], rax
test	r8d, r8d
jne	0x1400746f8
jne	0x1400746f8
mov	edx, dword ptr [rax - 8]
test	edx, edx
jle	0x140074702
jle	0x140074702
add	edx, 1
mov	dword ptr [rax - 8], edx
ret	
ret	
nop	dword ptr [rax + rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x140074710
jg	0x140074710
mov	rax, qword ptr [rcx]
mov	dword ptr [rax - 8], 1
ret	
ret	
nop	word ptr [rax + rax]
mov	edx, dword ptr [rdx]
mov	rax, qword ptr [rcx]
test	edx, edx
je	0x14007471f
je	0x14007471f
lock add	dword ptr [rax - 8], 1
ret	
ret	
mov	edx, dword ptr [rax - 8]
jmp	0x1400746ec
jmp	0x1400746ec
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx]
mov	qword ptr [rcx], rax
mov	ecx, 0x19
mov	rbx, rdx
call	0x1400b2c30
call	0x1400b2c30
pxor	xmm0, xmm0
mov	dword ptr [rax + 0x10], 0
add	rax, 0x18
movups	xmmword ptr [rax - 0x18], xmm0
mov	byte ptr [rax], 0
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rdx
mov	rsi, rcx
mov	rdi, r8
mov	rdx, 0xffffffffffffffff
test	rbx, rbx
je	0x140074798
je	0x140074798
mov	rcx, rbx
call	0x140015a08
call	0x140015a08
lea	rdx, [rbx + rax]
xor	r9d, r9d
mov	r8, rdi
mov	rcx, rbx
call	0x140071e10
call	0x140071e10
mov	qword ptr [rsi], rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, r8
mov	rax, rdx
mov	rbp, rcx
mov	rdi, rdx
add	rax, rbx
mov	r8, r9
je	0x1400747e1
je	0x1400747e1
test	rdx, rdx
je	0x140074838
je	0x140074838
mov	rcx, rbx
xor	edx, edx
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbx, 1
je	0x140074830
je	0x140074830
test	rbx, rbx
jne	0x140074820
jne	0x140074820
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [rsi + rbx + 0x18], 0
mov	qword ptr [rbp], rcx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x1400747fd
jmp	0x1400747fd
movzx	eax, byte ptr [rdi]
mov	byte ptr [rsi + 0x18], al
jmp	0x1400747fd
jmp	0x1400747fd
lea	rcx, [rip + 0x44bd1]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	ecx, 0x19
call	0x1400b2c30
call	0x1400b2c30
pxor	xmm0, xmm0
mov	dword ptr [rax + 0x10], 0
add	rax, 0x18
movups	xmmword ptr [rax - 0x18], xmm0
mov	byte ptr [rax], 0
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rdx]
mov	edx, dword ptr [rax - 8]
lea	r8, [rax - 8]
mov	rbx, rcx
lea	rcx, [rax - 0x18]
test	edx, edx
js	0x1400748c8
js	0x1400748c8
mov	rdx, qword ptr [rip + 0x49d7f]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x1400748e0
jne	0x1400748e0
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
lock add	dword ptr [r8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, rdx
mov	rbx, rcx
mov	rdx, r8
mov	rax, qword ptr [rax]
mov	ecx, dword ptr [rax - 8]
lea	r9, [rax - 0x18]
lea	r8, [rax - 8]
test	ecx, ecx
js	0x140074930
js	0x140074930
mov	rdx, qword ptr [rip + 0x49d19]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x140074948
jne	0x140074948
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	word ptr [rax + rax]
xor	r8d, r8d
mov	rcx, r9
call	0x140072590
call	0x140072590
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
lock add	dword ptr [r8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rdx]
mov	rax, r8
mov	r8, r9
mov	r9, qword ptr [rcx - 0x18]
lea	rdx, [rcx + r9]
cmp	r9, rax
jb	0x140074992
jb	0x140074992
add	rcx, rax
xor	r9d, r9d
call	0x140072130
call	0x140072130
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	r8, rax
lea	rdx, [rip + 0x44ac8]
lea	rcx, [rip + 0x4493d]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rbx, rcx
mov	rcx, qword ptr [rdx]
mov	rax, qword ptr [rcx - 0x18]
mov	rdx, rax
sub	rdx, r8
cmp	rdx, r9
cmova	rdx, r9
add	rdx, r8
add	rdx, rcx
cmp	rax, r8
jb	0x1400749f0
jb	0x1400749f0
add	rcx, r8
xor	r9d, r9d
lea	r8, [rsp + 0x2f]
call	0x140072130
call	0x140072130
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
mov	r9, rax
lea	rdx, [rip + 0x44a6a]
lea	rcx, [rip + 0x448df]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rdx]
mov	rax, qword ptr [rcx - 0x18]
mov	rdx, rax
sub	rdx, r8
cmp	rdx, r9
cmova	rdx, r9
add	rdx, r8
add	rdx, rcx
cmp	rax, r8
jb	0x140074a50
jb	0x140074a50
add	rcx, r8
mov	r8, qword ptr [rsp + 0x50]
xor	r9d, r9d
call	0x140072130
call	0x140072130
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	r9, rax
lea	rdx, [rip + 0x44a0a]
lea	rcx, [rip + 0x4487f]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbp, qword ptr [rdx]
mov	rsi, qword ptr [rdx + 8]
mov	rax, rbp
add	rax, rsi
mov	rdi, rcx
je	0x140074a8f
je	0x140074a8f
test	rbp, rbp
je	0x140074ae9
je	0x140074ae9
mov	rcx, rsi
xor	edx, edx
call	0x140072600
call	0x140072600
mov	rbx, rax
lea	rcx, [rax + 0x18]
cmp	rsi, 1
je	0x140074ae0
je	0x140074ae0
test	rsi, rsi
jne	0x140074ad0
jne	0x140074ad0
mov	dword ptr [rbx + 0x10], 0
mov	qword ptr [rbx], rsi
mov	byte ptr [rbx + rsi + 0x18], 0
mov	qword ptr [rdi], rcx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	r8, rsi
mov	rdx, rbp
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x140074aab
jmp	0x140074aab
movzx	eax, byte ptr [rbp]
mov	byte ptr [rbx + 0x18], al
jmp	0x140074aab
jmp	0x140074aab
lea	rcx, [rip + 0x44920]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	ecx, 0x19
call	0x1400b2c30
call	0x1400b2c30
pxor	xmm0, xmm0
mov	dword ptr [rax + 0x10], 0
add	rax, 0x18
movups	xmmword ptr [rax - 0x18], xmm0
mov	byte ptr [rax], 0
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rdx
mov	rbp, rcx
mov	edi, r8d
xor	edx, edx
mov	rcx, rbx
mov	r8, r9
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
test	rbx, rbx
je	0x140074b7f
je	0x140074b7f
cmp	rbx, 1
je	0x140074ba0
je	0x140074ba0
movsx	edx, dil
mov	r8, rbx
call	0x1400159a8
call	0x1400159a8
mov	rcx, rax
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [rsi + rbx + 0x18], 0
mov	qword ptr [rbp], rcx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	byte ptr [rax + 0x18], dil
jmp	0x140074b7f
jmp	0x140074b7f
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, r8
mov	rbp, rcx
mov	rdi, rdx
mov	r8, r9
sub	rbx, rdx
xor	edx, edx
mov	rcx, rbx
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbx, 1
je	0x140074c10
je	0x140074c10
test	rbx, rbx
jne	0x140074c00
jne	0x140074c00
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [rsi + rbx + 0x18], 0
mov	qword ptr [rbp], rcx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x140074be3
jmp	0x140074be3
movzx	eax, byte ptr [rdi]
mov	byte ptr [rsi + 0x18], al
jmp	0x140074be3
jmp	0x140074be3
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, r8
mov	rbp, rcx
mov	rdi, rdx
mov	r8, r9
test	rdx, rdx
je	0x140074c80
je	0x140074c80
sub	rbx, rdx
xor	edx, edx
mov	rcx, rbx
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbx, 1
jne	0x140074ca0
jne	0x140074ca0
movzx	eax, byte ptr [rdi]
lea	r12, [rsi + 0x19]
mov	byte ptr [rsi + 0x18], al
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [r12], 0
mov	qword ptr [rbp], rcx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
test	rbx, rbx
jne	0x140074cba
jne	0x140074cba
xor	ecx, ecx
xor	edx, edx
xor	ebx, ebx
call	0x140072600
call	0x140072600
lea	rcx, [rax + 0x18]
mov	rsi, rax
mov	r12, rcx
jmp	0x140074c5f
jmp	0x140074c5f
nop	dword ptr [rax]
lea	r12, [rax + rbx + 0x18]
test	rbx, rbx
je	0x140074c5f
je	0x140074c5f
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x140074c5f
jmp	0x140074c5f
lea	rcx, [rip + 0x4474f]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, r8
mov	rbp, rcx
mov	rdi, rdx
mov	r8, r9
test	rdx, rdx
je	0x140074d30
je	0x140074d30
sub	rbx, rdx
xor	edx, edx
mov	rcx, rbx
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbx, 1
jne	0x140074d50
jne	0x140074d50
movzx	eax, byte ptr [rdi]
lea	r12, [rsi + 0x19]
mov	byte ptr [rsi + 0x18], al
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [r12], 0
mov	qword ptr [rbp], rcx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
test	rbx, rbx
jne	0x140074d6a
jne	0x140074d6a
xor	ecx, ecx
xor	edx, edx
xor	ebx, ebx
call	0x140072600
call	0x140072600
lea	rcx, [rax + 0x18]
mov	rsi, rax
mov	r12, rcx
jmp	0x140074d0f
jmp	0x140074d0f
nop	dword ptr [rax]
lea	r12, [rax + rbx + 0x18]
test	rbx, rbx
je	0x140074d0f
je	0x140074d0f
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x140074d0f
jmp	0x140074d0f
lea	rcx, [rip + 0x4469f]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x498a9]
mov	eax, dword ptr [rax]
mov	rcx, qword ptr [rcx]
test	eax, eax
jne	0x140074da0
jne	0x140074da0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140074dae
jle	0x140074dae
ret	
ret	
nop	
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140074d9d
jg	0x140074d9d
sub	rcx, 0x18
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x49869]
mov	eax, dword ptr [rax]
mov	rcx, qword ptr [rcx]
test	eax, eax
jne	0x140074de0
jne	0x140074de0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140074dee
jle	0x140074dee
ret	
ret	
nop	
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140074ddd
jg	0x140074ddd
sub	rcx, 0x18
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rcx]
mov	r8d, dword ptr [rcx - 8]
test	r8d, r8d
jns	0x140074e16
jns	0x140074e16
mov	dword ptr [rcx - 8], 0
mov	r8, qword ptr [rdx]
mov	r9d, dword ptr [r8 - 8]
test	r9d, r9d
jns	0x140074e2a
jns	0x140074e2a
mov	dword ptr [r8 - 8], 0
mov	qword ptr [rax], r8
mov	qword ptr [rdx], rcx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
call	0x140015a08
call	0x140015a08
mov	rdx, rbx
mov	rcx, rsi
mov	r8, rax
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x140072de0
jmp	0x140072de0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [rdx]
mov	rbx, rcx
cmp	qword ptr [rcx], rsi
je	0x140074eba
je	0x140074eba
mov	eax, dword ptr [rsi - 8]
lea	rcx, [rsi - 0x18]
lea	rdx, [rsi - 8]
test	eax, eax
js	0x140074ec8
js	0x140074ec8
mov	rax, qword ptr [rip + 0x49799]
mov	ecx, dword ptr [rax]
test	ecx, ecx
jne	0x140074f08
jne	0x140074f08
add	dword ptr [rsi - 8], 1
mov	eax, dword ptr [rax]
mov	rcx, qword ptr [rbx]
test	eax, eax
jne	0x140074ee8
jne	0x140074ee8
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140074ef6
jle	0x140074ef6
mov	qword ptr [rbx], rsi
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
mov	rcx, qword ptr [rbx]
mov	rsi, rax
mov	rax, qword ptr [rip + 0x4974e]
mov	eax, dword ptr [rax]
test	eax, eax
je	0x140074eaa
je	0x140074eaa
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140074eb7
jg	0x140074eb7
sub	rcx, 0x18
call	0x1400b2be0
call	0x1400b2be0
jmp	0x140074eb7
jmp	0x140074eb7
nop	dword ptr [rax]
lock add	dword ptr [rdx], 1
jmp	0x140074ea1
jmp	0x140074ea1
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx]
mov	r8, qword ptr [rdx + 8]
mov	rdx, rax
mov	rbx, rcx
call	0x140072de0
call	0x140072de0
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
push	rsi
push	rbx
sub	rsp, 0x28
mov	r9d, 1
mov	rax, qword ptr [rcx]
mov	r8, qword ptr [rax - 0x18]
mov	rbx, rcx
mov	esi, edx
xor	edx, edx
call	0x140073e00
call	0x140073e00
mov	rax, qword ptr [rbx]
mov	byte ptr [rax], sil
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rsi
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rsi, rdx
mov	edx, dword ptr [rax - 8]
test	edx, edx
jns	0x140074f80
jns	0x140074f80
add	rax, rsi
add	rsp, 0x20
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
cmp	qword ptr [rax - 0x18], 0
je	0x140074f72
je	0x140074f72
mov	rdx, qword ptr [rip + 0x496a2]
mov	r8d, dword ptr [rdx]
test	r8d, r8d
jne	0x140074fb0
jne	0x140074fb0
mov	edx, dword ptr [rax - 8]
test	edx, edx
jg	0x140074fc0
jg	0x140074fc0
mov	dword ptr [rax - 8], 0xffffffff
add	rax, rsi
add	rsp, 0x20
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x140074fc0
jg	0x140074fc0
mov	rax, qword ptr [rcx]
jmp	0x140074f9d
jmp	0x140074f9d
nop	dword ptr [rax]
xor	r9d, r9d
xor	r8d, r8d
xor	edx, edx
mov	qword ptr [rsp + 0x30], rcx
call	0x140073e00
call	0x140073e00
mov	rcx, qword ptr [rsp + 0x30]
mov	rax, qword ptr [rcx]
jmp	0x140074f9d
jmp	0x140074f9d
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rcx, rdx
mov	rbx, rdx
call	0x140015a08
call	0x140015a08
mov	rdx, rbx
mov	rcx, rsi
mov	r8, rax
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400729e0
jmp	0x1400729e0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x140072af0
jmp	0x140072af0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	r8, qword ptr [rdx + 8]
mov	rdx, rax
jmp	0x1400729e0
jmp	0x1400729e0
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	edi, edx
mov	rdx, qword ptr [rax - 0x18]
mov	rbx, rcx
lea	rsi, [rdx + 1]
cmp	qword ptr [rax - 0x10], rsi
jb	0x140075063
jb	0x140075063
mov	rcx, qword ptr [rip + 0x495dc]
mov	r8d, dword ptr [rcx]
test	r8d, r8d
jne	0x1400750a0
jne	0x1400750a0
mov	ecx, dword ptr [rax - 8]
test	ecx, ecx
jle	0x140075075
jle	0x140075075
mov	rdx, rsi
mov	rcx, rbx
call	0x140073cf0
call	0x140073cf0
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
mov	byte ptr [rax + rdx], dil
mov	rax, qword ptr [rbx]
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], rsi
mov	byte ptr [rax + rsi], 0
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x140075063
jg	0x140075063
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
jmp	0x140075075
jmp	0x140075075
mov	eax, dword ptr [rcx + 0x18]
mov	byte ptr [rdx], 0x25
lea	rcx, [rdx + 1]
test	ah, 8
je	0x1400750c7
je	0x1400750c7
mov	byte ptr [rdx + 1], 0x2b
lea	rcx, [rdx + 2]
test	ah, 4
je	0x1400750d3
je	0x1400750d3
mov	byte ptr [rcx], 0x23
add	rcx, 1
mov	edx, eax
and	edx, 0x104
cmp	edx, 0x104
je	0x140075158
je	0x140075158
mov	r9d, 0x2a2e
mov	word ptr [rcx], r9w
lea	r9, [rcx + 2]
test	r8b, r8b
jne	0x140075110
jne	0x140075110
lea	r8, [r9 + 1]
cmp	edx, 4
jne	0x140075121
jne	0x140075121
mov	byte ptr [r9], 0x66
mov	byte ptr [r8], 0
ret	
ret	
nop	dword ptr [rax + rax]
lea	r9, [rcx + 3]
mov	byte ptr [rcx + 2], r8b
lea	r8, [r9 + 1]
cmp	edx, 4
je	0x1400750ff
je	0x1400750ff
and	eax, 0x4000
cmp	eax, 1
sbb	eax, eax
and	eax, 0x20
cmp	edx, 0x100
jne	0x140075148
jne	0x140075148
add	eax, 0x45
mov	byte ptr [r9], al
mov	byte ptr [r8], 0
ret	
ret	
nop	dword ptr [rax]
add	eax, 0x47
mov	byte ptr [r9], al
mov	byte ptr [r8], 0
ret	
ret	
nop	dword ptr [rax + rax]
test	r8b, r8b
je	0x140075164
je	0x140075164
mov	byte ptr [rcx], r8b
add	rcx, 1
and	eax, 0x4000
lea	r8, [rcx + 1]
cmp	eax, 1
sbb	eax, eax
and	eax, 0x20
add	eax, 0x41
mov	byte ptr [rcx], al
mov	byte ptr [r8], 0
ret	
ret	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x511b4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400ac440
call	0x1400ac440
mov	edx, 8
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2bf0
jmp	0x1400b2bf0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x51189]
mov	qword ptr [rcx], rax
jmp	0x1400ac440
jmp	0x1400ac440
nop	
mov	rax, qword ptr [rip + 0x495b9]
mov	eax, dword ptr [rax]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx + 0x10]
mov	rbx, rcx
test	rax, rax
je	0x140075278
je	0x140075278
mov	byte ptr [rax + 0x21], 0x2e
mov	rax, qword ptr [rbx + 0x10]
lea	rdx, [rip + 0x43f4c]
mov	byte ptr [rax + 0x22], 0x2c
mov	rax, qword ptr [rbx + 0x10]
mov	qword ptr [rax + 0x10], rdx
mov	qword ptr [rax + 0x28], rdx
mov	qword ptr [rax + 0x38], rdx
mov	qword ptr [rax + 0x48], rdx
mov	rdx, qword ptr [rip + 0x4956d]
mov	qword ptr [rax + 0x18], 0
mov	edx, dword ptr [rdx]
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	dword ptr [rax + 0x58], 0
mov	dword ptr [rax + 0x5c], edx
mov	rax, qword ptr [rbx + 0x10]
mov	dword ptr [rax + 0x60], edx
mov	rax, qword ptr [rip + 0x49543]
mov	r8, qword ptr [rax]
xor	eax, eax
nop	word ptr [rax + rax]
movzx	ecx, byte ptr [r8 + rax]
mov	rdx, qword ptr [rbx + 0x10]
mov	byte ptr [rdx + rax + 0x64], cl
add	rax, 1
cmp	rax, 0xb
jne	0x140075258
jne	0x140075258
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	ecx, 0x70
call	0x1400b2c30
call	0x1400b2c30
lea	rcx, [rip + 0x52107]
xor	edx, edx
mov	dword ptr [rax + 8], 0
mov	qword ptr [rax], rcx
mov	qword ptr [rax + 0x10], 0
mov	qword ptr [rax + 0x18], 0
mov	byte ptr [rax + 0x20], 0
mov	word ptr [rax + 0x21], dx
mov	qword ptr [rax + 0x28], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x38], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x48], 0
mov	qword ptr [rax + 0x50], 0
mov	dword ptr [rax + 0x58], 0
mov	qword ptr [rax + 0x5c], 0
mov	byte ptr [rax + 0x6f], 0
mov	qword ptr [rbx + 0x10], rax
jmp	0x1400751e5
jmp	0x1400751e5
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x5104c]
mov	qword ptr [rcx], rax
call	0x1400751d0
call	0x1400751d0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x50ffd]
mov	qword ptr [rcx], rax
call	0x1400751d0
call	0x1400751d0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x50fa8]
mov	qword ptr [rcx], rax
call	0x1400751d0
call	0x1400751d0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x50f5c]
mov	qword ptr [rcx], rax
call	0x1400751d0
call	0x1400751d0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x50f0d]
mov	qword ptr [rcx], rax
call	0x1400751d0
call	0x1400751d0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x50eb8]
mov	qword ptr [rcx], rax
call	0x1400751d0
call	0x1400751d0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
call	0x140075510
call	0x140075510
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rsi, rax
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0x498c2]
mov	rsi, qword ptr [rcx + 0x10]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
test	rsi, rsi
je	0x140075554
je	0x140075554
mov	rax, qword ptr [rsi]
lea	rdx, [rip + 0x21385]
mov	rcx, rsi
mov	rax, qword ptr [rax + 8]
cmp	rax, rdx
jne	0x140075568
jne	0x140075568
call	0x1400968f0
call	0x1400968f0
mov	rcx, rsi
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14009bc00
jmp	0x14009bc00
nop	dword ptr [rax + rax]
call	rax
call	rax
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14009bc00
jmp	0x14009bc00
mov	rdi, rax
jmp	0x140075589
jmp	0x140075589
mov	rcx, rsi
mov	rdi, rax
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rdi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx + 0x10]
mov	rbx, rcx
test	rax, rax
je	0x140075648
je	0x140075648
mov	byte ptr [rax + 0x21], 0x2e
mov	rax, qword ptr [rbx + 0x10]
lea	rdx, [rip + 0x43b7c]
mov	byte ptr [rax + 0x22], 0x2c
mov	rax, qword ptr [rbx + 0x10]
mov	qword ptr [rax + 0x10], rdx
mov	qword ptr [rax + 0x28], rdx
mov	qword ptr [rax + 0x38], rdx
mov	qword ptr [rax + 0x48], rdx
mov	rdx, qword ptr [rip + 0x4919d]
mov	qword ptr [rax + 0x18], 0
mov	edx, dword ptr [rdx]
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	dword ptr [rax + 0x58], 0
mov	dword ptr [rax + 0x5c], edx
mov	rax, qword ptr [rbx + 0x10]
mov	dword ptr [rax + 0x60], edx
mov	rax, qword ptr [rip + 0x49173]
mov	r8, qword ptr [rax]
xor	eax, eax
nop	word ptr [rax + rax]
movzx	ecx, byte ptr [r8 + rax]
mov	rdx, qword ptr [rbx + 0x10]
mov	byte ptr [rdx + rax + 0x64], cl
add	rax, 1
cmp	rax, 0xb
jne	0x140075628
jne	0x140075628
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	ecx, 0x70
call	0x1400b2c30
call	0x1400b2c30
lea	rcx, [rip + 0x51d57]
xor	edx, edx
mov	dword ptr [rax + 8], 0
mov	qword ptr [rax], rcx
mov	qword ptr [rax + 0x10], 0
mov	qword ptr [rax + 0x18], 0
mov	byte ptr [rax + 0x20], 0
mov	word ptr [rax + 0x21], dx
mov	qword ptr [rax + 0x28], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x38], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x48], 0
mov	qword ptr [rax + 0x50], 0
mov	dword ptr [rax + 0x58], 0
mov	qword ptr [rax + 0x5c], 0
mov	byte ptr [rax + 0x6f], 0
mov	qword ptr [rbx + 0x10], rax
jmp	0x1400755b5
jmp	0x1400755b5
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x50cec]
mov	qword ptr [rcx], rax
call	0x1400755a0
call	0x1400755a0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x50c9d]
mov	qword ptr [rcx], rax
call	0x1400755a0
call	0x1400755a0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x50c48]
mov	qword ptr [rcx], rax
call	0x1400755a0
call	0x1400755a0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x50bfc]
mov	qword ptr [rcx], rax
call	0x1400755a0
call	0x1400755a0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x50bad]
mov	qword ptr [rcx], rax
call	0x1400755a0
call	0x1400755a0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x50b58]
mov	qword ptr [rcx], rax
call	0x1400755a0
call	0x1400755a0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
call	0x1400758e0
call	0x1400758e0
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rsi, rax
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0x49502]
mov	rsi, qword ptr [rcx + 0x10]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
test	rsi, rsi
je	0x140075924
je	0x140075924
mov	rax, qword ptr [rsi]
lea	rdx, [rip + 0x217b5]
mov	rcx, rsi
mov	rax, qword ptr [rax + 8]
cmp	rax, rdx
jne	0x140075938
jne	0x140075938
call	0x1400970f0
call	0x1400970f0
mov	rcx, rsi
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14009bc00
jmp	0x14009bc00
nop	dword ptr [rax + rax]
call	rax
call	rax
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14009bc00
jmp	0x14009bc00
mov	rdi, rax
jmp	0x140075959
jmp	0x140075959
mov	rcx, rsi
mov	rdi, rax
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rdi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx + 0x10]
mov	rbx, rcx
test	rax, rax
je	0x140075a18
je	0x140075a18
lea	rdx, [rip + 0x437b6]
lea	rcx, [rip + 0x437ad]
mov	dword ptr [rax + 0x22], 0x2c002e
mov	qword ptr [rax + 0x28], rdx
mov	qword ptr [rax + 0x38], rdx
mov	qword ptr [rax + 0x48], rdx
mov	rdx, qword ptr [rip + 0x48dd3]
mov	qword ptr [rax + 0x10], rcx
mov	edx, dword ptr [rdx]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	dword ptr [rax + 0x5c], edx
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	dword ptr [rax + 0x58], 0
mov	rax, qword ptr [rbx + 0x10]
mov	dword ptr [rax + 0x60], edx
mov	rax, qword ptr [rip + 0x48da5]
mov	rcx, qword ptr [rbx + 0x10]
mov	r8, qword ptr [rax]
xor	eax, eax
nop	dword ptr [rax]
movsx	dx, byte ptr [r8 + rax]
mov	word ptr [rcx + rax*2 + 0x64], dx
add	rax, 1
cmp	rax, 0xb
jne	0x1400759f8
jne	0x1400759f8
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	ecx, 0x80
call	0x1400b2c30
call	0x1400b2c30
lea	rcx, [rip + 0x519a7]
mov	dword ptr [rax + 8], 0
mov	qword ptr [rax], rcx
mov	qword ptr [rax + 0x10], 0
mov	qword ptr [rax + 0x18], 0
mov	byte ptr [rax + 0x20], 0
mov	dword ptr [rax + 0x22], 0
mov	qword ptr [rax + 0x28], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x38], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x48], 0
mov	qword ptr [rax + 0x50], 0
mov	dword ptr [rax + 0x58], 0
mov	qword ptr [rax + 0x5c], 0
mov	byte ptr [rax + 0x7a], 0
mov	qword ptr [rbx + 0x10], rax
jmp	0x140075985
jmp	0x140075985
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x5098c]
mov	qword ptr [rcx], rax
call	0x140075970
call	0x140075970
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x5093d]
mov	qword ptr [rcx], rax
call	0x140075970
call	0x140075970
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x508e8]
mov	qword ptr [rcx], rax
call	0x140075970
call	0x140075970
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x5089c]
mov	qword ptr [rcx], rax
call	0x140075970
call	0x140075970
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x5084d]
mov	qword ptr [rcx], rax
call	0x140075970
call	0x140075970
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x507f8]
mov	qword ptr [rcx], rax
call	0x140075970
call	0x140075970
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
call	0x140075cb0
call	0x140075cb0
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rsi, rax
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0x49142]
mov	rsi, qword ptr [rcx + 0x10]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
test	rsi, rsi
je	0x140075cf4
je	0x140075cf4
mov	rax, qword ptr [rsi]
lea	rdx, [rip + 0x21bf5]
mov	rcx, rsi
mov	rax, qword ptr [rax + 8]
cmp	rax, rdx
jne	0x140075d08
jne	0x140075d08
call	0x140097900
call	0x140097900
mov	rcx, rsi
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14009bc00
jmp	0x14009bc00
nop	dword ptr [rax + rax]
call	rax
call	rax
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14009bc00
jmp	0x14009bc00
mov	rdi, rax
jmp	0x140075d29
jmp	0x140075d29
mov	rcx, rsi
mov	rdi, rax
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rdi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx + 0x10]
mov	rbx, rcx
test	rax, rax
je	0x140075de8
je	0x140075de8
lea	rdx, [rip + 0x433e6]
lea	rcx, [rip + 0x433dd]
mov	dword ptr [rax + 0x22], 0x2c002e
mov	qword ptr [rax + 0x28], rdx
mov	qword ptr [rax + 0x38], rdx
mov	qword ptr [rax + 0x48], rdx
mov	rdx, qword ptr [rip + 0x48a03]
mov	qword ptr [rax + 0x10], rcx
mov	edx, dword ptr [rdx]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	dword ptr [rax + 0x5c], edx
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	dword ptr [rax + 0x58], 0
mov	rax, qword ptr [rbx + 0x10]
mov	dword ptr [rax + 0x60], edx
mov	rax, qword ptr [rip + 0x489d5]
mov	rcx, qword ptr [rbx + 0x10]
mov	r8, qword ptr [rax]
xor	eax, eax
nop	dword ptr [rax]
movsx	dx, byte ptr [r8 + rax]
mov	word ptr [rcx + rax*2 + 0x64], dx
add	rax, 1
cmp	rax, 0xb
jne	0x140075dc8
jne	0x140075dc8
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	ecx, 0x80
call	0x1400b2c30
call	0x1400b2c30
lea	rcx, [rip + 0x515f7]
mov	dword ptr [rax + 8], 0
mov	qword ptr [rax], rcx
mov	qword ptr [rax + 0x10], 0
mov	qword ptr [rax + 0x18], 0
mov	byte ptr [rax + 0x20], 0
mov	dword ptr [rax + 0x22], 0
mov	qword ptr [rax + 0x28], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x38], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x48], 0
mov	qword ptr [rax + 0x50], 0
mov	dword ptr [rax + 0x58], 0
mov	qword ptr [rax + 0x5c], 0
mov	byte ptr [rax + 0x7a], 0
mov	qword ptr [rbx + 0x10], rax
jmp	0x140075d55
jmp	0x140075d55
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x5062c]
mov	qword ptr [rcx], rax
call	0x140075d40
call	0x140075d40
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x505dd]
mov	qword ptr [rcx], rax
call	0x140075d40
call	0x140075d40
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x50588]
mov	qword ptr [rcx], rax
call	0x140075d40
call	0x140075d40
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x5053c]
mov	qword ptr [rcx], rax
call	0x140075d40
call	0x140075d40
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x504ed]
mov	qword ptr [rcx], rax
call	0x140075d40
call	0x140075d40
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x50498]
mov	qword ptr [rcx], rax
call	0x140075d40
call	0x140075d40
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
call	0x140076080
call	0x140076080
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rsi, rax
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0x48d82]
mov	rsi, qword ptr [rcx + 0x10]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
test	rsi, rsi
je	0x1400760c4
je	0x1400760c4
mov	rax, qword ptr [rsi]
lea	rdx, [rip + 0x22035]
mov	rcx, rsi
mov	rax, qword ptr [rax + 8]
cmp	rax, rdx
jne	0x1400760d8
jne	0x1400760d8
call	0x140098110
call	0x140098110
mov	rcx, rsi
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14009bc00
jmp	0x14009bc00
nop	dword ptr [rax + rax]
call	rax
call	rax
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14009bc00
jmp	0x14009bc00
mov	rdi, rax
jmp	0x1400760f9
jmp	0x1400760f9
mov	rcx, rsi
mov	rdi, rax
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rdi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
movups	xmmword ptr [rsp + 0x20], xmm6
movups	xmmword ptr [rsp + 0x30], xmm7
lea	rax, [rip + 0x45068]
lea	rbp, [rip + 0x44fd0]
movq	xmm0, rax
lea	rax, [rip + 0x45059]
lea	rdi, [rip + 0x44fc6]
movq	xmm7, rax
lea	rax, [rip + 0x4508d]
lea	rsi, [rip + 0x44fbc]
movq	xmm6, rax
mov	rax, qword ptr [rcx + 0x10]
punpcklqdq	xmm7, xmm0
punpcklqdq	xmm6, xmm0
mov	rbx, rcx
test	rax, rax
je	0x140076438
je	0x140076438
movq	xmm0, rbp
lea	rdx, [rip + 0x44f97]
lea	rbx, [rip + 0x44fa6]
movups	xmmword ptr [rax + 0x140], xmm6
punpcklqdq	xmm0, xmm0
movq	xmm1, rdx
lea	rdx, [rip + 0x44f88]
movups	xmmword ptr [rax + 0xe0], xmm7
movups	xmmword ptr [rax + 0x10], xmm0
movq	xmm0, rdi
movq	xmm2, rdx
lea	rdi, [rip + 0x44f60]
punpcklqdq	xmm0, xmm0
lea	rdx, [rip + 0x44f6f]
lea	rcx, [rip + 0x44f70]
movups	xmmword ptr [rax + 0x20], xmm0
movq	xmm0, rsi
lea	rsi, [rip + 0x44f38]
movq	xmm3, rdx
punpcklqdq	xmm0, xmm0
lea	rdx, [rip + 0x44f5a]
movups	xmmword ptr [rax + 0x30], xmm0
movq	xmm0, rsi
movq	xmm4, rdx
lea	rsi, [rip + 0x44f4e]
punpcklqdq	xmm0, xmm1
lea	rdx, [rip + 0x44f4a]
movups	xmmword ptr [rax + 0x40], xmm0
movq	xmm0, rdi
movq	xmm5, rdx
lea	rdi, [rip + 0x44f3e]
punpcklqdq	xmm0, xmm2
lea	rdx, [rip + 0x44f37]
movups	xmmword ptr [rax + 0x50], xmm0
movq	xmm0, rbx
movq	xmm1, rdx
lea	rbx, [rip + 0x44f26]
punpcklqdq	xmm0, xmm3
lea	rdx, [rip + 0x44f1f]
movups	xmmword ptr [rax + 0x60], xmm0
movq	xmm0, rcx
movq	xmm2, rdx
lea	rcx, [rip + 0x44f0e]
punpcklqdq	xmm0, xmm4
lea	rdx, [rip + 0x44f07]
movups	xmmword ptr [rax + 0x70], xmm0
movq	xmm0, rsi
movq	xmm3, rdx
lea	rsi, [rip + 0x44ef6]
punpcklqdq	xmm0, xmm5
lea	rdx, [rip + 0x44eef]
movups	xmmword ptr [rax + 0x80], xmm0
movq	xmm0, rdi
movq	xmm4, rdx
lea	rdi, [rip + 0x44edf]
punpcklqdq	xmm0, xmm1
lea	rdx, [rip + 0x44edd]
movups	xmmword ptr [rax + 0x90], xmm0
movq	xmm0, rbx
movq	xmm5, rdx
lea	rbx, [rip + 0x44ed5]
punpcklqdq	xmm0, xmm2
lea	rdx, [rip + 0x44ecf]
movups	xmmword ptr [rax + 0xa0], xmm0
movq	xmm0, rcx
movq	xmm1, rdx
lea	rcx, [rip + 0x44ebc]
punpcklqdq	xmm0, xmm3
lea	rdx, [rip + 0x44eb8]
movups	xmmword ptr [rax + 0xb0], xmm0
movq	xmm0, rsi
movq	xmm2, rdx
lea	rsi, [rip + 0x44eaa]
punpcklqdq	xmm0, xmm4
lea	rdx, [rip + 0x44ea7]
movups	xmmword ptr [rax + 0xc0], xmm0
movq	xmm0, rdi
movq	xmm3, rdx
lea	rdi, [rip + 0x44e98]
punpcklqdq	xmm0, xmm5
lea	rdx, [rip + 0x44e96]
movups	xmmword ptr [rax + 0xd0], xmm0
movq	xmm0, rbx
movq	xmm4, rdx
lea	rbx, [rip + 0x44e82]
punpcklqdq	xmm0, xmm1
lea	rdx, [rip + 0x44e7b]
movups	xmmword ptr [rax + 0xf0], xmm0
movq	xmm0, rcx
movq	xmm5, rdx
lea	rcx, [rip + 0x44e6b]
punpcklqdq	xmm0, xmm2
lea	rdx, [rip + 0x44e64]
movups	xmmword ptr [rax + 0x100], xmm0
movq	xmm0, rsi
movq	xmm6, rdx
lea	rsi, [rip + 0x44e50]
punpcklqdq	xmm0, xmm3
lea	rdx, [rip + 0x44e49]
movups	xmmword ptr [rax + 0x110], xmm0
movq	xmm0, rdi
movq	xmm7, rdx
lea	rdi, [rip + 0x44e35]
punpcklqdq	xmm0, xmm4
lea	rdx, [rip + 0x44e2e]
movups	xmmword ptr [rax + 0x120], xmm0
movq	xmm0, rbx
movq	xmm1, rdx
lea	rbx, [rip + 0x44e1a]
punpcklqdq	xmm0, xmm5
mov	qword ptr [rax + 0x180], rbx
movups	xmmword ptr [rax + 0x130], xmm0
movq	xmm0, rcx
punpcklqdq	xmm0, xmm6
movups	xmmword ptr [rax + 0x150], xmm0
movq	xmm0, rsi
punpcklqdq	xmm0, xmm7
movups	xmmword ptr [rax + 0x160], xmm0
movq	xmm0, rdi
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rax + 0x170], xmm0
movups	xmm6, xmmword ptr [rsp + 0x20]
movups	xmm7, xmmword ptr [rsp + 0x30]
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	ecx, 0x190
call	0x1400b2c30
call	0x1400b2c30
mov	rcx, qword ptr [rip + 0x48b47]
pxor	xmm0, xmm0
mov	dword ptr [rax + 8], 0
lea	rdx, [rcx + 0x10]
mov	byte ptr [rax + 0x188], 0
mov	qword ptr [rax], rdx
mov	qword ptr [rax + 0x180], 0
mov	qword ptr [rbx + 0x10], rax
movups	xmmword ptr [rax + 0x10], xmm0
movups	xmmword ptr [rax + 0x20], xmm0
movups	xmmword ptr [rax + 0x30], xmm0
movups	xmmword ptr [rax + 0x40], xmm0
movups	xmmword ptr [rax + 0x50], xmm0
movups	xmmword ptr [rax + 0x60], xmm0
movups	xmmword ptr [rax + 0x70], xmm0
movups	xmmword ptr [rax + 0x80], xmm0
movups	xmmword ptr [rax + 0x90], xmm0
movups	xmmword ptr [rax + 0xa0], xmm0
movups	xmmword ptr [rax + 0xb0], xmm0
movups	xmmword ptr [rax + 0xc0], xmm0
movups	xmmword ptr [rax + 0xd0], xmm0
movups	xmmword ptr [rax + 0xe0], xmm0
movups	xmmword ptr [rax + 0xf0], xmm0
movups	xmmword ptr [rax + 0x100], xmm0
movups	xmmword ptr [rax + 0x110], xmm0
movups	xmmword ptr [rax + 0x120], xmm0
movups	xmmword ptr [rax + 0x130], xmm0
movups	xmmword ptr [rax + 0x140], xmm0
movups	xmmword ptr [rax + 0x150], xmm0
movups	xmmword ptr [rax + 0x160], xmm0
movups	xmmword ptr [rax + 0x170], xmm0
jmp	0x140076173
jmp	0x140076173
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x50001]
mov	qword ptr [rcx], rax
call	0x14009bae0
call	0x14009bae0
xor	edx, edx
mov	rcx, rbx
mov	qword ptr [rbx + 0x20], rax
call	0x140076110
call	0x140076110
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r9, r9
mov	rdi, r8
mov	rbx, rcx
mov	rbp, rdx
setne	al
mov	qword ptr [rcx + 0x10], 0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x4ff93]
mov	qword ptr [rcx], rax
call	0x14009bae0
call	0x14009bae0
mov	rcx, rdi
mov	rdx, rax
mov	rsi, rax
call	0x1400159e8
call	0x1400159e8
mov	rcx, rsi
test	eax, eax
jne	0x1400765d8
jne	0x1400765d8
mov	qword ptr [rbx + 0x20], rcx
mov	rdx, rbp
mov	rcx, rbx
call	0x140076110
call	0x140076110
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rdi
call	0x140015a08
call	0x140015a08
lea	r12, [rax + 1]
mov	rcx, r12
call	0x1400b2c00
call	0x1400b2c00
mov	rcx, rax
mov	r8, r12
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x1400765ba
jmp	0x1400765ba
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rcx, qword ptr [rbx + 0x20]
test	rcx, rcx
je	0x14007662d
je	0x14007662d
cmp	rsi, rcx
je	0x14007662d
je	0x14007662d
call	0x1400b2bd0
call	0x1400b2bd0
call	0x1400b3540
call	0x1400b3540
mov	rsi, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140076602
jmp	0x140076602
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x4fecd]
mov	qword ptr [rcx], rax
call	0x14009bae0
call	0x14009bae0
xor	edx, edx
mov	rcx, rbx
mov	qword ptr [rbx + 0x20], rax
call	0x140076110
call	0x140076110
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x4fe71]
mov	qword ptr [rcx], rax
call	0x14009bae0
call	0x14009bae0
xor	edx, edx
mov	rcx, rbx
mov	qword ptr [rbx + 0x20], rax
call	0x140076110
call	0x140076110
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r9, r9
mov	rdi, r8
mov	rbx, rcx
mov	rbp, rdx
setne	al
mov	qword ptr [rcx + 0x10], 0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x4fe03]
mov	qword ptr [rcx], rax
call	0x14009bae0
call	0x14009bae0
mov	rcx, rdi
mov	rdx, rax
mov	rsi, rax
call	0x1400159e8
call	0x1400159e8
mov	rcx, rsi
test	eax, eax
jne	0x140076768
jne	0x140076768
mov	qword ptr [rbx + 0x20], rcx
mov	rdx, rbp
mov	rcx, rbx
call	0x140076110
call	0x140076110
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rdi
call	0x140015a08
call	0x140015a08
lea	r12, [rax + 1]
mov	rcx, r12
call	0x1400b2c00
call	0x1400b2c00
mov	rcx, rax
mov	r8, r12
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x14007674a
jmp	0x14007674a
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rcx, qword ptr [rbx + 0x20]
test	rcx, rcx
je	0x1400767bd
je	0x1400767bd
cmp	rsi, rcx
je	0x1400767bd
je	0x1400767bd
call	0x1400b2bd0
call	0x1400b2bd0
call	0x1400b3540
call	0x1400b3540
mov	rsi, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140076792
jmp	0x140076792
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x4fd3d]
mov	qword ptr [rcx], rax
call	0x14009bae0
call	0x14009bae0
xor	edx, edx
mov	rcx, rbx
mov	qword ptr [rbx + 0x20], rax
call	0x140076110
call	0x140076110
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x140076850
call	0x140076850
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
lea	rax, [rip + 0x4fcd3]
mov	rsi, qword ptr [rcx + 0x20]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bae0
call	0x14009bae0
cmp	rsi, rax
je	0x14007687e
je	0x14007687e
test	rsi, rsi
je	0x14007687e
je	0x14007687e
mov	rcx, rsi
call	0x1400b2bd0
call	0x1400b2bd0
mov	rsi, qword ptr [rbx + 0x10]
test	rsi, rsi
je	0x1400768b4
je	0x1400768b4
mov	rax, qword ptr [rsi]
lea	rdx, [rip + 0x1e8bf]
mov	rax, qword ptr [rax + 8]
cmp	rax, rdx
jne	0x1400768d0
jne	0x1400768d0
lea	rax, [rip + 0x508ef]
mov	rcx, rsi
mov	qword ptr [rsi], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x1400b2be0
call	0x1400b2be0
lea	rcx, [rbx + 0x18]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x14009bc00
jmp	0x14009bc00
nop	dword ptr [rax + rax]
mov	rcx, rsi
call	rax
call	rax
jmp	0x1400768b4
jmp	0x1400768b4
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
lea	rax, [rip + 0x4fc43]
mov	rsi, qword ptr [rcx + 0x20]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bae0
call	0x14009bae0
cmp	rsi, rax
je	0x14007690e
je	0x14007690e
test	rsi, rsi
je	0x14007690e
je	0x14007690e
mov	rcx, rsi
call	0x1400b2bd0
call	0x1400b2bd0
mov	rsi, qword ptr [rbx + 0x10]
test	rsi, rsi
je	0x140076944
je	0x140076944
mov	rax, qword ptr [rsi]
lea	rdx, [rip + 0x1e82f]
mov	rax, qword ptr [rax + 8]
cmp	rax, rdx
jne	0x140076960
jne	0x140076960
lea	rax, [rip + 0x5085f]
mov	rcx, rsi
mov	qword ptr [rsi], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x1400b2be0
call	0x1400b2be0
lea	rcx, [rbx + 0x18]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x14009bc00
jmp	0x14009bc00
nop	dword ptr [rax + rax]
mov	rcx, rsi
call	rax
call	rax
jmp	0x140076944
jmp	0x140076944
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
movups	xmmword ptr [rsp + 0x20], xmm6
movups	xmmword ptr [rsp + 0x30], xmm7
lea	rax, [rip + 0x44995]
lea	rbp, [rip + 0x4486c]
movq	xmm0, rax
lea	rax, [rip + 0x4498a]
lea	rdi, [rip + 0x4486b]
movq	xmm7, rax
lea	rax, [rip + 0x44a05]
lea	rsi, [rip + 0x4486a]
movq	xmm6, rax
mov	rax, qword ptr [rcx + 0x10]
punpcklqdq	xmm7, xmm0
punpcklqdq	xmm6, xmm0
mov	rbx, rcx
test	rax, rax
je	0x140076c98
je	0x140076c98
movq	xmm0, rbp
lea	rdx, [rip + 0x44849]
lea	rbx, [rip + 0x4486e]
movups	xmmword ptr [rax + 0x140], xmm6
punpcklqdq	xmm0, xmm0
movq	xmm1, rdx
lea	rdx, [rip + 0x44849]
movups	xmmword ptr [rax + 0xe0], xmm7
movups	xmmword ptr [rax + 0x10], xmm0
movq	xmm0, rdi
movq	xmm2, rdx
lea	rdi, [rip + 0x44815]
punpcklqdq	xmm0, xmm0
lea	rdx, [rip + 0x4483e]
lea	rcx, [rip + 0x44847]
movups	xmmword ptr [rax + 0x20], xmm0
movq	xmm0, rsi
lea	rsi, [rip + 0x447e7]
movq	xmm3, rdx
punpcklqdq	xmm0, xmm0
lea	rdx, [rip + 0x4483b]
movups	xmmword ptr [rax + 0x30], xmm0
movq	xmm0, rsi
movq	xmm4, rdx
lea	rsi, [rip + 0x44838]
punpcklqdq	xmm0, xmm1
lea	rdx, [rip + 0x4483b]
movups	xmmword ptr [rax + 0x40], xmm0
movq	xmm0, rdi
movq	xmm5, rdx
lea	rdi, [rip + 0x44838]
punpcklqdq	xmm0, xmm2
lea	rdx, [rip + 0x44835]
movups	xmmword ptr [rax + 0x50], xmm0
movq	xmm0, rbx
movq	xmm1, rdx
lea	rbx, [rip + 0x44828]
punpcklqdq	xmm0, xmm3
lea	rdx, [rip + 0x44825]
movups	xmmword ptr [rax + 0x60], xmm0
movq	xmm0, rcx
movq	xmm2, rdx
lea	rcx, [rip + 0x44818]
punpcklqdq	xmm0, xmm4
lea	rdx, [rip + 0x44815]
movups	xmmword ptr [rax + 0x70], xmm0
movq	xmm0, rsi
movq	xmm3, rdx
lea	rsi, [rip + 0x44808]
punpcklqdq	xmm0, xmm5
lea	rdx, [rip + 0x44805]
movups	xmmword ptr [rax + 0x80], xmm0
movq	xmm0, rdi
movq	xmm4, rdx
lea	rdi, [rip + 0x447fd]
punpcklqdq	xmm0, xmm1
lea	rdx, [rip + 0x44804]
movups	xmmword ptr [rax + 0x90], xmm0
movq	xmm0, rbx
movq	xmm5, rdx
lea	rbx, [rip + 0x4480c]
punpcklqdq	xmm0, xmm2
lea	rdx, [rip + 0x4480b]
movups	xmmword ptr [rax + 0xa0], xmm0
movq	xmm0, rcx
movq	xmm1, rdx
lea	rcx, [rip + 0x447fd]
punpcklqdq	xmm0, xmm3
lea	rdx, [rip + 0x44800]
movups	xmmword ptr [rax + 0xb0], xmm0
movq	xmm0, rsi
movq	xmm2, rdx
lea	rsi, [rip + 0x447fc]
punpcklqdq	xmm0, xmm4
lea	rdx, [rip + 0x44801]
movups	xmmword ptr [rax + 0xc0], xmm0
movq	xmm0, rdi
movq	xmm3, rdx
lea	rdi, [rip + 0x447fb]
punpcklqdq	xmm0, xmm5
lea	rdx, [rip + 0x44802]
movups	xmmword ptr [rax + 0xd0], xmm0
movq	xmm0, rbx
movq	xmm4, rdx
lea	rbx, [rip + 0x447f2]
punpcklqdq	xmm0, xmm1
lea	rdx, [rip + 0x447ef]
movups	xmmword ptr [rax + 0xf0], xmm0
movq	xmm0, rcx
movq	xmm5, rdx
lea	rcx, [rip + 0x447e7]
punpcklqdq	xmm0, xmm2
lea	rdx, [rip + 0x447e4]
movups	xmmword ptr [rax + 0x100], xmm0
movq	xmm0, rsi
movq	xmm6, rdx
lea	rsi, [rip + 0x447d4]
punpcklqdq	xmm0, xmm3
lea	rdx, [rip + 0x447d1]
movups	xmmword ptr [rax + 0x110], xmm0
movq	xmm0, rdi
movq	xmm7, rdx
lea	rdi, [rip + 0x447c1]
punpcklqdq	xmm0, xmm4
lea	rdx, [rip + 0x447be]
movups	xmmword ptr [rax + 0x120], xmm0
movq	xmm0, rbx
movq	xmm1, rdx
lea	rbx, [rip + 0x447ae]
punpcklqdq	xmm0, xmm5
mov	qword ptr [rax + 0x180], rbx
movups	xmmword ptr [rax + 0x130], xmm0
movq	xmm0, rcx
punpcklqdq	xmm0, xmm6
movups	xmmword ptr [rax + 0x150], xmm0
movq	xmm0, rsi
punpcklqdq	xmm0, xmm7
movups	xmmword ptr [rax + 0x160], xmm0
movq	xmm0, rdi
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rax + 0x170], xmm0
movups	xmm6, xmmword ptr [rsp + 0x20]
movups	xmm7, xmmword ptr [rsp + 0x30]
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	ecx, 0x190
call	0x1400b2c30
call	0x1400b2c30
mov	rcx, qword ptr [rip + 0x482f7]
pxor	xmm0, xmm0
mov	dword ptr [rax + 8], 0
lea	rdx, [rcx + 0x10]
mov	byte ptr [rax + 0x188], 0
mov	qword ptr [rax], rdx
mov	qword ptr [rax + 0x180], 0
mov	qword ptr [rbx + 0x10], rax
movups	xmmword ptr [rax + 0x10], xmm0
movups	xmmword ptr [rax + 0x20], xmm0
movups	xmmword ptr [rax + 0x30], xmm0
movups	xmmword ptr [rax + 0x40], xmm0
movups	xmmword ptr [rax + 0x50], xmm0
movups	xmmword ptr [rax + 0x60], xmm0
movups	xmmword ptr [rax + 0x70], xmm0
movups	xmmword ptr [rax + 0x80], xmm0
movups	xmmword ptr [rax + 0x90], xmm0
movups	xmmword ptr [rax + 0xa0], xmm0
movups	xmmword ptr [rax + 0xb0], xmm0
movups	xmmword ptr [rax + 0xc0], xmm0
movups	xmmword ptr [rax + 0xd0], xmm0
movups	xmmword ptr [rax + 0xe0], xmm0
movups	xmmword ptr [rax + 0xf0], xmm0
movups	xmmword ptr [rax + 0x100], xmm0
movups	xmmword ptr [rax + 0x110], xmm0
movups	xmmword ptr [rax + 0x120], xmm0
movups	xmmword ptr [rax + 0x130], xmm0
movups	xmmword ptr [rax + 0x140], xmm0
movups	xmmword ptr [rax + 0x150], xmm0
movups	xmmword ptr [rax + 0x160], xmm0
movups	xmmword ptr [rax + 0x170], xmm0
jmp	0x1400769d3
jmp	0x1400769d3
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x4f7c1]
mov	qword ptr [rcx], rax
call	0x14009bae0
call	0x14009bae0
xor	edx, edx
mov	rcx, rbx
mov	qword ptr [rbx + 0x20], rax
call	0x140076970
call	0x140076970
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r9, r9
mov	rdi, r8
mov	rbx, rcx
mov	rbp, rdx
setne	al
mov	qword ptr [rcx + 0x10], 0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x4f753]
mov	qword ptr [rcx], rax
call	0x14009bae0
call	0x14009bae0
mov	rcx, rdi
mov	rdx, rax
mov	rsi, rax
call	0x1400159e8
call	0x1400159e8
mov	rcx, rsi
test	eax, eax
jne	0x140076e38
jne	0x140076e38
mov	qword ptr [rbx + 0x20], rcx
mov	rdx, rbp
mov	rcx, rbx
call	0x140076970
call	0x140076970
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rdi
call	0x140015a08
call	0x140015a08
lea	r12, [rax + 1]
mov	rcx, r12
call	0x1400b2c00
call	0x1400b2c00
mov	rcx, rax
mov	r8, r12
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x140076e1a
jmp	0x140076e1a
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rcx, qword ptr [rbx + 0x20]
test	rcx, rcx
je	0x140076e8d
je	0x140076e8d
cmp	rsi, rcx
je	0x140076e8d
je	0x140076e8d
call	0x1400b2bd0
call	0x1400b2bd0
call	0x1400b3540
call	0x1400b3540
mov	rsi, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140076e62
jmp	0x140076e62
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x4f68d]
mov	qword ptr [rcx], rax
call	0x14009bae0
call	0x14009bae0
xor	edx, edx
mov	rcx, rbx
mov	qword ptr [rbx + 0x20], rax
call	0x140076970
call	0x140076970
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x4f631]
mov	qword ptr [rcx], rax
call	0x14009bae0
call	0x14009bae0
xor	edx, edx
mov	rcx, rbx
mov	qword ptr [rbx + 0x20], rax
call	0x140076970
call	0x140076970
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r9, r9
mov	rdi, r8
mov	rbx, rcx
mov	rbp, rdx
setne	al
mov	qword ptr [rcx + 0x10], 0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x4f5c3]
mov	qword ptr [rcx], rax
call	0x14009bae0
call	0x14009bae0
mov	rcx, rdi
mov	rdx, rax
mov	rsi, rax
call	0x1400159e8
call	0x1400159e8
mov	rcx, rsi
test	eax, eax
jne	0x140076fc8
jne	0x140076fc8
mov	qword ptr [rbx + 0x20], rcx
mov	rdx, rbp
mov	rcx, rbx
call	0x140076970
call	0x140076970
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rdi
call	0x140015a08
call	0x140015a08
lea	r12, [rax + 1]
mov	rcx, r12
call	0x1400b2c00
call	0x1400b2c00
mov	rcx, rax
mov	r8, r12
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x140076faa
jmp	0x140076faa
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rcx, qword ptr [rbx + 0x20]
test	rcx, rcx
je	0x14007701d
je	0x14007701d
cmp	rsi, rcx
je	0x14007701d
je	0x14007701d
call	0x1400b2bd0
call	0x1400b2bd0
call	0x1400b3540
call	0x1400b3540
mov	rsi, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140076ff2
jmp	0x140076ff2
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x4f4fd]
mov	qword ptr [rcx], rax
call	0x14009bae0
call	0x14009bae0
xor	edx, edx
mov	rcx, rbx
mov	qword ptr [rbx + 0x20], rax
call	0x140076970
call	0x140076970
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x1400770b0
call	0x1400770b0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
lea	rax, [rip + 0x4f493]
mov	rsi, qword ptr [rcx + 0x20]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bae0
call	0x14009bae0
cmp	rsi, rax
je	0x1400770de
je	0x1400770de
test	rsi, rsi
je	0x1400770de
je	0x1400770de
mov	rcx, rsi
call	0x1400b2bd0
call	0x1400b2bd0
mov	rsi, qword ptr [rbx + 0x10]
test	rsi, rsi
je	0x140077114
je	0x140077114
mov	rax, qword ptr [rsi]
lea	rdx, [rip + 0x1e22f]
mov	rax, qword ptr [rax + 8]
cmp	rax, rdx
jne	0x140077130
jne	0x140077130
lea	rax, [rip + 0x500af]
mov	rcx, rsi
mov	qword ptr [rsi], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x1400b2be0
call	0x1400b2be0
lea	rcx, [rbx + 0x18]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x14009bc00
jmp	0x14009bc00
nop	dword ptr [rax + rax]
mov	rcx, rsi
call	rax
call	rax
jmp	0x140077114
jmp	0x140077114
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
lea	rax, [rip + 0x4f403]
mov	rsi, qword ptr [rcx + 0x20]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bae0
call	0x14009bae0
cmp	rsi, rax
je	0x14007716e
je	0x14007716e
test	rsi, rsi
je	0x14007716e
je	0x14007716e
mov	rcx, rsi
call	0x1400b2bd0
call	0x1400b2bd0
mov	rsi, qword ptr [rbx + 0x10]
test	rsi, rsi
je	0x1400771a4
je	0x1400771a4
mov	rax, qword ptr [rsi]
lea	rdx, [rip + 0x1e19f]
mov	rax, qword ptr [rax + 8]
cmp	rax, rdx
jne	0x1400771c0
jne	0x1400771c0
lea	rax, [rip + 0x5001f]
mov	rcx, rsi
mov	qword ptr [rsi], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x1400b2be0
call	0x1400b2be0
lea	rcx, [rbx + 0x18]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x14009bc00
jmp	0x14009bc00
nop	dword ptr [rax + rax]
mov	rcx, rsi
call	rax
call	rax
jmp	0x1400771a4
jmp	0x1400771a4
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x47c49]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx + 8]
mov	rdx, qword ptr [rip + 0x47447]
mov	qword ptr [rcx + 8], rax
mov	r8d, dword ptr [rdx]
test	r8d, r8d
jne	0x140077208
jne	0x140077208
mov	edx, dword ptr [rax - 8]
test	edx, edx
jle	0x140077213
jle	0x140077213
add	edx, 1
mov	dword ptr [rax - 8], edx
ret	
ret	
nop	dword ptr [rax + rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x140077220
jg	0x140077220
mov	rax, qword ptr [rcx + 8]
mov	dword ptr [rax - 8], 1
ret	
ret	
nop	dword ptr [rax + rax]
mov	edx, dword ptr [rdx]
mov	rax, qword ptr [rcx + 8]
test	edx, edx
je	0x140077230
je	0x140077230
lock add	dword ptr [rax - 8], 1
ret	
ret	
mov	edx, dword ptr [rax - 8]
jmp	0x1400771fc
jmp	0x1400771fc
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rip + 0x47bd3]
add	rax, 0x10
mov	rbx, rdx
mov	qword ptr [rcx], rax
mov	rsi, rcx
mov	rdx, 0xffffffffffffffff
test	rbx, rbx
je	0x140077272
je	0x140077272
mov	rcx, rbx
call	0x140015a08
call	0x140015a08
lea	rdx, [rbx + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rbx
call	0x140072090
call	0x140072090
mov	qword ptr [rsi + 8], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	rbx, rax
mov	rcx, rsi
call	0x1400ac440
call	0x1400ac440
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x47b73]
add	rax, 0x10
mov	r8, qword ptr [rdx + 8]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
mov	rbx, rcx
lea	rcx, [rcx + 8]
mov	rdx, rax
call	0x140078a90
call	0x140078a90
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rip + 0x47b24]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx + 8]
mov	rbx, rcx
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
lea	r8, [rax - 8]
test	edx, edx
js	0x140077338
js	0x140077338
mov	rdx, qword ptr [rip + 0x47310]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x140077350
jne	0x140077350
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx + 8], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
mov	qword ptr [rbx + 8], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
lock add	dword ptr [r8], 1
mov	qword ptr [rbx + 8], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
lea	rax, [rip + 0x4f203]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
lea	r8, [rax - 8]
test	edx, edx
js	0x1400773a8
js	0x1400773a8
mov	rdx, qword ptr [rip + 0x472a4]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x1400773c0
jne	0x1400773c0
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx + 8], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
mov	qword ptr [rbx + 8], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
lock add	dword ptr [r8], 1
mov	qword ptr [rbx + 8], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x140077410
call	0x140077410
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
lea	rax, [rip + 0x4f154]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4720a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 8]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140077450
jne	0x140077450
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007745e
jle	0x14007745e
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140077440
jg	0x140077440
sub	rcx, 0x18
lea	rdx, [rsp + 0x2f]
call	0x140072480
call	0x140072480
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
add	rdx, 8
lea	rcx, [rcx + 8]
call	0x140072780
call	0x140072780
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
add	rdx, 8
lea	rcx, [rcx + 8]
call	0x140072f30
call	0x140072f30
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rip + 0x47a03]
add	rax, 0x10
mov	rbx, rdx
mov	qword ptr [rcx], rax
mov	rsi, rcx
mov	rdx, 0xffffffffffffffff
test	rbx, rbx
je	0x1400774f2
je	0x1400774f2
mov	rcx, rbx
call	0x140015a08
call	0x140015a08
lea	rdx, [rbx + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rbx
call	0x140072090
call	0x140072090
mov	qword ptr [rsi + 8], rax
mov	rax, qword ptr [rip + 0x47926]
add	rax, 0x10
mov	qword ptr [rsi], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	rbx, rax
mov	rcx, rsi
call	0x1400ac440
call	0x1400ac440
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x47993]
add	rax, 0x10
mov	r8, qword ptr [rdx + 8]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
mov	rbx, rcx
lea	rcx, [rcx + 8]
mov	rdx, rax
call	0x140078a90
call	0x140078a90
mov	rax, qword ptr [rip + 0x478cf]
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
lea	rax, [rip + 0x4f4d3]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
lea	r8, [rax - 8]
test	edx, edx
js	0x1400775e0
js	0x1400775e0
mov	rdx, qword ptr [rip + 0x47074]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x1400775f0
jne	0x1400775f0
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx + 8], rax
lea	rax, [rip + 0x4efcf]
mov	qword ptr [rbx], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
jmp	0x1400775c6
jmp	0x1400775c6
nop	
lock add	dword ptr [r8], 1
jmp	0x1400775c6
jmp	0x1400775c6
mov	rsi, rax
mov	rcx, rbx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x4ef84]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14008c430
call	0x14008c430
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
lea	rax, [rip + 0x4f424]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x46fda]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 8]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140077680
jne	0x140077680
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007768e
jle	0x14007768e
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140077670
jg	0x140077670
sub	rcx, 0x18
lea	rdx, [rsp + 0x2f]
call	0x140072480
call	0x140072480
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	qword ptr [rsp + 0x20], rcx
mov	rbp, r8
mov	esi, r9d
mov	qword ptr [rsp + 0x28], rdx
test	byte ptr [rsp + 0x80], 4
jne	0x140077750
jne	0x140077750
xor	edi, edi
mov	ebx, 1
lea	rcx, [rsp + 0x20]
cmp	rbp, 1
ja	0x140077706
ja	0x140077706
jmp	0x140077720
jmp	0x140077720
nop	word ptr cs:[rax + rax]
cmp	eax, 0xffff
cmovbe	rbx, rdi
lea	rdi, [rbx + 1]
add	rbx, 2
cmp	rbx, rbp
jae	0x140077720
jae	0x140077720
mov	edx, esi
call	0x140077c30
call	0x140077c30
cmp	esi, eax
jae	0x1400776f0
jae	0x1400776f0
mov	rax, qword ptr [rsp + 0x20]
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
cmp	rbx, rbp
jne	0x140077711
jne	0x140077711
mov	eax, 0xffff
lea	rcx, [rsp + 0x20]
cmp	esi, eax
cmovbe	eax, esi
mov	edx, eax
call	0x140077c30
call	0x140077c30
mov	rax, qword ptr [rsp + 0x20]
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
sub	rdx, rcx
cmp	rdx, 2
jbe	0x1400776d2
jbe	0x1400776d2
cmp	word ptr [rcx], 0xbbef
jne	0x1400776d2
jne	0x1400776d2
cmp	byte ptr [rcx + 2], 0xbf
jne	0x1400776d2
jne	0x1400776d2
add	rcx, 3
mov	qword ptr [rsp + 0x20], rcx
jmp	0x1400776d2
jmp	0x1400776d2
sub	rsp, 0x38
mov	r8d, 0x64
mov	edx, 1
lea	rcx, [rsp + 0x2c]
rdrand	eax
mov	dword ptr [rcx], eax
cmovb	eax, edx
test	eax, eax
je	0x1400777b0
je	0x1400777b0
mov	eax, dword ptr [rsp + 0x2c]
add	rsp, 0x38
ret	
ret	
nop	dword ptr [rax]
sub	r8d, 1
jne	0x140077794
jne	0x140077794
lea	rcx, [rip + 0x42ac3]
call	0x1400b3c40
call	0x1400b3c40
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, rcx
rdseed	edx
mov	dword ptr [rsp + 0x2c], edx
jae	0x1400777f0
jae	0x1400777f0
mov	eax, dword ptr [rsp + 0x2c]
add	rsp, 0x38
ret	
ret	
nop	dword ptr [rax]
mov	r8d, 0x63
lea	rcx, [rsp + 0x2c]
pause	
rdseed	edx
mov	dword ptr [rcx], edx
jb	0x1400777e0
jb	0x1400777e0
sub	r8d, 1
jne	0x1400777fb
jne	0x1400777fb
test	rax, rax
je	0x140077815
je	0x140077815
xor	ecx, ecx
call	rax
call	rax
jmp	0x1400777e4
jmp	0x1400777e4
lea	rcx, [rip + 0x42a9e]
call	0x1400b3c40
call	0x1400b3c40
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	edx, edx
xor	ecx, ecx
call	0x1400159c8
call	0x1400159c8
mov	rcx, rax
mov	rsi, rax
call	0x140015a08
call	0x140015a08
mov	rdx, qword ptr [rip + 0x4742e]
lea	rdi, [rax + 1]
mov	rcx, rdi
call	0x1400b2c10
call	0x1400b2c10
mov	rbx, rax
test	rax, rax
je	0x140077882
je	0x140077882
mov	rdx, rsi
mov	rcx, rax
mov	r8, rdi
call	0x140015998
call	0x140015998
lea	rdx, [rip + 0x43665]
xor	ecx, ecx
call	0x1400159c8
call	0x1400159c8
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
sub	rsp, 0x38
lea	rcx, [rsp + 0x2c]
call	qword ptr [rip + 0x3d861]
call	qword ptr [rip + 0x3d861]
test	eax, eax
jne	0x1400778ac
jne	0x1400778ac
mov	eax, dword ptr [rsp + 0x2c]
add	rsp, 0x38
ret	
ret	
lea	rcx, [rip + 0x429ea]
call	0x1400b3c40
call	0x1400b3c40
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, dword ptr [rdx]
test	al, 4
jne	0x1400778d0
jne	0x1400778d0
ret	
ret	
nop	word ptr [rax + rax]
mov	r8, qword ptr [rcx]
mov	r9, qword ptr [rcx + 8]
sub	r9, r8
cmp	r9, 1
jbe	0x1400778c6
jbe	0x1400778c6
cmp	word ptr [r8], -2
je	0x140077900
je	0x140077900
cmp	word ptr [r8], 0xfeff
jne	0x1400778c6
jne	0x1400778c6
add	r8, 2
or	eax, 1
mov	qword ptr [rcx], r8
mov	dword ptr [rdx], eax
ret	
ret	
nop	dword ptr [rax]
add	r8, 2
and	eax, 0xfffffffe
mov	qword ptr [rcx], r8
mov	dword ptr [rdx], eax
ret	
ret	
nop	
nop	
nop	
push	rsi
push	rbx
xor	eax, eax
movsxd	r9, edx
lea	r10d, [rcx + 0x76c]
cmp	r9d, 1
setle	al
sub	r10d, eax
lea	ebx, [r10 + 3]
cmovns	ebx, r10d
sub	ecx, 0x46
imul	ecx, ecx, 0x16d
mov	r11d, ebx
sar	ebx, 0x1f
sar	r11d, 2
lea	eax, [r11 + rcx - 0x1d9]
movsxd	rcx, r10d
sar	r10d, 0x1f
imul	rcx, rcx, 0x51eb851f
mov	rsi, rcx
sar	rcx, 0x27
sar	rsi, 0x25
sub	ecx, r10d
mov	rdx, rsi
mov	esi, r10d
sub	esi, edx
lea	edx, [rax + rsi]
movsxd	rax, r11d
imul	rax, rax, 0x51eb851f
sar	rax, 0x23
sub	eax, ebx
lea	eax, [rax + rax*4]
lea	ebx, [rax + rax*4]
mov	eax, r11d
sub	eax, ebx
shr	eax, 0x1f
add	eax, edx
lea	rdx, [rip + 0x47c47]
movzx	edx, word ptr [rdx + r9*2]
add	eax, ecx
add	eax, edx
lea	edx, [rax + r8 - 1]
movsxd	rax, edx
mov	ecx, edx
imul	rax, rax, -0x6db6db6d
sar	ecx, 0x1f
shr	rax, 0x20
add	eax, edx
sar	eax, 2
sub	eax, ecx
lea	ecx, [rax*8]
sub	ecx, eax
sub	edx, ecx
lea	ecx, [rdx + 7]
mov	rdx, rcx
imul	rcx, rcx, 0x24924925
mov	eax, edx
shr	rcx, 0x20
sub	eax, ecx
shr	eax, 1
add	eax, ecx
shr	eax, 2
lea	ecx, [rax*8]
sub	ecx, eax
mov	eax, edx
sub	eax, ecx
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
rdseed	eax
mov	dword ptr [rsp + 0x2c], eax
jae	0x140077a20
jae	0x140077a20
mov	eax, dword ptr [rsp + 0x2c]
add	rsp, 0x38
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	ecx, 0x63
lea	rdx, [rsp + 0x2c]
pause	
rdseed	eax
mov	dword ptr [rdx], eax
jb	0x140077a0d
jb	0x140077a0d
sub	ecx, 1
jne	0x140077a2a
jne	0x140077a2a
xor	ecx, ecx
call	0x140077780
call	0x140077780
jmp	0x140077a11
jmp	0x140077a11
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
mov	r8d, 0xfffffffe
mov	rax, qword ptr [rcx]
mov	r9d, edx
mov	rdx, qword ptr [rcx + 8]
sub	rdx, rax
je	0x140077a77
je	0x140077a77
movzx	r8d, byte ptr [rax]
cmp	r8d, 0x7f
ja	0x140077a80
ja	0x140077a80
add	rax, 1
mov	qword ptr [rcx], rax
mov	eax, r8d
pop	rbx
ret	
ret	
nop	dword ptr [rax]
cmp	r8d, 0xc1
jbe	0x140077b60
jbe	0x140077b60
cmp	r8d, 0xdf
jbe	0x140077b20
jbe	0x140077b20
cmp	r8d, 0xef
ja	0x140077b70
ja	0x140077b70
cmp	rdx, 1
je	0x140077c20
je	0x140077c20
movzx	r11d, byte ptr [rax + 1]
mov	r10d, r11d
and	r10d, 0xffffffc0
cmp	r10b, 0x80
jne	0x140077b60
jne	0x140077b60
cmp	r8d, 0xe0
jne	0x140077add
jne	0x140077add
cmp	r11d, 0x9f
jbe	0x140077b60
jbe	0x140077b60
cmp	rdx, 2
je	0x140077c20
je	0x140077c20
movzx	r10d, byte ptr [rax + 2]
mov	edx, r10d
and	edx, 0xffffffc0
cmp	dl, 0x80
jne	0x140077b60
jne	0x140077b60
shl	r8d, 0xc
shl	r11d, 6
lea	r8d, [r10 + r8 - 0xe2080]
add	r8d, r11d
cmp	r9d, r8d
jb	0x140077a77
jb	0x140077a77
add	rax, 3
mov	qword ptr [rcx], rax
jmp	0x140077a77
jmp	0x140077a77
nop	
cmp	rdx, 1
je	0x140077c20
je	0x140077c20
movzx	r10d, byte ptr [rax + 1]
mov	edx, r10d
and	edx, 0xffffffc0
cmp	dl, 0x80
jne	0x140077b60
jne	0x140077b60
shl	r8d, 6
lea	r8d, [r10 + r8 - 0x3080]
cmp	r9d, r8d
jb	0x140077a77
jb	0x140077a77
add	rax, 2
mov	qword ptr [rcx], rax
jmp	0x140077a77
jmp	0x140077a77
nop	dword ptr [rax + rax]
mov	r8d, 0xffffffff
jmp	0x140077a77
jmp	0x140077a77
nop	dword ptr [rax + rax]
cmp	r8d, 0xf4
ja	0x140077b60
ja	0x140077b60
cmp	r9d, 0xffff
jbe	0x140077b60
jbe	0x140077b60
cmp	rdx, 1
je	0x140077c20
je	0x140077c20
movzx	r11d, byte ptr [rax + 1]
mov	r10d, r11d
and	r10d, 0xffffffc0
cmp	r10b, 0x80
jne	0x140077b60
jne	0x140077b60
cmp	r8d, 0xf0
jne	0x140077bb0
jne	0x140077bb0
cmp	r11d, 0x8f
jbe	0x140077b60
jbe	0x140077b60
cmp	r8d, 0xf4
jne	0x140077bc2
jne	0x140077bc2
cmp	r11d, 0x8f
ja	0x140077b60
ja	0x140077b60
cmp	rdx, 2
je	0x140077c20
je	0x140077c20
movzx	r10d, byte ptr [rax + 2]
mov	ebx, r10d
and	ebx, 0xffffffc0
cmp	bl, 0x80
jne	0x140077b60
jne	0x140077b60
cmp	rdx, 3
je	0x140077c20
je	0x140077c20
movzx	ebx, byte ptr [rax + 3]
mov	edx, ebx
and	edx, 0xffffffc0
cmp	dl, 0x80
jne	0x140077b60
jne	0x140077b60
shl	r8d, 0x12
shl	r11d, 0xc
lea	r8d, [rbx + r8 - 0x3c82080]
shl	r10d, 6
add	r8d, r11d
add	r8d, r10d
cmp	r9d, r8d
jb	0x140077a77
jb	0x140077a77
add	rax, 4
mov	qword ptr [rcx], rax
jmp	0x140077a77
jmp	0x140077a77
nop	
mov	r8d, 0xfffffffe
jmp	0x140077a77
jmp	0x140077a77
nop	
nop	
nop	
nop	
nop	
push	rbx
mov	r8d, 0xfffffffe
mov	rax, qword ptr [rcx]
mov	r9d, edx
mov	rdx, qword ptr [rcx + 8]
sub	rdx, rax
je	0x140077c57
je	0x140077c57
movzx	r8d, byte ptr [rax]
cmp	r8d, 0x7f
ja	0x140077c60
ja	0x140077c60
add	rax, 1
mov	qword ptr [rcx], rax
mov	eax, r8d
pop	rbx
ret	
ret	
nop	dword ptr [rax]
cmp	r8d, 0xc1
jbe	0x140077d40
jbe	0x140077d40
cmp	r8d, 0xdf
jbe	0x140077d00
jbe	0x140077d00
cmp	r8d, 0xef
ja	0x140077d50
ja	0x140077d50
cmp	rdx, 1
je	0x140077e00
je	0x140077e00
movzx	r11d, byte ptr [rax + 1]
mov	r10d, r11d
and	r10d, 0xffffffc0
cmp	r10b, 0x80
jne	0x140077d40
jne	0x140077d40
cmp	r8d, 0xe0
jne	0x140077cbd
jne	0x140077cbd
cmp	r11d, 0x9f
jbe	0x140077d40
jbe	0x140077d40
cmp	rdx, 2
je	0x140077e00
je	0x140077e00
movzx	r10d, byte ptr [rax + 2]
mov	edx, r10d
and	edx, 0xffffffc0
cmp	dl, 0x80
jne	0x140077d40
jne	0x140077d40
shl	r8d, 0xc
shl	r11d, 6
lea	r8d, [r10 + r8 - 0xe2080]
add	r8d, r11d
cmp	r9d, r8d
jb	0x140077c57
jb	0x140077c57
add	rax, 3
mov	qword ptr [rcx], rax
jmp	0x140077c57
jmp	0x140077c57
nop	
cmp	rdx, 1
je	0x140077e00
je	0x140077e00
movzx	r10d, byte ptr [rax + 1]
mov	edx, r10d
and	edx, 0xffffffc0
cmp	dl, 0x80
jne	0x140077d40
jne	0x140077d40
shl	r8d, 6
lea	r8d, [r10 + r8 - 0x3080]
cmp	r9d, r8d
jb	0x140077c57
jb	0x140077c57
add	rax, 2
mov	qword ptr [rcx], rax
jmp	0x140077c57
jmp	0x140077c57
nop	dword ptr [rax + rax]
mov	r8d, 0xffffffff
jmp	0x140077c57
jmp	0x140077c57
nop	dword ptr [rax + rax]
cmp	r8d, 0xf4
ja	0x140077d40
ja	0x140077d40
cmp	r9d, 0xffff
jbe	0x140077d40
jbe	0x140077d40
cmp	rdx, 1
je	0x140077e00
je	0x140077e00
movzx	r11d, byte ptr [rax + 1]
mov	r10d, r11d
and	r10d, 0xffffffc0
cmp	r10b, 0x80
jne	0x140077d40
jne	0x140077d40
cmp	r8d, 0xf0
jne	0x140077d90
jne	0x140077d90
cmp	r11d, 0x8f
jbe	0x140077d40
jbe	0x140077d40
cmp	r8d, 0xf4
jne	0x140077da2
jne	0x140077da2
cmp	r11d, 0x8f
ja	0x140077d40
ja	0x140077d40
cmp	rdx, 2
je	0x140077e00
je	0x140077e00
movzx	r10d, byte ptr [rax + 2]
mov	ebx, r10d
and	ebx, 0xffffffc0
cmp	bl, 0x80
jne	0x140077d40
jne	0x140077d40
cmp	rdx, 3
je	0x140077e00
je	0x140077e00
movzx	ebx, byte ptr [rax + 3]
mov	edx, ebx
and	edx, 0xffffffc0
cmp	dl, 0x80
jne	0x140077d40
jne	0x140077d40
shl	r8d, 0x12
shl	r11d, 0xc
lea	r8d, [rbx + r8 - 0x3c82080]
shl	r10d, 6
add	r8d, r11d
add	r8d, r10d
cmp	r9d, r8d
jb	0x140077c57
jb	0x140077c57
add	rax, 4
mov	qword ptr [rcx], rax
jmp	0x140077c57
jmp	0x140077c57
nop	
mov	r8d, 0xfffffffe
jmp	0x140077c57
jmp	0x140077c57
nop	
nop	
nop	
nop	
nop	
mov	eax, edx
cmp	edx, 0x7f
ja	0x140077e38
ja	0x140077e38
mov	rdx, qword ptr [rcx]
cmp	qword ptr [rcx + 8], rdx
je	0x140077f40
je	0x140077f40
lea	r8, [rdx + 1]
mov	qword ptr [rcx], r8
mov	byte ptr [rdx], al
mov	eax, 1
ret	
ret	
nop	dword ptr [rax + rax]
cmp	edx, 0x7ff
ja	0x140077e78
ja	0x140077e78
mov	rdx, qword ptr [rcx]
mov	r8, qword ptr [rcx + 8]
sub	r8, rdx
cmp	r8, 1
jbe	0x140077f40
jbe	0x140077f40
mov	r8d, eax
and	eax, 0x3f
shr	r8d, 6
add	eax, -0x80
sub	r8d, 0x40
mov	byte ptr [rdx], r8b
lea	r8, [rdx + 2]
mov	qword ptr [rcx], r8
mov	byte ptr [rdx + 1], al
jmp	0x140077e2d
jmp	0x140077e2d
nop	dword ptr [rax]
cmp	edx, 0xffff
jbe	0x140077ef0
jbe	0x140077ef0
cmp	edx, 0x10ffff
ja	0x140077f40
ja	0x140077f40
mov	rdx, qword ptr [rcx]
mov	r8, qword ptr [rcx + 8]
sub	r8, rdx
cmp	r8, 3
jbe	0x140077f40
jbe	0x140077f40
mov	r8d, eax
shr	r8d, 0x12
sub	r8d, 0x10
mov	byte ptr [rdx], r8b
mov	r8d, eax
shr	r8d, 0xc
and	r8d, 0x3f
add	r8d, -0x80
mov	byte ptr [rdx + 1], r8b
mov	r8d, eax
and	eax, 0x3f
shr	r8d, 6
add	eax, -0x80
and	r8d, 0x3f
add	r8d, -0x80
mov	byte ptr [rdx + 2], r8b
lea	r8, [rdx + 4]
mov	qword ptr [rcx], r8
mov	byte ptr [rdx + 3], al
jmp	0x140077e2d
jmp	0x140077e2d
nop	dword ptr [rax]
mov	rdx, qword ptr [rcx]
mov	r8, qword ptr [rcx + 8]
sub	r8, rdx
cmp	r8, 2
jbe	0x140077f40
jbe	0x140077f40
mov	r8d, eax
shr	r8d, 0xc
sub	r8d, 0x20
mov	byte ptr [rdx], r8b
mov	r8d, eax
and	eax, 0x3f
shr	r8d, 6
add	eax, -0x80
and	r8d, 0x3f
add	r8d, -0x80
mov	byte ptr [rdx + 1], r8b
lea	r8, [rdx + 3]
mov	qword ptr [rcx], r8
mov	byte ptr [rdx + 2], al
jmp	0x140077e2d
jmp	0x140077e2d
nop	word ptr cs:[rax + rax]
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, edx
cmp	edx, 0x7f
ja	0x140077f78
ja	0x140077f78
mov	rdx, qword ptr [rcx]
cmp	qword ptr [rcx + 8], rdx
je	0x140078058
je	0x140078058
lea	r8, [rdx + 1]
mov	qword ptr [rcx], r8
mov	byte ptr [rdx], al
mov	eax, 1
ret	
ret	
nop	dword ptr [rax + rax]
cmp	edx, 0x7ff
ja	0x140077fc0
ja	0x140077fc0
mov	r8, qword ptr [rcx]
mov	rdx, qword ptr [rcx + 8]
sub	rdx, r8
cmp	rdx, 1
jbe	0x140078058
jbe	0x140078058
lea	rdx, [r8 + 1]
mov	qword ptr [rcx], rdx
mov	edx, eax
shr	edx, 6
sub	edx, 0x40
mov	byte ptr [r8], dl
mov	rdx, qword ptr [rcx]
and	eax, 0x3f
add	eax, -0x80
lea	r8, [rdx + 1]
mov	qword ptr [rcx], r8
mov	byte ptr [rdx], al
jmp	0x140077f6d
jmp	0x140077f6d
nop	word ptr [rax + rax]
cmp	edx, 0xffff
jbe	0x140078030
jbe	0x140078030
cmp	edx, 0x10ffff
ja	0x140078058
ja	0x140078058
mov	r8, qword ptr [rcx]
mov	rdx, qword ptr [rcx + 8]
sub	rdx, r8
cmp	rdx, 3
jbe	0x140078058
jbe	0x140078058
lea	rdx, [r8 + 1]
mov	qword ptr [rcx], rdx
mov	edx, eax
shr	edx, 0x12
sub	edx, 0x10
mov	byte ptr [r8], dl
mov	r8, qword ptr [rcx]
lea	rdx, [r8 + 1]
mov	qword ptr [rcx], rdx
mov	edx, eax
shr	edx, 0xc
and	edx, 0x3f
add	edx, -0x80
mov	byte ptr [r8], dl
mov	r8, qword ptr [rcx]
lea	rdx, [r8 + 1]
mov	qword ptr [rcx], rdx
mov	edx, eax
shr	edx, 6
and	edx, 0x3f
add	edx, -0x80
jmp	0x140077fa3
jmp	0x140077fa3
nop	dword ptr [rax + rax]
mov	r8, qword ptr [rcx]
mov	rdx, qword ptr [rcx + 8]
sub	rdx, r8
cmp	rdx, 2
jbe	0x140078058
jbe	0x140078058
lea	rdx, [r8 + 1]
mov	qword ptr [rcx], rdx
mov	edx, eax
shr	edx, 0xc
sub	edx, 0x20
jmp	0x14007800b
jmp	0x14007800b
nop	dword ptr [rax]
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	r11, rdx
lea	rdx, [rsp + 0x58]
mov	esi, r8d
mov	dword ptr [rsp + 0x58], r9d
call	0x1400778c0
call	0x1400778c0
mov	eax, 0xffff
mov	rdx, qword ptr [rcx]
mov	r10, rcx
mov	r9, qword ptr [rcx + 8]
cmp	esi, eax
cmova	esi, eax
mov	rax, r9
sub	rax, rdx
shr	rax, 1
je	0x140078128
je	0x140078128
mov	r8d, dword ptr [rsp + 0x58]
mov	rbx, qword ptr [r11 + 8]
mov	rcx, qword ptr [r11]
and	r8d, 1
jmp	0x1400780fc
jmp	0x1400780fc
nop	dword ptr [rax]
rol	ax, 8
movzx	eax, ax
lea	edi, [rax - 0xd800]
cmp	edi, 0x3ff
jbe	0x140078117
jbe	0x140078117
lea	edi, [rax - 0xdc00]
cmp	edi, 0x3ff
jbe	0x140078117
jbe	0x140078117
cmp	esi, eax
jb	0x140078117
jb	0x140078117
add	rdx, 2
add	rcx, 2
mov	qword ptr [r10], rdx
mov	qword ptr [r11], rcx
mov	word ptr [rcx - 2], ax
mov	rax, r9
sub	rax, rdx
shr	rax, 1
je	0x140078128
je	0x140078128
cmp	rcx, rbx
je	0x140078138
je	0x140078138
movzx	eax, word ptr [rdx]
test	r8d, r8d
je	0x1400780b8
je	0x1400780b8
lea	edi, [rax - 0xd800]
cmp	edi, 0x3ff
ja	0x1400780cd
ja	0x1400780cd
mov	eax, 2
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
xor	eax, eax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, 1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
mov	rbx, qword ptr [rcx + 8]
mov	rax, qword ptr [rcx]
mov	r10, rcx
mov	r11, rdx
cmp	rbx, rax
je	0x1400781e0
je	0x1400781e0
mov	rdx, qword ptr [rdx]
and	r9d, 1
jmp	0x1400781b2
jmp	0x1400781b2
nop	dword ptr [rax]
movzx	eax, word ptr [rax]
lea	ebx, [rax - 0xd800]
mov	ecx, eax
cmp	ebx, 0x3ff
jbe	0x1400781d0
jbe	0x1400781d0
cmp	r8d, eax
jb	0x1400781d0
jb	0x1400781d0
rol	ax, 8
test	r9d, r9d
cmove	ecx, eax
mov	word ptr [rdx], cx
mov	rax, qword ptr [r11]
mov	rbx, qword ptr [r10 + 8]
lea	rdx, [rax + 2]
mov	rax, qword ptr [r10]
mov	qword ptr [r11], rdx
add	rax, 2
mov	qword ptr [r10], rax
cmp	rax, rbx
je	0x1400781e0
je	0x1400781e0
mov	rcx, qword ptr [r11 + 8]
sub	rcx, rdx
shr	rcx, 1
jne	0x140078170
jne	0x140078170
cmp	rbx, rax
setne	al
movzx	eax, al
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	eax, 2
pop	rbx
ret	
ret	
nop	word ptr [rax + rax]
xor	eax, eax
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbp, qword ptr [rcx + 8]
mov	r14, qword ptr [rcx]
mov	rsi, rdx
mov	ebx, r8d
mov	r12d, r9d
test	r9b, 4
jne	0x1400782f0
jne	0x1400782f0
cmp	rbp, r14
je	0x140078269
je	0x140078269
mov	rdi, qword ptr [rsi + 8]
mov	r13, qword ptr [rsi]
cmp	r13, rdi
je	0x140078328
je	0x140078328
mov	edx, ebx
call	0x140077c30
call	0x140077c30
cmp	eax, -2
je	0x14007829d
je	0x14007829d
cmp	ebx, eax
jb	0x140078338
jb	0x140078338
cmp	eax, 0xffff
ja	0x140078280
ja	0x140078280
mov	edx, eax
rol	dx, 8
test	r12b, 1
cmove	eax, edx
lea	rdx, [r13 + 2]
mov	qword ptr [rsi], rdx
mov	word ptr [r13], ax
mov	r14, qword ptr [rcx]
cmp	r14, rbp
jne	0x140078221
jne	0x140078221
xor	eax, eax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	word ptr [rax + rax]
mov	rdx, rdi
sub	rdx, r13
cmp	rdx, 2
ja	0x1400782b8
ja	0x1400782b8
movq	xmm0, r14
movq	xmm1, rbp
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx], xmm0
mov	eax, 1
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax]
mov	edx, eax
and	ax, 0x3ff
shr	edx, 0xa
sub	ax, 0x2400
sub	dx, 0x2840
test	r12b, 1
jne	0x1400782d8
jne	0x1400782d8
rol	dx, 8
rol	ax, 8
mov	word ptr [r13], dx
lea	rdx, [r13 + 4]
mov	qword ptr [rsi], rdx
mov	word ptr [r13 + 2], ax
jmp	0x140078261
jmp	0x140078261
nop	
mov	rax, rbp
sub	rax, r14
cmp	rax, 2
jbe	0x140078218
jbe	0x140078218
cmp	word ptr [r14], 0xbbef
jne	0x140078218
jne	0x140078218
cmp	byte ptr [r14 + 2], 0xbf
jne	0x140078218
jne	0x140078218
add	r14, 3
mov	qword ptr [rcx], r14
jmp	0x140078218
jmp	0x140078218
nop	dword ptr [rax + rax]
xor	eax, eax
cmp	rbp, r14
setne	al
jmp	0x14007826b
jmp	0x14007826b
nop	dword ptr [rax]
mov	eax, 2
jmp	0x14007826b
jmp	0x14007826b
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	qword ptr [rsp + 0x20], rcx
mov	qword ptr [rsp + 0x28], rdx
test	byte ptr [rsp + 0x70], 4
jne	0x1400783b0
jne	0x1400783b0
mov	eax, 0xffff
lea	rbx, [r8 - 1]
cmp	r9d, eax
cmovbe	eax, r9d
mov	esi, eax
test	r8, r8
je	0x1400783a2
je	0x1400783a2
lea	rcx, [rsp + 0x20]
nop	dword ptr [rax + rax]
mov	edx, esi
call	0x140077c30
call	0x140077c30
test	rbx, rbx
setne	dl
cmp	esi, eax
setae	al
sub	rbx, 1
test	dl, al
jne	0x140078388
jne	0x140078388
mov	rax, qword ptr [rsp + 0x20]
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
sub	rdx, rcx
cmp	rdx, 2
jbe	0x140078367
jbe	0x140078367
cmp	word ptr [rcx], 0xbbef
jne	0x140078367
jne	0x140078367
cmp	byte ptr [rcx + 2], 0xbf
jne	0x140078367
jne	0x140078367
add	rcx, 3
mov	qword ptr [rsp + 0x20], rcx
jmp	0x140078367
jmp	0x140078367
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	ebx, dword ptr [rsp + 0x50]
and	r9d, 2
mov	r10, rcx
mov	r11d, r8d
mov	rcx, rdx
jne	0x1400784a8
jne	0x1400784a8
mov	rdx, qword ptr [r10 + 8]
mov	rax, qword ptr [r10]
mov	r9, rdx
sub	r9, rax
cmp	rdx, rax
je	0x14007847b
je	0x14007847b
movzx	edx, word ptr [rax]
lea	r8d, [rdx - 0xd800]
cmp	r8d, 0x3ff
ja	0x140078480
ja	0x140078480
cmp	ebx, 1
je	0x140078498
je	0x140078498
cmp	r9, 2
jbe	0x1400784b8
jbe	0x1400784b8
movzx	eax, word ptr [rax + 2]
lea	r8d, [rax - 0xdc00]
cmp	r8d, 0x3ff
ja	0x140078498
ja	0x140078498
shl	edx, 0xa
mov	r9d, 2
lea	edx, [rax + rdx - 0x35fdc00]
cmp	r11d, edx
jb	0x140078498
jb	0x140078498
call	0x140077f50
call	0x140077f50
test	al, al
je	0x1400784b8
je	0x1400784b8
mov	rax, qword ptr [r10]
mov	rdx, qword ptr [r10 + 8]
lea	rax, [rax + r9*2]
mov	r9, rdx
mov	qword ptr [r10], rax
sub	r9, rax
cmp	rax, rdx
jne	0x14007840e
jne	0x14007840e
xor	eax, eax
jmp	0x14007849d
jmp	0x14007849d
nop	
lea	eax, [rdx - 0xdc00]
cmp	eax, 0x3ff
jbe	0x140078498
jbe	0x140078498
mov	r9d, 1
cmp	r11d, edx
jae	0x140078459
jae	0x140078459
mov	eax, 2
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rdx, qword ptr [rdx]
mov	rax, qword ptr [rcx + 8]
sub	rax, rdx
cmp	rax, 2
ja	0x1400784c8
ja	0x1400784c8
mov	eax, 1
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	eax, 0xffffbbef
mov	byte ptr [rdx + 2], 0xbf
mov	word ptr [rdx], ax
add	qword ptr [rcx], 3
jmp	0x1400783fc
jmp	0x1400783fc
nop	
nop	
nop	
sub	rsp, 0x28
mov	rcx, qword ptr [rcx]
call	0x140015a80
call	0x140015a80
nop	
add	rsp, 0x28
ret	
ret	
add	rdx, 1
mov	rcx, rax
jne	0x140078500
jne	0x140078500
call	0x1400b2e40
call	0x1400b2e40
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	ecx, r8d
mov	r9, rdx
call	0x140016b70
call	0x140016b70
test	rax, rax
je	0x14007853e
je	0x14007853e
cmp	qword ptr [rbx], 0
je	0x140078550
je	0x140078550
xor	eax, eax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rdx, rax
mov	rcx, r9
call	0x14000d2e0
call	0x14000d2e0
mov	qword ptr [rbx], rax
test	rax, rax
je	0x14007853e
je	0x14007853e
mov	rax, rbx
mov	byte ptr [rbx + 8], 1
add	rsp, 0x20
pop	rbx
ret	
ret	
push	rbx
sub	rsp, 0x30
mov	rbx, rcx
mov	ecx, r8d
mov	r9, rdx
call	0x140016b70
call	0x140016b70
test	rax, rax
je	0x1400785f0
je	0x1400785f0
cmp	qword ptr [rbx], 0
jne	0x1400785f0
jne	0x1400785f0
mov	qword ptr [rsp + 0x28], 0
xor	ecx, ecx
movzx	r8d, byte ptr [rax + rcx]
cmp	r8b, 0x62
je	0x140078620
je	0x140078620
jg	0x140078600
jg	0x140078600
cmp	r8b, 0x2b
je	0x140078618
je	0x140078618
cmp	r8b, 0x61
jne	0x1400785f0
jne	0x1400785f0
mov	r8d, 0x61
nop	dword ptr [rax + rax]
lea	rdx, [rsp + 0x28]
mov	word ptr [rdx + rcx*2], r8w
add	rcx, 1
cmp	byte ptr [rax + rcx], 0
jne	0x140078599
jne	0x140078599
mov	rcx, r9
call	qword ptr [rip + 0x6df8b]
call	qword ptr [rip + 0x6df8b]
mov	qword ptr [rbx], rax
test	rax, rax
je	0x1400785f2
je	0x1400785f2
mov	byte ptr [rbx + 8], 1
mov	rax, rbx
jmp	0x1400785f2
jmp	0x1400785f2
nop	
xor	eax, eax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
cmp	r8b, 0x72
je	0x140078630
je	0x140078630
cmp	r8b, 0x77
jne	0x1400785f0
jne	0x1400785f0
mov	r8d, 0x77
jmp	0x1400785c0
jmp	0x1400785c0
nop	dword ptr [rax]
mov	r8d, 0x2b
jmp	0x1400785c0
jmp	0x1400785c0
mov	r8d, 0x62
jmp	0x1400785c0
jmp	0x1400785c0
nop	dword ptr [rax + rax]
mov	r8d, 0x72
jmp	0x1400785c0
jmp	0x1400785c0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rcx, qword ptr [rcx]
jmp	0x140015908
jmp	0x140015908
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rcx]
test	rcx, rcx
je	0x140078690
je	0x140078690
cmp	byte ptr [rbx + 8], 0
jne	0x140078680
jne	0x140078680
mov	qword ptr [rbx], 0
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	word ptr cs:[rax + rax]
call	0x140015900
call	0x140015900
mov	qword ptr [rbx], 0
test	eax, eax
je	0x14007866d
je	0x14007866d
xor	eax, eax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	r12, qword ptr [rip + 0x6de77]
mov	rdi, rcx
mov	rsi, rdx
mov	ebx, r8d
mov	rcx, qword ptr [rdi]
call	0x140015a80
call	0x140015a80
mov	ecx, eax
mov	r8d, ebx
mov	rdx, rsi
call	0x140015a78
call	0x140015a78
movsxd	rbp, eax
cmp	eax, -1
je	0x1400786e8
je	0x1400786e8
mov	rax, rbp
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
call	r12
call	r12
cmp	dword ptr [rax], 4
je	0x1400786ba
je	0x1400786ba
mov	rax, rbp
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
add	rdx, 1
mov	rcx, rax
jne	0x14007870c
jne	0x14007870c
call	0x1400b2e40
call	0x1400b2e40
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbp, r8
mov	rsi, rdx
call	0x1400784e0
call	0x1400784e0
mov	rbx, rbp
mov	r12, qword ptr [rip + 0x6dde9]
mov	edi, eax
jmp	0x140078750
jmp	0x140078750
nop	dword ptr [rax + rax]
sub	rbx, rdx
je	0x140078770
je	0x140078770
add	rsi, rdx
mov	rdx, rsi
mov	r8d, ebx
mov	ecx, edi
call	0x140015a70
call	0x140015a70
movsxd	rdx, eax
cmp	eax, -1
jne	0x140078748
jne	0x140078748
call	r12
call	r12
cmp	dword ptr [rax], 4
je	0x140078750
je	0x140078750
sub	rbp, rbx
mov	rax, rbp
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rcx, qword ptr [rcx]
mov	rbx, rdx
mov	esi, r8d
call	0x140015a80
call	0x140015a80
mov	ecx, eax
mov	r8d, esi
mov	rdx, rbx
call	0x14000d3b0
call	0x14000d3b0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
add	rdx, 1
mov	rcx, rax
jne	0x1400787b9
jne	0x1400787b9
call	0x1400b2e40
call	0x1400b2e40
jmp	0x1400787a9
jmp	0x1400787a9
call	0x14000c940
call	0x14000c940
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
cmp	qword ptr [rcx], 0
mov	rbx, rcx
mov	rsi, rdx
jne	0x14007881b
jne	0x14007881b
test	rdx, rdx
je	0x14007881b
je	0x14007881b
mov	rdi, qword ptr [rip + 0x6dd48]
call	rdi
call	rdi
mov	ebp, dword ptr [rax]
call	rdi
call	rdi
mov	dword ptr [rax], 0
mov	rcx, rsi
call	0x140015908
call	0x140015908
test	eax, eax
jne	0x140078810
jne	0x140078810
call	rdi
call	rdi
mov	dword ptr [rax], ebp
mov	rax, rbx
mov	qword ptr [rbx], rsi
mov	byte ptr [rbx + 8], 0
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
call	rdi
call	rdi
cmp	dword ptr [rax], 4
je	0x1400787ec
je	0x1400787ec
call	rdi
call	rdi
mov	dword ptr [rax], ebp
xor	ebx, ebx
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	ecx, r8d
mov	esi, edx
call	0x140016b70
call	0x140016b70
test	rax, rax
je	0x14007884e
je	0x14007884e
cmp	qword ptr [rbx], 0
je	0x140078860
je	0x140078860
xor	eax, eax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
mov	rdx, rax
mov	ecx, esi
call	0x140015a88
call	0x140015a88
mov	qword ptr [rbx], rax
test	rax, rax
je	0x14007884e
je	0x14007884e
mov	byte ptr [rbx + 8], 1
test	esi, esi
je	0x140078888
je	0x140078888
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
xor	r9d, r9d
mov	r8d, 4
xor	edx, edx
mov	rcx, rax
call	0x1400159d0
call	0x1400159d0
jmp	0x14007887a
jmp	0x14007887a
add	rdx, 1
mov	rcx, rax
jne	0x1400788ab
jne	0x1400788ab
call	0x1400b2e40
call	0x1400b2e40
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	r12, qword ptr [rsp + 0x90]
mov	r14, rcx
mov	rdi, rdx
mov	rbp, r8
mov	rsi, r9
call	0x1400784e0
call	0x1400784e0
mov	r13d, eax
test	rbp, rbp
je	0x140078948
je	0x140078948
mov	r15, qword ptr [rip + 0x6dc30]
mov	rbx, rbp
jmp	0x140078908
jmp	0x140078908
nop	dword ptr [rax]
sub	rbx, rax
je	0x140078948
je	0x140078948
add	rdi, rax
mov	rdx, rdi
mov	r8d, ebx
mov	ecx, r13d
call	0x140015a70
call	0x140015a70
mov	edx, eax
cdqe	
cmp	edx, -1
jne	0x140078900
jne	0x140078900
call	r15
call	r15
cmp	dword ptr [rax], 4
je	0x140078908
je	0x140078908
mov	rax, rbp
sub	rax, rbx
cmp	rbp, rax
je	0x140078948
je	0x140078948
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
mov	rcx, r14
mov	rbx, r12
call	0x1400784e0
call	0x1400784e0
mov	r13, qword ptr [rip + 0x6dbce]
mov	edi, eax
jmp	0x140078968
jmp	0x140078968
nop	
sub	rbx, rax
je	0x140078989
je	0x140078989
add	rsi, rax
mov	rdx, rsi
mov	r8d, ebx
mov	ecx, edi
call	0x140015a70
call	0x140015a70
mov	edx, eax
cdqe	
cmp	edx, -1
jne	0x140078960
jne	0x140078960
call	r13
call	r13
cmp	dword ptr [rax], 4
je	0x140078968
je	0x140078968
sub	r12, rbx
lea	rax, [rbp + r12]
jmp	0x140078932
jmp	0x140078932
push	rsi
push	rbx
sub	rsp, 0x68
mov	rbx, rcx
call	0x1400784e0
call	0x1400784e0
lea	rdx, [rsp + 0x20]
mov	ecx, eax
call	qword ptr [rip + 0x6db9d]
call	qword ptr [rip + 0x6db9d]
mov	edx, eax
xor	eax, eax
test	edx, edx
jne	0x1400789c4
jne	0x1400789c4
movzx	edx, word ptr [rsp + 0x26]
and	dx, 0xf000
cmp	dx, 0x8000
je	0x1400789d0
je	0x1400789d0
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
mov	rcx, rbx
mov	rsi, qword ptr [rsp + 0x38]
call	0x1400784e0
call	0x1400784e0
xor	edx, edx
mov	r8d, 1
mov	ecx, eax
call	0x14000d3b0
call	0x14000d3b0
mov	rdx, rax
mov	rax, rsi
sub	rax, rdx
add	rsp, 0x68
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx], 0
mov	byte ptr [rcx + 8], 0
ret	
ret	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
test	rax, rax
je	0x140078a1e
je	0x140078a1e
cmp	byte ptr [rcx + 8], 0
jne	0x140078a20
jne	0x140078a20
ret	
ret	
nop	
mov	rcx, rax
jmp	0x140015900
jmp	0x140015900
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	rdx, qword ptr [rip + 0x45bf6]
mov	r8d, dword ptr [rdx]
mov	qword ptr [rcx], rax
test	r8d, r8d
jne	0x140078a58
jne	0x140078a58
mov	edx, dword ptr [rax - 8]
test	edx, edx
jle	0x140078a62
jle	0x140078a62
add	edx, 1
mov	dword ptr [rax - 8], edx
ret	
ret	
nop	dword ptr [rax + rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x140078a70
jg	0x140078a70
mov	rax, qword ptr [rcx]
mov	dword ptr [rax - 8], 1
ret	
ret	
nop	word ptr [rax + rax]
mov	edx, dword ptr [rdx]
mov	rax, qword ptr [rcx]
test	edx, edx
je	0x140078a7f
je	0x140078a7f
lock add	dword ptr [rax - 8], 1
ret	
ret	
mov	edx, dword ptr [rax - 8]
jmp	0x140078a4c
jmp	0x140078a4c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, rdx
mov	rbp, rcx
mov	rdi, rdx
mov	rbx, r8
add	rax, r8
je	0x140078aae
je	0x140078aae
test	rdx, rdx
je	0x140078b08
je	0x140078b08
mov	rcx, rbx
lea	r8, [rsp + 0x2f]
xor	edx, edx
call	0x140072600
call	0x140072600
mov	rsi, rax
lea	rcx, [rax + 0x18]
cmp	rbx, 1
je	0x140078b00
je	0x140078b00
test	rbx, rbx
jne	0x140078af0
jne	0x140078af0
mov	dword ptr [rsi + 0x10], 0
mov	qword ptr [rsi], rbx
mov	byte ptr [rsi + rbx + 0x18], 0
mov	qword ptr [rbp], rcx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x140078acf
jmp	0x140078acf
movzx	eax, byte ptr [rdi]
mov	byte ptr [rsi + 0x18], al
jmp	0x140078acf
jmp	0x140078acf
lea	rcx, [rip + 0x428f1]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	r8, qword ptr [rdx + 8]
mov	rdx, rax
jmp	0x140078a90
jmp	0x140078a90
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rdx]
mov	edx, dword ptr [rax - 8]
lea	r8, [rax - 8]
mov	rbx, rcx
lea	rcx, [rax - 0x18]
test	edx, edx
js	0x140078b68
js	0x140078b68
mov	rdx, qword ptr [rip + 0x45adf]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x140078b80
jne	0x140078b80
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
lock add	dword ptr [r8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rdx]
mov	edx, dword ptr [rax - 8]
lea	r8, [rax - 8]
mov	rbx, rcx
lea	rcx, [rax - 0x18]
test	edx, edx
js	0x140078bc8
js	0x140078bc8
mov	rdx, qword ptr [rip + 0x45a7f]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x140078be0
jne	0x140078be0
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
lock add	dword ptr [r8], 1
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
push	rbx
sub	rsp, 0x30
xor	edx, edx
mov	rbx, rcx
lea	r8, [rsp + 0x2f]
xor	ecx, ecx
call	0x140071d40
call	0x140071d40
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rip + 0x45a15]
mov	eax, dword ptr [rax]
mov	rcx, qword ptr [rcx]
test	eax, eax
jne	0x140078c40
jne	0x140078c40
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140078c4e
jle	0x140078c4e
add	rsp, 0x38
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140078c31
jg	0x140078c31
lea	rdx, [rsp + 0x2f]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
nop	
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x140072780
call	0x140072780
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x140072f30
call	0x140072f30
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
mov	r9, rcx
lea	rcx, [rcx + 0x10]
mov	rax, rdx
mov	qword ptr [r9], rcx
mov	rdx, qword ptr [rdx]
lea	r10, [rax + 0x10]
mov	r8, qword ptr [rax + 8]
cmp	rdx, r10
je	0x140078cf0
je	0x140078cf0
mov	qword ptr [r9], rdx
mov	rdx, qword ptr [rax + 0x10]
mov	qword ptr [r9 + 0x10], rdx
mov	qword ptr [r9 + 8], r8
mov	qword ptr [rax], r10
mov	qword ptr [rax + 8], 0
mov	byte ptr [rax + 0x10], 0
pop	rbx
pop	rsi
ret	
ret	
lea	rdx, [r8 + 1]
cmp	edx, 8
jae	0x140078d28
jae	0x140078d28
test	dl, 4
jne	0x140078d78
jne	0x140078d78
test	edx, edx
je	0x140078cda
je	0x140078cda
movzx	r8d, byte ptr [rax + 0x10]
mov	byte ptr [r9 + 0x10], r8b
test	dl, 2
je	0x140078d6f
je	0x140078d6f
mov	edx, edx
movzx	r8d, word ptr [r10 + rdx - 2]
mov	word ptr [rcx + rdx - 2], r8w
mov	r8, qword ptr [rax + 8]
jmp	0x140078cda
jmp	0x140078cda
nop	dword ptr [rax]
mov	r8, qword ptr [rax + 0x10]
mov	rbx, r10
mov	qword ptr [r9 + 0x10], r8
mov	r8d, edx
mov	r11, qword ptr [r10 + r8 - 8]
mov	qword ptr [rcx + r8 - 8], r11
lea	r11, [r9 + 0x18]
and	r11, 0xfffffffffffffff8
sub	rcx, r11
add	edx, ecx
sub	rbx, rcx
and	edx, 0xfffffff8
cmp	edx, 8
jb	0x140078d6f
jb	0x140078d6f
and	edx, 0xfffffff8
xor	ecx, ecx
mov	r8d, ecx
add	ecx, 8
mov	rsi, qword ptr [rbx + r8]
mov	qword ptr [r11 + r8], rsi
cmp	ecx, edx
jb	0x140078d5d
jb	0x140078d5d
mov	r8, qword ptr [rax + 8]
jmp	0x140078cda
jmp	0x140078cda
mov	r8d, dword ptr [rax + 0x10]
mov	edx, edx
mov	dword ptr [r9 + 0x10], r8d
mov	r8d, dword ptr [r10 + rdx - 4]
mov	dword ptr [rcx + rdx - 4], r8d
mov	r8, qword ptr [rax + 8]
jmp	0x140078cda
jmp	0x140078cda
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rsi, rcx
lea	rcx, [rcx + 0x10]
mov	rdi, rdx
mov	rbx, r8
mov	qword ptr [rsi], rcx
test	rdx, rdx
jne	0x140078dc5
jne	0x140078dc5
test	r8, r8
jne	0x140078e4a
jne	0x140078e4a
mov	qword ptr [rsp + 0x28], rbx
cmp	rbx, 0xf
ja	0x140078e08
ja	0x140078e08
cmp	rbx, 1
jne	0x140078df0
jne	0x140078df0
movzx	eax, byte ptr [rdi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rsi + 0x10], al
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
test	rbx, rbx
jne	0x140078e27
jne	0x140078e27
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rsi
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x14009fa70
call	0x14009fa70
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rsi + 0x10], rax
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rbx, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x4262f]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rsi, qword ptr [rdx + 8]
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	qword ptr [rsp + 0x28], rsi
mov	qword ptr [rbx], rcx
mov	rdi, qword ptr [rdx]
cmp	rsi, 0xf
ja	0x140078eb8
ja	0x140078eb8
cmp	rsi, 1
jne	0x140078ea0
jne	0x140078ea0
movzx	eax, byte ptr [rdi]
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rbx + 0x10], al
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
test	rsi, rsi
jne	0x140078ed7
jne	0x140078ed7
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x14009fa70
call	0x14009fa70
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x10], rax
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rsi, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rbx]
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rsi, qword ptr [rdx + 8]
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	qword ptr [rsp + 0x28], rsi
mov	qword ptr [rbx], rcx
mov	rdi, qword ptr [rdx]
cmp	rsi, 0xf
ja	0x140078f58
ja	0x140078f58
cmp	rsi, 1
jne	0x140078f40
jne	0x140078f40
movzx	eax, byte ptr [rdi]
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rbx + 0x10], al
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
test	rsi, rsi
jne	0x140078f77
jne	0x140078f77
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x14009fa70
call	0x14009fa70
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x10], rax
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rsi, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rbx]
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	r8, qword ptr [rdx - 0x18]
jmp	0x140078da0
jmp	0x140078da0
nop	
nop	
nop	
nop	
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx + 8], 0
mov	qword ptr [rcx], rax
mov	byte ptr [rcx + 0x10], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rcx, 0x10
cmp	rax, rcx
je	0x140078fe8
je	0x140078fe8
mov	rcx, rax
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	r8, qword ptr [rdx + 8]
mov	rsi, rcx
mov	rcx, qword ptr [rcx]
mov	rbx, rdx
mov	rdx, qword ptr [rdx]
lea	rax, [rsi + 0x10]
cmp	rcx, rax
lea	rax, [rbx + 0x10]
je	0x140079050
je	0x140079050
cmp	rax, rdx
je	0x140079070
je	0x140079070
mov	qword ptr [rsi], rdx
mov	r9, qword ptr [rsi + 0x10]
mov	qword ptr [rsi + 8], r8
mov	rdx, qword ptr [rbx + 0x10]
mov	qword ptr [rsi + 0x10], rdx
test	rcx, rcx
je	0x1400790a0
je	0x1400790a0
mov	qword ptr [rbx], rcx
mov	qword ptr [rbx + 0x10], r9
mov	rax, rsi
mov	qword ptr [rbx + 8], 0
mov	byte ptr [rcx], 0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
cmp	rax, rdx
je	0x140079070
je	0x140079070
mov	qword ptr [rsi], rdx
mov	rcx, rax
mov	qword ptr [rsi + 8], r8
mov	rdx, qword ptr [rbx + 0x10]
mov	qword ptr [rsi + 0x10], rdx
mov	qword ptr [rbx], rcx
jmp	0x140079037
jmp	0x140079037
nop	dword ptr [rax]
cmp	rbx, rsi
je	0x1400790c0
je	0x1400790c0
test	r8, r8
je	0x14007908c
je	0x14007908c
cmp	r8, 1
je	0x1400790a8
je	0x1400790a8
call	0x140015998
call	0x140015998
mov	r8, qword ptr [rbx + 8]
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], r8
mov	byte ptr [rcx + r8], 0
mov	rcx, qword ptr [rbx]
jmp	0x140079037
jmp	0x140079037
nop	word ptr [rax + rax]
mov	rcx, rax
jmp	0x140079067
jmp	0x140079067
nop	dword ptr [rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
mov	r8, qword ptr [rbx + 8]
mov	rcx, qword ptr [rsi]
jmp	0x14007908c
jmp	0x14007908c
nop	word ptr cs:[rax + rax]
mov	rcx, rdx
jmp	0x140079037
jmp	0x140079037
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x14009f9b0
call	0x14009f9b0
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rdx
mov	r9, r8
xor	edx, edx
xor	r8d, r8d
mov	rbx, rcx
call	0x140098a40
call	0x140098a40
lea	rax, [rip + 0x4d4bf]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140079130
jne	0x140079130
cmp	byte ptr [rsi + 1], 0
jne	0x140079130
jne	0x140079130
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
lea	rdx, [rip + 0x405d9]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x14007911f
je	0x14007911f
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140098c10
call	0x140098c10
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
jmp	0x1400790f0
jmp	0x1400790f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
jmp	0x1400790f0
jmp	0x1400790f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x4d424]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140098c10
call	0x140098c10
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x4d3f9]
mov	qword ptr [rcx], rax
jmp	0x140098c10
jmp	0x140098c10
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	rsi, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x4e9a1]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
mov	rcx, rbx
mov	byte ptr [rbx + 0x18], 0
call	0x140098c50
call	0x140098c50
lea	rax, [rip + 0x4d412]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140079238
jne	0x140079238
cmp	byte ptr [rsi + 1], 0
jne	0x140079238
jne	0x140079238
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x40421]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x14007922c
je	0x14007922c
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x140098c50
jmp	0x140098c50
mov	rsi, rax
mov	rcx, rbx
call	0x140098de0
call	0x140098de0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rax, qword ptr [rip + 0x45d6f]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
jmp	0x1400791e0
jmp	0x1400791e0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
jmp	0x1400791e0
jmp	0x1400791e0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x4e8c4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rax, qword ptr [rip + 0x45d0e]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x4e884]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rax, qword ptr [rip + 0x45cce]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rip + 0x45ac3]
add	rax, 0x10
mov	rbx, rdx
mov	qword ptr [rcx], rax
mov	rsi, rcx
mov	rdx, 0xffffffffffffffff
test	rbx, rbx
je	0x140079382
je	0x140079382
mov	rcx, rbx
call	0x140015a08
call	0x140015a08
lea	rdx, [rbx + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rbx
call	0x140072090
call	0x140072090
mov	qword ptr [rsi + 8], rax
mov	rax, qword ptr [rip + 0x45aa6]
add	rax, 0x10
mov	qword ptr [rsi], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	rbx, rax
mov	rcx, rsi
call	0x1400ac440
call	0x1400ac440
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x45a53]
add	rax, 0x10
mov	r8, qword ptr [rdx + 8]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
mov	rbx, rcx
lea	rcx, [rcx + 8]
mov	rdx, rax
call	0x140078a90
call	0x140078a90
mov	rax, qword ptr [rip + 0x45a4f]
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
lea	rax, [rip + 0x4d143]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
lea	r8, [rax - 8]
test	edx, edx
js	0x140079470
js	0x140079470
mov	rdx, qword ptr [rip + 0x451e4]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x140079480
jne	0x140079480
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx + 8], rax
lea	rax, [rip + 0x4d24f]
mov	qword ptr [rbx], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
jmp	0x140079456
jmp	0x140079456
nop	
lock add	dword ptr [r8], 1
jmp	0x140079456
jmp	0x140079456
mov	rsi, rax
mov	rcx, rbx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x4d204]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140077410
call	0x140077410
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
lea	rax, [rip + 0x4d094]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4514a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 8]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140079510
jne	0x140079510
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007951e
jle	0x14007951e
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140079500
jg	0x140079500
sub	rcx, 0x18
lea	rdx, [rsp + 0x2f]
call	0x140072480
call	0x140072480
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rip + 0x458d3]
add	rax, 0x10
mov	rbx, rdx
mov	qword ptr [rcx], rax
mov	rsi, rcx
mov	rdx, 0xffffffffffffffff
test	rbx, rbx
je	0x140079572
je	0x140079572
mov	rcx, rbx
call	0x140015a08
call	0x140015a08
lea	rdx, [rbx + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rbx
call	0x140072090
call	0x140072090
mov	qword ptr [rsi + 8], rax
mov	rax, qword ptr [rip + 0x458c6]
add	rax, 0x10
mov	qword ptr [rsi], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	rbx, rax
mov	rcx, rsi
call	0x1400ac440
call	0x1400ac440
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x45863]
add	rax, 0x10
mov	r8, qword ptr [rdx + 8]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
mov	rbx, rcx
lea	rcx, [rcx + 8]
mov	rdx, rax
call	0x140078a90
call	0x140078a90
mov	rax, qword ptr [rip + 0x4586f]
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
lea	rax, [rip + 0x4cf53]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
lea	r8, [rax - 8]
test	edx, edx
js	0x140079660
js	0x140079660
mov	rdx, qword ptr [rip + 0x44ff4]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x140079670
jne	0x140079670
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx + 8], rax
lea	rax, [rip + 0x4d08f]
mov	qword ptr [rbx], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
jmp	0x140079646
jmp	0x140079646
nop	
lock add	dword ptr [r8], 1
jmp	0x140079646
jmp	0x140079646
mov	rsi, rax
mov	rcx, rbx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x4d044]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140077410
call	0x140077410
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
lea	rax, [rip + 0x4cea4]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x44f5a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 8]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140079700
jne	0x140079700
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007970e
jle	0x14007970e
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x1400796f0
jg	0x1400796f0
sub	rcx, 0x18
lea	rdx, [rsp + 0x2f]
call	0x140072480
call	0x140072480
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rip + 0x456e3]
add	rax, 0x10
mov	rbx, rdx
mov	qword ptr [rcx], rax
mov	rsi, rcx
mov	rdx, 0xffffffffffffffff
test	rbx, rbx
je	0x140079762
je	0x140079762
mov	rcx, rbx
call	0x140015a08
call	0x140015a08
lea	rdx, [rbx + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rbx
call	0x140072090
call	0x140072090
mov	qword ptr [rsi + 8], rax
mov	rax, qword ptr [rip + 0x456e6]
add	rax, 0x10
mov	qword ptr [rsi], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	rbx, rax
mov	rcx, rsi
call	0x1400ac440
call	0x1400ac440
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x45673]
add	rax, 0x10
mov	r8, qword ptr [rdx + 8]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
mov	rbx, rcx
lea	rcx, [rcx + 8]
mov	rdx, rax
call	0x140078a90
call	0x140078a90
mov	rax, qword ptr [rip + 0x4568f]
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
lea	rax, [rip + 0x4cd63]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
lea	r8, [rax - 8]
test	edx, edx
js	0x140079850
js	0x140079850
mov	rdx, qword ptr [rip + 0x44e04]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x140079860
jne	0x140079860
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx + 8], rax
lea	rax, [rip + 0x4cecf]
mov	qword ptr [rbx], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
jmp	0x140079836
jmp	0x140079836
nop	
lock add	dword ptr [r8], 1
jmp	0x140079836
jmp	0x140079836
mov	rsi, rax
mov	rcx, rbx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x4ce84]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140077410
call	0x140077410
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
lea	rax, [rip + 0x4ccb4]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x44d6a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 8]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400798f0
jne	0x1400798f0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x1400798fe
jle	0x1400798fe
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x1400798e0
jg	0x1400798e0
sub	rcx, 0x18
lea	rdx, [rsp + 0x2f]
call	0x140072480
call	0x140072480
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	rdi, qword ptr [rdx + 8]
mov	rbp, qword ptr [rdx]
mov	rax, qword ptr [rdi]
mov	rdx, rdi
lea	r13, [rsp + 0x70]
mov	rbx, rcx
mov	rsi, r8
mov	r8d, ebp
mov	rcx, r13
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
lea	r9, [rip + 0x41aea]
xor	r8d, r8d
xor	edx, edx
mov	qword ptr [rsp + 0x20], 2
mov	rcx, r13
call	0x14009cf70
call	0x14009cf70
lea	r12, [rsp + 0x60]
lea	r8, [rax + 0x10]
mov	rdx, qword ptr [rax + 8]
mov	qword ptr [rsp + 0x50], r12
mov	rcx, qword ptr [rax]
cmp	rcx, r8
je	0x140079a88
je	0x140079a88
mov	qword ptr [rsp + 0x50], rcx
mov	rcx, qword ptr [rax + 0x10]
mov	qword ptr [rsp + 0x60], rcx
mov	qword ptr [rax], r8
mov	rcx, rsi
lea	r14, [rsp + 0x50]
mov	qword ptr [rax + 8], 0
mov	byte ptr [rax + 0x10], 0
mov	qword ptr [rsp + 0x58], rdx
call	0x140015a08
call	0x140015a08
mov	r9, rsi
xor	r8d, r8d
xor	edx, edx
mov	qword ptr [rsp + 0x20], rax
mov	rcx, r14
call	0x14009cf70
call	0x14009cf70
lea	rsi, [rsp + 0x40]
lea	r8, [rax + 0x10]
mov	rdx, qword ptr [rax + 8]
mov	qword ptr [rsp + 0x30], rsi
mov	rcx, qword ptr [rax]
cmp	rcx, r8
je	0x140079ae0
je	0x140079ae0
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rax + 0x10]
mov	qword ptr [rsp + 0x40], rcx
mov	qword ptr [rax], r8
lea	r15, [rsp + 0x30]
mov	rcx, rbx
mov	qword ptr [rax + 8], 0
mov	byte ptr [rax + 0x10], 0
mov	qword ptr [rsp + 0x38], rdx
mov	rdx, r15
call	0x14008c2c0
call	0x14008c2c0
mov	rcx, qword ptr [rsp + 0x30]
cmp	rcx, rsi
je	0x140079a32
je	0x140079a32
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, qword ptr [rsp + 0x50]
cmp	rcx, r12
je	0x140079a41
je	0x140079a41
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, qword ptr [rsp + 0x70]
lea	rax, [rsp + 0x80]
cmp	rcx, rax
je	0x140079a58
je	0x140079a58
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rip + 0x45411]
mov	qword ptr [rbx + 0x10], rbp
mov	qword ptr [rbx + 0x18], rdi
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
add	rdx, 1
mov	r10, r12
mov	rcx, r8
cmp	edx, 8
jae	0x140079b58
jae	0x140079b58
xor	r9d, r9d
test	dl, 4
je	0x140079aaf
je	0x140079aaf
mov	r9d, dword ptr [rcx]
mov	dword ptr [r10], r9d
mov	r9d, 4
test	dl, 2
je	0x140079ac2
je	0x140079ac2
movzx	r11d, word ptr [rcx + r9]
mov	word ptr [r10 + r9], r11w
add	r9, 2
and	edx, 1
je	0x140079ad0
je	0x140079ad0
movzx	edx, byte ptr [rcx + r9]
mov	byte ptr [r10 + r9], dl
mov	rdx, qword ptr [rax + 8]
jmp	0x14007999d
jmp	0x14007999d
nop	dword ptr [rax]
add	rdx, 1
mov	r10, rsi
mov	rcx, r8
cmp	edx, 8
jae	0x140079b30
jae	0x140079b30
xor	r9d, r9d
test	dl, 4
je	0x140079b03
je	0x140079b03
mov	r9d, dword ptr [rcx]
mov	dword ptr [r10], r9d
mov	r9d, 4
test	dl, 2
je	0x140079b16
je	0x140079b16
movzx	r11d, word ptr [rcx + r9]
mov	word ptr [r10 + r9], r11w
add	r9, 2
and	edx, 1
je	0x140079b24
je	0x140079b24
movzx	edx, byte ptr [rcx + r9]
mov	byte ptr [r10 + r9], dl
mov	rdx, qword ptr [rax + 8]
jmp	0x1400799ff
jmp	0x1400799ff
nop	dword ptr [rax]
mov	r11d, edx
xor	ecx, ecx
and	r11d, 0xfffffff8
mov	r9d, ecx
add	ecx, 8
mov	r10, qword ptr [r8 + r9]
mov	qword ptr [rsi + r9], r10
cmp	ecx, r11d
jb	0x140079b39
jb	0x140079b39
lea	r10, [rsi + rcx]
add	rcx, r8
jmp	0x140079aef
jmp	0x140079aef
nop	dword ptr [rax]
mov	r11d, edx
xor	ecx, ecx
and	r11d, 0xfffffff8
mov	r9d, ecx
add	ecx, 8
mov	r10, qword ptr [r8 + r9]
mov	qword ptr [r12 + r9], r10
cmp	ecx, r11d
jb	0x140079b61
jb	0x140079b61
lea	r10, [r12 + rcx]
add	rcx, r8
jmp	0x140079a9b
jmp	0x140079a9b
mov	rbx, rax
jmp	0x140079b98
jmp	0x140079b98
mov	rcx, r15
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, r14
call	0x14009cf50
call	0x14009cf50
mov	rcx, r13
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x140079b90
jmp	0x140079b90
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	rdi, qword ptr [rdx + 8]
mov	rbp, qword ptr [rdx]
mov	rax, qword ptr [rdi]
mov	rdx, rdi
mov	rsi, r8
lea	r13, [rsp + 0x70]
mov	rbx, rcx
mov	r8d, ebp
mov	rcx, r13
lea	r12, [rsp + 0x60]
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	r15, qword ptr [rsi + 8]
mov	r14, qword ptr [rsi]
lea	rsi, [rsp + 0x50]
mov	rcx, rsi
mov	qword ptr [rsp + 0x50], r12
lea	rdx, [r15 + 2]
mov	byte ptr [rsp + 0x60], 0
mov	qword ptr [rsp + 0x58], 0
call	0x14009f7e0
call	0x14009f7e0
movabs	rax, 0x3fffffffffffffff
sub	rax, qword ptr [rsp + 0x58]
cmp	rax, r15
jb	0x140079e9d
jb	0x140079e9d
mov	r8, r15
mov	rdx, r14
mov	rcx, rsi
call	0x14009f920
call	0x14009f920
movabs	rax, 0x3fffffffffffffff
sub	rax, qword ptr [rsp + 0x58]
cmp	rax, 1
jbe	0x140079e91
jbe	0x140079e91
mov	r8d, 2
lea	rdx, [rip + 0x417e5]
mov	rcx, rsi
call	0x14009f920
call	0x14009f920
mov	rdx, qword ptr [rsp + 0x58]
mov	r8, qword ptr [rsp + 0x78]
mov	r9, qword ptr [rsp + 0x50]
mov	rcx, qword ptr [rsp + 0x70]
lea	rax, [rdx + r8]
cmp	r9, r12
je	0x140079e00
je	0x140079e00
cmp	qword ptr [rsp + 0x60], rax
jae	0x140079cb2
jae	0x140079cb2
lea	r10, [rsp + 0x80]
cmp	rcx, r10
je	0x140079df0
je	0x140079df0
mov	r10, qword ptr [rsp + 0x80]
cmp	r10, rax
jae	0x140079d88
jae	0x140079d88
movabs	rax, 0x3fffffffffffffff
sub	rax, rdx
cmp	rax, r8
jb	0x140079ea9
jb	0x140079ea9
mov	rdx, rcx
mov	rcx, rsi
call	0x14009f920
call	0x14009f920
lea	r14, [rsp + 0x40]
lea	r8, [rax + 0x10]
mov	rdx, qword ptr [rax + 8]
mov	qword ptr [rsp + 0x30], r14
mov	rcx, qword ptr [rax]
cmp	rcx, r8
je	0x140079e20
je	0x140079e20
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, qword ptr [rax + 0x10]
mov	qword ptr [rsp + 0x40], rcx
mov	qword ptr [rsp + 0x38], rdx
lea	r15, [rsp + 0x30]
mov	rcx, rbx
mov	qword ptr [rax], r8
mov	rdx, r15
mov	qword ptr [rax + 8], 0
mov	byte ptr [rax + 0x10], 0
call	0x14008c2c0
call	0x14008c2c0
mov	rcx, qword ptr [rsp + 0x30]
cmp	rcx, r14
je	0x140079d32
je	0x140079d32
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, qword ptr [rsp + 0x50]
cmp	rcx, r12
je	0x140079d41
je	0x140079d41
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, qword ptr [rsp + 0x70]
lea	rax, [rsp + 0x80]
cmp	rcx, rax
je	0x140079d58
je	0x140079d58
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rip + 0x45111]
mov	qword ptr [rbx + 0x10], rbp
mov	qword ptr [rbx + 0x18], rdi
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
mov	qword ptr [rsp + 0x20], rdx
xor	r8d, r8d
xor	edx, edx
mov	rcx, r13
call	0x14009cf70
call	0x14009cf70
lea	r14, [rsp + 0x40]
lea	r8, [rax + 0x10]
mov	rdx, qword ptr [rax + 8]
mov	qword ptr [rsp + 0x30], r14
mov	rcx, qword ptr [rax]
cmp	rcx, r8
jne	0x140079cf1
jne	0x140079cf1
add	rdx, 1
mov	r10, r14
mov	rcx, r8
cmp	edx, 8
jb	0x140079e2f
jb	0x140079e2f
mov	r11d, edx
xor	ecx, ecx
and	r11d, 0xfffffff8
mov	r9d, ecx
add	ecx, 8
mov	r10, qword ptr [r8 + r9]
mov	qword ptr [r14 + r9], r10
cmp	ecx, r11d
jb	0x140079dd0
jb	0x140079dd0
lea	r10, [r14 + rcx]
add	rcx, r8
jmp	0x140079e2f
jmp	0x140079e2f
nop	dword ptr [rax]
mov	r10d, 0xf
jmp	0x140079ca9
jmp	0x140079ca9
nop	dword ptr [rax + rax]
cmp	rax, 0xf
jbe	0x140079cb2
jbe	0x140079cb2
lea	r10, [rsp + 0x80]
cmp	rcx, r10
jne	0x140079ca1
jne	0x140079ca1
jmp	0x140079cb2
jmp	0x140079cb2
add	rdx, 1
mov	r10, r14
mov	rcx, r8
cmp	edx, 8
jae	0x140079e70
jae	0x140079e70
xor	r9d, r9d
test	dl, 4
je	0x140079e43
je	0x140079e43
mov	r9d, dword ptr [rcx]
mov	dword ptr [r10], r9d
mov	r9d, 4
test	dl, 2
je	0x140079e56
je	0x140079e56
movzx	r11d, word ptr [rcx + r9]
mov	word ptr [r10 + r9], r11w
add	r9, 2
and	edx, 1
je	0x140079e64
je	0x140079e64
movzx	edx, byte ptr [rcx + r9]
mov	byte ptr [r10 + r9], dl
mov	rdx, qword ptr [rax + 8]
jmp	0x140079cff
jmp	0x140079cff
nop	dword ptr [rax]
mov	r11d, edx
xor	ecx, ecx
and	r11d, 0xfffffff8
mov	r9d, ecx
add	ecx, 8
mov	r10, qword ptr [r8 + r9]
mov	qword ptr [r14 + r9], r10
cmp	ecx, r11d
jb	0x140079e79
jb	0x140079e79
jmp	0x140079de3
jmp	0x140079de3
lea	rcx, [rip + 0x41598]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rcx, [rip + 0x4158c]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rcx, [rip + 0x41580]
call	0x1400b3ba0
call	0x1400b3ba0
mov	rbx, rax
jmp	0x140079ec5
jmp	0x140079ec5
mov	rcx, r15
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, rsi
call	0x14009cf50
call	0x14009cf50
mov	rcx, r13
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
jmp	0x140079eb5
jmp	0x140079eb5
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x4c854]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14008c430
call	0x14008c430
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x4c829]
mov	qword ptr [rcx], rax
jmp	0x14008c430
jmp	0x14008c430
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0x90]
movdqu	xmm2, xmmword ptr [r9]
mov	r10, qword ptr [rsp + 0xa8]
mov	r9, qword ptr [rsp + 0xa0]
movdqu	xmm0, xmmword ptr [rax]
movzx	eax, byte ptr [rsp + 0xb0]
sub	eax, 0x64
mov	rbx, rcx
lea	rcx, [rip + 0x3f29d]
mov	rdx, r8
movzx	eax, al
mov	r8, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x50], xmm2
movsxd	rax, dword ptr [rcx + rax*4]
movups	xmmword ptr [rsp + 0x40], xmm0
add	rax, rcx
jmp	rax
jmp	rax
nop	dword ptr [rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0x90]
movdqu	xmm2, xmmword ptr [r9]
mov	r10, qword ptr [rsp + 0xa8]
mov	r9, qword ptr [rsp + 0xa0]
movdqu	xmm0, xmmword ptr [rax]
movzx	eax, byte ptr [rsp + 0xb0]
sub	eax, 0x64
mov	rbx, rcx
lea	rcx, [rip + 0x3fa75]
mov	rdx, r8
movzx	eax, al
mov	r8, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x50], xmm2
movsxd	rax, dword ptr [rcx + rax*4]
movups	xmmword ptr [rsp + 0x40], xmm0
add	rax, rcx
jmp	rax
jmp	rax
nop	dword ptr [rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0x90]
movdqu	xmm2, xmmword ptr [r9]
mov	r10, qword ptr [rsp + 0xa8]
mov	r9, qword ptr [rsp + 0xa0]
movdqu	xmm0, xmmword ptr [rax]
movzx	eax, byte ptr [rsp + 0xb0]
sub	eax, 0x64
mov	rbx, rcx
lea	rcx, [rip + 0x3f055]
mov	rdx, r8
movzx	eax, al
mov	r8, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x50], xmm2
movsxd	rax, dword ptr [rcx + rax*4]
movups	xmmword ptr [rsp + 0x40], xmm0
add	rax, rcx
jmp	rax
jmp	rax
nop	dword ptr [rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x60
mov	rax, qword ptr [rsp + 0x90]
movdqu	xmm2, xmmword ptr [r9]
mov	r10, qword ptr [rsp + 0xa8]
mov	r9, qword ptr [rsp + 0xa0]
movdqu	xmm0, xmmword ptr [rax]
movzx	eax, byte ptr [rsp + 0xb0]
sub	eax, 0x64
mov	rbx, rcx
lea	rcx, [rip + 0x3f82d]
mov	rdx, r8
movzx	eax, al
mov	r8, qword ptr [rsp + 0x98]
movups	xmmword ptr [rsp + 0x50], xmm2
movsxd	rax, dword ptr [rcx + rax*4]
movups	xmmword ptr [rsp + 0x40], xmm0
add	rax, rcx
jmp	rax
jmp	rax
nop	dword ptr [rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], r9
mov	rcx, rbx
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x20], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], r10
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x90
movups	xmmword ptr [rsp + 0x80], xmm6
mov	rax, qword ptr [rsp + 0xf0]
mov	rbp, qword ptr [r9]
mov	rdi, qword ptr [r9 + 8]
mov	r12, qword ptr [rsp + 0x108]
movzx	r14d, byte ptr [rsp + 0xf8]
movdqu	xmm6, xmmword ptr [rax]
mov	rax, qword ptr [rsp + 0x110]
mov	rbx, rcx
mov	rsi, r8
test	rax, rax
je	0x14007a510
je	0x14007a510
mov	r10, qword ptr [r8]
mov	qword ptr [rsp + 0x38], rax
lea	r9, [rsp + 0x50]
mov	rdx, rsi
mov	rax, qword ptr [rsp + 0x100]
mov	qword ptr [rsp + 0x60], rbp
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x68], rdi
mov	qword ptr [rsp + 0x30], r12
mov	qword ptr [rsp + 0x28], rax
mov	dword ptr [rsp + 0x20], r14d
movups	xmmword ptr [rsp + 0x50], xmm6
call	qword ptr [r10 + 0x10]
call	qword ptr [r10 + 0x10]
nop	
movups	xmm6, xmmword ptr [rsp + 0x80]
mov	rax, rbx
add	rsp, 0x90
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax]
lea	r13, [rsp + 0x77]
xor	edx, edx
xor	ecx, ecx
mov	r8, r13
call	0x140071d40
call	0x140071d40
lea	rdx, [rsp + 0x78]
mov	qword ptr [rsp + 0x50], rbp
lea	rcx, [rsp + 0x60]
mov	qword ptr [rsp + 0x78], rax
mov	rax, qword ptr [rsi]
lea	r9, [rsp + 0x40]
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x38], rdx
mov	rdx, qword ptr [rsp + 0x100]
mov	qword ptr [rsp + 0x58], rdi
mov	qword ptr [rsp + 0x28], rdx
mov	rdx, rsi
mov	qword ptr [rsp + 0x30], r12
mov	dword ptr [rsp + 0x20], r14d
movups	xmmword ptr [rsp + 0x40], xmm6
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
movabs	rdx, 0xffffffff00000000
mov	rax, qword ptr [rsp + 0x60]
and	rdi, rdx
mov	qword ptr [rsp + 0x60], rax
mov	rbp, rax
mov	r8d, dword ptr [r12]
mov	eax, dword ptr [rsp + 0x68]
or	rdi, rax
test	r8d, r8d
je	0x14007a5e0
je	0x14007a5e0
mov	rcx, qword ptr [rsp + 0x78]
mov	rdx, qword ptr [rip + 0x4408c]
mov	eax, dword ptr [rdx]
mov	qword ptr [rbx], rbp
mov	qword ptr [rbx + 8], rdi
test	eax, eax
jne	0x14007a650
jne	0x14007a650
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jg	0x14007a4f0
jg	0x14007a4f0
sub	rcx, 0x18
mov	rdx, r13
call	0x140072480
call	0x140072480
jmp	0x14007a4f0
jmp	0x14007a4f0
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsp + 0x118]
mov	rax, qword ptr [rax + 0x20]
test	rax, rax
je	0x14007a5fb
je	0x14007a5fb
mov	rcx, qword ptr [rsp + 0x118]
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x78]
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
lea	r8, [rax - 8]
test	edx, edx
js	0x14007a670
js	0x14007a670
mov	rdx, qword ptr [rip + 0x4401a]
mov	ecx, dword ptr [rdx]
test	ecx, ecx
jne	0x14007a660
jne	0x14007a660
add	dword ptr [rax - 8], 1
mov	rsi, qword ptr [rsp + 0x118]
mov	rcx, qword ptr [rsp + 0x78]
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rcx - 0x18]
mov	qword ptr [rsi + 8], rax
mov	rax, rsi
lea	rsi, [rip + 0x28ce]
mov	qword ptr [rax + 0x20], rsi
jmp	0x14007a5a4
jmp	0x14007a5a4
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
jmp	0x14007a5be
jmp	0x14007a5be
nop	
lock add	dword ptr [r8], 1
jmp	0x14007a620
jmp	0x14007a620
nop	word ptr [rax + rax]
xor	r8d, r8d
mov	rdx, r13
call	0x140072590
call	0x140072590
mov	rdx, qword ptr [rip + 0x43fae]
jmp	0x14007a620
jmp	0x14007a620
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x78]
lea	rdx, [rsp + 0x76]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	rax, qword ptr [rsp + 0xf0]
mov	rdi, qword ptr [r9]
mov	rsi, qword ptr [r9 + 8]
mov	rbp, qword ptr [rsp + 0x108]
movdqu	xmm0, xmmword ptr [rax]
mov	rax, qword ptr [rsp + 0x110]
mov	rdx, r8
mov	rbx, rcx
mov	r8, qword ptr [rsp + 0x100]
movzx	ecx, byte ptr [rsp + 0xf8]
mov	r10, qword ptr [rdx]
test	rax, rax
je	0x14007a750
je	0x14007a750
mov	qword ptr [rsp + 0x28], r8
lea	r9, [rsp + 0x50]
lea	r8, [rsp + 0x60]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
mov	qword ptr [rsp + 0x60], rdi
mov	qword ptr [rsp + 0x68], rsi
mov	qword ptr [rsp + 0x38], rax
mov	qword ptr [rsp + 0x30], rbp
movups	xmmword ptr [rsp + 0x50], xmm0
call	qword ptr [r10 + 0x10]
call	qword ptr [r10 + 0x10]
mov	rax, rbx
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr cs:[rax + rax]
lea	r13, [rsp + 0x70]
lea	rax, [rsp + 0x60]
mov	qword ptr [rsp + 0x28], r8
mov	dword ptr [rsp + 0x20], ecx
lea	r9, [rsp + 0x40]
lea	r8, [rsp + 0x50]
mov	rcx, rax
lea	r12, [rsp + 0x80]
mov	byte ptr [rsp + 0x80], 0
mov	qword ptr [rsp + 0x70], r12
mov	qword ptr [rsp + 0x78], 0
mov	qword ptr [rsp + 0x50], rdi
mov	qword ptr [rsp + 0x58], rsi
mov	qword ptr [rsp + 0x38], r13
mov	qword ptr [rsp + 0x30], rbp
movups	xmmword ptr [rsp + 0x40], xmm0
call	qword ptr [r10 + 0x18]
call	qword ptr [r10 + 0x18]
movabs	rdx, 0xffffffff00000000
mov	rax, qword ptr [rsp + 0x60]
and	rsi, rdx
mov	qword ptr [rsp + 0x60], rax
mov	rdi, rax
mov	eax, dword ptr [rsp + 0x68]
or	rsi, rax
mov	eax, dword ptr [rbp]
test	eax, eax
jne	0x14007a832
jne	0x14007a832
mov	rax, qword ptr [rsp + 0x118]
mov	rax, qword ptr [rax + 0x20]
test	rax, rax
je	0x14007a7ee
je	0x14007a7ee
mov	rcx, qword ptr [rsp + 0x118]
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x118]
mov	rdx, qword ptr [rsp + 0x118]
mov	r8, qword ptr [rsp + 0x78]
mov	rcx, qword ptr [rsp + 0x118]
add	rax, 0x10
mov	qword ptr [rdx], rax
mov	rdx, qword ptr [rsp + 0x70]
add	r8, rdx
call	0x14009d7c0
call	0x14009d7c0
mov	rax, qword ptr [rsp + 0x118]
lea	rdx, [rip + 0x2742]
mov	qword ptr [rax + 0x20], rdx
mov	rcx, qword ptr [rsp + 0x70]
mov	qword ptr [rbx], rdi
mov	qword ptr [rbx + 8], rsi
cmp	rcx, r12
je	0x14007a733
je	0x14007a733
call	0x1400b2be0
call	0x1400b2be0
jmp	0x14007a733
jmp	0x14007a733
mov	rbx, rax
mov	rcx, r13
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x90
movups	xmmword ptr [rsp + 0x80], xmm6
mov	rax, qword ptr [rsp + 0xf0]
mov	rbp, qword ptr [r9]
mov	rdi, qword ptr [r9 + 8]
mov	r12, qword ptr [rsp + 0x108]
movzx	r14d, byte ptr [rsp + 0xf8]
movdqu	xmm6, xmmword ptr [rax]
mov	rax, qword ptr [rsp + 0x110]
mov	rbx, rcx
mov	rsi, r8
test	rax, rax
je	0x14007a920
je	0x14007a920
mov	r10, qword ptr [r8]
mov	qword ptr [rsp + 0x38], rax
lea	r9, [rsp + 0x50]
mov	rdx, rsi
mov	rax, qword ptr [rsp + 0x100]
mov	qword ptr [rsp + 0x60], rbp
lea	r8, [rsp + 0x60]
mov	qword ptr [rsp + 0x68], rdi
mov	qword ptr [rsp + 0x30], r12
mov	qword ptr [rsp + 0x28], rax
mov	dword ptr [rsp + 0x20], r14d
movups	xmmword ptr [rsp + 0x50], xmm6
call	qword ptr [r10 + 0x10]
call	qword ptr [r10 + 0x10]
nop	
movups	xmm6, xmmword ptr [rsp + 0x80]
mov	rax, rbx
add	rsp, 0x90
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax]
lea	r13, [rsp + 0x77]
xor	edx, edx
xor	ecx, ecx
mov	r8, r13
call	0x140068880
call	0x140068880
lea	rdx, [rsp + 0x78]
mov	qword ptr [rsp + 0x50], rbp
lea	rcx, [rsp + 0x60]
mov	qword ptr [rsp + 0x78], rax
mov	rax, qword ptr [rsi]
lea	r9, [rsp + 0x40]
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x38], rdx
mov	rdx, qword ptr [rsp + 0x100]
mov	qword ptr [rsp + 0x58], rdi
mov	qword ptr [rsp + 0x28], rdx
mov	rdx, rsi
mov	qword ptr [rsp + 0x30], r12
mov	dword ptr [rsp + 0x20], r14d
movups	xmmword ptr [rsp + 0x40], xmm6
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, qword ptr [rsp + 0x60]
xor	di, di
mov	qword ptr [rsp + 0x60], rax
mov	rbp, rax
mov	r8d, dword ptr [r12]
movzx	eax, word ptr [rsp + 0x68]
or	rdi, rax
test	r8d, r8d
je	0x14007a9e0
je	0x14007a9e0
mov	rcx, qword ptr [rsp + 0x78]
mov	rdx, qword ptr [rip + 0x43c85]
mov	eax, dword ptr [rdx]
mov	qword ptr [rbx], rbp
mov	qword ptr [rbx + 8], rdi
test	eax, eax
jne	0x14007aa50
jne	0x14007aa50
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jg	0x14007a900
jg	0x14007a900
sub	rcx, 0x18
mov	rdx, r13
call	0x140068ef0
call	0x140068ef0
jmp	0x14007a900
jmp	0x14007a900
nop	
mov	rax, qword ptr [rsp + 0x118]
mov	rax, qword ptr [rax + 0x20]
test	rax, rax
je	0x14007a9fb
je	0x14007a9fb
mov	rcx, qword ptr [rsp + 0x118]
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x78]
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
lea	r8, [rax - 8]
test	edx, edx
js	0x14007aa70
js	0x14007aa70
mov	rdx, qword ptr [rip + 0x43c1a]
mov	ecx, dword ptr [rdx]
test	ecx, ecx
jne	0x14007aa60
jne	0x14007aa60
add	dword ptr [rax - 8], 1
mov	rsi, qword ptr [rsp + 0x118]
mov	rcx, qword ptr [rsp + 0x78]
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rcx - 0x18]
mov	qword ptr [rsi + 8], rax
mov	rax, rsi
lea	rsi, [rip + 0x254e]
mov	qword ptr [rax + 0x20], rsi
jmp	0x14007a9ab
jmp	0x14007a9ab
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
jmp	0x14007a9c5
jmp	0x14007a9c5
nop	
lock add	dword ptr [r8], 1
jmp	0x14007aa20
jmp	0x14007aa20
nop	word ptr [rax + rax]
xor	r8d, r8d
mov	rdx, r13
call	0x140069010
call	0x140069010
mov	rdx, qword ptr [rip + 0x43bae]
jmp	0x14007aa20
jmp	0x14007aa20
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x78]
lea	rdx, [rsp + 0x76]
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
mov	rax, qword ptr [rsp + 0xf0]
mov	rdi, qword ptr [r9]
mov	rsi, qword ptr [r9 + 8]
mov	rbp, qword ptr [rsp + 0x108]
movdqu	xmm0, xmmword ptr [rax]
mov	rax, qword ptr [rsp + 0x110]
mov	rdx, r8
mov	rbx, rcx
mov	r8, qword ptr [rsp + 0x100]
movzx	ecx, byte ptr [rsp + 0xf8]
mov	r10, qword ptr [rdx]
test	rax, rax
je	0x14007ab50
je	0x14007ab50
mov	qword ptr [rsp + 0x28], r8
lea	r9, [rsp + 0x50]
lea	r8, [rsp + 0x60]
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rbx
mov	qword ptr [rsp + 0x60], rdi
mov	qword ptr [rsp + 0x68], rsi
mov	qword ptr [rsp + 0x38], rax
mov	qword ptr [rsp + 0x30], rbp
movups	xmmword ptr [rsp + 0x50], xmm0
call	qword ptr [r10 + 0x10]
call	qword ptr [r10 + 0x10]
mov	rax, rbx
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr cs:[rax + rax]
xor	r9d, r9d
lea	r13, [rsp + 0x70]
lea	rax, [rsp + 0x60]
mov	qword ptr [rsp + 0x28], r8
lea	r12, [rsp + 0x80]
mov	dword ptr [rsp + 0x20], ecx
lea	r8, [rsp + 0x50]
mov	rcx, rax
mov	word ptr [rsp + 0x80], r9w
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x70], r12
mov	qword ptr [rsp + 0x78], 0
mov	qword ptr [rsp + 0x50], rdi
mov	qword ptr [rsp + 0x58], rsi
mov	qword ptr [rsp + 0x38], r13
mov	qword ptr [rsp + 0x30], rbp
movups	xmmword ptr [rsp + 0x40], xmm0
call	qword ptr [r10 + 0x18]
call	qword ptr [r10 + 0x18]
mov	rax, qword ptr [rsp + 0x60]
xor	si, si
mov	qword ptr [rsp + 0x60], rax
mov	rdi, rax
movzx	eax, word ptr [rsp + 0x68]
or	rsi, rax
mov	eax, dword ptr [rbp]
test	eax, eax
jne	0x14007ac2e
jne	0x14007ac2e
mov	rax, qword ptr [rsp + 0x118]
mov	rax, qword ptr [rax + 0x20]
test	rax, rax
je	0x14007abe9
je	0x14007abe9
mov	rcx, qword ptr [rsp + 0x118]
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x118]
mov	rdx, qword ptr [rsp + 0x118]
mov	rcx, qword ptr [rsp + 0x118]
add	rax, 0x10
mov	qword ptr [rdx], rax
mov	rdx, qword ptr [rsp + 0x70]
mov	rax, qword ptr [rsp + 0x78]
lea	r8, [rdx + rax*2]
call	0x1400a1700
call	0x1400a1700
mov	rax, qword ptr [rsp + 0x118]
lea	rdx, [rip + 0x23c6]
mov	qword ptr [rax + 0x20], rdx
mov	rcx, qword ptr [rsp + 0x70]
mov	qword ptr [rbx], rdi
mov	qword ptr [rbx + 8], rsi
cmp	rcx, r12
je	0x14007ab33
je	0x14007ab33
call	0x1400b2be0
call	0x1400b2be0
jmp	0x14007ab33
jmp	0x14007ab33
mov	rbx, rax
mov	rcx, r13
call	0x1400a1050
call	0x1400a1050
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
add	rsp, -0x80
movups	xmmword ptr [rsp + 0x70], xmm6
mov	rax, qword ptr [rsp + 0xe8]
movdqu	xmm6, xmmword ptr [r9]
mov	ebp, dword ptr [rsp + 0xd0]
mov	edi, dword ptr [rsp + 0xe0]
fld	xword ptr [rax]
mov	rax, qword ptr [rsp + 0xf0]
mov	rbx, rcx
mov	rsi, r8
test	rax, rax
je	0x14007ad50
je	0x14007ad50
fstp	st(0)
cmp	qword ptr [rax + 0x20], 0
je	0x14007adac
je	0x14007adac
mov	rcx, qword ptr [rax]
mov	rdx, qword ptr [rax + 8]
lea	r12, [rsp + 0x67]
movsx	edi, dil
mov	r8, r12
add	rdx, rcx
call	0x140071eb0
call	0x140071eb0
lea	rdx, [rsp + 0x68]
movups	xmmword ptr [rsp + 0x50], xmm6
mov	rcx, rbx
mov	qword ptr [rsp + 0x68], rax
mov	rax, qword ptr [rsi]
movzx	r9d, bpl
lea	r8, [rsp + 0x50]
mov	dword ptr [rsp + 0x28], edi
mov	rdi, qword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0x30], rdx
mov	rdx, rsi
mov	qword ptr [rsp + 0x20], rdi
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, qword ptr [rip + 0x43914]
mov	rcx, qword ptr [rsp + 0x68]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007ad90
jne	0x14007ad90
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007ad9e
jle	0x14007ad9e
movups	xmm6, xmmword ptr [rsp + 0x70]
mov	rax, rbx
sub	rsp, -0x80
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
movsx	edi, dil
mov	rax, qword ptr [r8]
lea	rdx, [rsp + 0x40]
fstp	xword ptr [rsp + 0x40]
movzx	r9d, bpl
lea	r8, [rsp + 0x50]
mov	dword ptr [rsp + 0x28], edi
mov	rdi, qword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0x30], rdx
mov	rdx, rsi
mov	qword ptr [rsp + 0x20], rdi
movups	xmmword ptr [rsp + 0x50], xmm6
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
jmp	0x14007ad34
jmp	0x14007ad34
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007ad34
jg	0x14007ad34
sub	rcx, 0x18
mov	rdx, r12
call	0x140072480
call	0x140072480
jmp	0x14007ad34
jmp	0x14007ad34
lea	rcx, [rip + 0x3e427]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x68]
mov	rdx, r12
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xa8
movups	xmmword ptr [rsp + 0x90], xmm6
mov	rax, qword ptr [rsp + 0x128]
movdqu	xmm6, xmmword ptr [r9]
mov	r12d, dword ptr [rsp + 0x110]
mov	edi, dword ptr [rsp + 0x120]
fld	xword ptr [rax]
mov	rax, qword ptr [rsp + 0x130]
mov	rbx, rcx
mov	rsi, r8
test	rax, rax
je	0x14007af00
je	0x14007af00
fstp	st(0)
cmp	qword ptr [rax + 0x20], 0
je	0x14007af9f
je	0x14007af9f
mov	r15, qword ptr [rax]
lea	r13, [rsp + 0x80]
mov	rbp, qword ptr [rax + 8]
mov	qword ptr [rsp + 0x70], r13
test	r15, r15
jne	0x14007ae5f
jne	0x14007ae5f
test	rbp, rbp
jne	0x14007af9a
jne	0x14007af9a
mov	qword ptr [rsp + 0x68], rbp
cmp	rbp, 0xf
ja	0x14007af40
ja	0x14007af40
cmp	rbp, 1
jne	0x14007af88
jne	0x14007af88
movzx	eax, byte ptr [r15]
lea	r14, [rsp + 0x70]
mov	byte ptr [rsp + 0x80], al
mov	rax, r13
mov	qword ptr [rsp + 0x78], rbp
movsx	edi, dil
movzx	r9d, r12b
mov	rcx, rbx
mov	byte ptr [rax + rbp], 0
mov	rax, qword ptr [rsi]
lea	r8, [rsp + 0x50]
mov	rdx, qword ptr [rsp + 0x118]
mov	qword ptr [rsp + 0x30], r14
mov	dword ptr [rsp + 0x28], edi
mov	qword ptr [rsp + 0x20], rdx
mov	rdx, rsi
movups	xmmword ptr [rsp + 0x50], xmm6
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rcx, qword ptr [rsp + 0x70]
cmp	rcx, r13
je	0x14007aed8
je	0x14007aed8
call	0x1400b2be0
call	0x1400b2be0
nop	
movups	xmm6, xmmword ptr [rsp + 0x90]
mov	rax, rbx
add	rsp, 0xa8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr [rax + rax]
lea	rdx, [rsp + 0x40]
mov	rax, qword ptr [r8]
movsx	edi, dil
fstp	xword ptr [rsp + 0x40]
movzx	r9d, r12b
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rdx
mov	rdx, qword ptr [rsp + 0x118]
mov	dword ptr [rsp + 0x28], edi
mov	qword ptr [rsp + 0x20], rdx
mov	rdx, rsi
movups	xmmword ptr [rsp + 0x50], xmm6
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
jmp	0x14007aed8
jmp	0x14007aed8
nop	dword ptr [rax]
lea	r14, [rsp + 0x70]
lea	rdx, [rsp + 0x68]
xor	r8d, r8d
mov	rcx, r14
call	0x14009fa70
call	0x14009fa70
mov	qword ptr [rsp + 0x70], rax
mov	rcx, rax
mov	rax, qword ptr [rsp + 0x68]
mov	qword ptr [rsp + 0x80], rax
mov	r8, rbp
mov	rdx, r15
call	0x140015998
call	0x140015998
mov	rbp, qword ptr [rsp + 0x68]
mov	rax, qword ptr [rsp + 0x70]
jmp	0x14007ae8b
jmp	0x14007ae8b
nop	dword ptr [rax]
test	rbp, rbp
jne	0x14007afab
jne	0x14007afab
mov	rax, r13
lea	r14, [rsp + 0x70]
jmp	0x14007ae8b
jmp	0x14007ae8b
call	0x1400a0690
call	0x1400a0690
lea	rcx, [rip + 0x3eb5c]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rcx, r13
lea	r14, [rsp + 0x70]
jmp	0x14007af6a
jmp	0x14007af6a
mov	rbx, rax
mov	rcx, r14
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
add	rsp, -0x80
movups	xmmword ptr [rsp + 0x70], xmm6
mov	rax, qword ptr [rsp + 0xe8]
movdqu	xmm6, xmmword ptr [r9]
mov	ebp, dword ptr [rsp + 0xd0]
mov	edi, dword ptr [rsp + 0xe0]
fld	xword ptr [rax]
mov	rax, qword ptr [rsp + 0xf0]
mov	rbx, rcx
mov	rsi, r8
test	rax, rax
je	0x14007b0b0
je	0x14007b0b0
fstp	st(0)
cmp	qword ptr [rax + 0x20], 0
je	0x14007b10c
je	0x14007b10c
mov	rcx, qword ptr [rax]
mov	rdx, qword ptr [rax + 8]
lea	r12, [rsp + 0x67]
movzx	edi, di
mov	r8, r12
lea	rdx, [rcx + rdx*2]
call	0x140068a00
call	0x140068a00
lea	rdx, [rsp + 0x68]
movups	xmmword ptr [rsp + 0x50], xmm6
mov	rcx, rbx
mov	qword ptr [rsp + 0x68], rax
mov	rax, qword ptr [rsi]
movzx	r9d, bpl
lea	r8, [rsp + 0x50]
mov	dword ptr [rsp + 0x28], edi
mov	rdi, qword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0x30], rdx
mov	rdx, rsi
mov	qword ptr [rsp + 0x20], rdi
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, qword ptr [rip + 0x435b4]
mov	rcx, qword ptr [rsp + 0x68]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007b0f0
jne	0x14007b0f0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007b0fe
jle	0x14007b0fe
movups	xmm6, xmmword ptr [rsp + 0x70]
mov	rax, rbx
sub	rsp, -0x80
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
movzx	edi, di
mov	rax, qword ptr [r8]
lea	rdx, [rsp + 0x40]
fstp	xword ptr [rsp + 0x40]
movzx	r9d, bpl
lea	r8, [rsp + 0x50]
mov	dword ptr [rsp + 0x28], edi
mov	rdi, qword ptr [rsp + 0xd8]
mov	qword ptr [rsp + 0x30], rdx
mov	rdx, rsi
mov	qword ptr [rsp + 0x20], rdi
movups	xmmword ptr [rsp + 0x50], xmm6
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
jmp	0x14007b094
jmp	0x14007b094
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007b094
jg	0x14007b094
sub	rcx, 0x18
mov	rdx, r12
call	0x140068ef0
call	0x140068ef0
jmp	0x14007b094
jmp	0x14007b094
lea	rcx, [rip + 0x3e0c7]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x68]
mov	rdx, r12
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
movups	xmmword ptr [rsp + 0x80], xmm6
mov	rax, qword ptr [rsp + 0x108]
movdqu	xmm6, xmmword ptr [r9]
mov	ebp, dword ptr [rsp + 0xf0]
mov	edi, dword ptr [rsp + 0x100]
fld	xword ptr [rax]
mov	rax, qword ptr [rsp + 0x110]
mov	rbx, rcx
mov	rsi, r8
test	rax, rax
je	0x14007b230
je	0x14007b230
fstp	st(0)
cmp	qword ptr [rax + 0x20], 0
je	0x14007b270
je	0x14007b270
mov	rdx, qword ptr [rax]
lea	r13, [rsp + 0x70]
mov	rcx, qword ptr [rax + 8]
mov	qword ptr [rsp + 0x60], r13
test	rdx, rdx
jne	0x14007b1b7
jne	0x14007b1b7
test	rcx, rcx
jne	0x14007b26b
jne	0x14007b26b
lea	r12, [rsp + 0x60]
lea	r8, [rdx + rcx*2]
movzx	edi, di
mov	rcx, r12
call	0x1400a1530
call	0x1400a1530
mov	rax, qword ptr [rsi]
mov	dword ptr [rsp + 0x28], edi
movzx	r9d, bpl
mov	qword ptr [rsp + 0x30], r12
lea	r8, [rsp + 0x50]
mov	rdx, rsi
mov	rcx, rbx
mov	rdi, qword ptr [rsp + 0xf8]
movups	xmmword ptr [rsp + 0x50], xmm6
mov	qword ptr [rsp + 0x20], rdi
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rcx, qword ptr [rsp + 0x60]
cmp	rcx, r13
je	0x14007b20b
je	0x14007b20b
call	0x1400b2be0
call	0x1400b2be0
nop	
movups	xmm6, xmmword ptr [rsp + 0x80]
mov	rax, rbx
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr cs:[rax + rax]
lea	rdx, [rsp + 0x40]
mov	rax, qword ptr [r8]
movzx	edi, di
fstp	xword ptr [rsp + 0x40]
movzx	r9d, bpl
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x30], rdx
mov	rdx, qword ptr [rsp + 0xf8]
mov	dword ptr [rsp + 0x28], edi
mov	qword ptr [rsp + 0x20], rdx
mov	rdx, rsi
movups	xmmword ptr [rsp + 0x50], xmm6
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
jmp	0x14007b20b
jmp	0x14007b20b
call	0x1400a0690
call	0x1400a0690
lea	rcx, [rip + 0x3e88b]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rbx, rax
mov	rcx, r12
call	0x1400a1050
call	0x1400a1050
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49c14]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4338a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007b2f8
jne	0x14007b2f8
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007b2c7
jne	0x14007b2c7
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x43db2]
lea	rcx, [rbx + 0x10]
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007b2bc
jmp	0x14007b2bc
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49bd4]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4330a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007b378
jne	0x14007b378
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007b347
jne	0x14007b347
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x439c2]
lea	rcx, [rbx + 0x10]
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007b33c
jmp	0x14007b33c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49b14]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4328a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007b3f0
jne	0x14007b3f0
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007b3c7
jne	0x14007b3c7
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x43cb2]
lea	rcx, [rbx + 0x10]
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007b3bc
jmp	0x14007b3bc
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49ae4]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4321a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007b460
jne	0x14007b460
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007b437
jne	0x14007b437
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x438d2]
lea	rcx, [rbx + 0x10]
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007b42c
jmp	0x14007b42c
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49ab4]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x431aa]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007b4d8
jne	0x14007b4d8
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007b4a7
jne	0x14007b4a7
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x43be2]
lea	rcx, [rbx + 0x10]
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007b49c
jmp	0x14007b49c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49a74]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4312a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007b558
jne	0x14007b558
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007b527
jne	0x14007b527
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x437f2]
lea	rcx, [rbx + 0x10]
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007b51c
jmp	0x14007b51c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x499b4]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x430aa]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007b5d0
jne	0x14007b5d0
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007b5a7
jne	0x14007b5a7
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x43ae2]
lea	rcx, [rbx + 0x10]
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007b59c
jmp	0x14007b59c
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49984]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4303a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007b640
jne	0x14007b640
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007b617
jne	0x14007b617
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x43702]
lea	rcx, [rbx + 0x10]
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007b60c
jmp	0x14007b60c
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49954]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x42fca]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x20]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007b6a0
jne	0x14007b6a0
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007b687
jne	0x14007b687
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x1400aa530
call	0x1400aa530
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007b67c
jmp	0x14007b67c
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49934]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x42f6a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x20]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007b700
jne	0x14007b700
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007b6e7
jne	0x14007b6e7
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x1400a78d0
call	0x1400a78d0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007b6dc
jmp	0x14007b6dc
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49894]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x42f0a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x20]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007b758
jne	0x14007b758
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007b747
jne	0x14007b747
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400aa530
jmp	0x1400aa530
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007b73c
jmp	0x14007b73c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49874]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x42eaa]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x20]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007b7b8
jne	0x14007b7b8
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007b7a7
jne	0x14007b7a7
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400a78d0
jmp	0x1400a78d0
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007b79c
jmp	0x14007b79c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49854]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x42e4a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x20]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007b820
jne	0x14007b820
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007b807
jne	0x14007b807
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x1400aa700
call	0x1400aa700
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007b7fc
jmp	0x14007b7fc
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49834]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x42dea]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x20]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007b880
jne	0x14007b880
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007b867
jne	0x14007b867
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x1400a7aa0
call	0x1400a7aa0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007b85c
jmp	0x14007b85c
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49794]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x42d8a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x20]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007b8d8
jne	0x14007b8d8
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007b8c7
jne	0x14007b8c7
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400aa700
jmp	0x1400aa700
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007b8bc
jmp	0x14007b8bc
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49774]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x42d2a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x20]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007b938
jne	0x14007b938
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007b927
jne	0x14007b927
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400a7aa0
jmp	0x1400a7aa0
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007b91c
jmp	0x14007b91c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49754]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	rax, qword ptr [rip + 0x42cb7]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007b9b0
jne	0x14007b9b0
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007b993
jne	0x14007b993
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x1400aaa60
call	0x1400aaa60
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007b988
jmp	0x14007b988
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49734]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	rax, qword ptr [rip + 0x42c47]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007ba20
jne	0x14007ba20
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007ba03
jne	0x14007ba03
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x1400a7e30
call	0x1400a7e30
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007b9f8
jmp	0x14007b9f8
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49674]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	rax, qword ptr [rip + 0x42bd7]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007ba80
jne	0x14007ba80
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007ba73
jne	0x14007ba73
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400aaa60
jmp	0x1400aaa60
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007ba68
jmp	0x14007ba68
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49664]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	rax, qword ptr [rip + 0x42b77]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007bae0
jne	0x14007bae0
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007bad3
jne	0x14007bad3
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400a7e30
jmp	0x1400a7e30
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007bac8
jmp	0x14007bac8
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49654]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	rax, qword ptr [rip + 0x42b17]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007bb50
jne	0x14007bb50
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007bb33
jne	0x14007bb33
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x1400aae20
call	0x1400aae20
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007bb28
jmp	0x14007bb28
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49634]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	rax, qword ptr [rip + 0x42aa7]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007bbc0
jne	0x14007bbc0
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007bba3
jne	0x14007bba3
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x1400a81e0
call	0x1400a81e0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007bb98
jmp	0x14007bb98
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49574]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	rax, qword ptr [rip + 0x42a37]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007bc20
jne	0x14007bc20
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007bc13
jne	0x14007bc13
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400aae20
jmp	0x1400aae20
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007bc08
jmp	0x14007bc08
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49564]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	rax, qword ptr [rip + 0x429d7]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007bc80
jne	0x14007bc80
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007bc73
jne	0x14007bc73
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400a81e0
jmp	0x1400a81e0
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007bc68
jmp	0x14007bc68
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49554]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4298a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007bcf0
jne	0x14007bcf0
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007bcc7
jne	0x14007bcc7
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x43442]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007bcbc
jmp	0x14007bcbc
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49534]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4291a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007bd60
jne	0x14007bd60
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007bd37
jne	0x14007bd37
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x43012]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007bd2c
jmp	0x14007bd2c
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49474]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x428aa]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007bdc8
jne	0x14007bdc8
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007bda7
jne	0x14007bda7
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x43362]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007bd9c
jmp	0x14007bd9c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49454]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4283a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007be38
jne	0x14007be38
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007be17
jne	0x14007be17
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x42f32]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007be0c
jmp	0x14007be0c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49444]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x427ca]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007beb0
jne	0x14007beb0
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007be87
jne	0x14007be87
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x43292]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007be7c
jmp	0x14007be7c
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49424]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4275a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007bf20
jne	0x14007bf20
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007bef7
jne	0x14007bef7
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x42e62]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007beec
jmp	0x14007beec
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49364]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x426ea]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007bf88
jne	0x14007bf88
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007bf67
jne	0x14007bf67
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x431b2]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007bf5c
jmp	0x14007bf5c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49344]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4267a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007bff8
jne	0x14007bff8
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007bfd7
jne	0x14007bfd7
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x42d82]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007bfcc
jmp	0x14007bfcc
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49334]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4260a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c070
jne	0x14007c070
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c047
jne	0x14007c047
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x43132]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c03c
jmp	0x14007c03c
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x492f4]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4259a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c0e0
jne	0x14007c0e0
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c0b7
jne	0x14007c0b7
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x42cb2]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c0ac
jmp	0x14007c0ac
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49254]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4252a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c148
jne	0x14007c148
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c127
jne	0x14007c127
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x43052]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c11c
jmp	0x14007c11c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49214]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x424ba]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c1b8
jne	0x14007c1b8
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c197
jne	0x14007c197
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x42bd2]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c18c
jmp	0x14007c18c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x491d4]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4244a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c230
jne	0x14007c230
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c207
jne	0x14007c207
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x42f82]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c1fc
jmp	0x14007c1fc
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49194]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x423da]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c2a0
jne	0x14007c2a0
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c277
jne	0x14007c277
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x42b02]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c26c
jmp	0x14007c26c
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x490f4]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4236a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c308
jne	0x14007c308
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c2e7
jne	0x14007c2e7
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x42ea2]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c2dc
jmp	0x14007c2dc
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x490b4]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x422fa]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c378
jne	0x14007c378
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c357
jne	0x14007c357
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x42a22]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c34c
jmp	0x14007c34c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49074]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4228a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c3f0
jne	0x14007c3f0
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c3c7
jne	0x14007c3c7
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x42dd2]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c3bc
jmp	0x14007c3bc
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x49034]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4221a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c460
jne	0x14007c460
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c437
jne	0x14007c437
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x42952]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c42c
jmp	0x14007c42c
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48f94]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x421aa]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c4c8
jne	0x14007c4c8
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c4a7
jne	0x14007c4a7
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x42cf2]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c49c
jmp	0x14007c49c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48f54]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4213a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c538
jne	0x14007c538
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c517
jne	0x14007c517
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x42872]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c50c
jmp	0x14007c50c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48f14]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x420ca]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c5b0
jne	0x14007c5b0
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c587
jne	0x14007c587
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x42c22]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c57c
jmp	0x14007c57c
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48ed4]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x4205a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c620
jne	0x14007c620
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c5f7
jne	0x14007c5f7
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x427a2]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c5ec
jmp	0x14007c5ec
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48e34]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x41fea]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c688
jne	0x14007c688
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c667
jne	0x14007c667
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x42b42]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c65c
jmp	0x14007c65c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48df4]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x41f7a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c6f8
jne	0x14007c6f8
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c6d7
jne	0x14007c6d7
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rax, qword ptr [rip + 0x426c2]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c6cc
jmp	0x14007c6cc
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48db4]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	rax, qword ptr [rip + 0x41edf]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c780
jne	0x14007c780
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c76b
jne	0x14007c76b
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x140075510
call	0x140075510
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c760
jmp	0x14007c760
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48da4]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	rax, qword ptr [rip + 0x41e5f]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c800
jne	0x14007c800
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c7eb
jne	0x14007c7eb
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x14009c3b0
call	0x14009c3b0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c7e0
jmp	0x14007c7e0
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48cb4]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	rax, qword ptr [rip + 0x41ddf]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c880
jne	0x14007c880
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c86b
jne	0x14007c86b
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x140075510
jmp	0x140075510
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c860
jmp	0x14007c860
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48ca4]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	rax, qword ptr [rip + 0x41d5f]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c900
jne	0x14007c900
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c8eb
jne	0x14007c8eb
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009c3b0
jmp	0x14009c3b0
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c8e0
jmp	0x14007c8e0
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48c94]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	rax, qword ptr [rip + 0x41cdf]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007c980
jne	0x14007c980
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c96b
jne	0x14007c96b
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x1400758e0
call	0x1400758e0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c960
jmp	0x14007c960
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48c84]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	rax, qword ptr [rip + 0x41c5f]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007ca00
jne	0x14007ca00
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007c9eb
jne	0x14007c9eb
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x14009c770
call	0x14009c770
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007c9e0
jmp	0x14007c9e0
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48b94]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	rax, qword ptr [rip + 0x41bdf]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007ca80
jne	0x14007ca80
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007ca6b
jne	0x14007ca6b
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400758e0
jmp	0x1400758e0
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007ca60
jmp	0x14007ca60
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48b84]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	rax, qword ptr [rip + 0x41b5f]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007cb00
jne	0x14007cb00
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007caeb
jne	0x14007caeb
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009c770
jmp	0x14009c770
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007cae0
jmp	0x14007cae0
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48b74]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	rax, qword ptr [rip + 0x41adf]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007cb80
jne	0x14007cb80
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007cb6b
jne	0x14007cb6b
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x140075cb0
call	0x140075cb0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007cb60
jmp	0x14007cb60
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48b64]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	rax, qword ptr [rip + 0x41a5f]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007cc00
jne	0x14007cc00
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007cbeb
jne	0x14007cbeb
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x14009cb30
call	0x14009cb30
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007cbe0
jmp	0x14007cbe0
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48a74]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	rax, qword ptr [rip + 0x419df]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007cc80
jne	0x14007cc80
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007cc6b
jne	0x14007cc6b
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x140075cb0
jmp	0x140075cb0
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007cc60
jmp	0x14007cc60
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48a64]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	rax, qword ptr [rip + 0x4195f]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007cd00
jne	0x14007cd00
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007cceb
jne	0x14007cceb
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009cb30
jmp	0x14009cb30
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007cce0
jmp	0x14007cce0
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48a54]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	rax, qword ptr [rip + 0x418df]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007cd80
jne	0x14007cd80
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007cd6b
jne	0x14007cd6b
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x140076080
call	0x140076080
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007cd60
jmp	0x14007cd60
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48a44]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	rax, qword ptr [rip + 0x4185f]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007ce00
jne	0x14007ce00
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007cdeb
jne	0x14007cdeb
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x14009cef0
call	0x14009cef0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007cde0
jmp	0x14007cde0
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48954]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	rax, qword ptr [rip + 0x417df]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007ce80
jne	0x14007ce80
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007ce6b
jne	0x14007ce6b
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x140076080
jmp	0x140076080
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007ce60
jmp	0x14007ce60
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x48944]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rcx + 0x20]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x18]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	rax, qword ptr [rip + 0x4175f]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14007cf00
jne	0x14007cf00
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14007ceeb
jne	0x14007ceeb
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009cef0
jmp	0x14009cef0
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14007cee0
jmp	0x14007cee0
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rip + 0x41715]
mov	eax, dword ptr [rax]
mov	rcx, qword ptr [rcx]
test	eax, eax
jne	0x14007cf40
jne	0x14007cf40
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007cf4e
jle	0x14007cf4e
add	rsp, 0x38
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007cf31
jg	0x14007cf31
lea	rdx, [rsp + 0x2f]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
nop	
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rcx, 0x10
cmp	rax, rcx
je	0x14007cf88
je	0x14007cf88
mov	rcx, rax
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rip + 0x41695]
mov	eax, dword ptr [rax]
mov	rcx, qword ptr [rcx]
test	eax, eax
jne	0x14007cfc0
jne	0x14007cfc0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007cfce
jle	0x14007cfce
add	rsp, 0x38
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007cfb1
jg	0x14007cfb1
lea	rdx, [rsp + 0x2f]
sub	rcx, 0x18
call	0x140068ef0
call	0x140068ef0
nop	
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rcx, 0x10
cmp	rax, rcx
je	0x14007d008
je	0x14007d008
mov	rcx, rax
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
mov	rcx, qword ptr [rsp + 0xb0]
mov	rsi, rdx
mov	rbx, r8
lea	r8, [rsp + 0x3d]
mov	ebp, r9d
mov	rdx, qword ptr [rsp + 0xb8]
lea	rdi, [rsp + 0x48]
add	rdx, rcx
call	0x140071eb0
call	0x140071eb0
lea	rdx, [rsp + 0x40]
mov	r8d, ebp
mov	rcx, rdi
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsi]
mov	qword ptr [rsp + 0x28], rdx
mov	edx, dword ptr [rsp + 0xa8]
mov	r9d, dword ptr [rsp + 0xa0]
mov	dword ptr [rsp + 0x20], edx
mov	rdx, rsi
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, qword ptr [rbx + 0x20]
test	rax, rax
je	0x14007d082
je	0x14007d082
mov	rcx, rbx
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x48]
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
lea	r8, [rax - 8]
test	edx, edx
js	0x14007d100
js	0x14007d100
mov	rsi, qword ptr [rip + 0x41593]
mov	ecx, dword ptr [rsi]
test	ecx, ecx
jne	0x14007d170
jne	0x14007d170
add	dword ptr [rax - 8], 1
mov	rcx, qword ptr [rsp + 0x48]
mov	edx, dword ptr [rsi]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rcx - 0x18]
mov	qword ptr [rbx + 8], rax
lea	rax, [rip - 0x1b4]
mov	qword ptr [rbx + 0x20], rax
test	edx, edx
jne	0x14007d148
jne	0x14007d148
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007d156
jle	0x14007d156
mov	eax, dword ptr [rsi]
mov	rcx, qword ptr [rsp + 0x40]
test	eax, eax
jne	0x14007d120
jne	0x14007d120
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007d12e
jle	0x14007d12e
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
lea	rdx, [rsp + 0x3f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
mov	rsi, qword ptr [rip + 0x4151c]
jmp	0x14007d0ab
jmp	0x14007d0ab
nop	word ptr cs:[rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007d0f1
jg	0x14007d0f1
sub	rcx, 0x18
mov	rdx, rdi
call	0x140072480
call	0x140072480
nop	
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007d0d9
jg	0x14007d0d9
lea	rdx, [rsp + 0x3f]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x14007d0d9
jmp	0x14007d0d9
nop	dword ptr [rax]
lock add	dword ptr [r8], 1
jmp	0x14007d0ab
jmp	0x14007d0ab
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x48]
lea	rsi, [rsp + 0x3e]
mov	rdx, rsi
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0x40]
mov	rdx, rsi
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
lea	rsi, [rsp + 0x3e]
jmp	0x14007d193
jmp	0x14007d193
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x78
mov	rax, qword ptr [rsp + 0xe8]
mov	rsi, rdx
lea	rdi, [rsp + 0x40]
mov	rbx, r8
mov	r12d, r9d
mov	rdx, qword ptr [rsp + 0xe0]
mov	qword ptr [rsp + 0x30], rdi
test	rdx, rdx
jne	0x14007d1fd
jne	0x14007d1fd
test	rax, rax
jne	0x14007d2a0
jne	0x14007d2a0
lea	rbp, [rsp + 0x30]
lea	r8, [rdx + rax]
mov	rcx, rbp
lea	r13, [rsp + 0x50]
call	0x14009d490
call	0x14009d490
mov	rax, qword ptr [rsi]
mov	r8d, r12d
mov	qword ptr [rsp + 0x28], rbp
mov	edx, dword ptr [rsp + 0xd8]
mov	r9d, dword ptr [rsp + 0xd0]
mov	rcx, r13
mov	dword ptr [rsp + 0x20], edx
mov	rdx, rsi
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, qword ptr [rbx + 0x20]
test	rax, rax
je	0x14007d248
je	0x14007d248
mov	rcx, rbx
call	rax
call	rax
lea	rax, [rbx + 0x10]
mov	rdx, qword ptr [rsp + 0x50]
mov	r8, qword ptr [rsp + 0x58]
mov	rcx, rbx
mov	qword ptr [rbx], rax
add	r8, rdx
call	0x14009d7c0
call	0x14009d7c0
lea	rax, [rip - 0x2fb]
mov	rcx, qword ptr [rsp + 0x50]
mov	qword ptr [rbx + 0x20], rax
lea	rax, [rsp + 0x60]
cmp	rcx, rax
je	0x14007d283
je	0x14007d283
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, qword ptr [rsp + 0x30]
cmp	rcx, rdi
je	0x14007d293
je	0x14007d293
call	0x1400b2be0
call	0x1400b2be0
nop	
add	rsp, 0x78
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
call	0x1400a0690
call	0x1400a0690
mov	rcx, r13
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbp
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x14007d2b0
jmp	0x14007d2b0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
mov	rcx, qword ptr [rsp + 0xb0]
mov	rax, qword ptr [rsp + 0xb8]
mov	rsi, rdx
mov	rbx, r8
lea	rdx, [rcx + rax*2]
mov	ebp, r9d
lea	r8, [rsp + 0x3d]
lea	rdi, [rsp + 0x48]
call	0x140068a00
call	0x140068a00
lea	rdx, [rsp + 0x40]
mov	r8d, ebp
mov	rcx, rdi
mov	qword ptr [rsp + 0x40], rax
mov	rax, qword ptr [rsi]
mov	qword ptr [rsp + 0x28], rdx
mov	edx, dword ptr [rsp + 0xa8]
mov	r9d, dword ptr [rsp + 0xa0]
mov	dword ptr [rsp + 0x20], edx
mov	rdx, rsi
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, qword ptr [rbx + 0x20]
test	rax, rax
je	0x14007d343
je	0x14007d343
mov	rcx, rbx
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x48]
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
lea	r8, [rax - 8]
test	edx, edx
js	0x14007d3c0
js	0x14007d3c0
mov	rsi, qword ptr [rip + 0x412d2]
mov	ecx, dword ptr [rsi]
test	ecx, ecx
jne	0x14007d430
jne	0x14007d430
add	dword ptr [rax - 8], 1
mov	rcx, qword ptr [rsp + 0x48]
mov	edx, dword ptr [rsi]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rcx - 0x18]
mov	qword ptr [rbx + 8], rax
lea	rax, [rip - 0x3f5]
mov	qword ptr [rbx + 0x20], rax
test	edx, edx
jne	0x14007d408
jne	0x14007d408
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007d416
jle	0x14007d416
mov	eax, dword ptr [rsi]
mov	rcx, qword ptr [rsp + 0x40]
test	eax, eax
jne	0x14007d3e0
jne	0x14007d3e0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007d3ee
jle	0x14007d3ee
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rsp + 0x3f]
xor	r8d, r8d
call	0x140069010
call	0x140069010
mov	rsi, qword ptr [rip + 0x4125c]
jmp	0x14007d36c
jmp	0x14007d36c
nop	word ptr cs:[rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007d3b2
jg	0x14007d3b2
sub	rcx, 0x18
mov	rdx, rdi
call	0x140068ef0
call	0x140068ef0
nop	
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007d39a
jg	0x14007d39a
lea	rdx, [rsp + 0x3f]
sub	rcx, 0x18
call	0x140068ef0
call	0x140068ef0
jmp	0x14007d39a
jmp	0x14007d39a
nop	dword ptr [rax]
lock add	dword ptr [r8], 1
jmp	0x14007d36c
jmp	0x14007d36c
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x48]
lea	rsi, [rsp + 0x3e]
mov	rdx, rsi
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
mov	rax, qword ptr [rsp + 0x40]
mov	rdx, rsi
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
lea	rsi, [rsp + 0x3e]
jmp	0x14007d453
jmp	0x14007d453
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x78
mov	rax, qword ptr [rsp + 0xe8]
mov	rsi, rdx
lea	rdi, [rsp + 0x40]
mov	rbx, r8
mov	r12d, r9d
mov	rdx, qword ptr [rsp + 0xe0]
mov	qword ptr [rsp + 0x30], rdi
test	rdx, rdx
jne	0x14007d4bd
jne	0x14007d4bd
test	rax, rax
jne	0x14007d561
jne	0x14007d561
lea	rbp, [rsp + 0x30]
lea	r8, [rdx + rax*2]
mov	rcx, rbp
lea	r13, [rsp + 0x50]
call	0x1400a1530
call	0x1400a1530
mov	rax, qword ptr [rsi]
mov	r8d, r12d
mov	qword ptr [rsp + 0x28], rbp
mov	edx, dword ptr [rsp + 0xd8]
mov	r9d, dword ptr [rsp + 0xd0]
mov	rcx, r13
mov	dword ptr [rsp + 0x20], edx
mov	rdx, rsi
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, qword ptr [rbx + 0x20]
test	rax, rax
je	0x14007d508
je	0x14007d508
mov	rcx, rbx
call	rax
call	rax
lea	rax, [rbx + 0x10]
mov	rdx, qword ptr [rsp + 0x50]
mov	rcx, rbx
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rsp + 0x58]
lea	r8, [rdx + rax*2]
call	0x1400a1700
call	0x1400a1700
lea	rax, [rip - 0x53c]
mov	rcx, qword ptr [rsp + 0x50]
mov	qword ptr [rbx + 0x20], rax
lea	rax, [rsp + 0x60]
cmp	rcx, rax
je	0x14007d544
je	0x14007d544
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, qword ptr [rsp + 0x30]
cmp	rcx, rdi
je	0x14007d554
je	0x14007d554
call	0x1400b2be0
call	0x1400b2be0
nop	
add	rsp, 0x78
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
call	0x1400a0690
call	0x1400a0690
mov	rcx, r13
mov	rbx, rax
call	0x1400a1050
call	0x1400a1050
mov	rcx, rbp
call	0x1400a1050
call	0x1400a1050
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x14007d571
jmp	0x14007d571
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x48
lea	rsi, [rsp + 0x37]
mov	rbx, rdx
lea	rdx, [r8 + r9]
mov	rcx, r8
mov	r8, rsi
call	0x140071eb0
call	0x140071eb0
mov	r8, qword ptr [rsp + 0x80]
lea	rdx, [rsp + 0x38]
mov	rcx, rbx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rbx]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rdx, qword ptr [rip + 0x41061]
mov	rcx, qword ptr [rsp + 0x38]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x14007d5f0
jne	0x14007d5f0
mov	edx, dword ptr [rcx - 8]
lea	r8d, [rdx - 1]
mov	dword ptr [rcx - 8], r8d
test	edx, edx
jle	0x14007d5fe
jle	0x14007d5fe
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
mov	edx, 0xffffffff
lock xadd	dword ptr [rcx - 8], edx
test	edx, edx
jg	0x14007d5e9
jg	0x14007d5e9
sub	rcx, 0x18
mov	rdx, rsi
mov	dword ptr [rsp + 0x2c], eax
call	0x140072480
call	0x140072480
mov	eax, dword ptr [rsp + 0x2c]
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x38]
mov	rdx, rsi
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
lea	rsi, [rsp + 0x30]
mov	rbx, rdx
mov	rdx, r8
mov	qword ptr [rsp + 0x20], rsi
test	r8, r8
jne	0x14007d661
jne	0x14007d661
test	r9, r9
jne	0x14007d6a1
jne	0x14007d6a1
lea	rdi, [rsp + 0x20]
lea	r8, [rdx + r9]
mov	rcx, rdi
call	0x14009d490
call	0x14009d490
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, rbx
mov	r8, qword ptr [rsp + 0x80]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rcx, qword ptr [rsp + 0x20]
mov	ebx, eax
cmp	rcx, rsi
je	0x14007d697
je	0x14007d697
call	0x1400b2be0
call	0x1400b2be0
mov	eax, ebx
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
call	0x1400a0690
call	0x1400a0690
mov	rbx, rax
mov	rcx, rdi
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x48
lea	rsi, [rsp + 0x37]
mov	rbx, rdx
lea	rdx, [r8 + r9]
mov	rcx, r8
mov	r8, rsi
call	0x140071eb0
call	0x140071eb0
mov	r8, qword ptr [rsp + 0x80]
lea	rdx, [rsp + 0x38]
mov	rcx, rbx
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rbx]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rdx, qword ptr [rip + 0x40f31]
mov	rcx, qword ptr [rsp + 0x38]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x14007d720
jne	0x14007d720
mov	edx, dword ptr [rcx - 8]
lea	r8d, [rdx - 1]
mov	dword ptr [rcx - 8], r8d
test	edx, edx
jle	0x14007d72e
jle	0x14007d72e
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
mov	edx, 0xffffffff
lock xadd	dword ptr [rcx - 8], edx
test	edx, edx
jg	0x14007d719
jg	0x14007d719
sub	rcx, 0x18
mov	rdx, rsi
mov	dword ptr [rsp + 0x2c], eax
call	0x140072480
call	0x140072480
mov	eax, dword ptr [rsp + 0x2c]
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x38]
mov	rdx, rsi
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
lea	rsi, [rsp + 0x30]
mov	rbx, rdx
mov	rdx, r8
mov	qword ptr [rsp + 0x20], rsi
test	r8, r8
jne	0x14007d791
jne	0x14007d791
test	r9, r9
jne	0x14007d7d1
jne	0x14007d7d1
lea	rdi, [rsp + 0x20]
lea	r8, [rdx + r9]
mov	rcx, rdi
call	0x14009d490
call	0x14009d490
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, rbx
mov	r8, qword ptr [rsp + 0x80]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rcx, qword ptr [rsp + 0x20]
mov	ebx, eax
cmp	rcx, rsi
je	0x14007d7c7
je	0x14007d7c7
call	0x1400b2be0
call	0x1400b2be0
mov	eax, ebx
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
call	0x1400a0690
call	0x1400a0690
mov	rbx, rax
mov	rcx, rdi
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rcx, rdx
mov	edx, r8d
mov	rax, qword ptr [rcx]
jmp	qword ptr [rax + 0x20]
jmp	qword ptr [rax + 0x20]
nop	
nop	
nop	
mov	rcx, rdx
mov	edx, r8d
mov	rax, qword ptr [rcx]
jmp	qword ptr [rax + 0x20]
jmp	qword ptr [rax + 0x20]
nop	
nop	
nop	
mov	rcx, rdx
mov	edx, r8d
mov	rax, qword ptr [rcx]
jmp	qword ptr [rax + 0x20]
jmp	qword ptr [rax + 0x20]
nop	
nop	
nop	
mov	rcx, rdx
mov	edx, r8d
mov	rax, qword ptr [rcx]
jmp	qword ptr [rax + 0x20]
jmp	qword ptr [rax + 0x20]
nop	
nop	
nop	
mov	r10, qword ptr [rsp + 0x30]
mov	rcx, rdx
mov	rdx, r8
mov	r8, r9
mov	r9, qword ptr [rsp + 0x28]
mov	rax, qword ptr [rcx]
mov	qword ptr [rsp + 0x28], r10
jmp	qword ptr [rax + 0x10]
jmp	qword ptr [rax + 0x10]
nop	
mov	r10, qword ptr [rsp + 0x30]
mov	rcx, rdx
mov	rdx, r8
mov	r8, r9
mov	r9, qword ptr [rsp + 0x28]
mov	rax, qword ptr [rcx]
mov	qword ptr [rsp + 0x28], r10
jmp	qword ptr [rax + 0x10]
jmp	qword ptr [rax + 0x10]
nop	
mov	r10, qword ptr [rsp + 0x30]
mov	rcx, rdx
mov	rdx, r8
mov	r8, r9
mov	r9, qword ptr [rsp + 0x28]
mov	rax, qword ptr [rcx]
mov	qword ptr [rsp + 0x28], r10
jmp	qword ptr [rax + 0x10]
jmp	qword ptr [rax + 0x10]
nop	
mov	r10, qword ptr [rsp + 0x30]
mov	rcx, rdx
mov	rdx, r8
mov	r8, r9
mov	r9, qword ptr [rsp + 0x28]
mov	rax, qword ptr [rcx]
mov	qword ptr [rsp + 0x28], r10
jmp	qword ptr [rax + 0x10]
jmp	qword ptr [rax + 0x10]
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rdx]
mov	rbx, r8
lea	rcx, [rsp + 0x28]
mov	r8, r9
mov	r9, qword ptr [rsp + 0x60]
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, qword ptr [rbx + 0x20]
test	rax, rax
je	0x14007d8d9
je	0x14007d8d9
mov	rcx, rbx
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x28]
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
lea	r8, [rax - 8]
test	edx, edx
js	0x14007d938
js	0x14007d938
mov	rdx, qword ptr [rip + 0x40d3c]
mov	ecx, dword ptr [rdx]
test	ecx, ecx
jne	0x14007d978
jne	0x14007d978
add	dword ptr [rax - 8], 1
mov	rcx, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rcx - 0x18]
mov	qword ptr [rbx + 8], rax
lea	rax, [rip - 0xa05]
mov	qword ptr [rbx + 0x20], rax
mov	eax, dword ptr [rdx]
test	eax, eax
jne	0x14007d950
jne	0x14007d950
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007d95e
jle	0x14007d95e
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	word ptr [rax + rax]
lea	rdx, [rsp + 0x27]
xor	r8d, r8d
call	0x140072590
call	0x140072590
mov	rdx, qword ptr [rip + 0x40ce4]
jmp	0x14007d8fe
jmp	0x14007d8fe
nop	
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007d92c
jg	0x14007d92c
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
nop	
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
lock add	dword ptr [r8], 1
jmp	0x14007d8fe
jmp	0x14007d8fe
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x28]
lea	rdx, [rsp + 0x26]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x48
mov	rax, qword ptr [rdx]
mov	rbx, r8
lea	rsi, [rsp + 0x20]
mov	r8, r9
mov	r9, qword ptr [rsp + 0x80]
mov	rcx, rsi
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, qword ptr [rbx + 0x20]
test	rax, rax
je	0x14007d9e0
je	0x14007d9e0
mov	rcx, rbx
call	rax
call	rax
lea	rax, [rbx + 0x10]
mov	rdx, qword ptr [rsp + 0x20]
mov	r8, qword ptr [rsp + 0x28]
mov	rcx, rbx
mov	qword ptr [rbx], rax
add	r8, rdx
call	0x14009d7c0
call	0x14009d7c0
lea	rax, [rip - 0xa93]
mov	rcx, qword ptr [rsp + 0x20]
mov	qword ptr [rbx + 0x20], rax
lea	rax, [rsp + 0x30]
cmp	rcx, rax
je	0x14007da1c
je	0x14007da1c
call	0x1400b2be0
call	0x1400b2be0
nop	
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
mov	rbx, rax
mov	rcx, rsi
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rdx]
mov	rbx, r8
lea	rcx, [rsp + 0x28]
mov	r8, r9
mov	r9, qword ptr [rsp + 0x60]
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, qword ptr [rbx + 0x20]
test	rax, rax
je	0x14007da69
je	0x14007da69
mov	rcx, rbx
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x28]
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
lea	r8, [rax - 8]
test	edx, edx
js	0x14007dac8
js	0x14007dac8
mov	rdx, qword ptr [rip + 0x40bac]
mov	ecx, dword ptr [rdx]
test	ecx, ecx
jne	0x14007db08
jne	0x14007db08
add	dword ptr [rax - 8], 1
mov	rcx, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rcx - 0x18]
mov	qword ptr [rbx + 8], rax
lea	rax, [rip - 0xb15]
mov	qword ptr [rbx + 0x20], rax
mov	eax, dword ptr [rdx]
test	eax, eax
jne	0x14007dae0
jne	0x14007dae0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007daee
jle	0x14007daee
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	word ptr [rax + rax]
lea	rdx, [rsp + 0x27]
xor	r8d, r8d
call	0x140069010
call	0x140069010
mov	rdx, qword ptr [rip + 0x40b54]
jmp	0x14007da8e
jmp	0x14007da8e
nop	
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007dabc
jg	0x14007dabc
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140068ef0
call	0x140068ef0
nop	
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
lock add	dword ptr [r8], 1
jmp	0x14007da8e
jmp	0x14007da8e
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x28]
lea	rdx, [rsp + 0x26]
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x48
mov	rax, qword ptr [rdx]
mov	rbx, r8
lea	rsi, [rsp + 0x20]
mov	r8, r9
mov	r9, qword ptr [rsp + 0x80]
mov	rcx, rsi
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rax, qword ptr [rbx + 0x20]
test	rax, rax
je	0x14007db70
je	0x14007db70
mov	rcx, rbx
call	rax
call	rax
lea	rax, [rbx + 0x10]
mov	rdx, qword ptr [rsp + 0x20]
mov	rcx, rbx
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rsp + 0x28]
lea	r8, [rdx + rax*2]
call	0x1400a1700
call	0x1400a1700
lea	rax, [rip - 0xba4]
mov	rcx, qword ptr [rsp + 0x20]
mov	qword ptr [rbx + 0x20], rax
lea	rax, [rsp + 0x30]
cmp	rcx, rax
je	0x14007dbad
je	0x14007dbad
call	0x1400b2be0
call	0x1400b2be0
nop	
add	rsp, 0x48
pop	rbx
pop	rsi
ret	
ret	
mov	rbx, rax
mov	rcx, rsi
call	0x1400a1050
call	0x1400a1050
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	rcx, rdx
jmp	qword ptr [rax + 0x10]
jmp	qword ptr [rax + 0x10]
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	rcx, rdx
jmp	qword ptr [rax + 0x10]
jmp	qword ptr [rax + 0x10]
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	rcx, rdx
jmp	qword ptr [rax + 0x10]
jmp	qword ptr [rax + 0x10]
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	rcx, rdx
jmp	qword ptr [rax + 0x10]
jmp	qword ptr [rax + 0x10]
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rbx, r8
mov	rsi, rdx
lea	rdi, [rsp + 0x28]
mov	rcx, rdx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rcx, rsi
mov	byte ptr [rbx + 0x48], al
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rcx, rdi
mov	byte ptr [rbx + 0x88], 1
mov	rdx, rsi
mov	byte ptr [rbx + 0x49], al
mov	rax, qword ptr [rsi]
mov	qword ptr [rbx + 0x10], 0
mov	qword ptr [rbx + 0x28], 0
mov	qword ptr [rbx + 0x38], 0
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rax, qword ptr [rsp + 0x28]
mov	r12, qword ptr [rax - 0x18]
lea	rcx, [r12 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r12
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001b700
call	0x14001b700
mov	byte ptr [rbp + r12], 0
mov	rcx, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x18], r12
mov	r12, qword ptr [rip + 0x40989]
mov	qword ptr [rbx + 0x10], rbp
mov	r8d, dword ptr [r12]
test	r8d, r8d
jne	0x14007dd90
jne	0x14007dd90
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007dda2
jle	0x14007dda2
mov	rax, qword ptr [rsi]
mov	rcx, rdi
mov	rdx, rsi
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	rax, qword ptr [rsp + 0x28]
mov	r13, qword ptr [rax - 0x18]
lea	rcx, [r13 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001b700
call	0x14001b700
mov	edx, dword ptr [r12]
mov	rcx, qword ptr [rsp + 0x28]
mov	byte ptr [rbp + r13], 0
mov	qword ptr [rbx + 0x28], rbp
mov	qword ptr [rbx + 0x30], r13
test	edx, edx
jne	0x14007dde8
jne	0x14007dde8
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007ddfa
jle	0x14007ddfa
mov	rax, qword ptr [rsi]
mov	rcx, rdi
mov	rdx, rsi
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	rax, qword ptr [rsp + 0x28]
mov	rbp, qword ptr [rax - 0x18]
lea	rcx, [rbp + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, rbp
mov	rdx, rax
mov	rcx, rdi
mov	rsi, rax
call	0x14001b700
call	0x14001b700
mov	eax, dword ptr [r12]
mov	rcx, qword ptr [rsp + 0x28]
mov	byte ptr [rsi + rbp], 0
mov	qword ptr [rbx + 0x38], rsi
mov	qword ptr [rbx + 0x40], rbp
test	eax, eax
jne	0x14007ddb8
jne	0x14007ddb8
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007ddc6
jle	0x14007ddc6
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007dcc9
jg	0x14007dcc9
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x14007dcc9
jmp	0x14007dcc9
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007dd83
jg	0x14007dd83
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
nop	
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007dd2b
jg	0x14007dd2b
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x14007dd2b
jmp	0x14007dd2b
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x28]
lea	rdx, [rsp + 0x27]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
jmp	0x14007de0d
jmp	0x14007de0d
jmp	0x14007de0d
jmp	0x14007de0d
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
mov	rax, qword ptr [rdx]
mov	rbx, r8
mov	rsi, rdx
lea	rdi, [rsp + 0x20]
mov	rcx, rdx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rcx, rsi
mov	byte ptr [rbx + 0x48], al
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rcx, rdi
mov	byte ptr [rbx + 0x88], 1
mov	rdx, rsi
mov	byte ptr [rbx + 0x49], al
mov	rax, qword ptr [rsi]
mov	qword ptr [rbx + 0x10], 0
mov	qword ptr [rbx + 0x28], 0
mov	qword ptr [rbx + 0x38], 0
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	r12, qword ptr [rsp + 0x28]
lea	rcx, [r12 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r12
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026260
call	0x140026260
mov	rcx, qword ptr [rsp + 0x20]
mov	byte ptr [rbp + r12], 0
mov	qword ptr [rbx + 0x18], r12
lea	r12, [rsp + 0x30]
mov	qword ptr [rbx + 0x10], rbp
cmp	rcx, r12
je	0x14007decf
je	0x14007decf
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rcx, rdi
mov	rdx, rsi
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	r13, qword ptr [rsp + 0x28]
lea	rcx, [r13 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026260
call	0x140026260
mov	rcx, qword ptr [rsp + 0x20]
mov	byte ptr [rbp + r13], 0
mov	qword ptr [rbx + 0x28], rbp
mov	qword ptr [rbx + 0x30], r13
cmp	rcx, r12
je	0x14007df1a
je	0x14007df1a
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rcx, rdi
mov	rdx, rsi
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	rbp, qword ptr [rsp + 0x28]
lea	rcx, [rbp + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, rbp
mov	rdx, rax
mov	rcx, rdi
mov	rsi, rax
call	0x140026260
call	0x140026260
mov	rcx, qword ptr [rsp + 0x20]
mov	byte ptr [rsi + rbp], 0
mov	qword ptr [rbx + 0x38], rsi
mov	qword ptr [rbx + 0x40], rbp
cmp	rcx, r12
je	0x14007df64
je	0x14007df64
call	0x1400b2be0
call	0x1400b2be0
nop	
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rbx, rax
mov	rcx, rdi
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
jmp	0x14007df71
jmp	0x14007df71
jmp	0x14007df71
jmp	0x14007df71
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rdx]
mov	rbx, r8
mov	rsi, rdx
lea	rdi, [rsp + 0x28]
mov	rcx, rdx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rcx, rsi
mov	word ptr [rbx + 0x48], ax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rcx, rdi
mov	byte ptr [rbx + 0xc8], 1
mov	rdx, rsi
mov	word ptr [rbx + 0x4a], ax
mov	rax, qword ptr [rsi]
mov	qword ptr [rbx + 0x10], 0
mov	qword ptr [rbx + 0x28], 0
mov	qword ptr [rbx + 0x38], 0
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rax, qword ptr [rsp + 0x28]
mov	r12, qword ptr [rax - 0x18]
lea	rcx, [r12 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r12
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001b700
call	0x14001b700
mov	byte ptr [rbp + r12], 0
mov	rcx, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x18], r12
mov	r12, qword ptr [rip + 0x40605]
mov	qword ptr [rbx + 0x10], rbp
mov	r9d, dword ptr [r12]
test	r9d, r9d
jne	0x14007e150
jne	0x14007e150
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007e162
jle	0x14007e162
mov	rax, qword ptr [rsi]
mov	rdx, rsi
mov	rcx, rdi
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	rax, qword ptr [rsp + 0x28]
mov	r14, qword ptr [rax - 0x18]
movabs	rax, 0x3ffffffffffffffc
lea	r13, [r14 + 1]
cmp	rax, r13
jb	0x14007e1f2
jb	0x14007e1f2
add	r13, r13
mov	rcx, r13
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r14
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001a690
call	0x14001a690
mov	r8d, dword ptr [r12]
xor	ecx, ecx
mov	qword ptr [rbx + 0x28], rbp
mov	word ptr [rbp + r13 - 2], cx
mov	rcx, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x30], r14
test	r8d, r8d
jne	0x14007e1a8
jne	0x14007e1a8
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007e1ba
jle	0x14007e1ba
mov	rax, qword ptr [rsi]
mov	rdx, rsi
mov	rcx, rdi
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	rax, qword ptr [rsp + 0x28]
mov	r13, qword ptr [rax - 0x18]
movabs	rax, 0x3ffffffffffffffc
lea	rbp, [r13 + 1]
cmp	rax, rbp
jb	0x14007e1cd
jb	0x14007e1cd
add	rbp, rbp
mov	rcx, rbp
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	rsi, rax
call	0x14001a690
call	0x14001a690
mov	edx, dword ptr [r12]
xor	eax, eax
mov	rcx, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x38], rsi
mov	word ptr [rsi + rbp - 2], ax
mov	qword ptr [rbx + 0x40], r13
test	edx, edx
jne	0x14007e178
jne	0x14007e178
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007e186
jle	0x14007e186
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007e04d
jg	0x14007e04d
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x14007e04d
jmp	0x14007e04d
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007e13f
jg	0x14007e13f
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140068ef0
call	0x140068ef0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007e0cb
jg	0x14007e0cb
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140068ef0
call	0x140068ef0
jmp	0x14007e0cb
jmp	0x14007e0cb
call	0x1400b41c0
call	0x1400b41c0
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x28]
lea	rdx, [rsp + 0x27]
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
jmp	0x14007e1d2
jmp	0x14007e1d2
call	0x1400b41c0
call	0x1400b41c0
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x28]
lea	rdx, [rsp + 0x27]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
mov	rax, qword ptr [rdx]
mov	rbx, r8
mov	rsi, rdx
lea	rdi, [rsp + 0x20]
mov	rcx, rdx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rcx, rsi
mov	word ptr [rbx + 0x48], ax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rcx, rdi
mov	byte ptr [rbx + 0xc8], 1
mov	rdx, rsi
mov	word ptr [rbx + 0x4a], ax
mov	rax, qword ptr [rsi]
mov	qword ptr [rbx + 0x10], 0
mov	qword ptr [rbx + 0x28], 0
mov	qword ptr [rbx + 0x38], 0
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	r12, qword ptr [rsp + 0x28]
lea	rcx, [r12 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r12
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026260
call	0x140026260
mov	rcx, qword ptr [rsp + 0x20]
mov	byte ptr [rbp + r12], 0
mov	qword ptr [rbx + 0x18], r12
lea	r12, [rsp + 0x30]
mov	qword ptr [rbx + 0x10], rbp
cmp	rcx, r12
je	0x14007e2c3
je	0x14007e2c3
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rdx, rsi
mov	rcx, rdi
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	r14, qword ptr [rsp + 0x28]
movabs	rax, 0x3ffffffffffffffc
lea	r13, [r14 + 1]
cmp	rax, r13
jb	0x14007e3c7
jb	0x14007e3c7
add	r13, r13
mov	rcx, r13
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r14
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026fd0
call	0x140026fd0
mov	rcx, qword ptr [rsp + 0x20]
xor	edx, edx
mov	qword ptr [rbx + 0x28], rbp
mov	word ptr [rbp + r13 - 2], dx
mov	qword ptr [rbx + 0x30], r14
cmp	rcx, r12
je	0x14007e329
je	0x14007e329
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rdx, rsi
mov	rcx, rdi
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	r13, qword ptr [rsp + 0x28]
movabs	rax, 0x3ffffffffffffffc
lea	rbp, [r13 + 1]
cmp	rax, rbp
jb	0x14007e3c0
jb	0x14007e3c0
add	rbp, rbp
mov	rcx, rbp
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	rsi, rax
call	0x140026fd0
call	0x140026fd0
mov	rcx, qword ptr [rsp + 0x20]
xor	eax, eax
mov	qword ptr [rbx + 0x38], rsi
mov	word ptr [rsi + rbp - 2], ax
mov	qword ptr [rbx + 0x40], r13
cmp	rcx, r12
je	0x14007e38b
je	0x14007e38b
call	0x1400b2be0
call	0x1400b2be0
nop	
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
mov	rbx, rax
mov	rcx, rdi
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
mov	rcx, rdi
call	0x1400a1050
call	0x1400a1050
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b41c0
call	0x1400b41c0
jmp	0x14007e3ad
jmp	0x14007e3ad
call	0x1400b41c0
call	0x1400b41c0
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rbx, r8
mov	rsi, rdx
lea	rdi, [rsp + 0x28]
mov	rcx, rdx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rcx, rsi
mov	byte ptr [rbx + 0x21], al
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rcx, rsi
mov	byte ptr [rbx + 0x22], al
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	rcx, rdi
mov	byte ptr [rbx + 0x6f], 1
mov	rdx, rsi
mov	dword ptr [rbx + 0x58], eax
mov	rax, qword ptr [rsi]
mov	qword ptr [rbx + 0x10], 0
mov	qword ptr [rbx + 0x28], 0
mov	qword ptr [rbx + 0x38], 0
mov	qword ptr [rbx + 0x48], 0
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rax, qword ptr [rsp + 0x28]
mov	r12, qword ptr [rax - 0x18]
lea	rcx, [r12 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r12
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001b700
call	0x14001b700
mov	byte ptr [rbp + r12], 0
mov	rcx, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x18], r12
mov	r12, qword ptr [rip + 0x401b8]
mov	qword ptr [rbx + 0x10], rbp
mov	r9d, dword ptr [r12]
test	r9d, r9d
jne	0x14007e5e0
jne	0x14007e5e0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007e5f2
jle	0x14007e5f2
mov	rax, qword ptr [rsi]
mov	rcx, rdi
mov	rdx, rsi
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	rax, qword ptr [rsp + 0x28]
mov	r13, qword ptr [rax - 0x18]
lea	rcx, [r13 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001b700
call	0x14001b700
mov	r8d, dword ptr [r12]
mov	rcx, qword ptr [rsp + 0x28]
mov	byte ptr [rbp + r13], 0
mov	qword ptr [rbx + 0x28], rbp
mov	qword ptr [rbx + 0x30], r13
test	r8d, r8d
jne	0x14007e658
jne	0x14007e658
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007e66a
jle	0x14007e66a
mov	rax, qword ptr [rsi]
mov	rcx, rdi
mov	rdx, rsi
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	rax, qword ptr [rsp + 0x28]
mov	r13, qword ptr [rax - 0x18]
lea	rcx, [r13 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001b700
call	0x14001b700
mov	edx, dword ptr [r12]
mov	rcx, qword ptr [rsp + 0x28]
mov	byte ptr [rbp + r13], 0
mov	qword ptr [rbx + 0x38], rbp
mov	qword ptr [rbx + 0x40], r13
test	edx, edx
jne	0x14007e630
jne	0x14007e630
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007e642
jle	0x14007e642
mov	rax, qword ptr [rsi]
mov	rcx, rdi
mov	rdx, rsi
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
mov	rax, qword ptr [rsp + 0x28]
mov	r13, qword ptr [rax - 0x18]
lea	rcx, [r13 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001b700
call	0x14001b700
mov	eax, dword ptr [r12]
mov	rcx, qword ptr [rsp + 0x28]
mov	byte ptr [rbp + r13], 0
mov	qword ptr [rbx + 0x48], rbp
mov	qword ptr [rbx + 0x50], r13
test	eax, eax
jne	0x14007e608
jne	0x14007e608
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007e616
jle	0x14007e616
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rcx, rsi
mov	dword ptr [rbx + 0x5c], eax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	dword ptr [rbx + 0x60], eax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007e49a
jg	0x14007e49a
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x14007e49a
jmp	0x14007e49a
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007e5b9
jg	0x14007e5b9
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x14007e5b9
jmp	0x14007e5b9
nop	word ptr cs:[rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007e55f
jg	0x14007e55f
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x14007e55f
jmp	0x14007e55f
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007e4fd
jg	0x14007e4fd
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x14007e4fd
jmp	0x14007e4fd
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x28]
lea	rdx, [rsp + 0x27]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
jmp	0x14007e67d
jmp	0x14007e67d
jmp	0x14007e67d
jmp	0x14007e67d
jmp	0x14007e67d
jmp	0x14007e67d
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
mov	rax, qword ptr [rdx]
mov	rbx, r8
mov	rsi, rdx
lea	rdi, [rsp + 0x20]
mov	rcx, rdx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rcx, rsi
mov	byte ptr [rbx + 0x21], al
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rcx, rsi
mov	byte ptr [rbx + 0x22], al
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	rcx, rdi
mov	byte ptr [rbx + 0x6f], 1
mov	rdx, rsi
mov	dword ptr [rbx + 0x58], eax
mov	rax, qword ptr [rsi]
mov	qword ptr [rbx + 0x10], 0
mov	qword ptr [rbx + 0x28], 0
mov	qword ptr [rbx + 0x38], 0
mov	qword ptr [rbx + 0x48], 0
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	r12, qword ptr [rsp + 0x28]
lea	rcx, [r12 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r12
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026260
call	0x140026260
mov	rcx, qword ptr [rsp + 0x20]
mov	byte ptr [rbp + r12], 0
mov	qword ptr [rbx + 0x18], r12
lea	r12, [rsp + 0x30]
mov	qword ptr [rbx + 0x10], rbp
cmp	rcx, r12
je	0x14007e760
je	0x14007e760
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rcx, rdi
mov	rdx, rsi
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	r13, qword ptr [rsp + 0x28]
lea	rcx, [r13 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026260
call	0x140026260
mov	rcx, qword ptr [rsp + 0x20]
mov	byte ptr [rbp + r13], 0
mov	qword ptr [rbx + 0x28], rbp
mov	qword ptr [rbx + 0x30], r13
cmp	rcx, r12
je	0x14007e7ab
je	0x14007e7ab
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rcx, rdi
mov	rdx, rsi
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	r13, qword ptr [rsp + 0x28]
lea	rcx, [r13 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026260
call	0x140026260
mov	rcx, qword ptr [rsp + 0x20]
mov	byte ptr [rbp + r13], 0
mov	qword ptr [rbx + 0x38], rbp
mov	qword ptr [rbx + 0x40], r13
cmp	rcx, r12
je	0x14007e7f6
je	0x14007e7f6
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rcx, rdi
mov	rdx, rsi
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
mov	r13, qword ptr [rsp + 0x28]
lea	rcx, [r13 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026260
call	0x140026260
mov	rcx, qword ptr [rsp + 0x20]
mov	byte ptr [rbp + r13], 0
mov	qword ptr [rbx + 0x48], rbp
mov	qword ptr [rbx + 0x50], r13
cmp	rcx, r12
je	0x14007e841
je	0x14007e841
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rcx, rsi
mov	dword ptr [rbx + 0x5c], eax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	dword ptr [rbx + 0x60], eax
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rbx, rax
mov	rcx, rdi
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
jmp	0x14007e866
jmp	0x14007e866
jmp	0x14007e866
jmp	0x14007e866
jmp	0x14007e866
jmp	0x14007e866
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rdx]
mov	rbx, r8
mov	rsi, rdx
lea	rdi, [rsp + 0x28]
mov	rcx, rdx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rcx, rsi
mov	byte ptr [rbx + 0x21], al
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rcx, rsi
mov	byte ptr [rbx + 0x22], al
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	rcx, rdi
mov	byte ptr [rbx + 0x6f], 1
mov	rdx, rsi
mov	dword ptr [rbx + 0x58], eax
mov	rax, qword ptr [rsi]
mov	qword ptr [rbx + 0x10], 0
mov	qword ptr [rbx + 0x28], 0
mov	qword ptr [rbx + 0x38], 0
mov	qword ptr [rbx + 0x48], 0
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rax, qword ptr [rsp + 0x28]
mov	r12, qword ptr [rax - 0x18]
lea	rcx, [r12 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r12
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001b700
call	0x14001b700
mov	byte ptr [rbp + r12], 0
mov	rcx, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x18], r12
mov	r12, qword ptr [rip + 0x3fd08]
mov	qword ptr [rbx + 0x10], rbp
mov	r9d, dword ptr [r12]
test	r9d, r9d
jne	0x14007ea90
jne	0x14007ea90
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007eaa2
jle	0x14007eaa2
mov	rax, qword ptr [rsi]
mov	rcx, rdi
mov	rdx, rsi
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	rax, qword ptr [rsp + 0x28]
mov	r13, qword ptr [rax - 0x18]
lea	rcx, [r13 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001b700
call	0x14001b700
mov	r8d, dword ptr [r12]
mov	rcx, qword ptr [rsp + 0x28]
mov	byte ptr [rbp + r13], 0
mov	qword ptr [rbx + 0x28], rbp
mov	qword ptr [rbx + 0x30], r13
test	r8d, r8d
jne	0x14007eb08
jne	0x14007eb08
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007eb1a
jle	0x14007eb1a
mov	rax, qword ptr [rsi]
mov	rcx, rdi
mov	rdx, rsi
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	rax, qword ptr [rsp + 0x28]
mov	r13, qword ptr [rax - 0x18]
lea	rcx, [r13 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001b700
call	0x14001b700
mov	edx, dword ptr [r12]
mov	rcx, qword ptr [rsp + 0x28]
mov	byte ptr [rbp + r13], 0
mov	qword ptr [rbx + 0x38], rbp
mov	qword ptr [rbx + 0x40], r13
test	edx, edx
jne	0x14007eae0
jne	0x14007eae0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007eaf2
jle	0x14007eaf2
mov	rax, qword ptr [rsi]
mov	rcx, rdi
mov	rdx, rsi
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
mov	rax, qword ptr [rsp + 0x28]
mov	r13, qword ptr [rax - 0x18]
lea	rcx, [r13 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001b700
call	0x14001b700
mov	eax, dword ptr [r12]
mov	rcx, qword ptr [rsp + 0x28]
mov	byte ptr [rbp + r13], 0
mov	qword ptr [rbx + 0x48], rbp
mov	qword ptr [rbx + 0x50], r13
test	eax, eax
jne	0x14007eab8
jne	0x14007eab8
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007eac6
jle	0x14007eac6
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rcx, rsi
mov	dword ptr [rbx + 0x5c], eax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	dword ptr [rbx + 0x60], eax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007e94a
jg	0x14007e94a
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x14007e94a
jmp	0x14007e94a
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007ea69
jg	0x14007ea69
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x14007ea69
jmp	0x14007ea69
nop	word ptr cs:[rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007ea0f
jg	0x14007ea0f
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x14007ea0f
jmp	0x14007ea0f
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007e9ad
jg	0x14007e9ad
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x14007e9ad
jmp	0x14007e9ad
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x28]
lea	rdx, [rsp + 0x27]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
jmp	0x14007eb2d
jmp	0x14007eb2d
jmp	0x14007eb2d
jmp	0x14007eb2d
jmp	0x14007eb2d
jmp	0x14007eb2d
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
mov	rax, qword ptr [rdx]
mov	rbx, r8
mov	rsi, rdx
lea	rdi, [rsp + 0x20]
mov	rcx, rdx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rcx, rsi
mov	byte ptr [rbx + 0x21], al
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rcx, rsi
mov	byte ptr [rbx + 0x22], al
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	rcx, rdi
mov	byte ptr [rbx + 0x6f], 1
mov	rdx, rsi
mov	dword ptr [rbx + 0x58], eax
mov	rax, qword ptr [rsi]
mov	qword ptr [rbx + 0x10], 0
mov	qword ptr [rbx + 0x28], 0
mov	qword ptr [rbx + 0x38], 0
mov	qword ptr [rbx + 0x48], 0
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	r12, qword ptr [rsp + 0x28]
lea	rcx, [r12 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r12
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026260
call	0x140026260
mov	rcx, qword ptr [rsp + 0x20]
mov	byte ptr [rbp + r12], 0
mov	qword ptr [rbx + 0x18], r12
lea	r12, [rsp + 0x30]
mov	qword ptr [rbx + 0x10], rbp
cmp	rcx, r12
je	0x14007ec10
je	0x14007ec10
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rcx, rdi
mov	rdx, rsi
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	r13, qword ptr [rsp + 0x28]
lea	rcx, [r13 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026260
call	0x140026260
mov	rcx, qword ptr [rsp + 0x20]
mov	byte ptr [rbp + r13], 0
mov	qword ptr [rbx + 0x28], rbp
mov	qword ptr [rbx + 0x30], r13
cmp	rcx, r12
je	0x14007ec5b
je	0x14007ec5b
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rcx, rdi
mov	rdx, rsi
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	r13, qword ptr [rsp + 0x28]
lea	rcx, [r13 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026260
call	0x140026260
mov	rcx, qword ptr [rsp + 0x20]
mov	byte ptr [rbp + r13], 0
mov	qword ptr [rbx + 0x38], rbp
mov	qword ptr [rbx + 0x40], r13
cmp	rcx, r12
je	0x14007eca6
je	0x14007eca6
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rcx, rdi
mov	rdx, rsi
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
mov	r13, qword ptr [rsp + 0x28]
lea	rcx, [r13 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026260
call	0x140026260
mov	rcx, qword ptr [rsp + 0x20]
mov	byte ptr [rbp + r13], 0
mov	qword ptr [rbx + 0x48], rbp
mov	qword ptr [rbx + 0x50], r13
cmp	rcx, r12
je	0x14007ecf1
je	0x14007ecf1
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rcx, rsi
mov	dword ptr [rbx + 0x5c], eax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	dword ptr [rbx + 0x60], eax
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rbx, rax
mov	rcx, rdi
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
jmp	0x14007ed16
jmp	0x14007ed16
jmp	0x14007ed16
jmp	0x14007ed16
jmp	0x14007ed16
jmp	0x14007ed16
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rdx]
mov	rbx, r8
mov	rsi, rdx
lea	rdi, [rsp + 0x28]
mov	rcx, rdx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rcx, rsi
mov	word ptr [rbx + 0x22], ax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rcx, rsi
mov	word ptr [rbx + 0x24], ax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	rcx, rdi
mov	byte ptr [rbx + 0x7a], 1
mov	rdx, rsi
mov	dword ptr [rbx + 0x58], eax
mov	rax, qword ptr [rsi]
mov	qword ptr [rbx + 0x10], 0
mov	qword ptr [rbx + 0x28], 0
mov	qword ptr [rbx + 0x38], 0
mov	qword ptr [rbx + 0x48], 0
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rax, qword ptr [rsp + 0x28]
mov	r12, qword ptr [rax - 0x18]
lea	rcx, [r12 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r12
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001b700
call	0x14001b700
mov	r13, qword ptr [rip + 0x3f863]
mov	rcx, qword ptr [rsp + 0x28]
mov	byte ptr [rbp + r12], 0
mov	qword ptr [rbx + 0x10], rbp
mov	r11d, dword ptr [r13]
mov	qword ptr [rbx + 0x18], r12
test	r11d, r11d
jne	0x14007efa0
jne	0x14007efa0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007efb2
jle	0x14007efb2
mov	rax, qword ptr [rsi]
mov	rdx, rsi
mov	rcx, rdi
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	rax, qword ptr [rsp + 0x28]
mov	r14, qword ptr [rax - 0x18]
movabs	rax, 0x3ffffffffffffffc
lea	r12, [r14 + 1]
cmp	rax, r12
jb	0x14007f087
jb	0x14007f087
add	r12, r12
mov	rcx, r12
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r14
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001a690
call	0x14001a690
mov	r10d, dword ptr [r13]
xor	r9d, r9d
mov	rcx, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x28], rbp
mov	word ptr [rbp + r12 - 2], r9w
mov	qword ptr [rbx + 0x30], r14
test	r10d, r10d
jne	0x14007f018
jne	0x14007f018
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007f02a
jle	0x14007f02a
mov	rax, qword ptr [rsi]
mov	rdx, rsi
mov	rcx, rdi
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	rax, qword ptr [rsp + 0x28]
mov	r14, qword ptr [rax - 0x18]
movabs	rax, 0x3ffffffffffffffc
lea	r12, [r14 + 1]
cmp	rax, r12
jb	0x14007f03d
jb	0x14007f03d
add	r12, r12
mov	rcx, r12
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r14
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001a690
call	0x14001a690
mov	r8d, dword ptr [r13]
xor	ecx, ecx
mov	qword ptr [rbx + 0x38], rbp
mov	word ptr [rbp + r12 - 2], cx
mov	rcx, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x40], r14
test	r8d, r8d
jne	0x14007eff0
jne	0x14007eff0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007f002
jle	0x14007f002
mov	rax, qword ptr [rsi]
mov	rdx, rsi
mov	rcx, rdi
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
mov	rax, qword ptr [rsp + 0x28]
mov	r14, qword ptr [rax - 0x18]
movabs	rax, 0x3ffffffffffffffc
lea	r12, [r14 + 1]
cmp	rax, r12
jb	0x14007f080
jb	0x14007f080
add	r12, r12
mov	rcx, r12
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r14
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001a690
call	0x14001a690
mov	edx, dword ptr [r13]
xor	eax, eax
mov	rcx, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x48], rbp
mov	word ptr [rbp + r12 - 2], ax
mov	qword ptr [rbx + 0x50], r14
test	edx, edx
jne	0x14007efc8
jne	0x14007efc8
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007efd6
jle	0x14007efd6
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rcx, rsi
mov	dword ptr [rbx + 0x5c], eax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	dword ptr [rbx + 0x60], eax
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007edfe
jg	0x14007edfe
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x14007edfe
jmp	0x14007edfe
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007ef70
jg	0x14007ef70
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140068ef0
call	0x140068ef0
jmp	0x14007ef70
jmp	0x14007ef70
nop	word ptr cs:[rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007eefb
jg	0x14007eefb
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140068ef0
call	0x140068ef0
jmp	0x14007eefb
jmp	0x14007eefb
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007ee7d
jg	0x14007ee7d
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140068ef0
call	0x140068ef0
jmp	0x14007ee7d
jmp	0x14007ee7d
call	0x1400b41c0
call	0x1400b41c0
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x28]
lea	rdx, [rsp + 0x27]
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
jmp	0x14007f042
jmp	0x14007f042
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x28]
lea	rdx, [rsp + 0x27]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b41c0
call	0x1400b41c0
jmp	0x14007f042
jmp	0x14007f042
call	0x1400b41c0
call	0x1400b41c0
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
mov	rax, qword ptr [rdx]
mov	rbx, r8
mov	rsi, rdx
lea	rdi, [rsp + 0x20]
mov	rcx, rdx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rcx, rsi
mov	word ptr [rbx + 0x22], ax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rcx, rsi
mov	word ptr [rbx + 0x24], ax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	rcx, rdi
mov	byte ptr [rbx + 0x7a], 1
mov	rdx, rsi
mov	dword ptr [rbx + 0x58], eax
mov	rax, qword ptr [rsi]
mov	qword ptr [rbx + 0x10], 0
mov	qword ptr [rbx + 0x28], 0
mov	qword ptr [rbx + 0x38], 0
mov	qword ptr [rbx + 0x48], 0
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	r12, qword ptr [rsp + 0x28]
lea	rcx, [r12 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r12
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026260
call	0x140026260
mov	rcx, qword ptr [rsp + 0x20]
lea	r13, [rsp + 0x30]
mov	byte ptr [rbp + r12], 0
mov	qword ptr [rbx + 0x10], rbp
mov	qword ptr [rbx + 0x18], r12
cmp	rcx, r13
je	0x14007f144
je	0x14007f144
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rdx, rsi
mov	rcx, rdi
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	r14, qword ptr [rsp + 0x28]
movabs	rax, 0x3ffffffffffffffc
lea	r12, [r14 + 1]
cmp	rax, r12
jb	0x14007f2d1
jb	0x14007f2d1
add	r12, r12
mov	rcx, r12
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r14
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026fd0
call	0x140026fd0
xor	ecx, ecx
mov	qword ptr [rbx + 0x28], rbp
mov	word ptr [rbp + r12 - 2], cx
mov	rcx, qword ptr [rsp + 0x20]
mov	qword ptr [rbx + 0x30], r14
cmp	rcx, r13
je	0x14007f1aa
je	0x14007f1aa
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rdx, rsi
mov	rcx, rdi
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	r14, qword ptr [rsp + 0x28]
movabs	rax, 0x3ffffffffffffffc
lea	r12, [r14 + 1]
cmp	rax, r12
jb	0x14007f2ca
jb	0x14007f2ca
add	r12, r12
mov	rcx, r12
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r14
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026fd0
call	0x140026fd0
mov	rcx, qword ptr [rsp + 0x20]
xor	edx, edx
mov	qword ptr [rbx + 0x38], rbp
mov	word ptr [rbp + r12 - 2], dx
mov	qword ptr [rbx + 0x40], r14
cmp	rcx, r13
je	0x14007f210
je	0x14007f210
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rdx, rsi
mov	rcx, rdi
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
mov	r14, qword ptr [rsp + 0x28]
movabs	rax, 0x3ffffffffffffffc
lea	r12, [r14 + 1]
cmp	rax, r12
jb	0x14007f2c3
jb	0x14007f2c3
add	r12, r12
mov	rcx, r12
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r14
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026fd0
call	0x140026fd0
mov	rcx, qword ptr [rsp + 0x20]
xor	eax, eax
mov	qword ptr [rbx + 0x48], rbp
mov	word ptr [rbp + r12 - 2], ax
mov	qword ptr [rbx + 0x50], r14
cmp	rcx, r13
je	0x14007f276
je	0x14007f276
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rcx, rsi
mov	dword ptr [rbx + 0x5c], eax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	dword ptr [rbx + 0x60], eax
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
mov	rbx, rax
mov	rcx, rdi
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
mov	rcx, rdi
call	0x1400a1050
call	0x1400a1050
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b41c0
call	0x1400b41c0
jmp	0x14007f2b0
jmp	0x14007f2b0
call	0x1400b41c0
call	0x1400b41c0
jmp	0x14007f2b0
jmp	0x14007f2b0
call	0x1400b41c0
call	0x1400b41c0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rdx]
mov	rbx, r8
mov	rsi, rdx
lea	rdi, [rsp + 0x28]
mov	rcx, rdx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rcx, rsi
mov	word ptr [rbx + 0x22], ax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rcx, rsi
mov	word ptr [rbx + 0x24], ax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	rcx, rdi
mov	byte ptr [rbx + 0x7a], 1
mov	rdx, rsi
mov	dword ptr [rbx + 0x58], eax
mov	rax, qword ptr [rsi]
mov	qword ptr [rbx + 0x10], 0
mov	qword ptr [rbx + 0x28], 0
mov	qword ptr [rbx + 0x38], 0
mov	qword ptr [rbx + 0x48], 0
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rax, qword ptr [rsp + 0x28]
mov	r12, qword ptr [rax - 0x18]
lea	rcx, [r12 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r12
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001b700
call	0x14001b700
mov	r13, qword ptr [rip + 0x3f2b3]
mov	rcx, qword ptr [rsp + 0x28]
mov	byte ptr [rbp + r12], 0
mov	qword ptr [rbx + 0x10], rbp
mov	r11d, dword ptr [r13]
mov	qword ptr [rbx + 0x18], r12
test	r11d, r11d
jne	0x14007f550
jne	0x14007f550
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007f562
jle	0x14007f562
mov	rax, qword ptr [rsi]
mov	rdx, rsi
mov	rcx, rdi
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	rax, qword ptr [rsp + 0x28]
mov	r14, qword ptr [rax - 0x18]
movabs	rax, 0x3ffffffffffffffc
lea	r12, [r14 + 1]
cmp	rax, r12
jb	0x14007f637
jb	0x14007f637
add	r12, r12
mov	rcx, r12
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r14
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001a690
call	0x14001a690
mov	r10d, dword ptr [r13]
xor	r9d, r9d
mov	rcx, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x28], rbp
mov	word ptr [rbp + r12 - 2], r9w
mov	qword ptr [rbx + 0x30], r14
test	r10d, r10d
jne	0x14007f5c8
jne	0x14007f5c8
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007f5da
jle	0x14007f5da
mov	rax, qword ptr [rsi]
mov	rdx, rsi
mov	rcx, rdi
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	rax, qword ptr [rsp + 0x28]
mov	r14, qword ptr [rax - 0x18]
movabs	rax, 0x3ffffffffffffffc
lea	r12, [r14 + 1]
cmp	rax, r12
jb	0x14007f5ed
jb	0x14007f5ed
add	r12, r12
mov	rcx, r12
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r14
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001a690
call	0x14001a690
mov	r8d, dword ptr [r13]
xor	ecx, ecx
mov	qword ptr [rbx + 0x38], rbp
mov	word ptr [rbp + r12 - 2], cx
mov	rcx, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x40], r14
test	r8d, r8d
jne	0x14007f5a0
jne	0x14007f5a0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007f5b2
jle	0x14007f5b2
mov	rax, qword ptr [rsi]
mov	rdx, rsi
mov	rcx, rdi
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
mov	rax, qword ptr [rsp + 0x28]
mov	r14, qword ptr [rax - 0x18]
movabs	rax, 0x3ffffffffffffffc
lea	r12, [r14 + 1]
cmp	rax, r12
jb	0x14007f630
jb	0x14007f630
add	r12, r12
mov	rcx, r12
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r14
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x14001a690
call	0x14001a690
mov	edx, dword ptr [r13]
xor	eax, eax
mov	rcx, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x48], rbp
mov	word ptr [rbp + r12 - 2], ax
mov	qword ptr [rbx + 0x50], r14
test	edx, edx
jne	0x14007f578
jne	0x14007f578
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14007f586
jle	0x14007f586
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rcx, rsi
mov	dword ptr [rbx + 0x5c], eax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	dword ptr [rbx + 0x60], eax
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007f3ae
jg	0x14007f3ae
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x14007f3ae
jmp	0x14007f3ae
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007f520
jg	0x14007f520
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140068ef0
call	0x140068ef0
jmp	0x14007f520
jmp	0x14007f520
nop	word ptr cs:[rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007f4ab
jg	0x14007f4ab
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140068ef0
call	0x140068ef0
jmp	0x14007f4ab
jmp	0x14007f4ab
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14007f42d
jg	0x14007f42d
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140068ef0
call	0x140068ef0
jmp	0x14007f42d
jmp	0x14007f42d
call	0x1400b41c0
call	0x1400b41c0
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x28]
lea	rdx, [rsp + 0x27]
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
jmp	0x14007f5f2
jmp	0x14007f5f2
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x28]
lea	rdx, [rsp + 0x27]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b41c0
call	0x1400b41c0
jmp	0x14007f5f2
jmp	0x14007f5f2
call	0x1400b41c0
call	0x1400b41c0
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
mov	rax, qword ptr [rdx]
mov	rbx, r8
mov	rsi, rdx
lea	rdi, [rsp + 0x20]
mov	rcx, rdx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rcx, rsi
mov	word ptr [rbx + 0x22], ax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	rcx, rsi
mov	word ptr [rbx + 0x24], ax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	rcx, rdi
mov	byte ptr [rbx + 0x7a], 1
mov	rdx, rsi
mov	dword ptr [rbx + 0x58], eax
mov	rax, qword ptr [rsi]
mov	qword ptr [rbx + 0x10], 0
mov	qword ptr [rbx + 0x28], 0
mov	qword ptr [rbx + 0x38], 0
mov	qword ptr [rbx + 0x48], 0
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	r12, qword ptr [rsp + 0x28]
lea	rcx, [r12 + 1]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r12
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026260
call	0x140026260
mov	rcx, qword ptr [rsp + 0x20]
lea	r13, [rsp + 0x30]
mov	byte ptr [rbp + r12], 0
mov	qword ptr [rbx + 0x10], rbp
mov	qword ptr [rbx + 0x18], r12
cmp	rcx, r13
je	0x14007f6f4
je	0x14007f6f4
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rdx, rsi
mov	rcx, rdi
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
mov	r14, qword ptr [rsp + 0x28]
movabs	rax, 0x3ffffffffffffffc
lea	r12, [r14 + 1]
cmp	rax, r12
jb	0x14007f881
jb	0x14007f881
add	r12, r12
mov	rcx, r12
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r14
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026fd0
call	0x140026fd0
xor	ecx, ecx
mov	qword ptr [rbx + 0x28], rbp
mov	word ptr [rbp + r12 - 2], cx
mov	rcx, qword ptr [rsp + 0x20]
mov	qword ptr [rbx + 0x30], r14
cmp	rcx, r13
je	0x14007f75a
je	0x14007f75a
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rdx, rsi
mov	rcx, rdi
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	r14, qword ptr [rsp + 0x28]
movabs	rax, 0x3ffffffffffffffc
lea	r12, [r14 + 1]
cmp	rax, r12
jb	0x14007f87a
jb	0x14007f87a
add	r12, r12
mov	rcx, r12
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r14
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026fd0
call	0x140026fd0
mov	rcx, qword ptr [rsp + 0x20]
xor	edx, edx
mov	qword ptr [rbx + 0x38], rbp
mov	word ptr [rbp + r12 - 2], dx
mov	qword ptr [rbx + 0x40], r14
cmp	rcx, r13
je	0x14007f7c0
je	0x14007f7c0
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rdx, rsi
mov	rcx, rdi
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
mov	r14, qword ptr [rsp + 0x28]
movabs	rax, 0x3ffffffffffffffc
lea	r12, [r14 + 1]
cmp	rax, r12
jb	0x14007f873
jb	0x14007f873
add	r12, r12
mov	rcx, r12
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r14
mov	rdx, rax
mov	rcx, rdi
mov	rbp, rax
call	0x140026fd0
call	0x140026fd0
mov	rcx, qword ptr [rsp + 0x20]
xor	eax, eax
mov	qword ptr [rbx + 0x48], rbp
mov	word ptr [rbp + r12 - 2], ax
mov	qword ptr [rbx + 0x50], r14
cmp	rcx, r13
je	0x14007f826
je	0x14007f826
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rcx, rsi
mov	dword ptr [rbx + 0x5c], eax
mov	rax, qword ptr [rsi]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	dword ptr [rbx + 0x60], eax
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
mov	rbx, rax
mov	rcx, rdi
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
mov	rcx, rdi
call	0x1400a1050
call	0x1400a1050
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b41c0
call	0x1400b41c0
jmp	0x14007f860
jmp	0x14007f860
call	0x1400b41c0
call	0x1400b41c0
jmp	0x14007f860
jmp	0x14007f860
call	0x1400b41c0
call	0x1400b41c0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x46ed4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x20]
call	0x1400aeb10
call	0x1400aeb10
lea	rax, [rip + 0x4690e]
mov	rcx, rbx
mov	qword ptr [rbx], rax
call	0x140079f10
call	0x140079f10
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x46e94]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x20]
call	0x1400aeb10
call	0x1400aeb10
lea	rax, [rip + 0x468ce]
mov	rcx, rbx
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x140079f10
jmp	0x140079f10
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	edx, 8
jmp	0x1400b2bf0
jmp	0x1400b2bf0
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x70]
mov	r8d, dword ptr [rcx + 0x60]
movq	xmm0, rax
punpcklqdq	xmm0, xmm0
movups	xmmword ptr [rcx + 8], xmm0
test	r8b, 8
je	0x14007f970
je	0x14007f970
test	rdx, rdx
jle	0x14007f970
jle	0x14007f970
add	rax, rdx
mov	qword ptr [rcx + 0x18], rax
xor	eax, eax
xor	edx, edx
mov	qword ptr [rcx + 0x28], rax
mov	qword ptr [rcx + 0x20], rax
mov	qword ptr [rcx + 0x30], rdx
ret	
ret	
nop	dword ptr [rax + rax]
and	r8d, 0x11
mov	qword ptr [rcx + 0x18], rax
je	0x14007f957
je	0x14007f957
test	rdx, rdx
jne	0x14007f957
jne	0x14007f957
mov	rdx, qword ptr [rcx + 0x78]
cmp	rdx, 1
jbe	0x14007f957
jbe	0x14007f957
lea	rdx, [rax + rdx - 1]
mov	qword ptr [rcx + 0x28], rax
mov	qword ptr [rcx + 0x20], rax
mov	qword ptr [rcx + 0x30], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0xa0]
mov	rsi, rdx
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
test	al, al
je	0x14007f9d0
je	0x14007f9d0
mov	rax, qword ptr [rbx + 0x10]
sub	eax, dword ptr [rbx + 0x18]
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rbx + 0xa0]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, rsi
sub	rax, qword ptr [rbx + 8]
mov	r10, qword ptr [rcx]
mov	qword ptr [rsp + 0x20], rax
mov	r9, qword ptr [rbx + 0xb8]
mov	r8, qword ptr [rbx + 0xa8]
call	qword ptr [r10 + 0x38]
call	qword ptr [r10 + 0x38]
cdqe	
add	rax, qword ptr [rbx + 0xa8]
sub	eax, dword ptr [rbx + 0xc0]
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
cmp	byte ptr [rcx + 0x98], 0
jne	0x14007fa5b
jne	0x14007fa5b
lea	rax, [rcx + 0x83]
movdqu	xmm1, xmmword ptr [rcx + 0x10]
mov	byte ptr [rcx + 0x98], 1
movq	xmm0, rax
lea	rax, [rcx + 0x84]
mov	qword ptr [rcx + 0x18], rax
punpcklqdq	xmm0, xmm0
movups	xmmword ptr [rcx + 0x88], xmm1
movups	xmmword ptr [rcx + 8], xmm0
ret	
ret	
nop	
nop	
nop	
nop	
cmp	byte ptr [rcx + 0x98], 0
je	0x14007faa9
je	0x14007faa9
mov	rax, qword ptr [rcx + 8]
cmp	qword ptr [rcx + 0x10], rax
mov	byte ptr [rcx + 0x98], 0
setne	al
mov	rdx, qword ptr [rcx + 0x90]
movq	xmm0, qword ptr [rcx + 0x70]
movzx	eax, al
add	rax, qword ptr [rcx + 0x88]
movq	xmm1, rax
mov	qword ptr [rcx + 0x88], rax
mov	qword ptr [rcx + 0x18], rdx
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx + 8], xmm0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xc8
mov	esi, 1
mov	rax, qword ptr [rcx + 0x28]
mov	rbx, rcx
cmp	qword ptr [rcx + 0x20], rax
jae	0x14007fae7
jae	0x14007fae7
mov	rax, qword ptr [rcx]
mov	edx, 0xffffffff
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	eax, -1
setne	sil
cmp	byte ptr [rbx + 0x82], 0
je	0x14007fb6a
je	0x14007fb6a
mov	rcx, qword ptr [rbx + 0xa0]
test	rcx, rcx
je	0x14007fbab
je	0x14007fbab
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	edi, eax
test	al, al
jne	0x14007fb6a
jne	0x14007fb6a
test	sil, sil
je	0x14007fb6a
je	0x14007fb6a
lea	rbp, [rsp + 0x40]
lea	r13, [rbx + 0x68]
lea	r12, [rsp + 0x38]
lea	r14, [rbx + 0x50]
mov	rcx, qword ptr [rbx + 0xa0]
lea	r9, [rsp + 0xc0]
mov	r8, rbp
mov	rdx, r13
mov	rax, qword ptr [rcx]
mov	qword ptr [rsp + 0x20], r12
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	esi, eax
cmp	eax, 2
je	0x14007fb68
je	0x14007fb68
cmp	eax, 1
jbe	0x14007fb80
jbe	0x14007fb80
mov	rax, qword ptr [rbx]
mov	edx, 0xffffffff
mov	rcx, rbx
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	eax, -1
setne	dil
nop	dword ptr [rax]
mov	esi, edi
mov	eax, esi
add	rsp, 0xc8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
mov	r15, qword ptr [rsp + 0x38]
sub	r15, rbp
test	r15, r15
jle	0x14007fb4f
jle	0x14007fb4f
mov	r8, r15
mov	rdx, rbp
mov	rcx, r14
call	0x140078720
call	0x140078720
cmp	r15, rax
jne	0x14007fb68
jne	0x14007fb68
and	esi, 1
jne	0x14007fb23
jne	0x14007fb23
jmp	0x14007fb4f
jmp	0x14007fb4f
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x68
lea	rbp, [rsp + 0x60]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0xa0]
mov	rdi, rdx
mov	rsi, r8
test	rcx, rcx
je	0x14007fd25
je	0x14007fd25
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
test	al, al
jne	0x14007fc6c
jne	0x14007fc6c
mov	rcx, qword ptr [rbx + 0xa0]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
movsxd	rcx, eax
imul	rcx, rsi
lea	rax, [rcx + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
mov	r10, qword ptr [rbx + 0xa0]
sub	rsp, rax
mov	rax, qword ptr [r10]
lea	r12, [rbx + 0x68]
lea	r13, [rbp - 0x10]
lea	r14, [rsp + 0x40]
lea	r15, [rbp - 8]
mov	r8, rdi
mov	rdx, r12
add	rcx, r14
mov	qword ptr [rsp + 0x38], r13
lea	r9, [rdi + rsi]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, r10
mov	qword ptr [rsp + 0x28], r14
mov	qword ptr [rsp + 0x20], r15
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
cmp	eax, 1
jbe	0x14007fc98
jbe	0x14007fc98
cmp	eax, 3
jne	0x14007fd19
jne	0x14007fd19
lea	rcx, [rbx + 0x50]
mov	r8, rsi
mov	rdx, rdi
call	0x140078720
call	0x140078720
cmp	rax, rsi
sete	al
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	r10, qword ptr [rbp - 0x10]
lea	rdi, [rbx + 0x50]
mov	rdx, r14
mov	dword ptr [rbp - 0x1c], eax
mov	rcx, rdi
mov	rsi, r10
mov	qword ptr [rbp - 0x18], r10
sub	rsi, r14
mov	r8, rsi
call	0x140078720
call	0x140078720
cmp	rsi, rax
jne	0x14007fc7b
jne	0x14007fc7b
mov	r9d, dword ptr [rbp - 0x1c]
mov	r10, qword ptr [rbp - 0x18]
and	r9d, 1
je	0x14007fc7b
je	0x14007fc7b
mov	rcx, qword ptr [rbx + 0xa0]
mov	rdx, r12
mov	rax, qword ptr [rcx]
mov	qword ptr [rsp + 0x38], r13
mov	qword ptr [rsp + 0x30], r10
mov	qword ptr [rsp + 0x28], r14
mov	qword ptr [rsp + 0x20], r15
mov	r9, qword ptr [rbx + 0x28]
mov	r8, qword ptr [rbp - 8]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
cmp	eax, 2
je	0x14007fd19
je	0x14007fd19
mov	rsi, qword ptr [rbp - 0x10]
mov	rdx, r14
mov	rcx, rdi
sub	rsi, r14
mov	r8, rsi
call	0x140078720
call	0x140078720
jmp	0x14007fc7b
jmp	0x14007fc7b
lea	rcx, [rip + 0x3a250]
call	0x1400b4200
call	0x1400b4200
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
cmp	byte ptr [rcx + 0x80], 0
mov	rbx, rcx
je	0x14007fd5e
je	0x14007fd5e
mov	rcx, qword ptr [rcx + 0x70]
test	rcx, rcx
je	0x14007fd4f
je	0x14007fd4f
call	0x1400b2bd0
call	0x1400b2bd0
mov	qword ptr [rbx + 0x70], 0
mov	byte ptr [rbx + 0x80], 0
mov	rcx, qword ptr [rbx + 0xa8]
test	rcx, rcx
je	0x14007fd6f
je	0x14007fd6f
call	0x1400b2bd0
call	0x1400b2bd0
mov	qword ptr [rbx + 0xa8], 0
pxor	xmm0, xmm0
mov	qword ptr [rbx + 0xb0], 0
movups	xmmword ptr [rbx + 0xb8], xmm0
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
cmp	byte ptr [rcx + 0x80], 0
mov	rbx, rcx
jne	0x14007fdb8
jne	0x14007fdb8
cmp	qword ptr [rcx + 0x70], 0
je	0x14007fdc0
je	0x14007fdc0
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
mov	rcx, qword ptr [rcx + 0x78]
call	0x1400b2c00
call	0x1400b2c00
mov	byte ptr [rbx + 0x80], 1
mov	qword ptr [rbx + 0x70], rax
jmp	0x14007fdb8
jmp	0x14007fdb8
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	rdi, [rcx + 0x50]
mov	rbx, rcx
mov	rsi, rdx
mov	ebp, r8d
mov	rcx, rdi
call	0x14001d8f0
call	0x14001d8f0
test	al, al
jne	0x14007fec0
jne	0x14007fec0
mov	rcx, rdi
mov	r9d, 0x1b4
mov	r8d, ebp
mov	rdx, rsi
call	0x140078520
call	0x140078520
mov	rcx, rdi
call	0x14001d8f0
call	0x14001d8f0
test	al, al
je	0x14007fec0
je	0x14007fec0
cmp	byte ptr [rbx + 0x80], 0
mov	rax, qword ptr [rbx + 0x70]
jne	0x14007fe3f
jne	0x14007fe3f
test	rax, rax
je	0x14007fec8
je	0x14007fec8
movq	xmm0, rax
movd	xmm1, dword ptr [rbx + 0x64]
xor	edx, edx
mov	dword ptr [rbx + 0x60], ebp
punpcklqdq	xmm0, xmm0
mov	word ptr [rbx + 0x81], dx
movups	xmmword ptr [rbx + 8], xmm0
pxor	xmm0, xmm0
movups	xmmword ptr [rbx + 0x20], xmm0
pshufd	xmm0, xmm1, 0xe0
mov	qword ptr [rbx + 0x18], rax
mov	qword ptr [rbx + 0x30], 0
movq	qword ptr [rbx + 0x68], xmm0
test	bpl, 2
jne	0x14007fe90
jne	0x14007fe90
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
xor	r8d, r8d
mov	dword ptr [rsp + 0x20], ebp
lea	rcx, [rsp + 0x30]
mov	r9d, 2
mov	rdx, rbx
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	qword ptr [rsp + 0x30], -1
jne	0x14007fe81
jne	0x14007fe81
mov	rcx, rbx
call	0x140080270
call	0x140080270
nop	dword ptr [rax + rax]
xor	eax, eax
jmp	0x14007fe84
jmp	0x14007fe84
nop	dword ptr [rax]
mov	rcx, qword ptr [rbx + 0x78]
call	0x1400b2c00
call	0x1400b2c00
mov	byte ptr [rbx + 0x80], 1
mov	qword ptr [rbx + 0x70], rax
jmp	0x14007fe3f
jmp	0x14007fe3f
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	rdi, [rcx + 0x50]
mov	rbx, rcx
mov	rsi, rdx
mov	ebp, r8d
mov	rcx, rdi
call	0x14001d8f0
call	0x14001d8f0
test	al, al
jne	0x14007ffd0
jne	0x14007ffd0
mov	rcx, rdi
mov	r8d, ebp
mov	rdx, rsi
call	0x140078570
call	0x140078570
mov	rcx, rdi
call	0x14001d8f0
call	0x14001d8f0
test	al, al
je	0x14007ffd0
je	0x14007ffd0
cmp	byte ptr [rbx + 0x80], 0
mov	rax, qword ptr [rbx + 0x70]
jne	0x14007ff49
jne	0x14007ff49
test	rax, rax
je	0x14007ffd8
je	0x14007ffd8
movq	xmm0, rax
movd	xmm1, dword ptr [rbx + 0x64]
xor	edx, edx
mov	dword ptr [rbx + 0x60], ebp
punpcklqdq	xmm0, xmm0
mov	word ptr [rbx + 0x81], dx
movups	xmmword ptr [rbx + 8], xmm0
pxor	xmm0, xmm0
movups	xmmword ptr [rbx + 0x20], xmm0
pshufd	xmm0, xmm1, 0xe0
mov	qword ptr [rbx + 0x18], rax
mov	qword ptr [rbx + 0x30], 0
movq	qword ptr [rbx + 0x68], xmm0
test	bpl, 2
jne	0x14007ffa0
jne	0x14007ffa0
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
xor	r8d, r8d
mov	dword ptr [rsp + 0x20], ebp
lea	rcx, [rsp + 0x30]
mov	r9d, 2
mov	rdx, rbx
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	qword ptr [rsp + 0x30], -1
jne	0x14007ff8b
jne	0x14007ff8b
mov	rcx, rbx
call	0x140080270
call	0x140080270
nop	dword ptr [rax + rax]
xor	eax, eax
jmp	0x14007ff8e
jmp	0x14007ff8e
nop	dword ptr [rax]
mov	rcx, qword ptr [rbx + 0x78]
call	0x1400b2c00
call	0x1400b2c00
mov	byte ptr [rbx + 0x80], 1
mov	qword ptr [rbx + 0x70], rax
jmp	0x14007ff49
jmp	0x14007ff49
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
jmp	0x14007fde0
jmp	0x14007fde0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rcx + 8]
mov	rbx, rdx
mov	rdx, qword ptr [rdx + 8]
lea	r12, [rcx + 0x38]
lea	rdi, [rsp + 0x28]
mov	rsi, rcx
lea	rbp, [rbx + 0x38]
mov	qword ptr [rcx + 8], rdx
mov	rdx, qword ptr [rbx + 0x10]
mov	qword ptr [rbx + 8], rax
mov	rax, qword ptr [rcx + 0x10]
mov	qword ptr [rcx + 0x10], rdx
mov	rdx, qword ptr [rbx + 0x18]
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rcx + 0x18]
mov	qword ptr [rcx + 0x18], rdx
mov	rdx, qword ptr [rbx + 0x20]
mov	qword ptr [rbx + 0x18], rax
mov	rax, qword ptr [rcx + 0x20]
mov	qword ptr [rcx + 0x20], rdx
mov	rdx, qword ptr [rbx + 0x28]
mov	qword ptr [rbx + 0x20], rax
mov	rax, qword ptr [rcx + 0x28]
mov	qword ptr [rcx + 0x28], rdx
mov	rdx, qword ptr [rbx + 0x30]
mov	qword ptr [rbx + 0x28], rax
mov	rax, qword ptr [rcx + 0x30]
mov	qword ptr [rcx + 0x30], rdx
mov	rdx, r12
mov	rcx, rdi
mov	qword ptr [rbx + 0x30], rax
call	0x14009be20
call	0x14009be20
mov	rdx, rbp
mov	rcx, r12
call	0x14009bf90
call	0x14009bf90
mov	rdx, rdi
mov	rcx, rbp
call	0x14009bf90
call	0x14009bf90
mov	rcx, rdi
call	0x14009bf30
call	0x14009bf30
mov	rax, qword ptr [rsi + 0x50]
mov	rdx, qword ptr [rbx + 0x50]
mov	qword ptr [rsi + 0x50], rdx
movzx	edx, byte ptr [rbx + 0x58]
mov	qword ptr [rbx + 0x50], rax
movzx	eax, byte ptr [rsi + 0x58]
mov	byte ptr [rsi + 0x58], dl
mov	edx, dword ptr [rbx + 0x60]
mov	byte ptr [rbx + 0x58], al
mov	eax, dword ptr [rsi + 0x60]
mov	dword ptr [rsi + 0x60], edx
mov	edx, dword ptr [rbx + 0x64]
mov	dword ptr [rbx + 0x60], eax
mov	eax, dword ptr [rsi + 0x64]
mov	dword ptr [rsi + 0x64], edx
mov	edx, dword ptr [rbx + 0x68]
mov	dword ptr [rbx + 0x64], eax
mov	eax, dword ptr [rsi + 0x68]
mov	dword ptr [rsi + 0x68], edx
mov	edx, dword ptr [rbx + 0x6c]
mov	dword ptr [rbx + 0x68], eax
mov	eax, dword ptr [rsi + 0x6c]
mov	dword ptr [rsi + 0x6c], edx
mov	rdx, qword ptr [rbx + 0x70]
mov	dword ptr [rbx + 0x6c], eax
mov	rax, qword ptr [rsi + 0x70]
mov	qword ptr [rsi + 0x70], rdx
mov	rdx, qword ptr [rbx + 0x78]
mov	qword ptr [rbx + 0x70], rax
mov	rax, qword ptr [rsi + 0x78]
mov	qword ptr [rsi + 0x78], rdx
mov	qword ptr [rbx + 0x78], rax
movzx	eax, byte ptr [rsi + 0x80]
movzx	edx, byte ptr [rbx + 0x80]
mov	byte ptr [rsi + 0x80], dl
mov	rdx, qword ptr [rbx + 0xa8]
mov	byte ptr [rbx + 0x80], al
mov	rax, qword ptr [rsi + 0xa8]
mov	qword ptr [rsi + 0xa8], rdx
mov	rdx, qword ptr [rbx + 0xb0]
mov	qword ptr [rbx + 0xa8], rax
mov	rax, qword ptr [rsi + 0xb0]
mov	qword ptr [rsi + 0xb0], rdx
mov	rdx, qword ptr [rbx + 0xb8]
mov	qword ptr [rbx + 0xb0], rax
mov	rax, qword ptr [rsi + 0xb8]
mov	qword ptr [rsi + 0xb8], rdx
mov	rdx, qword ptr [rbx + 0xc0]
mov	qword ptr [rbx + 0xb8], rax
mov	rax, qword ptr [rsi + 0xc0]
mov	qword ptr [rsi + 0xc0], rdx
movzx	edx, byte ptr [rbx + 0x81]
mov	qword ptr [rbx + 0xc0], rax
movzx	eax, byte ptr [rsi + 0x81]
mov	byte ptr [rsi + 0x81], dl
movzx	edx, byte ptr [rbx + 0x82]
mov	byte ptr [rbx + 0x81], al
movzx	eax, byte ptr [rsi + 0x82]
mov	byte ptr [rsi + 0x82], dl
mov	rdx, qword ptr [rbx + 0x88]
mov	byte ptr [rbx + 0x82], al
mov	rax, qword ptr [rsi + 0x88]
mov	qword ptr [rsi + 0x88], rdx
mov	qword ptr [rbx + 0x88], rax
mov	rax, qword ptr [rsi + 0x90]
mov	rdx, qword ptr [rbx + 0x90]
mov	qword ptr [rsi + 0x90], rdx
movzx	edx, byte ptr [rbx + 0x98]
mov	qword ptr [rbx + 0x90], rax
movzx	eax, byte ptr [rsi + 0x98]
mov	byte ptr [rsi + 0x98], dl
mov	byte ptr [rbx + 0x98], al
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
sub	rsp, 0x28
xor	eax, eax
mov	rdx, qword ptr [rcx + 0x28]
cmp	qword ptr [rcx + 0x20], rdx
jae	0x140080266
jae	0x140080266
mov	rax, qword ptr [rcx]
mov	edx, 0xffffffff
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	eax, -1
sete	al
movzx	eax, al
neg	eax
add	rsp, 0x28
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
lea	rdi, [rcx + 0x50]
mov	rbx, rcx
mov	rcx, rdi
call	0x14001d8f0
call	0x14001d8f0
test	al, al
je	0x140080360
je	0x140080360
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], rbx
call	0x14007fab0
call	0x14007fab0
xor	eax, 1
cmp	byte ptr [rbx + 0x80], 0
mov	dword ptr [rbx + 0x60], 0
mov	byte ptr [rbx + 0x98], 0
mov	esi, eax
je	0x1400802d4
je	0x1400802d4
mov	rcx, qword ptr [rbx + 0x70]
test	rcx, rcx
je	0x1400802c5
je	0x1400802c5
call	0x1400b2bd0
call	0x1400b2bd0
mov	qword ptr [rbx + 0x70], 0
mov	byte ptr [rbx + 0x80], 0
mov	rcx, qword ptr [rbx + 0xa8]
test	rcx, rcx
je	0x1400802e5
je	0x1400802e5
call	0x1400b2bd0
call	0x1400b2bd0
movq	xmm1, qword ptr [rbx + 0x70]
xor	eax, eax
movd	xmm3, dword ptr [rbx + 0x64]
mov	rcx, rdi
pxor	xmm0, xmm0
mov	word ptr [rbx + 0x81], ax
movdqu	xmm2, xmm1
mov	qword ptr [rbx + 0x30], 0
mov	qword ptr [rbx + 0xa8], 0
punpcklqdq	xmm2, xmm2
mov	qword ptr [rbx + 0xb0], 0
movups	xmmword ptr [rbx + 0xb8], xmm0
movups	xmmword ptr [rbx + 0x20], xmm0
pshufd	xmm0, xmm3, 0xe0
movups	xmmword ptr [rbx + 8], xmm2
movq	qword ptr [rbx + 0x18], xmm1
movq	qword ptr [rbx + 0x68], xmm0
call	0x140078650
call	0x140078650
test	rax, rax
je	0x140080360
je	0x140080360
test	sil, sil
jne	0x140080360
jne	0x140080360
mov	rax, rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
xor	ebx, ebx
mov	rax, rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rcx, rdi
call	0x140078650
call	0x140078650
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
lea	rcx, [rsp + 0x28]
call	0x1400b2a50
call	0x1400b2a50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0x3e6cf]
mov	rsi, rdx
call	0x140022a70
call	0x140022a70
lea	rcx, [rbx + 0x50]
mov	rdx, rax
mov	rax, qword ptr [rsi]
mov	rax, qword ptr [rax + 8]
mov	rsi, qword ptr [rax + rdx*8]
call	0x14001d8f0
call	0x14001d8f0
test	al, al
je	0x14008046a
je	0x14008046a
cmp	byte ptr [rbx + 0x81], 0
je	0x140080480
je	0x140080480
mov	rcx, qword ptr [rbx + 0xa0]
test	rcx, rcx
je	0x14008059c
je	0x14008059c
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
cmp	eax, -1
je	0x140080468
je	0x140080468
cmp	byte ptr [rbx + 0x81], 0
je	0x1400804a0
je	0x1400804a0
mov	rcx, qword ptr [rbx + 0xa0]
test	rcx, rcx
je	0x14008059c
je	0x14008059c
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
test	al, al
je	0x1400804e0
je	0x1400804e0
test	rsi, rsi
je	0x140080468
je	0x140080468
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
test	al, al
jne	0x14008046a
jne	0x14008046a
mov	edx, dword ptr [rbx + 0x60]
mov	rax, qword ptr [rbx]
xor	r8d, r8d
lea	rcx, [rsp + 0x30]
mov	r9d, 1
mov	dword ptr [rsp + 0x20], edx
mov	rdx, rbx
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	qword ptr [rsp + 0x30], -1
jne	0x14008046a
jne	0x14008046a
nop	dword ptr [rax + rax]
xor	esi, esi
mov	qword ptr [rbx + 0xa0], rsi
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
cmp	byte ptr [rbx + 0x82], 0
jne	0x1400803e5
jne	0x1400803e5
mov	qword ptr [rbx + 0xa0], rsi
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
cmp	byte ptr [rbx + 0x82], 0
je	0x14008046a
je	0x14008046a
mov	rcx, rbx
call	0x14007fab0
call	0x14007fab0
test	al, al
je	0x140080468
je	0x140080468
movq	xmm0, qword ptr [rbx + 0x70]
mov	qword ptr [rbx + 0x30], 0
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
movups	xmmword ptr [rbx + 8], xmm1
jmp	0x14008046a
jmp	0x14008046a
nop	dword ptr [rax]
mov	rcx, qword ptr [rbx + 0xa0]
mov	rdi, qword ptr [rbx + 0xa8]
lea	rdx, [rbx + 0x6c]
mov	rax, qword ptr [rbx + 0x10]
sub	rax, qword ptr [rbx + 8]
mov	r10, qword ptr [rcx]
mov	r8, rdi
mov	qword ptr [rsp + 0x20], rax
mov	r9, qword ptr [rbx + 0xb8]
call	qword ptr [r10 + 0x38]
call	qword ptr [r10 + 0x38]
cdqe	
lea	rdx, [rdi + rax]
mov	rax, qword ptr [rbx + 0xc0]
xor	edi, edi
mov	qword ptr [rbx + 0xb8], rdx
sub	rax, rdx
jne	0x140080588
jne	0x140080588
mov	rax, qword ptr [rbx + 0xa8]
movd	xmm3, dword ptr [rbx + 0x64]
mov	qword ptr [rbx + 0x30], 0
add	rdi, rax
movq	xmm0, rax
movq	xmm2, rdi
punpcklqdq	xmm0, xmm2
movups	xmmword ptr [rbx + 0xb8], xmm0
movdqu	xmm0, xmmword ptr [rbx + 0x70]
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
punpcklqdq	xmm1, xmm0
pxor	xmm0, xmm0
movups	xmmword ptr [rbx + 0x20], xmm0
pshufd	xmm0, xmm3, 0xe0
movups	xmmword ptr [rbx + 8], xmm1
movq	qword ptr [rbx + 0x68], xmm0
jmp	0x14008046a
jmp	0x14008046a
nop	dword ptr [rax]
mov	rcx, qword ptr [rbx + 0xa8]
mov	r8, rax
mov	rdi, rax
call	0x1400159a0
call	0x1400159a0
jmp	0x14008052b
jmp	0x14008052b
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rcx + 0x50]
mov	rsi, rdx
mov	rdi, r8
call	0x14001d8f0
call	0x14001d8f0
test	al, al
jne	0x1400805dd
jne	0x1400805dd
mov	rax, rsi
or	rax, rdi
jne	0x1400805f0
jne	0x1400805f0
mov	qword ptr [rbx + 0x78], 1
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
test	rsi, rsi
je	0x1400805dd
je	0x1400805dd
test	rdi, rdi
jle	0x1400805dd
jle	0x1400805dd
mov	rax, rbx
mov	qword ptr [rbx + 0x70], rsi
mov	qword ptr [rbx + 0x78], rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
cmp	byte ptr [rcx + 0x98], 0
mov	rsi, rcx
mov	r12, rdx
mov	rbx, r8
je	0x1400806f8
je	0x1400806f8
mov	rax, qword ptr [rcx + 0x10]
mov	rdx, qword ptr [rcx + 8]
xor	edi, edi
test	r8, r8
jle	0x14008064a
jle	0x14008064a
cmp	rax, rdx
je	0x140080750
je	0x140080750
cmp	rdx, rax
mov	rdx, qword ptr [rsi + 0x90]
movq	xmm0, qword ptr [rsi + 0x70]
mov	rbp, r12
setne	al
mov	byte ptr [rsi + 0x98], 0
movzx	eax, al
add	rax, qword ptr [rsi + 0x88]
mov	qword ptr [rsi + 0x18], rdx
movq	xmm2, rax
mov	qword ptr [rsi + 0x88], rax
punpcklqdq	xmm0, xmm2
movups	xmmword ptr [rsi + 8], xmm0
mov	rax, qword ptr [rsi + 0x78]
mov	edx, 2
mov	r12d, dword ptr [rsi + 0x60]
cmp	rax, rdx
cmovb	rax, rdx
sub	rax, 1
cmp	rbx, rax
jle	0x1400806d1
jle	0x1400806d1
mov	rcx, qword ptr [rsi + 0xa0]
test	rcx, rcx
je	0x140080841
je	0x140080841
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	edx, eax
mov	eax, r12d
shr	eax, 3
and	eax, 1
and	al, dl
mov	r12d, eax
jne	0x140080790
jne	0x140080790
mov	r8, rbx
mov	rdx, rbp
mov	rcx, rsi
call	0x140091b70
call	0x140091b70
add	rdi, rax
mov	rax, rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr [rax + rax]
cmp	byte ptr [rcx + 0x82], 0
je	0x14008073e
je	0x14008073e
mov	rax, qword ptr [rcx]
mov	edx, 0xffffffff
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	eax, -1
je	0x140080788
je	0x140080788
movq	xmm0, qword ptr [rsi + 0x70]
mov	qword ptr [rsi + 0x30], 0
mov	byte ptr [rsi + 0x82], 0
movdqu	xmm1, xmm0
movq	qword ptr [rsi + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rsi + 0x20], xmm0
movups	xmmword ptr [rsi + 8], xmm1
mov	rbp, r12
xor	edi, edi
jmp	0x140080688
jmp	0x140080688
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rax]
sub	rbx, 1
lea	rbp, [r12 + 1]
mov	byte ptr [r12], al
mov	rax, qword ptr [rcx + 0x10]
add	rax, 1
cmp	byte ptr [rcx + 0x98], 0
mov	qword ptr [rcx + 0x10], rax
jne	0x140080846
jne	0x140080846
mov	edi, 1
jmp	0x140080688
jmp	0x140080688
nop	dword ptr [rax + rax]
xor	edi, edi
jmp	0x1400806e2
jmp	0x1400806e2
nop	
mov	rdx, qword ptr [rsi + 0x10]
mov	r13, qword ptr [rsi + 0x18]
sub	r13, rdx
jne	0x140080810
jne	0x140080810
lea	r13, [rsi + 0x50]
jmp	0x1400807b3
jmp	0x1400807b3
nop	dword ptr [rax + rax]
add	rdi, rax
sub	rbx, rax
je	0x140080800
je	0x140080800
add	rbp, rax
mov	r8, rbx
mov	rdx, rbp
mov	rcx, r13
call	0x1400786a0
call	0x1400786a0
cmp	rax, -1
je	0x14008082d
je	0x14008082d
test	rax, rax
jne	0x1400807a8
jne	0x1400807a8
test	rbx, rbx
je	0x140080800
je	0x140080800
movq	xmm0, qword ptr [rsi + 0x70]
mov	qword ptr [rsi + 0x30], 0
xor	r12d, r12d
movdqu	xmm1, xmm0
movq	qword ptr [rsi + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rsi + 0x20], xmm0
movups	xmmword ptr [rsi + 8], xmm1
nop	word ptr [rax + rax]
mov	byte ptr [rsi + 0x81], r12b
jmp	0x1400806e2
jmp	0x1400806e2
nop	dword ptr [rax]
mov	rcx, rbp
mov	r8, r13
add	rbp, r13
add	rdi, r13
call	0x140015998
call	0x140015998
sub	rbx, r13
add	qword ptr [rsi + 0x10], r13
jmp	0x14008079d
jmp	0x14008079d
call	qword ptr [rip + 0x65cf5]
call	qword ptr [rip + 0x65cf5]
lea	rcx, [rip + 0x39706]
mov	edx, dword ptr [rax]
call	0x1400b42a0
call	0x1400b42a0
call	0x1400b3a30
call	0x1400b3a30
mov	rdx, qword ptr [rcx + 8]
mov	r12, rbp
mov	edi, 1
jmp	0x14008064a
jmp	0x14008064a
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
test	byte ptr [rcx + 0x60], 0x11
setne	bpl
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0xa0]
mov	rdi, rdx
mov	rsi, r8
test	rcx, rcx
je	0x140080978
je	0x140080978
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
test	al, al
je	0x140080910
je	0x140080910
test	bpl, bpl
je	0x140080910
je	0x140080910
cmp	byte ptr [rbx + 0x81], 0
jne	0x140080910
jne	0x140080910
mov	r8, qword ptr [rbx + 0x28]
mov	rax, qword ptr [rbx + 0x30]
sub	rax, r8
cmp	byte ptr [rbx + 0x82], 0
jne	0x1400808c5
jne	0x1400808c5
mov	rdx, qword ptr [rbx + 0x78]
lea	rcx, [rdx - 1]
cmp	rdx, 1
cmova	rax, rcx
cmp	rax, rsi
jg	0x140080910
jg	0x140080910
mov	rdx, qword ptr [rbx + 0x20]
mov	qword ptr [rsp + 0x20], rsi
lea	rcx, [rbx + 0x50]
mov	r9, rdi
sub	r8, rdx
mov	rbp, r8
call	0x1400788c0
call	0x1400788c0
add	rsi, rbp
cmp	rsi, rax
je	0x140080930
je	0x140080930
mov	rdx, rax
sub	rdx, rbp
cmp	rbp, rax
mov	eax, 0
cmovl	rax, rdx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	r8, rsi
mov	rdx, rdi
mov	rcx, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x140091c70
jmp	0x140091c70
nop	word ptr cs:[rax + rax]
mov	rdx, qword ptr [rbx + 0x70]
test	byte ptr [rbx + 0x60], 0x11
movq	xmm0, rdx
mov	qword ptr [rbx + 0x18], rdx
punpcklqdq	xmm0, xmm0
movups	xmmword ptr [rbx + 8], xmm0
je	0x140080972
je	0x140080972
mov	rcx, qword ptr [rbx + 0x78]
cmp	rcx, 1
jbe	0x140080972
jbe	0x140080972
lea	rcx, [rdx + rcx - 1]
mov	qword ptr [rbx + 0x28], rdx
mov	qword ptr [rbx + 0x20], rdx
mov	qword ptr [rbx + 0x30], rcx
mov	byte ptr [rbx + 0x82], 1
jmp	0x1400808ed
jmp	0x1400808ed
xor	edx, edx
xor	ecx, ecx
jmp	0x14008095a
jmp	0x14008095a
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	qword ptr [rcx], 0xffffffffffffffff
mov	rbx, rcx
mov	rsi, rdx
mov	rdi, r8
mov	dword ptr [rcx + 8], 0
mov	rcx, rdx
mov	ebp, r9d
call	0x14007fab0
call	0x14007fab0
test	al, al
jne	0x1400809c0
jne	0x1400809c0
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
lea	rcx, [rsi + 0x50]
mov	r8d, ebp
mov	rdx, rdi
call	0x140078780
call	0x140078780
cmp	rax, -1
je	0x1400809ae
je	0x1400809ae
movdqu	xmm0, xmmword ptr [rsi + 0xa0]
mov	edi, dword ptr [rsp + 0x70]
mov	qword ptr [rbx], rax
xor	edx, edx
mov	rax, rbx
mov	word ptr [rsi + 0x81], dx
punpckhqdq	xmm0, xmm0
mov	qword ptr [rsi + 0x30], 0
movups	xmmword ptr [rsi + 0xb8], xmm0
movdqu	xmm0, xmmword ptr [rsi + 0x70]
mov	dword ptr [rsi + 0x68], edi
movdqu	xmm1, xmm0
movq	qword ptr [rsi + 0x18], xmm0
punpcklqdq	xmm1, xmm0
pxor	xmm0, xmm0
mov	dword ptr [rbx + 8], edi
movups	xmmword ptr [rsi + 8], xmm1
movups	xmmword ptr [rsi + 0x20], xmm0
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x60
mov	rsi, rcx
mov	rcx, qword ptr [rdx + 0xa0]
mov	rbx, rdx
mov	rdi, r8
mov	r12d, r9d
test	rcx, rcx
je	0x140080b30
je	0x140080b30
mov	rax, qword ptr [rcx]
xor	r13d, r13d
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
test	eax, eax
cmovns	r13d, eax
setle	dl
test	rdi, rdi
lea	r14, [rbx + 0x50]
mov	qword ptr [rsi], 0xffffffffffffffff
setne	al
mov	rcx, r14
mov	dword ptr [rsi + 8], 0
and	eax, edx
mov	ebp, eax
call	0x14001d8f0
call	0x14001d8f0
cmp	al, 1
jne	0x140080a99
jne	0x140080a99
test	bpl, bpl
je	0x140080ab0
je	0x140080ab0
mov	rax, rsi
add	rsp, 0x60
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax + rax]
cmp	r12d, 1
jne	0x140080b58
jne	0x140080b58
test	rdi, rdi
jne	0x140080b58
jne	0x140080b58
cmp	byte ptr [rbx + 0x82], 0
jne	0x140080b40
jne	0x140080b40
mov	eax, dword ptr [rbx + 0x64]
cmp	byte ptr [rbx + 0x81], 0
mov	dword ptr [rsp + 0x5c], eax
je	0x140080b04
je	0x140080b04
mov	eax, dword ptr [rbx + 0x6c]
lea	rdx, [rsp + 0x5c]
mov	rcx, rbx
mov	dword ptr [rsp + 0x5c], eax
call	0x14007f9a0
call	0x14007f9a0
movsxd	rdi, eax
cmp	byte ptr [rbx + 0x82], 0
je	0x140080b04
je	0x140080b04
mov	rdi, qword ptr [rbx + 0x28]
sub	rdi, qword ptr [rbx + 0x20]
xor	edx, edx
mov	r8d, 1
mov	rcx, r14
call	0x140078780
call	0x140078780
cmp	rax, -1
je	0x140080a99
je	0x140080a99
add	rdi, rax
mov	eax, dword ptr [rsp + 0x5c]
mov	qword ptr [rsi], rdi
mov	dword ptr [rsi + 8], eax
jmp	0x140080a99
jmp	0x140080a99
mov	edx, 1
xor	r13d, r13d
jmp	0x140080a6c
jmp	0x140080a6c
nop	dword ptr [rax]
mov	rcx, qword ptr [rbx + 0xa0]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
test	al, al
jne	0x140080bf0
jne	0x140080bf0
nop	dword ptr [rax]
movsxd	r8, r13d
mov	eax, dword ptr [rbx + 0x64]
movzx	ecx, byte ptr [rbx + 0x81]
imul	r8, rdi
cmp	byte ptr [rbx + 0x98], 0
je	0x140080bb1
je	0x140080bb1
mov	rdi, qword ptr [rbx + 8]
xor	edx, edx
mov	r9, qword ptr [rbx + 0x90]
mov	byte ptr [rbx + 0x98], 0
cmp	qword ptr [rbx + 0x10], rdi
movq	xmm0, qword ptr [rbx + 0x70]
setne	dl
add	rdx, qword ptr [rbx + 0x88]
mov	qword ptr [rbx + 0x18], r9
movq	xmm1, rdx
mov	qword ptr [rbx + 0x88], rdx
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx + 8], xmm0
mov	dword ptr [rsp + 0x5c], eax
test	cl, cl
je	0x140080bc3
je	0x140080bc3
cmp	r12d, 1
je	0x140080c0b
je	0x140080c0b
mov	eax, dword ptr [rsp + 0x5c]
mov	dword ptr [rsp + 0x20], eax
lea	rcx, [rsp + 0x40]
mov	r9d, r12d
mov	rdx, rbx
call	0x140080980
call	0x140080980
mov	rax, qword ptr [rsp + 0x40]
mov	qword ptr [rsp + 0x40], rax
mov	qword ptr [rsi], rax
mov	eax, dword ptr [rsp + 0x48]
mov	dword ptr [rsi + 8], eax
jmp	0x140080a99
jmp	0x140080a99
mov	eax, dword ptr [rbx + 0x64]
xor	edi, edi
cmp	byte ptr [rbx + 0x81], 0
mov	dword ptr [rsp + 0x5c], eax
je	0x140080af3
je	0x140080af3
jmp	0x140080adc
jmp	0x140080adc
mov	eax, dword ptr [rbx + 0x6c]
lea	rdx, [rsp + 0x5c]
mov	rcx, rbx
mov	qword ptr [rsp + 0x38], r8
mov	dword ptr [rsp + 0x5c], eax
call	0x14007f9a0
call	0x14007f9a0
mov	r8, qword ptr [rsp + 0x38]
cdqe	
add	r8, rax
mov	eax, dword ptr [rsp + 0x5c]
jmp	0x140080bc3
jmp	0x140080bc3
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	r13, qword ptr [r8]
mov	rbp, qword ptr [r8 + 8]
lea	rsi, [rdx + 0x50]
mov	qword ptr [rcx], 0xffffffffffffffff
mov	rdi, rcx
mov	rbx, rdx
mov	dword ptr [rcx + 8], 0
mov	rcx, rsi
call	0x14001d8f0
call	0x14001d8f0
test	al, al
je	0x140080ce0
je	0x140080ce0
cmp	byte ptr [rbx + 0x98], 0
je	0x140080cc0
je	0x140080cc0
mov	rax, qword ptr [rbx + 8]
cmp	qword ptr [rbx + 0x10], rax
mov	byte ptr [rbx + 0x98], 0
setne	al
mov	rdx, qword ptr [rbx + 0x90]
movq	xmm0, qword ptr [rbx + 0x70]
movzx	eax, al
add	rax, qword ptr [rbx + 0x88]
movq	xmm2, rax
mov	qword ptr [rbx + 0x88], rax
mov	qword ptr [rbx + 0x18], rdx
punpcklqdq	xmm0, xmm2
movups	xmmword ptr [rbx + 8], xmm0
mov	rcx, rbx
mov	r12d, ebp
call	0x14007fab0
call	0x14007fab0
test	al, al
jne	0x140080cf0
jne	0x140080cf0
xor	r12d, r12d
mov	rax, 0xffffffffffffffff
mov	qword ptr [rdi], rax
mov	dword ptr [rdi + 8], r12d
mov	rax, rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
xor	r8d, r8d
mov	rdx, r13
mov	rcx, rsi
call	0x140078780
call	0x140078780
cmp	rax, -1
je	0x140080d50
je	0x140080d50
movdqu	xmm0, xmmword ptr [rbx + 0xa0]
xor	edx, edx
mov	qword ptr [rbx + 0x30], 0
mov	word ptr [rbx + 0x81], dx
punpckhqdq	xmm0, xmm0
mov	dword ptr [rbx + 0x68], ebp
movups	xmmword ptr [rbx + 0xb8], xmm0
movdqu	xmm0, xmmword ptr [rbx + 0x70]
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
punpcklqdq	xmm1, xmm0
pxor	xmm0, xmm0
movups	xmmword ptr [rbx + 8], xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
jmp	0x140080cd9
jmp	0x140080cd9
nop	dword ptr [rax + rax]
xor	r12d, r12d
jmp	0x140080cd9
jmp	0x140080cd9
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, rcx
mov	esi, edx
test	byte ptr [rcx + 0x60], 0x11
je	0x140080de6
je	0x140080de6
cmp	byte ptr [rcx + 0x81], 0
je	0x140080df0
je	0x140080df0
cmp	byte ptr [rcx + 0x98], 0
je	0x140080dc5
je	0x140080dc5
mov	rax, qword ptr [rcx + 8]
cmp	qword ptr [rcx + 0x10], rax
mov	byte ptr [rcx + 0x98], 0
setne	al
mov	rdx, qword ptr [rcx + 0x90]
movq	xmm0, qword ptr [rcx + 0x70]
movzx	eax, al
add	rax, qword ptr [rcx + 0x88]
movq	xmm2, rax
mov	qword ptr [rcx + 0x88], rax
mov	qword ptr [rcx + 0x18], rdx
punpcklqdq	xmm0, xmm2
movups	xmmword ptr [rcx + 8], xmm0
mov	rcx, rbx
lea	rdx, [rbx + 0x6c]
call	0x14007f9a0
call	0x14007f9a0
mov	rcx, rbx
mov	ebp, dword ptr [rbx + 0x6c]
mov	edi, eax
call	0x14007fab0
call	0x14007fab0
test	al, al
jne	0x140080ee0
jne	0x140080ee0
mov	eax, 0xffffffff
jmp	0x140080e61
jmp	0x140080e61
nop	dword ptr [rax]
mov	rdx, qword ptr [rcx + 0x20]
mov	r8, qword ptr [rcx + 0x28]
cmp	rdx, r8
jae	0x140080e70
jae	0x140080e70
cmp	esi, -1
je	0x140080e15
je	0x140080e15
mov	byte ptr [r8], sil
mov	rax, qword ptr [rcx + 0x28]
mov	rdx, qword ptr [rcx + 0x20]
lea	r8, [rax + 1]
mov	qword ptr [rcx + 0x28], r8
sub	r8, rdx
mov	rcx, rbx
call	0x14007fbc0
call	0x14007fbc0
test	al, al
je	0x140080de6
je	0x140080de6
mov	rax, qword ptr [rbx + 0x70]
test	byte ptr [rbx + 0x60], 0x11
movq	xmm0, rax
mov	qword ptr [rbx + 0x18], rax
punpcklqdq	xmm0, xmm0
movups	xmmword ptr [rbx + 8], xmm0
je	0x140080ea0
je	0x140080ea0
mov	rdx, qword ptr [rbx + 0x78]
cmp	rdx, 1
jbe	0x140080ea0
jbe	0x140080ea0
lea	rdx, [rax + rdx - 1]
mov	qword ptr [rbx + 0x28], rax
mov	qword ptr [rbx + 0x20], rax
mov	qword ptr [rbx + 0x30], rdx
cmp	esi, -1
je	0x140080e8f
je	0x140080e8f
mov	eax, esi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx + 0x78]
cmp	rax, 1
ja	0x140080f98
ja	0x140080f98
mov	byte ptr [rsp + 0x2f], sil
cmp	esi, -1
jne	0x140080eb0
jne	0x140080eb0
mov	byte ptr [rbx + 0x82], 1
xor	eax, eax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
xor	eax, eax
xor	edx, edx
jmp	0x140080e4e
jmp	0x140080e4e
nop	word ptr cs:[rax + rax]
lea	rdx, [rsp + 0x2f]
mov	r8d, 1
mov	rcx, rbx
call	0x14007fbc0
call	0x14007fbc0
mov	edx, eax
mov	eax, 0xffffffff
test	dl, dl
je	0x140080e61
je	0x140080e61
mov	byte ptr [rbx + 0x82], 1
jmp	0x140080e5f
jmp	0x140080e5f
nop	word ptr [rax + rax]
movsxd	rdx, edi
lea	rcx, [rbx + 0x50]
mov	r8d, 1
call	0x140078780
call	0x140078780
cmp	rax, -1
je	0x140080de6
je	0x140080de6
movdqu	xmm0, xmmword ptr [rbx + 0xa0]
xor	eax, eax
mov	qword ptr [rbx + 0x30], 0
mov	word ptr [rbx + 0x81], ax
mov	rax, qword ptr [rbx + 0x78]
punpckhqdq	xmm0, xmm0
mov	dword ptr [rbx + 0x68], ebp
movups	xmmword ptr [rbx + 0xb8], xmm0
movdqu	xmm0, xmmword ptr [rbx + 0x70]
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
punpcklqdq	xmm1, xmm0
pxor	xmm0, xmm0
movups	xmmword ptr [rbx + 8], xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
cmp	rax, 1
jbe	0x140080e7e
jbe	0x140080e7e
mov	rcx, qword ptr [rbx + 0x70]
test	byte ptr [rbx + 0x60], 0x11
jne	0x140080fa6
jne	0x140080fa6
xor	edx, edx
xor	eax, eax
mov	qword ptr [rbx + 8], rcx
mov	qword ptr [rbx + 0x10], rcx
mov	qword ptr [rbx + 0x18], rcx
mov	qword ptr [rbx + 0x28], rdx
mov	qword ptr [rbx + 0x20], rdx
mov	qword ptr [rbx + 0x30], rax
mov	byte ptr [rbx + 0x82], 1
cmp	esi, -1
je	0x140080e8f
je	0x140080e8f
mov	byte ptr [rdx], sil
add	qword ptr [rbx + 0x28], 1
jmp	0x140080e5f
jmp	0x140080e5f
nop	word ptr [rax + rax]
mov	rdx, qword ptr [rbx + 0x70]
lea	rax, [rdx + rax - 1]
mov	rcx, rdx
jmp	0x140080f5d
jmp	0x140080f5d
mov	rdx, rcx
jmp	0x140080f9c
jmp	0x140080f9c
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
mov	rbx, rcx
mov	esi, edx
test	byte ptr [rcx + 0x60], 8
je	0x1400810f0
je	0x1400810f0
cmp	byte ptr [rcx + 0x82], 0
jne	0x140081068
jne	0x140081068
movzx	edi, byte ptr [rcx + 0x98]
mov	rax, qword ptr [rcx + 0x10]
cmp	qword ptr [rcx + 8], rax
jae	0x1400810ac
jae	0x1400810ac
lea	rdx, [rax - 1]
mov	qword ptr [rcx + 0x10], rdx
movzx	eax, byte ptr [rax - 1]
xor	edx, edx
cmp	esi, -1
je	0x140081057
je	0x140081057
cmp	eax, esi
je	0x140081055
je	0x140081055
test	dil, dil
jne	0x1400810f0
jne	0x1400810f0
cmp	byte ptr [rbx + 0x98], 0
mov	rax, qword ptr [rbx + 0x10]
jne	0x14008104b
jne	0x14008104b
movq	xmm0, rax
lea	rdx, [rbx + 0x84]
lea	rax, [rbx + 0x83]
mov	byte ptr [rbx + 0x98], 1
movhps	xmm0, qword ptr [rbx + 0x18]
mov	qword ptr [rbx + 0x18], rdx
movups	xmmword ptr [rbx + 0x88], xmm0
movq	xmm0, rax
punpcklqdq	xmm0, xmm0
movups	xmmword ptr [rbx + 8], xmm0
mov	byte ptr [rbx + 0x81], 1
mov	byte ptr [rax], sil
mov	edx, esi
mov	eax, edx
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
mov	edx, 0xffffffff
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	eax, -1
je	0x1400810f0
je	0x1400810f0
movq	xmm0, qword ptr [rbx + 0x70]
mov	qword ptr [rbx + 0x30], 0
mov	byte ptr [rbx + 0x82], 0
movzx	edi, byte ptr [rbx + 0x98]
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
movups	xmmword ptr [rbx + 8], xmm1
mov	rax, qword ptr [rbx]
lea	rcx, [rsp + 0x30]
mov	r9d, 1
mov	rdx, rbx
mov	dword ptr [rsp + 0x20], 0x18
mov	r8, 0xffffffffffffffff
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	qword ptr [rsp + 0x30], -1
je	0x1400810f0
je	0x1400810f0
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x140080ff4
jne	0x140080ff4
nop	dword ptr [rax]
mov	edx, 0xffffffff
jmp	0x140081057
jmp	0x140081057
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	esi, dword ptr [rcx + 0x60]
mov	rbx, rcx
test	sil, 8
je	0x140081190
je	0x140081190
lea	rbp, [rcx + 0x50]
mov	rcx, rbp
call	0x14001d8f0
call	0x14001d8f0
test	al, al
je	0x140081190
je	0x140081190
mov	rcx, qword ptr [rbx + 0xa0]
mov	rdi, qword ptr [rbx + 0x18]
and	esi, 4
sub	rdi, qword ptr [rbx + 0x10]
test	rcx, rcx
je	0x140081199
je	0x140081199
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
test	esi, esi
je	0x140081149
je	0x140081149
test	eax, eax
jns	0x140081158
jns	0x140081158
mov	rax, rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbp
call	0x140078990
call	0x140078990
mov	rcx, qword ptr [rbx + 0xa0]
mov	rsi, rax
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
movsxd	rcx, eax
mov	rax, rsi
cqo	
idiv	rcx
add	rdi, rax
mov	rax, rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rdi, 0xffffffffffffffff
jmp	0x140081149
jmp	0x140081149
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
mov	rbx, rcx
test	byte ptr [rcx + 0x60], 8
je	0x14008164d
je	0x14008164d
cmp	byte ptr [rcx + 0x82], 0
jne	0x140081408
jne	0x140081408
cmp	byte ptr [rbx + 0x98], 0
mov	rax, qword ptr [rcx + 0x10]
jne	0x140081455
jne	0x140081455
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jb	0x14008149a
jb	0x14008149a
mov	rdx, qword ptr [rbx + 0x78]
mov	eax, 2
mov	rcx, qword ptr [rbx + 0xa0]
cmp	rdx, rax
cmovae	rax, rdx
mov	rsi, rax
lea	rdi, [rax - 1]
test	rcx, rcx
je	0x1400816de
je	0x1400816de
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
test	al, al
jne	0x140081560
jne	0x140081560
mov	rcx, qword ptr [rbx + 0xa0]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
test	eax, eax
jle	0x1400814b0
jle	0x1400814b0
movsxd	rbp, eax
imul	rbp, rdi
mov	rax, rbp
mov	rdx, qword ptr [rbx + 0xb8]
mov	r13, qword ptr [rbx + 0xc0]
mov	r12, rax
sub	r13, rdx
sub	r12, r13
cmp	rax, r13
mov	eax, 0
cmovle	r12, rax
cmp	byte ptr [rbx + 0x81], 0
mov	rax, qword ptr [rbx + 0xb0]
je	0x140081279
je	0x140081279
mov	rsi, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 8], rsi
je	0x14008168a
je	0x14008168a
cmp	rbp, rax
jg	0x1400815e0
jg	0x1400815e0
test	r13, r13
jne	0x140081660
jne	0x140081660
mov	rsi, qword ptr [rbx + 0xa8]
mov	eax, dword ptr [rbx + 0x68]
lea	r9, [rsi + r13]
mov	qword ptr [rbx + 0xb8], rsi
mov	qword ptr [rbx + 0xc0], r9
mov	dword ptr [rbx + 0x6c], eax
test	r12, r12
jne	0x140081678
jne	0x140081678
mov	rcx, qword ptr [rbx + 8]
mov	r8, rsi
xor	ebp, ebp
mov	qword ptr [rsp + 0x48], rcx
cmp	rsi, r9
jae	0x140081338
jae	0x140081338
xor	r12d, r12d
nop	dword ptr [rax]
mov	rax, qword ptr [rbx + 0xa0]
lea	r11, [rsp + 0x48]
lea	rdx, [rbx + 0x68]
mov	r10, qword ptr [rax]
mov	qword ptr [rsp + 0x38], r11
lea	r11, [rcx + rdi]
mov	qword ptr [rsp + 0x28], rcx
lea	rcx, [rbx + 0xb8]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rax
mov	qword ptr [rsp + 0x30], r11
call	qword ptr [r10 + 0x20]
call	qword ptr [r10 + 0x20]
mov	ebp, eax
cmp	eax, 3
je	0x1400814d0
je	0x1400814d0
mov	rsi, qword ptr [rsp + 0x48]
sub	rsi, qword ptr [rbx + 8]
cmp	eax, 2
je	0x1400815c0
je	0x1400815c0
test	r12b, r12b
jne	0x1400816e3
jne	0x1400816e3
test	rsi, rsi
jne	0x1400816e3
jne	0x1400816e3
mov	r9, qword ptr [rbx + 0xc0]
mov	r12d, 1
mov	rax, r9
sub	rax, qword ptr [rbx + 0xa8]
add	rax, r12
cmp	rax, qword ptr [rbx + 0xb0]
jg	0x1400816d2
jg	0x1400816d2
mov	rdx, r9
lea	rcx, [rbx + 0x50]
mov	r8, r12
call	0x1400786a0
call	0x1400786a0
mov	r9, rax
test	rax, rax
je	0x140081508
je	0x140081508
cmp	rax, -1
je	0x14008153f
je	0x14008153f
xor	r12d, r12d
mov	rcx, qword ptr [rbx + 8]
mov	r8, qword ptr [rbx + 0xb8]
add	r9, qword ptr [rbx + 0xc0]
mov	qword ptr [rbx + 0xc0], r9
mov	qword ptr [rsp + 0x48], rcx
cmp	r8, r9
jb	0x1400812d0
jb	0x1400812d0
cmp	ebp, 3
je	0x1400814db
je	0x1400814db
test	r12b, r12b
je	0x140081338
je	0x140081338
movq	xmm0, qword ptr [rbx + 0x70]
mov	qword ptr [rbx + 0x30], 0
mov	byte ptr [rbx + 0x81], 0
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
movups	xmmword ptr [rbx + 8], xmm1
cmp	ebp, 1
jne	0x14008164d
jne	0x14008164d
lea	rcx, [rip + 0x38aa3]
call	0x1400b4200
call	0x1400b4200
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx]
mov	edx, 0xffffffff
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	eax, -1
je	0x14008149d
je	0x14008149d
mov	rax, qword ptr [rbx + 0x70]
cmp	byte ptr [rbx + 0x98], 0
mov	qword ptr [rbx + 0x30], 0
mov	byte ptr [rbx + 0x82], 0
movq	xmm0, rax
mov	qword ptr [rbx + 0x18], rax
punpcklqdq	xmm0, xmm0
movups	xmmword ptr [rbx + 8], xmm0
pxor	xmm0, xmm0
movups	xmmword ptr [rbx + 0x20], xmm0
je	0x1400811d7
je	0x1400811d7
cmp	qword ptr [rbx + 8], rax
movq	xmm0, qword ptr [rbx + 0x70]
mov	byte ptr [rbx + 0x98], 0
setne	al
mov	rdx, qword ptr [rbx + 0x90]
movzx	eax, al
add	rax, qword ptr [rbx + 0x88]
movq	xmm2, rax
mov	qword ptr [rbx + 0x88], rax
punpcklqdq	xmm0, xmm2
mov	qword ptr [rbx + 0x18], rdx
movups	xmmword ptr [rbx + 8], xmm0
cmp	rax, rdx
jae	0x1400811e4
jae	0x1400811e4
movzx	eax, byte ptr [rax]
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rbx + 0xa0]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
cdqe	
lea	rbp, [rsi + rax - 2]
mov	rax, rdi
jmp	0x140081238
jmp	0x140081238
nop	dword ptr [rax]
mov	r9, qword ptr [rbx + 0xc0]
mov	rcx, qword ptr [rbx + 8]
mov	rdx, qword ptr [rbx + 0xa8]
mov	rsi, r9
sub	rsi, rdx
cmp	rdi, rsi
jb	0x140081518
jb	0x140081518
test	rsi, rsi
jne	0x140081558
jne	0x140081558
mov	qword ptr [rbx + 0xb8], rdx
mov	ebp, 3
jmp	0x1400813b7
jmp	0x1400813b7
nop	dword ptr [rax + rax]
mov	r12d, 1
jmp	0x140081387
jmp	0x140081387
nop	dword ptr [rax + rax]
mov	rsi, rdi
mov	r8, rdi
call	0x140015998
call	0x140015998
add	rdi, qword ptr [rbx + 0xa8]
mov	qword ptr [rbx + 0xb8], rdi
test	rsi, rsi
jg	0x140081580
jg	0x140081580
test	r12b, r12b
jne	0x140081680
jne	0x140081680
call	qword ptr [rip + 0x64fe3]
call	qword ptr [rip + 0x64fe3]
lea	rcx, [rip + 0x389c4]
mov	edx, dword ptr [rax]
call	0x1400b42a0
call	0x1400b42a0
nop	dword ptr [rax + rax]
mov	rdi, rsi
jmp	0x14008151b
jmp	0x14008151b
nop	dword ptr [rax]
mov	rdx, qword ptr [rbx + 8]
lea	rcx, [rbx + 0x50]
mov	r8, rdi
call	0x1400786a0
call	0x1400786a0
mov	rsi, rax
test	rax, rax
je	0x140081620
je	0x140081620
jle	0x14008153f
jle	0x14008153f
nop	
mov	rax, qword ptr [rbx + 0x70]
test	byte ptr [rbx + 0x60], 8
mov	qword ptr [rbx + 0x30], 0
mov	byte ptr [rbx + 0x81], 1
movq	xmm0, rax
lea	r9, [rax + rsi]
cmove	r9, rax
punpcklqdq	xmm0, xmm0
movups	xmmword ptr [rbx + 8], xmm0
pxor	xmm0, xmm0
mov	qword ptr [rbx + 0x18], r9
movups	xmmword ptr [rbx + 0x20], xmm0
movzx	eax, byte ptr [rax]
jmp	0x14008149d
jmp	0x14008149d
test	rsi, rsi
jg	0x140081580
jg	0x140081580
test	r12b, r12b
jne	0x1400813c0
jne	0x1400813c0
lea	rcx, [rip + 0x38903]
call	0x1400b4200
call	0x1400b4200
nop	word ptr [rax + rax]
mov	rcx, rbp
call	0x1400b2c00
call	0x1400b2c00
mov	rsi, rax
test	r13, r13
jne	0x1400816bb
jne	0x1400816bb
mov	rcx, qword ptr [rbx + 0xa8]
test	rcx, rcx
je	0x140081605
je	0x140081605
call	0x1400b2bd0
call	0x1400b2bd0
mov	qword ptr [rbx + 0xa8], rsi
mov	qword ptr [rbx + 0xb0], rbp
jmp	0x140081292
jmp	0x140081292
nop	dword ptr [rax + rax]
movq	xmm0, qword ptr [rbx + 0x70]
mov	qword ptr [rbx + 0x30], 0
mov	byte ptr [rbx + 0x81], 0
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
movups	xmmword ptr [rbx + 8], xmm1
mov	eax, 0xffffffff
jmp	0x14008149d
jmp	0x14008149d
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rbx + 0xa8]
mov	r8, r13
call	0x1400159a0
call	0x1400159a0
jmp	0x14008128b
jmp	0x14008128b
nop	dword ptr [rax]
xor	ebp, ebp
jmp	0x140081345
jmp	0x140081345
nop	
mov	ebp, 3
jmp	0x1400813c0
jmp	0x1400813c0
test	r13, r13
jne	0x1400816a8
jne	0x1400816a8
cmp	rbp, rax
jle	0x14008128b
jle	0x14008128b
mov	rcx, rbp
call	0x1400b2c00
call	0x1400b2c00
mov	rsi, rax
jmp	0x1400815f4
jmp	0x1400815f4
xor	r12d, r12d
cmp	rbp, rax
jle	0x140081660
jle	0x140081660
mov	rcx, rbp
call	0x1400b2c00
call	0x1400b2c00
mov	rsi, rax
mov	rdx, qword ptr [rbx + 0xb8]
mov	r8, r13
mov	rcx, rsi
call	0x140015998
call	0x140015998
jmp	0x1400815f4
jmp	0x1400815f4
lea	rcx, [rip + 0x38787]
call	0x1400b4200
call	0x1400b4200
call	0x1400b3a30
call	0x1400b3a30
test	rsi, rsi
jg	0x140081580
jg	0x140081580
test	r12b, r12b
je	0x14008153f
je	0x14008153f
jmp	0x1400813c0
jmp	0x1400813c0
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rdx
mov	rsi, rcx
call	0x140091fd0
call	0x140091fd0
lea	rax, [rip + 0x450b8]
mov	dword ptr [rsi + 0x40], 0
mov	rdx, qword ptr [rbx + 0x70]
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rbx + 0x50]
mov	qword ptr [rsi + 0x48], 0
mov	qword ptr [rsi + 0x50], rax
movzx	eax, byte ptr [rbx + 0x58]
mov	qword ptr [rbx + 0x50], 0
mov	byte ptr [rsi + 0x58], al
mov	rax, qword ptr [rbx + 0x78]
mov	byte ptr [rbx + 0x58], 0
movdqu	xmm1, xmmword ptr [rbx + 0x60]
mov	qword ptr [rsi + 0x78], rax
movzx	eax, word ptr [rbx + 0x80]
mov	qword ptr [rsi + 0x70], rdx
xor	edx, edx
mov	word ptr [rsi + 0x80], ax
movzx	eax, byte ptr [rbx + 0x82]
mov	dword ptr [rbx + 0x60], 0
movq	xmm0, qword ptr [rbx + 0x60]
mov	byte ptr [rsi + 0x82], al
movzx	eax, byte ptr [rbx + 0x83]
movups	xmmword ptr [rsi + 0x60], xmm1
pshufd	xmm0, xmm0, 0xe5
pxor	xmm1, xmm1
mov	byte ptr [rsi + 0x83], al
mov	rax, qword ptr [rbx + 0x88]
mov	qword ptr [rbx + 0x70], 0
mov	qword ptr [rsi + 0x88], rax
mov	rax, qword ptr [rbx + 0x90]
mov	qword ptr [rbx + 0x78], 1
mov	word ptr [rbx + 0x80], dx
mov	byte ptr [rbx + 0x82], 0
mov	qword ptr [rbx + 0x88], 0
mov	qword ptr [rbx + 0x90], 0
mov	qword ptr [rsi + 0x90], rax
movzx	eax, byte ptr [rbx + 0x98]
movups	xmmword ptr [rbx + 8], xmm1
mov	byte ptr [rsi + 0x98], al
mov	rax, qword ptr [rbx + 0xa0]
mov	byte ptr [rbx + 0x98], 0
mov	qword ptr [rsi + 0xa0], rax
mov	rax, qword ptr [rbx + 0xa8]
movups	xmmword ptr [rbx + 0x18], xmm1
mov	qword ptr [rsi + 0xa8], rax
mov	rax, qword ptr [rbx + 0xb0]
mov	qword ptr [rbx + 0xa8], 0
mov	qword ptr [rsi + 0xb0], rax
mov	rax, qword ptr [rbx + 0xb8]
mov	qword ptr [rbx + 0xb0], 0
mov	qword ptr [rsi + 0xb8], rax
mov	rax, qword ptr [rbx + 0xc0]
mov	qword ptr [rbx + 0xb8], 0
mov	qword ptr [rbx + 0xc0], 0
mov	qword ptr [rsi + 0xc0], rax
movups	xmmword ptr [rbx + 0x28], xmm1
movq	qword ptr [rbx + 0x68], xmm0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0x3d674]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x38]
mov	qword ptr [rcx - 0x30], 0
mov	qword ptr [rcx - 0x28], 0
mov	qword ptr [rcx - 0x20], 0
mov	qword ptr [rcx - 0x18], 0
mov	qword ptr [rcx - 0x10], 0
mov	qword ptr [rcx - 8], 0
call	0x14009be50
call	0x14009be50
lea	rax, [rip + 0x44eea]
mov	dword ptr [rbx + 0x40], 0
lea	rdx, [rbx + 0x40]
mov	qword ptr [rbx], rax
lea	rcx, [rbx + 0x50]
mov	qword ptr [rbx + 0x48], 0
call	0x140078a00
call	0x140078a00
mov	byte ptr [rbx + 0x98], 0
pxor	xmm0, xmm0
mov	rcx, qword ptr [rip + 0x3d169]
mov	qword ptr [rbx + 0x70], 0
mov	qword ptr [rbx + 0x78], 0x1000
mov	dword ptr [rbx + 0x80], 0
mov	qword ptr [rbx + 0xb0], 0
movups	xmmword ptr [rbx + 0x60], xmm0
pxor	xmm0, xmm0
movups	xmmword ptr [rbx + 0x88], xmm0
movups	xmmword ptr [rbx + 0xa0], xmm0
movups	xmmword ptr [rbx + 0xb8], xmm0
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx + 0x38]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
mov	qword ptr [rbx + 0xa0], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rdx
mov	rsi, rcx
call	0x140091fd0
call	0x140091fd0
lea	rax, [rip + 0x44e38]
mov	dword ptr [rsi + 0x40], 0
mov	rdx, qword ptr [rbx + 0x70]
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rbx + 0x50]
mov	qword ptr [rsi + 0x48], 0
mov	qword ptr [rsi + 0x50], rax
movzx	eax, byte ptr [rbx + 0x58]
mov	qword ptr [rbx + 0x50], 0
mov	byte ptr [rsi + 0x58], al
mov	rax, qword ptr [rbx + 0x78]
mov	byte ptr [rbx + 0x58], 0
movdqu	xmm1, xmmword ptr [rbx + 0x60]
mov	qword ptr [rsi + 0x78], rax
movzx	eax, word ptr [rbx + 0x80]
mov	qword ptr [rsi + 0x70], rdx
xor	edx, edx
mov	word ptr [rsi + 0x80], ax
movzx	eax, byte ptr [rbx + 0x82]
mov	dword ptr [rbx + 0x60], 0
movq	xmm0, qword ptr [rbx + 0x60]
mov	byte ptr [rsi + 0x82], al
movzx	eax, byte ptr [rbx + 0x83]
movups	xmmword ptr [rsi + 0x60], xmm1
pshufd	xmm0, xmm0, 0xe5
pxor	xmm1, xmm1
mov	byte ptr [rsi + 0x83], al
mov	rax, qword ptr [rbx + 0x88]
mov	qword ptr [rbx + 0x70], 0
mov	qword ptr [rsi + 0x88], rax
mov	rax, qword ptr [rbx + 0x90]
mov	qword ptr [rbx + 0x78], 1
mov	word ptr [rbx + 0x80], dx
mov	byte ptr [rbx + 0x82], 0
mov	qword ptr [rbx + 0x88], 0
mov	qword ptr [rbx + 0x90], 0
mov	qword ptr [rsi + 0x90], rax
movzx	eax, byte ptr [rbx + 0x98]
movups	xmmword ptr [rbx + 8], xmm1
mov	byte ptr [rsi + 0x98], al
mov	rax, qword ptr [rbx + 0xa0]
mov	byte ptr [rbx + 0x98], 0
mov	qword ptr [rsi + 0xa0], rax
mov	rax, qword ptr [rbx + 0xa8]
movups	xmmword ptr [rbx + 0x18], xmm1
mov	qword ptr [rsi + 0xa8], rax
mov	rax, qword ptr [rbx + 0xb0]
mov	qword ptr [rbx + 0xa8], 0
mov	qword ptr [rsi + 0xb0], rax
mov	rax, qword ptr [rbx + 0xb8]
mov	qword ptr [rbx + 0xb0], 0
mov	qword ptr [rsi + 0xb8], rax
mov	rax, qword ptr [rbx + 0xc0]
mov	qword ptr [rbx + 0xb8], 0
mov	qword ptr [rbx + 0xc0], 0
mov	qword ptr [rsi + 0xc0], rax
movups	xmmword ptr [rbx + 0x28], xmm1
movq	qword ptr [rbx + 0x68], xmm0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0x3d3f4]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x38]
mov	qword ptr [rcx - 0x30], 0
mov	qword ptr [rcx - 0x28], 0
mov	qword ptr [rcx - 0x20], 0
mov	qword ptr [rcx - 0x18], 0
mov	qword ptr [rcx - 0x10], 0
mov	qword ptr [rcx - 8], 0
call	0x14009be50
call	0x14009be50
lea	rax, [rip + 0x44c6a]
mov	dword ptr [rbx + 0x40], 0
lea	rdx, [rbx + 0x40]
mov	qword ptr [rbx], rax
lea	rcx, [rbx + 0x50]
mov	qword ptr [rbx + 0x48], 0
call	0x140078a00
call	0x140078a00
mov	byte ptr [rbx + 0x98], 0
pxor	xmm0, xmm0
mov	rcx, qword ptr [rip + 0x3cee9]
mov	qword ptr [rbx + 0x70], 0
mov	qword ptr [rbx + 0x78], 0x1000
mov	dword ptr [rbx + 0x80], 0
mov	qword ptr [rbx + 0xb0], 0
movups	xmmword ptr [rbx + 0x60], xmm0
pxor	xmm0, xmm0
movups	xmmword ptr [rbx + 0x88], xmm0
movups	xmmword ptr [rbx + 0xa0], xmm0
movups	xmmword ptr [rbx + 0xb8], xmm0
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx + 0x38]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
mov	qword ptr [rbx + 0xa0], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x44bc4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x50]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x3d2e9]
lea	rcx, [rbx + 0x38]
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bf30
call	0x14009bf30
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140081c17
jmp	0x140081c17
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x44b64]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x50]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x3d289]
lea	rcx, [rbx + 0x38]
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bf30
jmp	0x14009bf30
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140081c77
jmp	0x140081c77
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x44b14]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x50]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x3d239]
lea	rcx, [rbx + 0x38]
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bf30
jmp	0x14009bf30
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140081cc7
jmp	0x140081cc7
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rdx
mov	rsi, rcx
call	0x140080270
call	0x140080270
mov	rdx, rbx
mov	rcx, rsi
call	0x1400920e0
call	0x1400920e0
mov	rdx, qword ptr [rbx + 0x50]
mov	rax, qword ptr [rsi + 0x50]
mov	qword ptr [rsi + 0x50], rdx
movzx	edx, byte ptr [rbx + 0x58]
mov	qword ptr [rbx + 0x50], rax
movzx	eax, byte ptr [rsi + 0x58]
mov	byte ptr [rsi + 0x58], dl
movdqu	xmm1, xmmword ptr [rbx + 0x60]
mov	byte ptr [rbx + 0x58], al
mov	dword ptr [rbx + 0x60], 0
movq	xmm0, qword ptr [rbx + 0x60]
movups	xmmword ptr [rsi + 0x60], xmm1
mov	rax, qword ptr [rbx + 0x70]
mov	qword ptr [rbx + 0x70], 0
pshufd	xmm0, xmm0, 0xe5
mov	qword ptr [rsi + 0x70], rax
mov	rax, qword ptr [rbx + 0x78]
mov	qword ptr [rbx + 0x78], 1
mov	qword ptr [rsi + 0x78], rax
movzx	eax, byte ptr [rbx + 0x80]
mov	byte ptr [rbx + 0x80], 0
mov	byte ptr [rsi + 0x80], al
mov	rax, qword ptr [rbx + 0xa8]
mov	qword ptr [rbx + 0xa8], 0
mov	qword ptr [rsi + 0xa8], rax
mov	rax, qword ptr [rbx + 0xb0]
mov	qword ptr [rbx + 0xb0], 0
mov	qword ptr [rsi + 0xb0], rax
mov	rax, qword ptr [rbx + 0xb8]
mov	qword ptr [rbx + 0xb8], 0
mov	qword ptr [rsi + 0xb8], rax
mov	rax, qword ptr [rbx + 0xc0]
mov	qword ptr [rbx + 0xc0], 0
mov	qword ptr [rsi + 0xc0], rax
movzx	eax, byte ptr [rbx + 0x81]
mov	byte ptr [rbx + 0x81], 0
movq	xmm1, qword ptr [rbx + 0x70]
mov	byte ptr [rsi + 0x81], al
movzx	eax, byte ptr [rbx + 0x82]
mov	byte ptr [rbx + 0x82], 0
movdqu	xmm2, xmm1
mov	byte ptr [rsi + 0x82], al
mov	rax, qword ptr [rbx + 0x88]
punpcklqdq	xmm2, xmm2
mov	qword ptr [rbx + 0x88], 0
mov	qword ptr [rsi + 0x88], rax
mov	rax, qword ptr [rbx + 0x90]
mov	qword ptr [rbx + 0x90], 0
mov	qword ptr [rsi + 0x90], rax
movzx	eax, byte ptr [rbx + 0x98]
mov	byte ptr [rbx + 0x98], 0
mov	byte ptr [rsi + 0x98], al
mov	rax, rsi
movq	qword ptr [rbx + 0x18], xmm1
pxor	xmm1, xmm1
mov	qword ptr [rbx + 0x30], 0
movups	xmmword ptr [rbx + 8], xmm2
movups	xmmword ptr [rbx + 0x20], xmm1
movq	qword ptr [rbx + 0x68], xmm0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
mov	rax, qword ptr [rcx + 0x70]
mov	r8d, dword ptr [rcx + 0x60]
movq	xmm0, rax
punpcklqdq	xmm0, xmm0
movups	xmmword ptr [rcx + 8], xmm0
test	r8b, 8
je	0x140081ed0
je	0x140081ed0
test	rdx, rdx
jle	0x140081ed0
jle	0x140081ed0
lea	rax, [rax + rdx*2]
mov	qword ptr [rcx + 0x18], rax
xor	eax, eax
xor	edx, edx
mov	qword ptr [rcx + 0x28], rax
mov	qword ptr [rcx + 0x20], rax
mov	qword ptr [rcx + 0x30], rdx
ret	
ret	
nop	dword ptr [rax]
and	r8d, 0x11
mov	qword ptr [rcx + 0x18], rax
je	0x140081eb8
je	0x140081eb8
test	rdx, rdx
jne	0x140081eb8
jne	0x140081eb8
mov	rdx, qword ptr [rcx + 0x78]
cmp	rdx, 1
jbe	0x140081eb8
jbe	0x140081eb8
lea	rdx, [rax + rdx*2 - 2]
mov	qword ptr [rcx + 0x28], rax
mov	qword ptr [rcx + 0x20], rax
mov	qword ptr [rcx + 0x30], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0xa0]
mov	rsi, rdx
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
test	al, al
je	0x140081f30
je	0x140081f30
mov	rax, qword ptr [rbx + 0x10]
sub	rax, qword ptr [rbx + 0x18]
sar	rax, 1
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
mov	rcx, qword ptr [rbx + 0xa0]
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, rsi
sub	rax, qword ptr [rbx + 8]
mov	r10, qword ptr [rcx]
sar	rax, 1
mov	qword ptr [rsp + 0x20], rax
mov	r9, qword ptr [rbx + 0xb8]
mov	r8, qword ptr [rbx + 0xa8]
call	qword ptr [r10 + 0x38]
call	qword ptr [r10 + 0x38]
cdqe	
add	rax, qword ptr [rbx + 0xa8]
sub	eax, dword ptr [rbx + 0xc0]
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
cmp	byte ptr [rcx + 0x98], 0
jne	0x140081fbb
jne	0x140081fbb
lea	rax, [rcx + 0x84]
movdqu	xmm1, xmmword ptr [rcx + 0x10]
mov	byte ptr [rcx + 0x98], 1
movq	xmm0, rax
lea	rax, [rcx + 0x86]
mov	qword ptr [rcx + 0x18], rax
punpcklqdq	xmm0, xmm0
movups	xmmword ptr [rcx + 0x88], xmm1
movups	xmmword ptr [rcx + 8], xmm0
ret	
ret	
nop	
nop	
nop	
nop	
cmp	byte ptr [rcx + 0x98], 0
je	0x14008200c
je	0x14008200c
mov	rax, qword ptr [rcx + 8]
xor	edx, edx
cmp	qword ptr [rcx + 0x10], rax
mov	byte ptr [rcx + 0x98], 0
mov	rax, qword ptr [rcx + 0x88]
setne	dl
movq	xmm0, qword ptr [rcx + 0x70]
lea	rax, [rax + rdx*2]
mov	rdx, qword ptr [rcx + 0x90]
movq	xmm1, rax
mov	qword ptr [rcx + 0x88], rax
mov	qword ptr [rcx + 0x18], rdx
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx + 8], xmm0
ret	
ret	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0xc8
mov	esi, 1
mov	rax, qword ptr [rcx + 0x28]
mov	rbx, rcx
cmp	qword ptr [rcx + 0x20], rax
jae	0x140082048
jae	0x140082048
mov	rax, qword ptr [rcx]
mov	edx, 0xffff
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	ax, -1
setne	sil
cmp	byte ptr [rbx + 0x82], 0
je	0x1400820d2
je	0x1400820d2
mov	rcx, qword ptr [rbx + 0xa0]
test	rcx, rcx
je	0x14008211b
je	0x14008211b
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	edi, eax
test	al, al
jne	0x1400820d2
jne	0x1400820d2
test	sil, sil
je	0x1400820d2
je	0x1400820d2
lea	rbp, [rsp + 0x40]
lea	r13, [rbx + 0x68]
lea	r12, [rsp + 0x38]
lea	r14, [rbx + 0x50]
mov	rcx, qword ptr [rbx + 0xa0]
lea	r9, [rsp + 0xc0]
mov	r8, rbp
mov	rdx, r13
mov	rax, qword ptr [rcx]
mov	qword ptr [rsp + 0x20], r12
call	qword ptr [rax + 0x18]
call	qword ptr [rax + 0x18]
mov	esi, eax
cmp	eax, 2
je	0x1400820d0
je	0x1400820d0
cmp	eax, 1
jbe	0x1400820f0
jbe	0x1400820f0
mov	rax, qword ptr [rbx]
mov	edx, 0xffff
mov	rcx, rbx
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	ax, -1
setne	dil
nop	word ptr [rax + rax]
mov	esi, edi
mov	eax, esi
add	rsp, 0xc8
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
mov	r15, qword ptr [rsp + 0x38]
sub	r15, rbp
test	r15, r15
jle	0x1400820b4
jle	0x1400820b4
mov	r8, r15
mov	rdx, rbp
mov	rcx, r14
call	0x140078720
call	0x140078720
cmp	r15, rax
jne	0x1400820d0
jne	0x1400820d0
and	esi, 1
jne	0x140082088
jne	0x140082088
jmp	0x1400820b4
jmp	0x1400820b4
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	r15
push	r14
push	r13
push	r12
push	rdi
push	rsi
push	rbx
sub	rsp, 0x68
lea	rbp, [rsp + 0x60]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0xa0]
mov	rdi, rdx
mov	rsi, r8
test	rcx, rcx
je	0x140082295
je	0x140082295
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
test	al, al
jne	0x1400821dc
jne	0x1400821dc
mov	rcx, qword ptr [rbx + 0xa0]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
movsxd	rcx, eax
imul	rcx, rsi
lea	rax, [rcx + 0xf]
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
mov	r10, qword ptr [rbx + 0xa0]
sub	rsp, rax
mov	rax, qword ptr [r10]
lea	r12, [rbx + 0x68]
lea	r13, [rbp - 0x10]
lea	r14, [rsp + 0x40]
lea	r15, [rbp - 8]
mov	r8, rdi
mov	rdx, r12
add	rcx, r14
mov	qword ptr [rsp + 0x38], r13
lea	r9, [rdi + rsi*2]
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, r10
mov	qword ptr [rsp + 0x28], r14
mov	qword ptr [rsp + 0x20], r15
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
cmp	eax, 1
jbe	0x140082208
jbe	0x140082208
cmp	eax, 3
jne	0x140082289
jne	0x140082289
lea	rcx, [rbx + 0x50]
mov	r8, rsi
mov	rdx, rdi
call	0x140078720
call	0x140078720
cmp	rax, rsi
sete	al
lea	rsp, [rbp + 8]
pop	rbx
pop	rsi
pop	rdi
pop	r12
pop	r13
pop	r14
pop	r15
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	r10, qword ptr [rbp - 0x10]
lea	rdi, [rbx + 0x50]
mov	rdx, r14
mov	dword ptr [rbp - 0x1c], eax
mov	rcx, rdi
mov	rsi, r10
mov	qword ptr [rbp - 0x18], r10
sub	rsi, r14
mov	r8, rsi
call	0x140078720
call	0x140078720
cmp	rsi, rax
jne	0x1400821eb
jne	0x1400821eb
mov	r9d, dword ptr [rbp - 0x1c]
mov	r10, qword ptr [rbp - 0x18]
and	r9d, 1
je	0x1400821eb
je	0x1400821eb
mov	rcx, qword ptr [rbx + 0xa0]
mov	rdx, r12
mov	rax, qword ptr [rcx]
mov	qword ptr [rsp + 0x38], r13
mov	qword ptr [rsp + 0x30], r10
mov	qword ptr [rsp + 0x28], r14
mov	qword ptr [rsp + 0x20], r15
mov	r9, qword ptr [rbx + 0x28]
mov	r8, qword ptr [rbp - 8]
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
cmp	eax, 2
je	0x140082289
je	0x140082289
mov	rsi, qword ptr [rbp - 0x10]
mov	rdx, r14
mov	rcx, rdi
sub	rsi, r14
mov	r8, rsi
call	0x140078720
call	0x140078720
jmp	0x1400821eb
jmp	0x1400821eb
lea	rcx, [rip + 0x37ce0]
call	0x1400b4200
call	0x1400b4200
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
cmp	byte ptr [rcx + 0x80], 0
mov	rbx, rcx
je	0x1400822ce
je	0x1400822ce
mov	rcx, qword ptr [rcx + 0x70]
test	rcx, rcx
je	0x1400822bf
je	0x1400822bf
call	0x1400b2bd0
call	0x1400b2bd0
mov	qword ptr [rbx + 0x70], 0
mov	byte ptr [rbx + 0x80], 0
mov	rcx, qword ptr [rbx + 0xa8]
test	rcx, rcx
je	0x1400822df
je	0x1400822df
call	0x1400b2bd0
call	0x1400b2bd0
mov	qword ptr [rbx + 0xa8], 0
pxor	xmm0, xmm0
mov	qword ptr [rbx + 0xb0], 0
movups	xmmword ptr [rbx + 0xb8], xmm0
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
cmp	byte ptr [rcx + 0x80], 0
mov	rbx, rcx
jne	0x140082328
jne	0x140082328
cmp	qword ptr [rcx + 0x70], 0
je	0x140082330
je	0x140082330
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
movabs	rax, 0x3ffffffffffffffc
mov	rcx, qword ptr [rcx + 0x78]
cmp	rax, rcx
jb	0x14008235c
jb	0x14008235c
add	rcx, rcx
call	0x1400b2c00
call	0x1400b2c00
mov	byte ptr [rbx + 0x80], 1
mov	qword ptr [rbx + 0x70], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b41c0
call	0x1400b41c0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	rdi, [rcx + 0x50]
mov	rbx, rcx
mov	rsi, rdx
mov	ebp, r8d
mov	rcx, rdi
call	0x14001d8f0
call	0x14001d8f0
test	al, al
jne	0x140082450
jne	0x140082450
mov	rcx, rdi
mov	r9d, 0x1b4
mov	r8d, ebp
mov	rdx, rsi
call	0x140078520
call	0x140078520
mov	rcx, rdi
call	0x14001d8f0
call	0x14001d8f0
test	al, al
je	0x140082450
je	0x140082450
cmp	byte ptr [rbx + 0x80], 0
mov	rax, qword ptr [rbx + 0x70]
jne	0x1400823cf
jne	0x1400823cf
test	rax, rax
je	0x140082458
je	0x140082458
movq	xmm0, rax
movd	xmm1, dword ptr [rbx + 0x64]
xor	edx, edx
mov	dword ptr [rbx + 0x60], ebp
punpcklqdq	xmm0, xmm0
mov	word ptr [rbx + 0x81], dx
movups	xmmword ptr [rbx + 8], xmm0
pxor	xmm0, xmm0
movups	xmmword ptr [rbx + 0x20], xmm0
pshufd	xmm0, xmm1, 0xe0
mov	qword ptr [rbx + 0x18], rax
mov	qword ptr [rbx + 0x30], 0
movq	qword ptr [rbx + 0x68], xmm0
test	bpl, 2
jne	0x140082420
jne	0x140082420
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
xor	r8d, r8d
mov	dword ptr [rsp + 0x20], ebp
lea	rcx, [rsp + 0x30]
mov	r9d, 2
mov	rdx, rbx
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	qword ptr [rsp + 0x30], -1
jne	0x140082411
jne	0x140082411
mov	rcx, rbx
call	0x140082820
call	0x140082820
nop	dword ptr [rax + rax]
xor	eax, eax
jmp	0x140082414
jmp	0x140082414
nop	dword ptr [rax]
movabs	rax, 0x3ffffffffffffffc
mov	rcx, qword ptr [rbx + 0x78]
cmp	rax, rcx
jb	0x140082483
jb	0x140082483
add	rcx, rcx
call	0x1400b2c00
call	0x1400b2c00
mov	byte ptr [rbx + 0x80], 1
mov	qword ptr [rbx + 0x70], rax
jmp	0x1400823cf
jmp	0x1400823cf
call	0x1400b41c0
call	0x1400b41c0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	rdi, [rcx + 0x50]
mov	rbx, rcx
mov	rsi, rdx
mov	ebp, r8d
mov	rcx, rdi
call	0x14001d8f0
call	0x14001d8f0
test	al, al
jne	0x140082570
jne	0x140082570
mov	rcx, rdi
mov	r8d, ebp
mov	rdx, rsi
call	0x140078570
call	0x140078570
mov	rcx, rdi
call	0x14001d8f0
call	0x14001d8f0
test	al, al
je	0x140082570
je	0x140082570
cmp	byte ptr [rbx + 0x80], 0
mov	rax, qword ptr [rbx + 0x70]
jne	0x1400824e9
jne	0x1400824e9
test	rax, rax
je	0x140082578
je	0x140082578
movq	xmm0, rax
movd	xmm1, dword ptr [rbx + 0x64]
xor	edx, edx
mov	dword ptr [rbx + 0x60], ebp
punpcklqdq	xmm0, xmm0
mov	word ptr [rbx + 0x81], dx
movups	xmmword ptr [rbx + 8], xmm0
pxor	xmm0, xmm0
movups	xmmword ptr [rbx + 0x20], xmm0
pshufd	xmm0, xmm1, 0xe0
mov	qword ptr [rbx + 0x18], rax
mov	qword ptr [rbx + 0x30], 0
movq	qword ptr [rbx + 0x68], xmm0
test	bpl, 2
jne	0x140082540
jne	0x140082540
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
xor	r8d, r8d
mov	dword ptr [rsp + 0x20], ebp
lea	rcx, [rsp + 0x30]
mov	r9d, 2
mov	rdx, rbx
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	qword ptr [rsp + 0x30], -1
jne	0x14008252b
jne	0x14008252b
mov	rcx, rbx
call	0x140082820
call	0x140082820
nop	dword ptr [rax + rax]
xor	eax, eax
jmp	0x14008252e
jmp	0x14008252e
nop	dword ptr [rax]
movabs	rax, 0x3ffffffffffffffc
mov	rcx, qword ptr [rbx + 0x78]
cmp	rax, rcx
jb	0x1400825a3
jb	0x1400825a3
add	rcx, rcx
call	0x1400b2c00
call	0x1400b2c00
mov	byte ptr [rbx + 0x80], 1
mov	qword ptr [rbx + 0x70], rax
jmp	0x1400824e9
jmp	0x1400824e9
call	0x1400b41c0
call	0x1400b41c0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
jmp	0x140082370
jmp	0x140082370
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rcx + 8]
mov	rbx, rdx
mov	rdx, qword ptr [rdx + 8]
lea	r12, [rcx + 0x38]
lea	rdi, [rsp + 0x28]
mov	rsi, rcx
lea	rbp, [rbx + 0x38]
mov	qword ptr [rcx + 8], rdx
mov	rdx, qword ptr [rbx + 0x10]
mov	qword ptr [rbx + 8], rax
mov	rax, qword ptr [rcx + 0x10]
mov	qword ptr [rcx + 0x10], rdx
mov	rdx, qword ptr [rbx + 0x18]
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rcx + 0x18]
mov	qword ptr [rcx + 0x18], rdx
mov	rdx, qword ptr [rbx + 0x20]
mov	qword ptr [rbx + 0x18], rax
mov	rax, qword ptr [rcx + 0x20]
mov	qword ptr [rcx + 0x20], rdx
mov	rdx, qword ptr [rbx + 0x28]
mov	qword ptr [rbx + 0x20], rax
mov	rax, qword ptr [rcx + 0x28]
mov	qword ptr [rcx + 0x28], rdx
mov	rdx, qword ptr [rbx + 0x30]
mov	qword ptr [rbx + 0x28], rax
mov	rax, qword ptr [rcx + 0x30]
mov	qword ptr [rcx + 0x30], rdx
mov	rdx, r12
mov	rcx, rdi
mov	qword ptr [rbx + 0x30], rax
call	0x14009be20
call	0x14009be20
mov	rdx, rbp
mov	rcx, r12
call	0x14009bf90
call	0x14009bf90
mov	rdx, rdi
mov	rcx, rbp
call	0x14009bf90
call	0x14009bf90
mov	rcx, rdi
call	0x14009bf30
call	0x14009bf30
mov	rax, qword ptr [rsi + 0x50]
mov	rdx, qword ptr [rbx + 0x50]
mov	qword ptr [rsi + 0x50], rdx
movzx	edx, byte ptr [rbx + 0x58]
mov	qword ptr [rbx + 0x50], rax
movzx	eax, byte ptr [rsi + 0x58]
mov	byte ptr [rsi + 0x58], dl
mov	edx, dword ptr [rbx + 0x60]
mov	byte ptr [rbx + 0x58], al
mov	eax, dword ptr [rsi + 0x60]
mov	dword ptr [rsi + 0x60], edx
mov	edx, dword ptr [rbx + 0x64]
mov	dword ptr [rbx + 0x60], eax
mov	eax, dword ptr [rsi + 0x64]
mov	dword ptr [rsi + 0x64], edx
mov	edx, dword ptr [rbx + 0x68]
mov	dword ptr [rbx + 0x64], eax
mov	eax, dword ptr [rsi + 0x68]
mov	dword ptr [rsi + 0x68], edx
mov	edx, dword ptr [rbx + 0x6c]
mov	dword ptr [rbx + 0x68], eax
mov	eax, dword ptr [rsi + 0x6c]
mov	dword ptr [rsi + 0x6c], edx
mov	rdx, qword ptr [rbx + 0x70]
mov	dword ptr [rbx + 0x6c], eax
mov	rax, qword ptr [rsi + 0x70]
mov	qword ptr [rsi + 0x70], rdx
mov	rdx, qword ptr [rbx + 0x78]
mov	qword ptr [rbx + 0x70], rax
mov	rax, qword ptr [rsi + 0x78]
mov	qword ptr [rsi + 0x78], rdx
mov	qword ptr [rbx + 0x78], rax
movzx	eax, byte ptr [rsi + 0x80]
movzx	edx, byte ptr [rbx + 0x80]
mov	byte ptr [rsi + 0x80], dl
mov	rdx, qword ptr [rbx + 0xa8]
mov	byte ptr [rbx + 0x80], al
mov	rax, qword ptr [rsi + 0xa8]
mov	qword ptr [rsi + 0xa8], rdx
mov	rdx, qword ptr [rbx + 0xb0]
mov	qword ptr [rbx + 0xa8], rax
mov	rax, qword ptr [rsi + 0xb0]
mov	qword ptr [rsi + 0xb0], rdx
mov	rdx, qword ptr [rbx + 0xb8]
mov	qword ptr [rbx + 0xb0], rax
mov	rax, qword ptr [rsi + 0xb8]
mov	qword ptr [rsi + 0xb8], rdx
mov	rdx, qword ptr [rbx + 0xc0]
mov	qword ptr [rbx + 0xb8], rax
mov	rax, qword ptr [rsi + 0xc0]
mov	qword ptr [rsi + 0xc0], rdx
movzx	edx, byte ptr [rbx + 0x81]
mov	qword ptr [rbx + 0xc0], rax
movzx	eax, byte ptr [rsi + 0x81]
mov	byte ptr [rsi + 0x81], dl
movzx	edx, byte ptr [rbx + 0x82]
mov	byte ptr [rbx + 0x81], al
movzx	eax, byte ptr [rsi + 0x82]
mov	byte ptr [rsi + 0x82], dl
mov	rdx, qword ptr [rbx + 0x88]
mov	byte ptr [rbx + 0x82], al
mov	rax, qword ptr [rsi + 0x88]
mov	qword ptr [rsi + 0x88], rdx
mov	qword ptr [rbx + 0x88], rax
mov	rax, qword ptr [rsi + 0x90]
mov	rdx, qword ptr [rbx + 0x90]
mov	qword ptr [rsi + 0x90], rdx
movzx	edx, byte ptr [rbx + 0x98]
mov	qword ptr [rbx + 0x90], rax
movzx	eax, byte ptr [rsi + 0x98]
mov	byte ptr [rsi + 0x98], dl
mov	byte ptr [rbx + 0x98], al
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
sub	rsp, 0x28
xor	eax, eax
mov	rdx, qword ptr [rcx + 0x28]
cmp	qword ptr [rcx + 0x20], rdx
jae	0x140082817
jae	0x140082817
mov	rax, qword ptr [rcx]
mov	edx, 0xffff
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	ax, -1
sete	al
movzx	eax, al
neg	eax
add	rsp, 0x28
ret	
ret	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
lea	rdi, [rcx + 0x50]
mov	rbx, rcx
mov	rcx, rdi
call	0x14001d8f0
call	0x14001d8f0
test	al, al
je	0x140082910
je	0x140082910
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], rbx
call	0x140082010
call	0x140082010
xor	eax, 1
cmp	byte ptr [rbx + 0x80], 0
mov	dword ptr [rbx + 0x60], 0
mov	byte ptr [rbx + 0x98], 0
mov	esi, eax
je	0x140082884
je	0x140082884
mov	rcx, qword ptr [rbx + 0x70]
test	rcx, rcx
je	0x140082875
je	0x140082875
call	0x1400b2bd0
call	0x1400b2bd0
mov	qword ptr [rbx + 0x70], 0
mov	byte ptr [rbx + 0x80], 0
mov	rcx, qword ptr [rbx + 0xa8]
test	rcx, rcx
je	0x140082895
je	0x140082895
call	0x1400b2bd0
call	0x1400b2bd0
movq	xmm1, qword ptr [rbx + 0x70]
xor	eax, eax
movd	xmm3, dword ptr [rbx + 0x64]
mov	rcx, rdi
pxor	xmm0, xmm0
mov	word ptr [rbx + 0x81], ax
movdqu	xmm2, xmm1
mov	qword ptr [rbx + 0x30], 0
mov	qword ptr [rbx + 0xa8], 0
punpcklqdq	xmm2, xmm2
mov	qword ptr [rbx + 0xb0], 0
movups	xmmword ptr [rbx + 0xb8], xmm0
movups	xmmword ptr [rbx + 0x20], xmm0
pshufd	xmm0, xmm3, 0xe0
movups	xmmword ptr [rbx + 8], xmm2
movq	qword ptr [rbx + 0x18], xmm1
movq	qword ptr [rbx + 0x68], xmm0
call	0x140078650
call	0x140078650
test	rax, rax
je	0x140082910
je	0x140082910
test	sil, sil
jne	0x140082910
jne	0x140082910
mov	rax, rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
xor	ebx, ebx
mov	rax, rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rcx, rdi
call	0x140078650
call	0x140078650
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
lea	rcx, [rsp + 0x28]
call	0x1400b2b10
call	0x1400b2b10
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0x3c12f]
mov	rsi, rdx
call	0x140022a70
call	0x140022a70
lea	rcx, [rbx + 0x50]
mov	rdx, rax
mov	rax, qword ptr [rsi]
mov	rax, qword ptr [rax + 8]
mov	rsi, qword ptr [rax + rdx*8]
call	0x14001d8f0
call	0x14001d8f0
test	al, al
je	0x140082a1a
je	0x140082a1a
cmp	byte ptr [rbx + 0x81], 0
je	0x140082a30
je	0x140082a30
mov	rcx, qword ptr [rbx + 0xa0]
test	rcx, rcx
je	0x140082b54
je	0x140082b54
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
cmp	eax, -1
je	0x140082a18
je	0x140082a18
cmp	byte ptr [rbx + 0x81], 0
je	0x140082a50
je	0x140082a50
mov	rcx, qword ptr [rbx + 0xa0]
test	rcx, rcx
je	0x140082b54
je	0x140082b54
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
test	al, al
je	0x140082a90
je	0x140082a90
test	rsi, rsi
je	0x140082a18
je	0x140082a18
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
test	al, al
jne	0x140082a1a
jne	0x140082a1a
mov	edx, dword ptr [rbx + 0x60]
mov	rax, qword ptr [rbx]
xor	r8d, r8d
lea	rcx, [rsp + 0x30]
mov	r9d, 1
mov	dword ptr [rsp + 0x20], edx
mov	rdx, rbx
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	qword ptr [rsp + 0x30], -1
jne	0x140082a1a
jne	0x140082a1a
nop	dword ptr [rax + rax]
xor	esi, esi
mov	qword ptr [rbx + 0xa0], rsi
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
cmp	byte ptr [rbx + 0x82], 0
jne	0x140082995
jne	0x140082995
mov	qword ptr [rbx + 0xa0], rsi
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
cmp	byte ptr [rbx + 0x82], 0
je	0x140082a1a
je	0x140082a1a
mov	rcx, rbx
call	0x140082010
call	0x140082010
test	al, al
je	0x140082a18
je	0x140082a18
movq	xmm0, qword ptr [rbx + 0x70]
mov	qword ptr [rbx + 0x30], 0
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
movups	xmmword ptr [rbx + 8], xmm1
jmp	0x140082a1a
jmp	0x140082a1a
nop	dword ptr [rax]
mov	rcx, qword ptr [rbx + 0xa0]
mov	rdi, qword ptr [rbx + 0xa8]
lea	rdx, [rbx + 0x6c]
mov	rax, qword ptr [rbx + 0x10]
sub	rax, qword ptr [rbx + 8]
mov	r10, qword ptr [rcx]
sar	rax, 1
mov	r8, rdi
mov	qword ptr [rsp + 0x20], rax
mov	r9, qword ptr [rbx + 0xb8]
call	qword ptr [r10 + 0x38]
call	qword ptr [r10 + 0x38]
cdqe	
lea	rdx, [rdi + rax]
mov	rax, qword ptr [rbx + 0xc0]
xor	edi, edi
mov	qword ptr [rbx + 0xb8], rdx
sub	rax, rdx
jne	0x140082b40
jne	0x140082b40
mov	rax, qword ptr [rbx + 0xa8]
movd	xmm3, dword ptr [rbx + 0x64]
mov	qword ptr [rbx + 0x30], 0
add	rdi, rax
movq	xmm0, rax
movq	xmm2, rdi
punpcklqdq	xmm0, xmm2
movups	xmmword ptr [rbx + 0xb8], xmm0
movdqu	xmm0, xmmword ptr [rbx + 0x70]
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
punpcklqdq	xmm1, xmm0
pxor	xmm0, xmm0
movups	xmmword ptr [rbx + 0x20], xmm0
pshufd	xmm0, xmm3, 0xe0
movups	xmmword ptr [rbx + 8], xmm1
movq	qword ptr [rbx + 0x68], xmm0
jmp	0x140082a1a
jmp	0x140082a1a
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rbx + 0xa8]
mov	r8, rax
mov	rdi, rax
call	0x1400159a0
call	0x1400159a0
jmp	0x140082ade
jmp	0x140082ade
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rcx + 0x50]
mov	rsi, rdx
mov	rdi, r8
call	0x14001d8f0
call	0x14001d8f0
test	al, al
jne	0x140082b8d
jne	0x140082b8d
mov	rax, rsi
or	rax, rdi
jne	0x140082ba0
jne	0x140082ba0
mov	qword ptr [rbx + 0x78], 1
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
test	rsi, rsi
je	0x140082b8d
je	0x140082b8d
test	rdi, rdi
jle	0x140082b8d
jle	0x140082b8d
mov	rax, rbx
mov	qword ptr [rbx + 0x70], rsi
mov	qword ptr [rbx + 0x78], rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
cmp	byte ptr [rcx + 0x98], 0
mov	rbx, rcx
mov	rdi, rdx
mov	rsi, r8
je	0x140082ca0
je	0x140082ca0
mov	rax, qword ptr [rcx + 0x10]
mov	rdx, qword ptr [rcx + 8]
xor	ebp, ebp
test	r8, r8
jle	0x140082bfa
jle	0x140082bfa
cmp	rax, rdx
je	0x140082d98
je	0x140082d98
cmp	rdx, rax
mov	rax, qword ptr [rbx + 0x88]
movq	xmm0, qword ptr [rbx + 0x70]
mov	byte ptr [rbx + 0x98], 0
setne	dl
movzx	edx, dl
lea	rax, [rax + rdx*2]
mov	rdx, qword ptr [rbx + 0x90]
movq	xmm2, rax
mov	qword ptr [rbx + 0x88], rax
mov	qword ptr [rbx + 0x18], rdx
punpcklqdq	xmm0, xmm2
movups	xmmword ptr [rbx + 8], xmm0
mov	rax, qword ptr [rbx + 0x78]
mov	edx, 2
mov	r12d, dword ptr [rbx + 0x60]
cmp	rax, rdx
cmovb	rax, rdx
sub	rax, 1
cmp	rsi, rax
jle	0x140082c7e
jle	0x140082c7e
mov	rcx, qword ptr [rbx + 0xa0]
test	rcx, rcx
je	0x140082dd3
je	0x140082dd3
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
mov	edx, eax
mov	eax, r12d
shr	eax, 3
and	eax, 1
and	al, dl
mov	r12d, eax
jne	0x140082cf8
jne	0x140082cf8
mov	r8, rsi
mov	rdx, rdi
mov	rcx, rbx
call	0x140092600
call	0x140092600
add	rbp, rax
mov	rax, rbp
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	
cmp	byte ptr [rcx + 0x82], 0
je	0x140082ceb
je	0x140082ceb
mov	rax, qword ptr [rcx]
mov	edx, 0xffff
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	ax, -1
je	0x140082db8
je	0x140082db8
movq	xmm0, qword ptr [rbx + 0x70]
mov	qword ptr [rbx + 0x30], 0
mov	byte ptr [rbx + 0x82], 0
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
movups	xmmword ptr [rbx + 8], xmm1
xor	ebp, ebp
jmp	0x140082c39
jmp	0x140082c39
nop	word ptr [rax + rax]
mov	r13, qword ptr [rbx + 0x18]
mov	rdx, qword ptr [rbx + 0x10]
cmp	rdx, r13
je	0x140082d26
je	0x140082d26
sub	r13, rdx
mov	rcx, rdi
mov	r8, r13
add	rdi, r13
call	0x140015998
call	0x140015998
add	qword ptr [rbx + 0x10], r13
mov	rax, r13
sar	rax, 1
add	rbp, rax
sub	rsi, rax
lea	r13, [rbx + 0x50]
jmp	0x140082d3c
jmp	0x140082d3c
nop	dword ptr [rax]
add	rbp, rax
sub	rsi, rax
je	0x140082d88
je	0x140082d88
lea	rdi, [rdi + rax*2]
mov	r8, rsi
mov	rdx, rdi
mov	rcx, r13
call	0x1400786a0
call	0x1400786a0
cmp	rax, -1
je	0x140082dbf
je	0x140082dbf
test	rax, rax
jne	0x140082d30
jne	0x140082d30
test	rsi, rsi
je	0x140082d88
je	0x140082d88
movq	xmm0, qword ptr [rbx + 0x70]
mov	qword ptr [rbx + 0x30], 0
xor	r12d, r12d
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
movups	xmmword ptr [rbx + 8], xmm1
nop	dword ptr [rax + rax]
mov	byte ptr [rbx + 0x81], r12b
jmp	0x140082c8f
jmp	0x140082c8f
nop	dword ptr [rax]
movzx	ecx, word ptr [rax]
sub	rsi, 1
add	rax, 2
add	rdi, 2
mov	ebp, 1
mov	word ptr [rdi - 2], cx
jmp	0x140082bfa
jmp	0x140082bfa
nop	dword ptr [rax]
xor	ebp, ebp
jmp	0x140082c8f
jmp	0x140082c8f
call	qword ptr [rip + 0x63763]
call	qword ptr [rip + 0x63763]
lea	rcx, [rip + 0x37174]
mov	edx, dword ptr [rax]
call	0x1400b42a0
call	0x1400b42a0
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
test	byte ptr [rcx + 0x60], 0x11
setne	bpl
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0xa0]
mov	rdi, rdx
mov	rsi, r8
test	rcx, rcx
je	0x140082ef5
je	0x140082ef5
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
test	al, al
je	0x140082e90
je	0x140082e90
test	bpl, bpl
je	0x140082e90
je	0x140082e90
cmp	byte ptr [rbx + 0x81], 0
jne	0x140082e90
jne	0x140082e90
mov	r8, qword ptr [rbx + 0x28]
mov	rax, qword ptr [rbx + 0x30]
sub	rax, r8
sar	rax, 1
cmp	byte ptr [rbx + 0x82], 0
jne	0x140082e48
jne	0x140082e48
mov	rdx, qword ptr [rbx + 0x78]
lea	rcx, [rdx - 1]
cmp	rdx, 1
cmova	rax, rcx
cmp	rax, rsi
jg	0x140082e90
jg	0x140082e90
mov	rdx, qword ptr [rbx + 0x20]
mov	qword ptr [rsp + 0x20], rsi
lea	rcx, [rbx + 0x50]
mov	r9, rdi
sub	r8, rdx
sar	r8, 1
mov	rbp, r8
call	0x1400788c0
call	0x1400788c0
add	rsi, rbp
cmp	rsi, rax
je	0x140082eb0
je	0x140082eb0
mov	rdx, rax
sub	rdx, rbp
cmp	rbp, rax
mov	eax, 0
cmovl	rax, rdx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
mov	r8, rsi
mov	rdx, rdi
mov	rcx, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x140092700
jmp	0x140092700
nop	word ptr cs:[rax + rax]
mov	rdx, qword ptr [rbx + 0x70]
test	byte ptr [rbx + 0x60], 0x11
movq	xmm0, rdx
mov	qword ptr [rbx + 0x18], rdx
punpcklqdq	xmm0, xmm0
movups	xmmword ptr [rbx + 8], xmm0
je	0x140082eef
je	0x140082eef
mov	rcx, qword ptr [rbx + 0x78]
cmp	rcx, 1
jbe	0x140082eef
jbe	0x140082eef
lea	rcx, [rdx + rcx*2 - 2]
mov	qword ptr [rbx + 0x28], rdx
mov	qword ptr [rbx + 0x20], rdx
mov	qword ptr [rbx + 0x30], rcx
mov	byte ptr [rbx + 0x82], 1
jmp	0x140082e73
jmp	0x140082e73
xor	edx, edx
xor	ecx, ecx
jmp	0x140082eda
jmp	0x140082eda
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	qword ptr [rcx], 0xffffffffffffffff
mov	rbx, rcx
mov	rsi, rdx
mov	rdi, r8
mov	dword ptr [rcx + 8], 0
mov	rcx, rdx
mov	ebp, r9d
call	0x140082010
call	0x140082010
test	al, al
jne	0x140082f40
jne	0x140082f40
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
lea	rcx, [rsi + 0x50]
mov	r8d, ebp
mov	rdx, rdi
call	0x140078780
call	0x140078780
cmp	rax, -1
je	0x140082f2e
je	0x140082f2e
movdqu	xmm0, xmmword ptr [rsi + 0xa0]
mov	edi, dword ptr [rsp + 0x70]
mov	qword ptr [rbx], rax
xor	edx, edx
mov	rax, rbx
mov	word ptr [rsi + 0x81], dx
punpckhqdq	xmm0, xmm0
mov	qword ptr [rsi + 0x30], 0
movups	xmmword ptr [rsi + 0xb8], xmm0
movdqu	xmm0, xmmword ptr [rsi + 0x70]
mov	dword ptr [rsi + 0x68], edi
movdqu	xmm1, xmm0
movq	qword ptr [rsi + 0x18], xmm0
punpcklqdq	xmm1, xmm0
pxor	xmm0, xmm0
mov	dword ptr [rbx + 8], edi
movups	xmmword ptr [rsi + 8], xmm1
movups	xmmword ptr [rsi + 0x20], xmm0
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x60
mov	rsi, rcx
mov	rcx, qword ptr [rdx + 0xa0]
mov	rbx, rdx
mov	rdi, r8
mov	r12d, r9d
test	rcx, rcx
je	0x1400830b8
je	0x1400830b8
mov	rax, qword ptr [rcx]
xor	r13d, r13d
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
test	eax, eax
cmovns	r13d, eax
setle	dl
test	rdi, rdi
lea	r14, [rbx + 0x50]
mov	qword ptr [rsi], 0xffffffffffffffff
setne	al
mov	rcx, r14
mov	dword ptr [rsi + 8], 0
and	eax, edx
mov	ebp, eax
call	0x14001d8f0
call	0x14001d8f0
cmp	al, 1
jne	0x140083019
jne	0x140083019
test	bpl, bpl
je	0x140083030
je	0x140083030
mov	rax, rsi
add	rsp, 0x60
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax + rax]
cmp	r12d, 1
jne	0x1400830e0
jne	0x1400830e0
test	rdi, rdi
jne	0x1400830e0
jne	0x1400830e0
cmp	byte ptr [rbx + 0x82], 0
jne	0x1400830c8
jne	0x1400830c8
mov	eax, dword ptr [rbx + 0x64]
cmp	byte ptr [rbx + 0x81], 0
mov	dword ptr [rsp + 0x5c], eax
je	0x140083087
je	0x140083087
mov	eax, dword ptr [rbx + 0x6c]
lea	rdx, [rsp + 0x5c]
mov	rcx, rbx
mov	dword ptr [rsp + 0x5c], eax
call	0x140081f00
call	0x140081f00
movsxd	rdi, eax
cmp	byte ptr [rbx + 0x82], 0
je	0x140083087
je	0x140083087
mov	rdi, qword ptr [rbx + 0x28]
sub	rdi, qword ptr [rbx + 0x20]
sar	rdi, 1
xor	edx, edx
mov	r8d, 1
mov	rcx, r14
call	0x140078780
call	0x140078780
cmp	rax, -1
je	0x140083019
je	0x140083019
add	rdi, rax
mov	eax, dword ptr [rsp + 0x5c]
mov	qword ptr [rsi], rdi
mov	dword ptr [rsi + 8], eax
jmp	0x140083019
jmp	0x140083019
nop	dword ptr [rax + rax]
mov	edx, 1
xor	r13d, r13d
jmp	0x140082fec
jmp	0x140082fec
nop	dword ptr [rax]
mov	rcx, qword ptr [rbx + 0xa0]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
test	al, al
jne	0x140083180
jne	0x140083180
nop	dword ptr [rax]
movsxd	r8, r13d
mov	eax, dword ptr [rbx + 0x64]
movzx	edx, byte ptr [rbx + 0x81]
imul	r8, rdi
cmp	byte ptr [rbx + 0x98], 0
je	0x14008313f
je	0x14008313f
mov	rdi, qword ptr [rbx + 8]
mov	rcx, qword ptr [rbx + 0x88]
xor	r9d, r9d
mov	byte ptr [rbx + 0x98], 0
cmp	qword ptr [rbx + 0x10], rdi
movq	xmm0, qword ptr [rbx + 0x70]
setne	r9b
lea	rcx, [rcx + r9*2]
mov	r9, qword ptr [rbx + 0x90]
movq	xmm1, rcx
mov	qword ptr [rbx + 0x88], rcx
mov	qword ptr [rbx + 0x18], r9
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx + 8], xmm0
mov	dword ptr [rsp + 0x5c], eax
test	dl, dl
je	0x140083151
je	0x140083151
cmp	r12d, 1
je	0x14008319b
je	0x14008319b
mov	eax, dword ptr [rsp + 0x5c]
mov	dword ptr [rsp + 0x20], eax
lea	rcx, [rsp + 0x40]
mov	r9d, r12d
mov	rdx, rbx
call	0x140082f00
call	0x140082f00
mov	rax, qword ptr [rsp + 0x40]
mov	qword ptr [rsp + 0x40], rax
mov	qword ptr [rsi], rax
mov	eax, dword ptr [rsp + 0x48]
mov	dword ptr [rsi + 8], eax
jmp	0x140083019
jmp	0x140083019
nop	
mov	eax, dword ptr [rbx + 0x64]
xor	edi, edi
cmp	byte ptr [rbx + 0x81], 0
mov	dword ptr [rsp + 0x5c], eax
je	0x140083073
je	0x140083073
jmp	0x14008305c
jmp	0x14008305c
mov	eax, dword ptr [rbx + 0x6c]
lea	rdx, [rsp + 0x5c]
mov	rcx, rbx
mov	qword ptr [rsp + 0x38], r8
mov	dword ptr [rsp + 0x5c], eax
call	0x140081f00
call	0x140081f00
mov	r8, qword ptr [rsp + 0x38]
cdqe	
add	r8, rax
mov	eax, dword ptr [rsp + 0x5c]
jmp	0x140083151
jmp	0x140083151
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	r13, qword ptr [r8]
mov	rbp, qword ptr [r8 + 8]
lea	rsi, [rdx + 0x50]
mov	qword ptr [rcx], 0xffffffffffffffff
mov	rdi, rcx
mov	rbx, rdx
mov	dword ptr [rcx + 8], 0
mov	rcx, rsi
call	0x14001d8f0
call	0x14001d8f0
test	al, al
je	0x140083273
je	0x140083273
cmp	byte ptr [rbx + 0x98], 0
je	0x140083253
je	0x140083253
mov	rax, qword ptr [rbx + 8]
xor	edx, edx
cmp	qword ptr [rbx + 0x10], rax
mov	byte ptr [rbx + 0x98], 0
mov	rax, qword ptr [rbx + 0x88]
setne	dl
movq	xmm0, qword ptr [rbx + 0x70]
lea	rax, [rax + rdx*2]
mov	rdx, qword ptr [rbx + 0x90]
movq	xmm2, rax
mov	qword ptr [rbx + 0x88], rax
mov	qword ptr [rbx + 0x18], rdx
punpcklqdq	xmm0, xmm2
movups	xmmword ptr [rbx + 8], xmm0
mov	rcx, rbx
mov	r12d, ebp
call	0x140082010
call	0x140082010
test	al, al
jne	0x140083288
jne	0x140083288
xor	r12d, r12d
mov	rax, 0xffffffffffffffff
mov	qword ptr [rdi], rax
mov	dword ptr [rdi + 8], r12d
mov	rax, rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
xor	r8d, r8d
mov	rdx, r13
mov	rcx, rsi
call	0x140078780
call	0x140078780
cmp	rax, -1
je	0x1400832e8
je	0x1400832e8
movdqu	xmm0, xmmword ptr [rbx + 0xa0]
xor	edx, edx
mov	qword ptr [rbx + 0x30], 0
mov	word ptr [rbx + 0x81], dx
punpckhqdq	xmm0, xmm0
mov	dword ptr [rbx + 0x68], ebp
movups	xmmword ptr [rbx + 0xb8], xmm0
movdqu	xmm0, xmmword ptr [rbx + 0x70]
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
punpcklqdq	xmm1, xmm0
pxor	xmm0, xmm0
movups	xmmword ptr [rbx + 8], xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
jmp	0x14008326c
jmp	0x14008326c
nop	dword ptr [rax + rax]
xor	r12d, r12d
jmp	0x14008326c
jmp	0x14008326c
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, rcx
mov	esi, edx
test	byte ptr [rcx + 0x60], 0x11
je	0x14008337d
je	0x14008337d
cmp	byte ptr [rcx + 0x81], 0
je	0x140083390
je	0x140083390
cmp	byte ptr [rcx + 0x98], 0
je	0x14008335c
je	0x14008335c
mov	rax, qword ptr [rcx + 8]
xor	edx, edx
cmp	qword ptr [rcx + 0x10], rax
mov	byte ptr [rcx + 0x98], 0
mov	rax, qword ptr [rcx + 0x88]
setne	dl
movq	xmm0, qword ptr [rcx + 0x70]
lea	rax, [rax + rdx*2]
mov	rdx, qword ptr [rcx + 0x90]
movq	xmm2, rax
mov	qword ptr [rcx + 0x88], rax
mov	qword ptr [rcx + 0x18], rdx
punpcklqdq	xmm0, xmm2
movups	xmmword ptr [rcx + 8], xmm0
mov	rcx, rbx
lea	rdx, [rbx + 0x6c]
call	0x140081f00
call	0x140081f00
mov	rcx, rbx
mov	ebp, dword ptr [rbx + 0x6c]
mov	edi, eax
call	0x140082010
call	0x140082010
test	al, al
jne	0x1400834b0
jne	0x1400834b0
mov	eax, 0xffffffff
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	rdx, qword ptr [rcx + 0x20]
mov	r8, qword ptr [rcx + 0x28]
cmp	rdx, r8
jae	0x140083410
jae	0x140083410
cmp	si, -1
je	0x1400833af
je	0x1400833af
mov	word ptr [r8], si
add	r8, 2
mov	qword ptr [rcx + 0x28], r8
sub	r8, rdx
mov	rcx, rbx
sar	r8, 1
call	0x140082130
call	0x140082130
test	al, al
je	0x14008337d
je	0x14008337d
mov	rax, qword ptr [rbx + 0x70]
test	byte ptr [rbx + 0x60], 0x11
movq	xmm0, rax
mov	qword ptr [rbx + 0x18], rax
punpcklqdq	xmm0, xmm0
movups	xmmword ptr [rbx + 8], xmm0
je	0x140083538
je	0x140083538
mov	rdx, qword ptr [rbx + 0x78]
cmp	rdx, 1
jbe	0x140083538
jbe	0x140083538
lea	rdx, [rax + rdx*2 - 2]
mov	qword ptr [rbx + 0x28], rax
mov	qword ptr [rbx + 0x20], rax
mov	qword ptr [rbx + 0x30], rdx
cmp	si, -1
je	0x14008342c
je	0x14008342c
mov	eax, esi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rdx, qword ptr [rcx + 0x78]
cmp	rdx, 1
ja	0x140083440
ja	0x140083440
mov	word ptr [rsp + 0x2e], si
cmp	si, -1
jne	0x140083480
jne	0x140083480
mov	byte ptr [rbx + 0x82], 1
xor	eax, eax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x70]
lea	rdx, [rax + rdx*2 - 2]
mov	rcx, rax
mov	qword ptr [rbx + 8], rcx
mov	qword ptr [rbx + 0x10], rcx
mov	qword ptr [rbx + 0x18], rcx
mov	qword ptr [rbx + 0x28], rax
mov	qword ptr [rbx + 0x20], rax
mov	qword ptr [rbx + 0x30], rdx
mov	byte ptr [rbx + 0x82], 1
cmp	si, -1
je	0x14008342c
je	0x14008342c
mov	word ptr [rax], si
add	rax, 2
mov	qword ptr [rbx + 0x28], rax
mov	eax, esi
jmp	0x140083407
jmp	0x140083407
lea	rdx, [rsp + 0x2e]
mov	r8d, 1
mov	rcx, rbx
call	0x140082130
call	0x140082130
mov	edx, eax
mov	eax, 0xffffffff
test	dl, dl
je	0x140083382
je	0x140083382
mov	byte ptr [rbx + 0x82], 1
mov	eax, esi
jmp	0x140083407
jmp	0x140083407
movsxd	rdx, edi
lea	rcx, [rbx + 0x50]
mov	r8d, 1
call	0x140078780
call	0x140078780
cmp	rax, -1
je	0x14008337d
je	0x14008337d
movdqu	xmm0, xmmword ptr [rbx + 0xa0]
mov	rdx, qword ptr [rbx + 0x78]
xor	eax, eax
mov	dword ptr [rbx + 0x68], ebp
mov	word ptr [rbx + 0x81], ax
punpckhqdq	xmm0, xmm0
mov	qword ptr [rbx + 0x30], 0
movups	xmmword ptr [rbx + 0xb8], xmm0
movdqu	xmm0, xmmword ptr [rbx + 0x70]
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
punpcklqdq	xmm1, xmm0
pxor	xmm0, xmm0
movups	xmmword ptr [rbx + 8], xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
cmp	rdx, 1
jbe	0x14008341a
jbe	0x14008341a
mov	rcx, qword ptr [rbx + 0x70]
test	byte ptr [rbx + 0x60], 0x11
jne	0x140083541
jne	0x140083541
xor	eax, eax
xor	edx, edx
jmp	0x14008344c
jmp	0x14008344c
nop	word ptr [rax + rax]
xor	eax, eax
xor	edx, edx
jmp	0x1400833f3
jmp	0x1400833f3
mov	rax, rcx
jmp	0x140083444
jmp	0x140083444
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
mov	rbx, rcx
mov	esi, edx
test	byte ptr [rcx + 0x60], 8
je	0x140083690
je	0x140083690
cmp	byte ptr [rcx + 0x82], 0
jne	0x140083608
jne	0x140083608
movzx	edi, byte ptr [rcx + 0x98]
mov	rax, qword ptr [rcx + 0x10]
cmp	qword ptr [rcx + 8], rax
jae	0x14008364d
jae	0x14008364d
lea	rdx, [rax - 2]
mov	qword ptr [rcx + 0x10], rdx
movzx	edx, word ptr [rax - 2]
xor	eax, eax
cmp	si, -1
je	0x140083695
je	0x140083695
cmp	dx, si
je	0x1400835fb
je	0x1400835fb
test	dil, dil
jne	0x140083690
jne	0x140083690
cmp	byte ptr [rbx + 0x98], 0
mov	rax, qword ptr [rbx + 0x10]
jne	0x1400835f1
jne	0x1400835f1
movq	xmm0, rax
lea	rdx, [rbx + 0x86]
lea	rax, [rbx + 0x84]
mov	byte ptr [rbx + 0x98], 1
movhps	xmm0, qword ptr [rbx + 0x18]
mov	qword ptr [rbx + 0x18], rdx
movups	xmmword ptr [rbx + 0x88], xmm0
movq	xmm0, rax
punpcklqdq	xmm0, xmm0
movups	xmmword ptr [rbx + 8], xmm0
mov	byte ptr [rbx + 0x81], 1
mov	word ptr [rax], si
mov	eax, esi
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
mov	edx, 0xffff
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	ax, -1
je	0x140083690
je	0x140083690
movq	xmm0, qword ptr [rbx + 0x70]
mov	qword ptr [rbx + 0x30], 0
mov	byte ptr [rbx + 0x82], 0
movzx	edi, byte ptr [rbx + 0x98]
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
movups	xmmword ptr [rbx + 8], xmm1
mov	rax, qword ptr [rbx]
lea	rcx, [rsp + 0x30]
mov	r9d, 1
mov	rdx, rbx
mov	dword ptr [rsp + 0x20], 0x18
mov	r8, 0xffffffffffffffff
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	qword ptr [rsp + 0x30], -1
je	0x140083690
je	0x140083690
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, eax
cmp	ax, -1
jne	0x140083594
jne	0x140083594
nop	dword ptr [rax]
mov	eax, 0xffffffff
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	esi, dword ptr [rcx + 0x60]
mov	rbx, rcx
test	sil, 8
je	0x140083738
je	0x140083738
lea	rdi, [rcx + 0x50]
mov	rcx, rdi
call	0x14001d8f0
call	0x14001d8f0
test	al, al
je	0x140083738
je	0x140083738
mov	rax, qword ptr [rbx + 0x18]
mov	rcx, qword ptr [rbx + 0xa0]
and	esi, 4
sub	rax, qword ptr [rbx + 0x10]
sar	rax, 1
mov	rbp, rax
test	rcx, rcx
je	0x140083741
je	0x140083741
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
test	esi, esi
je	0x1400836f3
je	0x1400836f3
test	eax, eax
jns	0x140083700
jns	0x140083700
mov	rax, rbp
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
mov	rcx, rdi
call	0x140078990
call	0x140078990
mov	rcx, qword ptr [rbx + 0xa0]
mov	rsi, rax
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
movsxd	rcx, eax
mov	rax, rsi
cqo	
idiv	rcx
add	rbp, rax
mov	rax, rbp
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rbp, 0xffffffffffffffff
jmp	0x1400836f3
jmp	0x1400836f3
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
mov	rbx, rcx
test	byte ptr [rcx + 0x60], 8
je	0x140083ab9
je	0x140083ab9
cmp	byte ptr [rcx + 0x82], 0
jne	0x1400839c0
jne	0x1400839c0
cmp	byte ptr [rbx + 0x98], 0
mov	rax, qword ptr [rcx + 0x10]
jne	0x140083a0e
jne	0x140083a0e
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jb	0x140083a56
jb	0x140083a56
mov	rdx, qword ptr [rbx + 0x78]
mov	eax, 2
mov	rcx, qword ptr [rbx + 0xa0]
cmp	rdx, rax
cmovae	rax, rdx
mov	rsi, rax
lea	rdi, [rax - 1]
test	rcx, rcx
je	0x140083ca4
je	0x140083ca4
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
test	al, al
jne	0x140083a70
jne	0x140083a70
mov	rcx, qword ptr [rbx + 0xa0]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
test	eax, eax
jle	0x140083bd0
jle	0x140083bd0
movsxd	rbp, eax
imul	rbp, rdi
mov	rax, rbp
mov	rdx, qword ptr [rbx + 0xb8]
mov	r13, qword ptr [rbx + 0xc0]
mov	r12, rax
sub	r13, rdx
sub	r12, r13
cmp	rax, r13
mov	eax, 0
cmovle	r12, rax
cmp	byte ptr [rbx + 0x81], 0
mov	rax, qword ptr [rbx + 0xb0]
je	0x140083829
je	0x140083829
mov	rsi, qword ptr [rbx + 0x18]
cmp	qword ptr [rbx + 8], rsi
je	0x140083c7a
je	0x140083c7a
cmp	rbp, rax
jg	0x140083bf0
jg	0x140083bf0
test	r13, r13
jne	0x140083c50
jne	0x140083c50
mov	rsi, qword ptr [rbx + 0xa8]
mov	eax, dword ptr [rbx + 0x68]
lea	r9, [rsi + r13]
mov	qword ptr [rbx + 0xb8], rsi
lea	rbp, [rdi + rdi]
mov	qword ptr [rbx + 0xc0], r9
mov	dword ptr [rbx + 0x6c], eax
test	r12, r12
jne	0x140083c68
jne	0x140083c68
mov	rcx, qword ptr [rbx + 8]
mov	r8, rsi
xor	esi, esi
mov	qword ptr [rsp + 0x48], rcx
cmp	r8, r9
jae	0x1400838f4
jae	0x1400838f4
xor	r13d, r13d
nop	dword ptr [rax]
mov	rax, qword ptr [rbx + 0xa0]
lea	r11, [rsp + 0x48]
lea	rdx, [rbx + 0x68]
mov	r10, qword ptr [rax]
mov	qword ptr [rsp + 0x38], r11
lea	r11, [rcx + rbp]
mov	qword ptr [rsp + 0x28], rcx
lea	rcx, [rbx + 0xb8]
mov	qword ptr [rsp + 0x20], rcx
mov	rcx, rax
mov	qword ptr [rsp + 0x30], r11
call	qword ptr [r10 + 0x20]
call	qword ptr [r10 + 0x20]
mov	esi, eax
cmp	eax, 3
je	0x140083ad0
je	0x140083ad0
mov	rdx, qword ptr [rsp + 0x48]
mov	rax, qword ptr [rbx + 8]
mov	rcx, rdx
sub	rcx, rax
mov	r12, rcx
sar	r12, 1
cmp	esi, 2
je	0x140083bb0
je	0x140083bb0
test	r13b, r13b
jne	0x140083ca9
jne	0x140083ca9
cmp	rdx, rax
jne	0x140083ca9
jne	0x140083ca9
mov	r9, qword ptr [rbx + 0xc0]
mov	r12d, 1
mov	rax, r9
sub	rax, qword ptr [rbx + 0xa8]
add	rax, r12
cmp	rax, qword ptr [rbx + 0xb0]
jg	0x140083c98
jg	0x140083c98
mov	rdx, r9
lea	rcx, [rbx + 0x50]
mov	r8, r12
call	0x1400786a0
call	0x1400786a0
mov	r9, rax
test	rax, rax
je	0x140083b08
je	0x140083b08
cmp	rax, -1
je	0x140083b3f
je	0x140083b3f
xor	r13d, r13d
mov	rcx, qword ptr [rbx + 8]
mov	r8, qword ptr [rbx + 0xb8]
add	r9, qword ptr [rbx + 0xc0]
mov	qword ptr [rbx + 0xc0], r9
mov	qword ptr [rsp + 0x48], rcx
cmp	r8, r9
jb	0x140083880
jb	0x140083880
cmp	esi, 3
je	0x140083adb
je	0x140083adb
test	r13b, r13b
je	0x1400838f4
je	0x1400838f4
movq	xmm0, qword ptr [rbx + 0x70]
mov	qword ptr [rbx + 0x30], 0
mov	byte ptr [rbx + 0x81], 0
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
movups	xmmword ptr [rbx + 8], xmm1
cmp	esi, 1
jne	0x140083ab9
jne	0x140083ab9
lea	rcx, [rip + 0x364e7]
call	0x1400b4200
call	0x1400b4200
nop	
mov	rax, qword ptr [rcx]
mov	edx, 0xffff
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	ax, -1
je	0x140083a59
je	0x140083a59
mov	rax, qword ptr [rbx + 0x70]
cmp	byte ptr [rbx + 0x98], 0
mov	qword ptr [rbx + 0x30], 0
mov	byte ptr [rbx + 0x82], 0
movq	xmm0, rax
mov	qword ptr [rbx + 0x18], rax
punpcklqdq	xmm0, xmm0
movups	xmmword ptr [rbx + 8], xmm0
pxor	xmm0, xmm0
movups	xmmword ptr [rbx + 0x20], xmm0
je	0x140083787
je	0x140083787
xor	edx, edx
cmp	qword ptr [rbx + 8], rax
mov	rax, qword ptr [rbx + 0x88]
mov	byte ptr [rbx + 0x98], 0
setne	dl
movq	xmm0, qword ptr [rbx + 0x70]
lea	rax, [rax + rdx*2]
mov	rdx, qword ptr [rbx + 0x90]
movq	xmm2, rax
mov	qword ptr [rbx + 0x88], rax
punpcklqdq	xmm0, xmm2
mov	qword ptr [rbx + 0x18], rdx
movups	xmmword ptr [rbx + 8], xmm0
cmp	rax, rdx
jae	0x140083794
jae	0x140083794
movzx	eax, word ptr [rax]
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rdx, qword ptr [rbx + 8]
lea	rcx, [rbx + 0x50]
mov	r8, rdi
call	0x1400786a0
call	0x1400786a0
mov	r12, rax
test	rax, rax
jne	0x140083b68
jne	0x140083b68
movq	xmm0, qword ptr [rbx + 0x70]
mov	qword ptr [rbx + 0x30], 0
mov	byte ptr [rbx + 0x81], 0
movdqu	xmm1, xmm0
movq	qword ptr [rbx + 0x18], xmm0
pxor	xmm0, xmm0
punpcklqdq	xmm1, xmm1
movups	xmmword ptr [rbx + 0x20], xmm0
movups	xmmword ptr [rbx + 8], xmm1
mov	eax, 0xffffffff
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	r9, qword ptr [rbx + 0xc0]
mov	rcx, qword ptr [rbx + 8]
mov	rdx, qword ptr [rbx + 0xa8]
sub	r9, rdx
mov	r12, r9
cmp	rdi, r9
jb	0x140083b18
jb	0x140083b18
test	r9, r9
jne	0x140083b58
jne	0x140083b58
mov	qword ptr [rbx + 0xb8], rdx
mov	esi, 3
jmp	0x140083973
jmp	0x140083973
nop	dword ptr [rax + rax]
mov	r13d, 1
jmp	0x140083943
jmp	0x140083943
nop	dword ptr [rax + rax]
mov	r12, rdi
mov	r8, rbp
call	0x140015998
call	0x140015998
add	rdi, qword ptr [rbx + 0xa8]
mov	qword ptr [rbx + 0xb8], rdi
test	r12, r12
jg	0x140083b70
jg	0x140083b70
test	r13b, r13b
jne	0x140083c70
jne	0x140083c70
call	qword ptr [rip + 0x629e3]
call	qword ptr [rip + 0x629e3]
lea	rcx, [rip + 0x363c4]
mov	edx, dword ptr [rax]
call	0x1400b42a0
call	0x1400b42a0
nop	dword ptr [rax + rax]
lea	rbp, [r9 + r9]
mov	rdi, r9
jmp	0x140083b1b
jmp	0x140083b1b
nop	dword ptr [rax]
jle	0x140083b3f
jle	0x140083b3f
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx + 0x70]
test	byte ptr [rbx + 0x60], 8
mov	qword ptr [rbx + 0x30], 0
mov	byte ptr [rbx + 0x81], 1
movq	xmm0, rax
lea	rdx, [rax + r12*2]
cmove	rdx, rax
punpcklqdq	xmm0, xmm0
movzx	eax, word ptr [rax]
movups	xmmword ptr [rbx + 8], xmm0
pxor	xmm0, xmm0
mov	qword ptr [rbx + 0x18], rdx
movups	xmmword ptr [rbx + 0x20], xmm0
jmp	0x140083a59
jmp	0x140083a59
test	rcx, rcx
jg	0x140083b70
jg	0x140083b70
test	r13b, r13b
jne	0x14008397c
jne	0x14008397c
lea	rcx, [rip + 0x36313]
call	0x1400b4200
call	0x1400b4200
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rbx + 0xa0]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
cdqe	
lea	rbp, [rsi + rax - 2]
mov	rax, rdi
jmp	0x1400837e8
jmp	0x1400837e8
nop	dword ptr [rax]
mov	rcx, rbp
call	0x1400b2c00
call	0x1400b2c00
mov	rsi, rax
test	r13, r13
jne	0x140083c37
jne	0x140083c37
mov	rcx, qword ptr [rbx + 0xa8]
test	rcx, rcx
je	0x140083c11
je	0x140083c11
call	0x1400b2bd0
call	0x1400b2bd0
mov	qword ptr [rbx + 0xa8], rsi
mov	qword ptr [rbx + 0xb0], rbp
jmp	0x140083842
jmp	0x140083842
xor	r12d, r12d
cmp	rbp, rax
jle	0x140083c50
jle	0x140083c50
mov	rcx, rbp
call	0x1400b2c00
call	0x1400b2c00
mov	rsi, rax
mov	rdx, qword ptr [rbx + 0xb8]
mov	r8, r13
mov	rcx, rsi
call	0x140015998
call	0x140015998
jmp	0x140083c00
jmp	0x140083c00
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rbx + 0xa8]
mov	r8, r13
call	0x1400159a0
call	0x1400159a0
jmp	0x14008383b
jmp	0x14008383b
nop	dword ptr [rax]
xor	esi, esi
jmp	0x140083901
jmp	0x140083901
nop	
mov	esi, 3
jmp	0x14008397c
jmp	0x14008397c
test	r13, r13
jne	0x140083c24
jne	0x140083c24
cmp	rbp, rax
jle	0x14008383b
jle	0x14008383b
mov	rcx, rbp
call	0x1400b2c00
call	0x1400b2c00
mov	rsi, rax
jmp	0x140083c00
jmp	0x140083c00
lea	rcx, [rip + 0x361c1]
call	0x1400b4200
call	0x1400b4200
call	0x1400b3a30
call	0x1400b3a30
test	rcx, rcx
jg	0x140083b70
jg	0x140083b70
test	r13b, r13b
je	0x140083b3f
je	0x140083b3f
jmp	0x14008397c
jmp	0x14008397c
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rdx
mov	rsi, rcx
call	0x140092a60
call	0x140092a60
lea	rax, [rip + 0x42b78]
mov	dword ptr [rsi + 0x40], 0
mov	rdx, qword ptr [rbx + 0x70]
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rbx + 0x50]
mov	qword ptr [rsi + 0x48], 0
mov	qword ptr [rsi + 0x50], rax
movzx	eax, byte ptr [rbx + 0x58]
mov	qword ptr [rbx + 0x50], 0
mov	byte ptr [rsi + 0x58], al
mov	rax, qword ptr [rbx + 0x78]
mov	byte ptr [rbx + 0x58], 0
movdqu	xmm1, xmmword ptr [rbx + 0x60]
mov	qword ptr [rsi + 0x78], rax
movzx	eax, word ptr [rbx + 0x80]
mov	qword ptr [rsi + 0x70], rdx
xor	edx, edx
mov	word ptr [rsi + 0x80], ax
movzx	eax, byte ptr [rbx + 0x82]
mov	dword ptr [rbx + 0x60], 0
movq	xmm0, qword ptr [rbx + 0x60]
mov	byte ptr [rsi + 0x82], al
movzx	eax, word ptr [rbx + 0x84]
movups	xmmword ptr [rsi + 0x60], xmm1
pshufd	xmm0, xmm0, 0xe5
pxor	xmm1, xmm1
mov	word ptr [rsi + 0x84], ax
mov	rax, qword ptr [rbx + 0x88]
mov	qword ptr [rbx + 0x70], 0
mov	qword ptr [rsi + 0x88], rax
mov	rax, qword ptr [rbx + 0x90]
mov	qword ptr [rbx + 0x78], 1
mov	word ptr [rbx + 0x80], dx
mov	byte ptr [rbx + 0x82], 0
mov	qword ptr [rbx + 0x88], 0
mov	qword ptr [rbx + 0x90], 0
mov	qword ptr [rsi + 0x90], rax
movzx	eax, byte ptr [rbx + 0x98]
movups	xmmword ptr [rbx + 8], xmm1
mov	byte ptr [rsi + 0x98], al
mov	rax, qword ptr [rbx + 0xa0]
mov	byte ptr [rbx + 0x98], 0
mov	qword ptr [rsi + 0xa0], rax
mov	rax, qword ptr [rbx + 0xa8]
movups	xmmword ptr [rbx + 0x18], xmm1
mov	qword ptr [rsi + 0xa8], rax
mov	rax, qword ptr [rbx + 0xb0]
mov	qword ptr [rbx + 0xa8], 0
mov	qword ptr [rsi + 0xb0], rax
mov	rax, qword ptr [rbx + 0xb8]
mov	qword ptr [rbx + 0xb0], 0
mov	qword ptr [rsi + 0xb8], rax
mov	rax, qword ptr [rbx + 0xc0]
mov	qword ptr [rbx + 0xb8], 0
mov	qword ptr [rbx + 0xc0], 0
mov	qword ptr [rsi + 0xc0], rax
movups	xmmword ptr [rbx + 0x28], xmm1
movq	qword ptr [rbx + 0x68], xmm0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0x3b0c4]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x38]
mov	qword ptr [rcx - 0x30], 0
mov	qword ptr [rcx - 0x28], 0
mov	qword ptr [rcx - 0x20], 0
mov	qword ptr [rcx - 0x18], 0
mov	qword ptr [rcx - 0x10], 0
mov	qword ptr [rcx - 8], 0
call	0x14009be50
call	0x14009be50
lea	rax, [rip + 0x429aa]
mov	dword ptr [rbx + 0x40], 0
lea	rdx, [rbx + 0x40]
mov	qword ptr [rbx], rax
lea	rcx, [rbx + 0x50]
mov	qword ptr [rbx + 0x48], 0
call	0x140078a00
call	0x140078a00
xor	edx, edx
xor	eax, eax
mov	byte ptr [rbx + 0x82], 0
mov	word ptr [rbx + 0x84], dx
pxor	xmm0, xmm0
mov	rcx, qword ptr [rip + 0x3abae]
mov	qword ptr [rbx + 0x70], 0
mov	qword ptr [rbx + 0x78], 0x1000
mov	word ptr [rbx + 0x80], ax
mov	byte ptr [rbx + 0x98], 0
mov	qword ptr [rbx + 0xb0], 0
movups	xmmword ptr [rbx + 0x60], xmm0
pxor	xmm0, xmm0
movups	xmmword ptr [rbx + 0x88], xmm0
movups	xmmword ptr [rbx + 0xa0], xmm0
movups	xmmword ptr [rbx + 0xb8], xmm0
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx + 0x38]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
mov	qword ptr [rbx + 0xa0], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rdx
mov	rsi, rcx
call	0x140092a60
call	0x140092a60
lea	rax, [rip + 0x428e8]
mov	dword ptr [rsi + 0x40], 0
mov	rdx, qword ptr [rbx + 0x70]
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rbx + 0x50]
mov	qword ptr [rsi + 0x48], 0
mov	qword ptr [rsi + 0x50], rax
movzx	eax, byte ptr [rbx + 0x58]
mov	qword ptr [rbx + 0x50], 0
mov	byte ptr [rsi + 0x58], al
mov	rax, qword ptr [rbx + 0x78]
mov	byte ptr [rbx + 0x58], 0
movdqu	xmm1, xmmword ptr [rbx + 0x60]
mov	qword ptr [rsi + 0x78], rax
movzx	eax, word ptr [rbx + 0x80]
mov	qword ptr [rsi + 0x70], rdx
xor	edx, edx
mov	word ptr [rsi + 0x80], ax
movzx	eax, byte ptr [rbx + 0x82]
mov	dword ptr [rbx + 0x60], 0
movq	xmm0, qword ptr [rbx + 0x60]
mov	byte ptr [rsi + 0x82], al
movzx	eax, word ptr [rbx + 0x84]
movups	xmmword ptr [rsi + 0x60], xmm1
pshufd	xmm0, xmm0, 0xe5
pxor	xmm1, xmm1
mov	word ptr [rsi + 0x84], ax
mov	rax, qword ptr [rbx + 0x88]
mov	qword ptr [rbx + 0x70], 0
mov	qword ptr [rsi + 0x88], rax
mov	rax, qword ptr [rbx + 0x90]
mov	qword ptr [rbx + 0x78], 1
mov	word ptr [rbx + 0x80], dx
mov	byte ptr [rbx + 0x82], 0
mov	qword ptr [rbx + 0x88], 0
mov	qword ptr [rbx + 0x90], 0
mov	qword ptr [rsi + 0x90], rax
movzx	eax, byte ptr [rbx + 0x98]
movups	xmmword ptr [rbx + 8], xmm1
mov	byte ptr [rsi + 0x98], al
mov	rax, qword ptr [rbx + 0xa0]
mov	byte ptr [rbx + 0x98], 0
mov	qword ptr [rsi + 0xa0], rax
mov	rax, qword ptr [rbx + 0xa8]
movups	xmmword ptr [rbx + 0x18], xmm1
mov	qword ptr [rsi + 0xa8], rax
mov	rax, qword ptr [rbx + 0xb0]
mov	qword ptr [rbx + 0xa8], 0
mov	qword ptr [rsi + 0xb0], rax
mov	rax, qword ptr [rbx + 0xb8]
mov	qword ptr [rbx + 0xb0], 0
mov	qword ptr [rsi + 0xb8], rax
mov	rax, qword ptr [rbx + 0xc0]
mov	qword ptr [rbx + 0xb8], 0
mov	qword ptr [rbx + 0xc0], 0
mov	qword ptr [rsi + 0xc0], rax
movups	xmmword ptr [rbx + 0x28], xmm1
movq	qword ptr [rbx + 0x68], xmm0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0x3ae34]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x38]
mov	qword ptr [rcx - 0x30], 0
mov	qword ptr [rcx - 0x28], 0
mov	qword ptr [rcx - 0x20], 0
mov	qword ptr [rcx - 0x18], 0
mov	qword ptr [rcx - 0x10], 0
mov	qword ptr [rcx - 8], 0
call	0x14009be50
call	0x14009be50
lea	rax, [rip + 0x4271a]
mov	dword ptr [rbx + 0x40], 0
lea	rdx, [rbx + 0x40]
mov	qword ptr [rbx], rax
lea	rcx, [rbx + 0x50]
mov	qword ptr [rbx + 0x48], 0
call	0x140078a00
call	0x140078a00
xor	edx, edx
xor	eax, eax
mov	byte ptr [rbx + 0x82], 0
mov	word ptr [rbx + 0x84], dx
pxor	xmm0, xmm0
mov	rcx, qword ptr [rip + 0x3a91e]
mov	qword ptr [rbx + 0x70], 0
mov	qword ptr [rbx + 0x78], 0x1000
mov	word ptr [rbx + 0x80], ax
mov	byte ptr [rbx + 0x98], 0
mov	qword ptr [rbx + 0xb0], 0
movups	xmmword ptr [rbx + 0x60], xmm0
pxor	xmm0, xmm0
movups	xmmword ptr [rbx + 0x88], xmm0
movups	xmmword ptr [rbx + 0xa0], xmm0
movups	xmmword ptr [rbx + 0xb8], xmm0
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx + 0x38]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
mov	qword ptr [rbx + 0xa0], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x42664]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x50]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x3ad19]
lea	rcx, [rbx + 0x38]
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bf30
call	0x14009bf30
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400841f7
jmp	0x1400841f7
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x42604]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x50]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x3acb9]
lea	rcx, [rbx + 0x38]
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bf30
jmp	0x14009bf30
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140084257
jmp	0x140084257
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x425b4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x50]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x3ac69]
lea	rcx, [rbx + 0x38]
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bf30
jmp	0x14009bf30
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400842a7
jmp	0x1400842a7
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rdx
mov	rsi, rcx
call	0x140082820
call	0x140082820
mov	rdx, rbx
mov	rcx, rsi
call	0x140092b70
call	0x140092b70
mov	rdx, qword ptr [rbx + 0x50]
mov	rax, qword ptr [rsi + 0x50]
mov	qword ptr [rsi + 0x50], rdx
movzx	edx, byte ptr [rbx + 0x58]
mov	qword ptr [rbx + 0x50], rax
movzx	eax, byte ptr [rsi + 0x58]
mov	byte ptr [rsi + 0x58], dl
movdqu	xmm1, xmmword ptr [rbx + 0x60]
mov	byte ptr [rbx + 0x58], al
mov	dword ptr [rbx + 0x60], 0
movq	xmm0, qword ptr [rbx + 0x60]
movups	xmmword ptr [rsi + 0x60], xmm1
mov	rax, qword ptr [rbx + 0x70]
mov	qword ptr [rbx + 0x70], 0
pshufd	xmm0, xmm0, 0xe5
mov	qword ptr [rsi + 0x70], rax
mov	rax, qword ptr [rbx + 0x78]
mov	qword ptr [rbx + 0x78], 1
mov	qword ptr [rsi + 0x78], rax
movzx	eax, byte ptr [rbx + 0x80]
mov	byte ptr [rbx + 0x80], 0
mov	byte ptr [rsi + 0x80], al
mov	rax, qword ptr [rbx + 0xa8]
mov	qword ptr [rbx + 0xa8], 0
mov	qword ptr [rsi + 0xa8], rax
mov	rax, qword ptr [rbx + 0xb0]
mov	qword ptr [rbx + 0xb0], 0
mov	qword ptr [rsi + 0xb0], rax
mov	rax, qword ptr [rbx + 0xb8]
mov	qword ptr [rbx + 0xb8], 0
mov	qword ptr [rsi + 0xb8], rax
mov	rax, qword ptr [rbx + 0xc0]
mov	qword ptr [rbx + 0xc0], 0
mov	qword ptr [rsi + 0xc0], rax
movzx	eax, byte ptr [rbx + 0x81]
mov	byte ptr [rbx + 0x81], 0
movq	xmm1, qword ptr [rbx + 0x70]
mov	byte ptr [rsi + 0x81], al
movzx	eax, byte ptr [rbx + 0x82]
mov	byte ptr [rbx + 0x82], 0
movdqu	xmm2, xmm1
mov	byte ptr [rsi + 0x82], al
mov	rax, qword ptr [rbx + 0x88]
punpcklqdq	xmm2, xmm2
mov	qword ptr [rbx + 0x88], 0
mov	qword ptr [rsi + 0x88], rax
mov	rax, qword ptr [rbx + 0x90]
mov	qword ptr [rbx + 0x90], 0
mov	qword ptr [rsi + 0x90], rax
movzx	eax, byte ptr [rbx + 0x98]
mov	byte ptr [rbx + 0x98], 0
mov	byte ptr [rsi + 0x98], al
mov	rax, rsi
movq	qword ptr [rbx + 0x18], xmm1
pxor	xmm1, xmm1
mov	qword ptr [rbx + 0x30], 0
movups	xmmword ptr [rbx + 8], xmm2
movups	xmmword ptr [rbx + 0x20], xmm1
movq	qword ptr [rbx + 0x68], xmm0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rcx + 0x18]
call	0x14007fde0
call	0x14007fde0
test	rax, rax
mov	rax, qword ptr [rbx]
je	0x1400844a0
je	0x1400844a0
add	rbx, qword ptr [rax - 0x18]
xor	edx, edx
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
nop	dword ptr [rax]
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rcx + 0x18]
call	0x14007fef0
call	0x14007fef0
test	rax, rax
mov	rax, qword ptr [rbx]
je	0x1400844f0
je	0x1400844f0
add	rbx, qword ptr [rax - 0x18]
xor	edx, edx
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
nop	dword ptr [rax]
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rdx, qword ptr [rdx]
mov	rbx, rcx
lea	rcx, [rcx + 0x18]
call	0x14007fde0
call	0x14007fde0
test	rax, rax
mov	rax, qword ptr [rbx]
je	0x140084540
je	0x140084540
add	rbx, qword ptr [rax - 0x18]
xor	edx, edx
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
nop	
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rbp, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rdi, qword ptr [rax - 0x18]
add	rbp, rcx
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rbp
add	rdi, rdx
mov	rdx, rdi
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rbp + 0xd0]
mov	rcx, rbp
call	0x1400ab190
call	0x1400ab190
lea	rdx, [rdi + 0xd0]
mov	rcx, rdi
call	0x1400ab190
call	0x1400ab190
mov	rdx, qword ptr [rdi + 0xd8]
mov	rax, qword ptr [rbp + 0xd8]
lea	rcx, [rbx + 0x18]
mov	qword ptr [rbp + 0xd8], rdx
movzx	edx, byte ptr [rdi + 0xe0]
mov	qword ptr [rdi + 0xd8], rax
movzx	eax, byte ptr [rbp + 0xe0]
mov	byte ptr [rbp + 0xe0], dl
movzx	edx, byte ptr [rdi + 0xe1]
mov	byte ptr [rdi + 0xe0], al
movzx	eax, byte ptr [rbp + 0xe1]
mov	byte ptr [rbp + 0xe1], dl
mov	rdx, qword ptr [rsi + 8]
mov	byte ptr [rdi + 0xe1], al
mov	rax, qword ptr [rbx + 8]
mov	qword ptr [rbx + 8], rdx
lea	rdx, [rsi + 0x18]
mov	qword ptr [rsi + 8], rax
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x140080010
jmp	0x140080010
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rcx + 0x18]
call	0x140080270
call	0x140080270
test	rax, rax
je	0x140084640
je	0x140084640
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
nop	
nop	
nop	
nop	
nop	
nop	
add	rcx, 0x68
jmp	0x14001d8f0
jmp	0x14001d8f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rcx + 0xe0]
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rbp
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
mov	rcx, rbp
mov	word ptr [rbx + 0x1c0], ax
lea	rax, [rip + 0x3b754]
mov	qword ptr [rbx], rax
add	rax, 0x28
movups	xmmword ptr [rbx + 0x1c8], xmm0
movups	xmmword ptr [rbx + 0x1d8], xmm0
mov	qword ptr [rbx + 0xe0], rax
mov	rax, qword ptr [rsi + 8]
mov	qword ptr [rbx + 0x1b8], 0
mov	qword ptr [rbx + 8], rax
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
mov	rdx, rdi
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0x1b0]
mov	rcx, rbp
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rdi + 0xd8]
lea	rdx, [rsi + 0x18]
mov	qword ptr [rdi + 0xd8], 0
mov	qword ptr [rbx + 0x1c8], 0
mov	qword ptr [rbx + 0x1b8], rax
movzx	eax, word ptr [rdi + 0xe0]
lea	rdi, [rbx + 0x18]
mov	rcx, rdi
mov	word ptr [rbx + 0x1c0], ax
lea	rax, [rip + 0x421a0]
mov	qword ptr [rsi + 8], 0
mov	qword ptr [rbx], rax
add	rax, 0x50
mov	qword ptr [rbx + 0xe0], rax
sub	rax, 0x28
mov	qword ptr [rbx + 0x10], rax
call	0x140081700
call	0x140081700
mov	qword ptr [rbx + 0x1c8], rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rsi, rax
jmp	0x140084782
jmp	0x140084782
lea	rdx, [rip + 0x40051]
mov	rcx, rbx
mov	rsi, rax
call	0x14006c210
call	0x14006c210
mov	rax, qword ptr [rip + 0x3a9d7]
mov	rcx, rbp
add	rax, 0x10
mov	qword ptr [rbx + 0xe0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rdi, [rip + 0x3b637]
lea	rsi, [rcx + 0xe0]
mov	rbx, rcx
mov	rbp, rdx
mov	r12d, r8d
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	r8d, r8d
lea	rax, [rdi + 0x28]
mov	qword ptr [rbx], rdi
mov	qword ptr [rbx + 0xe0], rax
pxor	xmm0, xmm0
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1b8], 0
mov	word ptr [rbx + 0x1c0], r8w
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x1c8], xmm0
movups	xmmword ptr [rbx + 0x1d8], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x3b620]
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x10], rax
add	rax, 0x28
mov	qword ptr [rbx + 0xe0], rax
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x42090]
lea	rdi, [rbx + 0x18]
mov	qword ptr [rbx], rax
add	rax, 0x50
mov	rcx, rdi
mov	qword ptr [rbx + 0xe0], rax
sub	rax, 0x28
mov	qword ptr [rbx + 0x10], rax
call	0x140081890
call	0x140081890
mov	rdx, rdi
mov	rcx, rsi
call	0x1400ab2c0
call	0x1400ab2c0
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
call	0x14007fde0
call	0x14007fde0
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x1400848a8
je	0x1400848a8
xor	edx, edx
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
lea	rdx, [rip + 0x3fef7]
mov	rcx, rbx
call	0x14006c210
call	0x14006c210
mov	rax, qword ptr [rip + 0x3a880]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xe0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
xor	ecx, ecx
mov	qword ptr [rbx], rdi
mov	rbp, rax
mov	qword ptr [rbx + 8], rcx
jmp	0x1400848d9
jmp	0x1400848d9
mov	rbp, rax
jmp	0x1400848d9
jmp	0x1400848d9
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rdi, [rip + 0x3b4d7]
lea	rsi, [rcx + 0xe0]
mov	rbx, rcx
mov	rbp, rdx
mov	r12d, r8d
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	r8d, r8d
lea	rax, [rdi + 0x28]
mov	qword ptr [rbx], rdi
mov	qword ptr [rbx + 0xe0], rax
pxor	xmm0, xmm0
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1b8], 0
mov	word ptr [rbx + 0x1c0], r8w
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x1c8], xmm0
movups	xmmword ptr [rbx + 0x1d8], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x3b4c0]
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x10], rax
add	rax, 0x28
mov	qword ptr [rbx + 0xe0], rax
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x41f30]
lea	rdi, [rbx + 0x18]
mov	qword ptr [rbx], rax
add	rax, 0x50
mov	rcx, rdi
mov	qword ptr [rbx + 0xe0], rax
sub	rax, 0x28
mov	qword ptr [rbx + 0x10], rax
call	0x140081890
call	0x140081890
mov	rdx, rdi
mov	rcx, rsi
call	0x1400ab2c0
call	0x1400ab2c0
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
call	0x14007fef0
call	0x14007fef0
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x140084a08
je	0x140084a08
xor	edx, edx
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
lea	rdx, [rip + 0x3fd97]
mov	rcx, rbx
call	0x14006c210
call	0x14006c210
mov	rax, qword ptr [rip + 0x3a720]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xe0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
xor	ecx, ecx
mov	qword ptr [rbx], rdi
mov	rbp, rax
mov	qword ptr [rbx + 8], rcx
jmp	0x140084a39
jmp	0x140084a39
mov	rbp, rax
jmp	0x140084a39
jmp	0x140084a39
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rdi, [rip + 0x3b377]
lea	rsi, [rcx + 0xe0]
mov	rbx, rcx
mov	r12, rdx
mov	ebp, r8d
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	r8d, r8d
lea	rax, [rdi + 0x28]
mov	qword ptr [rbx], rdi
mov	qword ptr [rbx + 0xe0], rax
pxor	xmm0, xmm0
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1b8], 0
mov	word ptr [rbx + 0x1c0], r8w
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x1c8], xmm0
movups	xmmword ptr [rbx + 0x1d8], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x3b360]
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x10], rax
add	rax, 0x28
mov	qword ptr [rbx + 0xe0], rax
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x41dd0]
lea	rdi, [rbx + 0x18]
mov	qword ptr [rbx], rax
add	rax, 0x50
mov	rcx, rdi
mov	qword ptr [rbx + 0xe0], rax
sub	rax, 0x28
mov	qword ptr [rbx + 0x10], rax
call	0x140081890
call	0x140081890
mov	rdx, rdi
mov	rcx, rsi
call	0x1400ab2c0
call	0x1400ab2c0
mov	rdx, qword ptr [r12]
mov	r8d, ebp
mov	rcx, rdi
call	0x14007fde0
call	0x14007fde0
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x140084b70
je	0x140084b70
xor	edx, edx
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
lea	rdx, [rip + 0x3fc2f]
mov	rcx, rbx
call	0x14006c210
call	0x14006c210
mov	rax, qword ptr [rip + 0x3a5b8]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xe0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
xor	ecx, ecx
mov	qword ptr [rbx], rdi
mov	rbp, rax
mov	qword ptr [rbx + 8], rcx
jmp	0x140084ba1
jmp	0x140084ba1
mov	rbp, rax
jmp	0x140084ba1
jmp	0x140084ba1
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rdi, [rip + 0x3b209]
lea	rsi, [rcx + 0xe0]
mov	rbx, rcx
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	r8d, r8d
lea	rax, [rdi + 0x28]
mov	qword ptr [rbx], rdi
mov	qword ptr [rbx + 0xe0], rax
pxor	xmm0, xmm0
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1b8], 0
mov	word ptr [rbx + 0x1c0], r8w
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x1c8], xmm0
movups	xmmword ptr [rbx + 0x1d8], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x3b1f8]
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x10], rax
add	rax, 0x28
mov	qword ptr [rbx + 0xe0], rax
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x41c68]
lea	rdi, [rbx + 0x18]
mov	qword ptr [rbx], rax
add	rax, 0x50
mov	rcx, rdi
mov	qword ptr [rbx + 0xe0], rax
sub	rax, 0x28
mov	qword ptr [rbx + 0x10], rax
call	0x140081890
call	0x140081890
mov	rdx, rdi
mov	rcx, rsi
call	0x1400ab2c0
call	0x1400ab2c0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rbp, rax
jmp	0x140084cc6
jmp	0x140084cc6
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
lea	rdx, [rip + 0x3fb0a]
mov	rcx, rbx
call	0x14006c210
call	0x14006c210
mov	rax, qword ptr [rip + 0x3a493]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xe0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
xor	ecx, ecx
mov	qword ptr [rbx], rdi
mov	rbp, rax
mov	qword ptr [rbx + 8], rcx
jmp	0x140084cc6
jmp	0x140084cc6
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x18]
mov	rdi, r8
mov	qword ptr [rbx + rdx], rcx
mov	rdx, qword ptr [r8 + 8]
mov	qword ptr [rbx + 8], rdx
mov	rbp, qword ptr [rax - 0x18]
mov	rax, qword ptr [r8]
add	rbp, rbx
mov	r12, qword ptr [rax - 0x18]
mov	rcx, rbp
add	r12, r8
mov	rdx, r12
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbp + 0xd0]
mov	rcx, rbp
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [r12 + 0xd8]
mov	qword ptr [rbp + 0xe8], 0
mov	qword ptr [r12 + 0xd8], 0
mov	qword ptr [rbp + 0xd8], rax
movzx	eax, word ptr [r12 + 0xe0]
mov	word ptr [rbp + 0xe0], ax
mov	rax, qword ptr [rsi + 0x20]
lea	rbp, [rbx + 0x18]
mov	qword ptr [rdi + 8], 0
mov	rdx, qword ptr [rsi + 0x28]
mov	rcx, rbp
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax + 0x10], rdx
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x30]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x38]
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x40]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x48]
lea	rdx, [rdi + 0x18]
mov	qword ptr [rbx + 0x10], rax
call	0x140081700
call	0x140081700
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax + 0xe8], rbp
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rdi, rax
mov	rcx, rbx
lea	rdx, [rsi + 8]
call	0x14006c210
call	0x14006c210
mov	rcx, rdi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x18]
mov	rbp, r8
mov	r12d, r9d
mov	qword ptr [rbx + rdx], rcx
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi + 0x20]
xor	edx, edx
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
lea	rcx, [rbx + rax + 0x10]
mov	rax, qword ptr [rsi + 0x28]
mov	qword ptr [rcx], rax
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x30]
lea	rdi, [rbx + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x38]
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x40]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x48]
mov	qword ptr [rbx + 0x10], rax
call	0x140081890
call	0x140081890
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
call	0x14007fde0
call	0x14007fde0
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x140084f18
je	0x140084f18
xor	edx, edx
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
mov	rcx, rbx
lea	rdx, [rsi + 8]
call	0x14006c210
call	0x14006c210
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
mov	rcx, rax
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, qword ptr [rsi + 0x18]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x18]
mov	rbp, r8
mov	r12d, r9d
mov	qword ptr [rbx + rdx], rcx
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi + 0x20]
xor	edx, edx
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
lea	rcx, [rbx + rax + 0x10]
mov	rax, qword ptr [rsi + 0x28]
mov	qword ptr [rcx], rax
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x30]
lea	rdi, [rbx + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x38]
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x40]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x48]
mov	qword ptr [rbx + 0x10], rax
call	0x140081890
call	0x140081890
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
call	0x14007fef0
call	0x14007fef0
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x140085058
je	0x140085058
xor	edx, edx
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
mov	rcx, rbx
lea	rdx, [rsi + 8]
call	0x14006c210
call	0x14006c210
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
mov	rcx, rax
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, qword ptr [rsi + 0x18]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x18]
mov	r12, r8
mov	ebp, r9d
mov	qword ptr [rbx + rdx], rcx
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi + 0x20]
xor	edx, edx
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
lea	rcx, [rbx + rax + 0x10]
mov	rax, qword ptr [rsi + 0x28]
mov	qword ptr [rcx], rax
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x30]
lea	rdi, [rbx + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x38]
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x40]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x48]
mov	qword ptr [rbx + 0x10], rax
call	0x140081890
call	0x140081890
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
mov	rdx, qword ptr [r12]
mov	r8d, ebp
mov	rcx, rdi
call	0x14007fde0
call	0x14007fde0
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x140085198
je	0x140085198
xor	edx, edx
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
mov	rcx, rbx
lea	rdx, [rsi + 8]
call	0x14006c210
call	0x14006c210
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
mov	rcx, rax
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, qword ptr [rsi + 0x18]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x18]
mov	qword ptr [rbx + rdx], rcx
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi + 0x20]
xor	edx, edx
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
lea	rcx, [rbx + rax + 0x10]
mov	rax, qword ptr [rsi + 0x28]
mov	qword ptr [rcx], rax
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x30]
lea	rdi, [rbx + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x38]
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x40]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x48]
mov	qword ptr [rbx + 0x10], rax
call	0x140081890
call	0x140081890
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rcx, rax
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, qword ptr [rsi + 0x18]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
mov	rcx, rbx
lea	rdx, [rsi + 8]
call	0x14006c210
call	0x14006c210
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x415dc]
lea	rdx, [rip + 0x415fd]
movq	xmm0, rdx
mov	qword ptr [rcx], rax
add	rax, 0x50
mov	rbx, rcx
lea	rcx, [rcx + 0x18]
mov	qword ptr [rcx + 0xc8], rax
lea	rax, [rip + 0x414ac]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x68]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x39bca]
lea	rcx, [rbx + 0x50]
add	rax, 0x10
mov	qword ptr [rbx + 0x18], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0x3aaea]
mov	qword ptr [rbx + 8], 0
lea	rcx, [rbx + 0xe0]
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x3aa80]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0x39dde]
add	rax, 0x10
mov	qword ptr [rbx + 0xe0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140085336
jmp	0x140085336
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x4151c]
lea	rdx, [rip + 0x4153d]
movq	xmm0, rdx
mov	qword ptr [rcx], rax
add	rax, 0x50
mov	rbx, rcx
lea	rcx, [rcx + 0x18]
mov	qword ptr [rcx + 0xc8], rax
lea	rax, [rip + 0x413ec]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x68]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x39b0a]
lea	rcx, [rbx + 0x50]
add	rax, 0x10
mov	qword ptr [rbx + 0x18], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0x3aa2a]
lea	rcx, [rbx + 0xe0]
mov	qword ptr [rbx + 8], 0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x3a9c0]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0x39d1e]
add	rax, 0x10
mov	qword ptr [rbx + 0xe0], rax
add	rsp, 0x20
pop	rbx
jmp	0x1400aa330
jmp	0x1400aa330
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400853f6
jmp	0x1400853f6
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rsi, rdx
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rbx, rcx
mov	rdx, qword ptr [rdx + 0x40]
lea	rcx, [rcx + 0x18]
mov	qword ptr [rcx + rax - 0x18], rdx
mov	rax, qword ptr [rsi + 0x48]
mov	qword ptr [rcx - 8], rax
lea	rax, [rip + 0x4132e]
mov	qword ptr [rcx], rax
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x68]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x39a56]
lea	rcx, [rbx + 0x50]
add	rax, 0x10
mov	qword ptr [rbx + 0x18], rax
call	0x14009bf30
call	0x14009bf30
mov	rax, qword ptr [rsi + 8]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rdx, qword ptr [rsi + 0x30]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x38]
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rsi + 0x20]
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
mov	rdx, qword ptr [rsi + 0x28]
mov	qword ptr [rbx + rax + 0x10], rdx
mov	rax, qword ptr [rsi + 0x10]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rdx, qword ptr [rsi + 0x18]
mov	qword ptr [rbx + rax], rdx
mov	qword ptr [rbx + 8], 0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400854aa
jmp	0x1400854aa
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rdi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rsi, qword ptr [rax - 0x18]
add	rdi, rcx
mov	rbp, rcx
mov	rbx, rdx
mov	rcx, rdi
add	rsi, rdx
mov	rdx, rsi
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rdi + 0xd0]
mov	rcx, rdi
call	0x1400ab190
call	0x1400ab190
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rdi + 0xd8]
mov	rdx, qword ptr [rsi + 0xd8]
lea	rcx, [rbp + 0x18]
mov	qword ptr [rdi + 0xd8], rdx
movzx	edx, byte ptr [rsi + 0xe0]
mov	qword ptr [rsi + 0xd8], rax
movzx	eax, byte ptr [rdi + 0xe0]
mov	byte ptr [rdi + 0xe0], dl
movzx	edx, byte ptr [rsi + 0xe1]
mov	byte ptr [rsi + 0xe0], al
movzx	eax, byte ptr [rdi + 0xe1]
mov	byte ptr [rdi + 0xe1], dl
mov	rdx, qword ptr [rbx + 8]
mov	byte ptr [rsi + 0xe1], al
mov	rax, qword ptr [rbp + 8]
mov	qword ptr [rbp + 8], rdx
lea	rdx, [rbx + 0x18]
mov	qword ptr [rbx + 8], rax
call	0x140081d00
call	0x140081d00
mov	rax, rbp
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rcx + 0x18]
call	0x140082370
call	0x140082370
test	rax, rax
mov	rax, qword ptr [rbx]
je	0x140085630
je	0x140085630
add	rbx, qword ptr [rax - 0x18]
xor	edx, edx
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
nop	dword ptr [rax]
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rcx + 0x18]
call	0x140082490
call	0x140082490
test	rax, rax
mov	rax, qword ptr [rbx]
je	0x140085680
je	0x140085680
add	rbx, qword ptr [rax - 0x18]
xor	edx, edx
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
nop	dword ptr [rax]
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rdx, qword ptr [rdx]
mov	rbx, rcx
lea	rcx, [rcx + 0x18]
call	0x140082370
call	0x140082370
test	rax, rax
mov	rax, qword ptr [rbx]
je	0x1400856d0
je	0x1400856d0
add	rbx, qword ptr [rax - 0x18]
xor	edx, edx
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
nop	
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rbp, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rdi, qword ptr [rax - 0x18]
add	rbp, rcx
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rbp
add	rdi, rdx
mov	rdx, rdi
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rbp + 0xd0]
mov	rcx, rbp
call	0x1400abb50
call	0x1400abb50
lea	rdx, [rdi + 0xd0]
mov	rcx, rdi
call	0x1400abb50
call	0x1400abb50
mov	rdx, qword ptr [rdi + 0xd8]
mov	rax, qword ptr [rbp + 0xd8]
lea	rcx, [rbx + 0x18]
mov	qword ptr [rbp + 0xd8], rdx
movzx	edx, word ptr [rdi + 0xe0]
mov	qword ptr [rdi + 0xd8], rax
movzx	eax, word ptr [rbp + 0xe0]
mov	word ptr [rbp + 0xe0], dx
movzx	edx, byte ptr [rdi + 0xe2]
mov	word ptr [rdi + 0xe0], ax
movzx	eax, byte ptr [rbp + 0xe2]
mov	byte ptr [rbp + 0xe2], dl
mov	rdx, qword ptr [rsi + 8]
mov	byte ptr [rdi + 0xe2], al
mov	rax, qword ptr [rbx + 8]
mov	qword ptr [rbx + 8], rdx
lea	rdx, [rsi + 0x18]
mov	qword ptr [rsi + 8], rax
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x1400825c0
jmp	0x1400825c0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rcx + 0x18]
call	0x140082820
call	0x140082820
test	rax, rax
je	0x1400857e0
je	0x1400857e0
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
nop	
nop	
nop	
nop	
nop	
nop	
add	rcx, 0x68
jmp	0x14001d8f0
jmp	0x14001d8f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rcx + 0xe0]
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rbp
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
mov	rcx, rbp
mov	word ptr [rbx + 0x1c0], ax
lea	rax, [rip + 0x3a654]
mov	qword ptr [rbx], rax
add	rax, 0x28
movups	xmmword ptr [rbx + 0x1c8], xmm0
movups	xmmword ptr [rbx + 0x1d8], xmm0
mov	qword ptr [rbx + 0xe0], rax
mov	rax, qword ptr [rsi + 8]
mov	qword ptr [rbx + 0x1b8], 0
mov	qword ptr [rbx + 8], rax
mov	rax, qword ptr [rsi]
mov	byte ptr [rbx + 0x1c2], 0
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
mov	rdx, rdi
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0x1b0]
mov	rcx, rbp
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rdi + 0xd8]
lea	rdx, [rsi + 0x18]
mov	qword ptr [rdi + 0xd8], 0
mov	qword ptr [rbx + 0x1c8], 0
mov	qword ptr [rbx + 0x1b8], rax
movzx	eax, word ptr [rdi + 0xe0]
mov	word ptr [rbx + 0x1c0], ax
movzx	eax, byte ptr [rdi + 0xe2]
lea	rdi, [rbx + 0x18]
mov	rcx, rdi
mov	byte ptr [rbx + 0x1c2], al
lea	rax, [rip + 0x4106c]
mov	qword ptr [rsi + 8], 0
mov	qword ptr [rbx], rax
add	rax, 0x50
mov	qword ptr [rbx + 0xe0], rax
sub	rax, 0x28
mov	qword ptr [rbx + 0x10], rax
call	0x140083cc0
call	0x140083cc0
mov	qword ptr [rbx + 0x1c8], rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rsi, rax
jmp	0x140085936
jmp	0x140085936
lea	rdx, [rip + 0x3eeed]
mov	rcx, rbx
mov	rsi, rax
call	0x14008e950
call	0x14008e950
mov	rax, qword ptr [rip + 0x39833]
mov	rcx, rbp
add	rax, 0x10
mov	qword ptr [rbx + 0xe0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rdi, [rip + 0x3a527]
lea	rsi, [rcx + 0xe0]
mov	rbx, rcx
mov	rbp, rdx
mov	r12d, r8d
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	r8d, r8d
lea	rax, [rdi + 0x28]
mov	qword ptr [rbx], rdi
mov	byte ptr [rbx + 0x1c2], 0
pxor	xmm0, xmm0
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1b8], 0
mov	word ptr [rbx + 0x1c0], r8w
mov	qword ptr [rbx + 0xe0], rax
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x1c8], xmm0
movups	xmmword ptr [rbx + 0x1d8], xmm0
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x3a589]
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x10], rax
add	rax, 0x28
mov	qword ptr [rbx + 0xe0], rax
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x40f59]
lea	rdi, [rbx + 0x18]
mov	qword ptr [rbx], rax
add	rax, 0x50
mov	rcx, rdi
mov	qword ptr [rbx + 0xe0], rax
sub	rax, 0x28
mov	qword ptr [rbx + 0x10], rax
call	0x140083e50
call	0x140083e50
mov	rdx, rdi
mov	rcx, rsi
call	0x1400abc50
call	0x1400abc50
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
call	0x140082370
call	0x140082370
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x140085a60
je	0x140085a60
xor	edx, edx
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
lea	rdx, [rip + 0x3ed8f]
mov	rcx, rbx
call	0x14008e950
call	0x14008e950
mov	rax, qword ptr [rip + 0x396d8]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xe0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
xor	ecx, ecx
mov	qword ptr [rbx], rdi
mov	rbp, rax
mov	qword ptr [rbx + 8], rcx
jmp	0x140085a91
jmp	0x140085a91
mov	rbp, rax
jmp	0x140085a91
jmp	0x140085a91
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rdi, [rip + 0x3a3b7]
lea	rsi, [rcx + 0xe0]
mov	rbx, rcx
mov	rbp, rdx
mov	r12d, r8d
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	r8d, r8d
lea	rax, [rdi + 0x28]
mov	qword ptr [rbx], rdi
mov	byte ptr [rbx + 0x1c2], 0
pxor	xmm0, xmm0
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1b8], 0
mov	word ptr [rbx + 0x1c0], r8w
mov	qword ptr [rbx + 0xe0], rax
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x1c8], xmm0
movups	xmmword ptr [rbx + 0x1d8], xmm0
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x3a419]
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x10], rax
add	rax, 0x28
mov	qword ptr [rbx + 0xe0], rax
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x40de9]
lea	rdi, [rbx + 0x18]
mov	qword ptr [rbx], rax
add	rax, 0x50
mov	rcx, rdi
mov	qword ptr [rbx + 0xe0], rax
sub	rax, 0x28
mov	qword ptr [rbx + 0x10], rax
call	0x140083e50
call	0x140083e50
mov	rdx, rdi
mov	rcx, rsi
call	0x1400abc50
call	0x1400abc50
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
call	0x140082490
call	0x140082490
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x140085bd0
je	0x140085bd0
xor	edx, edx
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
lea	rdx, [rip + 0x3ec1f]
mov	rcx, rbx
call	0x14008e950
call	0x14008e950
mov	rax, qword ptr [rip + 0x39568]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xe0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
xor	ecx, ecx
mov	qword ptr [rbx], rdi
mov	rbp, rax
mov	qword ptr [rbx + 8], rcx
jmp	0x140085c01
jmp	0x140085c01
mov	rbp, rax
jmp	0x140085c01
jmp	0x140085c01
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rdi, [rip + 0x3a247]
lea	rsi, [rcx + 0xe0]
mov	rbx, rcx
mov	r12, rdx
mov	ebp, r8d
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	r8d, r8d
lea	rax, [rdi + 0x28]
mov	qword ptr [rbx], rdi
mov	byte ptr [rbx + 0x1c2], 0
pxor	xmm0, xmm0
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1b8], 0
mov	word ptr [rbx + 0x1c0], r8w
mov	qword ptr [rbx + 0xe0], rax
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x1c8], xmm0
movups	xmmword ptr [rbx + 0x1d8], xmm0
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x3a2a9]
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x10], rax
add	rax, 0x28
mov	qword ptr [rbx + 0xe0], rax
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x40c79]
lea	rdi, [rbx + 0x18]
mov	qword ptr [rbx], rax
add	rax, 0x50
mov	rcx, rdi
mov	qword ptr [rbx + 0xe0], rax
sub	rax, 0x28
mov	qword ptr [rbx + 0x10], rax
call	0x140083e50
call	0x140083e50
mov	rdx, rdi
mov	rcx, rsi
call	0x1400abc50
call	0x1400abc50
mov	rdx, qword ptr [r12]
mov	r8d, ebp
mov	rcx, rdi
call	0x140082370
call	0x140082370
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x140085d40
je	0x140085d40
xor	edx, edx
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
lea	rdx, [rip + 0x3eaaf]
mov	rcx, rbx
call	0x14008e950
call	0x14008e950
mov	rax, qword ptr [rip + 0x393f8]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xe0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
xor	ecx, ecx
mov	qword ptr [rbx], rdi
mov	rbp, rax
mov	qword ptr [rbx + 8], rcx
jmp	0x140085d71
jmp	0x140085d71
mov	rbp, rax
jmp	0x140085d71
jmp	0x140085d71
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rdi, [rip + 0x3a0d9]
lea	rsi, [rcx + 0xe0]
mov	rbx, rcx
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	r8d, r8d
lea	rax, [rdi + 0x28]
mov	qword ptr [rbx], rdi
mov	byte ptr [rbx + 0x1c2], 0
pxor	xmm0, xmm0
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1b8], 0
mov	word ptr [rbx + 0x1c0], r8w
mov	qword ptr [rbx + 0xe0], rax
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x1c8], xmm0
movups	xmmword ptr [rbx + 0x1d8], xmm0
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x3a141]
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x10], rax
add	rax, 0x28
mov	qword ptr [rbx + 0xe0], rax
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x40b11]
lea	rdi, [rbx + 0x18]
mov	qword ptr [rbx], rax
add	rax, 0x50
mov	rcx, rdi
mov	qword ptr [rbx + 0xe0], rax
sub	rax, 0x28
mov	qword ptr [rbx + 0x10], rax
call	0x140083e50
call	0x140083e50
mov	rdx, rdi
mov	rcx, rsi
call	0x1400abc50
call	0x1400abc50
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rbp, rax
jmp	0x140085e9d
jmp	0x140085e9d
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
lea	rdx, [rip + 0x3e983]
mov	rcx, rbx
call	0x14008e950
call	0x14008e950
mov	rax, qword ptr [rip + 0x392cc]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xe0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
xor	ecx, ecx
mov	qword ptr [rbx], rdi
mov	rbp, rax
mov	qword ptr [rbx + 8], rcx
jmp	0x140085e9d
jmp	0x140085e9d
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x18]
mov	rdi, r8
mov	qword ptr [rbx + rdx], rcx
mov	rdx, qword ptr [r8 + 8]
mov	qword ptr [rbx + 8], rdx
mov	rbp, qword ptr [rax - 0x18]
mov	rax, qword ptr [r8]
add	rbp, rbx
mov	r12, qword ptr [rax - 0x18]
mov	rcx, rbp
add	r12, r8
mov	rdx, r12
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbp + 0xd0]
mov	rcx, rbp
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [r12 + 0xd8]
mov	qword ptr [rbp + 0xe8], 0
mov	qword ptr [r12 + 0xd8], 0
mov	qword ptr [rbp + 0xd8], rax
mov	rdx, qword ptr [rsi + 0x28]
movzx	eax, word ptr [r12 + 0xe0]
mov	word ptr [rbp + 0xe0], ax
movzx	eax, byte ptr [r12 + 0xe2]
mov	byte ptr [rbp + 0xe2], al
mov	rax, qword ptr [rsi + 0x20]
lea	rbp, [rbx + 0x18]
mov	qword ptr [rdi + 8], 0
mov	rcx, rbp
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax + 0x10], rdx
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x30]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x38]
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x40]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x48]
lea	rdx, [rdi + 0x18]
mov	qword ptr [rbx + 0x10], rax
call	0x140083cc0
call	0x140083cc0
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax + 0xe8], rbp
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rdi, rax
mov	rcx, rbx
lea	rdx, [rsi + 8]
call	0x14008e950
call	0x14008e950
mov	rcx, rdi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x18]
mov	rbp, r8
mov	r12d, r9d
mov	qword ptr [rbx + rdx], rcx
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi + 0x20]
xor	edx, edx
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
lea	rcx, [rbx + rax + 0x10]
mov	rax, qword ptr [rsi + 0x28]
mov	qword ptr [rcx], rax
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x30]
lea	rdi, [rbx + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x38]
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x40]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x48]
mov	qword ptr [rbx + 0x10], rax
call	0x140083e50
call	0x140083e50
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
call	0x140082370
call	0x140082370
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x1400860f8
je	0x1400860f8
xor	edx, edx
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
mov	rcx, rbx
lea	rdx, [rsi + 8]
call	0x14008e950
call	0x14008e950
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
mov	rcx, rax
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, qword ptr [rsi + 0x18]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x18]
mov	rbp, r8
mov	r12d, r9d
mov	qword ptr [rbx + rdx], rcx
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi + 0x20]
xor	edx, edx
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
lea	rcx, [rbx + rax + 0x10]
mov	rax, qword ptr [rsi + 0x28]
mov	qword ptr [rcx], rax
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x30]
lea	rdi, [rbx + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x38]
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x40]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x48]
mov	qword ptr [rbx + 0x10], rax
call	0x140083e50
call	0x140083e50
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
call	0x140082490
call	0x140082490
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x140086238
je	0x140086238
xor	edx, edx
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
mov	rcx, rbx
lea	rdx, [rsi + 8]
call	0x14008e950
call	0x14008e950
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
mov	rcx, rax
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, qword ptr [rsi + 0x18]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x18]
mov	r12, r8
mov	ebp, r9d
mov	qword ptr [rbx + rdx], rcx
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi + 0x20]
xor	edx, edx
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
lea	rcx, [rbx + rax + 0x10]
mov	rax, qword ptr [rsi + 0x28]
mov	qword ptr [rcx], rax
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x30]
lea	rdi, [rbx + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x38]
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x40]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x48]
mov	qword ptr [rbx + 0x10], rax
call	0x140083e50
call	0x140083e50
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
mov	rdx, qword ptr [r12]
mov	r8d, ebp
mov	rcx, rdi
call	0x140082370
call	0x140082370
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x140086378
je	0x140086378
xor	edx, edx
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
mov	rcx, rbx
lea	rdx, [rsi + 8]
call	0x14008e950
call	0x14008e950
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
mov	rcx, rax
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, qword ptr [rsi + 0x18]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 0x10]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x18]
mov	qword ptr [rbx + rdx], rcx
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi + 0x20]
xor	edx, edx
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
lea	rcx, [rbx + rax + 0x10]
mov	rax, qword ptr [rsi + 0x28]
mov	qword ptr [rcx], rax
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x30]
lea	rdi, [rbx + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x38]
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x40]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x48]
mov	qword ptr [rbx + 0x10], rax
call	0x140083e50
call	0x140083e50
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rcx, rax
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, qword ptr [rsi + 0x18]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
mov	rcx, rbx
lea	rdx, [rsi + 8]
call	0x14008e950
call	0x14008e950
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x4047c]
lea	rdx, [rip + 0x4049d]
movq	xmm0, rdx
mov	qword ptr [rcx], rax
add	rax, 0x50
mov	rbx, rcx
lea	rcx, [rcx + 0x18]
mov	qword ptr [rcx + 0xc8], rax
lea	rax, [rip + 0x4034c]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x68]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x389fa]
lea	rcx, [rbx + 0x50]
add	rax, 0x10
mov	qword ptr [rbx + 0x18], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0x39a2a]
mov	qword ptr [rbx + 8], 0
lea	rcx, [rbx + 0xe0]
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x39940]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0x38c0e]
add	rax, 0x10
mov	qword ptr [rbx + 0xe0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140086516
jmp	0x140086516
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x403bc]
lea	rdx, [rip + 0x403dd]
movq	xmm0, rdx
mov	qword ptr [rcx], rax
add	rax, 0x50
mov	rbx, rcx
lea	rcx, [rcx + 0x18]
mov	qword ptr [rcx + 0xc8], rax
lea	rax, [rip + 0x4028c]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x68]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x3893a]
lea	rcx, [rbx + 0x50]
add	rax, 0x10
mov	qword ptr [rbx + 0x18], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0x3996a]
lea	rcx, [rbx + 0xe0]
mov	qword ptr [rbx + 8], 0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x39880]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0x38b4e]
add	rax, 0x10
mov	qword ptr [rbx + 0xe0], rax
add	rsp, 0x20
pop	rbx
jmp	0x1400aa330
jmp	0x1400aa330
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400865d6
jmp	0x1400865d6
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rsi, rdx
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rbx, rcx
mov	rdx, qword ptr [rdx + 0x40]
lea	rcx, [rcx + 0x18]
mov	qword ptr [rcx + rax - 0x18], rdx
mov	rax, qword ptr [rsi + 0x48]
mov	qword ptr [rcx - 8], rax
lea	rax, [rip + 0x401ce]
mov	qword ptr [rcx], rax
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x68]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x38886]
lea	rcx, [rbx + 0x50]
add	rax, 0x10
mov	qword ptr [rbx + 0x18], rax
call	0x14009bf30
call	0x14009bf30
mov	rax, qword ptr [rsi + 8]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rdx, qword ptr [rsi + 0x30]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x38]
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rsi + 0x20]
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
mov	rdx, qword ptr [rsi + 0x28]
mov	qword ptr [rbx + rax + 0x10], rdx
mov	rax, qword ptr [rsi + 0x10]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rdx, qword ptr [rsi + 0x18]
mov	qword ptr [rbx + rax], rdx
mov	qword ptr [rbx + 8], 0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008668a
jmp	0x14008668a
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rdi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rsi, qword ptr [rax - 0x18]
add	rdi, rcx
mov	rbp, rcx
mov	rbx, rdx
mov	rcx, rdi
add	rsi, rdx
mov	rdx, rsi
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rdi + 0xd0]
mov	rcx, rdi
call	0x1400abb50
call	0x1400abb50
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rdi + 0xd8]
mov	rdx, qword ptr [rsi + 0xd8]
lea	rcx, [rbp + 0x18]
mov	qword ptr [rdi + 0xd8], rdx
movzx	edx, word ptr [rsi + 0xe0]
mov	qword ptr [rsi + 0xd8], rax
movzx	eax, word ptr [rdi + 0xe0]
mov	word ptr [rdi + 0xe0], dx
movzx	edx, byte ptr [rsi + 0xe2]
mov	word ptr [rsi + 0xe0], ax
movzx	eax, byte ptr [rdi + 0xe2]
mov	byte ptr [rdi + 0xe2], dl
mov	rdx, qword ptr [rbx + 8]
mov	byte ptr [rsi + 0xe2], al
mov	rax, qword ptr [rbp + 8]
mov	qword ptr [rbp + 8], rdx
lea	rdx, [rbx + 0x18]
mov	qword ptr [rbx + 8], rax
call	0x1400842e0
call	0x1400842e0
mov	rax, rbp
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x7b], 0
je	0x140086884
je	0x140086884
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x1400868b7
je	0x1400868b7
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
lea	rcx, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], 0xffff
mov	qword ptr [rsp + 0x40], 0
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x7c]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x48], 0xffff
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x60]
call	qword ptr [r10 + 0x60]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x140086898
jne	0x140086898
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400abe20
call	0x1400abe20
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x1400868e3
jne	0x1400868e3
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008687c
jmp	0x14008687c
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x7b], 0
je	0x1400869d4
je	0x1400869d4
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x140086a07
je	0x140086a07
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
lea	rcx, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], 0xffff
mov	qword ptr [rsp + 0x40], 0
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x7c]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x48], 0xffff
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x10]
call	qword ptr [r10 + 0x10]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x1400869e8
jne	0x1400869e8
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400abe20
call	0x1400abe20
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x140086a33
jne	0x140086a33
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400869cc
jmp	0x1400869cc
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x7b], 0
je	0x140086b24
je	0x140086b24
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x140086b57
je	0x140086b57
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
lea	rcx, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], 0xffff
mov	qword ptr [rsp + 0x40], 0
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x7c]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x48], 0xffff
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x50]
call	qword ptr [r10 + 0x50]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x140086b38
jne	0x140086b38
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400abe20
call	0x1400abe20
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x140086b83
jne	0x140086b83
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140086b1c
jmp	0x140086b1c
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x7b], 0
je	0x140086c74
je	0x140086c74
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x140086ca7
je	0x140086ca7
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
lea	rcx, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], 0xffff
mov	qword ptr [rsp + 0x40], 0
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x7c]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x48], 0xffff
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x58]
call	qword ptr [r10 + 0x58]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x140086c88
jne	0x140086c88
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400abe20
call	0x1400abe20
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x140086cd3
jne	0x140086cd3
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140086c6c
jmp	0x140086c6c
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x7b], 0
je	0x140086dc4
je	0x140086dc4
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x140086df7
je	0x140086df7
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
lea	rcx, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], 0xffff
mov	qword ptr [rsp + 0x40], 0
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x7c]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x48], 0xffff
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x48]
call	qword ptr [r10 + 0x48]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x140086dd8
jne	0x140086dd8
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400abe20
call	0x1400abe20
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x140086e23
jne	0x140086e23
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140086dbc
jmp	0x140086dbc
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x7b], 0
je	0x140086f14
je	0x140086f14
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x140086f47
je	0x140086f47
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
lea	rcx, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], 0xffff
mov	qword ptr [rsp + 0x40], 0
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x7c]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x48], 0xffff
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x28]
call	qword ptr [r10 + 0x28]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x140086f28
jne	0x140086f28
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400abe20
call	0x1400abe20
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x140086f73
jne	0x140086f73
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140086f0c
jmp	0x140086f0c
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x7b], 0
je	0x140087064
je	0x140087064
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x140087097
je	0x140087097
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
lea	rcx, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], 0xffff
mov	qword ptr [rsp + 0x40], 0
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x7c]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x48], 0xffff
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x18]
call	qword ptr [r10 + 0x18]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x140087078
jne	0x140087078
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400abe20
call	0x1400abe20
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x1400870c3
jne	0x1400870c3
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008705c
jmp	0x14008705c
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x7b], 0
je	0x1400871b4
je	0x1400871b4
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x1400871e7
je	0x1400871e7
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
lea	rcx, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], 0xffff
mov	qword ptr [rsp + 0x40], 0
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x7c]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x48], 0xffff
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x30]
call	qword ptr [r10 + 0x30]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x1400871c8
jne	0x1400871c8
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400abe20
call	0x1400abe20
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x140087213
jne	0x140087213
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400871ac
jmp	0x1400871ac
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x7b], 0
je	0x140087304
je	0x140087304
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x140087337
je	0x140087337
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
lea	rcx, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], 0xffff
mov	qword ptr [rsp + 0x40], 0
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x7c]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x48], 0xffff
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x20]
call	qword ptr [r10 + 0x20]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x140087318
jne	0x140087318
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400abe20
call	0x1400abe20
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x140087363
jne	0x140087363
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400872fc
jmp	0x1400872fc
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x7b], 0
je	0x140087454
je	0x140087454
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x140087487
je	0x140087487
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
lea	rcx, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], 0xffff
mov	qword ptr [rsp + 0x40], 0
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x7c]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x48], 0xffff
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x38]
call	qword ptr [r10 + 0x38]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x140087468
jne	0x140087468
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400abe20
call	0x1400abe20
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x1400874b3
jne	0x1400874b3
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008744c
jmp	0x14008744c
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x7b]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x7b], 0
je	0x1400875a4
je	0x1400875a4
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x7c], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x1400875d7
je	0x1400875d7
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
lea	rcx, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], 0xffff
mov	qword ptr [rsp + 0x40], 0
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x7c]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x48], 0xffff
mov	qword ptr [rsp + 0x30], rsi
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x40]
call	qword ptr [r10 + 0x40]
mov	edx, dword ptr [rsp + 0x7c]
test	edx, edx
jne	0x1400875b8
jne	0x1400875b8
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400abe20
call	0x1400abe20
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x140087603
jne	0x140087603
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008759c
jmp	0x14008759c
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + rax + 0xf0]
mov	rdi, rdx
mov	rsi, r8
test	rcx, rcx
je	0x140087698
je	0x140087698
mov	rax, qword ptr [rcx]
mov	edx, 0xa
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	r8, rsi
mov	rdx, rdi
mov	rcx, rbx
movzx	r9d, ax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x1400876a0
jmp	0x1400876a0
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, rcx
mov	rdi, rdx
mov	rbp, r8
mov	r8d, 1
mov	qword ptr [rcx + 8], 0
mov	rdx, rsi
lea	rcx, [rsp + 0x2f]
mov	r13d, r9d
mov	r12d, r9d
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x2f], 0
jne	0x140087720
jne	0x140087720
mov	rax, qword ptr [rsi + 8]
test	rbp, rbp
jle	0x1400876eb
jle	0x1400876eb
xor	ecx, ecx
mov	word ptr [rdi], cx
test	rax, rax
jne	0x140087707
jne	0x140087707
mov	edx, 4
mov	rax, qword ptr [rsi]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
or	edx, dword ptr [rcx + 0x20]
call	0x1400abe20
call	0x1400abe20
mov	rax, rsi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsi]
mov	rax, qword ptr [rax - 0x18]
mov	rbx, qword ptr [rsi + rax + 0xe8]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140087830
jae	0x140087830
movzx	eax, word ptr [rax]
mov	rcx, qword ptr [rsi + 8]
lea	rdx, [rcx + 1]
cmp	rdx, rbp
jge	0x140087800
jge	0x140087800
cmp	ax, -1
je	0x1400877cc
je	0x1400877cc
cmp	r13w, ax
jne	0x14008779f
jne	0x14008779f
jmp	0x140087806
jmp	0x140087806
nop	word ptr [rax + rax]
movzx	eax, word ptr [rdx]
add	rdx, 2
mov	qword ptr [rbx + 0x10], rdx
cmp	ax, -1
je	0x1400877c8
je	0x1400877c8
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400877f0
jae	0x1400877f0
movzx	eax, word ptr [rax]
mov	rcx, qword ptr [rsi + 8]
lea	rdx, [rcx + 1]
cmp	rdx, rbp
jge	0x140087800
jge	0x140087800
cmp	ax, -1
je	0x1400877cc
je	0x1400877cc
cmp	r12w, ax
je	0x140087806
je	0x140087806
add	rdi, 2
mov	word ptr [rdi - 2], ax
mov	qword ptr [rsi + 8], rdx
mov	rdx, qword ptr [rbx + 0x10]
cmp	rdx, qword ptr [rbx + 0x18]
jb	0x140087768
jb	0x140087768
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	ax, -1
jne	0x140087779
jne	0x140087779
nop	dword ptr [rax]
mov	rcx, qword ptr [rsi + 8]
test	rbp, rbp
jle	0x1400877d6
jle	0x1400877d6
xor	eax, eax
mov	word ptr [rdi], ax
mov	edx, 6
test	rcx, rcx
je	0x1400876f5
je	0x1400876f5
mov	edx, 2
jmp	0x1400876f5
jmp	0x1400876f5
nop	
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140087786
jmp	0x140087786
nop	dword ptr [rax + rax]
cmp	ax, -1
je	0x1400877cc
je	0x1400877cc
test	rbp, rbp
jle	0x140087810
jle	0x140087810
xor	edx, edx
mov	word ptr [rdi], dx
test	rcx, rcx
je	0x1400876f0
je	0x1400876f0
mov	rax, rsi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140087740
jmp	0x140087740
sub	rdx, 1
mov	rcx, rax
jne	0x140087865
jne	0x140087865
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	edx, 1
add	rsi, qword ptr [rax - 0x18]
mov	rcx, rsi
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
test	rbp, rbp
jle	0x14008788d
jle	0x14008788d
mov	word ptr [rdi], 0
cmp	qword ptr [rsi + 8], 0
je	0x1400876f0
je	0x1400876f0
jmp	0x140087707
jmp	0x140087707
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + rax + 0xf0]
mov	rsi, rdx
test	rcx, rcx
je	0x140087900
je	0x140087900
mov	rax, qword ptr [rcx]
mov	edx, 0xa
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rdx, rsi
mov	rcx, rbx
movzx	r8d, ax
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x140087910
jmp	0x140087910
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rdi, rcx
mov	rsi, rdx
mov	r13d, r8d
mov	r12d, r8d
mov	qword ptr [rcx + 8], 0
mov	r8d, 1
lea	rcx, [rsp + 0x2f]
mov	rdx, rdi
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x2f], 0
jne	0x140087980
jne	0x140087980
cmp	qword ptr [rdi + 8], 0
jne	0x140087968
jne	0x140087968
mov	edx, 4
mov	rax, qword ptr [rdi]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rdi
or	edx, dword ptr [rcx + 0x20]
call	0x1400abe20
call	0x1400abe20
mov	rax, rdi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi]
mov	rax, qword ptr [rax - 0x18]
mov	rbx, qword ptr [rdi + rax + 0xe8]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140087ab0
jae	0x140087ab0
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140087a8b
je	0x140087a8b
xor	ebp, ebp
cmp	ax, r13w
jne	0x140087a03
jne	0x140087a03
jmp	0x140087abe
jmp	0x140087abe
nop	word ptr [rax + rax]
mov	word ptr [rcx], ax
add	rcx, 2
mov	qword ptr [rsi + 0x28], rcx
mov	rdx, qword ptr [rbx + 0x10]
add	rbp, 1
cmp	rdx, qword ptr [rbx + 0x18]
jae	0x140087a38
jae	0x140087a38
movzx	eax, word ptr [rdx]
add	rdx, 2
mov	qword ptr [rbx + 0x10], rdx
cmp	ax, -1
je	0x140087a50
je	0x140087a50
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x140087a68
jae	0x140087a68
movzx	eax, word ptr [rax]
cmp	ax, -1
je	0x140087a50
je	0x140087a50
cmp	r12w, ax
je	0x140087a1f
je	0x140087a1f
mov	rcx, qword ptr [rsi + 0x28]
cmp	rcx, qword ptr [rsi + 0x30]
jb	0x1400879c0
jb	0x1400879c0
movzx	edx, ax
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	ax, -1
jne	0x1400879cb
jne	0x1400879cb
test	rbp, rbp
js	0x140087a78
js	0x140087a78
mov	qword ptr [rdi + 8], rbp
jne	0x140087968
jne	0x140087968
jmp	0x140087951
jmp	0x140087951
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	ax, -1
jne	0x1400879ea
jne	0x1400879ea
nop	word ptr [rax + rax]
test	rbp, rbp
js	0x140087aa0
js	0x140087aa0
mov	qword ptr [rdi + 8], rbp
je	0x140087a93
je	0x140087a93
mov	edx, 2
jmp	0x140087956
jmp	0x140087956
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400879f7
jmp	0x1400879f7
nop	dword ptr [rax + rax]
movabs	rax, 0x7fffffffffffffff
mov	qword ptr [rdi + 8], rax
jmp	0x140087968
jmp	0x140087968
mov	qword ptr [rdi + 8], 0
mov	edx, 6
jmp	0x140087956
jmp	0x140087956
nop	dword ptr [rax]
movabs	rax, 0x7fffffffffffffff
mov	qword ptr [rdi + 8], rax
jmp	0x140087a5b
jmp	0x140087a5b
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400879a0
jmp	0x1400879a0
mov	qword ptr [rdi + 8], 0
jmp	0x140087951
jmp	0x140087951
sub	rdx, 1
mov	rcx, rax
jne	0x140087af2
jne	0x140087af2
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rdi]
mov	edx, 1
add	rdi, qword ptr [rax - 0x18]
mov	rcx, rdi
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rdi]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rdi
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008794a
jmp	0x14008794a
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	r8d, 1
mov	qword ptr [rcx + 8], 0
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x2f]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x2f], 0
jne	0x140087ba0
jne	0x140087ba0
cmp	qword ptr [rbx + 8], 0
jne	0x140087b8c
jne	0x140087b8c
mov	edx, 4
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400abe20
call	0x1400abe20
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rdx, qword ptr [rcx + 0x10]
cmp	rdx, qword ptr [rcx + 0x18]
jae	0x140087bf0
jae	0x140087bf0
movzx	eax, word ptr [rdx]
add	rdx, 2
mov	qword ptr [rcx + 0x10], rdx
cmp	ax, -1
je	0x140087be0
je	0x140087be0
mov	qword ptr [rbx + 8], 1
mov	word ptr [rsi], ax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
cmp	qword ptr [rbx + 8], 1
sbb	edx, edx
and	edx, 4
add	edx, 2
jmp	0x140087b7a
jmp	0x140087b7a
nop	
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140087bc4
jmp	0x140087bc4
sub	rdx, 1
mov	rcx, rax
jne	0x140087c1f
jne	0x140087c1f
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
cmp	qword ptr [rbx + 8], 0
je	0x140087b75
je	0x140087b75
jmp	0x140087b8c
jmp	0x140087b8c
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	r8d, 1
mov	qword ptr [rcx + 8], 0
mov	rbx, rcx
lea	rcx, [rsp + 0x2f]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x2f], 0
jne	0x140087cc8
jne	0x140087cc8
cmp	qword ptr [rbx + 8], 0
jne	0x140087cb8
jne	0x140087cb8
mov	edx, 4
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
or	edx, dword ptr [rbx + 0x20]
call	0x1400abe20
call	0x1400abe20
mov	eax, 0xffffffff
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rdx, qword ptr [rcx + 0x10]
cmp	rdx, qword ptr [rcx + 0x18]
jae	0x140087d10
jae	0x140087d10
movzx	eax, word ptr [rdx]
add	rdx, 2
mov	qword ptr [rcx + 0x10], rdx
cmp	ax, -1
je	0x140087d00
je	0x140087d00
mov	qword ptr [rbx + 8], 1
add	rsp, 0x30
pop	rbx
ret	
ret	
cmp	qword ptr [rbx + 8], 1
sbb	edx, edx
and	edx, 4
add	edx, 2
jmp	0x140087ca6
jmp	0x140087ca6
nop	
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140087cec
jmp	0x140087cec
sub	rdx, 1
mov	rcx, rax
jne	0x140087d3f
jne	0x140087d3f
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
cmp	qword ptr [rbx + 8], 0
je	0x140087ca1
je	0x140087ca1
jmp	0x140087cb8
jmp	0x140087cb8
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	rbx
sub	rsp, 0x40
mov	r8d, 1
mov	qword ptr [rcx + 8], 0
mov	rbx, rcx
lea	rcx, [rsp + 0x3f]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x3f], 0
jne	0x140087dc8
jne	0x140087dc8
mov	eax, 0xffffffff
add	rsp, 0x40
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140087e10
jae	0x140087e10
movzx	eax, word ptr [rax]
cmp	ax, -1
jne	0x140087dbf
jne	0x140087dbf
mov	rdx, qword ptr [rbx]
mov	dword ptr [rsp + 0x2c], eax
add	rbx, qword ptr [rdx - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 2
call	0x1400abe20
call	0x1400abe20
mov	eax, dword ptr [rsp + 0x2c]
jmp	0x140087dbf
jmp	0x140087dbf
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140087de4
jmp	0x140087de4
sub	rdx, 1
mov	rcx, rax
jne	0x140087e3f
jne	0x140087e3f
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140087dba
jmp	0x140087dba
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	qword ptr [rcx + 8], 0
mov	rbx, rcx
mov	rdi, rdx
mov	rsi, r8
lea	rcx, [rsp + 0x2f]
mov	r8d, 1
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x2f], 0
je	0x140087ee6
je	0x140087ee6
mov	rax, qword ptr [rbx]
mov	r8, rsi
mov	rdx, rdi
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
mov	qword ptr [rbx + 8], rax
cmp	rsi, rax
jne	0x140087ef8
jne	0x140087ef8
mov	rax, rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 6
call	0x1400abe20
call	0x1400abe20
mov	rax, rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
sub	rdx, 1
mov	rcx, rax
jne	0x140087f3f
jne	0x140087f3f
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140087ee6
jmp	0x140087ee6
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rsi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rbx, qword ptr [rax - 0x18]
add	rsi, rcx
mov	rbp, rcx
mov	rdi, rdx
mov	rcx, rsi
add	rbx, rdx
mov	rdx, rbx
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400abb50
call	0x1400abb50
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rsi + 0xd8]
mov	rdx, qword ptr [rbx + 0xd8]
mov	qword ptr [rsi + 0xd8], rdx
movzx	edx, word ptr [rbx + 0xe0]
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, word ptr [rsi + 0xe0]
mov	word ptr [rsi + 0xe0], dx
movzx	edx, byte ptr [rbx + 0xe2]
mov	word ptr [rbx + 0xe0], ax
movzx	eax, byte ptr [rsi + 0xe2]
mov	byte ptr [rsi + 0xe2], dl
mov	rdx, qword ptr [rdi + 8]
mov	byte ptr [rbx + 0xe2], al
mov	rax, qword ptr [rbp + 8]
mov	qword ptr [rbp + 8], rdx
mov	qword ptr [rdi + 8], rax
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	r8d, 1
mov	rbx, rcx
lea	rcx, [rsp + 0x2f]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x2f], 0
je	0x1400880a0
je	0x1400880a0
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
test	rcx, rcx
je	0x1400880a0
je	0x1400880a0
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x140088089
je	0x140088089
xor	eax, eax
add	rsp, 0x30
pop	rbx
ret	
ret	
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 1
call	0x1400abe20
call	0x1400abe20
nop	
mov	eax, 0xffffffff
jmp	0x140088083
jmp	0x140088083
sub	rdx, 1
mov	rcx, rax
jne	0x1400880ce
jne	0x1400880ce
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400880a0
jmp	0x1400880a0
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
push	rbx
sub	rsp, 0x60
movups	xmmword ptr [rsp + 0x50], xmm6
mov	rax, qword ptr [rcx]
movdqu	xmm6, xmmword ptr [rdx]
mov	rbx, rcx
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
and	edx, 0xfffffffd
call	0x1400abe20
call	0x1400abe20
lea	rcx, [rsp + 0x4f]
mov	r8d, 1
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x4f], 0
je	0x14008818a
je	0x14008818a
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
test	byte ptr [rdx + 0x20], 5
jne	0x14008818a
jne	0x14008818a
lea	rcx, [rsp + 0x30]
mov	r9d, 8
lea	r8, [rsp + 0x20]
mov	rdx, qword ptr [rdx + 0xe8]
movups	xmmword ptr [rsp + 0x20], xmm6
mov	rax, qword ptr [rdx]
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
cmp	qword ptr [rsp + 0x30], -1
je	0x1400881a0
je	0x1400881a0
movups	xmm6, xmmword ptr [rsp + 0x50]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
jmp	0x14008818a
jmp	0x14008818a
sub	rdx, 1
mov	rcx, rax
jne	0x1400881de
jne	0x1400881de
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008818a
jmp	0x14008818a
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x50
mov	rax, qword ptr [rcx]
mov	rbx, rcx
mov	rcx, qword ptr [rax - 0x18]
mov	rdi, rdx
mov	esi, r8d
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
and	edx, 0xfffffffd
call	0x1400abe20
call	0x1400abe20
lea	rcx, [rsp + 0x4f]
mov	r8d, 1
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x4f], 0
je	0x140088297
je	0x140088297
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
test	byte ptr [rdx + 0x20], 5
jne	0x140088297
jne	0x140088297
mov	rdx, qword ptr [rdx + 0xe8]
lea	rcx, [rsp + 0x30]
mov	r9d, esi
mov	r8, rdi
mov	rax, qword ptr [rdx]
mov	dword ptr [rsp + 0x20], 8
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	qword ptr [rsp + 0x30], -1
je	0x1400882a8
je	0x1400882a8
mov	rax, rbx
add	rsp, 0x50
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
jmp	0x140088297
jmp	0x140088297
sub	rdx, 1
mov	rcx, rax
jne	0x1400882e6
jne	0x1400882e6
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140088297
jmp	0x140088297
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x58
mov	r8d, 1
mov	qword ptr [rcx], 0xffffffffffffffff
mov	rbx, rcx
mov	rsi, rdx
mov	dword ptr [rcx + 8], 0
lea	rcx, [rsp + 0x4f]
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x4f], 0
je	0x1400883a8
je	0x1400883a8
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rsi
test	byte ptr [rdx + 0x20], 5
jne	0x1400883a8
jne	0x1400883a8
mov	rdx, qword ptr [rdx + 0xe8]
lea	rcx, [rsp + 0x30]
mov	r9d, 1
xor	r8d, r8d
mov	rax, qword ptr [rdx]
mov	dword ptr [rsp + 0x20], 8
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rsp + 0x30], rax
mov	qword ptr [rbx], rax
mov	eax, dword ptr [rsp + 0x38]
mov	dword ptr [rbx + 8], eax
mov	rax, rbx
add	rsp, 0x58
pop	rbx
pop	rsi
ret	
ret	
sub	rdx, 1
mov	rcx, rax
jne	0x1400883d9
jne	0x1400883d9
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	edx, 1
add	rsi, qword ptr [rax - 0x18]
mov	rcx, rsi
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	edx, 1
add	rsi, qword ptr [rax - 0x18]
mov	rcx, rsi
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400883a8
jmp	0x1400883a8
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rcx]
mov	rbx, rcx
mov	qword ptr [rcx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
and	edx, 0xfffffffd
call	0x1400abe20
call	0x1400abe20
lea	rcx, [rsp + 0x2f]
mov	r8d, 1
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x2f], 0
je	0x140088494
je	0x140088494
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rcx, qword ptr [rdx + 0xe8]
mov	rax, rdx
test	rcx, rcx
je	0x1400884ad
je	0x1400884ad
mov	rax, qword ptr [rcx + 0x10]
cmp	qword ptr [rcx + 8], rax
jae	0x1400884c8
jae	0x1400884c8
lea	rdx, [rax - 2]
movzx	eax, word ptr [rax - 2]
mov	qword ptr [rcx + 0x10], rdx
cmp	ax, -1
je	0x1400884a0
je	0x1400884a0
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	edx, dword ptr [rax + 0x20]
mov	rcx, rax
or	edx, 1
call	0x1400abe20
call	0x1400abe20
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
mov	edx, 0xffff
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
jmp	0x14008848e
jmp	0x14008848e
sub	rdx, 1
mov	rcx, rax
jne	0x1400884fc
jne	0x1400884fc
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140088494
jmp	0x140088494
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
push	rbx
sub	rsp, 0x30
mov	r8d, 1
mov	qword ptr [rcx + 8], 0
mov	rbx, rcx
lea	rcx, [rsp + 0x2f]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x2f], 0
jne	0x140088578
jne	0x140088578
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rdx, qword ptr [rcx + 0x10]
cmp	rdx, qword ptr [rcx + 0x18]
jae	0x1400885d0
jae	0x1400885d0
movzx	eax, word ptr [rdx]
add	rdx, 2
mov	qword ptr [rcx + 0x10], rdx
cmp	ax, -1
je	0x1400885b8
je	0x1400885b8
mov	rax, rbx
mov	qword ptr [rbx + 8], 1
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 2
call	0x1400abe20
call	0x1400abe20
jmp	0x14008856a
jmp	0x14008856a
nop	
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x14008859c
jmp	0x14008859c
sub	rdx, 1
mov	rcx, rax
jne	0x1400885ff
jne	0x1400885ff
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008856a
jmp	0x14008856a
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rsi, rcx
mov	rbx, rdx
cmp	rdx, 1
je	0x1400886b0
je	0x1400886b0
mov	qword ptr [rcx + 8], 0
mov	r8d, 1
lea	rcx, [rsp + 0x2f]
mov	rdx, rsi
call	0x140088bb0
call	0x140088bb0
test	rbx, rbx
jle	0x140088694
jle	0x140088694
movzx	ebp, byte ptr [rsp + 0x2f]
test	bpl, bpl
jne	0x1400886c8
jne	0x1400886c8
mov	rax, rsi
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	word ptr cs:[rax + rax]
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
jmp	0x140088540
jmp	0x140088540
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsi]
mov	rax, qword ptr [rax - 0x18]
mov	rdi, qword ptr [rsi + rax + 0xe8]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x14008883b
jae	0x14008883b
movzx	eax, word ptr [rax]
movabs	r13, 0x7fffffffffffffff
xor	r12d, r12d
movabs	r14, 0x8000000000000000
nop	
mov	rdx, qword ptr [rsi + 8]
cmp	rdx, rbx
jge	0x140088748
jge	0x140088748
cmp	ax, -1
jne	0x140088761
jne	0x140088761
movabs	rax, 0x7fffffffffffffff
cmp	rbx, rax
jne	0x140088727
jne	0x140088727
test	r12b, r12b
je	0x140088727
je	0x140088727
mov	qword ptr [rsi + 8], rbx
mov	rax, qword ptr [rsi]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
mov	edx, dword ptr [rcx + 0x20]
or	edx, 2
call	0x1400abe20
call	0x1400abe20
jmp	0x140088694
jmp	0x140088694
nop	dword ptr [rax]
cmp	rbx, r13
jne	0x140088694
jne	0x140088694
cmp	ax, -1
je	0x14008880d
je	0x14008880d
mov	r12d, ebp
mov	rdx, r14
mov	r9, qword ptr [rdi + 0x18]
mov	rcx, qword ptr [rdi + 0x10]
mov	r8, rbx
sub	r8, rdx
mov	rax, r9
sub	rax, rcx
sar	rax, 1
cmp	rax, r8
cmovg	rax, r8
cmp	rax, 1
jle	0x1400887a8
jle	0x1400887a8
lea	rcx, [rcx + rax*2]
add	rax, rdx
mov	qword ptr [rdi + 0x10], rcx
mov	qword ptr [rsi + 8], rax
cmp	rcx, r9
jae	0x1400887e0
jae	0x1400887e0
movzx	eax, word ptr [rcx]
jmp	0x140088700
jmp	0x140088700
nop	dword ptr [rax]
add	rdx, 1
mov	qword ptr [rsi + 8], rdx
cmp	rcx, r9
jae	0x140088830
jae	0x140088830
movzx	eax, word ptr [rcx]
add	rcx, 2
mov	qword ptr [rdi + 0x10], rcx
cmp	ax, -1
je	0x1400887f0
je	0x1400887f0
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x1400887e0
jae	0x1400887e0
movzx	eax, word ptr [rax]
jmp	0x140088700
jmp	0x140088700
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140088700
jmp	0x140088700
nop	
cmp	rbx, qword ptr [rsi + 8]
jg	0x14008870f
jg	0x14008870f
movabs	rax, 0x7fffffffffffffff
cmp	rbx, rax
jne	0x140088694
jne	0x140088694
test	r12b, r12b
je	0x140088727
je	0x140088727
movabs	rax, 0x7fffffffffffffff
mov	qword ptr [rsi + 8], rax
jmp	0x140088727
jmp	0x140088727
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x1400887c0
jmp	0x1400887c0
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400886e8
jmp	0x1400886e8
sub	rdx, 1
mov	rcx, rax
jne	0x140088870
jne	0x140088870
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	edx, 1
add	rsi, qword ptr [rax - 0x18]
mov	rcx, rsi
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140088694
jmp	0x140088694
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, rcx
mov	rsi, rdx
mov	edi, r8d
cmp	r8w, -1
je	0x140088920
je	0x140088920
mov	qword ptr [rcx + 8], 0
mov	r8d, 1
lea	rcx, [rsp + 0x2f]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
test	rsi, rsi
jle	0x14008890b
jle	0x14008890b
movzx	r12d, byte ptr [rsp + 0x2f]
test	r12b, r12b
jne	0x140088938
jne	0x140088938
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
jmp	0x140088650
jmp	0x140088650
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rbp, qword ptr [rbx + rax + 0xe8]
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140088a88
jae	0x140088a88
movzx	eax, word ptr [rax]
movabs	r14, 0x7fffffffffffffff
xor	r13d, r13d
movabs	r15, 0x8000000000000000
mov	r8, qword ptr [rbx + 8]
cmp	r8, rsi
jge	0x1400889b8
jge	0x1400889b8
cmp	ax, -1
jne	0x140088b25
jne	0x140088b25
movabs	rax, 0x7fffffffffffffff
cmp	rsi, rax
jne	0x14008899a
jne	0x14008899a
test	r13b, r13b
je	0x14008899a
je	0x14008899a
mov	qword ptr [rbx + 8], rsi
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 2
call	0x1400abe20
call	0x1400abe20
jmp	0x14008890b
jmp	0x14008890b
nop	dword ptr [rax]
cmp	rsi, r14
jne	0x14008890b
jne	0x14008890b
cmp	ax, -1
je	0x140088ab4
je	0x140088ab4
cmp	ax, di
je	0x140088adc
je	0x140088adc
mov	r13d, r12d
mov	r8, r15
mov	r10, qword ptr [rbp + 0x18]
mov	r9, qword ptr [rbp + 0x10]
mov	rax, rsi
sub	rax, r8
mov	rcx, r10
sub	rcx, r9
sar	rcx, 1
cmp	rcx, rax
cmovg	rcx, rax
cmp	rcx, 1
jle	0x140088a50
jle	0x140088a50
mov	r11, rcx
test	r9, r9
je	0x140088a2b
je	0x140088a2b
mov	rdx, rcx
mov	rax, r9
jmp	0x140088a1a
jmp	0x140088a1a
nop	
add	rax, 2
sub	rdx, 1
je	0x140088a2b
je	0x140088a2b
cmp	di, word ptr [rax]
jne	0x140088a10
jne	0x140088a10
sub	rax, r9
sar	rax, 1
mov	rcx, rax
mov	r11, rax
lea	rax, [r9 + r11*2]
add	rcx, r8
mov	qword ptr [rbp + 0x10], rax
mov	qword ptr [rbx + 8], rcx
cmp	rax, r10
jae	0x140088a79
jae	0x140088a79
movzx	eax, word ptr [rax]
jmp	0x14008896f
jmp	0x14008896f
nop	word ptr [rax + rax]
add	r8, 1
mov	qword ptr [rbx + 8], r8
cmp	r9, r10
jae	0x140088ad0
jae	0x140088ad0
movzx	eax, word ptr [r9]
add	r9, 2
mov	qword ptr [rbp + 0x10], r9
cmp	ax, -1
je	0x140088a97
je	0x140088a97
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jb	0x140088a3f
jb	0x140088a3f
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x14008896f
jmp	0x14008896f
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x140088958
jmp	0x140088958
cmp	qword ptr [rbx + 8], rsi
jl	0x140088982
jl	0x140088982
movabs	rax, 0x7fffffffffffffff
cmp	rsi, rax
jne	0x14008890b
jne	0x14008890b
test	r13b, r13b
je	0x14008899a
je	0x14008899a
movabs	rax, 0x7fffffffffffffff
mov	qword ptr [rbx + 8], rax
jmp	0x14008899a
jmp	0x14008899a
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140088a69
jmp	0x140088a69
test	r13b, r13b
je	0x140088b07
je	0x140088b07
movabs	rax, 0x7fffffffffffffff
mov	qword ptr [rbx + 8], rax
nop	
mov	rax, qword ptr [rbp + 0x10]
cmp	rax, qword ptr [rbp + 0x18]
jae	0x140088b16
jae	0x140088b16
add	rax, 2
mov	qword ptr [rbp + 0x10], rax
jmp	0x14008890b
jmp	0x14008890b
cmp	r8, rsi
je	0x140088af0
je	0x140088af0
add	r8, 1
mov	qword ptr [rbx + 8], r8
jmp	0x140088af0
jmp	0x140088af0
mov	rax, qword ptr [rbp]
mov	rcx, rbp
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x14008890b
jmp	0x14008890b
cmp	ax, di
jne	0x1400889da
jne	0x1400889da
movabs	rax, 0x7fffffffffffffff
cmp	rsi, rax
jne	0x140088b0c
jne	0x140088b0c
test	r13b, r13b
je	0x140088b0c
je	0x140088b0c
jmp	0x140088ae1
jmp	0x140088ae1
sub	rdx, 1
mov	rcx, rax
jne	0x140088b6b
jne	0x140088b6b
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008890b
jmp	0x14008890b
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	byte ptr [rcx], 0
mov	rsi, rcx
mov	rcx, qword ptr [rax - 0x18]
mov	rbx, rdx
mov	edi, r8d
add	rcx, rdx
mov	edx, dword ptr [rcx + 0x20]
test	edx, edx
jne	0x140088c05
jne	0x140088c05
mov	rax, qword ptr [rcx + 0xd8]
test	rax, rax
je	0x140088c18
je	0x140088c18
mov	rcx, rax
call	0x14008a0e0
call	0x14008a0e0
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
test	dil, dil
jne	0x140088bfe
jne	0x140088bfe
test	byte ptr [rcx + 0x19], 0x10
jne	0x140088c30
jne	0x140088c30
mov	edx, dword ptr [rcx + 0x20]
test	edx, edx
je	0x140088c23
je	0x140088c23
or	edx, 4
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x1400abe20
jmp	0x1400abe20
nop	dword ptr [rax]
test	r8b, r8b
jne	0x140088c23
jne	0x140088c23
test	byte ptr [rcx + 0x19], 0x10
jne	0x140088c30
jne	0x140088c30
mov	byte ptr [rsi], 1
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
mov	rdi, qword ptr [rcx + 0xe8]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140088d1f
jae	0x140088d1f
movzx	r8d, word ptr [rax]
mov	rbp, qword ptr [rcx + 0xf0]
test	rbp, rbp
je	0x140088d3b
je	0x140088d3b
cmp	r8w, -1
jne	0x140088c8e
jne	0x140088c8e
jmp	0x140088cca
jmp	0x140088cca
nop	word ptr [rax + rax]
movzx	eax, word ptr [rdx]
add	rdx, 2
mov	qword ptr [rdi + 0x10], rdx
cmp	ax, -1
je	0x140088cc0
je	0x140088cc0
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140088cd8
jae	0x140088cd8
movzx	r8d, word ptr [rax]
cmp	r8w, -1
je	0x140088cc0
je	0x140088cc0
mov	rax, qword ptr [rbp]
mov	edx, 0x20
mov	rcx, rbp
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
test	al, al
je	0x140088d10
je	0x140088d10
mov	rdx, qword ptr [rdi + 0x10]
cmp	rdx, qword ptr [rdi + 0x18]
jb	0x140088c68
jb	0x140088c68
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140088c73
jmp	0x140088c73
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 2
jmp	0x140088c05
jmp	0x140088c05
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, ax
jmp	0x140088c87
jmp	0x140088c87
sub	rdx, 1
mov	rcx, rax
je	0x140088d40
je	0x140088d40
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
nop	
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
jmp	0x140088bfe
jmp	0x140088bfe
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, ax
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
jmp	0x140088c49
jmp	0x140088c49
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	byte ptr [rcx], 0
mov	rsi, rcx
mov	rcx, qword ptr [rax - 0x18]
mov	rbx, rdx
mov	edi, r8d
add	rcx, rdx
mov	edx, dword ptr [rcx + 0x20]
test	edx, edx
jne	0x140088dd5
jne	0x140088dd5
mov	rax, qword ptr [rcx + 0xd8]
test	rax, rax
je	0x140088de8
je	0x140088de8
mov	rcx, rax
call	0x14008a0e0
call	0x14008a0e0
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
test	dil, dil
jne	0x140088dce
jne	0x140088dce
test	byte ptr [rcx + 0x19], 0x10
jne	0x140088e00
jne	0x140088e00
mov	edx, dword ptr [rcx + 0x20]
test	edx, edx
je	0x140088df3
je	0x140088df3
or	edx, 4
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x1400abe20
jmp	0x1400abe20
nop	dword ptr [rax]
test	r8b, r8b
jne	0x140088df3
jne	0x140088df3
test	byte ptr [rcx + 0x19], 0x10
jne	0x140088e00
jne	0x140088e00
mov	byte ptr [rsi], 1
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
mov	rdi, qword ptr [rcx + 0xe8]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140088eef
jae	0x140088eef
movzx	r8d, word ptr [rax]
mov	rbp, qword ptr [rcx + 0xf0]
test	rbp, rbp
je	0x140088f0b
je	0x140088f0b
cmp	r8w, -1
jne	0x140088e5e
jne	0x140088e5e
jmp	0x140088e9a
jmp	0x140088e9a
nop	word ptr [rax + rax]
movzx	eax, word ptr [rdx]
add	rdx, 2
mov	qword ptr [rdi + 0x10], rdx
cmp	ax, -1
je	0x140088e90
je	0x140088e90
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140088ea8
jae	0x140088ea8
movzx	r8d, word ptr [rax]
cmp	r8w, -1
je	0x140088e90
je	0x140088e90
mov	rax, qword ptr [rbp]
mov	edx, 0x20
mov	rcx, rbp
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
test	al, al
je	0x140088ee0
je	0x140088ee0
mov	rdx, qword ptr [rdi + 0x10]
cmp	rdx, qword ptr [rdi + 0x18]
jb	0x140088e38
jb	0x140088e38
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140088e43
jmp	0x140088e43
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 2
jmp	0x140088dd5
jmp	0x140088dd5
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, ax
jmp	0x140088e57
jmp	0x140088e57
sub	rdx, 1
mov	rcx, rax
je	0x140088f10
je	0x140088f10
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
nop	
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
jmp	0x140088dce
jmp	0x140088dce
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, ax
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
jmp	0x140088e19
jmp	0x140088e19
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + rax + 0xf0]
mov	rdi, rdx
mov	rsi, r8
test	rcx, rcx
je	0x140088f98
je	0x140088f98
mov	rax, qword ptr [rcx]
mov	edx, 0xa
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	r8, rsi
mov	rdx, rdi
mov	rcx, rbx
movzx	r9d, ax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x140088fa0
jmp	0x140088fa0
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, rcx
mov	r12, rdx
mov	rbp, r8
mov	r8d, 1
mov	qword ptr [rcx + 8], 0
mov	rdx, rsi
lea	rcx, [rsp + 0x2f]
mov	r13d, r9d
mov	ebx, r9d
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x2f], 0
jne	0x140089028
jne	0x140089028
mov	rax, qword ptr [rsi + 8]
test	rbp, rbp
jle	0x140088ff1
jle	0x140088ff1
xor	edx, edx
mov	word ptr [r12], dx
test	rax, rax
jne	0x14008900d
jne	0x14008900d
mov	edx, 4
mov	rax, qword ptr [rsi]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
or	edx, dword ptr [rcx + 0x20]
call	0x1400abe20
call	0x1400abe20
mov	rax, rsi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
mov	rax, qword ptr [rax - 0x18]
mov	rdi, qword ptr [rsi + rax + 0xe8]
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140089237
jae	0x140089237
movzx	edx, word ptr [rax]
mov	r14, qword ptr [rsi + 8]
lea	r8, [r14 + 1]
cmp	rbp, r8
jle	0x1400891c4
jle	0x1400891c4
cmp	dx, -1
je	0x140089250
je	0x140089250
cmp	dx, r13w
je	0x140089109
je	0x140089109
nop	dword ptr [rax]
mov	r9, qword ptr [rdi + 0x18]
mov	rcx, qword ptr [rdi + 0x10]
mov	rax, rbp
sub	rax, r14
mov	r14, r9
sub	rax, 1
sub	r14, rcx
sar	r14, 1
cmp	rax, r14
cmovle	r14, rax
cmp	r14, 1
jle	0x140089168
jle	0x140089168
mov	r8, r14
test	rcx, rcx
je	0x140089140
je	0x140089140
mov	rdx, r14
mov	rax, rcx
jmp	0x1400890be
jmp	0x1400890be
add	rax, 2
sub	rdx, 1
je	0x140089140
je	0x140089140
cmp	word ptr [rax], bx
jne	0x1400890b0
jne	0x1400890b0
sub	rax, rcx
sar	rax, 1
mov	r14, rax
mov	r8, rax
jne	0x140089140
jne	0x140089140
add	r14, qword ptr [rsi + 8]
mov	qword ptr [rdi + 0x10], rcx
mov	qword ptr [rsi + 8], r14
cmp	rcx, r9
jae	0x1400891b0
jae	0x1400891b0
movzx	edx, word ptr [rcx]
lea	r8, [r14 + 1]
cmp	r8, rbp
jge	0x1400891c4
jge	0x1400891c4
cmp	dx, -1
je	0x140089247
je	0x140089247
cmp	dx, bx
jne	0x140089070
jne	0x140089070
mov	qword ptr [rsi + 8], r8
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140089255
jae	0x140089255
add	rax, 2
mov	qword ptr [rdi + 0x10], rax
test	rbp, rbp
jle	0x14008912f
jle	0x14008912f
xor	ecx, ecx
mov	word ptr [r12], cx
test	r8, r8
je	0x140088ff6
je	0x140088ff6
jmp	0x14008900d
jmp	0x14008900d
nop	dword ptr [rax]
lea	r15, [r8 + r8]
mov	rdx, rcx
mov	rcx, r12
mov	r8, r15
add	r12, r15
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rdi + 0x10]
mov	r9, qword ptr [rdi + 0x18]
add	rcx, r15
jmp	0x1400890d1
jmp	0x1400890d1
nop	dword ptr [rax]
mov	word ptr [r12], dx
lea	r15, [r12 + 2]
mov	qword ptr [rsi + 8], r8
cmp	rcx, r9
jae	0x140089212
jae	0x140089212
movzx	eax, word ptr [rcx]
add	rcx, 2
mov	qword ptr [rdi + 0x10], rcx
cmp	ax, -1
je	0x1400891ea
je	0x1400891ea
mov	rax, qword ptr [rdi + 0x10]
cmp	rax, qword ptr [rdi + 0x18]
jae	0x140089220
jae	0x140089220
movzx	edx, word ptr [rax]
mov	r14, qword ptr [rsi + 8]
mov	r12, r15
jmp	0x1400890e9
jmp	0x1400890e9
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r14, qword ptr [rsi + 8]
mov	edx, eax
jmp	0x1400890e9
jmp	0x1400890e9
cmp	dx, -1
je	0x140089247
je	0x140089247
cmp	dx, r13w
je	0x140089109
je	0x140089109
test	rbp, rbp
jle	0x140088ff6
jle	0x140088ff6
xor	r8d, r8d
mov	word ptr [r12], r8w
jmp	0x140088ff6
jmp	0x140088ff6
mov	r14, qword ptr [rsi + 8]
test	rbp, rbp
jle	0x1400891fa
jle	0x1400891fa
xor	r9d, r9d
mov	word ptr [r15], r9w
mov	edx, 6
test	r14, r14
je	0x140088ffb
je	0x140088ffb
mov	edx, 2
jmp	0x140088ffb
jmp	0x140088ffb
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x14008918a
jmp	0x14008918a
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r14, qword ptr [rsi + 8]
mov	edx, eax
mov	r12, r15
jmp	0x1400890e9
jmp	0x1400890e9
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	edx, eax
jmp	0x140089048
jmp	0x140089048
mov	r14, qword ptr [rsi + 8]
mov	r15, r12
jmp	0x1400891ee
jmp	0x1400891ee
mov	r15, r12
jmp	0x1400891ee
jmp	0x1400891ee
mov	rax, qword ptr [rdi]
mov	rcx, rdi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x140088fe1
jmp	0x140088fe1
mov	rcx, rax
mov	r15, r12
mov	rax, rdx
sub	rax, 1
jne	0x14008929c
jne	0x14008929c
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	edx, 1
add	rsi, qword ptr [rax - 0x18]
mov	rcx, rsi
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
jmp	0x140089263
jmp	0x140089263
mov	rcx, rax
mov	rax, rdx
jmp	0x14008926c
jmp	0x14008926c
jmp	0x140089263
jmp	0x140089263
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
test	rbp, rbp
jle	0x1400892c5
jle	0x1400892c5
mov	word ptr [r15], 0
cmp	qword ptr [rsi + 8], 0
jne	0x14008900d
jne	0x14008900d
jmp	0x140088ff6
jmp	0x140088ff6
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rcx]
mov	rbx, rcx
mov	qword ptr [rcx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
mov	esi, edx
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
and	edx, 0xfffffffd
call	0x1400abe20
call	0x1400abe20
lea	rcx, [rsp + 0x2f]
mov	r8d, 1
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x2f], 0
je	0x14008937c
je	0x14008937c
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rcx, qword ptr [rdx + 0xe8]
mov	rax, rdx
test	rcx, rcx
je	0x14008939d
je	0x14008939d
mov	rdx, qword ptr [rcx + 0x10]
cmp	qword ptr [rcx + 8], rdx
jae	0x1400893b8
jae	0x1400893b8
movzx	eax, word ptr [rdx - 2]
cmp	si, ax
jne	0x1400893b8
jne	0x1400893b8
sub	rdx, 2
mov	qword ptr [rcx + 0x10], rdx
cmp	ax, -1
je	0x140089390
je	0x140089390
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbx]
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
mov	rax, rsi
mov	edx, dword ptr [rax + 0x20]
mov	rcx, rax
or	edx, 1
call	0x1400abe20
call	0x1400abe20
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
movzx	edx, si
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
jmp	0x140089376
jmp	0x140089376
sub	rdx, 1
mov	rcx, rax
jne	0x1400893ea
jne	0x1400893ea
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008937c
jmp	0x14008937c
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	qword ptr [rcx + 8], 0
mov	rbx, rcx
mov	rsi, rdx
mov	rdi, r8
lea	rcx, [rsp + 0x2f]
mov	r8d, 1
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x2f], 0
jne	0x140089470
jne	0x140089470
mov	rax, qword ptr [rbx + 8]
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rax, qword ptr [rcx + 0x18]
mov	rdx, qword ptr [rcx + 0x10]
cmp	rax, rdx
je	0x1400894f0
je	0x1400894f0
sub	rax, rdx
sar	rax, 1
test	rax, rax
jle	0x1400894d0
jle	0x1400894d0
mov	rdx, qword ptr [rbx]
cmp	rax, rdi
cmovle	rdi, rax
mov	rdx, qword ptr [rdx - 0x18]
mov	r8, rdi
mov	rcx, qword ptr [rbx + rdx + 0xe8]
mov	rdx, rsi
mov	r9, qword ptr [rcx]
call	qword ptr [r9 + 0x40]
call	qword ptr [r9 + 0x40]
mov	qword ptr [rbx + 8], rax
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr cs:[rax + rax]
cmp	rax, -1
jne	0x140089462
jne	0x140089462
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 2
call	0x1400abe20
call	0x1400abe20
jmp	0x140089462
jmp	0x140089462
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
jmp	0x140089492
jmp	0x140089492
sub	rdx, 1
mov	rcx, rax
jne	0x14008951f
jne	0x14008951f
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140089462
jmp	0x140089462
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rcx + 0x10]
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rbp
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
mov	rcx, rbp
mov	word ptr [rbx + 0xf0], ax
lea	rax, [rip + 0x3d437]
mov	qword ptr [rbx], rax
add	rax, 0x28
movups	xmmword ptr [rbx + 0xf8], xmm0
movups	xmmword ptr [rbx + 0x108], xmm0
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rsi + 8]
mov	qword ptr [rbx + 0xe8], 0
mov	qword ptr [rbx + 8], rax
mov	rax, qword ptr [rsi]
mov	byte ptr [rbx + 0xf2], 0
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
mov	rdx, rdi
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0xe0]
mov	rcx, rbp
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rdi + 0xd8]
mov	qword ptr [rbx + 0xf8], 0
mov	qword ptr [rdi + 0xd8], 0
mov	qword ptr [rbx + 0xe8], rax
movzx	eax, word ptr [rdi + 0xe0]
mov	word ptr [rbx + 0xf0], ax
movzx	eax, byte ptr [rdi + 0xe2]
mov	qword ptr [rsi + 8], 0
mov	byte ptr [rbx + 0xf2], al
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rsi, rax
mov	rax, qword ptr [rip + 0x35b21]
mov	rcx, rbp
add	rax, 0x10
mov	qword ptr [rbx + 0x10], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rdi, [rcx + 0x10]
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rdi
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
mov	rdx, rsi
mov	word ptr [rbx + 0xf0], ax
lea	rax, [rip + 0x3d338]
mov	rcx, rdi
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	qword ptr [rbx + 0xe8], 0
mov	byte ptr [rbx + 0xf2], 0
mov	qword ptr [rbx + 0x10], rax
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0xf8], xmm0
movups	xmmword ptr [rbx + 0x108], xmm0
call	0x1400abc50
call	0x1400abc50
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rax, qword ptr [rip + 0x35a82]
mov	rcx, rdi
add	rax, 0x10
mov	qword ptr [rbx + 0x10], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rsi, [rcx + 0x10]
mov	rbx, rcx
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
mov	byte ptr [rbx + 0xf2], 0
xor	edx, edx
mov	word ptr [rbx + 0xf0], ax
lea	rax, [rip + 0x3d299]
pxor	xmm0, xmm0
mov	rcx, rsi
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	qword ptr [rbx + 0xe8], 0
mov	qword ptr [rbx + 0x10], rax
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0xf8], xmm0
movups	xmmword ptr [rbx + 0x108], xmm0
call	0x1400abc50
call	0x1400abc50
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rdi, rax
mov	rax, qword ptr [rip + 0x359e6]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0x10], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rdi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx]
mov	rdx, qword ptr [rdx + 8]
mov	qword ptr [rcx], rax
mov	rbx, rcx
mov	rcx, qword ptr [rax - 0x18]
mov	rsi, r8
mov	qword ptr [rbx + rcx], rdx
mov	rdx, qword ptr [r8 + 8]
mov	qword ptr [rbx + 8], rdx
add	rbx, qword ptr [rax - 0x18]
mov	rax, qword ptr [r8]
mov	rcx, rbx
mov	rdi, qword ptr [rax - 0x18]
add	rdi, r8
mov	rdx, rdi
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rdi + 0xd8]
mov	qword ptr [rbx + 0xe8], 0
mov	qword ptr [rdi + 0xd8], 0
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, word ptr [rdi + 0xe0]
mov	word ptr [rbx + 0xe0], ax
movzx	eax, byte ptr [rdi + 0xe2]
mov	qword ptr [rsi + 8], 0
mov	byte ptr [rbx + 0xe2], al
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
mov	rax, rdx
mov	rdx, r8
mov	r8, qword ptr [rax]
mov	rax, qword ptr [rax + 8]
mov	r9, qword ptr [r8 - 0x18]
mov	qword ptr [rcx], r8
mov	qword ptr [rcx + r9], rax
mov	qword ptr [rcx + 8], 0
add	rcx, qword ptr [r8 - 0x18]
jmp	0x1400abc50
jmp	0x1400abc50
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	rdx, qword ptr [rdx + 8]
mov	r8, qword ptr [rax - 0x18]
mov	qword ptr [rcx], rax
mov	qword ptr [rcx + r8], rdx
xor	edx, edx
mov	qword ptr [rcx + 8], 0
add	rcx, qword ptr [rax - 0x18]
jmp	0x1400abc50
jmp	0x1400abc50
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x3d11c]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x358aa]
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	qword ptr [rcx - 8], 0
add	rax, 0x10
mov	qword ptr [rcx], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
lea	rax, [rip + 0x3d0e1]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x3586f]
add	rcx, 0x10
mov	qword ptr [rcx - 8], 0
add	rax, 0x10
mov	qword ptr [rcx], rax
jmp	0x1400aa330
jmp	0x1400aa330
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rdx, qword ptr [rdx + 8]
mov	qword ptr [rcx + rax], rdx
mov	qword ptr [rcx + 8], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rsi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rbx, qword ptr [rax - 0x18]
add	rsi, rcx
mov	rdi, rcx
mov	rbp, rdx
mov	rcx, rsi
add	rbx, rdx
mov	rdx, rbx
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400abb50
call	0x1400abb50
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rsi + 0xd8]
mov	rdx, qword ptr [rbx + 0xd8]
mov	qword ptr [rsi + 0xd8], rdx
movzx	edx, word ptr [rbx + 0xe0]
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, word ptr [rsi + 0xe0]
mov	word ptr [rsi + 0xe0], dx
movzx	edx, byte ptr [rbx + 0xe2]
mov	word ptr [rbx + 0xe0], ax
movzx	eax, byte ptr [rsi + 0xe2]
mov	byte ptr [rsi + 0xe2], dl
mov	rdx, qword ptr [rbp + 8]
mov	byte ptr [rbx + 0xe2], al
mov	rax, qword ptr [rdi + 8]
mov	qword ptr [rdi + 8], rdx
mov	qword ptr [rbp + 8], rax
mov	rax, rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	rdx
jmp	rdx
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rbx, rcx
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	rdx
call	rdx
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rbx, rcx
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	rdx
call	rdx
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x2e]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x2e], 0
je	0x140089ac8
je	0x140089ac8
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
test	rsi, rsi
je	0x140089ad0
je	0x140089ad0
mov	rcx, qword ptr [rbx + rdx + 0xe8]
lea	r8, [rsp + 0x2f]
mov	rdx, rsi
call	0x1400ae9f0
call	0x1400ae9f0
movzx	edx, byte ptr [rsp + 0x2f]
test	rax, rax
je	0x140089ae0
je	0x140089ae0
test	dl, dl
je	0x140089ab9
je	0x140089ab9
mov	rax, qword ptr [rbx]
mov	edx, 2
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400abe20
call	0x1400abe20
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
test	rsi, rsi
jne	0x140089ab9
jne	0x140089ab9
mov	rax, qword ptr [rbx]
mov	edx, 4
jmp	0x140089aaa
jmp	0x140089aaa
nop	word ptr [rax + rax]
test	dl, dl
je	0x140089acd
je	0x140089acd
mov	rax, qword ptr [rbx]
mov	edx, 6
jmp	0x140089aaa
jmp	0x140089aaa
sub	rdx, 1
mov	rcx, rax
jne	0x140089b15
jne	0x140089b15
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 4
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 4
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140089ab9
jmp	0x140089ab9
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x1400867e0
jmp	0x1400867e0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x140086930
jmp	0x140086930
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x140086a80
jmp	0x140086a80
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x140086bd0
jmp	0x140086bd0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x140086d20
jmp	0x140086d20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x77]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x77], 0
je	0x140089c63
je	0x140089c63
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x78], 0
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
mov	rax, rdx
mov	rdx, qword ptr [rdx + 0x100]
test	rdx, rdx
je	0x140089c8f
je	0x140089c8f
mov	r8, qword ptr [rax + 0xe8]
mov	r10, qword ptr [rdx]
lea	rcx, [rsp + 0x60]
mov	qword ptr [rsp + 0x58], 0xffff
mov	qword ptr [rsp + 0x40], 0
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x7c]
mov	qword ptr [rsp + 0x30], r8
lea	r8, [rsp + 0x78]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x48], 0xffff
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x18]
call	qword ptr [r10 + 0x18]
mov	eax, dword ptr [rsp + 0x7c]
mov	dword ptr [rsi], eax
mov	edx, dword ptr [rsp + 0x78]
test	edx, edx
jne	0x140089c70
jne	0x140089c70
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400abe20
call	0x1400abe20
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x140089cbb
jne	0x140089cbb
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140089c5b
jmp	0x140089c5b
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
jmp	0x140086e70
jmp	0x140086e70
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x140086fc0
jmp	0x140086fc0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x140087110
jmp	0x140087110
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x88
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x77]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x77], 0
je	0x140089e05
je	0x140089e05
mov	rax, qword ptr [rbx]
mov	dword ptr [rsp + 0x78], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	rdx, qword ptr [rcx + 0x100]
mov	rax, rcx
test	rdx, rdx
je	0x140089e49
je	0x140089e49
mov	r8, qword ptr [rcx + 0xe8]
mov	r10, qword ptr [rdx]
mov	qword ptr [rsp + 0x58], 0xffff
lea	rcx, [rsp + 0x60]
mov	qword ptr [rsp + 0x40], 0
lea	r9, [rsp + 0x40]
mov	qword ptr [rsp + 0x50], r8
lea	r8, [rsp + 0x7c]
mov	qword ptr [rsp + 0x30], r8
lea	r8, [rsp + 0x78]
mov	qword ptr [rsp + 0x28], r8
lea	r8, [rsp + 0x50]
mov	qword ptr [rsp + 0x48], 0xffff
mov	qword ptr [rsp + 0x20], rax
call	qword ptr [r10 + 0x18]
call	qword ptr [r10 + 0x18]
mov	eax, dword ptr [rsp + 0x7c]
mov	edx, dword ptr [rsp + 0x78]
cmp	eax, 0xffff8000
jge	0x140089e18
jge	0x140089e18
or	edx, 4
mov	ecx, 0xffff8000
mov	dword ptr [rsp + 0x78], edx
mov	word ptr [rsi], cx
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400abe20
call	0x1400abe20
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
cmp	eax, 0x7fff
jg	0x140089e38
jg	0x140089e38
mov	word ptr [rsi], ax
test	edx, edx
jne	0x140089df3
jne	0x140089df3
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
or	edx, 4
mov	eax, 0x7fff
mov	dword ptr [rsp + 0x78], edx
mov	word ptr [rsi], ax
jmp	0x140089df3
jmp	0x140089df3
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x140089e75
jne	0x140089e75
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
mov	edx, dword ptr [rsp + 0x78]
jmp	0x140089e22
jmp	0x140089e22
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x140087260
jmp	0x140087260
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x1400873b0
jmp	0x1400873b0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x140087500
jmp	0x140087500
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
lea	rdi, [rsp + 0x20]
mov	rbx, rcx
mov	esi, edx
mov	ebp, edx
mov	rdx, rcx
mov	rcx, rdi
call	0x14008a620
call	0x14008a620
cmp	byte ptr [rsp + 0x20], 0
je	0x140089f40
je	0x140089f40
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rax, qword ptr [rcx + 0x28]
cmp	rax, qword ptr [rcx + 0x30]
jae	0x140089fa0
jae	0x140089fa0
mov	word ptr [rax], si
add	rax, 2
mov	qword ptr [rcx + 0x28], rax
cmp	bp, -1
je	0x140089f88
je	0x140089f88
mov	rsi, qword ptr [rsp + 0x28]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x140089f75
je	0x140089f75
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x140089f75
jne	0x140089f75
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x140089f75
je	0x140089f75
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x140089fb0
je	0x140089fb0
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x140089f40
jmp	0x140089f40
nop	
mov	rax, qword ptr [rcx]
movzx	edx, si
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
mov	ebp, eax
jmp	0x140089f3a
jmp	0x140089f3a
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x140089f75
jmp	0x140089f75
sub	rdx, 1
mov	rcx, rax
jne	0x14008a001
jne	0x14008a001
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, rdi
call	0x14008a720
call	0x14008a720
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140089f40
jmp	0x140089f40
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140089ff1
jmp	0x140089ff1
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140089ff1
jmp	0x140089ff1
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rsi, rcx
add	rsi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rbx, rdx
mov	rcx, rsi
add	rbx, qword ptr [rax - 0x18]
mov	rdx, rbx
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400abb50
call	0x1400abb50
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rsi + 0xd8]
mov	rdx, qword ptr [rbx + 0xd8]
mov	qword ptr [rsi + 0xd8], rdx
movzx	edx, word ptr [rbx + 0xe0]
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, word ptr [rsi + 0xe0]
mov	word ptr [rsi + 0xe0], dx
movzx	edx, byte ptr [rbx + 0xe2]
mov	word ptr [rbx + 0xe0], ax
movzx	eax, byte ptr [rsi + 0xe2]
mov	byte ptr [rsi + 0xe2], dl
mov	byte ptr [rbx + 0xe2], al
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
cmp	qword ptr [rcx + rax + 0xe8], 0
mov	rbx, rcx
je	0x14008a162
je	0x14008a162
lea	rsi, [rsp + 0x20]
mov	rdx, rcx
mov	rcx, rsi
call	0x14008a620
call	0x14008a620
cmp	byte ptr [rsp + 0x20], 0
je	0x14008a12d
je	0x14008a12d
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14008a170
je	0x14008a170
mov	rsi, qword ptr [rsp + 0x28]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x14008a162
je	0x14008a162
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14008a162
jne	0x14008a162
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14008a162
je	0x14008a162
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14008a190
je	0x14008a190
mov	rax, rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x14008a12d
jmp	0x14008a12d
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x14008a162
jmp	0x14008a162
sub	rdx, 1
mov	rcx, rax
jne	0x14008a1e1
jne	0x14008a1e1
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, rsi
call	0x14008a720
call	0x14008a720
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008a12d
jmp	0x14008a12d
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008a1d1
jmp	0x14008a1d1
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008a1d1
jmp	0x14008a1d1
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x60
movups	xmmword ptr [rsp + 0x50], xmm6
movdqu	xmm6, xmmword ptr [rdx]
lea	rsi, [rsp + 0x40]
mov	rbx, rcx
mov	rdx, rcx
mov	rcx, rsi
call	0x14008a620
call	0x14008a620
mov	rax, qword ptr [rbx]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rbx
test	byte ptr [rdi + 0x20], 5
jne	0x14008a27d
jne	0x14008a27d
lea	rcx, [rsp + 0x30]
mov	r9d, 0x10
lea	r8, [rsp + 0x20]
mov	rdx, qword ptr [rdi + 0xe8]
movups	xmmword ptr [rsp + 0x20], xmm6
mov	rax, qword ptr [rdx]
call	qword ptr [rax + 0x28]
call	qword ptr [rax + 0x28]
cmp	qword ptr [rsp + 0x30], -1
je	0x14008a2c8
je	0x14008a2c8
mov	rsi, qword ptr [rsp + 0x48]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x14008a2b2
je	0x14008a2b2
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14008a2b2
jne	0x14008a2b2
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14008a2b2
je	0x14008a2b2
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14008a2e0
je	0x14008a2e0
movups	xmm6, xmmword ptr [rsp + 0x50]
mov	rax, rbx
add	rsp, 0x60
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
jmp	0x14008a27d
jmp	0x14008a27d
nop	
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x14008a2b2
jmp	0x14008a2b2
mov	rbx, rax
mov	rcx, rsi
call	0x14008a720
call	0x14008a720
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
lea	rsi, [rsp + 0x40]
mov	rbx, rcx
mov	rbp, rdx
mov	rdx, rcx
mov	rcx, rsi
mov	edi, r8d
call	0x14008a620
call	0x14008a620
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbx
test	byte ptr [rdx + 0x20], 5
jne	0x14008a369
jne	0x14008a369
mov	rdx, qword ptr [rdx + 0xe8]
lea	rcx, [rsp + 0x30]
mov	r9d, edi
mov	r8, rbp
mov	rax, qword ptr [rdx]
mov	dword ptr [rsp + 0x20], 0x10
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
cmp	qword ptr [rsp + 0x30], -1
je	0x14008a3b0
je	0x14008a3b0
mov	rsi, qword ptr [rsp + 0x48]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x14008a39e
je	0x14008a39e
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14008a39e
jne	0x14008a39e
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14008a39e
je	0x14008a39e
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14008a3d0
je	0x14008a3d0
mov	rax, rbx
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
jmp	0x14008a369
jmp	0x14008a369
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x14008a39e
jmp	0x14008a39e
mov	rbx, rax
mov	rcx, rsi
call	0x14008a720
call	0x14008a720
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x50
lea	rdi, [rsp + 0x40]
mov	rsi, rcx
mov	rbx, rdx
mov	rcx, rdi
call	0x14008a620
call	0x14008a620
mov	rax, qword ptr [rbx]
mov	qword ptr [rsi], 0xffffffffffffffff
mov	dword ptr [rsi + 8], 0
add	rbx, qword ptr [rax - 0x18]
test	byte ptr [rbx + 0x20], 5
jne	0x14008a46c
jne	0x14008a46c
mov	rdx, qword ptr [rbx + 0xe8]
lea	rcx, [rsp + 0x30]
mov	r9d, 1
xor	r8d, r8d
mov	rax, qword ptr [rdx]
mov	dword ptr [rsp + 0x20], 0x10
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rsp + 0x30], rax
mov	qword ptr [rsi], rax
mov	eax, dword ptr [rsp + 0x38]
mov	dword ptr [rsi + 8], eax
mov	rbx, qword ptr [rsp + 0x48]
mov	rax, qword ptr [rbx]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rbx
test	byte ptr [rdi + 0x19], 0x20
je	0x14008a4a1
je	0x14008a4a1
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14008a4a1
jne	0x14008a4a1
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14008a4a1
je	0x14008a4a1
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14008a4b0
je	0x14008a4b0
mov	rax, rsi
add	rsp, 0x50
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x14008a4a1
jmp	0x14008a4a1
mov	rbx, rax
mov	rcx, rdi
call	0x14008a720
call	0x14008a720
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
lea	rdi, [rsp + 0x20]
mov	rbx, rcx
mov	rbp, rdx
mov	rdx, rcx
mov	rcx, rdi
mov	rsi, r8
call	0x14008a620
call	0x14008a620
cmp	byte ptr [rsp + 0x20], 0
je	0x14008a528
je	0x14008a528
mov	rax, qword ptr [rbx]
mov	r8, rsi
mov	rdx, rbp
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	rsi, rax
jne	0x14008a570
jne	0x14008a570
mov	rsi, qword ptr [rsp + 0x28]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x14008a55d
je	0x14008a55d
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14008a55d
jne	0x14008a55d
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14008a55d
je	0x14008a55d
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14008a590
je	0x14008a590
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x14008a528
jmp	0x14008a528
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x14008a55d
jmp	0x14008a55d
sub	rdx, 1
mov	rcx, rax
jne	0x14008a5e1
jne	0x14008a5e1
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, rdi
call	0x14008a720
call	0x14008a720
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008a528
jmp	0x14008a528
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008a5d1
jmp	0x14008a5d1
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008a5d1
jmp	0x14008a5d1
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	qword ptr [rcx + 8], rdx
mov	rsi, rcx
mov	rbx, rdx
mov	byte ptr [rcx], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rdx
mov	rax, qword ptr [rcx + 0xd8]
mov	edx, dword ptr [rcx + 0x20]
test	rax, rax
je	0x14008a672
je	0x14008a672
test	edx, edx
je	0x14008a660
je	0x14008a660
test	dl, 1
jne	0x14008a688
jne	0x14008a688
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rax
call	0x14008a0e0
call	0x14008a0e0
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
test	edx, edx
jne	0x14008a650
jne	0x14008a650
mov	byte ptr [rsi], 1
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
or	edx, 4
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400abe20
jmp	0x1400abe20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	qword ptr [rcx + 8], rdx
mov	rsi, rcx
mov	rbx, rdx
mov	byte ptr [rcx], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rdx
mov	rax, qword ptr [rcx + 0xd8]
mov	edx, dword ptr [rcx + 0x20]
test	rax, rax
je	0x14008a6f2
je	0x14008a6f2
test	edx, edx
je	0x14008a6e0
je	0x14008a6e0
test	dl, 1
jne	0x14008a708
jne	0x14008a708
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rax
call	0x14008a0e0
call	0x14008a0e0
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
test	edx, edx
jne	0x14008a6d0
jne	0x14008a6d0
mov	byte ptr [rsi], 1
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
or	edx, 4
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400abe20
jmp	0x1400abe20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx + 8]
mov	rdx, qword ptr [rax]
add	rax, qword ptr [rdx - 0x18]
mov	rsi, rcx
mov	rbx, rax
test	byte ptr [rax + 0x19], 0x20
je	0x14008a75d
je	0x14008a75d
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14008a75d
jne	0x14008a75d
mov	rcx, qword ptr [rbx + 0xe8]
test	rcx, rcx
je	0x14008a75d
je	0x14008a75d
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14008a768
je	0x14008a768
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, qword ptr [rsi + 8]
mov	rax, qword ptr [rcx]
add	rcx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x14008a75d
jmp	0x14008a75d
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx + 8]
mov	rdx, qword ptr [rax]
add	rax, qword ptr [rdx - 0x18]
mov	rsi, rcx
mov	rbx, rax
test	byte ptr [rax + 0x19], 0x20
je	0x14008a7bd
je	0x14008a7bd
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14008a7bd
jne	0x14008a7bd
mov	rcx, qword ptr [rbx + 0xe8]
test	rcx, rcx
je	0x14008a7bd
je	0x14008a7bd
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14008a7c8
je	0x14008a7c8
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, qword ptr [rsi + 8]
mov	rax, qword ptr [rcx]
add	rcx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x14008a7bd
jmp	0x14008a7bd
jmp	0x1400add70
jmp	0x1400add70
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x60
lea	r12, [rsp + 0x50]
mov	rbx, rcx
mov	rdi, rdx
mov	rdx, rcx
mov	rcx, r12
call	0x14008a620
call	0x14008a620
cmp	byte ptr [rsp + 0x50], 0
je	0x14008a8a5
je	0x14008a8a5
mov	rax, qword ptr [rbx]
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
mov	rbp, qword ptr [rsi + 0xf8]
test	rbp, rbp
je	0x14008a93f
je	0x14008a93f
cmp	byte ptr [rsi + 0xe2], 0
je	0x14008a8f0
je	0x14008a8f0
movzx	eax, word ptr [rsi + 0xe0]
mov	rcx, qword ptr [rsi + 0xe8]
mov	r10, qword ptr [rbp]
xor	edx, edx
movzx	eax, ax
lea	r11, [rsp + 0x40]
mov	qword ptr [rsp + 0x28], rdi
mov	r9, rsi
lea	r8, [rsp + 0x30]
test	rcx, rcx
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, r11
sete	dl
mov	dword ptr [rsp + 0x20], eax
mov	qword ptr [rsp + 0x38], rdx
mov	rdx, rbp
call	qword ptr [r10 + 0x48]
call	qword ptr [r10 + 0x48]
cmp	byte ptr [rsp + 0x48], 0
je	0x14008a8a5
je	0x14008a8a5
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400abe20
call	0x1400abe20
mov	rsi, qword ptr [rsp + 0x58]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x14008a8da
je	0x14008a8da
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14008a8da
jne	0x14008a8da
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14008a8da
je	0x14008a8da
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14008a928
je	0x14008a928
mov	rax, rbx
add	rsp, 0x60
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsi + 0xf0]
test	rcx, rcx
je	0x14008a944
je	0x14008a944
mov	rax, qword ptr [rcx]
mov	edx, 0x20
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rdx, qword ptr [rbx]
mov	word ptr [rsi + 0xe0], ax
mov	byte ptr [rsi + 0xe2], 1
mov	rsi, qword ptr [rdx - 0x18]
add	rsi, rbx
jmp	0x14008a849
jmp	0x14008a849
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x14008a8da
jmp	0x14008a8da
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14008a983
jne	0x14008a983
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, r12
call	0x14008a720
call	0x14008a720
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008a8a5
jmp	0x14008a8a5
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008a973
jmp	0x14008a973
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008a973
jmp	0x14008a973
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x60
lea	r12, [rsp + 0x50]
mov	rbx, rcx
mov	esi, edx
mov	rdx, rcx
mov	rcx, r12
call	0x14008a620
call	0x14008a620
cmp	byte ptr [rsp + 0x50], 0
je	0x14008aa77
je	0x14008aa77
mov	rax, qword ptr [rbx]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rbx
mov	rbp, qword ptr [rdi + 0xf8]
test	rbp, rbp
je	0x14008ab0f
je	0x14008ab0f
cmp	byte ptr [rdi + 0xe2], 0
je	0x14008aac0
je	0x14008aac0
movzx	eax, word ptr [rdi + 0xe0]
mov	rcx, qword ptr [rdi + 0xe8]
mov	r10, qword ptr [rbp]
xor	edx, edx
movzx	eax, ax
lea	r11, [rsp + 0x40]
movzx	esi, sil
mov	dword ptr [rsp + 0x20], eax
mov	r9, rdi
test	rcx, rcx
mov	qword ptr [rsp + 0x30], rcx
lea	r8, [rsp + 0x30]
mov	rcx, r11
sete	dl
mov	dword ptr [rsp + 0x28], esi
mov	qword ptr [rsp + 0x38], rdx
mov	rdx, rbp
call	qword ptr [r10 + 0x10]
call	qword ptr [r10 + 0x10]
cmp	byte ptr [rsp + 0x48], 0
je	0x14008aa77
je	0x14008aa77
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400abe20
call	0x1400abe20
mov	rsi, qword ptr [rsp + 0x58]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x14008aaac
je	0x14008aaac
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14008aaac
jne	0x14008aaac
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14008aaac
je	0x14008aaac
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14008aaf8
je	0x14008aaf8
mov	rax, rbx
add	rsp, 0x60
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rdi + 0xf0]
test	rcx, rcx
je	0x14008ab14
je	0x14008ab14
mov	rax, qword ptr [rcx]
mov	edx, 0x20
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rdx, qword ptr [rbx]
mov	word ptr [rdi + 0xe0], ax
mov	byte ptr [rdi + 0xe2], 1
mov	rdi, qword ptr [rdx - 0x18]
add	rdi, rbx
jmp	0x14008aa18
jmp	0x14008aa18
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x14008aaac
jmp	0x14008aaac
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14008ab53
jne	0x14008ab53
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, r12
call	0x14008a720
call	0x14008a720
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008aa77
jmp	0x14008aa77
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008ab43
jmp	0x14008ab43
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008ab43
jmp	0x14008ab43
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x78
movups	xmmword ptr [rsp + 0x60], xmm6
lea	rbp, [rsp + 0x50]
mov	rdx, rcx
movupd	xmm6, xmm1
mov	rbx, rcx
mov	rcx, rbp
call	0x14008a620
call	0x14008a620
cmp	byte ptr [rsp + 0x50], 0
je	0x14008ac49
je	0x14008ac49
mov	rax, qword ptr [rbx]
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
mov	rdi, qword ptr [rsi + 0xf8]
test	rdi, rdi
je	0x14008acdf
je	0x14008acdf
cmp	byte ptr [rsi + 0xe2], 0
je	0x14008ac90
je	0x14008ac90
movzx	eax, word ptr [rsi + 0xe0]
mov	rcx, qword ptr [rsi + 0xe8]
mov	r10, qword ptr [rdi]
xor	edx, edx
movzx	eax, ax
lea	r11, [rsp + 0x40]
mov	dword ptr [rsp + 0x20], eax
mov	r9, rsi
lea	r8, [rsp + 0x30]
test	rcx, rcx
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, r11
sete	dl
movsd	qword ptr [rsp + 0x28], xmm6
mov	qword ptr [rsp + 0x38], rdx
mov	rdx, rdi
call	qword ptr [r10 + 0x38]
call	qword ptr [r10 + 0x38]
cmp	byte ptr [rsp + 0x48], 0
je	0x14008ac49
je	0x14008ac49
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400abe20
call	0x1400abe20
mov	rsi, qword ptr [rsp + 0x58]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x14008ac7e
je	0x14008ac7e
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14008ac7e
jne	0x14008ac7e
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14008ac7e
je	0x14008ac7e
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14008acc8
je	0x14008acc8
movups	xmm6, xmmword ptr [rsp + 0x60]
mov	rax, rbx
add	rsp, 0x78
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
mov	rcx, qword ptr [rsi + 0xf0]
test	rcx, rcx
je	0x14008ace4
je	0x14008ace4
mov	rax, qword ptr [rcx]
mov	edx, 0x20
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rdx, qword ptr [rbx]
mov	word ptr [rsi + 0xe0], ax
mov	byte ptr [rsi + 0xe2], 1
mov	rsi, qword ptr [rdx - 0x18]
add	rsi, rbx
jmp	0x14008abed
jmp	0x14008abed
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x14008ac7e
jmp	0x14008ac7e
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14008ad23
jne	0x14008ad23
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, rbp
call	0x14008a720
call	0x14008a720
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008ac49
jmp	0x14008ac49
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008ad13
jmp	0x14008ad13
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008ad13
jmp	0x14008ad13
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x88
fld	xword ptr [rdx]
lea	rbp, [rsp + 0x70]
mov	rdx, rcx
mov	rbx, rcx
fstp	xword ptr [rsp + 0x30]
mov	rcx, rbp
call	0x14008a620
call	0x14008a620
cmp	byte ptr [rsp + 0x70], 0
je	0x14008ae25
je	0x14008ae25
mov	rax, qword ptr [rbx]
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
mov	rdi, qword ptr [rsi + 0xf8]
test	rdi, rdi
je	0x14008aebf
je	0x14008aebf
cmp	byte ptr [rsi + 0xe2], 0
je	0x14008ae70
je	0x14008ae70
movzx	eax, word ptr [rsi + 0xe0]
mov	rcx, qword ptr [rsi + 0xe8]
xor	edx, edx
mov	r10, qword ptr [rdi]
movzx	eax, ax
fld	xword ptr [rsp + 0x30]
lea	r11, [rsp + 0x60]
mov	dword ptr [rsp + 0x20], eax
mov	r9, rsi
test	rcx, rcx
mov	qword ptr [rsp + 0x50], rcx
lea	r8, [rsp + 0x50]
mov	rcx, r11
sete	dl
mov	qword ptr [rsp + 0x58], rdx
lea	rdx, [rsp + 0x40]
mov	qword ptr [rsp + 0x28], rdx
mov	rdx, rdi
fstp	xword ptr [rsp + 0x40]
call	qword ptr [r10 + 0x40]
call	qword ptr [r10 + 0x40]
cmp	byte ptr [rsp + 0x68], 0
je	0x14008ae25
je	0x14008ae25
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400abe20
call	0x1400abe20
mov	rsi, qword ptr [rsp + 0x78]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x14008ae5a
je	0x14008ae5a
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14008ae5a
jne	0x14008ae5a
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14008ae5a
je	0x14008ae5a
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14008aea8
je	0x14008aea8
mov	rax, rbx
add	rsp, 0x88
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	rcx, qword ptr [rsi + 0xf0]
test	rcx, rcx
je	0x14008aec4
je	0x14008aec4
mov	rax, qword ptr [rcx]
mov	edx, 0x20
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rdx, qword ptr [rbx]
mov	word ptr [rsi + 0xe0], ax
mov	byte ptr [rsi + 0xe2], 1
mov	rsi, qword ptr [rdx - 0x18]
add	rsi, rbx
jmp	0x14008adbd
jmp	0x14008adbd
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x14008ae5a
jmp	0x14008ae5a
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14008af03
jne	0x14008af03
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, rbp
call	0x14008a720
call	0x14008a720
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008ae25
jmp	0x14008ae25
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008aef3
jmp	0x14008aef3
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008aef3
jmp	0x14008aef3
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x60
lea	r12, [rsp + 0x50]
mov	rbx, rcx
mov	edi, edx
mov	rdx, rcx
mov	rcx, r12
call	0x14008a620
call	0x14008a620
cmp	byte ptr [rsp + 0x50], 0
je	0x14008aff3
je	0x14008aff3
mov	rax, qword ptr [rbx]
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
mov	rbp, qword ptr [rsi + 0xf8]
test	rbp, rbp
je	0x14008b08f
je	0x14008b08f
cmp	byte ptr [rsi + 0xe2], 0
je	0x14008b040
je	0x14008b040
movzx	eax, word ptr [rsi + 0xe0]
mov	rcx, qword ptr [rsi + 0xe8]
mov	r10, qword ptr [rbp]
xor	edx, edx
movzx	eax, ax
lea	r11, [rsp + 0x40]
mov	dword ptr [rsp + 0x28], edi
mov	r9, rsi
lea	r8, [rsp + 0x30]
test	rcx, rcx
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, r11
sete	dl
mov	dword ptr [rsp + 0x20], eax
mov	qword ptr [rsp + 0x38], rdx
mov	rdx, rbp
call	qword ptr [r10 + 0x18]
call	qword ptr [r10 + 0x18]
cmp	byte ptr [rsp + 0x48], 0
je	0x14008aff3
je	0x14008aff3
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400abe20
call	0x1400abe20
mov	rsi, qword ptr [rsp + 0x58]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x14008b028
je	0x14008b028
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14008b028
jne	0x14008b028
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14008b028
je	0x14008b028
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14008b078
je	0x14008b078
mov	rax, rbx
add	rsp, 0x60
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, qword ptr [rsi + 0xf0]
test	rcx, rcx
je	0x14008b094
je	0x14008b094
mov	rax, qword ptr [rcx]
mov	edx, 0x20
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rdx, qword ptr [rbx]
mov	word ptr [rsi + 0xe0], ax
mov	byte ptr [rsi + 0xe2], 1
mov	rsi, qword ptr [rdx - 0x18]
add	rsi, rbx
jmp	0x14008af98
jmp	0x14008af98
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x14008b028
jmp	0x14008b028
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14008b0d3
jne	0x14008b0d3
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, r12
call	0x14008a720
call	0x14008a720
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008aff3
jmp	0x14008aff3
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008b0c3
jmp	0x14008b0c3
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008b0c3
jmp	0x14008b0c3
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x60
lea	r12, [rsp + 0x50]
mov	rbx, rcx
mov	edi, edx
mov	rdx, rcx
mov	rcx, r12
call	0x14008a620
call	0x14008a620
cmp	byte ptr [rsp + 0x50], 0
je	0x14008b1c3
je	0x14008b1c3
mov	rax, qword ptr [rbx]
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
mov	rbp, qword ptr [rsi + 0xf8]
test	rbp, rbp
je	0x14008b25f
je	0x14008b25f
cmp	byte ptr [rsi + 0xe2], 0
je	0x14008b210
je	0x14008b210
movzx	eax, word ptr [rsi + 0xe0]
mov	rcx, qword ptr [rsi + 0xe8]
mov	r10, qword ptr [rbp]
xor	edx, edx
movzx	eax, ax
lea	r11, [rsp + 0x40]
mov	dword ptr [rsp + 0x28], edi
mov	r9, rsi
lea	r8, [rsp + 0x30]
test	rcx, rcx
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, r11
sete	dl
mov	dword ptr [rsp + 0x20], eax
mov	qword ptr [rsp + 0x38], rdx
mov	rdx, rbp
call	qword ptr [r10 + 0x20]
call	qword ptr [r10 + 0x20]
cmp	byte ptr [rsp + 0x48], 0
je	0x14008b1c3
je	0x14008b1c3
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400abe20
call	0x1400abe20
mov	rsi, qword ptr [rsp + 0x58]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x14008b1f8
je	0x14008b1f8
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14008b1f8
jne	0x14008b1f8
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14008b1f8
je	0x14008b1f8
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14008b248
je	0x14008b248
mov	rax, rbx
add	rsp, 0x60
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, qword ptr [rsi + 0xf0]
test	rcx, rcx
je	0x14008b264
je	0x14008b264
mov	rax, qword ptr [rcx]
mov	edx, 0x20
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rdx, qword ptr [rbx]
mov	word ptr [rsi + 0xe0], ax
mov	byte ptr [rsi + 0xe2], 1
mov	rsi, qword ptr [rdx - 0x18]
add	rsi, rbx
jmp	0x14008b168
jmp	0x14008b168
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x14008b1f8
jmp	0x14008b1f8
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14008b2a3
jne	0x14008b2a3
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, r12
call	0x14008a720
call	0x14008a720
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008b1c3
jmp	0x14008b1c3
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008b293
jmp	0x14008b293
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008b293
jmp	0x14008b293
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x60
lea	r12, [rsp + 0x50]
mov	rbx, rcx
mov	rdi, rdx
mov	rdx, rcx
mov	rcx, r12
call	0x14008a620
call	0x14008a620
cmp	byte ptr [rsp + 0x50], 0
je	0x14008b395
je	0x14008b395
mov	rax, qword ptr [rbx]
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
mov	rbp, qword ptr [rsi + 0xf8]
test	rbp, rbp
je	0x14008b42f
je	0x14008b42f
cmp	byte ptr [rsi + 0xe2], 0
je	0x14008b3e0
je	0x14008b3e0
movzx	eax, word ptr [rsi + 0xe0]
mov	rcx, qword ptr [rsi + 0xe8]
mov	r10, qword ptr [rbp]
xor	edx, edx
movzx	eax, ax
lea	r11, [rsp + 0x40]
mov	qword ptr [rsp + 0x28], rdi
mov	r9, rsi
lea	r8, [rsp + 0x30]
test	rcx, rcx
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, r11
sete	dl
mov	dword ptr [rsp + 0x20], eax
mov	qword ptr [rsp + 0x38], rdx
mov	rdx, rbp
call	qword ptr [r10 + 0x28]
call	qword ptr [r10 + 0x28]
cmp	byte ptr [rsp + 0x48], 0
je	0x14008b395
je	0x14008b395
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400abe20
call	0x1400abe20
mov	rsi, qword ptr [rsp + 0x58]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x14008b3ca
je	0x14008b3ca
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14008b3ca
jne	0x14008b3ca
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14008b3ca
je	0x14008b3ca
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14008b418
je	0x14008b418
mov	rax, rbx
add	rsp, 0x60
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsi + 0xf0]
test	rcx, rcx
je	0x14008b434
je	0x14008b434
mov	rax, qword ptr [rcx]
mov	edx, 0x20
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rdx, qword ptr [rbx]
mov	word ptr [rsi + 0xe0], ax
mov	byte ptr [rsi + 0xe2], 1
mov	rsi, qword ptr [rdx - 0x18]
add	rsi, rbx
jmp	0x14008b339
jmp	0x14008b339
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x14008b3ca
jmp	0x14008b3ca
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14008b473
jne	0x14008b473
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, r12
call	0x14008a720
call	0x14008a720
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008b395
jmp	0x14008b395
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008b463
jmp	0x14008b463
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008b463
jmp	0x14008b463
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x60
lea	r12, [rsp + 0x50]
mov	rbx, rcx
mov	rdi, rdx
mov	rdx, rcx
mov	rcx, r12
call	0x14008a620
call	0x14008a620
cmp	byte ptr [rsp + 0x50], 0
je	0x14008b565
je	0x14008b565
mov	rax, qword ptr [rbx]
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
mov	rbp, qword ptr [rsi + 0xf8]
test	rbp, rbp
je	0x14008b5ff
je	0x14008b5ff
cmp	byte ptr [rsi + 0xe2], 0
je	0x14008b5b0
je	0x14008b5b0
movzx	eax, word ptr [rsi + 0xe0]
mov	rcx, qword ptr [rsi + 0xe8]
mov	r10, qword ptr [rbp]
xor	edx, edx
movzx	eax, ax
lea	r11, [rsp + 0x40]
mov	qword ptr [rsp + 0x28], rdi
mov	r9, rsi
lea	r8, [rsp + 0x30]
test	rcx, rcx
mov	qword ptr [rsp + 0x30], rcx
mov	rcx, r11
sete	dl
mov	dword ptr [rsp + 0x20], eax
mov	qword ptr [rsp + 0x38], rdx
mov	rdx, rbp
call	qword ptr [r10 + 0x30]
call	qword ptr [r10 + 0x30]
cmp	byte ptr [rsp + 0x48], 0
je	0x14008b565
je	0x14008b565
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400abe20
call	0x1400abe20
mov	rsi, qword ptr [rsp + 0x58]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x14008b59a
je	0x14008b59a
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14008b59a
jne	0x14008b59a
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14008b59a
je	0x14008b59a
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14008b5e8
je	0x14008b5e8
mov	rax, rbx
add	rsp, 0x60
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsi + 0xf0]
test	rcx, rcx
je	0x14008b604
je	0x14008b604
mov	rax, qword ptr [rcx]
mov	edx, 0x20
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rdx, qword ptr [rbx]
mov	word ptr [rsi + 0xe0], ax
mov	byte ptr [rsi + 0xe2], 1
mov	rsi, qword ptr [rdx - 0x18]
add	rsi, rbx
jmp	0x14008b509
jmp	0x14008b509
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x14008b59a
jmp	0x14008b59a
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x14008b643
jne	0x14008b643
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
mov	rcx, r12
call	0x14008a720
call	0x14008a720
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008b565
jmp	0x14008b565
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008b633
jmp	0x14008b633
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008b633
jmp	0x14008b633
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rdi, [rcx + 8]
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rdi
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
mov	qword ptr [rbx + 0xe0], 0
mov	word ptr [rbx + 0xe8], ax
lea	rax, [rip + 0x3b398]
movups	xmmword ptr [rbx + 0xf0], xmm0
lea	rcx, [rax - 0x28]
movq	xmm1, rax
movups	xmmword ptr [rbx + 0x100], xmm0
mov	rax, qword ptr [rsi]
movq	xmm0, rcx
mov	rcx, rdi
mov	byte ptr [rbx + 0xea], 0
punpcklqdq	xmm0, xmm1
add	rsi, qword ptr [rax - 0x18]
movups	xmmword ptr [rbx], xmm0
mov	rdx, rsi
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0xd8]
mov	rcx, rdi
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rsi + 0xd8]
mov	qword ptr [rbx + 0xf0], 0
mov	qword ptr [rsi + 0xd8], 0
mov	qword ptr [rbx + 0xe0], rax
movzx	eax, word ptr [rsi + 0xe0]
mov	word ptr [rbx + 0xe8], ax
movzx	eax, byte ptr [rsi + 0xe2]
mov	byte ptr [rbx + 0xea], al
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rax, qword ptr [rip + 0x33a1c]
mov	rcx, rdi
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rdi, [rcx + 8]
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rdi
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
mov	rcx, rdi
mov	word ptr [rbx + 0xe8], ax
lea	rax, [rip + 0x3b2b0]
lea	rdx, [rax - 0x28]
movups	xmmword ptr [rbx + 0xf0], xmm0
movq	xmm1, rax
movups	xmmword ptr [rbx + 0x100], xmm0
movq	xmm0, rdx
mov	rdx, rsi
mov	qword ptr [rbx + 0xe0], 0
punpcklqdq	xmm0, xmm1
mov	byte ptr [rbx + 0xea], 0
movups	xmmword ptr [rbx], xmm0
call	0x1400abc50
call	0x1400abc50
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rax, qword ptr [rip + 0x33980]
mov	rcx, rdi
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rcx + 8]
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
mov	qword ptr [rbx + 0xe0], 0
mov	word ptr [rbx + 0xe8], ax
lea	rax, [rip + 0x3b210]
lea	rdx, [rax - 0x28]
movups	xmmword ptr [rbx + 0xf0], xmm0
movq	xmm1, rax
movups	xmmword ptr [rbx + 0x100], xmm0
movq	xmm0, rdx
punpcklqdq	xmm0, xmm1
mov	byte ptr [rbx + 0xea], 0
movups	xmmword ptr [rbx], xmm0
add	rsp, 0x20
pop	rbx
ret	
ret	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rsi, [rcx + 8]
mov	rbx, rcx
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
xor	edx, edx
mov	word ptr [rbx + 0xe8], ax
mov	rcx, rsi
lea	rax, [rip + 0x3b1b1]
lea	rdi, [rax - 0x28]
movups	xmmword ptr [rbx + 0xf0], xmm0
movq	xmm1, rax
movups	xmmword ptr [rbx + 0x100], xmm0
movq	xmm0, rdi
mov	qword ptr [rbx + 0xe0], 0
punpcklqdq	xmm0, xmm1
mov	byte ptr [rbx + 0xea], 0
movups	xmmword ptr [rbx], xmm0
call	0x1400abc50
call	0x1400abc50
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rdi, rax
mov	rax, qword ptr [rip + 0x33884]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rdi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	qword ptr [rcx], rax
add	rbx, qword ptr [rax - 0x18]
mov	rsi, r8
mov	rax, qword ptr [rdx + 8]
mov	rcx, rbx
mov	qword ptr [rbx], rax
mov	rax, qword ptr [r8]
add	rsi, qword ptr [rax - 0x18]
mov	rdx, rsi
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rsi + 0xd8]
mov	qword ptr [rbx + 0xe8], 0
mov	qword ptr [rsi + 0xd8], 0
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, word ptr [rsi + 0xe0]
mov	word ptr [rbx + 0xe0], ax
movzx	eax, byte ptr [rsi + 0xe2]
mov	byte ptr [rbx + 0xe2], al
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rdx
mov	rdx, r8
mov	r8, qword ptr [rax]
mov	rax, qword ptr [rax + 8]
mov	qword ptr [rcx], r8
add	rcx, qword ptr [r8 - 0x18]
mov	qword ptr [rcx], rax
jmp	0x1400abc50
jmp	0x1400abc50
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	rdx, qword ptr [rdx + 8]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rcx + rax], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	qword ptr [rcx], rax
add	rcx, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx + 8]
xor	edx, edx
mov	qword ptr [rcx], rax
jmp	0x1400abc50
jmp	0x1400abc50
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0x33764]
lea	rdx, [rip + 0x3b015]
movq	xmm0, rdx
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx], xmm0
mov	rbx, rcx
lea	rcx, [rcx + 8]
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x33719]
lea	rdx, [rip + 0x3afca]
movq	xmm0, rdx
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx], xmm0
add	rcx, 8
jmp	0x1400aa330
jmp	0x1400aa330
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rdx, qword ptr [rdx + 8]
mov	qword ptr [rcx + rax], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rsi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
add	rsi, rcx
mov	rbx, rdx
add	rbx, qword ptr [rax - 0x18]
mov	rdi, rcx
mov	rdx, rbx
mov	rcx, rsi
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400abb50
call	0x1400abb50
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rsi + 0xd8]
mov	rdx, qword ptr [rbx + 0xd8]
mov	qword ptr [rsi + 0xd8], rdx
movzx	edx, word ptr [rbx + 0xe0]
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, word ptr [rsi + 0xe0]
mov	word ptr [rsi + 0xe0], dx
movzx	edx, byte ptr [rbx + 0xe2]
mov	word ptr [rbx + 0xe0], ax
movzx	eax, byte ptr [rsi + 0xe2]
mov	byte ptr [rsi + 0xe2], dl
mov	byte ptr [rbx + 0xe2], al
mov	rax, rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	rdx
jmp	rdx
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rbx, rcx
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	rdx
call	rdx
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rbx, rcx
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	rdx
call	rdx
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
jmp	0x14008a7f0
jmp	0x14008a7f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
lea	rdi, [rsp + 0x30]
mov	rbx, rcx
mov	rsi, rdx
mov	rdx, rcx
mov	rcx, rdi
call	0x14008a620
call	0x14008a620
cmp	byte ptr [rsp + 0x30], 0
je	0x14008bc40
je	0x14008bc40
mov	rax, qword ptr [rbx]
mov	rdx, qword ptr [rax - 0x18]
test	rsi, rsi
je	0x14008bc50
je	0x14008bc50
mov	rdx, qword ptr [rbx + rdx + 0xe8]
lea	r8, [rsp + 0x2f]
mov	rcx, rsi
call	0x1400ae9f0
call	0x1400ae9f0
test	rax, rax
je	0x14008bc70
je	0x14008bc70
nop	word ptr [rax + rax]
mov	rsi, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x14008bc35
je	0x14008bc35
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x14008bc35
jne	0x14008bc35
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x14008bc35
je	0x14008bc35
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x14008bc80
je	0x14008bc80
mov	rax, rbx
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
test	rsi, rsi
jne	0x14008bc00
jne	0x14008bc00
mov	rax, qword ptr [rbx]
mov	edx, 1
jmp	0x14008bc55
jmp	0x14008bc55
nop	
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
or	edx, dword ptr [rcx + 0x20]
call	0x1400abe20
call	0x1400abe20
jmp	0x14008bc00
jmp	0x14008bc00
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rbx]
mov	edx, 4
jmp	0x14008bc55
jmp	0x14008bc55
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x14008bc35
jmp	0x14008bc35
mov	rbx, rax
mov	rcx, rdi
call	0x14008a720
call	0x14008a720
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
sub	rdx, 1
mov	rcx, rax
jne	0x14008bcd1
jne	0x14008bcd1
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 4
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008bc00
jmp	0x14008bc00
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008bc9a
jmp	0x14008bc9a
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008bc9a
jmp	0x14008bc9a
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movzx	edx, dl
jmp	0x14008a9c0
jmp	0x14008a9c0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14008ab90
jmp	0x14008ab90
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
fld	xword ptr [rdx]
fstp	xword ptr [rsp + 0x20]
lea	rdx, [rsp + 0x20]
call	0x14008ad60
call	0x14008ad60
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
cvtss2sd	xmm1, xmm1
jmp	0x14008ab90
jmp	0x14008ab90
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14008af40
jmp	0x14008af40
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14008b110
jmp	0x14008b110
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14008af40
jmp	0x14008af40
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14008b110
jmp	0x14008b110
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
mov	eax, dword ptr [rcx + rax + 0x18]
and	eax, 0x4a
cmp	eax, 0x40
je	0x14008bdc0
je	0x14008bdc0
cmp	eax, 8
je	0x14008bdc0
je	0x14008bdc0
movsx	edx, dx
jmp	0x14008af40
jmp	0x14008af40
movzx	edx, dx
jmp	0x14008af40
jmp	0x14008af40
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movzx	edx, dx
jmp	0x14008b110
jmp	0x14008b110
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14008b2e0
jmp	0x14008b2e0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14008b4b0
jmp	0x14008b4b0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
cmp	qword ptr [rdx + 8], 7
mov	rax, qword ptr [rdx]
mov	rbx, rcx
je	0x14008be80
je	0x14008be80
movzx	eax, byte ptr [rax]
sub	eax, 0x30
cmp	eax, 9
ja	0x14008be68
ja	0x14008be68
lea	rsi, [rsp + 0x20]
lea	r8, [rip + 0x2e4b3]
lea	rdx, [r8 - 7]
mov	rcx, rsi
lea	rdi, [rsp + 0x30]
mov	qword ptr [rsp + 0x20], rdi
call	0x14009d5d0
call	0x14009d5d0
mov	rdx, rsi
mov	rcx, rbx
call	0x14008bf60
call	0x14008bf60
mov	rcx, qword ptr [rsp + 0x20]
cmp	rcx, rdi
je	0x14008be5c
je	0x14008be5c
call	0x1400b2be0
call	0x1400b2be0
nop	
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
jmp	0x14008bf60
jmp	0x14008bf60
nop	word ptr [rax + rax]
cmp	dword ptr [rax], 0x3931746d
jne	0x14008be14
jne	0x14008be14
cmp	dword ptr [rax + 3], 0x37333939
jne	0x14008be14
jne	0x14008be14
jmp	0x14008be1f
jmp	0x14008be1f
mov	rbx, rax
mov	rcx, rsi
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	r8, qword ptr [rdx - 0x18]
jmp	0x14008bee0
jmp	0x14008bee0
nop	
nop	
nop	
nop	
jmp	0x14008c160
jmp	0x14008c160
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
lea	rsi, [rsp + 0x30]
mov	rbx, rcx
mov	qword ptr [rsp + 0x20], rsi
test	rdx, rdx
jne	0x14008befe
jne	0x14008befe
test	r8, r8
jne	0x14008bf31
jne	0x14008bf31
lea	rdi, [rsp + 0x20]
add	r8, rdx
mov	rcx, rdi
call	0x14009d5d0
call	0x14009d5d0
mov	rdx, rdi
mov	rcx, rbx
call	0x14008bf60
call	0x14008bf60
mov	rcx, qword ptr [rsp + 0x20]
cmp	rcx, rsi
je	0x14008bf29
je	0x14008bf29
call	0x1400b2be0
call	0x1400b2be0
nop	
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x2e460]
call	0x1400b3ab0
call	0x1400b3ab0
mov	rbx, rax
mov	rcx, rdi
call	0x14009cf50
call	0x14009cf50
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	qword ptr [rcx], 0
mov	r8, rcx
mov	qword ptr [rcx + 8], 0
mov	dword ptr [rcx + 0x10], 0xffffffff
mov	rax, qword ptr [rdx + 8]
cmp	rax, 7
je	0x14008bfd0
je	0x14008bfd0
cmp	rax, 6
jne	0x14008bff0
jne	0x14008bff0
mov	rax, qword ptr [rdx]
cmp	dword ptr [rax], 0x65736472
je	0x14008c090
je	0x14008c090
cmp	dword ptr [rax], 0x61726472
je	0x14008c120
je	0x14008c120
cmp	dword ptr [rax], 0x646e6172
jne	0x14008bfdb
jne	0x14008bfdb
cmp	word ptr [rax + 4], 0x735f
jne	0x14008bfdb
jne	0x14008bfdb
nop	dword ptr [rax]
lea	rax, [rip - 0x14737]
jmp	0x14008c082
jmp	0x14008c082
nop	dword ptr [rax]
mov	rax, qword ptr [rdx]
cmp	dword ptr [rax], 0x61666564
je	0x14008c010
je	0x14008c010
lea	rcx, [rip + 0x2e31e]
call	0x1400b3c40
call	0x1400b3c40
nop	word ptr [rax + rax]
cmp	rax, 5
jne	0x14008c020
jne	0x14008c020
mov	rax, qword ptr [rdx]
cmp	dword ptr [rax], 0x6e726472
jne	0x14008bfdb
jne	0x14008bfdb
cmp	byte ptr [rax + 4], 0x64
jne	0x14008bfdb
jne	0x14008bfdb
jmp	0x14008c054
jmp	0x14008c054
nop	dword ptr [rax]
cmp	dword ptr [rax + 3], 0x746c7561
jne	0x14008bfdb
jne	0x14008bfdb
jmp	0x14008bfc0
jmp	0x14008bfc0
nop	dword ptr [rax + rax]
cmp	rax, 2
jne	0x14008c0b0
jne	0x14008c0b0
mov	rax, qword ptr [rdx]
cmp	word ptr [rax], 0x7768
jne	0x14008bfdb
jne	0x14008bfdb
xor	eax, eax
cpuid	
test	eax, eax
je	0x14008c054
je	0x14008c054
cmp	ebx, 0x68747541
je	0x14008c131
je	0x14008c131
cmp	ebx, 0x756e6547
je	0x14008c131
je	0x14008c131
xor	eax, eax
cpuid	
test	eax, eax
je	0x14008c0a4
je	0x14008c0a4
cmp	ebx, 0x756e6547
je	0x14008c06c
je	0x14008c06c
cmp	ebx, 0x68747541
jne	0x14008c0a4
jne	0x14008c0a4
mov	eax, 1
cpuid	
and	ecx, 0x40000000
je	0x14008c0a4
je	0x14008c0a4
lea	rax, [rip - 0x14902]
mov	qword ptr [r8 + 8], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
cmp	word ptr [rax + 4], 0x6465
jne	0x14008bf9d
jne	0x14008bf9d
xor	eax, eax
cpuid	
test	eax, eax
jne	0x14008c0d5
jne	0x14008c0d5
lea	rcx, [rip + 0x2e29d]
call	0x1400b3c40
call	0x1400b3c40
cmp	rax, 8
jne	0x14008bfdb
jne	0x14008bfdb
movabs	rax, 0x6572617764726168
mov	rdx, qword ptr [rdx]
cmp	qword ptr [rdx], rax
je	0x14008c034
je	0x14008c034
jmp	0x14008bfdb
jmp	0x14008bfdb
cmp	ebx, 0x68747541
je	0x14008c0e5
je	0x14008c0e5
cmp	ebx, 0x756e6547
jne	0x14008c0a4
jne	0x14008c0a4
mov	eax, 7
xor	ecx, ecx
cpuid	
and	ebx, 0x40000
je	0x14008c0a4
je	0x14008c0a4
mov	eax, 1
cpuid	
lea	rax, [rip - 0x14704]
and	ecx, 0x40000000
lea	rdx, [rip - 0x14941]
cmove	rax, rdx
jmp	0x14008c082
jmp	0x14008c082
nop	word ptr [rax + rax]
cmp	word ptr [rax + 4], 0x646e
jne	0x14008bfa9
jne	0x14008bfa9
jmp	0x14008c054
jmp	0x14008c054
mov	eax, 7
xor	ecx, ecx
cpuid	
and	ebx, 0x40000
jne	0x14008c0f6
jne	0x14008c0f6
jmp	0x14008c054
jmp	0x14008c054
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	r8, qword ptr [rdx - 0x18]
jmp	0x14008bee0
jmp	0x14008bee0
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rcx + 8]
mov	rdi, rcx
test	rax, rax
je	0x14008c188
je	0x14008c188
mov	rcx, qword ptr [rcx]
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	rax
jmp	rax
nop	word ptr [rax + rax]
mov	rbp, qword ptr [rip + 0x5a399]
mov	ebx, 4
lea	rsi, [rsp + 0x2c]
nop	dword ptr [rax]
mov	ecx, dword ptr [rdi + 0x10]
mov	r8d, ebx
mov	rdx, rsi
call	0x140015a78
call	0x140015a78
test	eax, eax
jle	0x14008c1d0
jle	0x14008c1d0
cdqe	
add	rsi, rax
sub	rbx, rax
jne	0x14008c1a0
jne	0x14008c1a0
mov	eax, dword ptr [rsp + 0x2c]
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
cmp	eax, -1
jne	0x14008c1dc
jne	0x14008c1dc
call	rbp
call	rbp
cmp	dword ptr [rax], 4
je	0x14008c1a0
je	0x14008c1a0
lea	rcx, [rip + 0x2e1ed]
call	0x1400b3c40
call	0x1400b3c40
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x32cd9]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx + 8]
mov	rdx, qword ptr [rip + 0x32427]
mov	qword ptr [rcx + 8], rax
mov	r8d, dword ptr [rdx]
test	r8d, r8d
jne	0x14008c228
jne	0x14008c228
mov	edx, dword ptr [rax - 8]
test	edx, edx
jle	0x14008c233
jle	0x14008c233
add	edx, 1
mov	dword ptr [rax - 8], edx
ret	
ret	
nop	dword ptr [rax + rax]
mov	eax, dword ptr [rax - 8]
test	eax, eax
jg	0x14008c240
jg	0x14008c240
mov	rax, qword ptr [rcx + 8]
mov	dword ptr [rax - 8], 1
ret	
ret	
nop	dword ptr [rax + rax]
mov	edx, dword ptr [rdx]
mov	rax, qword ptr [rcx + 8]
test	edx, edx
je	0x14008c250
je	0x14008c250
lock add	dword ptr [rax - 8], 1
ret	
ret	
mov	edx, dword ptr [rax - 8]
jmp	0x14008c21c
jmp	0x14008c21c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rip + 0x32c63]
add	rax, 0x10
mov	rbx, rdx
mov	qword ptr [rcx], rax
mov	rsi, rcx
mov	rdx, 0xffffffffffffffff
test	rbx, rbx
je	0x14008c292
je	0x14008c292
mov	rcx, rbx
call	0x140015a08
call	0x140015a08
lea	rdx, [rbx + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rbx
call	0x140072090
call	0x140072090
mov	qword ptr [rsi + 8], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	rbx, rax
mov	rcx, rsi
call	0x1400ac440
call	0x1400ac440
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x32c03]
add	rax, 0x10
mov	r8, qword ptr [rdx + 8]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
mov	rbx, rcx
lea	rcx, [rcx + 8]
mov	rdx, rax
call	0x140078a90
call	0x140078a90
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rip + 0x32bb4]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx + 8]
mov	rbx, rcx
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
lea	r8, [rax - 8]
test	edx, edx
js	0x14008c358
js	0x14008c358
mov	rdx, qword ptr [rip + 0x322f0]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x14008c370
jne	0x14008c370
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx + 8], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
mov	qword ptr [rbx + 8], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
lock add	dword ptr [r8], 1
mov	qword ptr [rbx + 8], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
lea	rax, [rip + 0x3a6e3]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
lea	r8, [rax - 8]
test	edx, edx
js	0x14008c3c8
js	0x14008c3c8
mov	rdx, qword ptr [rip + 0x32284]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x14008c3e0
jne	0x14008c3e0
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx + 8], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
mov	qword ptr [rbx + 8], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
lock add	dword ptr [r8], 1
mov	qword ptr [rbx + 8], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x14008c430
call	0x14008c430
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
lea	rax, [rip + 0x3a634]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x321ea]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 8]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14008c470
jne	0x14008c470
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14008c47e
jle	0x14008c47e
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14008c460
jg	0x14008c460
sub	rcx, 0x18
lea	rdx, [rsp + 0x2f]
call	0x140072480
call	0x140072480
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
add	rdx, 8
lea	rcx, [rcx + 8]
call	0x140072780
call	0x140072780
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
add	rdx, 8
lea	rcx, [rcx + 8]
call	0x140072f30
call	0x140072f30
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
or	r8d, 8
lea	rcx, [rcx + 0x10]
call	0x14007fde0
call	0x14007fde0
test	rax, rax
mov	rax, qword ptr [rbx]
je	0x14008c510
je	0x14008c510
add	rbx, qword ptr [rax - 0x18]
xor	edx, edx
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
or	r8d, 8
lea	rcx, [rcx + 0x10]
call	0x14007fef0
call	0x14007fef0
test	rax, rax
mov	rax, qword ptr [rbx]
je	0x14008c560
je	0x14008c560
add	rbx, qword ptr [rax - 0x18]
xor	edx, edx
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rdx, qword ptr [rdx]
mov	rbx, rcx
or	r8d, 8
lea	rcx, [rcx + 0x10]
call	0x14007fde0
call	0x14007fde0
test	rax, rax
mov	rax, qword ptr [rbx]
je	0x14008c5b8
je	0x14008c5b8
add	rbx, qword ptr [rax - 0x18]
xor	edx, edx
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
nop	dword ptr [rax + rax]
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rbp, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rdi, qword ptr [rax - 0x18]
add	rbp, rcx
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rbp
add	rdi, rdx
mov	rdx, rdi
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rbp + 0xd0]
mov	rcx, rbp
call	0x1400ab190
call	0x1400ab190
lea	rdx, [rdi + 0xd0]
mov	rcx, rdi
call	0x1400ab190
call	0x1400ab190
mov	rdx, qword ptr [rdi + 0xd8]
mov	rax, qword ptr [rbp + 0xd8]
lea	rcx, [rbx + 0x10]
mov	qword ptr [rbp + 0xd8], rdx
movzx	edx, byte ptr [rdi + 0xe0]
mov	qword ptr [rdi + 0xd8], rax
movzx	eax, byte ptr [rbp + 0xe0]
mov	byte ptr [rbp + 0xe0], dl
movzx	edx, byte ptr [rdi + 0xe1]
mov	byte ptr [rdi + 0xe0], al
movzx	eax, byte ptr [rbp + 0xe1]
mov	byte ptr [rbp + 0xe1], dl
mov	rdx, qword ptr [rsi + 8]
mov	byte ptr [rdi + 0xe1], al
mov	rax, qword ptr [rbx + 8]
mov	qword ptr [rbx + 8], rdx
lea	rdx, [rsi + 0x10]
mov	qword ptr [rsi + 8], rax
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x140080010
jmp	0x140080010
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x140080270
call	0x140080270
test	rax, rax
je	0x14008c6b0
je	0x14008c6b0
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
nop	
nop	
nop	
nop	
nop	
nop	
add	rcx, 0x60
jmp	0x14001d8f0
jmp	0x14001d8f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	r12, [rip + 0x338c7]
lea	rbp, [rcx + 0xd8]
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rbp
call	0x1400aa250
call	0x1400aa250
pxor	xmm0, xmm0
xor	r8d, r8d
mov	qword ptr [rbx], r12
lea	rax, [r12 + 0x28]
mov	word ptr [rbx + 0x1b8], r8w
mov	rcx, rbp
movups	xmmword ptr [rbx + 0x1c0], xmm0
movups	xmmword ptr [rbx + 0x1d0], xmm0
mov	qword ptr [rbx + 0xd8], rax
mov	rax, qword ptr [rsi + 8]
mov	qword ptr [rbx + 0x1b0], 0
mov	qword ptr [rbx + 8], rax
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
mov	rdx, rdi
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0x1a8]
mov	rcx, rbp
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rdi + 0xd8]
lea	rdx, [rsi + 0x10]
mov	qword ptr [rdi + 0xd8], 0
mov	qword ptr [rbx + 0x1c0], 0
mov	qword ptr [rbx + 0x1b0], rax
movzx	eax, word ptr [rdi + 0xe0]
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
mov	word ptr [rbx + 0x1b8], ax
lea	rax, [rip + 0x3a2fb]
mov	qword ptr [rsi + 8], 0
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	qword ptr [rbx + 0xd8], rax
call	0x140081700
call	0x140081700
mov	qword ptr [rbx + 0x1c0], rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rsi, rax
mov	rax, qword ptr [rip + 0x3297c]
mov	rcx, rbp
add	rax, 0x10
mov	qword ptr [rbx + 0xd8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
xor	ecx, ecx
mov	qword ptr [rbx], r12
mov	rsi, rax
mov	qword ptr [rbx + 8], rcx
jmp	0x14008c7dd
jmp	0x14008c7dd
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	r13, [rip + 0x33795]
lea	rsi, [rcx + 0xd8]
mov	rbx, rcx
mov	rbp, rdx
mov	r12d, r8d
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	edx, edx
lea	rax, [r13 + 0x28]
mov	qword ptr [rbx], r13
mov	word ptr [rbx + 0x1b8], dx
pxor	xmm0, xmm0
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1b0], 0
mov	qword ptr [rbx + 0xd8], rax
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x1c0], xmm0
movups	xmmword ptr [rbx + 0x1d0], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x3a220]
lea	rdi, [rbx + 0x10]
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	rcx, rdi
mov	qword ptr [rbx + 0xd8], rax
call	0x140081890
call	0x140081890
mov	rdx, rdi
mov	rcx, rsi
call	0x1400ab2c0
call	0x1400ab2c0
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
or	r8d, 8
call	0x14007fde0
call	0x14007fde0
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008c8e8
je	0x14008c8e8
xor	edx, edx
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
xor	eax, eax
mov	qword ptr [rbx], r13
mov	qword ptr [rbx + 8], rax
mov	rax, qword ptr [rip + 0x32844]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xd8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
mov	rbp, rax
jmp	0x14008c915
jmp	0x14008c915
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	r13, [rip + 0x33665]
lea	rsi, [rcx + 0xd8]
mov	rbx, rcx
mov	rbp, rdx
mov	r12d, r8d
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	edx, edx
lea	rax, [r13 + 0x28]
mov	qword ptr [rbx], r13
mov	word ptr [rbx + 0x1b8], dx
pxor	xmm0, xmm0
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1b0], 0
mov	qword ptr [rbx + 0xd8], rax
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x1c0], xmm0
movups	xmmword ptr [rbx + 0x1d0], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x3a0f0]
lea	rdi, [rbx + 0x10]
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	rcx, rdi
mov	qword ptr [rbx + 0xd8], rax
call	0x140081890
call	0x140081890
mov	rdx, rdi
mov	rcx, rsi
call	0x1400ab2c0
call	0x1400ab2c0
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
or	r8d, 8
call	0x14007fef0
call	0x14007fef0
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008ca18
je	0x14008ca18
xor	edx, edx
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
xor	eax, eax
mov	qword ptr [rbx], r13
mov	qword ptr [rbx + 8], rax
mov	rax, qword ptr [rip + 0x32714]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xd8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
mov	rbp, rax
jmp	0x14008ca45
jmp	0x14008ca45
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	r13, [rip + 0x33535]
lea	rsi, [rcx + 0xd8]
mov	rbx, rcx
mov	r12, rdx
mov	ebp, r8d
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	edx, edx
lea	rax, [r13 + 0x28]
mov	qword ptr [rbx], r13
mov	word ptr [rbx + 0x1b8], dx
pxor	xmm0, xmm0
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1b0], 0
mov	qword ptr [rbx + 0xd8], rax
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x1c0], xmm0
movups	xmmword ptr [rbx + 0x1d0], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x39fc0]
lea	rdi, [rbx + 0x10]
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	rcx, rdi
mov	qword ptr [rbx + 0xd8], rax
call	0x140081890
call	0x140081890
mov	rdx, rdi
mov	rcx, rsi
call	0x1400ab2c0
call	0x1400ab2c0
mov	r8d, ebp
mov	rdx, qword ptr [r12]
mov	rcx, rdi
or	r8d, 8
call	0x14007fde0
call	0x14007fde0
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008cb48
je	0x14008cb48
xor	edx, edx
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
xor	eax, eax
mov	qword ptr [rbx], r13
mov	qword ptr [rbx + 8], rax
mov	rax, qword ptr [rip + 0x325e4]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xd8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
mov	rbp, rax
jmp	0x14008cb75
jmp	0x14008cb75
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rbp, [rip + 0x33407]
lea	rsi, [rcx + 0xd8]
mov	rbx, rcx
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	edx, edx
lea	rax, [rbp + 0x28]
mov	qword ptr [rbx], rbp
mov	word ptr [rbx + 0x1b8], dx
pxor	xmm0, xmm0
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1b0], 0
mov	qword ptr [rbx + 0xd8], rax
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x1c0], xmm0
movups	xmmword ptr [rbx + 0x1d0], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x39e98]
lea	rdi, [rbx + 0x10]
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	rcx, rdi
mov	qword ptr [rbx + 0xd8], rax
call	0x140081890
call	0x140081890
mov	rdx, rdi
mov	rcx, rsi
call	0x1400ab2c0
call	0x1400ab2c0
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	r12, rax
mov	rax, qword ptr [rip + 0x32515]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xd8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, r12
call	0x14000c940
call	0x14000c940
mov	rcx, rdi
mov	r12, rax
call	0x140081c60
call	0x140081c60
xor	eax, eax
mov	qword ptr [rbx], rbp
mov	qword ptr [rbx + 8], rax
jmp	0x14008cc44
jmp	0x14008cc44
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rdi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rdi + 0x10]
mov	rsi, r8
mov	qword ptr [rbx + rdx], rcx
mov	rdx, qword ptr [r8 + 8]
mov	qword ptr [rbx + 8], rdx
mov	rbp, qword ptr [rax - 0x18]
mov	rax, qword ptr [r8]
add	rbp, rbx
mov	r12, qword ptr [rax - 0x18]
mov	rcx, rbp
add	r12, r8
mov	rdx, r12
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbp + 0xd0]
mov	rcx, rbp
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [r12 + 0xd8]
mov	qword ptr [r12 + 0xd8], 0
mov	qword ptr [rbp + 0xe8], 0
mov	rdx, qword ptr [rdi + 0x18]
mov	qword ptr [rbp + 0xd8], rax
movzx	eax, word ptr [r12 + 0xe0]
mov	word ptr [rbp + 0xe0], ax
mov	rax, qword ptr [rdi]
lea	rbp, [rbx + 0x10]
mov	qword ptr [rsi + 8], 0
mov	rcx, rbp
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
lea	rdx, [rsi + 0x10]
call	0x140081700
call	0x140081700
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax + 0xe8], rbp
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rax
mov	rax, qword ptr [rdi + 8]
mov	rdx, qword ptr [rdi + 0x10]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	rbp, r8
mov	r12d, r9d
lea	rdi, [rbx + 0x10]
mov	qword ptr [rbx + rdx], rcx
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x140081890
call	0x140081890
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
or	r8d, 8
call	0x14007fde0
call	0x14007fde0
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008ce28
je	0x14008ce28
xor	edx, edx
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	rcx, rbp
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	rbp, r8
mov	r12d, r9d
lea	rdi, [rbx + 0x10]
mov	qword ptr [rbx + rdx], rcx
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x140081890
call	0x140081890
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
or	r8d, 8
call	0x14007fef0
call	0x14007fef0
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008cf18
je	0x14008cf18
xor	edx, edx
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	rcx, rbp
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	r12, r8
mov	ebp, r9d
lea	rdi, [rbx + 0x10]
mov	qword ptr [rbx + rdx], rcx
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x140081890
call	0x140081890
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
mov	r8d, ebp
mov	rdx, qword ptr [r12]
mov	rcx, rdi
or	r8d, 8
call	0x14007fde0
call	0x14007fde0
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008d008
je	0x14008d008
xor	edx, edx
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	rcx, rbp
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 8]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x10]
lea	rdi, [rbx + 0x10]
mov	qword ptr [rbx + rdx], rcx
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x140081890
call	0x140081890
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	rcx, rbp
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x399ac]
mov	qword ptr [rcx], rax
add	rax, 0x28
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	qword ptr [rcx + 0xc8], rax
lea	rax, [rip + 0x396b8]
mov	qword ptr [rcx], rax
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x60]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x31de0]
lea	rcx, [rbx + 0x48]
add	rax, 0x10
mov	qword ptr [rbx + 0x10], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0x32e70]
mov	qword ptr [rbx + 8], 0
lea	rcx, [rbx + 0xd8]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0x31fff]
add	rax, 0x10
mov	qword ptr [rbx + 0xd8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008d120
jmp	0x14008d120
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x3990c]
mov	qword ptr [rcx], rax
add	rax, 0x28
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	qword ptr [rcx + 0xc8], rax
lea	rax, [rip + 0x39618]
mov	qword ptr [rcx], rax
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x60]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x31d40]
lea	rcx, [rbx + 0x48]
add	rax, 0x10
mov	qword ptr [rbx + 0x10], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0x32dd0]
lea	rcx, [rbx + 0xd8]
mov	qword ptr [rbx + 8], 0
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0x31f5f]
add	rax, 0x10
mov	qword ptr [rbx + 0xd8], rax
add	rsp, 0x20
pop	rbx
jmp	0x1400aa330
jmp	0x1400aa330
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008d1c0
jmp	0x14008d1c0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rsi, rdx
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rbx, rcx
mov	rdx, qword ptr [rdx + 0x18]
lea	rcx, [rcx + 0x10]
mov	qword ptr [rcx + rax - 0x10], rdx
lea	rax, [rip + 0x39576]
mov	qword ptr [rcx], rax
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x60]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x31c9e]
lea	rcx, [rbx + 0x48]
add	rax, 0x10
mov	qword ptr [rbx + 0x10], rax
call	0x14009bf30
call	0x14009bf30
mov	rax, qword ptr [rsi + 8]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rdx, qword ptr [rsi + 0x10]
mov	qword ptr [rbx + rax], rdx
mov	qword ptr [rbx + 8], 0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008d262
jmp	0x14008d262
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rdi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rsi, qword ptr [rax - 0x18]
add	rdi, rcx
mov	rbp, rcx
mov	rbx, rdx
mov	rcx, rdi
add	rsi, rdx
mov	rdx, rsi
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rdi + 0xd0]
mov	rcx, rdi
call	0x1400ab190
call	0x1400ab190
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rdi + 0xd8]
mov	rdx, qword ptr [rsi + 0xd8]
lea	rcx, [rbp + 0x10]
mov	qword ptr [rdi + 0xd8], rdx
movzx	edx, byte ptr [rsi + 0xe0]
mov	qword ptr [rsi + 0xd8], rax
movzx	eax, byte ptr [rdi + 0xe0]
mov	byte ptr [rdi + 0xe0], dl
movzx	edx, byte ptr [rsi + 0xe1]
mov	byte ptr [rsi + 0xe0], al
movzx	eax, byte ptr [rdi + 0xe1]
mov	byte ptr [rdi + 0xe1], dl
mov	rdx, qword ptr [rbx + 8]
mov	byte ptr [rsi + 0xe1], al
mov	rax, qword ptr [rbp + 8]
mov	qword ptr [rbp + 8], rdx
lea	rdx, [rbx + 0x10]
mov	qword ptr [rbx + 8], rax
call	0x140081d00
call	0x140081d00
mov	rax, rbp
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
or	r8d, 8
lea	rcx, [rcx + 0x10]
call	0x140082370
call	0x140082370
test	rax, rax
mov	rax, qword ptr [rbx]
je	0x14008d3c0
je	0x14008d3c0
add	rbx, qword ptr [rax - 0x18]
xor	edx, edx
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
or	r8d, 8
lea	rcx, [rcx + 0x10]
call	0x140082490
call	0x140082490
test	rax, rax
mov	rax, qword ptr [rbx]
je	0x14008d410
je	0x14008d410
add	rbx, qword ptr [rax - 0x18]
xor	edx, edx
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rdx, qword ptr [rdx]
mov	rbx, rcx
or	r8d, 8
lea	rcx, [rcx + 0x10]
call	0x140082370
call	0x140082370
test	rax, rax
mov	rax, qword ptr [rbx]
je	0x14008d468
je	0x14008d468
add	rbx, qword ptr [rax - 0x18]
xor	edx, edx
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
nop	dword ptr [rax + rax]
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rbp, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rdi, qword ptr [rax - 0x18]
add	rbp, rcx
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rbp
add	rdi, rdx
mov	rdx, rdi
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rbp + 0xd0]
mov	rcx, rbp
call	0x1400abb50
call	0x1400abb50
lea	rdx, [rdi + 0xd0]
mov	rcx, rdi
call	0x1400abb50
call	0x1400abb50
mov	rdx, qword ptr [rdi + 0xd8]
mov	rax, qword ptr [rbp + 0xd8]
lea	rcx, [rbx + 0x10]
mov	qword ptr [rbp + 0xd8], rdx
movzx	edx, word ptr [rdi + 0xe0]
mov	qword ptr [rdi + 0xd8], rax
movzx	eax, word ptr [rbp + 0xe0]
mov	word ptr [rbp + 0xe0], dx
movzx	edx, byte ptr [rdi + 0xe2]
mov	word ptr [rdi + 0xe0], ax
movzx	eax, byte ptr [rbp + 0xe2]
mov	byte ptr [rbp + 0xe2], dl
mov	rdx, qword ptr [rsi + 8]
mov	byte ptr [rdi + 0xe2], al
mov	rax, qword ptr [rbx + 8]
mov	qword ptr [rbx + 8], rdx
lea	rdx, [rsi + 0x10]
mov	qword ptr [rsi + 8], rax
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x1400825c0
jmp	0x1400825c0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x140082820
call	0x140082820
test	rax, rax
je	0x14008d570
je	0x14008d570
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
nop	
nop	
nop	
nop	
nop	
nop	
add	rcx, 0x60
jmp	0x14001d8f0
jmp	0x14001d8f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	r12, [rip + 0x32a57]
lea	rbp, [rcx + 0xd8]
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rbp
call	0x1400aa250
call	0x1400aa250
pxor	xmm0, xmm0
xor	r8d, r8d
mov	qword ptr [rbx], r12
lea	rax, [r12 + 0x28]
mov	rcx, rbp
movups	xmmword ptr [rbx + 0x1c0], xmm0
movups	xmmword ptr [rbx + 0x1d0], xmm0
mov	qword ptr [rbx + 0xd8], rax
mov	rax, qword ptr [rsi + 8]
mov	qword ptr [rbx + 0x1b0], 0
mov	qword ptr [rbx + 8], rax
mov	rax, qword ptr [rsi]
mov	word ptr [rbx + 0x1b8], r8w
mov	rdi, qword ptr [rax - 0x18]
mov	byte ptr [rbx + 0x1ba], 0
add	rdi, rsi
mov	rdx, rdi
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0x1a8]
mov	rcx, rbp
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rdi + 0xd8]
lea	rdx, [rsi + 0x10]
mov	qword ptr [rdi + 0xd8], 0
mov	qword ptr [rbx + 0x1c0], 0
mov	qword ptr [rbx + 0x1b0], rax
movzx	eax, word ptr [rdi + 0xe0]
mov	word ptr [rbx + 0x1b8], ax
movzx	eax, byte ptr [rdi + 0xe2]
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
mov	byte ptr [rbx + 0x1ba], al
lea	rax, [rip + 0x39477]
mov	qword ptr [rsi + 8], 0
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	qword ptr [rbx + 0xd8], rax
call	0x140083cc0
call	0x140083cc0
mov	qword ptr [rbx + 0x1c0], rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rsi, rax
mov	rax, qword ptr [rip + 0x31ab8]
mov	rcx, rbp
add	rax, 0x10
mov	qword ptr [rbx + 0xd8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
xor	ecx, ecx
mov	qword ptr [rbx], r12
mov	rsi, rax
mov	qword ptr [rbx + 8], rcx
jmp	0x14008d6b1
jmp	0x14008d6b1
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	r13, [rip + 0x32905]
lea	rsi, [rcx + 0xd8]
mov	rbx, rcx
mov	rbp, rdx
mov	r12d, r8d
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	edx, edx
lea	rax, [r13 + 0x28]
mov	qword ptr [rbx], r13
mov	word ptr [rbx + 0x1b8], dx
pxor	xmm0, xmm0
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1b0], 0
mov	byte ptr [rbx + 0x1ba], 0
mov	qword ptr [rbx + 0xd8], rax
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x1c0], xmm0
movups	xmmword ptr [rbx + 0x1d0], xmm0
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x39389]
lea	rdi, [rbx + 0x10]
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	rcx, rdi
mov	qword ptr [rbx + 0xd8], rax
call	0x140083e50
call	0x140083e50
mov	rdx, rdi
mov	rcx, rsi
call	0x1400abc50
call	0x1400abc50
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
or	r8d, 8
call	0x140082370
call	0x140082370
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008d7d0
je	0x14008d7d0
xor	edx, edx
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr [rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
xor	eax, eax
mov	qword ptr [rbx], r13
mov	qword ptr [rbx + 8], rax
mov	rax, qword ptr [rip + 0x3196c]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xd8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
mov	rbp, rax
jmp	0x14008d7fd
jmp	0x14008d7fd
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	r13, [rip + 0x327c5]
lea	rsi, [rcx + 0xd8]
mov	rbx, rcx
mov	rbp, rdx
mov	r12d, r8d
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	edx, edx
lea	rax, [r13 + 0x28]
mov	qword ptr [rbx], r13
mov	word ptr [rbx + 0x1b8], dx
pxor	xmm0, xmm0
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1b0], 0
mov	byte ptr [rbx + 0x1ba], 0
mov	qword ptr [rbx + 0xd8], rax
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x1c0], xmm0
movups	xmmword ptr [rbx + 0x1d0], xmm0
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x39249]
lea	rdi, [rbx + 0x10]
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	rcx, rdi
mov	qword ptr [rbx + 0xd8], rax
call	0x140083e50
call	0x140083e50
mov	rdx, rdi
mov	rcx, rsi
call	0x1400abc50
call	0x1400abc50
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
or	r8d, 8
call	0x140082490
call	0x140082490
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008d910
je	0x14008d910
xor	edx, edx
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr [rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
xor	eax, eax
mov	qword ptr [rbx], r13
mov	qword ptr [rbx + 8], rax
mov	rax, qword ptr [rip + 0x3182c]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xd8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
mov	rbp, rax
jmp	0x14008d93d
jmp	0x14008d93d
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	r13, [rip + 0x32685]
lea	rsi, [rcx + 0xd8]
mov	rbx, rcx
mov	r12, rdx
mov	ebp, r8d
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	edx, edx
lea	rax, [r13 + 0x28]
mov	qword ptr [rbx], r13
mov	word ptr [rbx + 0x1b8], dx
pxor	xmm0, xmm0
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1b0], 0
mov	byte ptr [rbx + 0x1ba], 0
mov	qword ptr [rbx + 0xd8], rax
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x1c0], xmm0
movups	xmmword ptr [rbx + 0x1d0], xmm0
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x39109]
lea	rdi, [rbx + 0x10]
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	rcx, rdi
mov	qword ptr [rbx + 0xd8], rax
call	0x140083e50
call	0x140083e50
mov	rdx, rdi
mov	rcx, rsi
call	0x1400abc50
call	0x1400abc50
mov	r8d, ebp
mov	rdx, qword ptr [r12]
mov	rcx, rdi
or	r8d, 8
call	0x140082370
call	0x140082370
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008da50
je	0x14008da50
xor	edx, edx
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
xor	eax, eax
mov	qword ptr [rbx], r13
mov	qword ptr [rbx + 8], rax
mov	rax, qword ptr [rip + 0x316ec]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xd8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
mov	rbp, rax
jmp	0x14008da7d
jmp	0x14008da7d
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rbp, [rip + 0x32547]
lea	rsi, [rcx + 0xd8]
mov	rbx, rcx
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	edx, edx
lea	rax, [rbp + 0x28]
mov	qword ptr [rbx], rbp
mov	word ptr [rbx + 0x1b8], dx
pxor	xmm0, xmm0
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1b0], 0
mov	byte ptr [rbx + 0x1ba], 0
mov	qword ptr [rbx + 0xd8], rax
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x1c0], xmm0
movups	xmmword ptr [rbx + 0x1d0], xmm0
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x38fd1]
lea	rdi, [rbx + 0x10]
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	rcx, rdi
mov	qword ptr [rbx + 0xd8], rax
call	0x140083e50
call	0x140083e50
mov	rdx, rdi
mov	rcx, rsi
call	0x1400abc50
call	0x1400abc50
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	r12, rax
mov	rax, qword ptr [rip + 0x3160e]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xd8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, r12
call	0x14000c940
call	0x14000c940
mov	rcx, rdi
mov	r12, rax
call	0x140084240
call	0x140084240
xor	eax, eax
mov	qword ptr [rbx], rbp
mov	qword ptr [rbx + 8], rax
jmp	0x14008db5b
jmp	0x14008db5b
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rbp, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbp + 0x10]
mov	rsi, r8
mov	qword ptr [rbx + rdx], rcx
mov	rdx, qword ptr [r8 + 8]
mov	qword ptr [rbx + 8], rdx
mov	rdi, qword ptr [rax - 0x18]
mov	rax, qword ptr [r8]
add	rdi, rbx
mov	r12, qword ptr [rax - 0x18]
mov	rcx, rdi
add	r12, r8
mov	rdx, r12
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rdi + 0xd0]
mov	rcx, rdi
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [r12 + 0xd8]
mov	qword ptr [r12 + 0xd8], 0
mov	qword ptr [rdi + 0xe8], 0
mov	rdx, qword ptr [rbp + 0x18]
mov	qword ptr [rdi + 0xd8], rax
movzx	eax, word ptr [r12 + 0xe0]
mov	word ptr [rdi + 0xe0], ax
movzx	eax, byte ptr [r12 + 0xe2]
mov	byte ptr [rdi + 0xe2], al
mov	rax, qword ptr [rbp]
lea	rdi, [rbx + 0x10]
mov	qword ptr [rsi + 8], 0
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
lea	rdx, [rsi + 0x10]
call	0x140083cc0
call	0x140083cc0
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax + 0xe8], rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rax
mov	rax, qword ptr [rbp + 8]
mov	rdx, qword ptr [rbp + 0x10]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	rbp, r8
mov	r12d, r9d
lea	rdi, [rbx + 0x10]
mov	qword ptr [rbx + rdx], rcx
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x140083e50
call	0x140083e50
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
or	r8d, 8
call	0x140082370
call	0x140082370
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008dd58
je	0x14008dd58
xor	edx, edx
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	rcx, rbp
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	rbp, r8
mov	r12d, r9d
lea	rdi, [rbx + 0x10]
mov	qword ptr [rbx + rdx], rcx
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x140083e50
call	0x140083e50
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
or	r8d, 8
call	0x140082490
call	0x140082490
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008de48
je	0x14008de48
xor	edx, edx
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	rcx, rbp
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	r12, r8
mov	ebp, r9d
lea	rdi, [rbx + 0x10]
mov	qword ptr [rbx + rdx], rcx
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x140083e50
call	0x140083e50
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
mov	r8d, ebp
mov	rdx, qword ptr [r12]
mov	rcx, rdi
or	r8d, 8
call	0x140082370
call	0x140082370
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008df38
je	0x14008df38
xor	edx, edx
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	rcx, rbp
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 8]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x10]
lea	rdi, [rbx + 0x10]
mov	qword ptr [rbx + rdx], rcx
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x140083e50
call	0x140083e50
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	rcx, rbp
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x38acc]
mov	qword ptr [rcx], rax
add	rax, 0x28
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	qword ptr [rcx + 0xc8], rax
lea	rax, [rip + 0x38808]
mov	qword ptr [rcx], rax
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x60]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x30ec0]
lea	rcx, [rbx + 0x48]
add	rax, 0x10
mov	qword ptr [rbx + 0x10], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0x31f90]
mov	qword ptr [rbx + 8], 0
lea	rcx, [rbx + 0xd8]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0x310df]
add	rax, 0x10
mov	qword ptr [rbx + 0xd8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008e050
jmp	0x14008e050
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x38a2c]
mov	qword ptr [rcx], rax
add	rax, 0x28
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	qword ptr [rcx + 0xc8], rax
lea	rax, [rip + 0x38768]
mov	qword ptr [rcx], rax
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x60]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x30e20]
lea	rcx, [rbx + 0x48]
add	rax, 0x10
mov	qword ptr [rbx + 0x10], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0x31ef0]
lea	rcx, [rbx + 0xd8]
mov	qword ptr [rbx + 8], 0
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0x3103f]
add	rax, 0x10
mov	qword ptr [rbx + 0xd8], rax
add	rsp, 0x20
pop	rbx
jmp	0x1400aa330
jmp	0x1400aa330
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008e0f0
jmp	0x14008e0f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rsi, rdx
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rbx, rcx
mov	rdx, qword ptr [rdx + 0x18]
lea	rcx, [rcx + 0x10]
mov	qword ptr [rcx + rax - 0x10], rdx
lea	rax, [rip + 0x386c6]
mov	qword ptr [rcx], rax
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x60]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x30d7e]
lea	rcx, [rbx + 0x48]
add	rax, 0x10
mov	qword ptr [rbx + 0x10], rax
call	0x14009bf30
call	0x14009bf30
mov	rax, qword ptr [rsi + 8]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rdx, qword ptr [rsi + 0x10]
mov	qword ptr [rbx + rax], rdx
mov	qword ptr [rbx + 8], 0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008e192
jmp	0x14008e192
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rdi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rsi, qword ptr [rax - 0x18]
add	rdi, rcx
mov	rbp, rcx
mov	rbx, rdx
mov	rcx, rdi
add	rsi, rdx
mov	rdx, rsi
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rdi + 0xd0]
mov	rcx, rdi
call	0x1400abb50
call	0x1400abb50
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rdi + 0xd8]
mov	rdx, qword ptr [rsi + 0xd8]
lea	rcx, [rbp + 0x10]
mov	qword ptr [rdi + 0xd8], rdx
movzx	edx, word ptr [rsi + 0xe0]
mov	qword ptr [rsi + 0xd8], rax
movzx	eax, word ptr [rdi + 0xe0]
mov	word ptr [rdi + 0xe0], dx
movzx	edx, byte ptr [rsi + 0xe2]
mov	word ptr [rsi + 0xe0], ax
movzx	eax, byte ptr [rdi + 0xe2]
mov	byte ptr [rdi + 0xe2], dl
mov	rdx, qword ptr [rbx + 8]
mov	byte ptr [rsi + 0xe2], al
mov	rax, qword ptr [rbp + 8]
mov	qword ptr [rbp + 8], rdx
lea	rdx, [rbx + 0x10]
mov	qword ptr [rbx + 8], rax
call	0x1400842e0
call	0x1400842e0
mov	rax, rbp
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rsi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rbx, qword ptr [rax - 0x18]
add	rsi, rcx
mov	rbp, rcx
mov	rdi, rdx
mov	rcx, rsi
add	rbx, rdx
mov	rdx, rbx
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400abb50
call	0x1400abb50
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rsi + 0xd8]
mov	rdx, qword ptr [rbx + 0xd8]
mov	qword ptr [rsi + 0xd8], rdx
movzx	edx, word ptr [rbx + 0xe0]
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, word ptr [rsi + 0xe0]
mov	word ptr [rsi + 0xe0], dx
movzx	edx, byte ptr [rbx + 0xe2]
mov	word ptr [rbx + 0xe0], ax
movzx	eax, byte ptr [rsi + 0xe2]
mov	byte ptr [rsi + 0xe2], dl
mov	rdx, qword ptr [rdi + 8]
mov	byte ptr [rbx + 0xe2], al
mov	rax, qword ptr [rbp + 8]
mov	qword ptr [rbp + 8], rdx
mov	qword ptr [rdi + 8], rax
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rcx + 0x18]
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rbp
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
mov	rcx, rbp
mov	word ptr [rbx + 0xf8], ax
lea	rax, [rip + 0x31ca7]
mov	qword ptr [rbx], rax
add	rax, 0x28
movups	xmmword ptr [rbx + 0x100], xmm0
movups	xmmword ptr [rbx + 0x110], xmm0
mov	qword ptr [rbx + 0x18], rax
mov	rax, qword ptr [rsi + 8]
mov	qword ptr [rbx + 0xf0], 0
mov	qword ptr [rbx + 8], rax
mov	rax, qword ptr [rsi]
mov	byte ptr [rbx + 0xfa], 0
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
mov	rdx, rdi
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0xe8]
mov	rcx, rbp
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rdi + 0xd8]
mov	qword ptr [rbx + 0x100], 0
mov	qword ptr [rdi + 0xd8], 0
mov	qword ptr [rbx + 0xf0], rax
movzx	eax, word ptr [rdi + 0xe0]
mov	word ptr [rbx + 0xf8], ax
movzx	eax, byte ptr [rdi + 0xe2]
mov	byte ptr [rbx + 0xfa], al
lea	rax, [rip + 0x386fd]
mov	qword ptr [rsi + 8], 0
lea	rsi, [rax + 0x28]
mov	qword ptr [rbx], rax
add	rax, 0x50
movq	xmm0, rsi
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx + 0x10], xmm0
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rsi, rax
mov	rax, qword ptr [rip + 0x30ced]
mov	rcx, rbp
add	rax, 0x10
mov	qword ptr [rbx + 0x18], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rip + 0x31ba9]
lea	rdi, [rcx + 0x18]
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rdi
call	0x1400aa250
call	0x1400aa250
xor	r8d, r8d
lea	rax, [rbp + 0x28]
mov	qword ptr [rbx], rbp
mov	qword ptr [rbx + 0x18], rax
pxor	xmm0, xmm0
mov	rdx, rsi
mov	rcx, rdi
mov	qword ptr [rbx + 0xf0], 0
mov	word ptr [rbx + 0xf8], r8w
mov	byte ptr [rbx + 0xfa], 0
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x100], xmm0
movups	xmmword ptr [rbx + 0x110], xmm0
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x31bbb]
mov	rcx, rdi
lea	rdx, [rax - 0x28]
movq	xmm1, rax
movq	xmm0, rdx
mov	rdx, rsi
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx + 0x10], xmm0
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x3860b]
lea	rsi, [rax + 0x28]
mov	qword ptr [rbx], rax
add	rax, 0x50
movq	xmm0, rsi
movq	xmm2, rax
punpcklqdq	xmm0, xmm2
movups	xmmword ptr [rbx + 0x10], xmm0
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rsi, rax
mov	rax, qword ptr [rip + 0x30c03]
mov	rcx, rdi
add	rax, 0x10
mov	qword ptr [rbx + 0x18], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
xor	ecx, ecx
mov	qword ptr [rbx], rbp
mov	rsi, rax
mov	qword ptr [rbx + 8], rcx
jmp	0x14008e566
jmp	0x14008e566
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rdi, [rip + 0x31aaa]
lea	rsi, [rcx + 0x18]
mov	rbx, rcx
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	r8d, r8d
lea	rax, [rdi + 0x28]
mov	qword ptr [rbx], rdi
mov	byte ptr [rbx + 0xfa], 0
pxor	xmm0, xmm0
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0xf0], 0
mov	word ptr [rbx + 0xf8], r8w
mov	qword ptr [rbx + 0x18], rax
mov	qword ptr [rbx + 8], 0
movups	xmmword ptr [rbx + 0x100], xmm0
movups	xmmword ptr [rbx + 0x110], xmm0
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x31ac0]
mov	rcx, rsi
lea	rdx, [rax - 0x28]
movq	xmm1, rax
movq	xmm0, rdx
xor	edx, edx
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx + 0x10], xmm0
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x38511]
lea	rdi, [rax + 0x28]
mov	qword ptr [rbx], rax
add	rax, 0x50
movq	xmm0, rdi
movq	xmm2, rax
punpcklqdq	xmm0, xmm2
movups	xmmword ptr [rbx + 0x10], xmm0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rdi, rax
mov	rax, qword ptr [rip + 0x30b0a]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0x18], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rdi
call	0x14000c940
call	0x14000c940
xor	ecx, ecx
mov	qword ptr [rbx], rdi
mov	rdi, rax
mov	qword ptr [rbx + 8], rcx
jmp	0x14008e65f
jmp	0x14008e65f
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	rbp, r8
mov	qword ptr [rbx + rdx], rcx
mov	rdx, qword ptr [r8 + 8]
mov	qword ptr [rbx + 8], rdx
mov	rdi, qword ptr [rax - 0x18]
mov	rax, qword ptr [r8]
add	rdi, rbx
mov	r12, qword ptr [rax - 0x18]
mov	rcx, rdi
add	r12, r8
mov	rdx, r12
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rdi + 0xd0]
mov	rcx, rdi
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [r12 + 0xd8]
mov	qword ptr [rdi + 0xe8], 0
mov	qword ptr [r12 + 0xd8], 0
mov	qword ptr [rdi + 0xd8], rax
mov	rdx, qword ptr [rsi + 0x20]
movzx	eax, word ptr [r12 + 0xe0]
mov	word ptr [rdi + 0xe0], ax
movzx	eax, byte ptr [r12 + 0xe2]
mov	byte ptr [rdi + 0xe2], al
mov	rax, qword ptr [rsi + 0x18]
mov	qword ptr [rbp + 8], 0
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax + 0x10], rdx
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x28]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x30]
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	rdi, r8
mov	qword ptr [rbx + rdx], rcx
mov	rdx, r8
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi + 0x18]
mov	rdx, rdi
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
lea	rcx, [rbx + rax + 0x10]
mov	rax, qword ptr [rsi + 0x20]
mov	qword ptr [rcx], rax
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x28]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x30]
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rcx, rax
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 8]
mov	rsi, rdx
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rdx, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rsi + 0x10]
mov	qword ptr [rbx + rdx], rcx
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi + 0x18]
xor	edx, edx
mov	qword ptr [rbx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
lea	rcx, [rbx + rax + 0x10]
mov	rax, qword ptr [rsi + 0x20]
mov	qword ptr [rcx], rax
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x28]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
mov	rax, qword ptr [rsi + 0x30]
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rcx, rax
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
xor	eax, eax
mov	qword ptr [rbx + 8], rax
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x3179c]
lea	rdx, [rip + 0x317e5]
movq	xmm0, rdx
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x3089e]
mov	rbx, rcx
lea	rcx, [rcx + 0x18]
mov	qword ptr [rcx - 0x10], 0
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x31741]
lea	rdx, [rip + 0x3178a]
movq	xmm0, rdx
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x30843]
add	rcx, 0x18
mov	qword ptr [rcx - 0x10], 0
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
jmp	0x1400aa330
jmp	0x1400aa330
nop	
mov	rax, qword ptr [rdx]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rax - 0x18]
mov	r8, qword ptr [rdx + 0x28]
mov	qword ptr [rcx + rax], r8
mov	rax, qword ptr [rdx + 0x30]
mov	qword ptr [rcx + 0x10], rax
mov	rax, qword ptr [rdx + 0x18]
mov	qword ptr [rcx + 0x10], rax
mov	rax, qword ptr [rax - 0x18]
mov	r8, qword ptr [rdx + 0x20]
mov	qword ptr [rcx + rax + 0x10], r8
mov	rax, qword ptr [rdx + 8]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rdx, qword ptr [rdx + 0x10]
mov	qword ptr [rcx + rax], rdx
mov	qword ptr [rcx + 8], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rsi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rbx, qword ptr [rax - 0x18]
add	rsi, rcx
mov	rdi, rcx
mov	rbp, rdx
mov	rcx, rsi
add	rbx, rdx
mov	rdx, rbx
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400abb50
call	0x1400abb50
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rsi + 0xd8]
mov	rdx, qword ptr [rbx + 0xd8]
mov	qword ptr [rsi + 0xd8], rdx
movzx	edx, word ptr [rbx + 0xe0]
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, word ptr [rsi + 0xe0]
mov	word ptr [rsi + 0xe0], dx
movzx	edx, byte ptr [rbx + 0xe2]
mov	word ptr [rbx + 0xe0], ax
movzx	eax, byte ptr [rsi + 0xe2]
mov	byte ptr [rsi + 0xe2], dl
mov	rdx, qword ptr [rbp + 8]
mov	byte ptr [rbx + 0xe2], al
mov	rax, qword ptr [rdi + 8]
mov	qword ptr [rdi + 8], rdx
mov	qword ptr [rbp + 8], rax
mov	rax, rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
or	r8d, 0x10
lea	rcx, [rcx + 8]
call	0x14007fde0
call	0x14007fde0
test	rax, rax
mov	rax, qword ptr [rbx]
je	0x14008ea90
je	0x14008ea90
add	rbx, qword ptr [rax - 0x18]
xor	edx, edx
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
or	r8d, 0x10
lea	rcx, [rcx + 8]
call	0x14007fef0
call	0x14007fef0
test	rax, rax
mov	rax, qword ptr [rbx]
je	0x14008eae0
je	0x14008eae0
add	rbx, qword ptr [rax - 0x18]
xor	edx, edx
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rdx, qword ptr [rdx]
mov	rbx, rcx
or	r8d, 0x10
lea	rcx, [rcx + 8]
call	0x14007fde0
call	0x14007fde0
test	rax, rax
mov	rax, qword ptr [rbx]
je	0x14008eb38
je	0x14008eb38
add	rbx, qword ptr [rax - 0x18]
xor	edx, edx
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
nop	dword ptr [rax + rax]
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rsi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rbx, qword ptr [rax - 0x18]
add	rsi, rcx
mov	rdi, rcx
mov	rbp, rdx
mov	rcx, rsi
add	rbx, rdx
mov	rdx, rbx
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400ab190
call	0x1400ab190
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400ab190
call	0x1400ab190
mov	rdx, qword ptr [rbx + 0xd8]
mov	rax, qword ptr [rsi + 0xd8]
lea	rcx, [rdi + 8]
mov	qword ptr [rsi + 0xd8], rdx
movzx	edx, byte ptr [rbx + 0xe0]
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, byte ptr [rsi + 0xe0]
mov	byte ptr [rsi + 0xe0], dl
movzx	edx, byte ptr [rbx + 0xe1]
mov	byte ptr [rbx + 0xe0], al
movzx	eax, byte ptr [rsi + 0xe1]
mov	byte ptr [rsi + 0xe1], dl
lea	rdx, [rbp + 8]
mov	byte ptr [rbx + 0xe1], al
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x140080010
jmp	0x140080010
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rcx + 8]
call	0x140080270
call	0x140080270
test	rax, rax
je	0x14008ec20
je	0x14008ec20
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400ab490
jmp	0x1400ab490
nop	
nop	
nop	
nop	
nop	
nop	
add	rcx, 0x58
jmp	0x14001d8f0
jmp	0x14001d8f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	r12, [rip + 0x31497]
lea	rbp, [rcx + 0xd0]
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rbp
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
mov	qword ptr [rbx], r12
mov	word ptr [rbx + 0x1b0], ax
lea	rax, [r12 + 0x28]
mov	rcx, rbp
movups	xmmword ptr [rbx + 0x1b8], xmm0
movups	xmmword ptr [rbx + 0x1c8], xmm0
mov	qword ptr [rbx + 0xd0], rax
mov	rax, qword ptr [rsi]
mov	qword ptr [rbx + 0x1a8], 0
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
mov	rdx, rdi
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0x1a0]
mov	rcx, rbp
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rdi + 0xd8]
lea	rdx, [rsi + 8]
mov	qword ptr [rdi + 0xd8], 0
mov	qword ptr [rbx + 0x1b8], 0
mov	qword ptr [rbx + 0x1a8], rax
movzx	eax, word ptr [rdi + 0xe0]
lea	rdi, [rbx + 8]
mov	rcx, rdi
mov	word ptr [rbx + 0x1b0], ax
lea	rax, [rip + 0x37eb5]
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	qword ptr [rbx + 0xd0], rax
call	0x140081700
call	0x140081700
mov	qword ptr [rbx + 0x1b8], rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rsi, rax
mov	rax, qword ptr [rip + 0x3041e]
mov	rcx, rbp
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	qword ptr [rbx], r12
mov	rsi, rax
jmp	0x14008ed3b
jmp	0x14008ed3b
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	r13, [rip + 0x31375]
lea	rsi, [rcx + 0xd0]
mov	rbx, rcx
mov	rbp, rdx
mov	r12d, r8d
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
mov	qword ptr [rbx], r13
pxor	xmm0, xmm0
mov	word ptr [rbx + 0x1b0], ax
lea	rax, [r13 + 0x28]
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1a8], 0
mov	qword ptr [rbx + 0xd0], rax
movups	xmmword ptr [rbx + 0x1b8], xmm0
movups	xmmword ptr [rbx + 0x1c8], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x37de8]
lea	rdi, [rbx + 8]
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	rcx, rdi
mov	qword ptr [rbx + 0xd0], rax
call	0x140081890
call	0x140081890
mov	rdx, rdi
mov	rcx, rsi
call	0x1400ab2c0
call	0x1400ab2c0
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
or	r8d, 0x10
call	0x14007fde0
call	0x14007fde0
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008ee40
je	0x14008ee40
xor	edx, edx
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
mov	qword ptr [rbx], r13
mov	rax, qword ptr [rip + 0x302f2]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
mov	rbp, rax
jmp	0x14008ee67
jmp	0x14008ee67
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	r13, [rip + 0x31255]
lea	rsi, [rcx + 0xd0]
mov	rbx, rcx
mov	rbp, rdx
mov	r12d, r8d
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
mov	qword ptr [rbx], r13
pxor	xmm0, xmm0
mov	word ptr [rbx + 0x1b0], ax
lea	rax, [r13 + 0x28]
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1a8], 0
mov	qword ptr [rbx + 0xd0], rax
movups	xmmword ptr [rbx + 0x1b8], xmm0
movups	xmmword ptr [rbx + 0x1c8], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x37cc8]
lea	rdi, [rbx + 8]
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	rcx, rdi
mov	qword ptr [rbx + 0xd0], rax
call	0x140081890
call	0x140081890
mov	rdx, rdi
mov	rcx, rsi
call	0x1400ab2c0
call	0x1400ab2c0
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
or	r8d, 0x10
call	0x14007fef0
call	0x14007fef0
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008ef60
je	0x14008ef60
xor	edx, edx
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
mov	qword ptr [rbx], r13
mov	rax, qword ptr [rip + 0x301d2]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
mov	rbp, rax
jmp	0x14008ef87
jmp	0x14008ef87
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	r13, [rip + 0x31135]
lea	rsi, [rcx + 0xd0]
mov	rbx, rcx
mov	r12, rdx
mov	ebp, r8d
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
mov	qword ptr [rbx], r13
pxor	xmm0, xmm0
mov	word ptr [rbx + 0x1b0], ax
lea	rax, [r13 + 0x28]
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1a8], 0
mov	qword ptr [rbx + 0xd0], rax
movups	xmmword ptr [rbx + 0x1b8], xmm0
movups	xmmword ptr [rbx + 0x1c8], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x37ba8]
lea	rdi, [rbx + 8]
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	rcx, rdi
mov	qword ptr [rbx + 0xd0], rax
call	0x140081890
call	0x140081890
mov	rdx, rdi
mov	rcx, rsi
call	0x1400ab2c0
call	0x1400ab2c0
mov	r8d, ebp
mov	rdx, qword ptr [r12]
mov	rcx, rdi
or	r8d, 0x10
call	0x14007fde0
call	0x14007fde0
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008f080
je	0x14008f080
xor	edx, edx
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
mov	qword ptr [rbx], r13
mov	rax, qword ptr [rip + 0x300b2]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
mov	rbp, rax
jmp	0x14008f0a7
jmp	0x14008f0a7
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rbp, [rip + 0x31017]
lea	rsi, [rcx + 0xd0]
mov	rbx, rcx
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
mov	qword ptr [rbx], rbp
pxor	xmm0, xmm0
mov	word ptr [rbx + 0x1b0], ax
lea	rax, [rbp + 0x28]
xor	edx, edx
mov	rcx, rsi
mov	qword ptr [rbx + 0x1a8], 0
mov	qword ptr [rbx + 0xd0], rax
movups	xmmword ptr [rbx + 0x1b8], xmm0
movups	xmmword ptr [rbx + 0x1c8], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
lea	rax, [rip + 0x37a90]
lea	rdi, [rbx + 8]
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	rcx, rdi
mov	qword ptr [rbx + 0xd0], rax
call	0x140081890
call	0x140081890
mov	rdx, rdi
mov	rcx, rsi
call	0x1400ab2c0
call	0x1400ab2c0
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	r12, rax
mov	rax, qword ptr [rip + 0x2ffed]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, r12
call	0x14000c940
call	0x14000c940
mov	rcx, rdi
mov	r12, rax
call	0x140081c60
call	0x140081c60
mov	qword ptr [rbx], rbp
jmp	0x14008f16c
jmp	0x14008f16c
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rdi, qword ptr [rax - 0x18]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx + 0x10]
add	rdi, rcx
mov	rbx, rcx
mov	rbp, rdx
mov	rcx, rdi
mov	rsi, r8
mov	qword ptr [rdi], rax
mov	rax, qword ptr [r8]
mov	r12, qword ptr [rax - 0x18]
add	r12, r8
mov	rdx, r12
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rdi + 0xd0]
mov	rcx, rdi
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [r12 + 0xd8]
mov	qword ptr [r12 + 0xd8], 0
mov	qword ptr [rdi + 0xe8], 0
mov	rdx, qword ptr [rbp + 0x18]
mov	qword ptr [rdi + 0xd8], rax
movzx	eax, word ptr [r12 + 0xe0]
mov	word ptr [rdi + 0xe0], ax
mov	rax, qword ptr [rbp]
lea	rdi, [rbx + 8]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
lea	rdx, [rsi + 8]
call	0x140081700
call	0x140081700
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax + 0xe8], rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rax
mov	rax, qword ptr [rbp + 8]
mov	rdx, qword ptr [rbp + 0x10]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rcx, qword ptr [rax - 0x18]
mov	rsi, rdx
mov	rax, qword ptr [rdx + 0x10]
xor	edx, edx
mov	rbp, r8
mov	r12d, r9d
add	rcx, rbx
lea	rdi, [rbx + 8]
mov	qword ptr [rcx], rax
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x140081890
call	0x140081890
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
or	r8d, 0x10
call	0x14007fde0
call	0x14007fde0
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008f320
je	0x14008f320
xor	edx, edx
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	rcx, rbp
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rcx, qword ptr [rax - 0x18]
mov	rsi, rdx
mov	rax, qword ptr [rdx + 0x10]
xor	edx, edx
mov	rbp, r8
mov	r12d, r9d
add	rcx, rbx
lea	rdi, [rbx + 8]
mov	qword ptr [rcx], rax
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x140081890
call	0x140081890
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
or	r8d, 0x10
call	0x14007fef0
call	0x14007fef0
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008f400
je	0x14008f400
xor	edx, edx
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	rcx, rbp
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rcx, qword ptr [rax - 0x18]
mov	rsi, rdx
mov	rax, qword ptr [rdx + 0x10]
xor	edx, edx
mov	r12, r8
mov	ebp, r9d
add	rcx, rbx
lea	rdi, [rbx + 8]
mov	qword ptr [rcx], rax
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x140081890
call	0x140081890
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
mov	r8d, ebp
mov	rdx, qword ptr [r12]
mov	rcx, rdi
or	r8d, 0x10
call	0x14007fde0
call	0x14007fde0
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008f4e0
je	0x14008f4e0
xor	edx, edx
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	rcx, rbp
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 8]
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rcx, qword ptr [rax - 0x18]
mov	rsi, rdx
mov	rax, qword ptr [rdx + 0x10]
xor	edx, edx
lea	rdi, [rbx + 8]
add	rcx, rbx
mov	qword ptr [rcx], rax
call	0x1400ab2c0
call	0x1400ab2c0
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x140081890
call	0x140081890
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab2c0
call	0x1400ab2c0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140081c60
call	0x140081c60
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	rcx, rbp
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x37634]
lea	rdx, [rip + 0x37605]
movq	xmm0, rdx
mov	qword ptr [rcx + 0xd0], rax
lea	rax, [rip + 0x371fa]
mov	rbx, rcx
lea	rcx, [rcx + 8]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x58]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x2f911]
lea	rcx, [rbx + 0x40]
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0x30ae1]
lea	rcx, [rbx + 0xd0]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0x2fb38]
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008f5ef
jmp	0x14008f5ef
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x37584]
lea	rdx, [rip + 0x37555]
movq	xmm0, rdx
mov	qword ptr [rcx + 0xd0], rax
lea	rax, [rip + 0x3714a]
mov	rbx, rcx
lea	rcx, [rcx + 8]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x58]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x2f861]
lea	rcx, [rbx + 0x40]
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0x30a31]
lea	rcx, [rbx + 0xd0]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0x2fa88]
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
add	rsp, 0x20
pop	rbx
jmp	0x1400aa330
jmp	0x1400aa330
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008f69f
jmp	0x14008f69f
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rsi, rdx
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rbx, rcx
mov	rdx, qword ptr [rdx + 0x18]
lea	rcx, [rcx + 8]
mov	qword ptr [rcx + rax - 8], rdx
lea	rax, [rip + 0x370a6]
mov	qword ptr [rcx], rax
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x58]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x2f7ce]
lea	rcx, [rbx + 0x40]
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x14009bf30
call	0x14009bf30
mov	rax, qword ptr [rsi + 8]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rdx, qword ptr [rsi + 0x10]
mov	qword ptr [rbx + rax], rdx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14008f732
jmp	0x14008f732
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rsi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rbx, qword ptr [rax - 0x18]
add	rsi, rcx
mov	rbp, rcx
mov	rdi, rdx
mov	rcx, rsi
add	rbx, rdx
mov	rdx, rbx
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400ab190
call	0x1400ab190
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rsi + 0xd8]
mov	rdx, qword ptr [rbx + 0xd8]
lea	rcx, [rbp + 8]
mov	qword ptr [rsi + 0xd8], rdx
movzx	edx, byte ptr [rbx + 0xe0]
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, byte ptr [rsi + 0xe0]
mov	byte ptr [rsi + 0xe0], dl
movzx	edx, byte ptr [rbx + 0xe1]
mov	byte ptr [rbx + 0xe0], al
movzx	eax, byte ptr [rsi + 0xe1]
mov	byte ptr [rsi + 0xe1], dl
lea	rdx, [rdi + 8]
mov	byte ptr [rbx + 0xe1], al
call	0x140081d00
call	0x140081d00
mov	rax, rbp
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
or	r8d, 0x10
lea	rcx, [rcx + 8]
call	0x140082370
call	0x140082370
test	rax, rax
mov	rax, qword ptr [rbx]
je	0x14008f870
je	0x14008f870
add	rbx, qword ptr [rax - 0x18]
xor	edx, edx
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
or	r8d, 0x10
lea	rcx, [rcx + 8]
call	0x140082490
call	0x140082490
test	rax, rax
mov	rax, qword ptr [rbx]
je	0x14008f8c0
je	0x14008f8c0
add	rbx, qword ptr [rax - 0x18]
xor	edx, edx
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rdx, qword ptr [rdx]
mov	rbx, rcx
or	r8d, 0x10
lea	rcx, [rcx + 8]
call	0x140082370
call	0x140082370
test	rax, rax
mov	rax, qword ptr [rbx]
je	0x14008f918
je	0x14008f918
add	rbx, qword ptr [rax - 0x18]
xor	edx, edx
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
nop	dword ptr [rax + rax]
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rsi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rbx, qword ptr [rax - 0x18]
add	rsi, rcx
mov	rdi, rcx
mov	rbp, rdx
mov	rcx, rsi
add	rbx, rdx
mov	rdx, rbx
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400abb50
call	0x1400abb50
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400abb50
call	0x1400abb50
mov	rdx, qword ptr [rbx + 0xd8]
mov	rax, qword ptr [rsi + 0xd8]
lea	rcx, [rdi + 8]
mov	qword ptr [rsi + 0xd8], rdx
movzx	edx, word ptr [rbx + 0xe0]
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, word ptr [rsi + 0xe0]
mov	word ptr [rsi + 0xe0], dx
movzx	edx, byte ptr [rbx + 0xe2]
mov	word ptr [rbx + 0xe0], ax
movzx	eax, byte ptr [rsi + 0xe2]
mov	byte ptr [rsi + 0xe2], dl
lea	rdx, [rbp + 8]
mov	byte ptr [rbx + 0xe2], al
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x1400825c0
jmp	0x1400825c0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rcx + 8]
call	0x140082820
call	0x140082820
test	rax, rax
je	0x14008fa10
je	0x14008fa10
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
add	rbx, qword ptr [rax - 0x18]
mov	edx, dword ptr [rbx + 0x20]
mov	rcx, rbx
or	edx, 4
add	rsp, 0x20
pop	rbx
jmp	0x1400abe20
jmp	0x1400abe20
nop	
nop	
nop	
nop	
nop	
nop	
add	rcx, 0x58
jmp	0x14001d8f0
jmp	0x14001d8f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	r12, [rip + 0x306f7]
lea	rbp, [rcx + 0xd0]
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rbp
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
mov	qword ptr [rbx], r12
mov	word ptr [rbx + 0x1b0], ax
lea	rax, [r12 + 0x28]
mov	rcx, rbp
movups	xmmword ptr [rbx + 0x1b8], xmm0
movups	xmmword ptr [rbx + 0x1c8], xmm0
mov	qword ptr [rbx + 0xd0], rax
mov	rax, qword ptr [rsi]
mov	qword ptr [rbx + 0x1a8], 0
mov	rdi, qword ptr [rax - 0x18]
mov	byte ptr [rbx + 0x1b2], 0
add	rdi, rsi
mov	rdx, rdi
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0x1a0]
mov	rcx, rbp
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rdi + 0xd8]
lea	rdx, [rsi + 8]
mov	qword ptr [rdi + 0xd8], 0
mov	qword ptr [rbx + 0x1b8], 0
mov	qword ptr [rbx + 0x1a8], rax
movzx	eax, word ptr [rdi + 0xe0]
mov	word ptr [rbx + 0x1b0], ax
movzx	eax, byte ptr [rdi + 0xe2]
lea	rdi, [rbx + 8]
mov	rcx, rdi
mov	byte ptr [rbx + 0x1b2], al
lea	rax, [rip + 0x37101]
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	qword ptr [rbx + 0xd0], rax
call	0x140083cc0
call	0x140083cc0
mov	qword ptr [rbx + 0x1b8], rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rsi, rax
mov	rax, qword ptr [rip + 0x2f62a]
mov	rcx, rbp
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	qword ptr [rbx], r12
mov	rsi, rax
jmp	0x14008fb3f
jmp	0x14008fb3f
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	r13, [rip + 0x305c5]
lea	rsi, [rcx + 0xd0]
mov	rbx, rcx
mov	rbp, rdx
mov	r12d, r8d
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
mov	byte ptr [rbx + 0x1b2], 0
xor	edx, edx
mov	word ptr [rbx + 0x1b0], ax
lea	rax, [r13 + 0x28]
pxor	xmm0, xmm0
mov	rcx, rsi
mov	qword ptr [rbx + 0x1a8], 0
mov	qword ptr [rbx], r13
mov	qword ptr [rbx + 0xd0], rax
movups	xmmword ptr [rbx + 0x1b8], xmm0
movups	xmmword ptr [rbx + 0x1c8], xmm0
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x37031]
lea	rdi, [rbx + 8]
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	rcx, rdi
mov	qword ptr [rbx + 0xd0], rax
call	0x140083e50
call	0x140083e50
mov	rdx, rdi
mov	rcx, rsi
call	0x1400abc50
call	0x1400abc50
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
or	r8d, 0x10
call	0x140082370
call	0x140082370
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008fc48
je	0x14008fc48
xor	edx, edx
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr [rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
mov	qword ptr [rbx], r13
mov	rax, qword ptr [rip + 0x2f4fa]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
mov	rbp, rax
jmp	0x14008fc6f
jmp	0x14008fc6f
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	r13, [rip + 0x30495]
lea	rsi, [rcx + 0xd0]
mov	rbx, rcx
mov	rbp, rdx
mov	r12d, r8d
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
mov	byte ptr [rbx + 0x1b2], 0
xor	edx, edx
mov	word ptr [rbx + 0x1b0], ax
lea	rax, [r13 + 0x28]
pxor	xmm0, xmm0
mov	rcx, rsi
mov	qword ptr [rbx + 0x1a8], 0
mov	qword ptr [rbx], r13
mov	qword ptr [rbx + 0xd0], rax
movups	xmmword ptr [rbx + 0x1b8], xmm0
movups	xmmword ptr [rbx + 0x1c8], xmm0
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x36f01]
lea	rdi, [rbx + 8]
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	rcx, rdi
mov	qword ptr [rbx + 0xd0], rax
call	0x140083e50
call	0x140083e50
mov	rdx, rdi
mov	rcx, rsi
call	0x1400abc50
call	0x1400abc50
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
or	r8d, 0x10
call	0x140082490
call	0x140082490
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008fd78
je	0x14008fd78
xor	edx, edx
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr [rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
mov	qword ptr [rbx], r13
mov	rax, qword ptr [rip + 0x2f3ca]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
mov	rbp, rax
jmp	0x14008fd9f
jmp	0x14008fd9f
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	r13, [rip + 0x30365]
lea	rsi, [rcx + 0xd0]
mov	rbx, rcx
mov	r12, rdx
mov	ebp, r8d
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
mov	byte ptr [rbx + 0x1b2], 0
xor	edx, edx
mov	word ptr [rbx + 0x1b0], ax
lea	rax, [r13 + 0x28]
pxor	xmm0, xmm0
mov	rcx, rsi
mov	qword ptr [rbx + 0x1a8], 0
mov	qword ptr [rbx], r13
mov	qword ptr [rbx + 0xd0], rax
movups	xmmword ptr [rbx + 0x1b8], xmm0
movups	xmmword ptr [rbx + 0x1c8], xmm0
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x36dd1]
lea	rdi, [rbx + 8]
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	rcx, rdi
mov	qword ptr [rbx + 0xd0], rax
call	0x140083e50
call	0x140083e50
mov	rdx, rdi
mov	rcx, rsi
call	0x1400abc50
call	0x1400abc50
mov	r8d, ebp
mov	rdx, qword ptr [r12]
mov	rcx, rdi
or	r8d, 0x10
call	0x140082370
call	0x140082370
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x14008fea8
je	0x14008fea8
xor	edx, edx
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
mov	qword ptr [rbx], r13
mov	rax, qword ptr [rip + 0x2f29a]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbp
call	0x14000c940
call	0x14000c940
mov	rbp, rax
jmp	0x14008fecf
jmp	0x14008fecf
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
lea	rbp, [rip + 0x30237]
lea	rsi, [rcx + 0xd0]
mov	rbx, rcx
mov	rcx, rsi
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
mov	byte ptr [rbx + 0x1b2], 0
xor	edx, edx
mov	word ptr [rbx + 0x1b0], ax
lea	rax, [rbp + 0x28]
pxor	xmm0, xmm0
mov	rcx, rsi
mov	qword ptr [rbx + 0x1a8], 0
mov	qword ptr [rbx], rbp
mov	qword ptr [rbx + 0xd0], rax
movups	xmmword ptr [rbx + 0x1b8], xmm0
movups	xmmword ptr [rbx + 0x1c8], xmm0
call	0x1400abc50
call	0x1400abc50
lea	rax, [rip + 0x36ca9]
lea	rdi, [rbx + 8]
mov	qword ptr [rbx], rax
add	rax, 0x28
mov	rcx, rdi
mov	qword ptr [rbx + 0xd0], rax
call	0x140083e50
call	0x140083e50
mov	rdx, rdi
mov	rcx, rsi
call	0x1400abc50
call	0x1400abc50
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	r12, rax
mov	rax, qword ptr [rip + 0x2f1c6]
mov	rcx, rsi
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, r12
call	0x14000c940
call	0x14000c940
mov	rcx, rdi
mov	r12, rax
call	0x140084240
call	0x140084240
mov	qword ptr [rbx], rbp
jmp	0x14008ffa3
jmp	0x14008ffa3
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rsi, qword ptr [rax - 0x18]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx + 0x10]
add	rsi, rcx
mov	rbx, rcx
mov	rbp, rdx
mov	rcx, rsi
mov	rdi, r8
mov	qword ptr [rsi], rax
mov	rax, qword ptr [r8]
mov	r12, qword ptr [rax - 0x18]
add	r12, r8
mov	rdx, r12
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [r12 + 0xd8]
mov	qword ptr [r12 + 0xd8], 0
mov	qword ptr [rsi + 0xe8], 0
mov	rdx, qword ptr [rbp + 0x18]
mov	qword ptr [rsi + 0xd8], rax
movzx	eax, word ptr [r12 + 0xe0]
mov	word ptr [rsi + 0xe0], ax
movzx	eax, byte ptr [r12 + 0xe2]
mov	byte ptr [rsi + 0xe2], al
mov	rax, qword ptr [rbp]
lea	rsi, [rbx + 8]
mov	rcx, rsi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
lea	rdx, [rdi + 8]
call	0x140083cc0
call	0x140083cc0
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax + 0xe8], rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rax
mov	rax, qword ptr [rbp + 8]
mov	rdx, qword ptr [rbp + 0x10]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rcx, qword ptr [rax - 0x18]
mov	rsi, rdx
mov	rax, qword ptr [rdx + 0x10]
xor	edx, edx
mov	rbp, r8
mov	r12d, r9d
add	rcx, rbx
lea	rdi, [rbx + 8]
mov	qword ptr [rcx], rax
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x140083e50
call	0x140083e50
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
or	r8d, 0x10
call	0x140082370
call	0x140082370
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x140090170
je	0x140090170
xor	edx, edx
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	rcx, rbp
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rcx, qword ptr [rax - 0x18]
mov	rsi, rdx
mov	rax, qword ptr [rdx + 0x10]
xor	edx, edx
mov	rbp, r8
mov	r12d, r9d
add	rcx, rbx
lea	rdi, [rbx + 8]
mov	qword ptr [rcx], rax
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x140083e50
call	0x140083e50
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
mov	r8d, r12d
mov	rdx, rbp
mov	rcx, rdi
or	r8d, 0x10
call	0x140082490
call	0x140082490
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x140090250
je	0x140090250
xor	edx, edx
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	rcx, rbp
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rdx + 8]
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rcx, qword ptr [rax - 0x18]
mov	rsi, rdx
mov	rax, qword ptr [rdx + 0x10]
xor	edx, edx
mov	r12, r8
mov	ebp, r9d
add	rcx, rbx
lea	rdi, [rbx + 8]
mov	qword ptr [rcx], rax
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x140083e50
call	0x140083e50
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
mov	r8d, ebp
mov	rdx, qword ptr [r12]
mov	rcx, rdi
or	r8d, 0x10
call	0x140082370
call	0x140082370
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx - 0x18]
add	rcx, rbx
test	rax, rax
je	0x140090330
je	0x140090330
xor	edx, edx
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
mov	edx, dword ptr [rcx + 0x20]
or	edx, 4
call	0x1400abe20
call	0x1400abe20
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	rcx, rbp
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx + 8]
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	rcx, qword ptr [rax - 0x18]
mov	rsi, rdx
mov	rax, qword ptr [rdx + 0x10]
xor	edx, edx
lea	rdi, [rbx + 8]
add	rcx, rbx
mov	qword ptr [rcx], rax
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rsi + 0x18]
mov	rcx, rdi
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x140083e50
call	0x140083e50
mov	rax, qword ptr [rbx]
mov	rdx, rdi
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abc50
call	0x1400abc50
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rcx, rdi
mov	rbp, rax
call	0x140084240
call	0x140084240
mov	rax, qword ptr [rsi + 8]
mov	rdx, qword ptr [rsi + 0x10]
mov	rcx, rbp
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbx + rax], rdx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x36834]
lea	rdx, [rip + 0x36805]
movq	xmm0, rdx
mov	qword ptr [rcx + 0xd0], rax
lea	rax, [rip + 0x3642a]
mov	rbx, rcx
lea	rcx, [rcx + 8]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x58]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x2ead1]
lea	rcx, [rbx + 0x40]
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0x2fce1]
lea	rcx, [rbx + 0xd0]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0x2ecf8]
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14009043f
jmp	0x14009043f
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x36784]
lea	rdx, [rip + 0x36755]
movq	xmm0, rdx
mov	qword ptr [rcx + 0xd0], rax
lea	rax, [rip + 0x3637a]
mov	rbx, rcx
lea	rcx, [rcx + 8]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x58]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x2ea21]
lea	rcx, [rbx + 0x40]
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0x2fc31]
lea	rcx, [rbx + 0xd0]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0x2ec48]
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
add	rsp, 0x20
pop	rbx
jmp	0x1400aa330
jmp	0x1400aa330
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400904ef
jmp	0x1400904ef
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rdx]
mov	rsi, rdx
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rbx, rcx
mov	rdx, qword ptr [rdx + 0x18]
lea	rcx, [rcx + 8]
mov	qword ptr [rcx + rax - 8], rdx
lea	rax, [rip + 0x362d6]
mov	qword ptr [rcx], rax
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x58]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0x2e98e]
lea	rcx, [rbx + 0x40]
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x14009bf30
call	0x14009bf30
mov	rax, qword ptr [rsi + 8]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rax - 0x18]
mov	rdx, qword ptr [rsi + 0x10]
mov	qword ptr [rbx + rax], rdx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x140090582
jmp	0x140090582
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rsi, qword ptr [rax - 0x18]
mov	rax, qword ptr [rdx]
mov	rbx, qword ptr [rax - 0x18]
add	rsi, rcx
mov	rbp, rcx
mov	rdi, rdx
mov	rcx, rsi
add	rbx, rdx
mov	rdx, rbx
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400abb50
call	0x1400abb50
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rsi + 0xd8]
mov	rdx, qword ptr [rbx + 0xd8]
lea	rcx, [rbp + 8]
mov	qword ptr [rsi + 0xd8], rdx
movzx	edx, word ptr [rbx + 0xe0]
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, word ptr [rsi + 0xe0]
mov	word ptr [rsi + 0xe0], dx
movzx	edx, byte ptr [rbx + 0xe2]
mov	word ptr [rbx + 0xe0], ax
movzx	eax, byte ptr [rsi + 0xe2]
mov	byte ptr [rsi + 0xe2], dl
lea	rdx, [rdi + 8]
mov	byte ptr [rbx + 0xe2], al
call	0x1400842e0
call	0x1400842e0
mov	rax, rbp
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rdx
mov	rdx, r8
mov	rbx, rcx
call	0x1400a86d0
call	0x1400a86d0
lea	rax, [rip + 0x365b4]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400906c8
jne	0x1400906c8
cmp	byte ptr [rsi + 1], 0
jne	0x1400906c8
jne	0x1400906c8
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
lea	rdx, [rip + 0x2998d]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400906ba
je	0x1400906ba
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a8790
call	0x1400a8790
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, rdx
mov	rdx, r8
mov	rbx, rcx
mov	rsi, qword ptr [rax]
call	0x1400a86d0
call	0x1400a86d0
mov	rax, qword ptr [rip + 0x2e7a1]
add	rax, 0x10
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140090760
jne	0x140090760
cmp	byte ptr [rsi + 1], 0
jne	0x140090760
jne	0x140090760
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x291f7]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140090751
je	0x140090751
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a8790
call	0x1400a8790
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, rdx
mov	rdx, r8
mov	rbx, rcx
mov	rsi, qword ptr [rax]
call	0x1400a86d0
call	0x1400a86d0
lea	rax, [rip + 0x36491]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400907e8
jne	0x1400907e8
cmp	byte ptr [rsi + 1], 0
jne	0x1400907e8
jne	0x1400907e8
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x2986d]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400907dd
je	0x1400907dd
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a8790
call	0x1400a8790
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rdx
mov	rdx, r8
mov	rbx, rcx
call	0x1400a86d0
call	0x1400a86d0
lea	rax, [rip + 0x36404]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140090878
jne	0x140090878
cmp	byte ptr [rsi + 1], 0
jne	0x140090878
jne	0x140090878
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
lea	rdx, [rip + 0x297dd]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x14009086a
je	0x14009086a
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a8790
call	0x1400a8790
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, rdx
mov	rdx, r8
mov	rbx, rcx
mov	rsi, qword ptr [rax]
call	0x1400a86d0
call	0x1400a86d0
mov	rax, qword ptr [rip + 0x2e5f1]
add	rax, 0x10
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140090910
jne	0x140090910
cmp	byte ptr [rsi + 1], 0
jne	0x140090910
jne	0x140090910
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x29047]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140090901
je	0x140090901
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a8790
call	0x1400a8790
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, rdx
mov	rdx, r8
mov	rbx, rcx
mov	rsi, qword ptr [rax]
call	0x1400a86d0
call	0x1400a86d0
lea	rax, [rip + 0x362e1]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140090998
jne	0x140090998
cmp	byte ptr [rsi + 1], 0
jne	0x140090998
jne	0x140090998
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x296bd]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x14009098d
je	0x14009098d
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a8790
call	0x1400a8790
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x36264]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400a8790
call	0x1400a8790
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x36239]
mov	qword ptr [rcx], rax
jmp	0x1400a8790
jmp	0x1400a8790
nop	
lea	rax, [rip + 0x36229]
mov	qword ptr [rcx], rax
jmp	0x1400a8790
jmp	0x1400a8790
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rdx
mov	rdx, r8
mov	rbx, rcx
call	0x1400a8830
call	0x1400a8830
lea	rax, [rip + 0x36264]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140090a78
jne	0x140090a78
cmp	byte ptr [rsi + 1], 0
jne	0x140090a78
jne	0x140090a78
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
lea	rdx, [rip + 0x29b8d]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140090a6a
je	0x140090a6a
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a88f0
call	0x1400a88f0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, rdx
mov	rdx, r8
mov	rbx, rcx
mov	rsi, qword ptr [rax]
call	0x1400a8830
call	0x1400a8830
mov	rax, qword ptr [rip + 0x2e401]
add	rax, 0x10
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140090b10
jne	0x140090b10
cmp	byte ptr [rsi + 1], 0
jne	0x140090b10
jne	0x140090b10
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x291d7]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140090b01
je	0x140090b01
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a88f0
call	0x1400a88f0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, rdx
mov	rdx, r8
mov	rbx, rcx
mov	rsi, qword ptr [rax]
call	0x1400a8830
call	0x1400a8830
lea	rax, [rip + 0x36141]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140090b98
jne	0x140090b98
cmp	byte ptr [rsi + 1], 0
jne	0x140090b98
jne	0x140090b98
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x29a6d]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140090b8d
je	0x140090b8d
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a88f0
call	0x1400a88f0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rdx
mov	rdx, r8
mov	rbx, rcx
call	0x1400a8830
call	0x1400a8830
lea	rax, [rip + 0x360b4]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140090c28
jne	0x140090c28
cmp	byte ptr [rsi + 1], 0
jne	0x140090c28
jne	0x140090c28
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
lea	rdx, [rip + 0x299dd]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140090c1a
je	0x140090c1a
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a88f0
call	0x1400a88f0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, rdx
mov	rdx, r8
mov	rbx, rcx
mov	rsi, qword ptr [rax]
call	0x1400a8830
call	0x1400a8830
mov	rax, qword ptr [rip + 0x2e251]
add	rax, 0x10
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140090cc0
jne	0x140090cc0
cmp	byte ptr [rsi + 1], 0
jne	0x140090cc0
jne	0x140090cc0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x29027]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140090cb1
je	0x140090cb1
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a88f0
call	0x1400a88f0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, rdx
mov	rdx, r8
mov	rbx, rcx
mov	rsi, qword ptr [rax]
call	0x1400a8830
call	0x1400a8830
lea	rax, [rip + 0x35f91]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140090d48
jne	0x140090d48
cmp	byte ptr [rsi + 1], 0
jne	0x140090d48
jne	0x140090d48
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x298bd]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140090d3d
je	0x140090d3d
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a88f0
call	0x1400a88f0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x35f14]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400a88f0
call	0x1400a88f0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x35ee9]
mov	qword ptr [rcx], rax
jmp	0x1400a88f0
jmp	0x1400a88f0
nop	
lea	rax, [rip + 0x35ed9]
mov	qword ptr [rcx], rax
jmp	0x1400a88f0
jmp	0x1400a88f0
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	rsi, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x37051]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x35efe]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140090e40
jne	0x140090e40
cmp	byte ptr [rsi + 1], 0
jne	0x140090e40
jne	0x140090e40
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x29215]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140090e30
je	0x140090e30
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a8ad0
call	0x1400a8ad0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x36fa1]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x35e4e]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140090ef0
jne	0x140090ef0
cmp	byte ptr [rsi + 1], 0
jne	0x140090ef0
jne	0x140090ef0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x29165]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140090ee0
je	0x140090ee0
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a8ad0
call	0x1400a8ad0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	rsi, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x36ef1]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x35d9e]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140090fa0
jne	0x140090fa0
cmp	byte ptr [rsi + 1], 0
jne	0x140090fa0
jne	0x140090fa0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x290b5]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140090f90
je	0x140090f90
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a8ad0
call	0x1400a8ad0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x36e41]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x35cee]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140091050
jne	0x140091050
cmp	byte ptr [rsi + 1], 0
jne	0x140091050
jne	0x140091050
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x29005]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140091040
je	0x140091040
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a8ad0
call	0x1400a8ad0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x36da4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x36d74]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x36d44]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	rsi, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x36d41]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x35bee]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140091190
jne	0x140091190
cmp	byte ptr [rsi + 1], 0
jne	0x140091190
jne	0x140091190
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x29475]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140091180
je	0x140091180
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a8c80
call	0x1400a8c80
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x36c91]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x35b3e]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140091240
jne	0x140091240
cmp	byte ptr [rsi + 1], 0
jne	0x140091240
jne	0x140091240
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x293c5]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140091230
je	0x140091230
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a8c80
call	0x1400a8c80
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	rsi, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x36be1]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x35a8e]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400912f0
jne	0x1400912f0
cmp	byte ptr [rsi + 1], 0
jne	0x1400912f0
jne	0x1400912f0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x29315]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400912e0
je	0x1400912e0
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a8c80
call	0x1400a8c80
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x36b31]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x359de]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400913a0
jne	0x1400913a0
cmp	byte ptr [rsi + 1], 0
jne	0x1400913a0
jne	0x1400913a0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x29265]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140091390
je	0x140091390
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a8c80
call	0x1400a8c80
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x36a94]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x36a64]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x36a34]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rip + 0x2da33]
add	rax, 0x10
mov	rbx, rdx
mov	qword ptr [rcx], rax
mov	rsi, rcx
mov	rdx, 0xffffffffffffffff
test	rbx, rbx
je	0x1400914c2
je	0x1400914c2
mov	rcx, rbx
call	0x140015a08
call	0x140015a08
lea	rdx, [rbx + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rbx
call	0x140072090
call	0x140072090
mov	qword ptr [rsi + 8], rax
mov	rax, qword ptr [rip + 0x2da26]
add	rax, 0x10
mov	qword ptr [rsi], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	rbx, rax
mov	rcx, rsi
call	0x1400ac440
call	0x1400ac440
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x2d9c3]
add	rax, 0x10
mov	r8, qword ptr [rdx + 8]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
mov	rbx, rcx
lea	rcx, [rcx + 8]
mov	rdx, rax
call	0x140078a90
call	0x140078a90
mov	rax, qword ptr [rip + 0x2d9cf]
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
lea	rax, [rip + 0x35503]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
lea	r8, [rax - 8]
test	edx, edx
js	0x1400915b0
js	0x1400915b0
mov	rdx, qword ptr [rip + 0x2d0a4]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x1400915c0
jne	0x1400915c0
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx + 8], rax
lea	rax, [rip + 0x357ff]
mov	qword ptr [rbx], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
jmp	0x140091596
jmp	0x140091596
nop	
lock add	dword ptr [r8], 1
jmp	0x140091596
jmp	0x140091596
mov	rsi, rax
mov	rcx, rbx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x357b4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14008c430
call	0x14008c430
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
lea	rax, [rip + 0x35454]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x2d00a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 8]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140091650
jne	0x140091650
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14009165e
jle	0x14009165e
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140091640
jg	0x140091640
sub	rcx, 0x18
lea	rdx, [rsp + 0x2f]
call	0x140072480
call	0x140072480
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, rcx
mov	rcx, qword ptr [rdx]
mov	r10, qword ptr [rcx + 0x20]
lea	rcx, [rip + 0x6cb]
cmp	r10, rcx
jne	0x1400916b0
jne	0x1400916b0
mov	qword ptr [rax], 0xffffffffffffffff
mov	dword ptr [rax + 8], 0
add	rsp, 0x38
ret	
ret	
nop	dword ptr [rax]
mov	ecx, dword ptr [rsp + 0x60]
mov	qword ptr [rsp + 0x40], rax
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rax
call	r10
call	r10
mov	rax, qword ptr [rsp + 0x40]
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
sub	rsp, 0x38
movdqu	xmm0, xmmword ptr [r8]
mov	rax, rcx
mov	rcx, qword ptr [rdx]
mov	r10, qword ptr [rcx + 0x28]
lea	rcx, [rip + 0x696]
cmp	r10, rcx
jne	0x140091708
jne	0x140091708
mov	qword ptr [rax], 0xffffffffffffffff
mov	dword ptr [rax + 8], 0
add	rsp, 0x38
ret	
ret	
nop	word ptr [rax + rax]
mov	qword ptr [rsp + 0x40], rax
mov	rcx, rax
lea	r8, [rsp + 0x20]
movups	xmmword ptr [rsp + 0x20], xmm0
call	r10
call	r10
mov	rax, qword ptr [rsp + 0x40]
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
add	qword ptr [rcx + 0x10], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
add	qword ptr [rcx + 0x28], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx + 8], rdx
mov	qword ptr [rcx + 0x10], r8
mov	qword ptr [rcx + 0x18], r9
ret	
ret	
nop	
nop	
nop	
movq	xmm0, rdx
mov	qword ptr [rcx + 0x30], r8
punpcklqdq	xmm0, xmm0
movups	xmmword ptr [rcx + 0x20], xmm0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	r8, qword ptr [rdx + 8]
mov	rax, rcx
mov	rcx, qword ptr [rcx + 8]
lea	rdi, [rsp + 0x28]
lea	rbx, [rdx + 0x38]
mov	qword ptr [rax + 8], r8
mov	r8, qword ptr [rdx + 0x10]
lea	rsi, [rax + 0x38]
mov	qword ptr [rdx + 8], rcx
mov	rcx, qword ptr [rax + 0x10]
mov	qword ptr [rax + 0x10], r8
mov	r8, qword ptr [rdx + 0x18]
mov	qword ptr [rdx + 0x10], rcx
mov	rcx, qword ptr [rax + 0x18]
mov	qword ptr [rax + 0x18], r8
mov	r8, qword ptr [rdx + 0x20]
mov	qword ptr [rdx + 0x18], rcx
mov	rcx, qword ptr [rax + 0x20]
mov	qword ptr [rax + 0x20], r8
mov	r8, qword ptr [rdx + 0x28]
mov	qword ptr [rdx + 0x20], rcx
mov	rcx, qword ptr [rax + 0x28]
mov	qword ptr [rax + 0x28], r8
mov	r8, qword ptr [rdx + 0x30]
mov	qword ptr [rdx + 0x28], rcx
mov	rcx, qword ptr [rax + 0x30]
mov	qword ptr [rax + 0x30], r8
mov	qword ptr [rdx + 0x30], rcx
mov	rdx, rsi
mov	rcx, rdi
call	0x14009be20
call	0x14009be20
mov	rdx, rbx
mov	rcx, rsi
call	0x14009bf90
call	0x14009bf90
mov	rdx, rdi
mov	rcx, rbx
call	0x14009bf90
call	0x14009bf90
mov	rcx, rdi
call	0x14009bf30
call	0x14009bf30
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movsxd	rdx, edx
add	qword ptr [rcx + 0x10], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movsxd	rdx, edx
add	qword ptr [rcx + 0x28], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140091880
jae	0x140091880
movzx	eax, byte ptr [rax]
ret	
ret	
nop	
mov	rax, qword ptr [rcx]
lea	r8, [rip + 0x696]
mov	rdx, qword ptr [rax + 0x48]
mov	eax, 0xffffffff
cmp	rdx, r8
je	0x14009187d
je	0x14009187d
jmp	rdx
jmp	rdx
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
jmp	qword ptr [rax + 0x40]
jmp	qword ptr [rax + 0x40]
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x28]
movzx	r8d, dl
cmp	rax, qword ptr [rcx + 0x30]
jae	0x1400918d0
jae	0x1400918d0
mov	byte ptr [rax], dl
add	qword ptr [rcx + 0x28], 1
mov	eax, r8d
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
lea	rdx, [rip + 0x536]
mov	rax, qword ptr [rax + 0x68]
cmp	rax, rdx
jne	0x1400918f0
jne	0x1400918f0
mov	r8d, 0xffffffff
jmp	0x1400918c5
jmp	0x1400918c5
nop	dword ptr [rax + rax]
mov	edx, r8d
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
jmp	qword ptr [rax + 0x60]
jmp	qword ptr [rax + 0x60]
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rdx, [rip + 0x604]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x48]
mov	rbx, rcx
cmp	rax, rdx
jne	0x140091940
jne	0x140091940
mov	edx, 0xffffffff
mov	eax, edx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
call	rax
call	rax
cmp	eax, -1
je	0x14009192b
je	0x14009192b
mov	rax, qword ptr [rbx + 0x10]
movzx	edx, byte ptr [rax]
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
mov	eax, edx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140091980
jae	0x140091980
movzx	edx, byte ptr [rax]
add	rax, 1
mov	qword ptr [rcx + 0x10], rax
mov	eax, edx
add	rsp, 0x38
ret	
ret	
mov	rax, qword ptr [rcx]
lea	r8, [rip - 0x7a]
mov	rdx, qword ptr [rax + 0x50]
cmp	rdx, r8
jne	0x1400919b0
jne	0x1400919b0
mov	rax, qword ptr [rax + 0x48]
lea	rdx, [rip + 0x582]
cmp	rax, rdx
jne	0x1400919c0
jne	0x1400919c0
mov	edx, 0xffffffff
jmp	0x140091979
jmp	0x140091979
nop	word ptr [rax + rax]
add	rsp, 0x38
jmp	rdx
jmp	rdx
nop	word ptr [rax + rax]
mov	qword ptr [rsp + 0x28], rcx
call	rax
call	rax
cmp	eax, -1
je	0x1400919a3
je	0x1400919a3
mov	rcx, qword ptr [rsp + 0x28]
mov	rax, qword ptr [rcx + 0x10]
jmp	0x14009196e
jmp	0x14009196e
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400919f8
jae	0x1400919f8
add	rax, 1
mov	qword ptr [rcx + 0x10], rax
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
jmp	qword ptr [rax + 0x50]
jmp	qword ptr [rax + 0x50]
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140091a18
jae	0x140091a18
add	rax, 1
mov	qword ptr [rcx + 0x10], rax
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
jmp	qword ptr [rax + 0x50]
jmp	qword ptr [rax + 0x50]
nop	
mov	rax, rcx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rcx + 0x10]
mov	rdx, qword ptr [rcx + 0x18]
cmp	rax, rdx
jae	0x140091a60
jae	0x140091a60
add	rax, 1
mov	qword ptr [rcx + 0x10], rax
cmp	rax, rdx
jae	0x140091a90
jae	0x140091a90
movzx	eax, byte ptr [rax]
add	rsp, 0x38
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [rcx]
lea	r8, [rip - 0x15a]
mov	rdx, qword ptr [rax + 0x50]
cmp	rdx, r8
jne	0x140091ab0
jne	0x140091ab0
mov	rax, qword ptr [rax + 0x48]
lea	rdx, [rip + 0x4a2]
cmp	rax, rdx
jne	0x140091ad0
jne	0x140091ad0
mov	eax, 0xffffffff
add	rsp, 0x38
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
lea	rdx, [rip + 0x486]
mov	rax, qword ptr [rax + 0x48]
cmp	rax, rdx
je	0x140091a83
je	0x140091a83
add	rsp, 0x38
jmp	rax
jmp	rax
nop	word ptr [rax + rax]
mov	qword ptr [rsp + 0x28], rcx
call	rdx
call	rdx
cmp	eax, -1
je	0x140091a83
je	0x140091a83
mov	rcx, qword ptr [rsp + 0x28]
mov	rax, qword ptr [rcx + 0x10]
mov	rdx, qword ptr [rcx + 0x18]
jmp	0x140091a49
jmp	0x140091a49
nop	
mov	qword ptr [rsp + 0x28], rcx
call	rax
call	rax
cmp	eax, -1
je	0x140091a83
je	0x140091a83
mov	rcx, qword ptr [rsp + 0x28]
mov	rax, qword ptr [rcx + 0x10]
mov	rdx, qword ptr [rcx + 0x18]
add	rax, 1
mov	qword ptr [rcx + 0x10], rax
jmp	0x140091a49
jmp	0x140091a49
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx + 0x10]
mov	rbx, rcx
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140091b20
jae	0x140091b20
add	rax, 1
mov	qword ptr [rcx + 0x10], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	rax, qword ptr [rcx]
lea	rcx, [rip - 0x21a]
mov	rdx, qword ptr [rax + 0x50]
cmp	rdx, rcx
jne	0x140091b60
jne	0x140091b60
mov	rax, qword ptr [rax + 0x48]
lea	rdx, [rip + 0x3e2]
cmp	rax, rdx
je	0x140091b1a
je	0x140091b1a
mov	rcx, rbx
call	rax
call	rax
cmp	eax, -1
je	0x140091b1a
je	0x140091b1a
add	qword ptr [rbx + 0x10], 1
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	rdx
jmp	rdx
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	edi, edi
mov	rsi, rcx
mov	r13, r8
mov	rcx, rdx
test	r8, r8
jle	0x140091bd0
jle	0x140091bd0
lea	rbp, [rip - 0x285]
lea	r12, [rip + 0x384]
nop	dword ptr [rax]
mov	rdx, qword ptr [rsi + 0x10]
mov	rbx, qword ptr [rsi + 0x18]
sub	rbx, rdx
je	0x140091be8
je	0x140091be8
mov	r14, r13
sub	r14, rdi
cmp	r14, rbx
jl	0x140091c30
jl	0x140091c30
mov	r8, rbx
add	rdi, rbx
call	0x140015998
call	0x140015998
add	qword ptr [rsi + 0x10], rbx
cmp	rdi, r13
jl	0x140091c60
jl	0x140091c60
mov	rax, rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	word ptr [rax + rax]
mov	rbx, rcx
mov	rax, qword ptr [rsi]
mov	rdx, qword ptr [rax + 0x50]
cmp	rdx, rbp
jne	0x140091c48
jne	0x140091c48
mov	rax, qword ptr [rax + 0x48]
cmp	rax, r12
je	0x140091bd0
je	0x140091bd0
mov	rcx, rsi
call	rax
call	rax
cmp	eax, -1
je	0x140091bd0
je	0x140091bd0
mov	rdx, qword ptr [rsi + 0x10]
movzx	eax, byte ptr [rdx]
add	rdx, 1
mov	qword ptr [rsi + 0x10], rdx
add	rdi, 1
mov	byte ptr [rbx], al
lea	rcx, [rbx + 1]
cmp	r13, rdi
jg	0x140091ba0
jg	0x140091ba0
jmp	0x140091bd0
jmp	0x140091bd0
nop	
mov	r8, r14
mov	rdi, r13
call	0x140015998
call	0x140015998
add	qword ptr [rsi + 0x10], r14
jmp	0x140091bd0
jmp	0x140091bd0
nop	dword ptr [rax]
mov	rcx, rsi
call	rdx
call	rdx
cmp	eax, -1
jne	0x140091c19
jne	0x140091c19
jmp	0x140091bd0
jmp	0x140091bd0
nop	word ptr [rax + rax]
add	rbx, rax
jmp	0x140091beb
jmp	0x140091beb
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	esi, esi
mov	rdi, rcx
mov	rbp, rdx
mov	r12, r8
test	r8, r8
jle	0x140091cc7
jle	0x140091cc7
lea	r14, [rip + 0x17b]
nop	dword ptr [rax]
mov	rcx, qword ptr [rdi + 0x28]
mov	rbx, qword ptr [rdi + 0x30]
sub	rbx, rcx
je	0x140091ce8
je	0x140091ce8
mov	r13, r12
sub	r13, rsi
cmp	r13, rbx
jl	0x140091d18
jl	0x140091d18
mov	r8, rbx
mov	rdx, rbp
add	rsi, rbx
call	0x140015998
call	0x140015998
add	qword ptr [rdi + 0x28], rbx
cmp	r12, rsi
jg	0x140091ce0
jg	0x140091ce0
mov	rax, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax]
add	rbp, rbx
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rdi]
movzx	edx, byte ptr [rbp]
mov	rax, qword ptr [rax + 0x68]
cmp	rax, r14
je	0x140091cc7
je	0x140091cc7
mov	rcx, rdi
call	rax
call	rax
cmp	eax, -1
je	0x140091cc7
je	0x140091cc7
add	rsi, 1
add	rbp, 1
cmp	r12, rsi
jg	0x140091c98
jg	0x140091c98
jmp	0x140091cc7
jmp	0x140091cc7
nop	dword ptr [rax]
mov	r8, r13
mov	rdx, rbp
mov	rsi, r12
call	0x140015998
call	0x140015998
add	qword ptr [rdi + 0x28], r13
jmp	0x140091cc7
jmp	0x140091cc7
nop	
nop	
nop	
nop	
lea	rdx, [rip - 0x507]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rdx
jne	0x140091d50
jne	0x140091d50
xor	eax, eax
ret	
ret	
nop	word ptr cs:[rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	qword ptr [rcx], 0xffffffffffffffff
mov	dword ptr [rcx + 8], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	qword ptr [rcx], 0xffffffffffffffff
mov	dword ptr [rcx + 8], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	qword ptr [rcx + 8], rax
jae	0x140091dc0
jae	0x140091dc0
lea	rdx, [rax - 1]
mov	qword ptr [rcx + 0x10], rdx
movzx	eax, byte ptr [rax - 1]
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx]
lea	rdx, [rip + 0xc6]
mov	r8, qword ptr [rax + 0x58]
mov	eax, 0xffffffff
cmp	r8, rdx
je	0x140091db6
je	0x140091db6
mov	edx, 0xffffffff
jmp	r8
jmp	r8
mov	rax, qword ptr [rcx + 0x18]
sub	rax, qword ptr [rcx + 0x10]
jne	0x140091dfd
jne	0x140091dfd
mov	rdx, qword ptr [rcx]
lea	r8, [rip + 0xdc]
mov	rdx, qword ptr [rdx + 0x38]
cmp	rdx, r8
jne	0x140091e00
jne	0x140091e00
ret	
ret	
nop	
jmp	rdx
jmp	rdx
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, 0xffffffff
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rdx + 0x38]
mov	rbx, rdx
mov	rsi, rcx
mov	rdi, r8
mov	rdx, rbp
call	0x14009be20
call	0x14009be20
mov	rax, qword ptr [rbx]
lea	rdx, [rip - 0x5f7]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x140091e70
jne	0x140091e70
mov	rdx, rdi
mov	rcx, rbp
call	0x14009bf90
call	0x14009bf90
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rdx, rdi
mov	rcx, rbx
call	rax
call	rax
jmp	0x140091e50
jmp	0x140091e50
mov	rbx, rax
mov	rcx, rsi
call	0x14009bf30
call	0x14009bf30
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
mov	eax, 0xffffffff
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rcx]
mov	r9, qword ptr [rcx + 0x18]
lea	rcx, [rip - 0x491]
cmp	r9, rcx
jne	0x140091ec0
jne	0x140091ec0
ret	
ret	
nop	word ptr [rax + rax]
mov	rcx, rax
jmp	r9
jmp	r9
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	qword ptr [rcx + 8], rax
jae	0x140091f00
jae	0x140091f00
cmp	byte ptr [rax - 1], dl
jne	0x140091f00
jne	0x140091f00
lea	rdx, [rax - 1]
mov	qword ptr [rcx + 0x10], rdx
movzx	eax, byte ptr [rax - 1]
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
lea	r9, [rip - 0x7a]
mov	r8, qword ptr [rax + 0x58]
mov	eax, 0xffffffff
cmp	r8, r9
je	0x140091efb
je	0x140091efb
movzx	edx, dl
jmp	r8
jmp	r8
nop	
nop	
mov	eax, 0xffffffff
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x34e99]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx + 8]
add	rcx, 0x38
add	rdx, 0x38
mov	qword ptr [rcx - 0x30], rax
mov	rax, qword ptr [rdx - 0x28]
mov	qword ptr [rcx - 0x28], rax
mov	rax, qword ptr [rdx - 0x20]
mov	qword ptr [rcx - 0x20], rax
mov	rax, qword ptr [rdx - 0x18]
mov	qword ptr [rcx - 0x18], rax
mov	rax, qword ptr [rdx - 0x10]
mov	qword ptr [rcx - 0x10], rax
mov	rax, qword ptr [rdx - 8]
mov	qword ptr [rcx - 8], rax
jmp	0x14009be20
jmp	0x14009be20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x34e49]
mov	qword ptr [rcx], rax
add	rcx, 0x38
mov	qword ptr [rcx - 0x30], 0
mov	qword ptr [rcx - 0x28], 0
mov	qword ptr [rcx - 0x20], 0
mov	qword ptr [rcx - 0x18], 0
mov	qword ptr [rcx - 0x10], 0
mov	qword ptr [rcx - 8], 0
jmp	0x14009be50
jmp	0x14009be50
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x34df9]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx + 8]
add	rcx, 0x38
add	rdx, 0x38
mov	qword ptr [rcx - 0x30], rax
mov	rax, qword ptr [rdx - 0x28]
mov	qword ptr [rcx - 0x28], rax
mov	rax, qword ptr [rdx - 0x20]
mov	qword ptr [rcx - 0x20], rax
mov	rax, qword ptr [rdx - 0x18]
mov	qword ptr [rcx - 0x18], rax
mov	rax, qword ptr [rdx - 0x10]
mov	qword ptr [rcx - 0x10], rax
mov	rax, qword ptr [rdx - 8]
mov	qword ptr [rcx - 8], rax
jmp	0x14009be20
jmp	0x14009be20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x34da9]
mov	qword ptr [rcx], rax
add	rcx, 0x38
mov	qword ptr [rcx - 0x30], 0
mov	qword ptr [rcx - 0x28], 0
mov	qword ptr [rcx - 0x20], 0
mov	qword ptr [rcx - 0x18], 0
mov	qword ptr [rcx - 0x10], 0
mov	qword ptr [rcx - 8], 0
jmp	0x14009be50
jmp	0x14009be50
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x34d54]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x38]
call	0x14009bf30
call	0x14009bf30
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x34d29]
mov	qword ptr [rcx], rax
add	rcx, 0x38
jmp	0x14009bf30
jmp	0x14009bf30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x34d09]
mov	qword ptr [rcx], rax
add	rcx, 0x38
jmp	0x14009bf30
jmp	0x14009bf30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
movdqu	xmm1, xmmword ptr [rdx + 0x18]
movdqu	xmm0, xmmword ptr [rdx + 0x28]
movdqu	xmm2, xmmword ptr [rdx + 8]
mov	rbx, rcx
movups	xmmword ptr [rcx + 8], xmm2
add	rdx, 0x38
lea	rcx, [rcx + 0x38]
movups	xmmword ptr [rcx - 0x20], xmm1
movups	xmmword ptr [rcx - 0x10], xmm0
call	0x14009bf90
call	0x14009bf90
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, rcx
mov	rcx, qword ptr [rdx]
mov	r10, qword ptr [rcx + 0x20]
lea	rcx, [rip + 0x6bb]
cmp	r10, rcx
jne	0x140092150
jne	0x140092150
mov	qword ptr [rax], 0xffffffffffffffff
mov	dword ptr [rax + 8], 0
add	rsp, 0x38
ret	
ret	
nop	dword ptr [rax]
mov	ecx, dword ptr [rsp + 0x60]
mov	qword ptr [rsp + 0x40], rax
mov	dword ptr [rsp + 0x20], ecx
mov	rcx, rax
call	r10
call	r10
mov	rax, qword ptr [rsp + 0x40]
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
sub	rsp, 0x38
movdqu	xmm0, xmmword ptr [r8]
mov	rax, rcx
mov	rcx, qword ptr [rdx]
mov	r10, qword ptr [rcx + 0x28]
lea	rcx, [rip + 0x686]
cmp	r10, rcx
jne	0x1400921a8
jne	0x1400921a8
mov	qword ptr [rax], 0xffffffffffffffff
mov	dword ptr [rax + 8], 0
add	rsp, 0x38
ret	
ret	
nop	word ptr [rax + rax]
mov	qword ptr [rsp + 0x40], rax
mov	rcx, rax
lea	r8, [rsp + 0x20]
movups	xmmword ptr [rsp + 0x20], xmm0
call	r10
call	r10
mov	rax, qword ptr [rsp + 0x40]
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
add	rdx, rdx
add	qword ptr [rcx + 0x10], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
add	rdx, rdx
add	qword ptr [rcx + 0x28], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx + 8], rdx
mov	qword ptr [rcx + 0x10], r8
mov	qword ptr [rcx + 0x18], r9
ret	
ret	
nop	
nop	
nop	
movq	xmm0, rdx
mov	qword ptr [rcx + 0x30], r8
punpcklqdq	xmm0, xmm0
movups	xmmword ptr [rcx + 0x20], xmm0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	r8, qword ptr [rdx + 8]
mov	rax, rcx
mov	rcx, qword ptr [rcx + 8]
lea	rdi, [rsp + 0x28]
lea	rbx, [rdx + 0x38]
mov	qword ptr [rax + 8], r8
mov	r8, qword ptr [rdx + 0x10]
lea	rsi, [rax + 0x38]
mov	qword ptr [rdx + 8], rcx
mov	rcx, qword ptr [rax + 0x10]
mov	qword ptr [rax + 0x10], r8
mov	r8, qword ptr [rdx + 0x18]
mov	qword ptr [rdx + 0x10], rcx
mov	rcx, qword ptr [rax + 0x18]
mov	qword ptr [rax + 0x18], r8
mov	r8, qword ptr [rdx + 0x20]
mov	qword ptr [rdx + 0x18], rcx
mov	rcx, qword ptr [rax + 0x20]
mov	qword ptr [rax + 0x20], r8
mov	r8, qword ptr [rdx + 0x28]
mov	qword ptr [rdx + 0x20], rcx
mov	rcx, qword ptr [rax + 0x28]
mov	qword ptr [rax + 0x28], r8
mov	r8, qword ptr [rdx + 0x30]
mov	qword ptr [rdx + 0x28], rcx
mov	rcx, qword ptr [rax + 0x30]
mov	qword ptr [rax + 0x30], r8
mov	qword ptr [rdx + 0x30], rcx
mov	rdx, rsi
mov	rcx, rdi
call	0x14009be20
call	0x14009be20
mov	rdx, rbx
mov	rcx, rsi
call	0x14009bf90
call	0x14009bf90
mov	rdx, rdi
mov	rcx, rbx
call	0x14009bf90
call	0x14009bf90
mov	rcx, rdi
call	0x14009bf30
call	0x14009bf30
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movsxd	rdx, edx
add	rdx, rdx
add	qword ptr [rcx + 0x10], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movsxd	rdx, edx
add	rdx, rdx
add	qword ptr [rcx + 0x28], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140092320
jae	0x140092320
movzx	eax, word ptr [rax]
ret	
ret	
nop	
mov	rax, qword ptr [rcx]
lea	r8, [rip + 0x686]
mov	rdx, qword ptr [rax + 0x48]
mov	eax, 0xffffffff
cmp	rdx, r8
je	0x14009231d
je	0x14009231d
jmp	rdx
jmp	rdx
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
jmp	qword ptr [rax + 0x40]
jmp	qword ptr [rax + 0x40]
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x28]
cmp	rax, qword ptr [rcx + 0x30]
jae	0x140092370
jae	0x140092370
mov	word ptr [rax], dx
add	rax, 2
mov	qword ptr [rcx + 0x28], rax
mov	eax, edx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
lea	r9, [rip + 0x526]
mov	r8, qword ptr [rax + 0x68]
mov	eax, 0xffffffff
cmp	r8, r9
je	0x140092367
je	0x140092367
movzx	edx, dx
jmp	r8
jmp	r8
nop	
nop	
mov	rax, qword ptr [rcx]
jmp	qword ptr [rax + 0x60]
jmp	qword ptr [rax + 0x60]
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rdx, [rip + 0x604]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x48]
mov	rbx, rcx
cmp	rax, rdx
jne	0x1400923d0
jne	0x1400923d0
mov	edx, 0xffffffff
mov	eax, edx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
call	rax
call	rax
cmp	ax, -1
je	0x1400923bb
je	0x1400923bb
mov	rax, qword ptr [rbx + 0x10]
movzx	edx, word ptr [rax]
add	rax, 2
mov	qword ptr [rbx + 0x10], rax
mov	eax, edx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140092410
jae	0x140092410
movzx	edx, word ptr [rax]
add	rax, 2
mov	qword ptr [rcx + 0x10], rax
mov	eax, edx
add	rsp, 0x38
ret	
ret	
mov	rax, qword ptr [rcx]
lea	r8, [rip - 0x7a]
mov	rdx, qword ptr [rax + 0x50]
cmp	rdx, r8
jne	0x140092440
jne	0x140092440
mov	rax, qword ptr [rax + 0x48]
lea	rdx, [rip + 0x582]
cmp	rax, rdx
jne	0x140092450
jne	0x140092450
mov	edx, 0xffffffff
jmp	0x140092409
jmp	0x140092409
nop	word ptr [rax + rax]
add	rsp, 0x38
jmp	rdx
jmp	rdx
nop	word ptr [rax + rax]
mov	qword ptr [rsp + 0x28], rcx
call	rax
call	rax
cmp	ax, -1
je	0x140092433
je	0x140092433
mov	rcx, qword ptr [rsp + 0x28]
mov	rax, qword ptr [rcx + 0x10]
jmp	0x1400923fe
jmp	0x1400923fe
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x140092488
jae	0x140092488
add	rax, 2
mov	qword ptr [rcx + 0x10], rax
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
jmp	qword ptr [rax + 0x50]
jmp	qword ptr [rax + 0x50]
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400924a8
jae	0x1400924a8
add	rax, 2
mov	qword ptr [rcx + 0x10], rax
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
jmp	qword ptr [rax + 0x50]
jmp	qword ptr [rax + 0x50]
nop	
mov	rax, rcx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rdx, qword ptr [rcx + 0x10]
cmp	rdx, qword ptr [rcx + 0x18]
jae	0x140092518
jae	0x140092518
movzx	eax, word ptr [rdx]
add	rdx, 2
mov	qword ptr [rcx + 0x10], rdx
cmp	ax, -1
je	0x14009250b
je	0x14009250b
mov	rax, qword ptr [rcx + 0x10]
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400924f8
jae	0x1400924f8
movzx	eax, word ptr [rax]
add	rsp, 0x38
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
lea	rdx, [rip + 0x4ae]
mov	rax, qword ptr [rax + 0x48]
cmp	rax, rdx
jne	0x140092560
jne	0x140092560
mov	eax, 0xffffffff
add	rsp, 0x38
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
lea	r8, [rip - 0x182]
mov	rdx, qword ptr [rax + 0x50]
cmp	rdx, r8
jne	0x140092570
jne	0x140092570
mov	rax, qword ptr [rax + 0x48]
lea	rdx, [rip + 0x47a]
cmp	rax, rdx
je	0x14009250b
je	0x14009250b
mov	qword ptr [rsp + 0x28], rcx
call	rax
call	rax
cmp	ax, -1
je	0x14009250b
je	0x14009250b
mov	rcx, qword ptr [rsp + 0x28]
mov	rdx, qword ptr [rcx + 0x10]
jmp	0x1400924ce
jmp	0x1400924ce
nop	word ptr cs:[rax + rax]
add	rsp, 0x38
jmp	rax
jmp	rax
nop	word ptr [rax + rax]
mov	qword ptr [rsp + 0x28], rcx
call	rdx
call	rdx
mov	rcx, qword ptr [rsp + 0x28]
jmp	0x1400924d9
jmp	0x1400924d9
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx + 0x10]
mov	rbx, rcx
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400925b0
jae	0x1400925b0
add	rax, 2
mov	qword ptr [rcx + 0x10], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	rax, qword ptr [rcx]
lea	rcx, [rip - 0x21a]
mov	rdx, qword ptr [rax + 0x50]
cmp	rdx, rcx
jne	0x1400925f0
jne	0x1400925f0
mov	rax, qword ptr [rax + 0x48]
lea	rdx, [rip + 0x3e2]
cmp	rax, rdx
je	0x1400925aa
je	0x1400925aa
mov	rcx, rbx
call	rax
call	rax
cmp	ax, -1
je	0x1400925aa
je	0x1400925aa
add	qword ptr [rbx + 0x10], 2
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	rdx
jmp	rdx
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
xor	esi, esi
mov	r12, rcx
mov	r13, r8
mov	rcx, rdx
test	r8, r8
jle	0x140092682
jle	0x140092682
lea	rdi, [rip - 0x287]
lea	rbp, [rip + 0x382]
nop	
mov	rbx, qword ptr [r12 + 0x18]
mov	rdx, qword ptr [r12 + 0x10]
mov	r14, rcx
cmp	rbx, rdx
je	0x14009267d
je	0x14009267d
sub	rbx, rdx
mov	rax, r13
sar	rbx, 1
sub	rax, rsi
cmp	rbx, rax
cmovg	rbx, rax
lea	r15, [rbx + rbx]
test	rbx, rbx
je	0x14009266e
je	0x14009266e
mov	r8, r15
call	0x140015998
call	0x140015998
mov	rdx, qword ptr [r12 + 0x10]
mov	rcx, r14
add	rdx, r15
add	rsi, rbx
lea	r14, [rcx + r15]
mov	qword ptr [r12 + 0x10], rdx
cmp	rsi, r13
jl	0x1400926a0
jl	0x1400926a0
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rax, qword ptr [r12]
mov	rdx, qword ptr [rax + 0x50]
cmp	rdx, rdi
jne	0x1400926f0
jne	0x1400926f0
mov	rax, qword ptr [rax + 0x48]
cmp	rax, rbp
je	0x140092682
je	0x140092682
mov	rcx, r12
call	rax
call	rax
cmp	ax, -1
je	0x140092682
je	0x140092682
mov	rdx, qword ptr [r12 + 0x10]
movzx	eax, word ptr [rdx]
add	rdx, 2
mov	qword ptr [r12 + 0x10], rdx
cmp	ax, -1
je	0x140092682
je	0x140092682
add	rsi, 1
mov	word ptr [r14], ax
lea	rcx, [r14 + 2]
cmp	r13, rsi
jg	0x140092630
jg	0x140092630
jmp	0x140092682
jmp	0x140092682
nop	
mov	rcx, r12
call	rdx
call	rdx
jmp	0x1400926d2
jmp	0x1400926d2
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	esi, esi
mov	r12, rcx
mov	rbp, rdx
mov	r13, r8
test	r8, r8
jle	0x140092776
jle	0x140092776
lea	rdi, [rip + 0x17b]
nop	dword ptr [rax]
mov	rbx, qword ptr [r12 + 0x30]
mov	rcx, qword ptr [r12 + 0x28]
cmp	rbx, rcx
je	0x140092771
je	0x140092771
sub	rbx, rcx
mov	rax, r13
sar	rbx, 1
sub	rax, rsi
cmp	rbx, rax
cmovg	rbx, rax
lea	r14, [rbx + rbx]
test	rbx, rbx
je	0x140092763
je	0x140092763
mov	r8, r14
mov	rdx, rbp
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [r12 + 0x28]
add	rcx, r14
add	rsi, rbx
add	rbp, r14
mov	qword ptr [r12 + 0x28], rcx
cmp	rsi, r13
jl	0x140092790
jl	0x140092790
mov	rax, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [r12]
movzx	edx, word ptr [rbp]
mov	rax, qword ptr [rax + 0x68]
cmp	rax, rdi
je	0x140092776
je	0x140092776
mov	rcx, r12
call	rax
call	rax
cmp	ax, -1
je	0x140092776
je	0x140092776
add	rsi, 1
add	rbp, 2
cmp	r13, rsi
jg	0x140092728
jg	0x140092728
jmp	0x140092776
jmp	0x140092776
nop	
lea	rdx, [rip - 0x4f7]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rdx
jne	0x1400927e0
jne	0x1400927e0
xor	eax, eax
ret	
ret	
nop	word ptr cs:[rax + rax]
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	qword ptr [rcx], 0xffffffffffffffff
mov	dword ptr [rcx + 8], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	qword ptr [rcx], 0xffffffffffffffff
mov	dword ptr [rcx + 8], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	qword ptr [rcx + 8], rax
jae	0x140092850
jae	0x140092850
lea	rdx, [rax - 2]
movzx	eax, word ptr [rax - 2]
mov	qword ptr [rcx + 0x10], rdx
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx]
lea	rdx, [rip + 0xc6]
mov	r8, qword ptr [rax + 0x58]
mov	eax, 0xffffffff
cmp	r8, rdx
je	0x140092846
je	0x140092846
mov	edx, 0xffff
jmp	r8
jmp	r8
mov	rax, qword ptr [rcx + 0x18]
mov	rdx, qword ptr [rcx + 0x10]
cmp	rax, rdx
je	0x140092888
je	0x140092888
sub	rax, rdx
sar	rax, 1
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
lea	r8, [rip + 0xce]
mov	rdx, qword ptr [rax + 0x38]
xor	eax, eax
cmp	rdx, r8
je	0x140092883
je	0x140092883
jmp	rdx
jmp	rdx
mov	eax, 0xffffffff
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rdx + 0x38]
mov	rbx, rdx
mov	rsi, rcx
mov	rdi, r8
mov	rdx, rbp
call	0x14009be20
call	0x14009be20
mov	rax, qword ptr [rbx]
lea	rdx, [rip - 0x5e7]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x140092900
jne	0x140092900
mov	rdx, rdi
mov	rcx, rbp
call	0x14009bf90
call	0x14009bf90
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rdx, rdi
mov	rcx, rbx
call	rax
call	rax
jmp	0x1400928e0
jmp	0x1400928e0
mov	rbx, rax
mov	rcx, rsi
call	0x14009bf30
call	0x14009bf30
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
mov	eax, 0xffffffff
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rcx]
mov	r9, qword ptr [rcx + 0x18]
lea	rcx, [rip - 0x491]
cmp	r9, rcx
jne	0x140092950
jne	0x140092950
ret	
ret	
nop	word ptr [rax + rax]
mov	rcx, rax
jmp	r9
jmp	r9
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0x10]
cmp	qword ptr [rcx + 8], rax
jae	0x140092990
jae	0x140092990
cmp	word ptr [rax - 2], dx
jne	0x140092990
jne	0x140092990
sub	rax, 2
mov	qword ptr [rcx + 0x10], rax
mov	eax, edx
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
lea	r9, [rip - 0x7a]
mov	r8, qword ptr [rax + 0x58]
mov	eax, 0xffffffff
cmp	r8, r9
je	0x14009298a
je	0x14009298a
movzx	edx, dx
jmp	r8
jmp	r8
nop	
nop	
mov	eax, 0xffffffff
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x34489]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx + 8]
add	rcx, 0x38
add	rdx, 0x38
mov	qword ptr [rcx - 0x30], rax
mov	rax, qword ptr [rdx - 0x28]
mov	qword ptr [rcx - 0x28], rax
mov	rax, qword ptr [rdx - 0x20]
mov	qword ptr [rcx - 0x20], rax
mov	rax, qword ptr [rdx - 0x18]
mov	qword ptr [rcx - 0x18], rax
mov	rax, qword ptr [rdx - 0x10]
mov	qword ptr [rcx - 0x10], rax
mov	rax, qword ptr [rdx - 8]
mov	qword ptr [rcx - 8], rax
jmp	0x14009be20
jmp	0x14009be20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x34439]
mov	qword ptr [rcx], rax
add	rcx, 0x38
mov	qword ptr [rcx - 0x30], 0
mov	qword ptr [rcx - 0x28], 0
mov	qword ptr [rcx - 0x20], 0
mov	qword ptr [rcx - 0x18], 0
mov	qword ptr [rcx - 0x10], 0
mov	qword ptr [rcx - 8], 0
jmp	0x14009be50
jmp	0x14009be50
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x343e9]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx + 8]
add	rcx, 0x38
add	rdx, 0x38
mov	qword ptr [rcx - 0x30], rax
mov	rax, qword ptr [rdx - 0x28]
mov	qword ptr [rcx - 0x28], rax
mov	rax, qword ptr [rdx - 0x20]
mov	qword ptr [rcx - 0x20], rax
mov	rax, qword ptr [rdx - 0x18]
mov	qword ptr [rcx - 0x18], rax
mov	rax, qword ptr [rdx - 0x10]
mov	qword ptr [rcx - 0x10], rax
mov	rax, qword ptr [rdx - 8]
mov	qword ptr [rcx - 8], rax
jmp	0x14009be20
jmp	0x14009be20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x34399]
mov	qword ptr [rcx], rax
add	rcx, 0x38
mov	qword ptr [rcx - 0x30], 0
mov	qword ptr [rcx - 0x28], 0
mov	qword ptr [rcx - 0x20], 0
mov	qword ptr [rcx - 0x18], 0
mov	qword ptr [rcx - 0x10], 0
mov	qword ptr [rcx - 8], 0
jmp	0x14009be50
jmp	0x14009be50
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x34344]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x38]
call	0x14009bf30
call	0x14009bf30
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x34319]
mov	qword ptr [rcx], rax
add	rcx, 0x38
jmp	0x14009bf30
jmp	0x14009bf30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x342f9]
mov	qword ptr [rcx], rax
add	rcx, 0x38
jmp	0x14009bf30
jmp	0x14009bf30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
movdqu	xmm1, xmmword ptr [rdx + 0x18]
movdqu	xmm0, xmmword ptr [rdx + 0x28]
movdqu	xmm2, xmmword ptr [rdx + 8]
mov	rbx, rcx
movups	xmmword ptr [rcx + 8], xmm2
add	rdx, 0x38
lea	rcx, [rcx + 0x38]
movups	xmmword ptr [rcx - 0x20], xmm1
movups	xmmword ptr [rcx - 0x10], xmm0
call	0x14009bf90
call	0x14009bf90
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	rsi, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x35521]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x342ee]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140092c00
jne	0x140092c00
cmp	byte ptr [rsi + 1], 0
jne	0x140092c00
jne	0x140092c00
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x27455]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140092bf0
je	0x140092bf0
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400aa530
call	0x1400aa530
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
jmp	0x140092bb0
jmp	0x140092bb0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	rsi, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x35461]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x3422e]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140092cc0
jne	0x140092cc0
cmp	byte ptr [rsi + 1], 0
jne	0x140092cc0
jne	0x140092cc0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x27395]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140092cb0
je	0x140092cb0
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400aa530
call	0x1400aa530
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
jmp	0x140092bb0
jmp	0x140092bb0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x353b4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x35384]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x35354]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	rsi, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x35351]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x3411e]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140092e10
jne	0x140092e10
cmp	byte ptr [rsi + 1], 0
jne	0x140092e10
jne	0x140092e10
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x277f5]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140092e00
je	0x140092e00
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400aa700
call	0x1400aa700
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
jmp	0x140092dc0
jmp	0x140092dc0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	rsi, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x35291]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x3405e]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140092ed0
jne	0x140092ed0
cmp	byte ptr [rsi + 1], 0
jne	0x140092ed0
jne	0x140092ed0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x27735]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140092ec0
je	0x140092ec0
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400aa700
call	0x1400aa700
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
jmp	0x140092dc0
jmp	0x140092dc0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x351e4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x351b4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x35184]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x35177]
mov	qword ptr [rcx], rax
call	0x1400aa730
call	0x1400aa730
lea	rax, [rip + 0x33f48]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140093020
jne	0x140093020
cmp	byte ptr [rsi + 1], 0
jne	0x140093020
jne	0x140093020
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
lea	rdx, [rip + 0x27035]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140093016
je	0x140093016
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
mov	rcx, rbx
call	0x1400aa730
call	0x1400aa730
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400aaa60
call	0x1400aaa60
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x350b7]
mov	qword ptr [rcx], rax
call	0x1400aa730
call	0x1400aa730
lea	rax, [rip + 0x33e88]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400930e0
jne	0x1400930e0
cmp	byte ptr [rsi + 1], 0
jne	0x1400930e0
jne	0x1400930e0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
lea	rdx, [rip + 0x26f75]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400930d6
je	0x1400930d6
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
mov	rcx, rbx
call	0x1400aa730
call	0x1400aa730
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400aaa60
call	0x1400aaa60
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x34ff7]
mov	qword ptr [rcx], rax
call	0x1400aa730
call	0x1400aa730
lea	rax, [rip + 0x33dc8]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400931a0
jne	0x1400931a0
cmp	byte ptr [rsi + 1], 0
jne	0x1400931a0
jne	0x1400931a0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
lea	rdx, [rip + 0x26eb5]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140093196
je	0x140093196
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
mov	rcx, rbx
call	0x1400aa730
call	0x1400aa730
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400aaa60
call	0x1400aaa60
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x34f37]
mov	qword ptr [rcx], rax
call	0x1400aa730
call	0x1400aa730
lea	rax, [rip + 0x33d08]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140093260
jne	0x140093260
cmp	byte ptr [rsi + 1], 0
jne	0x140093260
jne	0x140093260
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
lea	rdx, [rip + 0x26df5]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140093256
je	0x140093256
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
mov	rcx, rbx
call	0x1400aa730
call	0x1400aa730
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400aaa60
call	0x1400aaa60
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x33c74]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400aaa60
call	0x1400aaa60
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x33c49]
mov	qword ptr [rcx], rax
jmp	0x1400aaa60
jmp	0x1400aaa60
nop	
lea	rax, [rip + 0x33c39]
mov	qword ptr [rcx], rax
jmp	0x1400aaa60
jmp	0x1400aaa60
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x34e77]
mov	qword ptr [rcx], rax
call	0x1400aaaf0
call	0x1400aaaf0
lea	rax, [rip + 0x33c48]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140093370
jne	0x140093370
cmp	byte ptr [rsi + 1], 0
jne	0x140093370
jne	0x140093370
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
lea	rdx, [rip + 0x27295]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140093366
je	0x140093366
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
mov	rcx, rbx
call	0x1400aaaf0
call	0x1400aaaf0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400aae20
call	0x1400aae20
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x34db7]
mov	qword ptr [rcx], rax
call	0x1400aaaf0
call	0x1400aaaf0
lea	rax, [rip + 0x33b88]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140093430
jne	0x140093430
cmp	byte ptr [rsi + 1], 0
jne	0x140093430
jne	0x140093430
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
lea	rdx, [rip + 0x271d5]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140093426
je	0x140093426
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
mov	rcx, rbx
call	0x1400aaaf0
call	0x1400aaaf0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400aae20
call	0x1400aae20
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x34cf7]
mov	qword ptr [rcx], rax
call	0x1400aaaf0
call	0x1400aaaf0
lea	rax, [rip + 0x33ac8]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400934f0
jne	0x1400934f0
cmp	byte ptr [rsi + 1], 0
jne	0x1400934f0
jne	0x1400934f0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
lea	rdx, [rip + 0x27115]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400934e6
je	0x1400934e6
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
mov	rcx, rbx
call	0x1400aaaf0
call	0x1400aaaf0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400aae20
call	0x1400aae20
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x34c37]
mov	qword ptr [rcx], rax
call	0x1400aaaf0
call	0x1400aaaf0
lea	rax, [rip + 0x33a08]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400935b0
jne	0x1400935b0
cmp	byte ptr [rsi + 1], 0
jne	0x1400935b0
jne	0x1400935b0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
lea	rdx, [rip + 0x27055]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400935a6
je	0x1400935a6
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
mov	rcx, rbx
call	0x1400aaaf0
call	0x1400aaaf0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400aae20
call	0x1400aae20
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x33974]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400aae20
call	0x1400aae20
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x33949]
mov	qword ptr [rcx], rax
jmp	0x1400aae20
jmp	0x1400aae20
nop	
lea	rax, [rip + 0x33939]
mov	qword ptr [rcx], rax
jmp	0x1400aae20
jmp	0x1400aae20
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x3396e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x3394e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x3392e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x3390e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x34b14]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x34ae9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x34ad9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x338ee]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x338ce]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x338ae]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x3388e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x34a94]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x34a69]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x34a59]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x3386e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
mov	rax, qword ptr [rip + 0x2b6ee]
add	rax, 0x10
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x3382e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x3380e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
mov	rax, qword ptr [rip + 0x2b68e]
add	rax, 0x10
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x337ce]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x349d4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x349a9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x34999]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x3378e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
mov	rax, qword ptr [rip + 0x2b5ee]
add	rax, 0x10
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x3374e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x3372e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
mov	rax, qword ptr [rip + 0x2b58e]
add	rax, 0x10
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x336ee]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x348f4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x348c9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x348b9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rip + 0x2b493]
add	rax, 0x10
mov	rbx, rdx
mov	qword ptr [rcx], rax
mov	rsi, rcx
mov	rdx, 0xffffffffffffffff
test	rbx, rbx
je	0x140093a62
je	0x140093a62
mov	rcx, rbx
call	0x140015a08
call	0x140015a08
lea	rdx, [rbx + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rbx
call	0x140072090
call	0x140072090
mov	qword ptr [rsi + 8], rax
mov	rax, qword ptr [rip + 0x2b4d6]
add	rax, 0x10
mov	qword ptr [rsi], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	rbx, rax
mov	rcx, rsi
call	0x1400ac440
call	0x1400ac440
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x2b423]
add	rax, 0x10
mov	r8, qword ptr [rdx + 8]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
mov	rbx, rcx
lea	rcx, [rcx + 8]
mov	rdx, rax
call	0x140078a90
call	0x140078a90
mov	rax, qword ptr [rip + 0x2b47f]
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
lea	rax, [rip + 0x32f63]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
lea	r8, [rax - 8]
test	edx, edx
js	0x140093b50
js	0x140093b50
mov	rdx, qword ptr [rip + 0x2ab04]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x140093b60
jne	0x140093b60
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx + 8], rax
lea	rax, [rip + 0x335af]
mov	qword ptr [rbx], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
jmp	0x140093b36
jmp	0x140093b36
nop	
lock add	dword ptr [r8], 1
jmp	0x140093b36
jmp	0x140093b36
mov	rsi, rax
mov	rcx, rbx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x33564]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14008c430
call	0x14008c430
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
lea	rax, [rip + 0x32eb4]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x2aa6a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 8]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140093bf0
jne	0x140093bf0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140093bfe
jle	0x140093bfe
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140093be0
jg	0x140093be0
sub	rcx, 0x18
lea	rdx, [rsp + 0x2f]
call	0x140072480
call	0x140072480
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
mov	rbx, rcx
lea	rcx, [rip + 0x23966]
mov	r13, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [r13]
mov	rax, qword ptr [rax + 8]
mov	rsi, qword ptr [rax + rdx*8]
test	rsi, rsi
je	0x140094039
je	0x140094039
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x3c7f4]
mov	rax, qword ptr [rax + 0x20]
cmp	rax, rdx
jne	0x140093ff8
jne	0x140093ff8
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rdi, qword ptr [rax + 0x10]
test	rdi, rdi
je	0x140093c91
je	0x140093c91
mov	rcx, rdi
call	0x140015a08
call	0x140015a08
lea	rdx, [rdi + rax]
lea	r8, [rsp + 0x38]
mov	rcx, rdi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rsp + 0x28], rax
mov	rcx, qword ptr [rax - 0x18]
mov	qword ptr [rbx + 0x18], rcx
call	0x1400b2c00
call	0x1400b2c00
mov	r8, qword ptr [rbx + 0x18]
lea	rcx, [rsp + 0x28]
xor	r9d, r9d
mov	rdx, rax
mov	rdi, rax
call	0x14001b700
call	0x14001b700
xor	eax, eax
cmp	qword ptr [rbx + 0x18], 0
jne	0x140093f08
jne	0x140093f08
mov	byte ptr [rbx + 0x20], al
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x3c821]
mov	rax, qword ptr [rax + 0x28]
cmp	rax, rdx
jne	0x140093fc8
jne	0x140093fc8
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rbp, qword ptr [rax + 0x28]
test	rbp, rbp
je	0x140093d0f
je	0x140093d0f
mov	rcx, rbp
call	0x140015a08
call	0x140015a08
lea	rdx, [rbp + rax]
lea	r8, [rsp + 0x26]
mov	rcx, rbp
call	0x140071f50
call	0x140071f50
mov	qword ptr [rsp + 0x30], rax
mov	rcx, qword ptr [rax - 0x18]
mov	qword ptr [rbx + 0x30], rcx
call	0x1400b2c00
call	0x1400b2c00
mov	r8, qword ptr [rbx + 0x30]
lea	rcx, [rsp + 0x30]
xor	r9d, r9d
mov	rdx, rax
mov	r12, rax
call	0x14001b700
call	0x14001b700
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x3c83f]
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rdx
jne	0x140093fe0
jne	0x140093fe0
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rbp, qword ptr [rax + 0x38]
test	rbp, rbp
je	0x140093d7d
je	0x140093d7d
mov	rcx, rbp
call	0x140015a08
call	0x140015a08
lea	rdx, [rbp + rax]
lea	r8, [rsp + 0x27]
mov	rcx, rbp
call	0x140071f50
call	0x140071f50
mov	qword ptr [rsp + 0x38], rax
mov	rcx, qword ptr [rax - 0x18]
mov	qword ptr [rbx + 0x40], rcx
call	0x1400b2c00
call	0x1400b2c00
lea	r14, [rsp + 0x38]
mov	r8, qword ptr [rbx + 0x40]
xor	r9d, r9d
mov	rdx, rax
mov	rcx, r14
mov	rbp, rax
call	0x14001b700
call	0x14001b700
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x3c800]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x140094010
jne	0x140094010
mov	rax, qword ptr [rsi + 0x10]
movzx	eax, byte ptr [rax + 0x48]
mov	byte ptr [rbx + 0x48], al
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x3c812]
mov	rax, qword ptr [rax + 0x18]
cmp	rax, rdx
jne	0x140093fb8
jne	0x140093fb8
mov	rax, qword ptr [rsi + 0x10]
movzx	eax, byte ptr [rax + 0x49]
mov	byte ptr [rbx + 0x49], al
mov	rcx, qword ptr [rip + 0x2aacf]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [r13]
mov	rax, qword ptr [rax + 8]
mov	rsi, qword ptr [rax + rdx*8]
test	rsi, rsi
je	0x140094034
je	0x140094034
mov	rax, qword ptr [rip + 0x2a93b]
lea	r9, [rbx + 0x4a]
mov	rcx, rsi
mov	rdx, qword ptr [rax]
lea	r8, [rdx + 0x24]
call	0x140022330
call	0x140022330
mov	rax, qword ptr [rip + 0x2a911]
lea	r15, [rbx + 0x6e]
mov	r13, qword ptr [rax]
movzx	eax, byte ptr [rsi + 0x38]
cmp	al, 1
je	0x140093f98
je	0x140093f98
test	al, al
je	0x140093f88
je	0x140093f88
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x719f4]
mov	rax, qword ptr [rax + 0x38]
cmp	rax, rdx
jne	0x140094020
jne	0x140094020
movdqu	xmm0, xmmword ptr [r13]
movups	xmmword ptr [rbx + 0x6e], xmm0
movdqu	xmm1, xmmword ptr [r13 + 0xa]
movups	xmmword ptr [r15 + 0xa], xmm1
mov	qword ptr [rbx + 0x10], rdi
mov	rcx, qword ptr [rsp + 0x38]
mov	qword ptr [rbx + 0x28], r12
mov	qword ptr [rbx + 0x38], rbp
mov	byte ptr [rbx + 0x88], 1
mov	rbx, qword ptr [rip + 0x2a78b]
mov	r8d, dword ptr [rbx]
test	r8d, r8d
jne	0x140093f60
jne	0x140093f60
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140093f72
jle	0x140093f72
mov	edx, dword ptr [rbx]
mov	rcx, qword ptr [rsp + 0x30]
test	edx, edx
jne	0x140093f40
jne	0x140093f40
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140093f4e
jle	0x140093f4e
mov	eax, dword ptr [rbx]
mov	rcx, qword ptr [rsp + 0x28]
test	eax, eax
jne	0x140093f20
jne	0x140093f20
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140093f2e
jle	0x140093f2e
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rdi]
sub	eax, 1
cmp	al, 0x7d
setbe	al
jmp	0x140093cd4
jmp	0x140093cd4
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140093ef2
jg	0x140093ef2
sub	rcx, 0x18
mov	rdx, r14
call	0x140072480
call	0x140072480
jmp	0x140093ef2
jmp	0x140093ef2
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140093eda
jg	0x140093eda
sub	rcx, 0x18
mov	rdx, r14
call	0x140072480
call	0x140072480
jmp	0x140093eda
jmp	0x140093eda
nop	
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140093ec2
jg	0x140093ec2
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x140093ec2
jmp	0x140093ec2
nop	dword ptr [rax]
mov	rcx, rsi
call	0x140021cb0
call	0x140021cb0
jmp	0x140093e5a
jmp	0x140093e5a
nop	dword ptr [rax]
movdqu	xmm2, xmmword ptr [r13]
movups	xmmword ptr [rbx + 0x6e], xmm2
movdqu	xmm3, xmmword ptr [r13 + 0xa]
movups	xmmword ptr [r15 + 0xa], xmm3
jmp	0x140093e86
jmp	0x140093e86
nop	word ptr [rax + rax]
mov	rcx, rsi
call	rax
call	rax
jmp	0x140093df7
jmp	0x140093df7
nop	word ptr [rax + rax]
lea	rcx, [rsp + 0x30]
mov	rdx, rsi
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x30]
jmp	0x140093d21
jmp	0x140093d21
nop	dword ptr [rax]
lea	rcx, [rsp + 0x38]
mov	rdx, rsi
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x38]
jmp	0x140093d8f
jmp	0x140093d8f
nop	dword ptr [rax]
lea	rcx, [rsp + 0x28]
mov	rdx, rsi
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x28]
jmp	0x140093ca3
jmp	0x140093ca3
nop	dword ptr [rax]
mov	rcx, rsi
call	rax
call	rax
jmp	0x140093dd5
jmp	0x140093dd5
nop	word ptr [rax + rax]
mov	r9, r15
lea	r8, [r13 + 0x1a]
mov	rdx, r13
mov	rcx, rsi
call	rax
call	rax
jmp	0x140093e86
jmp	0x140093e86
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
mov	rbx, rax
xor	ebp, ebp
xor	r12d, r12d
jmp	0x140094060
jmp	0x140094060
mov	rbx, rax
xor	ebp, ebp
mov	rax, qword ptr [rsp + 0x30]
lea	rdx, [rsp + 0x26]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rax, qword ptr [rsp + 0x28]
lea	rdx, [rsp + 0x25]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x1400b2d80
call	0x1400b2d80
test	rdi, rdi
je	0x140094088
je	0x140094088
mov	rcx, rdi
call	0x1400b2bd0
call	0x1400b2bd0
test	r12, r12
je	0x140094095
je	0x140094095
mov	rcx, r12
call	0x1400b2bd0
call	0x1400b2bd0
test	rbp, rbp
je	0x1400940c6
je	0x1400940c6
mov	rcx, rbp
call	0x1400b2bd0
call	0x1400b2bd0
jmp	0x1400940c6
jmp	0x1400940c6
mov	rbx, rax
xor	ebp, ebp
xor	r12d, r12d
jmp	0x14009404d
jmp	0x14009404d
jmp	0x140094048
jmp	0x140094048
jmp	0x14009403e
jmp	0x14009403e
mov	rbx, rax
xor	ebp, ebp
xor	r12d, r12d
xor	edi, edi
jmp	0x140094060
jmp	0x140094060
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b3540
call	0x1400b3540
jmp	0x140094048
jmp	0x140094048
jmp	0x14009403e
jmp	0x14009403e
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x38]
lea	rdx, [rsp + 0x27]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
jmp	0x14009404d
jmp	0x14009404d
mov	rbx, rax
xor	ebp, ebp
jmp	0x1400940e8
jmp	0x1400940e8
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
setne	al
mov	qword ptr [rcx + 0x18], 0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x32fee]
mov	qword ptr [rcx], rax
xor	eax, eax
mov	byte ptr [rcx + 0x20], 0
mov	qword ptr [rcx + 0x28], 0
mov	qword ptr [rcx + 0x30], 0
mov	qword ptr [rcx + 0x38], 0
mov	qword ptr [rcx + 0x40], 0
mov	word ptr [rcx + 0x48], ax
mov	byte ptr [rcx + 0x88], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
setne	al
mov	qword ptr [rcx + 0x18], 0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x32f8e]
mov	qword ptr [rcx], rax
xor	eax, eax
mov	byte ptr [rcx + 0x20], 0
mov	qword ptr [rcx + 0x28], 0
mov	qword ptr [rcx + 0x30], 0
mov	qword ptr [rcx + 0x38], 0
mov	qword ptr [rcx + 0x40], 0
mov	word ptr [rcx + 0x48], ax
mov	byte ptr [rcx + 0x88], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
call	0x140094200
call	0x140094200
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rsi, rax
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x32f14]
cmp	byte ptr [rcx + 0x88], 0
mov	qword ptr [rcx], rax
mov	rbx, rcx
je	0x140094245
je	0x140094245
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x140094229
je	0x140094229
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x28]
test	rcx, rcx
je	0x140094237
je	0x140094237
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x38]
test	rcx, rcx
je	0x140094245
je	0x140094245
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x32eb4]
cmp	byte ptr [rcx + 0x88], 0
mov	qword ptr [rcx], rax
mov	rbx, rcx
je	0x1400942a5
je	0x1400942a5
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x140094289
je	0x140094289
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x28]
test	rcx, rcx
je	0x140094297
je	0x140094297
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x38]
test	rcx, rcx
je	0x1400942a5
je	0x1400942a5
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
mov	rbx, rcx
lea	rcx, [rip + 0x232d8]
mov	rbp, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp]
mov	rax, qword ptr [rax + 8]
mov	rsi, qword ptr [rax + rdx*8]
test	rsi, rsi
je	0x14009468d
je	0x14009468d
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x3cbd2]
mov	rax, qword ptr [rax + 0x20]
cmp	rax, rdx
jne	0x140094668
jne	0x140094668
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rdi, qword ptr [rax + 0x10]
test	rdi, rdi
je	0x14009432f
je	0x14009432f
mov	rcx, rdi
call	0x140015a08
call	0x140015a08
lea	rdx, [rdi + rax]
lea	r8, [rsp + 0x38]
mov	rcx, rdi
call	0x140071ff0
call	0x140071ff0
mov	qword ptr [rsp + 0x28], rax
mov	rcx, qword ptr [rax - 0x18]
mov	qword ptr [rbx + 0x18], rcx
call	0x1400b2c00
call	0x1400b2c00
mov	r8, qword ptr [rbx + 0x18]
lea	rcx, [rsp + 0x28]
xor	r9d, r9d
mov	rdx, rax
mov	rdi, rax
call	0x14001b700
call	0x14001b700
xor	eax, eax
cmp	qword ptr [rbx + 0x18], 0
jne	0x1400945a0
jne	0x1400945a0
mov	byte ptr [rbx + 0x20], al
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x3cbff]
mov	rax, qword ptr [rax + 0x28]
cmp	rax, rdx
jne	0x140094638
jne	0x140094638
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	r12, qword ptr [rax + 0x28]
test	r12, r12
je	0x1400943ac
je	0x1400943ac
mov	rcx, r12
call	0x140015a60
call	0x140015a60
lea	rdx, [r12 + rax*2]
lea	r8, [rsp + 0x26]
mov	rcx, r12
call	0x140068a90
call	0x140068a90
mov	qword ptr [rsp + 0x30], rax
mov	rcx, qword ptr [rax - 0x18]
movabs	rax, 0x3ffffffffffffffc
mov	qword ptr [rbx + 0x30], rcx
cmp	rax, rcx
jb	0x140094753
jb	0x140094753
add	rcx, rcx
call	0x1400b2c00
call	0x1400b2c00
mov	r8, qword ptr [rbx + 0x30]
lea	rcx, [rsp + 0x30]
xor	r9d, r9d
mov	rdx, rax
mov	r12, rax
call	0x14001a690
call	0x14001a690
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x3cc32]
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rdx
jne	0x140094650
jne	0x140094650
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	r13, qword ptr [rax + 0x38]
test	r13, r13
je	0x140094430
je	0x140094430
mov	rcx, r13
call	0x140015a60
call	0x140015a60
lea	rdx, [r13 + rax*2]
lea	r8, [rsp + 0x27]
mov	rcx, r13
call	0x140068a90
call	0x140068a90
mov	qword ptr [rsp + 0x38], rax
mov	rcx, qword ptr [rax - 0x18]
movabs	rax, 0x3ffffffffffffffc
mov	qword ptr [rbx + 0x40], rcx
cmp	rax, rcx
jb	0x140094725
jb	0x140094725
add	rcx, rcx
call	0x1400b2c00
call	0x1400b2c00
lea	r14, [rsp + 0x38]
mov	r8, qword ptr [rbx + 0x40]
xor	r9d, r9d
mov	rdx, rax
mov	rcx, r14
mov	r13, rax
call	0x14001a690
call	0x14001a690
mov	rdx, qword ptr [rsi]
lea	rcx, [rip - 0x3cc09]
mov	rax, qword ptr [rdx + 0x10]
cmp	rax, rcx
jne	0x140094680
jne	0x140094680
mov	rax, qword ptr [rsi + 0x10]
movzx	eax, word ptr [rax + 0x48]
mov	word ptr [rbx + 0x48], ax
mov	rax, qword ptr [rdx + 0x18]
lea	rdx, [rip - 0x3cc1d]
cmp	rax, rdx
jne	0x140094628
jne	0x140094628
mov	rax, qword ptr [rsi + 0x10]
movzx	eax, word ptr [rax + 0x4a]
mov	word ptr [rbx + 0x4a], ax
mov	rcx, qword ptr [rip + 0x2a417]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp]
mov	rax, qword ptr [rax + 8]
mov	rsi, qword ptr [rax + rdx*8]
test	rsi, rsi
je	0x140094692
je	0x140094692
mov	rax, qword ptr [rip + 0x2a273]
lea	r9, [rbx + 0x4c]
mov	rcx, rsi
mov	rdx, qword ptr [rax]
mov	rax, qword ptr [rsi]
lea	r8, [rdx + 0x24]
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
mov	rax, qword ptr [rip + 0x2a248]
lea	r9, [rbx + 0x94]
mov	rcx, rsi
mov	rdx, qword ptr [rax]
mov	rax, qword ptr [rsi]
lea	r8, [rdx + 0x1a]
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
mov	qword ptr [rbx + 0x10], rdi
mov	rcx, qword ptr [rsp + 0x38]
mov	qword ptr [rbx + 0x28], r12
mov	qword ptr [rbx + 0x38], r13
mov	byte ptr [rbx + 0xc8], 1
mov	rbx, qword ptr [rip + 0x2a0f2]
mov	r8d, dword ptr [rbx]
test	r8d, r8d
jne	0x140094600
jne	0x140094600
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140094612
jle	0x140094612
mov	edx, dword ptr [rbx]
mov	rcx, qword ptr [rsp + 0x30]
test	edx, edx
jne	0x1400945e0
jne	0x1400945e0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x1400945ee
jle	0x1400945ee
mov	eax, dword ptr [rbx]
mov	rcx, qword ptr [rsp + 0x28]
test	eax, eax
jne	0x1400945b0
jne	0x1400945b0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x1400945be
jle	0x1400945be
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rdi]
sub	eax, 1
cmp	al, 0x7d
setbe	al
jmp	0x140094372
jmp	0x140094372
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14009458b
jg	0x14009458b
sub	rcx, 0x18
mov	rdx, r14
call	0x140072480
call	0x140072480
nop	
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140094573
jg	0x140094573
sub	rcx, 0x18
mov	rdx, r14
call	0x140068ef0
call	0x140068ef0
jmp	0x140094573
jmp	0x140094573
nop	
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x14009455b
jg	0x14009455b
lea	rdx, [rsp + 0x27]
sub	rcx, 0x18
call	0x140068ef0
call	0x140068ef0
jmp	0x14009455b
jmp	0x14009455b
nop	dword ptr [rax]
mov	rcx, rsi
call	rax
call	rax
jmp	0x1400944be
jmp	0x1400944be
nop	word ptr [rax + rax]
lea	rcx, [rsp + 0x30]
mov	rdx, rsi
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x30]
jmp	0x1400943be
jmp	0x1400943be
nop	dword ptr [rax]
lea	rcx, [rsp + 0x38]
mov	rdx, rsi
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x38]
jmp	0x140094442
jmp	0x140094442
nop	dword ptr [rax]
lea	rcx, [rsp + 0x28]
mov	rdx, rsi
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x28]
jmp	0x140094341
jmp	0x140094341
nop	dword ptr [rax]
mov	rcx, rsi
call	rax
call	rax
mov	rdx, qword ptr [rsi]
jmp	0x14009449e
jmp	0x14009449e
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
mov	rbx, rax
xor	r13d, r13d
xor	r12d, r12d
jmp	0x1400946c6
jmp	0x1400946c6
mov	rbx, rax
xor	r13d, r13d
xor	r12d, r12d
jmp	0x1400946d9
jmp	0x1400946d9
mov	rbx, rax
xor	r13d, r13d
mov	rax, qword ptr [rsp + 0x38]
lea	rdx, [rsp + 0x27]
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
mov	rax, qword ptr [rsp + 0x30]
lea	rdx, [rsp + 0x26]
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
mov	rax, qword ptr [rsp + 0x28]
lea	rdx, [rsp + 0x25]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x1400b2d80
call	0x1400b2d80
test	rdi, rdi
je	0x140094701
je	0x140094701
mov	rcx, rdi
call	0x1400b2bd0
call	0x1400b2bd0
test	r12, r12
je	0x14009470e
je	0x14009470e
mov	rcx, r12
call	0x1400b2bd0
call	0x1400b2bd0
test	r13, r13
je	0x14009471b
je	0x14009471b
mov	rcx, r13
call	0x1400b2bd0
call	0x1400b2bd0
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
jmp	0x1400946b3
jmp	0x1400946b3
call	0x1400b41c0
call	0x1400b41c0
jmp	0x1400946ad
jmp	0x1400946ad
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
xor	r13d, r13d
jmp	0x1400946c6
jmp	0x1400946c6
jmp	0x1400946a2
jmp	0x1400946a2
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
jmp	0x14009471b
jmp	0x14009471b
call	0x1400b41c0
call	0x1400b41c0
jmp	0x14009473c
jmp	0x14009473c
mov	rbx, rax
xor	r13d, r13d
xor	r12d, r12d
xor	edi, edi
jmp	0x1400946d9
jmp	0x1400946d9
jmp	0x14009473c
jmp	0x14009473c
jmp	0x1400946a2
jmp	0x1400946a2
jmp	0x140094697
jmp	0x140094697
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
setne	al
mov	qword ptr [rcx + 0x18], 0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x3299e]
mov	qword ptr [rcx], rax
mov	byte ptr [rcx + 0x20], 0
mov	qword ptr [rcx + 0x28], 0
mov	qword ptr [rcx + 0x30], 0
mov	qword ptr [rcx + 0x38], 0
mov	qword ptr [rcx + 0x40], 0
mov	dword ptr [rcx + 0x48], 0
mov	byte ptr [rcx + 0xc8], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
setne	al
mov	qword ptr [rcx + 0x18], 0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x3293e]
mov	qword ptr [rcx], rax
mov	byte ptr [rcx + 0x20], 0
mov	qword ptr [rcx + 0x28], 0
mov	qword ptr [rcx + 0x30], 0
mov	qword ptr [rcx + 0x38], 0
mov	qword ptr [rcx + 0x40], 0
mov	dword ptr [rcx + 0x48], 0
mov	byte ptr [rcx + 0xc8], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
call	0x140094870
call	0x140094870
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rsi, rax
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x328c4]
cmp	byte ptr [rcx + 0xc8], 0
mov	qword ptr [rcx], rax
mov	rbx, rcx
je	0x1400948b5
je	0x1400948b5
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x140094899
je	0x140094899
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x28]
test	rcx, rcx
je	0x1400948a7
je	0x1400948a7
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x38]
test	rcx, rcx
je	0x1400948b5
je	0x1400948b5
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x32864]
cmp	byte ptr [rcx + 0xc8], 0
mov	qword ptr [rcx], rax
mov	rbx, rcx
je	0x140094915
je	0x140094915
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x1400948f9
je	0x1400948f9
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x28]
test	rcx, rcx
je	0x140094907
je	0x140094907
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x38]
test	rcx, rcx
je	0x140094915
je	0x140094915
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
movzx	ebp, word ptr [rcx]
mov	eax, ebp
not	eax
mov	rdi, rcx
mov	rbx, rdx
test	ax, 0x101
jne	0x140094951
jne	0x140094951
add	dword ptr [rdx + 8], 0xc
movzx	esi, byte ptr [rdi]
test	sil, sil
js	0x140094b38
js	0x140094b38
mov	eax, ebp
and	ax, 0x402
cmp	ax, 0x400
je	0x140094b7e
je	0x140094b7e
and	bp, 0x404
cmp	bp, 0x400
je	0x140094c8b
je	0x140094c8b
test	sil, 0x60
je	0x140094b27
je	0x140094b27
test	sil, 2
je	0x140094b27
je	0x140094b27
mov	ebp, dword ptr [rbx + 0x14]
test	sil, 4
jne	0x140094a34
jne	0x140094a34
mov	r12d, esi
mov	r8d, 1
xor	edx, edx
mov	ecx, ebp
call	0x140077910
call	0x140077910
shr	r12b, 5
xor	r12d, 1
mov	edx, eax
and	r12d, 1
mov	eax, r12d
sub	eax, edx
lea	edx, [rax + 7]
movsxd	rax, edx
mov	ecx, edx
imul	rax, rax, -0x6db6db6d
sar	ecx, 0x1f
shr	rax, 0x20
add	eax, edx
sar	eax, 2
sub	eax, ecx
lea	ecx, [rax*8]
sub	ecx, eax
movzx	eax, byte ptr [rdi + 2]
sub	edx, ecx
and	eax, 0x3f
sub	eax, 1
lea	ecx, [rdx + rax*8]
mov	edx, dword ptr [rbx + 0x18]
sub	ecx, eax
sub	edx, r12d
add	edx, 7
movsxd	rax, edx
mov	r8d, edx
imul	rax, rax, -0x6db6db6d
sar	r8d, 0x1f
shr	rax, 0x20
add	eax, edx
sar	eax, 2
sub	eax, r8d
lea	r8d, [rax*8]
sub	r8d, eax
sub	edx, r8d
lea	eax, [rcx + rdx]
mov	dword ptr [rbx + 0x1c], eax
mov	eax, esi
not	eax
test	al, 0x18
je	0x140094b27
je	0x140094b27
lea	edi, [rbp + 0x76c]
mov	r11d, dword ptr [rbx + 0x1c]
lea	r8, [rip + 0x2ab8f]
movsxd	r10, edi
mov	ebp, edi
imul	r10, r10, 0x51eb851f
and	ebp, 3
mov	rax, r10
sar	r10, 0x27
sar	rax, 0x25
mov	r9, rax
mov	eax, edi
sar	eax, 0x1f
sub	r9d, eax
sub	r10d, eax
imul	eax, r10d, 0x190
mov	r10d, edi
imul	edx, r9d, 0x64
mov	r9d, edi
sub	r10d, eax
xor	eax, eax
sub	r9d, edx
jmp	0x140094aba
jmp	0x140094aba
nop	dword ptr [rax]
xor	edx, edx
test	ebp, ebp
movsxd	rcx, eax
sete	dl
lea	r12, [rdx + rdx*2]
lea	rdx, [rdx + r12*4]
add	rdx, rcx
movzx	edx, word ptr [r8 + rdx*2]
cmp	edx, r11d
jg	0x140094ae0
jg	0x140094ae0
add	eax, 1
test	r9d, r9d
jne	0x140094a98
jne	0x140094a98
test	r10d, r10d
je	0x140094a98
je	0x140094a98
movsxd	rdx, eax
movzx	edx, word ptr [r8 + rdx*2]
cmp	r11d, edx
jl	0x140094ae0
jl	0x140094ae0
add	eax, 1
test	r10d, r10d
je	0x140094a98
je	0x140094a98
jmp	0x140094ac4
jmp	0x140094ac4
nop	dword ptr [rax + rax]
test	sil, 8
jne	0x140094aec
jne	0x140094aec
lea	edx, [rax - 1]
mov	dword ptr [rbx + 0x10], edx
and	esi, 0x10
jne	0x140094b27
jne	0x140094b27
test	r9d, r9d
je	0x140094dc0
je	0x140094dc0
xor	r9d, r9d
and	edi, 3
sete	r9b
movsxd	r9, r9d
sub	eax, 1
lea	rdx, [r9 + r9*2]
cdqe	
lea	rdx, [r9 + rdx*4]
add	rax, rdx
movzx	eax, word ptr [r8 + rax*2]
sub	r11d, eax
add	r11d, 1
mov	dword ptr [rbx + 0xc], r11d
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
xor	edx, edx
test	byte ptr [rdi + 1], 2
je	0x140094b60
je	0x140094b60
movsxd	rdx, dword ptr [rbx + 0x14]
mov	rax, rdx
imul	rdx, rdx, 0x51eb851f
mov	ecx, eax
sar	ecx, 0x1f
sar	rdx, 0x25
sub	edx, ecx
imul	ecx, edx, 0x64
sub	eax, ecx
mov	edx, eax
mov	eax, dword ptr [rdi + 4]
sub	eax, 0x13
imul	eax, eax, 0x64
add	eax, edx
mov	dword ptr [rbx + 0x14], eax
mov	eax, ebp
and	ax, 0x402
cmp	ax, 0x400
jne	0x14009496d
jne	0x14009496d
mov	eax, esi
not	eax
test	al, 0x18
je	0x140094d00
je	0x140094d00
test	sil, 4
je	0x140094d00
je	0x140094d00
mov	eax, dword ptr [rbx + 0x14]
mov	r10d, dword ptr [rbx + 0x1c]
add	eax, 0x76c
movsxd	rcx, eax
imul	rcx, rcx, 0x51eb851f
mov	rdx, rcx
sar	rcx, 0x27
sar	rdx, 0x25
mov	r9, rdx
cdq	
sub	r9d, edx
sub	ecx, edx
imul	r8d, r9d, 0x64
mov	r9d, eax
imul	edx, ecx, 0x190
mov	ecx, eax
sub	r9d, r8d
lea	r8, [rip + 0x2aa09]
sub	ecx, edx
test	al, 3
mov	eax, 0
sete	dl
sete	r11b
movzx	edx, dl
lea	rbp, [rdx + rdx*2]
lea	rbp, [rdx + rbp*4]
jmp	0x140094bfb
jmp	0x140094bfb
nop	dword ptr [rax]
add	eax, 1
test	r9d, r9d
je	0x140094d60
je	0x140094d60
movsxd	rdx, eax
add	rdx, rbp
movzx	edx, word ptr [r8 + rdx*2]
cmp	edx, r10d
jle	0x140094bf8
jle	0x140094bf8
test	sil, 8
je	0x140094d50
je	0x140094d50
mov	edx, dword ptr [rbx + 0x10]
and	esi, 0x10
jne	0x140094c56
jne	0x140094c56
test	r9d, r9d
je	0x140094dd0
je	0x140094dd0
movzx	r9d, r11b
movsxd	r9, r9d
sub	eax, 1
lea	rcx, [r9 + r9*2]
cdqe	
lea	rcx, [r9 + rcx*4]
add	rax, rcx
movzx	ecx, word ptr [r8 + rax*2]
mov	eax, r10d
sub	eax, ecx
add	eax, 1
mov	dword ptr [rbx + 0xc], eax
movzx	esi, byte ptr [rdi]
or	esi, 0x18
mov	byte ptr [rdi], sil
movzx	ebp, word ptr [rdi]
test	sil, 8
je	0x140094d0d
je	0x140094d0d
mov	ecx, dword ptr [rbx + 0x14]
mov	r8d, dword ptr [rbx + 0xc]
and	bp, 0x404
call	0x140077910
call	0x140077910
mov	dword ptr [rbx + 0x18], eax
cmp	bp, 0x400
jne	0x14009497d
jne	0x14009497d
movsxd	rcx, dword ptr [rbx + 0x10]
test	sil, 8
je	0x140094d20
je	0x140094d20
mov	eax, dword ptr [rbx + 0x14]
mov	r9d, dword ptr [rbx + 0xc]
lea	edx, [rax + 0x76c]
movsxd	rax, edx
mov	r8d, edx
imul	rax, rax, 0x51eb851f
sar	r8d, 0x1f
sar	rax, 0x25
sub	eax, r8d
imul	r8d, eax, 0x64
mov	eax, edx
sub	eax, r8d
je	0x140094d30
je	0x140094d30
xor	eax, eax
and	edx, 3
sete	al
cdqe	
lea	r8, [rip + 0x2a906]
lea	rdx, [rax + rax*2]
lea	rax, [rax + rdx*4]
add	rax, rcx
movzx	eax, word ptr [r8 + rax*2]
lea	eax, [r9 + rax - 1]
mov	dword ptr [rbx + 0x1c], eax
jmp	0x14009497d
jmp	0x14009497d
nop	word ptr [rax + rax]
mov	edx, dword ptr [rbx + 0x10]
test	sil, 8
jne	0x140094c6c
jne	0x140094c6c
cmp	edx, 0xb
ja	0x14009497d
ja	0x14009497d
jmp	0x140094c6c
jmp	0x140094c6c
nop	dword ptr [rax + rax]
cmp	ecx, 0xb
jbe	0x140094c99
jbe	0x140094c99
jmp	0x14009497d
jmp	0x14009497d
nop	
imul	r8d, edx, 0xc28f5c29
add	r8d, 0x51eb850
ror	r8d, 4
cmp	r8d, 0xa3d70a
ja	0x140094cd1
ja	0x140094cd1
jmp	0x140094cc9
jmp	0x140094cc9
lea	edx, [rax - 1]
mov	dword ptr [rbx + 0x10], edx
jmp	0x140094c21
jmp	0x140094c21
nop	dword ptr [rax + rax]
mov	rdx, r11
and	edx, 1
lea	rbp, [rdx + rdx*2]
lea	rbp, [rdx + rbp*4]
test	ecx, ecx
je	0x140094da7
je	0x140094da7
nop	word ptr [rax + rax]
movsxd	rdx, eax
movzx	edx, word ptr [r8 + rdx*2]
cmp	r10d, edx
jl	0x140094c14
jl	0x140094c14
add	eax, 1
test	ecx, ecx
jne	0x140094d78
jne	0x140094d78
movsxd	rdx, eax
add	rdx, rbp
movzx	edx, word ptr [r8 + rdx*2]
cmp	r10d, edx
jl	0x140094c14
jl	0x140094c14
add	eax, 1
movsxd	rdx, eax
add	rdx, rbp
movzx	edx, word ptr [r8 + rdx*2]
cmp	r10d, edx
jge	0x140094da4
jge	0x140094da4
jmp	0x140094c14
jmp	0x140094c14
nop	dword ptr [rax]
test	r10d, r10d
jne	0x140094b04
jne	0x140094b04
jmp	0x140094afa
jmp	0x140094afa
nop	
test	ecx, ecx
jne	0x140094c33
jne	0x140094c33
jmp	0x140094c2f
jmp	0x140094c2f
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rip + 0x2a033]
add	rax, 0x10
mov	rbx, rdx
mov	qword ptr [rcx], rax
mov	rsi, rcx
mov	rdx, 0xffffffffffffffff
test	rbx, rbx
je	0x140094e12
je	0x140094e12
mov	rcx, rbx
call	0x140015a08
call	0x140015a08
lea	rdx, [rbx + rax]
lea	r8, [rsp + 0x2f]
mov	rcx, rbx
call	0x140072090
call	0x140072090
mov	qword ptr [rsi + 8], rax
mov	rax, qword ptr [rip + 0x2a156]
add	rax, 0x10
mov	qword ptr [rsi], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	rbx, rax
mov	rcx, rsi
call	0x1400ac440
call	0x1400ac440
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x29fc3]
add	rax, 0x10
mov	r8, qword ptr [rdx + 8]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
mov	rbx, rcx
lea	rcx, [rcx + 8]
mov	rdx, rax
call	0x140078a90
call	0x140078a90
mov	rax, qword ptr [rip + 0x2a0ff]
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
lea	rax, [rip + 0x316b3]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
lea	r8, [rax - 8]
test	edx, edx
js	0x140094f00
js	0x140094f00
mov	rdx, qword ptr [rip + 0x29754]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x140094f10
jne	0x140094f10
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx + 8], rax
lea	rax, [rip + 0x3226f]
mov	qword ptr [rbx], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
jmp	0x140094ee6
jmp	0x140094ee6
nop	
lock add	dword ptr [r8], 1
jmp	0x140094ee6
jmp	0x140094ee6
mov	rsi, rax
mov	rcx, rbx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x32224]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140077410
call	0x140077410
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
lea	rax, [rip + 0x31604]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x296ba]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 8]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140094fa0
jne	0x140094fa0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140094fae
jle	0x140094fae
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140094f90
jg	0x140094f90
sub	rcx, 0x18
lea	rdx, [rsp + 0x2f]
call	0x140072480
call	0x140072480
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
pxor	xmm0, xmm0
test	rdx, rdx
mov	byte ptr [rcx + 0x188], 0
setne	al
movups	xmmword ptr [rcx + 0x10], xmm0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x3219f]
mov	qword ptr [rcx], rax
mov	qword ptr [rcx + 0x180], 0
movups	xmmword ptr [rcx + 0x20], xmm0
movups	xmmword ptr [rcx + 0x30], xmm0
movups	xmmword ptr [rcx + 0x40], xmm0
movups	xmmword ptr [rcx + 0x50], xmm0
movups	xmmword ptr [rcx + 0x60], xmm0
movups	xmmword ptr [rcx + 0x70], xmm0
movups	xmmword ptr [rcx + 0x80], xmm0
movups	xmmword ptr [rcx + 0x90], xmm0
movups	xmmword ptr [rcx + 0xa0], xmm0
movups	xmmword ptr [rcx + 0xb0], xmm0
movups	xmmword ptr [rcx + 0xc0], xmm0
movups	xmmword ptr [rcx + 0xd0], xmm0
movups	xmmword ptr [rcx + 0xe0], xmm0
movups	xmmword ptr [rcx + 0xf0], xmm0
movups	xmmword ptr [rcx + 0x100], xmm0
movups	xmmword ptr [rcx + 0x110], xmm0
movups	xmmword ptr [rcx + 0x120], xmm0
movups	xmmword ptr [rcx + 0x130], xmm0
movups	xmmword ptr [rcx + 0x140], xmm0
movups	xmmword ptr [rcx + 0x150], xmm0
movups	xmmword ptr [rcx + 0x160], xmm0
movups	xmmword ptr [rcx + 0x170], xmm0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
pxor	xmm0, xmm0
test	rdx, rdx
mov	byte ptr [rcx + 0x188], 0
setne	al
movups	xmmword ptr [rcx + 0x10], xmm0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x320df]
mov	qword ptr [rcx], rax
mov	qword ptr [rcx + 0x180], 0
movups	xmmword ptr [rcx + 0x20], xmm0
movups	xmmword ptr [rcx + 0x30], xmm0
movups	xmmword ptr [rcx + 0x40], xmm0
movups	xmmword ptr [rcx + 0x50], xmm0
movups	xmmword ptr [rcx + 0x60], xmm0
movups	xmmword ptr [rcx + 0x70], xmm0
movups	xmmword ptr [rcx + 0x80], xmm0
movups	xmmword ptr [rcx + 0x90], xmm0
movups	xmmword ptr [rcx + 0xa0], xmm0
movups	xmmword ptr [rcx + 0xb0], xmm0
movups	xmmword ptr [rcx + 0xc0], xmm0
movups	xmmword ptr [rcx + 0xd0], xmm0
movups	xmmword ptr [rcx + 0xe0], xmm0
movups	xmmword ptr [rcx + 0xf0], xmm0
movups	xmmword ptr [rcx + 0x100], xmm0
movups	xmmword ptr [rcx + 0x110], xmm0
movups	xmmword ptr [rcx + 0x120], xmm0
movups	xmmword ptr [rcx + 0x130], xmm0
movups	xmmword ptr [rcx + 0x140], xmm0
movups	xmmword ptr [rcx + 0x150], xmm0
movups	xmmword ptr [rcx + 0x160], xmm0
movups	xmmword ptr [rcx + 0x170], xmm0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x32034]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x32009]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x31ff9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
xor	eax, eax
pxor	xmm0, xmm0
test	rdx, rdx
mov	byte ptr [rcx + 0x188], 0
setne	al
movups	xmmword ptr [rcx + 0x10], xmm0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x31fef]
mov	qword ptr [rcx], rax
mov	qword ptr [rcx + 0x180], 0
movups	xmmword ptr [rcx + 0x20], xmm0
movups	xmmword ptr [rcx + 0x30], xmm0
movups	xmmword ptr [rcx + 0x40], xmm0
movups	xmmword ptr [rcx + 0x50], xmm0
movups	xmmword ptr [rcx + 0x60], xmm0
movups	xmmword ptr [rcx + 0x70], xmm0
movups	xmmword ptr [rcx + 0x80], xmm0
movups	xmmword ptr [rcx + 0x90], xmm0
movups	xmmword ptr [rcx + 0xa0], xmm0
movups	xmmword ptr [rcx + 0xb0], xmm0
movups	xmmword ptr [rcx + 0xc0], xmm0
movups	xmmword ptr [rcx + 0xd0], xmm0
movups	xmmword ptr [rcx + 0xe0], xmm0
movups	xmmword ptr [rcx + 0xf0], xmm0
movups	xmmword ptr [rcx + 0x100], xmm0
movups	xmmword ptr [rcx + 0x110], xmm0
movups	xmmword ptr [rcx + 0x120], xmm0
movups	xmmword ptr [rcx + 0x130], xmm0
movups	xmmword ptr [rcx + 0x140], xmm0
movups	xmmword ptr [rcx + 0x150], xmm0
movups	xmmword ptr [rcx + 0x160], xmm0
movups	xmmword ptr [rcx + 0x170], xmm0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
pxor	xmm0, xmm0
test	rdx, rdx
mov	byte ptr [rcx + 0x188], 0
setne	al
movups	xmmword ptr [rcx + 0x10], xmm0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x31f2f]
mov	qword ptr [rcx], rax
mov	qword ptr [rcx + 0x180], 0
movups	xmmword ptr [rcx + 0x20], xmm0
movups	xmmword ptr [rcx + 0x30], xmm0
movups	xmmword ptr [rcx + 0x40], xmm0
movups	xmmword ptr [rcx + 0x50], xmm0
movups	xmmword ptr [rcx + 0x60], xmm0
movups	xmmword ptr [rcx + 0x70], xmm0
movups	xmmword ptr [rcx + 0x80], xmm0
movups	xmmword ptr [rcx + 0x90], xmm0
movups	xmmword ptr [rcx + 0xa0], xmm0
movups	xmmword ptr [rcx + 0xb0], xmm0
movups	xmmword ptr [rcx + 0xc0], xmm0
movups	xmmword ptr [rcx + 0xd0], xmm0
movups	xmmword ptr [rcx + 0xe0], xmm0
movups	xmmword ptr [rcx + 0xf0], xmm0
movups	xmmword ptr [rcx + 0x100], xmm0
movups	xmmword ptr [rcx + 0x110], xmm0
movups	xmmword ptr [rcx + 0x120], xmm0
movups	xmmword ptr [rcx + 0x130], xmm0
movups	xmmword ptr [rcx + 0x140], xmm0
movups	xmmword ptr [rcx + 0x150], xmm0
movups	xmmword ptr [rcx + 0x160], xmm0
movups	xmmword ptr [rcx + 0x170], xmm0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x31e84]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x31e59]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x31e49]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x30fd4]
mov	qword ptr [rcx], rax
call	0x1400751d0
call	0x1400751d0
lea	rax, [rip + 0x31e25]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400953c8
jne	0x1400953c8
cmp	byte ptr [rsi + 1], 0
jne	0x1400953c8
jne	0x1400953c8
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x24c8d]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400953b9
je	0x1400953b9
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x1400751d0
call	0x1400751d0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140075510
call	0x140075510
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x30f04]
mov	qword ptr [rcx], rax
call	0x1400751d0
call	0x1400751d0
lea	rax, [rip + 0x31d55]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140095498
jne	0x140095498
cmp	byte ptr [rsi + 1], 0
jne	0x140095498
jne	0x140095498
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x24bbd]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140095489
je	0x140095489
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x1400751d0
call	0x1400751d0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140075510
call	0x140075510
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x30e34]
mov	qword ptr [rcx], rax
call	0x1400751d0
call	0x1400751d0
lea	rax, [rip + 0x31c85]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140095568
jne	0x140095568
cmp	byte ptr [rsi + 1], 0
jne	0x140095568
jne	0x140095568
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x24aed]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140095559
je	0x140095559
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x1400751d0
call	0x1400751d0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140075510
call	0x140075510
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x30d64]
mov	qword ptr [rcx], rax
call	0x1400751d0
call	0x1400751d0
lea	rax, [rip + 0x31bb5]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140095638
jne	0x140095638
cmp	byte ptr [rsi + 1], 0
jne	0x140095638
jne	0x140095638
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x24a1d]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140095629
je	0x140095629
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x1400751d0
call	0x1400751d0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140075510
call	0x140075510
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x31b14]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140075510
call	0x140075510
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x31ae9]
mov	qword ptr [rcx], rax
jmp	0x140075510
jmp	0x140075510
nop	
lea	rax, [rip + 0x31ad9]
mov	qword ptr [rcx], rax
jmp	0x140075510
jmp	0x140075510
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x30cb4]
mov	qword ptr [rcx], rax
call	0x1400755a0
call	0x1400755a0
lea	rax, [rip + 0x31b05]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140095758
jne	0x140095758
cmp	byte ptr [rsi + 1], 0
jne	0x140095758
jne	0x140095758
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x248fd]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140095749
je	0x140095749
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x1400755a0
call	0x1400755a0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400758e0
call	0x1400758e0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x30be4]
mov	qword ptr [rcx], rax
call	0x1400755a0
call	0x1400755a0
lea	rax, [rip + 0x31a35]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140095828
jne	0x140095828
cmp	byte ptr [rsi + 1], 0
jne	0x140095828
jne	0x140095828
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x2482d]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140095819
je	0x140095819
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x1400755a0
call	0x1400755a0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400758e0
call	0x1400758e0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x30b14]
mov	qword ptr [rcx], rax
call	0x1400755a0
call	0x1400755a0
lea	rax, [rip + 0x31965]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400958f8
jne	0x1400958f8
cmp	byte ptr [rsi + 1], 0
jne	0x1400958f8
jne	0x1400958f8
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x2475d]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400958e9
je	0x1400958e9
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x1400755a0
call	0x1400755a0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400758e0
call	0x1400758e0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x30a44]
mov	qword ptr [rcx], rax
call	0x1400755a0
call	0x1400755a0
lea	rax, [rip + 0x31895]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400959c8
jne	0x1400959c8
cmp	byte ptr [rsi + 1], 0
jne	0x1400959c8
jne	0x1400959c8
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x2468d]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400959b9
je	0x1400959b9
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x1400755a0
call	0x1400755a0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400758e0
call	0x1400758e0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x317f4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400758e0
call	0x1400758e0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x317c9]
mov	qword ptr [rcx], rax
jmp	0x1400758e0
jmp	0x1400758e0
nop	
lea	rax, [rip + 0x317b9]
mov	qword ptr [rcx], rax
jmp	0x1400758e0
jmp	0x1400758e0
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x30994]
mov	qword ptr [rcx], rax
call	0x140075970
call	0x140075970
lea	rax, [rip + 0x317e5]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140095ae8
jne	0x140095ae8
cmp	byte ptr [rsi + 1], 0
jne	0x140095ae8
jne	0x140095ae8
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x24b1d]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140095ad9
je	0x140095ad9
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x140075970
call	0x140075970
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140075cb0
call	0x140075cb0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x308c4]
mov	qword ptr [rcx], rax
call	0x140075970
call	0x140075970
lea	rax, [rip + 0x31715]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140095bb8
jne	0x140095bb8
cmp	byte ptr [rsi + 1], 0
jne	0x140095bb8
jne	0x140095bb8
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x24a4d]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140095ba9
je	0x140095ba9
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x140075970
call	0x140075970
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140075cb0
call	0x140075cb0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x307f4]
mov	qword ptr [rcx], rax
call	0x140075970
call	0x140075970
lea	rax, [rip + 0x31645]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140095c88
jne	0x140095c88
cmp	byte ptr [rsi + 1], 0
jne	0x140095c88
jne	0x140095c88
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x2497d]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140095c79
je	0x140095c79
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x140075970
call	0x140075970
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140075cb0
call	0x140075cb0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x30724]
mov	qword ptr [rcx], rax
call	0x140075970
call	0x140075970
lea	rax, [rip + 0x31575]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140095d58
jne	0x140095d58
cmp	byte ptr [rsi + 1], 0
jne	0x140095d58
jne	0x140095d58
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x248ad]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140095d49
je	0x140095d49
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x140075970
call	0x140075970
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140075cb0
call	0x140075cb0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x314d4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140075cb0
call	0x140075cb0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x314a9]
mov	qword ptr [rcx], rax
jmp	0x140075cb0
jmp	0x140075cb0
nop	
lea	rax, [rip + 0x31499]
mov	qword ptr [rcx], rax
jmp	0x140075cb0
jmp	0x140075cb0
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x30674]
mov	qword ptr [rcx], rax
call	0x140075d40
call	0x140075d40
lea	rax, [rip + 0x314c5]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140095e78
jne	0x140095e78
cmp	byte ptr [rsi + 1], 0
jne	0x140095e78
jne	0x140095e78
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x2478d]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140095e69
je	0x140095e69
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x140075d40
call	0x140075d40
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140076080
call	0x140076080
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x305a4]
mov	qword ptr [rcx], rax
call	0x140075d40
call	0x140075d40
lea	rax, [rip + 0x313f5]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140095f48
jne	0x140095f48
cmp	byte ptr [rsi + 1], 0
jne	0x140095f48
jne	0x140095f48
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x246bd]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140095f39
je	0x140095f39
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x140075d40
call	0x140075d40
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140076080
call	0x140076080
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x304d4]
mov	qword ptr [rcx], rax
call	0x140075d40
call	0x140075d40
lea	rax, [rip + 0x31325]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x140096018
jne	0x140096018
cmp	byte ptr [rsi + 1], 0
jne	0x140096018
jne	0x140096018
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x245ed]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x140096009
je	0x140096009
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x140075d40
call	0x140075d40
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140076080
call	0x140076080
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x30404]
mov	qword ptr [rcx], rax
call	0x140075d40
call	0x140075d40
lea	rax, [rip + 0x31255]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400960e8
jne	0x1400960e8
cmp	byte ptr [rsi + 1], 0
jne	0x1400960e8
jne	0x1400960e8
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x2451d]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400960d9
je	0x1400960d9
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x140075d40
call	0x140075d40
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x140076080
call	0x140076080
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x311b4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140076080
call	0x140076080
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x31189]
mov	qword ptr [rcx], rax
jmp	0x140076080
jmp	0x140076080
nop	
lea	rax, [rip + 0x31179]
mov	qword ptr [rcx], rax
jmp	0x140076080
jmp	0x140076080
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
mov	rsi, rcx
lea	rcx, [rip + 0x20e46]
mov	rbp, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp]
mov	rax, qword ptr [rax + 8]
mov	rbx, qword ptr [rax + rdx*8]
test	rbx, rbx
je	0x1400966df
je	0x1400966df
mov	rax, qword ptr [rbx]
lea	rdx, [rip - 0x79fa4]
mov	rax, qword ptr [rax + 0x28]
cmp	rax, rdx
jne	0x140096630
jne	0x140096630
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rdi, qword ptr [rax + 0x28]
test	rdi, rdi
je	0x140096221
je	0x140096221
mov	rcx, rdi
call	0x140015a08
call	0x140015a08
lea	rdx, [rdi + rax]
lea	r8, [rsp + 0x47]
mov	rcx, rdi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rsp + 0x48], rax
mov	r15, qword ptr [rax - 0x18]
mov	rcx, r15
call	0x1400b2c00
call	0x1400b2c00
lea	rdi, [rsp + 0x48]
xor	r9d, r9d
mov	r8, r15
mov	rdx, rax
mov	rcx, rdi
mov	qword ptr [rsp + 0x30], rax
call	0x14001b700
call	0x14001b700
mov	rax, qword ptr [rip + 0x283cf]
mov	rcx, qword ptr [rsp + 0x48]
mov	r10d, dword ptr [rax]
test	r10d, r10d
jne	0x1400965e0
jne	0x1400965e0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x1400965f2
jle	0x1400965f2
mov	rax, qword ptr [rbx]
lea	rdx, [rip - 0x79f7d]
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rdx
jne	0x140096688
jne	0x140096688
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	r12, qword ptr [rax + 0x38]
test	r12, r12
je	0x1400962ba
je	0x1400962ba
mov	rcx, r12
call	0x140015a08
call	0x140015a08
lea	rdx, [r12 + rax]
lea	r8, [rsp + 0x45]
mov	rcx, r12
call	0x140071f50
call	0x140071f50
mov	qword ptr [rsp + 0x48], rax
mov	r14, qword ptr [rax - 0x18]
mov	rcx, r14
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r14
mov	rdx, rax
mov	rcx, rdi
mov	qword ptr [rsp + 0x28], rax
call	0x14001b700
call	0x14001b700
mov	rax, qword ptr [rip + 0x2833b]
mov	rcx, qword ptr [rsp + 0x48]
mov	r9d, dword ptr [rax]
test	r9d, r9d
jne	0x1400965b8
jne	0x1400965b8
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x1400965ca
jle	0x1400965ca
mov	rax, qword ptr [rbx]
lea	rdx, [rip - 0x7a061]
mov	rax, qword ptr [rax + 0x38]
cmp	rax, rdx
jne	0x140096660
jne	0x140096660
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	r12, qword ptr [rax + 0x48]
test	r12, r12
je	0x14009634e
je	0x14009634e
mov	rcx, r12
call	0x140015a08
call	0x140015a08
lea	rdx, [r12 + rax]
lea	r8, [rsp + 0x46]
mov	rcx, r12
call	0x140071f50
call	0x140071f50
mov	qword ptr [rsp + 0x48], rax
mov	r13, qword ptr [rax - 0x18]
mov	rcx, r13
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	qword ptr [rsp + 0x20], rax
call	0x14001b700
call	0x14001b700
mov	rax, qword ptr [rip + 0x282a7]
mov	rcx, qword ptr [rsp + 0x48]
mov	r8d, dword ptr [rax]
test	r8d, r8d
jne	0x140096590
jne	0x140096590
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x1400965a2
jle	0x1400965a2
mov	rax, qword ptr [rbx]
lea	rdx, [rip - 0x7a345]
mov	rax, qword ptr [rax + 0x20]
cmp	rax, rdx
jne	0x140096648
jne	0x140096648
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	r12, qword ptr [rax + 0x10]
test	r12, r12
je	0x1400963e2
je	0x1400963e2
mov	rcx, r12
call	0x140015a08
call	0x140015a08
lea	rdx, [r12 + rax]
lea	r8, [rsp + 0x47]
mov	rcx, r12
call	0x140071f50
call	0x140071f50
mov	qword ptr [rsp + 0x48], rax
mov	r12, qword ptr [rax - 0x18]
mov	rcx, r12
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r12
mov	rdx, rax
mov	rcx, rdi
mov	qword ptr [rsp + 0x38], rax
call	0x14001b700
call	0x14001b700
mov	rdi, qword ptr [rsp + 0x38]
mov	qword ptr [rsi + 0x18], r12
xor	eax, eax
mov	qword ptr [rsi + 0x10], rdi
test	r12, r12
jne	0x140096578
jne	0x140096578
mov	byte ptr [rsi + 0x20], al
mov	rax, qword ptr [rbx]
lea	rdx, [rip - 0x7a18b]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x1400966a0
jne	0x1400966a0
mov	rax, qword ptr [rbx + 0x10]
movzx	eax, byte ptr [rax + 0x21]
mov	byte ptr [rsi + 0x21], al
mov	rax, qword ptr [rbx]
lea	rdx, [rip - 0x7a0fd]
mov	rax, qword ptr [rax + 0x18]
cmp	rax, rdx
jne	0x1400966b0
jne	0x1400966b0
mov	rax, qword ptr [rbx + 0x10]
movzx	eax, byte ptr [rax + 0x22]
mov	byte ptr [rsi + 0x22], al
mov	rax, qword ptr [rsp + 0x30]
lea	rcx, [rip - 0x7a1e1]
mov	rdx, qword ptr [rbx]
mov	qword ptr [rsi + 0x30], r15
mov	qword ptr [rsi + 0x28], rax
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rsi + 0x40], r14
mov	qword ptr [rsi + 0x38], rax
mov	rax, qword ptr [rsp + 0x20]
mov	qword ptr [rsi + 0x50], r13
mov	qword ptr [rsi + 0x48], rax
mov	rax, qword ptr [rdx + 0x40]
cmp	rax, rcx
jne	0x1400966c0
jne	0x1400966c0
mov	rax, qword ptr [rbx + 0x10]
mov	eax, dword ptr [rax + 0x58]
mov	dword ptr [rsi + 0x58], eax
mov	rax, qword ptr [rdx + 0x48]
lea	rdx, [rip - 0x7a398]
cmp	rax, rdx
jne	0x1400966d0
jne	0x1400966d0
mov	rax, qword ptr [rbx + 0x10]
mov	eax, dword ptr [rax + 0x5c]
mov	dword ptr [rsi + 0x5c], eax
mov	rax, qword ptr [rbx]
lea	rdx, [rip - 0x7a3c5]
mov	rax, qword ptr [rax + 0x50]
cmp	rax, rdx
jne	0x140096678
jne	0x140096678
mov	rax, qword ptr [rbx + 0x10]
mov	eax, dword ptr [rax + 0x60]
mov	dword ptr [rsi + 0x60], eax
mov	rcx, qword ptr [rip + 0x283cd]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp]
mov	rax, qword ptr [rax + 8]
mov	rcx, qword ptr [rax + rdx*8]
test	rcx, rcx
je	0x1400966da
je	0x1400966da
mov	rax, qword ptr [rip + 0x28269]
lea	r9, [rsi + 0x64]
mov	rdx, qword ptr [rax]
lea	r8, [rdx + 0xb]
call	0x140022330
call	0x140022330
mov	rax, qword ptr [rip + 0x280f2]
mov	rcx, qword ptr [rsp + 0x48]
mov	byte ptr [rsi + 0x6f], 1
mov	edx, dword ptr [rax]
test	edx, edx
jne	0x140096608
jne	0x140096608
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x14009661a
jle	0x14009661a
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rdi]
sub	eax, 1
cmp	al, 0x7d
setbe	al
jmp	0x14009642e
jmp	0x14009642e
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x1400963ab
jg	0x1400963ab
lea	rdx, [rsp + 0x47]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x1400963ab
jmp	0x1400963ab
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140096317
jg	0x140096317
lea	rdx, [rsp + 0x47]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x140096317
jmp	0x140096317
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140096283
jg	0x140096283
lea	rdx, [rsp + 0x47]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x140096283
jmp	0x140096283
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140096562
jg	0x140096562
lea	rdx, [rsp + 0x47]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x140096562
jmp	0x140096562
nop	dword ptr [rax]
lea	rcx, [rsp + 0x48]
mov	rdx, rbx
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x48]
jmp	0x140096233
jmp	0x140096233
nop	dword ptr [rax]
mov	rdx, rbx
mov	rcx, rdi
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x48]
jmp	0x1400963f4
jmp	0x1400963f4
nop	word ptr [rax + rax]
mov	rdx, rbx
mov	rcx, rdi
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x48]
jmp	0x140096360
jmp	0x140096360
nop	word ptr [rax + rax]
mov	rcx, rbx
call	rax
call	rax
jmp	0x1400964f9
jmp	0x1400964f9
nop	word ptr [rax + rax]
mov	rdx, rbx
mov	rcx, rdi
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x48]
jmp	0x1400962cc
jmp	0x1400962cc
nop	word ptr [rax + rax]
mov	rcx, rbx
call	rax
call	rax
jmp	0x140096450
jmp	0x140096450
nop	word ptr [rax + rax]
mov	rcx, rbx
call	rax
call	rax
jmp	0x140096472
jmp	0x140096472
nop	word ptr [rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rdx, qword ptr [rbx]
jmp	0x1400964ba
jmp	0x1400964ba
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
jmp	0x1400964d8
jmp	0x1400964d8
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
mov	rbx, rax
xor	eax, eax
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x48]
lea	rdx, [rsp + 0x47]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
cmp	qword ptr [rsp + 0x20], 0
je	0x14009671d
je	0x14009671d
mov	rcx, qword ptr [rsp + 0x20]
call	0x1400b2bd0
call	0x1400b2bd0
cmp	qword ptr [rsp + 0x28], 0
jne	0x140096741
jne	0x140096741
jmp	0x14009674b
jmp	0x14009674b
jmp	0x1400966e4
jmp	0x1400966e4
jmp	0x1400966e4
jmp	0x1400966e4
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x48]
lea	rdx, [rsp + 0x47]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, qword ptr [rsp + 0x28]
call	0x1400b2bd0
call	0x1400b2bd0
cmp	qword ptr [rsp + 0x30], 0
je	0x14009675d
je	0x14009675d
mov	rcx, qword ptr [rsp + 0x30]
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x140096741
jmp	0x140096741
jmp	0x1400966e4
jmp	0x1400966e4
mov	rbx, rax
jmp	0x140096713
jmp	0x140096713
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x48]
lea	rdx, [rsp + 0x47]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x140096753
jmp	0x140096753
mov	rbx, rax
jmp	0x1400966f8
jmp	0x1400966f8
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x48]
lea	rdx, [rsp + 0x47]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
jmp	0x140096753
jmp	0x140096753
jmp	0x1400966e4
jmp	0x1400966e4
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
setne	al
mov	qword ptr [rcx + 0x18], 0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x30bae]
mov	qword ptr [rcx], rax
xor	eax, eax
mov	byte ptr [rcx + 0x20], 0
mov	word ptr [rcx + 0x21], ax
mov	qword ptr [rcx + 0x28], 0
mov	qword ptr [rcx + 0x30], 0
mov	qword ptr [rcx + 0x38], 0
mov	qword ptr [rcx + 0x40], 0
mov	qword ptr [rcx + 0x48], 0
mov	qword ptr [rcx + 0x50], 0
mov	dword ptr [rcx + 0x58], 0
mov	qword ptr [rcx + 0x5c], 0
mov	byte ptr [rcx + 0x6f], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
setne	al
mov	qword ptr [rcx + 0x18], 0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x30b2e]
mov	qword ptr [rcx], rax
xor	eax, eax
mov	byte ptr [rcx + 0x20], 0
mov	word ptr [rcx + 0x21], ax
mov	qword ptr [rcx + 0x28], 0
mov	qword ptr [rcx + 0x30], 0
mov	qword ptr [rcx + 0x38], 0
mov	qword ptr [rcx + 0x40], 0
mov	qword ptr [rcx + 0x48], 0
mov	qword ptr [rcx + 0x50], 0
mov	dword ptr [rcx + 0x58], 0
mov	qword ptr [rcx + 0x5c], 0
mov	byte ptr [rcx + 0x6f], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
call	0x1400968f0
call	0x1400968f0
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rsi, rax
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x30a94]
cmp	byte ptr [rcx + 0x6f], 0
mov	qword ptr [rcx], rax
mov	rbx, rcx
je	0x140096940
je	0x140096940
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x140096916
je	0x140096916
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x28]
test	rcx, rcx
je	0x140096924
je	0x140096924
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x38]
test	rcx, rcx
je	0x140096932
je	0x140096932
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x48]
test	rcx, rcx
je	0x140096940
je	0x140096940
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x30a34]
cmp	byte ptr [rcx + 0x6f], 0
mov	qword ptr [rcx], rax
mov	rbx, rcx
je	0x1400969a0
je	0x1400969a0
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x140096976
je	0x140096976
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x28]
test	rcx, rcx
je	0x140096984
je	0x140096984
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x38]
test	rcx, rcx
je	0x140096992
je	0x140096992
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x48]
test	rcx, rcx
je	0x1400969a0
je	0x1400969a0
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
mov	rsi, rcx
lea	rcx, [rip + 0x20656]
mov	rbp, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp]
mov	rax, qword ptr [rax + 8]
mov	rbx, qword ptr [rax + rdx*8]
test	rbx, rbx
je	0x140096edf
je	0x140096edf
mov	rax, qword ptr [rbx]
lea	rdx, [rip - 0x7a364]
mov	rax, qword ptr [rax + 0x28]
cmp	rax, rdx
jne	0x140096e30
jne	0x140096e30
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	rdi, qword ptr [rax + 0x28]
test	rdi, rdi
je	0x140096a21
je	0x140096a21
mov	rcx, rdi
call	0x140015a08
call	0x140015a08
lea	rdx, [rdi + rax]
lea	r8, [rsp + 0x47]
mov	rcx, rdi
call	0x140071f50
call	0x140071f50
mov	qword ptr [rsp + 0x48], rax
mov	r15, qword ptr [rax - 0x18]
mov	rcx, r15
call	0x1400b2c00
call	0x1400b2c00
lea	rdi, [rsp + 0x48]
xor	r9d, r9d
mov	r8, r15
mov	rdx, rax
mov	rcx, rdi
mov	qword ptr [rsp + 0x30], rax
call	0x14001b700
call	0x14001b700
mov	rax, qword ptr [rip + 0x27bcf]
mov	rcx, qword ptr [rsp + 0x48]
mov	r10d, dword ptr [rax]
test	r10d, r10d
jne	0x140096de0
jne	0x140096de0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140096df2
jle	0x140096df2
mov	rax, qword ptr [rbx]
lea	rdx, [rip - 0x7a33d]
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rdx
jne	0x140096e88
jne	0x140096e88
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	r12, qword ptr [rax + 0x38]
test	r12, r12
je	0x140096aba
je	0x140096aba
mov	rcx, r12
call	0x140015a08
call	0x140015a08
lea	rdx, [r12 + rax]
lea	r8, [rsp + 0x45]
mov	rcx, r12
call	0x140071f50
call	0x140071f50
mov	qword ptr [rsp + 0x48], rax
mov	r14, qword ptr [rax - 0x18]
mov	rcx, r14
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r14
mov	rdx, rax
mov	rcx, rdi
mov	qword ptr [rsp + 0x28], rax
call	0x14001b700
call	0x14001b700
mov	rax, qword ptr [rip + 0x27b3b]
mov	rcx, qword ptr [rsp + 0x48]
mov	r9d, dword ptr [rax]
test	r9d, r9d
jne	0x140096db8
jne	0x140096db8
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140096dca
jle	0x140096dca
mov	rax, qword ptr [rbx]
lea	rdx, [rip - 0x7a421]
mov	rax, qword ptr [rax + 0x38]
cmp	rax, rdx
jne	0x140096e60
jne	0x140096e60
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	r12, qword ptr [rax + 0x48]
test	r12, r12
je	0x140096b4e
je	0x140096b4e
mov	rcx, r12
call	0x140015a08
call	0x140015a08
lea	rdx, [r12 + rax]
lea	r8, [rsp + 0x46]
mov	rcx, r12
call	0x140071f50
call	0x140071f50
mov	qword ptr [rsp + 0x48], rax
mov	r13, qword ptr [rax - 0x18]
mov	rcx, r13
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	qword ptr [rsp + 0x20], rax
call	0x14001b700
call	0x14001b700
mov	rax, qword ptr [rip + 0x27aa7]
mov	rcx, qword ptr [rsp + 0x48]
mov	r8d, dword ptr [rax]
test	r8d, r8d
jne	0x140096d90
jne	0x140096d90
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140096da2
jle	0x140096da2
mov	rax, qword ptr [rbx]
lea	rdx, [rip - 0x7a705]
mov	rax, qword ptr [rax + 0x20]
cmp	rax, rdx
jne	0x140096e48
jne	0x140096e48
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, 0xffffffffffffffff
mov	r12, qword ptr [rax + 0x10]
test	r12, r12
je	0x140096be2
je	0x140096be2
mov	rcx, r12
call	0x140015a08
call	0x140015a08
lea	rdx, [r12 + rax]
lea	r8, [rsp + 0x47]
mov	rcx, r12
call	0x140071f50
call	0x140071f50
mov	qword ptr [rsp + 0x48], rax
mov	r12, qword ptr [rax - 0x18]
mov	rcx, r12
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r12
mov	rdx, rax
mov	rcx, rdi
mov	qword ptr [rsp + 0x38], rax
call	0x14001b700
call	0x14001b700
mov	rdi, qword ptr [rsp + 0x38]
mov	qword ptr [rsi + 0x18], r12
xor	eax, eax
mov	qword ptr [rsi + 0x10], rdi
test	r12, r12
jne	0x140096d78
jne	0x140096d78
mov	byte ptr [rsi + 0x20], al
mov	rax, qword ptr [rbx]
lea	rdx, [rip - 0x7a54b]
mov	rax, qword ptr [rax + 0x10]
cmp	rax, rdx
jne	0x140096ea0
jne	0x140096ea0
mov	rax, qword ptr [rbx + 0x10]
movzx	eax, byte ptr [rax + 0x21]
mov	byte ptr [rsi + 0x21], al
mov	rax, qword ptr [rbx]
lea	rdx, [rip - 0x7a4bd]
mov	rax, qword ptr [rax + 0x18]
cmp	rax, rdx
jne	0x140096eb0
jne	0x140096eb0
mov	rax, qword ptr [rbx + 0x10]
movzx	eax, byte ptr [rax + 0x22]
mov	byte ptr [rsi + 0x22], al
mov	rax, qword ptr [rsp + 0x30]
lea	rcx, [rip - 0x7a5a1]
mov	rdx, qword ptr [rbx]
mov	qword ptr [rsi + 0x30], r15
mov	qword ptr [rsi + 0x28], rax
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rsi + 0x40], r14
mov	qword ptr [rsi + 0x38], rax
mov	rax, qword ptr [rsp + 0x20]
mov	qword ptr [rsi + 0x50], r13
mov	qword ptr [rsi + 0x48], rax
mov	rax, qword ptr [rdx + 0x40]
cmp	rax, rcx
jne	0x140096ec0
jne	0x140096ec0
mov	rax, qword ptr [rbx + 0x10]
mov	eax, dword ptr [rax + 0x58]
mov	dword ptr [rsi + 0x58], eax
mov	rax, qword ptr [rdx + 0x48]
lea	rdx, [rip - 0x7a758]
cmp	rax, rdx
jne	0x140096ed0
jne	0x140096ed0
mov	rax, qword ptr [rbx + 0x10]
mov	eax, dword ptr [rax + 0x5c]
mov	dword ptr [rsi + 0x5c], eax
mov	rax, qword ptr [rbx]
lea	rdx, [rip - 0x7a785]
mov	rax, qword ptr [rax + 0x50]
cmp	rax, rdx
jne	0x140096e78
jne	0x140096e78
mov	rax, qword ptr [rbx + 0x10]
mov	eax, dword ptr [rax + 0x60]
mov	dword ptr [rsi + 0x60], eax
mov	rcx, qword ptr [rip + 0x27bcd]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp]
mov	rax, qword ptr [rax + 8]
mov	rcx, qword ptr [rax + rdx*8]
test	rcx, rcx
je	0x140096eda
je	0x140096eda
mov	rax, qword ptr [rip + 0x27a69]
lea	r9, [rsi + 0x64]
mov	rdx, qword ptr [rax]
lea	r8, [rdx + 0xb]
call	0x140022330
call	0x140022330
mov	rax, qword ptr [rip + 0x278f2]
mov	rcx, qword ptr [rsp + 0x48]
mov	byte ptr [rsi + 0x6f], 1
mov	edx, dword ptr [rax]
test	edx, edx
jne	0x140096e08
jne	0x140096e08
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140096e1a
jle	0x140096e1a
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rdi]
sub	eax, 1
cmp	al, 0x7d
setbe	al
jmp	0x140096c2e
jmp	0x140096c2e
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140096bab
jg	0x140096bab
lea	rdx, [rsp + 0x47]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x140096bab
jmp	0x140096bab
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140096b17
jg	0x140096b17
lea	rdx, [rsp + 0x47]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x140096b17
jmp	0x140096b17
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140096a83
jg	0x140096a83
lea	rdx, [rsp + 0x47]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x140096a83
jmp	0x140096a83
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140096d62
jg	0x140096d62
lea	rdx, [rsp + 0x47]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x140096d62
jmp	0x140096d62
nop	dword ptr [rax]
lea	rcx, [rsp + 0x48]
mov	rdx, rbx
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x48]
jmp	0x140096a33
jmp	0x140096a33
nop	dword ptr [rax]
mov	rdx, rbx
mov	rcx, rdi
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x48]
jmp	0x140096bf4
jmp	0x140096bf4
nop	word ptr [rax + rax]
mov	rdx, rbx
mov	rcx, rdi
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x48]
jmp	0x140096b60
jmp	0x140096b60
nop	word ptr [rax + rax]
mov	rcx, rbx
call	rax
call	rax
jmp	0x140096cf9
jmp	0x140096cf9
nop	word ptr [rax + rax]
mov	rdx, rbx
mov	rcx, rdi
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x48]
jmp	0x140096acc
jmp	0x140096acc
nop	word ptr [rax + rax]
mov	rcx, rbx
call	rax
call	rax
jmp	0x140096c50
jmp	0x140096c50
nop	word ptr [rax + rax]
mov	rcx, rbx
call	rax
call	rax
jmp	0x140096c72
jmp	0x140096c72
nop	word ptr [rax + rax]
mov	rcx, rbx
call	rax
call	rax
mov	rdx, qword ptr [rbx]
jmp	0x140096cba
jmp	0x140096cba
nop	dword ptr [rax]
mov	rcx, rbx
call	rax
call	rax
jmp	0x140096cd8
jmp	0x140096cd8
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
mov	rbx, rax
xor	eax, eax
mov	qword ptr [rsp + 0x20], rax
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x30], rax
mov	rax, qword ptr [rsp + 0x48]
lea	rdx, [rsp + 0x47]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
cmp	qword ptr [rsp + 0x20], 0
je	0x140096f1d
je	0x140096f1d
mov	rcx, qword ptr [rsp + 0x20]
call	0x1400b2bd0
call	0x1400b2bd0
cmp	qword ptr [rsp + 0x28], 0
jne	0x140096f41
jne	0x140096f41
jmp	0x140096f4b
jmp	0x140096f4b
jmp	0x140096ee4
jmp	0x140096ee4
jmp	0x140096ee4
jmp	0x140096ee4
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x48]
lea	rdx, [rsp + 0x47]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, qword ptr [rsp + 0x28]
call	0x1400b2bd0
call	0x1400b2bd0
cmp	qword ptr [rsp + 0x30], 0
je	0x140096f5d
je	0x140096f5d
mov	rcx, qword ptr [rsp + 0x30]
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x140096f41
jmp	0x140096f41
jmp	0x140096ee4
jmp	0x140096ee4
mov	rbx, rax
jmp	0x140096f13
jmp	0x140096f13
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x48]
lea	rdx, [rsp + 0x47]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x140096f53
jmp	0x140096f53
mov	rbx, rax
jmp	0x140096ef8
jmp	0x140096ef8
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x48]
lea	rdx, [rsp + 0x47]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
jmp	0x140096f53
jmp	0x140096f53
jmp	0x140096ee4
jmp	0x140096ee4
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
setne	al
mov	qword ptr [rcx + 0x18], 0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x303ce]
mov	qword ptr [rcx], rax
xor	eax, eax
mov	byte ptr [rcx + 0x20], 0
mov	word ptr [rcx + 0x21], ax
mov	qword ptr [rcx + 0x28], 0
mov	qword ptr [rcx + 0x30], 0
mov	qword ptr [rcx + 0x38], 0
mov	qword ptr [rcx + 0x40], 0
mov	qword ptr [rcx + 0x48], 0
mov	qword ptr [rcx + 0x50], 0
mov	dword ptr [rcx + 0x58], 0
mov	qword ptr [rcx + 0x5c], 0
mov	byte ptr [rcx + 0x6f], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
setne	al
mov	qword ptr [rcx + 0x18], 0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x3034e]
mov	qword ptr [rcx], rax
xor	eax, eax
mov	byte ptr [rcx + 0x20], 0
mov	word ptr [rcx + 0x21], ax
mov	qword ptr [rcx + 0x28], 0
mov	qword ptr [rcx + 0x30], 0
mov	qword ptr [rcx + 0x38], 0
mov	qword ptr [rcx + 0x40], 0
mov	qword ptr [rcx + 0x48], 0
mov	qword ptr [rcx + 0x50], 0
mov	dword ptr [rcx + 0x58], 0
mov	qword ptr [rcx + 0x5c], 0
mov	byte ptr [rcx + 0x6f], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
call	0x1400970f0
call	0x1400970f0
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rsi, rax
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x302b4]
cmp	byte ptr [rcx + 0x6f], 0
mov	qword ptr [rcx], rax
mov	rbx, rcx
je	0x140097140
je	0x140097140
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x140097116
je	0x140097116
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x28]
test	rcx, rcx
je	0x140097124
je	0x140097124
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x38]
test	rcx, rcx
je	0x140097132
je	0x140097132
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x48]
test	rcx, rcx
je	0x140097140
je	0x140097140
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x30254]
cmp	byte ptr [rcx + 0x6f], 0
mov	qword ptr [rcx], rax
mov	rbx, rcx
je	0x1400971a0
je	0x1400971a0
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x140097176
je	0x140097176
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x28]
test	rcx, rcx
je	0x140097184
je	0x140097184
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x38]
test	rcx, rcx
je	0x140097192
je	0x140097192
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x48]
test	rcx, rcx
je	0x1400971a0
je	0x1400971a0
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x68
mov	rbx, rcx
lea	rcx, [rip + 0x1fe66]
mov	rbp, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp]
mov	rax, qword ptr [rax + 8]
mov	rsi, qword ptr [rax + rdx*8]
test	rsi, rsi
je	0x1400976dc
je	0x1400976dc
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x7a724]
mov	rax, qword ptr [rax + 0x28]
cmp	rax, rdx
jne	0x140097690
jne	0x140097690
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	rdi, qword ptr [rax + 0x28]
test	rdi, rdi
je	0x140097221
je	0x140097221
mov	rcx, rdi
call	0x140015a60
call	0x140015a60
lea	rdx, [rdi + rax*2]
lea	r8, [rsp + 0x57]
mov	rcx, rdi
call	0x140068a90
call	0x140068a90
mov	qword ptr [rsp + 0x58], rax
mov	r14, qword ptr [rax - 0x18]
movabs	rax, 0x3ffffffffffffffc
cmp	rax, r14
jb	0x14009774f
jb	0x14009774f
lea	rcx, [r14 + r14]
call	0x1400b2c00
call	0x1400b2c00
lea	rdi, [rsp + 0x58]
xor	r9d, r9d
mov	r8, r14
mov	rdx, rax
mov	rcx, rdi
mov	qword ptr [rsp + 0x38], rax
call	0x14001a690
call	0x14001a690
mov	r15, qword ptr [rip + 0x273bb]
mov	rcx, qword ptr [rsp + 0x58]
mov	r9d, dword ptr [r15]
test	r9d, r9d
jne	0x140097600
jne	0x140097600
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140097612
jle	0x140097612
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x7a711]
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rdx
jne	0x1400976a8
jne	0x1400976a8
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	r12, qword ptr [rax + 0x38]
test	r12, r12
je	0x1400972ce
je	0x1400972ce
mov	rcx, r12
call	0x140015a60
call	0x140015a60
lea	rdx, [r12 + rax*2]
lea	r8, [rsp + 0x55]
mov	rcx, r12
call	0x140068a90
call	0x140068a90
mov	qword ptr [rsp + 0x58], rax
mov	r13, qword ptr [rax - 0x18]
movabs	rax, 0x3ffffffffffffffc
cmp	rax, r13
jb	0x14009775e
jb	0x14009775e
lea	rcx, [r13 + r13]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	qword ptr [rsp + 0x30], rax
call	0x14001a690
call	0x14001a690
mov	r8d, dword ptr [r15]
mov	rcx, qword ptr [rsp + 0x58]
test	r8d, r8d
jne	0x1400975d8
jne	0x1400975d8
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x1400975ea
jle	0x1400975ea
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x7a803]
mov	rax, qword ptr [rax + 0x38]
cmp	rax, rdx
jne	0x140097628
jne	0x140097628
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	r12, qword ptr [rax + 0x48]
test	r12, r12
je	0x140097370
je	0x140097370
mov	rcx, r12
call	0x140015a60
call	0x140015a60
lea	rdx, [r12 + rax*2]
lea	r8, [rsp + 0x56]
mov	rcx, r12
call	0x140068a90
call	0x140068a90
mov	qword ptr [rsp + 0x58], rax
mov	r12, qword ptr [rax - 0x18]
movabs	rax, 0x3ffffffffffffffc
cmp	rax, r12
jb	0x140097765
jb	0x140097765
lea	rcx, [r12 + r12]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r12
mov	rdx, rax
mov	rcx, rdi
mov	qword ptr [rsp + 0x28], rax
call	0x14001a690
call	0x14001a690
mov	edx, dword ptr [r15]
mov	rcx, qword ptr [rsp + 0x58]
test	edx, edx
jne	0x1400975b0
jne	0x1400975b0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x1400975c2
jle	0x1400975c2
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x7aaf3]
mov	rax, qword ptr [rax + 0x20]
cmp	rax, rdx
jne	0x1400976c0
jne	0x1400976c0
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, 0xffffffffffffffff
mov	r15, qword ptr [rax + 0x10]
test	r15, r15
je	0x140097410
je	0x140097410
mov	rcx, r15
call	0x140015a08
call	0x140015a08
lea	rdx, [r15 + rax]
lea	rax, [rsp + 0x57]
mov	rcx, r15
mov	r8, rax
mov	qword ptr [rsp + 0x48], rax
call	0x140071ff0
call	0x140071ff0
mov	qword ptr [rsp + 0x58], rax
mov	r15, qword ptr [rax - 0x18]
mov	rcx, r15
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r15
mov	rdx, rax
mov	rcx, rdi
mov	qword ptr [rsp + 0x40], rax
call	0x14001b700
call	0x14001b700
mov	rdi, qword ptr [rsp + 0x40]
mov	qword ptr [rbx + 0x18], r15
xor	eax, eax
mov	qword ptr [rbx + 0x10], rdi
test	r15, r15
jne	0x140097598
jne	0x140097598
mov	rdx, qword ptr [rsi]
mov	byte ptr [rbx + 0x20], al
lea	rcx, [rip - 0x7a941]
mov	rax, qword ptr [rdx + 0x10]
cmp	rax, rcx
jne	0x140097640
jne	0x140097640
mov	rax, qword ptr [rsi + 0x10]
movzx	eax, word ptr [rax + 0x22]
mov	word ptr [rbx + 0x22], ax
mov	rax, qword ptr [rdx + 0x18]
lea	rcx, [rip - 0x7a8b5]
cmp	rax, rcx
jne	0x140097650
jne	0x140097650
mov	rax, qword ptr [rsi + 0x10]
movzx	eax, word ptr [rax + 0x24]
mov	word ptr [rbx + 0x24], ax
mov	rax, qword ptr [rsp + 0x38]
lea	rcx, [rip - 0x7a996]
mov	qword ptr [rbx + 0x30], r14
mov	qword ptr [rbx + 0x28], rax
mov	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rbx + 0x40], r13
mov	qword ptr [rbx + 0x38], rax
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x50], r12
mov	qword ptr [rbx + 0x48], rax
mov	rax, qword ptr [rdx + 0x40]
cmp	rax, rcx
jne	0x140097660
jne	0x140097660
mov	rax, qword ptr [rsi + 0x10]
mov	eax, dword ptr [rax + 0x58]
mov	dword ptr [rbx + 0x58], eax
mov	rax, qword ptr [rdx + 0x48]
lea	rdx, [rip - 0x7ab4a]
cmp	rax, rdx
jne	0x140097670
jne	0x140097670
mov	rax, qword ptr [rsi + 0x10]
mov	eax, dword ptr [rax + 0x5c]
mov	dword ptr [rbx + 0x5c], eax
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x7ab77]
mov	rax, qword ptr [rax + 0x50]
cmp	rax, rdx
jne	0x140097680
jne	0x140097680
mov	rax, qword ptr [rsi + 0x10]
mov	eax, dword ptr [rax + 0x60]
mov	dword ptr [rbx + 0x60], eax
mov	rcx, qword ptr [rip + 0x273ab]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp]
mov	rax, qword ptr [rax + 8]
mov	rcx, qword ptr [rax + rdx*8]
test	rcx, rcx
je	0x1400976e1
je	0x1400976e1
mov	rax, qword ptr [rip + 0x27237]
lea	r9, [rbx + 0x64]
mov	rdx, qword ptr [rax]
mov	rax, qword ptr [rcx]
lea	r8, [rdx + 0xb]
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
mov	rax, qword ptr [rsp + 0x58]
mov	rdx, qword ptr [rsp + 0x48]
mov	byte ptr [rbx + 0x7a], 1
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
nop	
add	rsp, 0x68
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rdi]
sub	eax, 1
cmp	al, 0x7d
setbe	al
jmp	0x140097464
jmp	0x140097464
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x1400973d9
jg	0x1400973d9
lea	rdx, [rsp + 0x57]
sub	rcx, 0x18
call	0x140068ef0
call	0x140068ef0
jmp	0x1400973d9
jmp	0x1400973d9
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140097339
jg	0x140097339
lea	rdx, [rsp + 0x57]
sub	rcx, 0x18
call	0x140068ef0
call	0x140068ef0
jmp	0x140097339
jmp	0x140097339
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140097297
jg	0x140097297
lea	rdx, [rsp + 0x57]
sub	rcx, 0x18
call	0x140068ef0
call	0x140068ef0
jmp	0x140097297
jmp	0x140097297
nop	dword ptr [rax]
mov	rdx, rsi
mov	rcx, rdi
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x58]
jmp	0x140097382
jmp	0x140097382
nop	word ptr [rax + rax]
mov	rcx, rsi
call	rax
call	rax
mov	rdx, qword ptr [rsi]
jmp	0x140097486
jmp	0x140097486
nop	dword ptr [rax]
mov	rcx, rsi
call	rax
call	rax
mov	rdx, qword ptr [rsi]
jmp	0x1400974a6
jmp	0x1400974a6
nop	dword ptr [rax]
mov	rcx, rsi
call	rax
call	rax
mov	rdx, qword ptr [rsi]
jmp	0x1400974ec
jmp	0x1400974ec
nop	dword ptr [rax]
mov	rcx, rsi
call	rax
call	rax
jmp	0x14009750a
jmp	0x14009750a
nop	word ptr [rax + rax]
mov	rcx, rsi
call	rax
call	rax
jmp	0x14009752b
jmp	0x14009752b
nop	word ptr [rax + rax]
lea	rcx, [rsp + 0x58]
mov	rdx, rsi
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x58]
jmp	0x140097233
jmp	0x140097233
nop	dword ptr [rax]
mov	rdx, rsi
mov	rcx, rdi
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x58]
jmp	0x1400972e0
jmp	0x1400972e0
nop	word ptr [rax + rax]
mov	rdx, rsi
mov	rcx, rdi
call	rax
call	rax
lea	rcx, [rsp + 0x57]
mov	rax, qword ptr [rsp + 0x58]
mov	qword ptr [rsp + 0x48], rcx
jmp	0x14009742a
jmp	0x14009742a
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
mov	rbx, rax
xor	eax, eax
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x30], rax
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x58]
mov	rdx, qword ptr [rsp + 0x48]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
cmp	qword ptr [rsp + 0x28], 0
je	0x14009771f
je	0x14009771f
mov	rcx, qword ptr [rsp + 0x28]
call	0x1400b2bd0
call	0x1400b2bd0
cmp	qword ptr [rsp + 0x30], 0
je	0x140097731
je	0x140097731
mov	rcx, qword ptr [rsp + 0x30]
call	0x1400b2bd0
call	0x1400b2bd0
cmp	qword ptr [rsp + 0x38], 0
je	0x140097743
je	0x140097743
mov	rcx, qword ptr [rsp + 0x38]
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
jmp	0x1400976e6
jmp	0x1400976e6
jmp	0x1400976e6
jmp	0x1400976e6
call	0x1400b41c0
call	0x1400b41c0
mov	rbx, rax
jmp	0x140097739
jmp	0x140097739
mov	rbx, rax
jmp	0x1400976fa
jmp	0x1400976fa
call	0x1400b41c0
call	0x1400b41c0
jmp	0x1400976e6
jmp	0x1400976e6
call	0x1400b41c0
call	0x1400b41c0
mov	rbx, rax
jmp	0x140097727
jmp	0x140097727
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x58]
lea	rdx, [rsp + 0x57]
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
jmp	0x140097739
jmp	0x140097739
mov	rbx, rax
jmp	0x140097715
jmp	0x140097715
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x58]
lea	rdx, [rsp + 0x57]
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
jmp	0x140097727
jmp	0x140097727
jmp	0x1400976e6
jmp	0x1400976e6
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x58]
lea	rdx, [rsp + 0x57]
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
setne	al
mov	qword ptr [rcx + 0x18], 0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x2fbde]
mov	qword ptr [rcx], rax
mov	byte ptr [rcx + 0x20], 0
mov	dword ptr [rcx + 0x22], 0
mov	qword ptr [rcx + 0x28], 0
mov	qword ptr [rcx + 0x30], 0
mov	qword ptr [rcx + 0x38], 0
mov	qword ptr [rcx + 0x40], 0
mov	qword ptr [rcx + 0x48], 0
mov	qword ptr [rcx + 0x50], 0
mov	dword ptr [rcx + 0x58], 0
mov	qword ptr [rcx + 0x5c], 0
mov	byte ptr [rcx + 0x7a], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
setne	al
mov	qword ptr [rcx + 0x18], 0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x2fb5e]
mov	qword ptr [rcx], rax
mov	byte ptr [rcx + 0x20], 0
mov	dword ptr [rcx + 0x22], 0
mov	qword ptr [rcx + 0x28], 0
mov	qword ptr [rcx + 0x30], 0
mov	qword ptr [rcx + 0x38], 0
mov	qword ptr [rcx + 0x40], 0
mov	qword ptr [rcx + 0x48], 0
mov	qword ptr [rcx + 0x50], 0
mov	dword ptr [rcx + 0x58], 0
mov	qword ptr [rcx + 0x5c], 0
mov	byte ptr [rcx + 0x7a], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
call	0x140097900
call	0x140097900
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rsi, rax
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x2fac4]
cmp	byte ptr [rcx + 0x7a], 0
mov	qword ptr [rcx], rax
mov	rbx, rcx
je	0x140097950
je	0x140097950
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x140097926
je	0x140097926
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x28]
test	rcx, rcx
je	0x140097934
je	0x140097934
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x38]
test	rcx, rcx
je	0x140097942
je	0x140097942
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x48]
test	rcx, rcx
je	0x140097950
je	0x140097950
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x2fa64]
cmp	byte ptr [rcx + 0x7a], 0
mov	qword ptr [rcx], rax
mov	rbx, rcx
je	0x1400979b0
je	0x1400979b0
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x140097986
je	0x140097986
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x28]
test	rcx, rcx
je	0x140097994
je	0x140097994
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x38]
test	rcx, rcx
je	0x1400979a2
je	0x1400979a2
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x48]
test	rcx, rcx
je	0x1400979b0
je	0x1400979b0
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x68
mov	rbx, rcx
lea	rcx, [rip + 0x1f666]
mov	rbp, rdx
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp]
mov	rax, qword ptr [rax + 8]
mov	rsi, qword ptr [rax + rdx*8]
test	rsi, rsi
je	0x140097eec
je	0x140097eec
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x7aaf4]
mov	rax, qword ptr [rax + 0x28]
cmp	rax, rdx
jne	0x140097ea0
jne	0x140097ea0
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	rdi, qword ptr [rax + 0x28]
test	rdi, rdi
je	0x140097a31
je	0x140097a31
mov	rcx, rdi
call	0x140015a60
call	0x140015a60
lea	rdx, [rdi + rax*2]
lea	r8, [rsp + 0x57]
mov	rcx, rdi
call	0x140068a90
call	0x140068a90
mov	qword ptr [rsp + 0x58], rax
mov	r14, qword ptr [rax - 0x18]
movabs	rax, 0x3ffffffffffffffc
cmp	rax, r14
jb	0x140097f5f
jb	0x140097f5f
lea	rcx, [r14 + r14]
call	0x1400b2c00
call	0x1400b2c00
lea	rdi, [rsp + 0x58]
xor	r9d, r9d
mov	r8, r14
mov	rdx, rax
mov	rcx, rdi
mov	qword ptr [rsp + 0x38], rax
call	0x14001a690
call	0x14001a690
mov	r15, qword ptr [rip + 0x26bab]
mov	rcx, qword ptr [rsp + 0x58]
mov	r9d, dword ptr [r15]
test	r9d, r9d
jne	0x140097e10
jne	0x140097e10
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140097e22
jle	0x140097e22
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x7aae1]
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rdx
jne	0x140097eb8
jne	0x140097eb8
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	r12, qword ptr [rax + 0x38]
test	r12, r12
je	0x140097ade
je	0x140097ade
mov	rcx, r12
call	0x140015a60
call	0x140015a60
lea	rdx, [r12 + rax*2]
lea	r8, [rsp + 0x55]
mov	rcx, r12
call	0x140068a90
call	0x140068a90
mov	qword ptr [rsp + 0x58], rax
mov	r13, qword ptr [rax - 0x18]
movabs	rax, 0x3ffffffffffffffc
cmp	rax, r13
jb	0x140097f6e
jb	0x140097f6e
lea	rcx, [r13 + r13]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r13
mov	rdx, rax
mov	rcx, rdi
mov	qword ptr [rsp + 0x30], rax
call	0x14001a690
call	0x14001a690
mov	r8d, dword ptr [r15]
mov	rcx, qword ptr [rsp + 0x58]
test	r8d, r8d
jne	0x140097de8
jne	0x140097de8
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140097dfa
jle	0x140097dfa
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x7abd3]
mov	rax, qword ptr [rax + 0x38]
cmp	rax, rdx
jne	0x140097e38
jne	0x140097e38
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, 0xfffffffffffffffe
mov	r12, qword ptr [rax + 0x48]
test	r12, r12
je	0x140097b80
je	0x140097b80
mov	rcx, r12
call	0x140015a60
call	0x140015a60
lea	rdx, [r12 + rax*2]
lea	r8, [rsp + 0x56]
mov	rcx, r12
call	0x140068a90
call	0x140068a90
mov	qword ptr [rsp + 0x58], rax
mov	r12, qword ptr [rax - 0x18]
movabs	rax, 0x3ffffffffffffffc
cmp	rax, r12
jb	0x140097f75
jb	0x140097f75
lea	rcx, [r12 + r12]
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r12
mov	rdx, rax
mov	rcx, rdi
mov	qword ptr [rsp + 0x28], rax
call	0x14001a690
call	0x14001a690
mov	edx, dword ptr [r15]
mov	rcx, qword ptr [rsp + 0x58]
test	edx, edx
jne	0x140097dc0
jne	0x140097dc0
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x140097dd2
jle	0x140097dd2
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x7aec3]
mov	rax, qword ptr [rax + 0x20]
cmp	rax, rdx
jne	0x140097ed0
jne	0x140097ed0
mov	rax, qword ptr [rsi + 0x10]
mov	rdx, 0xffffffffffffffff
mov	r15, qword ptr [rax + 0x10]
test	r15, r15
je	0x140097c20
je	0x140097c20
mov	rcx, r15
call	0x140015a08
call	0x140015a08
lea	rdx, [r15 + rax]
lea	rax, [rsp + 0x57]
mov	rcx, r15
mov	r8, rax
mov	qword ptr [rsp + 0x48], rax
call	0x140071ff0
call	0x140071ff0
mov	qword ptr [rsp + 0x58], rax
mov	r15, qword ptr [rax - 0x18]
mov	rcx, r15
call	0x1400b2c00
call	0x1400b2c00
xor	r9d, r9d
mov	r8, r15
mov	rdx, rax
mov	rcx, rdi
mov	qword ptr [rsp + 0x40], rax
call	0x14001b700
call	0x14001b700
mov	rdi, qword ptr [rsp + 0x40]
mov	qword ptr [rbx + 0x18], r15
xor	eax, eax
mov	qword ptr [rbx + 0x10], rdi
test	r15, r15
jne	0x140097da8
jne	0x140097da8
mov	rdx, qword ptr [rsi]
mov	byte ptr [rbx + 0x20], al
lea	rcx, [rip - 0x7ad11]
mov	rax, qword ptr [rdx + 0x10]
cmp	rax, rcx
jne	0x140097e50
jne	0x140097e50
mov	rax, qword ptr [rsi + 0x10]
movzx	eax, word ptr [rax + 0x22]
mov	word ptr [rbx + 0x22], ax
mov	rax, qword ptr [rdx + 0x18]
lea	rcx, [rip - 0x7ac85]
cmp	rax, rcx
jne	0x140097e60
jne	0x140097e60
mov	rax, qword ptr [rsi + 0x10]
movzx	eax, word ptr [rax + 0x24]
mov	word ptr [rbx + 0x24], ax
mov	rax, qword ptr [rsp + 0x38]
lea	rcx, [rip - 0x7ad66]
mov	qword ptr [rbx + 0x30], r14
mov	qword ptr [rbx + 0x28], rax
mov	rax, qword ptr [rsp + 0x30]
mov	qword ptr [rbx + 0x40], r13
mov	qword ptr [rbx + 0x38], rax
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x50], r12
mov	qword ptr [rbx + 0x48], rax
mov	rax, qword ptr [rdx + 0x40]
cmp	rax, rcx
jne	0x140097e70
jne	0x140097e70
mov	rax, qword ptr [rsi + 0x10]
mov	eax, dword ptr [rax + 0x58]
mov	dword ptr [rbx + 0x58], eax
mov	rax, qword ptr [rdx + 0x48]
lea	rdx, [rip - 0x7af1a]
cmp	rax, rdx
jne	0x140097e80
jne	0x140097e80
mov	rax, qword ptr [rsi + 0x10]
mov	eax, dword ptr [rax + 0x5c]
mov	dword ptr [rbx + 0x5c], eax
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x7af47]
mov	rax, qword ptr [rax + 0x50]
cmp	rax, rdx
jne	0x140097e90
jne	0x140097e90
mov	rax, qword ptr [rsi + 0x10]
mov	eax, dword ptr [rax + 0x60]
mov	dword ptr [rbx + 0x60], eax
mov	rcx, qword ptr [rip + 0x26b9b]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp]
mov	rax, qword ptr [rax + 8]
mov	rcx, qword ptr [rax + rdx*8]
test	rcx, rcx
je	0x140097ef1
je	0x140097ef1
mov	rax, qword ptr [rip + 0x26a27]
lea	r9, [rbx + 0x64]
mov	rdx, qword ptr [rax]
mov	rax, qword ptr [rcx]
lea	r8, [rdx + 0xb]
call	qword ptr [rax + 0x58]
call	qword ptr [rax + 0x58]
mov	rax, qword ptr [rsp + 0x58]
mov	rdx, qword ptr [rsp + 0x48]
mov	byte ptr [rbx + 0x7a], 1
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
nop	
add	rsp, 0x68
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rdi]
sub	eax, 1
cmp	al, 0x7d
setbe	al
jmp	0x140097c74
jmp	0x140097c74
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140097be9
jg	0x140097be9
lea	rdx, [rsp + 0x57]
sub	rcx, 0x18
call	0x140068ef0
call	0x140068ef0
jmp	0x140097be9
jmp	0x140097be9
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140097b49
jg	0x140097b49
lea	rdx, [rsp + 0x57]
sub	rcx, 0x18
call	0x140068ef0
call	0x140068ef0
jmp	0x140097b49
jmp	0x140097b49
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x140097aa7
jg	0x140097aa7
lea	rdx, [rsp + 0x57]
sub	rcx, 0x18
call	0x140068ef0
call	0x140068ef0
jmp	0x140097aa7
jmp	0x140097aa7
nop	dword ptr [rax]
mov	rdx, rsi
mov	rcx, rdi
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x58]
jmp	0x140097b92
jmp	0x140097b92
nop	word ptr [rax + rax]
mov	rcx, rsi
call	rax
call	rax
mov	rdx, qword ptr [rsi]
jmp	0x140097c96
jmp	0x140097c96
nop	dword ptr [rax]
mov	rcx, rsi
call	rax
call	rax
mov	rdx, qword ptr [rsi]
jmp	0x140097cb6
jmp	0x140097cb6
nop	dword ptr [rax]
mov	rcx, rsi
call	rax
call	rax
mov	rdx, qword ptr [rsi]
jmp	0x140097cfc
jmp	0x140097cfc
nop	dword ptr [rax]
mov	rcx, rsi
call	rax
call	rax
jmp	0x140097d1a
jmp	0x140097d1a
nop	word ptr [rax + rax]
mov	rcx, rsi
call	rax
call	rax
jmp	0x140097d3b
jmp	0x140097d3b
nop	word ptr [rax + rax]
lea	rcx, [rsp + 0x58]
mov	rdx, rsi
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x58]
jmp	0x140097a43
jmp	0x140097a43
nop	dword ptr [rax]
mov	rdx, rsi
mov	rcx, rdi
call	rax
call	rax
mov	rax, qword ptr [rsp + 0x58]
jmp	0x140097af0
jmp	0x140097af0
nop	word ptr [rax + rax]
mov	rdx, rsi
mov	rcx, rdi
call	rax
call	rax
lea	rcx, [rsp + 0x57]
mov	rax, qword ptr [rsp + 0x58]
mov	qword ptr [rsp + 0x48], rcx
jmp	0x140097c3a
jmp	0x140097c3a
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
mov	rbx, rax
xor	eax, eax
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x30], rax
mov	qword ptr [rsp + 0x38], rax
mov	rax, qword ptr [rsp + 0x58]
mov	rdx, qword ptr [rsp + 0x48]
lea	rcx, [rax - 0x18]
call	0x140072490
call	0x140072490
cmp	qword ptr [rsp + 0x28], 0
je	0x140097f2f
je	0x140097f2f
mov	rcx, qword ptr [rsp + 0x28]
call	0x1400b2bd0
call	0x1400b2bd0
cmp	qword ptr [rsp + 0x30], 0
je	0x140097f41
je	0x140097f41
mov	rcx, qword ptr [rsp + 0x30]
call	0x1400b2bd0
call	0x1400b2bd0
cmp	qword ptr [rsp + 0x38], 0
je	0x140097f53
je	0x140097f53
mov	rcx, qword ptr [rsp + 0x38]
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
jmp	0x140097ef6
jmp	0x140097ef6
jmp	0x140097ef6
jmp	0x140097ef6
call	0x1400b41c0
call	0x1400b41c0
mov	rbx, rax
jmp	0x140097f49
jmp	0x140097f49
mov	rbx, rax
jmp	0x140097f0a
jmp	0x140097f0a
call	0x1400b41c0
call	0x1400b41c0
jmp	0x140097ef6
jmp	0x140097ef6
call	0x1400b41c0
call	0x1400b41c0
mov	rbx, rax
jmp	0x140097f37
jmp	0x140097f37
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x58]
lea	rdx, [rsp + 0x57]
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
jmp	0x140097f49
jmp	0x140097f49
mov	rbx, rax
jmp	0x140097f25
jmp	0x140097f25
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x58]
lea	rdx, [rsp + 0x57]
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
jmp	0x140097f37
jmp	0x140097f37
jmp	0x140097ef6
jmp	0x140097ef6
mov	rbx, rax
mov	rax, qword ptr [rsp + 0x58]
lea	rdx, [rsp + 0x57]
lea	rcx, [rax - 0x18]
call	0x140068f00
call	0x140068f00
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
setne	al
mov	qword ptr [rcx + 0x18], 0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x2f3ee]
mov	qword ptr [rcx], rax
mov	byte ptr [rcx + 0x20], 0
mov	dword ptr [rcx + 0x22], 0
mov	qword ptr [rcx + 0x28], 0
mov	qword ptr [rcx + 0x30], 0
mov	qword ptr [rcx + 0x38], 0
mov	qword ptr [rcx + 0x40], 0
mov	qword ptr [rcx + 0x48], 0
mov	qword ptr [rcx + 0x50], 0
mov	dword ptr [rcx + 0x58], 0
mov	qword ptr [rcx + 0x5c], 0
mov	byte ptr [rcx + 0x7a], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
setne	al
mov	qword ptr [rcx + 0x18], 0
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x2f36e]
mov	qword ptr [rcx], rax
mov	byte ptr [rcx + 0x20], 0
mov	dword ptr [rcx + 0x22], 0
mov	qword ptr [rcx + 0x28], 0
mov	qword ptr [rcx + 0x30], 0
mov	qword ptr [rcx + 0x38], 0
mov	qword ptr [rcx + 0x40], 0
mov	qword ptr [rcx + 0x48], 0
mov	qword ptr [rcx + 0x50], 0
mov	dword ptr [rcx + 0x58], 0
mov	qword ptr [rcx + 0x5c], 0
mov	byte ptr [rcx + 0x7a], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
call	0x140098110
call	0x140098110
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rsi, rax
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x2f2d4]
cmp	byte ptr [rcx + 0x7a], 0
mov	qword ptr [rcx], rax
mov	rbx, rcx
je	0x140098160
je	0x140098160
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x140098136
je	0x140098136
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x28]
test	rcx, rcx
je	0x140098144
je	0x140098144
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x38]
test	rcx, rcx
je	0x140098152
je	0x140098152
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x48]
test	rcx, rcx
je	0x140098160
je	0x140098160
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x2f274]
cmp	byte ptr [rcx + 0x7a], 0
mov	qword ptr [rcx], rax
mov	rbx, rcx
je	0x1400981c0
je	0x1400981c0
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x140098196
je	0x140098196
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x28]
test	rcx, rcx
je	0x1400981a4
je	0x1400981a4
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x38]
test	rcx, rcx
je	0x1400981b2
je	0x1400981b2
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, qword ptr [rbx + 0x48]
test	rcx, rcx
je	0x1400981c0
je	0x1400981c0
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x2f664]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x2f639]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x2f6e4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x2f6b9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x2f274]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400a88f0
call	0x1400a88f0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x2f249]
mov	qword ptr [rcx], rax
jmp	0x1400a88f0
jmp	0x1400a88f0
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x2f294]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140016150
call	0x140016150
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x2f269]
mov	qword ptr [rcx], rax
jmp	0x140016150
jmp	0x140016150
nop	
push	rsi
push	rbx
sub	rsp, 0x28
cmp	byte ptr [rcx + 8], 0
mov	rbx, rcx
mov	rsi, r8
jne	0x1400982f0
jne	0x1400982f0
mov	rcx, qword ptr [rcx]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
cmp	rsi, rax
jne	0x140098300
jne	0x140098300
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
mov	byte ptr [rbx + 8], 1
jmp	0x1400982f0
jmp	0x1400982f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x2f524]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x2f4f9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x2f5a4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x2f579]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x2f2b4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400a88f0
call	0x1400a88f0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x2f289]
mov	qword ptr [rcx], rax
jmp	0x1400a88f0
jmp	0x1400a88f0
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x2f2d4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400ab120
call	0x1400ab120
mov	edx, 8
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2bf0
jmp	0x1400b2bf0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x2f2a9]
mov	qword ptr [rcx], rax
jmp	0x1400ab120
jmp	0x1400ab120
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x2f424]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x2f3f9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x2f4a4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x2f479]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x2f644]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400a88f0
call	0x1400a88f0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x2f619]
mov	qword ptr [rcx], rax
jmp	0x1400a88f0
jmp	0x1400a88f0
nop	
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1d979]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1d979]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	eax, dword ptr [rcx + 0x18]
mov	rbx, qword ptr [rsp + 0x88]
mov	rdi, qword ptr [rsp + 0x80]
and	eax, 0xb0
sub	rdi, rbx
mov	rbp, rcx
mov	r12d, edx
mov	rsi, r8
mov	r13, r9
cmp	eax, 0x20
je	0x140098640
je	0x140098640
cmp	eax, 0x10
je	0x140098580
je	0x140098580
xor	ebp, ebp
test	rdi, rdi
jne	0x140098600
jne	0x140098600
sub	rbx, rbp
jne	0x140098618
jne	0x140098618
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, qword ptr [rip + 0x26349]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbp + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	rbp, qword ptr [rax + rdx*8]
test	rbp, rbp
je	0x1400987e2
je	0x1400987e2
cmp	byte ptr [rbp + 0x38], 0
je	0x140098690
je	0x140098690
movzx	eax, byte ptr [r13]
cmp	byte ptr [rbp + 0x66], al
je	0x1400986f0
je	0x1400986f0
cmp	al, byte ptr [rbp + 0x64]
je	0x1400986f0
je	0x1400986f0
cmp	byte ptr [rbp + 0x69], al
jne	0x140098553
jne	0x140098553
cmp	rbx, 1
jle	0x140098553
jle	0x140098553
movzx	edx, byte ptr [r13 + 1]
cmp	dl, byte ptr [rbp + 0xb1]
je	0x1400987b0
je	0x1400987b0
movzx	eax, byte ptr [rbp + 0x91]
cmp	al, dl
je	0x1400987b0
je	0x1400987b0
test	rdi, rdi
je	0x14009861b
je	0x14009861b
xor	ebp, ebp
nop	word ptr [rax + rax]
movsx	edx, r12b
mov	r8, rdi
mov	rcx, rsi
call	0x1400159a8
call	0x1400159a8
sub	rbx, rbp
je	0x140098567
je	0x140098567
add	rsi, rdi
mov	r8, rbx
mov	rdx, r13
mov	rcx, rsi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
jmp	0x140015998
jmp	0x140015998
nop	word ptr [rax + rax]
test	rbx, rbx
jne	0x140098670
jne	0x140098670
test	rdi, rdi
je	0x140098567
je	0x140098567
movsx	edx, r12b
lea	rcx, [rsi + rbx]
mov	r8, rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
jmp	0x1400159a8
jmp	0x1400159a8
nop	dword ptr [rax]
mov	r8, rbx
mov	rdx, r9
mov	rcx, rsi
call	0x140015998
call	0x140015998
test	rdi, rdi
je	0x140098567
je	0x140098567
jmp	0x14009864e
jmp	0x14009864e
nop	dword ptr [rax]
mov	rcx, rbp
lea	r14, [rip - 0x761fa]
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [rbp]
mov	r8, qword ptr [rax + 0x30]
mov	eax, 0x2d
cmp	r8, r14
jne	0x1400987a0
jne	0x1400987a0
movzx	edx, byte ptr [r13]
cmp	dl, al
je	0x1400986f0
je	0x1400986f0
cmp	byte ptr [rbp + 0x38], 0
jne	0x1400987ee
jne	0x1400987ee
mov	rcx, rbp
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [rbp]
mov	r8, qword ptr [rax + 0x30]
mov	eax, 0x2b
cmp	r8, r14
jne	0x140098788
jne	0x140098788
movzx	edx, byte ptr [r13]
cmp	dl, al
jne	0x140098708
jne	0x140098708
nop	
mov	byte ptr [rsi], al
add	r13, 1
add	rsi, 1
mov	ebp, 1
jmp	0x140098555
jmp	0x140098555
nop	dword ptr [rax]
cmp	byte ptr [rbp + 0x38], 0
jne	0x1400987e7
jne	0x1400987e7
mov	rcx, rbp
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [rbp]
mov	r8, qword ptr [rax + 0x30]
mov	eax, 0x30
cmp	r8, r14
jne	0x1400987d2
jne	0x1400987d2
cmp	byte ptr [r13], al
jne	0x140098553
jne	0x140098553
cmp	rbx, 1
jle	0x140098553
jle	0x140098553
cmp	byte ptr [rbp + 0x38], 0
jne	0x1400985d3
jne	0x1400985d3
mov	edx, 0x78
mov	rcx, rbp
call	0x1400223c0
call	0x1400223c0
movzx	edx, byte ptr [r13 + 1]
cmp	dl, al
je	0x1400987b0
je	0x1400987b0
cmp	byte ptr [rbp + 0x38], 0
jne	0x1400985e4
jne	0x1400985e4
mov	edx, 0x58
mov	rcx, rbp
call	0x1400223c0
call	0x1400223c0
movzx	edx, byte ptr [r13 + 1]
jmp	0x1400985eb
jmp	0x1400985eb
nop	dword ptr [rax]
mov	edx, 0x2b
mov	rcx, rbp
call	r8
call	r8
jmp	0x1400986e6
jmp	0x1400986e6
nop	dword ptr [rax + rax]
mov	edx, 0x2d
mov	rcx, rbp
call	r8
call	r8
jmp	0x1400986b5
jmp	0x1400986b5
movzx	eax, byte ptr [r13]
add	rsi, 2
add	r13, 2
mov	ebp, 2
mov	byte ptr [rsi - 2], al
movzx	eax, byte ptr [r13 - 1]
mov	byte ptr [rsi - 1], al
jmp	0x140098555
jmp	0x140098555
mov	edx, 0x30
mov	rcx, rbp
call	r8
call	r8
jmp	0x140098730
jmp	0x140098730
call	0x1400b3a30
call	0x1400b3a30
mov	eax, edx
jmp	0x1400985c8
jmp	0x1400985c8
mov	eax, edx
jmp	0x1400985bf
jmp	0x1400985bf
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	eax, dword ptr [rcx + 0x18]
mov	rbp, qword ptr [rsp + 0x88]
mov	rdi, qword ptr [rsp + 0x80]
and	eax, 0xb0
sub	rdi, rbp
mov	r12, rcx
mov	rbx, r8
mov	r13, r9
mov	esi, edx
cmp	eax, 0x20
je	0x1400988b0
je	0x1400988b0
cmp	eax, 0x10
je	0x140098900
je	0x140098900
xor	edx, edx
test	rdi, rdi
je	0x140098872
je	0x140098872
xor	eax, eax
test	dil, 1
je	0x140098860
je	0x140098860
mov	word ptr [rbx], si
mov	eax, 1
cmp	rdi, 1
je	0x140098872
je	0x140098872
nop	dword ptr [rax]
mov	word ptr [rbx + rax*2], si
mov	word ptr [rbx + rax*2 + 2], si
add	rax, 2
cmp	rdi, rax
jne	0x140098860
jne	0x140098860
sub	rbp, rdx
jne	0x140098888
jne	0x140098888
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
lea	rbx, [rbx + rdi*2]
lea	r8, [rbp + rbp]
mov	rdx, r13
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax + rax]
lea	r12, [rbp + rbp]
test	rbp, rbp
jne	0x1400989c0
jne	0x1400989c0
lea	r8, [rbx + r12]
xor	eax, eax
test	rdi, rdi
je	0x140098877
je	0x140098877
test	dil, 1
je	0x1400988e0
je	0x1400988e0
mov	word ptr [r8], si
mov	eax, 1
cmp	rdi, 1
je	0x140098877
je	0x140098877
nop	
mov	word ptr [r8 + rax*2], si
mov	word ptr [r8 + rax*2 + 2], si
add	rax, 2
cmp	rdi, rax
jne	0x1400988e0
jne	0x1400988e0
jmp	0x140098877
jmp	0x140098877
nop	word ptr cs:[rax + rax]
mov	rcx, qword ptr [rip + 0x25fd9]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [r12 + 0xd0]
mov	rax, qword ptr [rax + 8]
mov	r12, qword ptr [rax + rdx*8]
test	r12, r12
je	0x140098a21
je	0x140098a21
mov	rax, qword ptr [r12]
mov	edx, 0x2d
mov	rcx, r12
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	word ptr [r13], ax
je	0x1400989e8
je	0x1400989e8
mov	rax, qword ptr [r12]
mov	edx, 0x2b
mov	rcx, r12
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	word ptr [r13], ax
je	0x1400989e8
je	0x1400989e8
mov	rax, qword ptr [r12]
mov	edx, 0x30
mov	rcx, r12
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	word ptr [r13], ax
jne	0x140098840
jne	0x140098840
cmp	rbp, 1
jle	0x140098840
jle	0x140098840
mov	rax, qword ptr [r12]
mov	edx, 0x78
mov	rcx, r12
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	word ptr [r13 + 2], ax
je	0x1400989fd
je	0x1400989fd
mov	rax, qword ptr [r12]
mov	edx, 0x58
mov	rcx, r12
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	word ptr [r13 + 2], ax
je	0x1400989fd
je	0x1400989fd
xor	edx, edx
test	rdi, rdi
jne	0x140098847
jne	0x140098847
jmp	0x14009888c
jmp	0x14009888c
nop	dword ptr [rax]
mov	r8, r12
mov	rdx, r9
mov	rcx, rbx
call	0x140015998
call	0x140015998
lea	r8, [rbx + r12]
xor	eax, eax
test	rdi, rdi
jne	0x1400988c9
jne	0x1400988c9
jmp	0x140098877
jmp	0x140098877
nop	word ptr [rax + rax]
mov	word ptr [rbx], ax
add	r13, 2
add	rbx, 2
mov	edx, 1
jmp	0x140098842
jmp	0x140098842
movzx	eax, word ptr [r13]
add	rbx, 4
add	r13, 4
mov	edx, 2
mov	word ptr [rbx - 4], ax
movzx	eax, word ptr [r13 - 2]
mov	word ptr [rbx - 2], ax
jmp	0x140098842
jmp	0x140098842
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x2fa69]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
xor	eax, eax
pxor	xmm0, xmm0
test	r9, r9
lea	rdi, [rcx + 0x41]
movups	xmmword ptr [rcx + 0x20], xmm0
mov	r10, rcx
setne	al
mov	qword ptr [rcx + 0x39], 0
mov	dword ptr [rcx + 8], eax
mov	rax, qword ptr [rip + 0x265c6]
mov	qword ptr [rcx + 0x131], 0
add	rax, 0x10
test	rdx, rdx
mov	qword ptr [rcx], rax
setne	al
and	eax, r8d
test	rdx, rdx
mov	byte ptr [rcx + 0x18], al
lea	rax, [rip + 0x2fa0e]
cmove	rdx, rax
and	rdi, 0xfffffffffffffff8
xor	eax, eax
mov	qword ptr [rcx + 0x30], rdx
lea	rdx, [rcx + 0x141]
sub	ecx, edi
add	ecx, 0x139
shr	ecx, 3
rep stosq	qword ptr [rdi], rax
mov	rdi, rdx
mov	edx, r10d
mov	byte ptr [r10 + 0x38], 0
mov	qword ptr [r10 + 0x139], 0
and	rdi, 0xfffffffffffffff8
mov	qword ptr [r10 + 0x231], 0
sub	edx, edi
lea	ecx, [rdx + 0x239]
shr	ecx, 3
rep stosq	qword ptr [rdi], rax
mov	byte ptr [r10 + 0x239], 0
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
xor	eax, eax
pxor	xmm0, xmm0
cmp	qword ptr [rsp + 0x30], 0
setne	al
mov	dword ptr [rcx + 8], eax
lea	rdi, [rcx + 0x41]
mov	rax, qword ptr [rip + 0x26512]
mov	rdx, rcx
mov	qword ptr [rcx + 0x39], 0
add	rax, 0x10
test	r8, r8
movups	xmmword ptr [rcx + 0x20], xmm0
mov	qword ptr [rcx], rax
setne	al
mov	qword ptr [rcx + 0x131], 0
and	eax, r9d
test	r8, r8
mov	byte ptr [rcx + 0x18], al
lea	rax, [rip + 0x2f94b]
cmove	r8, rax
and	rdi, 0xfffffffffffffff8
xor	eax, eax
mov	qword ptr [rcx + 0x30], r8
lea	r8, [rcx + 0x141]
sub	ecx, edi
add	ecx, 0x139
shr	ecx, 3
rep stosq	qword ptr [rdi], rax
mov	rdi, r8
mov	ecx, edx
mov	byte ptr [rdx + 0x38], 0
mov	qword ptr [rdx + 0x139], 0
and	rdi, 0xfffffffffffffff8
mov	qword ptr [rdx + 0x231], 0
sub	ecx, edi
add	ecx, 0x239
shr	ecx, 3
rep stosq	qword ptr [rdi], rax
mov	byte ptr [rdx + 0x239], 0
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x2ef74]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
cmp	byte ptr [rbx + 0x18], 0
je	0x140098bef
je	0x140098bef
mov	rcx, qword ptr [rbx + 0x30]
test	rcx, rcx
je	0x140098bef
je	0x140098bef
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x2ef24]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
cmp	byte ptr [rbx + 0x18], 0
je	0x140098c3f
je	0x140098c3f
mov	rcx, qword ptr [rbx + 0x30]
test	rcx, rcx
je	0x140098c3f
je	0x140098c3f
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	ebx, ebx
mov	rsi, rcx
jmp	0x140098c71
jmp	0x140098c71
nop	
mov	byte ptr [rsi + rbx + 0x19], al
add	rbx, 1
cmp	rbx, 0x80
je	0x140098ce0
je	0x140098ce0
mov	ecx, ebx
call	0x14000d200
call	0x14000d200
cmp	eax, -1
jne	0x140098c60
jne	0x140098c60
xor	eax, eax
mov	byte ptr [rsi + 0x18], al
xor	ebx, ebx
nop	dword ptr [rax]
mov	ecx, ebx
call	0x14000d190
call	0x14000d190
mov	word ptr [rsi + rbx*2 + 0x9a], ax
add	rbx, 1
cmp	rbx, 0x100
jne	0x140098c88
jne	0x140098c88
xor	ebx, ebx
mov	edi, 1
nop	dword ptr [rax + rax]
mov	ecx, ebx
mov	edx, edi
shl	edx, cl
mov	rcx, rsi
mov	word ptr [rsi + rbx*2 + 0x29a], dx
call	0x140022730
call	0x140022730
mov	word ptr [rsi + rbx*2 + 0x2ba], ax
add	rbx, 1
cmp	rbx, 0x10
jne	0x140098cb0
jne	0x140098cb0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	eax, 1
jmp	0x140098c7f
jmp	0x140098c7f
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	qword ptr [rsp + 0x38], rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x2ee91]
mov	qword ptr [rcx], rax
lea	rcx, [rsp + 0x38]
call	0x14009bb70
call	0x14009bb70
mov	byte ptr [rbx + 0x18], 0
mov	rcx, rbx
mov	qword ptr [rbx + 0x10], rax
call	0x140098c50
call	0x140098c50
nop	
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x2ee45]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	rcx, rbx
mov	qword ptr [rbx + 0x10], rax
mov	byte ptr [rbx + 0x18], 0
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x140098c50
jmp	0x140098c50
mov	rsi, rax
mov	rax, qword ptr [rip + 0x2627d]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x2edf4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rax, qword ptr [rip + 0x2623e]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x2edb4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rax, qword ptr [rip + 0x261fe]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x25803]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x140098e50
jne	0x140098e50
mov	rbx, qword ptr [rip + 0x25ab6]
cmp	qword ptr [rbx], 0
je	0x140098e70
je	0x140098e70
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
mov	rcx, qword ptr [rip + 0x25ac9]
lea	rdx, [rip + 0x52]
call	0x14000c3a0
call	0x14000c3a0
mov	rbx, qword ptr [rip + 0x25a86]
cmp	qword ptr [rbx], 0
jne	0x140098e40
jne	0x140098e40
lea	rsi, [rip + 0x1c809]
mov	edx, 2
mov	rcx, rsi
call	0x14009aaa0
call	0x14009aaa0
mov	rax, qword ptr [rip + 0x25aa5]
mov	rdx, rsi
mov	qword ptr [rbx], rsi
lea	rcx, [rip + 0x1d528]
mov	qword ptr [rax], rsi
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x14009be10
jmp	0x14009be10
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, qword ptr [rip + 0x25a33]
cmp	qword ptr [rbx], 0
je	0x140098ed0
je	0x140098ed0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
lea	rsi, [rip + 0x1c7a9]
mov	edx, 2
mov	rcx, rsi
call	0x14009aaa0
call	0x14009aaa0
mov	rax, qword ptr [rip + 0x25a45]
mov	rdx, rsi
mov	qword ptr [rbx], rsi
lea	rcx, [rip + 0x1d4c8]
mov	qword ptr [rax], rsi
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x14009be10
jmp	0x14009be10
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	eax, ecx
test	ecx, ecx
je	0x140098f24
je	0x140098f24
test	cl, 0x3f
je	0x140098f29
je	0x140098f29
cmp	ecx, 0x3f
ja	0x140098f29
ja	0x140098f29
add	rsp, 0x28
ret	
ret	
lea	rcx, [rip + 0x20148]
call	0x1400b3c40
call	0x1400b3c40
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rip + 0x26199]
lea	rbp, [rip + 0x1e162]
mov	r15, qword ptr [rdx]
mov	r14, qword ptr [rdx + 8]
add	rax, 0x10
mov	dword ptr [rip + 0x1e155], 1
mov	r13, qword ptr [rdx + 0x10]
mov	qword ptr [rip + 0x1e142], rax
mov	qword ptr [rip + 0x1e14b], r15
mov	rbx, rcx
mov	rdi, rdx
mov	rcx, rbp
xor	edx, edx
call	0x1400aa730
call	0x1400aa730
mov	rsi, qword ptr [rip + 0x25694]
mov	r9d, dword ptr [rsi]
test	r9d, r9d
jne	0x140099540
jne	0x140099540
add	dword ptr [rip + 0x1e119], 1
mov	rcx, qword ptr [rip + 0x25b9a]
mov	r12, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
mov	qword ptr [r12 + rax*8], rbp
mov	rax, qword ptr [rip + 0x260b6]
mov	dword ptr [rip + 0x1e214], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1e201], rax
call	0x14009baf0
call	0x14009baf0
mov	r8d, dword ptr [rsi]
mov	qword ptr [rip + 0x1e202], rax
test	r8d, r8d
jne	0x140099630
jne	0x140099630
add	dword ptr [rip + 0x1e1ea], 1
mov	rcx, qword ptr [rip + 0x25a9b]
mov	rbp, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
lea	rdx, [rip + 0x1e1cb]
xor	r8d, r8d
mov	qword ptr [rbp + rax*8], rdx
mov	rax, qword ptr [rip + 0x25dbc]
lea	rbp, [rip + 0x1e135]
xor	edx, edx
mov	rcx, rbp
mov	qword ptr [rip + 0x1e139], r14
mov	dword ptr [rip + 0x1e127], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1e114], rax
call	0x1400751d0
call	0x1400751d0
mov	ecx, dword ptr [rsi]
test	ecx, ecx
jne	0x140099620
jne	0x140099620
add	dword ptr [rip + 0x1e106], 1
mov	rcx, qword ptr [rip + 0x25737]
mov	r12, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
xor	r8d, r8d
xor	edx, edx
mov	qword ptr [r12 + rax*8], rbp
mov	rax, qword ptr [rip + 0x25d6e]
lea	rbp, [rip + 0x1e0f7]
mov	rcx, rbp
mov	qword ptr [rip + 0x1e0fd], r13
mov	dword ptr [rip + 0x1e0eb], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1e0d8], rax
call	0x1400755a0
call	0x1400755a0
mov	edx, dword ptr [rsi]
test	edx, edx
jne	0x140099610
jne	0x140099610
add	dword ptr [rip + 0x1e0ca], 1
mov	rcx, qword ptr [rip + 0x256eb]
mov	r12, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
mov	qword ptr [r12 + rax*8], rbp
mov	rax, qword ptr [rip + 0x260a7]
mov	dword ptr [rip + 0x1e045], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1e032], rax
mov	eax, dword ptr [rsi]
test	eax, eax
jne	0x140099600
jne	0x140099600
mov	dword ptr [rip + 0x1e026], 2
mov	rcx, qword ptr [rip + 0x25ab7]
mov	rbp, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
lea	rdx, [rip + 0x1e007]
mov	qword ptr [rbp + rax*8], rdx
mov	rax, qword ptr [rip + 0x2607b]
mov	dword ptr [rip + 0x1e019], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1e006], rax
mov	eax, dword ptr [rsi]
test	eax, eax
jne	0x1400995f0
jne	0x1400995f0
mov	dword ptr [rip + 0x1dffa], 2
mov	rcx, qword ptr [rip + 0x25a8b]
mov	rbp, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
lea	rdx, [rip + 0x1dfdb]
mov	qword ptr [rbp + rax*8], rdx
mov	rax, qword ptr [rip + 0x25f9f]
mov	dword ptr [rip + 0x1df8d], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1df7a], rax
mov	eax, dword ptr [rsi]
test	eax, eax
jne	0x1400995e0
jne	0x1400995e0
mov	dword ptr [rip + 0x1df6e], 2
mov	rcx, qword ptr [rip + 0x259cf]
mov	rbp, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
lea	rdx, [rip + 0x1df4f]
mov	qword ptr [rbp + rax*8], rdx
lea	rbp, [rip + 0x1dec3]
mov	edx, 1
mov	rcx, rbp
call	0x1400aa3e0
call	0x1400aa3e0
mov	eax, dword ptr [rsi]
test	eax, eax
jne	0x1400995d0
jne	0x1400995d0
add	dword ptr [rip + 0x1dead], 1
mov	rcx, qword ptr [rip + 0x2594e]
mov	r12, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
xor	edx, edx
mov	qword ptr [r12 + rax*8], rbp
mov	rax, qword ptr [rdi + 0x28]
mov	r12, qword ptr [rdi + 0x18]
mov	rbp, qword ptr [rdi + 0x20]
lea	rdi, [rip + 0x1dedc]
mov	dword ptr [rip + 0x1deda], 1
mov	qword ptr [rsp + 0x20], rax
mov	rax, qword ptr [rip + 0x25ee6]
mov	rcx, rdi
mov	qword ptr [rip + 0x1decc], r12
add	rax, 0x10
mov	qword ptr [rip + 0x1deb1], rax
call	0x1400aaaf0
call	0x1400aaaf0
mov	eax, dword ptr [rsi]
test	eax, eax
jne	0x1400995c0
jne	0x1400995c0
add	dword ptr [rip + 0x1dea3], 1
mov	rdx, qword ptr [rbx + 8]
mov	rcx, qword ptr [rip + 0x25910]
mov	qword ptr [rsp + 0x28], rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [rsp + 0x28]
mov	qword ptr [rdx + rax*8], rdi
mov	rax, qword ptr [rip + 0x25e26]
mov	dword ptr [rip + 0x1df94], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1df81], rax
call	0x14009baf0
call	0x14009baf0
mov	r11d, dword ptr [rsi]
mov	qword ptr [rip + 0x1df82], rax
test	r11d, r11d
jne	0x1400995b0
jne	0x1400995b0
add	dword ptr [rip + 0x1df6a], 1
mov	rcx, qword ptr [rip + 0x2580b]
mov	rdi, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
lea	rdx, [rip + 0x1df4b]
xor	r8d, r8d
mov	qword ptr [rdi + rax*8], rdx
mov	rax, qword ptr [rip + 0x25b3d]
lea	rdi, [rip + 0x1ded6]
xor	edx, edx
mov	rcx, rdi
mov	qword ptr [rip + 0x1deda], rbp
mov	dword ptr [rip + 0x1dec8], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1deb5], rax
call	0x140075970
call	0x140075970
mov	r10d, dword ptr [rsi]
test	r10d, r10d
jne	0x1400995a0
jne	0x1400995a0
add	dword ptr [rip + 0x1dea5], 1
mov	rdx, qword ptr [rbx + 8]
mov	rcx, qword ptr [rip + 0x254b2]
mov	qword ptr [rsp + 0x28], rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	qword ptr [rdx + rax*8], rdi
mov	rax, qword ptr [rip + 0x25ae5]
lea	rdi, [rip + 0x1de8e]
xor	edx, edx
mov	dword ptr [rip + 0x1de8a], 1
mov	rcx, rdi
add	rax, 0x10
mov	qword ptr [rip + 0x1de74], rax
mov	rax, qword ptr [rsp + 0x20]
mov	qword ptr [rip + 0x1de78], rax
call	0x140075d40
call	0x140075d40
mov	r9d, dword ptr [rsi]
test	r9d, r9d
jne	0x140099590
jne	0x140099590
add	dword ptr [rip + 0x1de58], 1
mov	rdx, qword ptr [rbx + 8]
mov	rcx, qword ptr [rip + 0x25455]
mov	qword ptr [rsp + 0x28], rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [rsp + 0x28]
mov	r8d, dword ptr [rsi]
mov	qword ptr [rdx + rax*8], rdi
mov	rax, qword ptr [rip + 0x25df8]
mov	dword ptr [rip + 0x1dd96], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1dd83], rax
test	r8d, r8d
jne	0x140099580
jne	0x140099580
mov	dword ptr [rip + 0x1dd78], 2
mov	rcx, qword ptr [rip + 0x25809]
mov	rdi, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
lea	rdx, [rip + 0x1dd59]
mov	ecx, dword ptr [rsi]
mov	qword ptr [rdi + rax*8], rdx
mov	rax, qword ptr [rip + 0x25dcc]
mov	dword ptr [rip + 0x1dd6a], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1dd57], rax
test	ecx, ecx
jne	0x140099570
jne	0x140099570
mov	dword ptr [rip + 0x1dd4d], 2
mov	rcx, qword ptr [rip + 0x257de]
mov	rdi, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
lea	rcx, [rip + 0x1dd2e]
mov	edx, dword ptr [rsi]
mov	qword ptr [rdi + rax*8], rcx
mov	rax, qword ptr [rip + 0x25cf1]
mov	dword ptr [rip + 0x1dcdf], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1dccc], rax
test	edx, edx
jne	0x140099560
jne	0x140099560
mov	dword ptr [rip + 0x1dcc2], 2
mov	rcx, qword ptr [rip + 0x25723]
mov	rdi, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
lea	rdx, [rip + 0x1dca3]
mov	qword ptr [rdi + rax*8], rdx
lea	rdi, [rip + 0x1dc28]
mov	edx, 1
mov	rcx, rdi
call	0x1400aa5b0
call	0x1400aa5b0
mov	eax, dword ptr [rsi]
test	eax, eax
jne	0x140099550
jne	0x140099550
add	dword ptr [rip + 0x1dc12], 1
mov	rcx, qword ptr [rip + 0x256a3]
mov	rsi, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
mov	rcx, qword ptr [rip + 0x256a3]
mov	qword ptr [rsi + rax*8], rdi
mov	rsi, qword ptr [rbx + 0x18]
call	0x140022a70
call	0x140022a70
mov	rcx, qword ptr [rip + 0x252df]
mov	qword ptr [rsi + rax*8], r15
mov	rsi, qword ptr [rbx + 0x18]
call	0x140022a70
call	0x140022a70
mov	rcx, qword ptr [rip + 0x252db]
mov	qword ptr [rsi + rax*8], r14
mov	rsi, qword ptr [rbx + 0x18]
call	0x140022a70
call	0x140022a70
mov	rcx, qword ptr [rip + 0x25677]
mov	qword ptr [rsi + rax*8], r13
mov	rsi, qword ptr [rbx + 0x18]
call	0x140022a70
call	0x140022a70
mov	rcx, qword ptr [rip + 0x252c3]
mov	qword ptr [rsi + rax*8], r12
mov	rsi, qword ptr [rbx + 0x18]
call	0x140022a70
call	0x140022a70
mov	rcx, qword ptr [rip + 0x252bf]
mov	rbx, qword ptr [rbx + 0x18]
mov	qword ptr [rsi + rax*8], rbp
call	0x140022a70
call	0x140022a70
mov	rdi, qword ptr [rsp + 0x20]
mov	qword ptr [rbx + rax*8], rdi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax + rax]
lock add	dword ptr [rip + 0x1db80], 1
jmp	0x140098faf
jmp	0x140098faf
nop	dword ptr [rax]
lock add	dword ptr [rip + 0x1db50], 1
jmp	0x140099496
jmp	0x140099496
nop	dword ptr [rax]
lock add	dword ptr [rip + 0x1dbb0], 1
jmp	0x140099456
jmp	0x140099456
nop	dword ptr [rax]
lock add	dword ptr [rip + 0x1dbe0], 1
jmp	0x14009940b
jmp	0x14009940b
nop	dword ptr [rax]
lock add	dword ptr [rip + 0x1dbb0], 1
jmp	0x1400993c0
jmp	0x1400993c0
nop	dword ptr [rax]
lock add	dword ptr [rip + 0x1dc30], 1
jmp	0x140099370
jmp	0x140099370
nop	dword ptr [rax]
lock add	dword ptr [rip + 0x1dc00], 1
jmp	0x140099303
jmp	0x140099303
nop	dword ptr [rax]
lock add	dword ptr [rip + 0x1dc50], 1
jmp	0x14009929e
jmp	0x14009929e
nop	dword ptr [rax]
lock add	dword ptr [rip + 0x1db20], 1
jmp	0x140099245
jmp	0x140099245
nop	dword ptr [rax]
lock add	dword ptr [rip + 0x1dab0], 1
jmp	0x1400991db
jmp	0x1400991db
nop	dword ptr [rax]
lock add	dword ptr [rip + 0x1db20], 1
jmp	0x14009919a
jmp	0x14009919a
nop	dword ptr [rax]
lock add	dword ptr [rip + 0x1db50], 1
jmp	0x14009914e
jmp	0x14009914e
nop	dword ptr [rax]
lock add	dword ptr [rip + 0x1db20], 1
jmp	0x140099102
jmp	0x140099102
nop	dword ptr [rax]
lock add	dword ptr [rip + 0x1db70], 1
jmp	0x1400990be
jmp	0x1400990be
nop	dword ptr [rax]
lock add	dword ptr [rip + 0x1db40], 1
jmp	0x140099062
jmp	0x140099062
nop	dword ptr [rax]
lock add	dword ptr [rip + 0x1dbb0], 1
jmp	0x140098ffe
jmp	0x140098ffe
mov	rbx, rax
mov	rcx, rbp
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
lea	rcx, [rip + 0x1db86]
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
mov	rcx, rdi
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
jmp	0x14009963d
jmp	0x14009963d
jmp	0x140099667
jmp	0x140099667
mov	rbx, rax
lea	rcx, [rip + 0x1db78]
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
jmp	0x14009963d
jmp	0x14009963d
jmp	0x140099667
jmp	0x140099667
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, rcx
mov	ecx, 0x18
mov	rdi, rdx
mov	r13, r8
mov	r12, r9
call	0x1400b2c30
call	0x1400b2c30
mov	rdx, qword ptr [rdi]
mov	rbp, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x25a16]
mov	qword ptr [rbp + 0x10], 0
mov	rcx, rbp
add	rax, 0x10
mov	qword ptr [rbp], rax
call	0x1400aa730
call	0x1400aa730
mov	rsi, qword ptr [rip + 0x24f37]
mov	r8d, dword ptr [rsi]
test	r8d, r8d
jne	0x140099bf0
jne	0x140099bf0
add	dword ptr [rbp + 8], 1
mov	rcx, qword ptr [rip + 0x25440]
mov	r15, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
mov	ecx, 0x18
mov	qword ptr [r15 + rax*8], rbp
lea	r15, [rsp + 0x28]
call	0x1400b2c30
call	0x1400b2c30
mov	rcx, r15
mov	rbp, rax
mov	rax, qword ptr [rdi]
mov	dword ptr [rbp + 8], 0
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rip + 0x25938]
add	rax, 0x10
mov	qword ptr [rbp], rax
call	0x14009bb70
call	0x14009bb70
mov	ecx, dword ptr [rsi]
mov	qword ptr [rbp + 0x10], rax
test	ecx, ecx
jne	0x140099ce0
jne	0x140099ce0
add	dword ptr [rbp + 8], 1
mov	rcx, qword ptr [rip + 0x25332]
mov	r14, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
mov	ecx, 0x18
mov	qword ptr [r14 + rax*8], rbp
call	0x1400b2c30
call	0x1400b2c30
mov	rdx, qword ptr [rdi]
xor	r8d, r8d
mov	rbp, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x25644]
mov	qword ptr [rbp + 0x10], 0
mov	rcx, rbp
add	rax, 0x10
mov	qword ptr [rbp], rax
call	0x1400751d0
call	0x1400751d0
mov	edx, dword ptr [rsi]
test	edx, edx
jne	0x140099cd0
jne	0x140099cd0
add	dword ptr [rbp + 8], 1
mov	rcx, qword ptr [rip + 0x24fd7]
mov	r14, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
mov	ecx, 0x18
mov	qword ptr [r14 + rax*8], rbp
call	0x1400b2c30
call	0x1400b2c30
mov	rdx, qword ptr [rdi]
xor	r8d, r8d
mov	rbp, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x255f9]
mov	qword ptr [rbp + 0x10], 0
mov	rcx, rbp
add	rax, 0x10
mov	qword ptr [rbp], rax
call	0x1400755a0
call	0x1400755a0
mov	eax, dword ptr [rsi]
test	eax, eax
jne	0x140099cc0
jne	0x140099cc0
add	dword ptr [rbp + 8], 1
mov	rcx, qword ptr [rip + 0x24f8c]
mov	r14, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
mov	ecx, 0x10
mov	qword ptr [r14 + rax*8], rbp
call	0x1400b2c30
call	0x1400b2c30
mov	dword ptr [rax + 8], 0
mov	rbp, rax
mov	rax, qword ptr [rip + 0x25934]
add	rax, 0x10
mov	qword ptr [rbp], rax
mov	eax, dword ptr [rsi]
test	eax, eax
jne	0x140099cb0
jne	0x140099cb0
mov	dword ptr [rbp + 8], 1
mov	rcx, qword ptr [rip + 0x25354]
mov	r14, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
mov	ecx, 0x10
mov	qword ptr [r14 + rax*8], rbp
call	0x1400b2c30
call	0x1400b2c30
mov	dword ptr [rax + 8], 0
mov	rbp, rax
mov	rax, qword ptr [rip + 0x2590c]
add	rax, 0x10
mov	qword ptr [rbp], rax
mov	eax, dword ptr [rsi]
test	eax, eax
jne	0x140099ca0
jne	0x140099ca0
mov	dword ptr [rbp + 8], 1
mov	rcx, qword ptr [rip + 0x2532c]
mov	r14, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
mov	ecx, 0x10
mov	qword ptr [r14 + rax*8], rbp
call	0x1400b2c30
call	0x1400b2c30
mov	dword ptr [rax + 8], 0
mov	rbp, rax
mov	rax, qword ptr [rip + 0x25834]
add	rax, 0x10
mov	qword ptr [rbp], rax
mov	eax, dword ptr [rsi]
test	eax, eax
jne	0x140099c90
jne	0x140099c90
mov	dword ptr [rbp + 8], 1
mov	rcx, qword ptr [rip + 0x25274]
mov	r14, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
mov	ecx, 0x20
mov	qword ptr [r14 + rax*8], rbp
call	0x1400b2c30
call	0x1400b2c30
mov	rdx, qword ptr [rdi]
xor	r9d, r9d
mov	r8, r12
mov	rcx, rax
mov	rbp, rax
call	0x1400aa390
call	0x1400aa390
mov	eax, dword ptr [rsi]
test	eax, eax
jne	0x140099c80
jne	0x140099c80
add	dword ptr [rbp + 8], 1
mov	rcx, qword ptr [rip + 0x251f4]
mov	r14, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
mov	ecx, 0x18
mov	qword ptr [r14 + rax*8], rbp
call	0x1400b2c30
call	0x1400b2c30
mov	rdx, qword ptr [rdi]
mov	rbp, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x25799]
mov	qword ptr [rbp + 0x10], 0
mov	rcx, rbp
add	rax, 0x10
mov	qword ptr [rbp], rax
call	0x1400aaaf0
call	0x1400aaaf0
mov	r14d, dword ptr [rsi]
test	r14d, r14d
jne	0x140099c70
jne	0x140099c70
add	dword ptr [rbp + 8], 1
mov	rcx, qword ptr [rip + 0x251ca]
mov	r14, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
mov	ecx, 0x18
mov	qword ptr [r14 + rax*8], rbp
call	0x1400b2c30
call	0x1400b2c30
mov	rcx, r15
mov	rbp, rax
mov	rax, qword ptr [rdi]
mov	dword ptr [rbp + 8], 0
mov	qword ptr [rsp + 0x28], rax
mov	rax, qword ptr [rip + 0x256c7]
add	rax, 0x10
mov	qword ptr [rbp], rax
call	0x14009bb70
call	0x14009bb70
mov	r11d, dword ptr [rsi]
mov	qword ptr [rbp + 0x10], rax
test	r11d, r11d
jne	0x140099c60
jne	0x140099c60
add	dword ptr [rbp + 8], 1
mov	rcx, qword ptr [rip + 0x250bf]
mov	r15, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
mov	ecx, 0x18
mov	qword ptr [r15 + rax*8], rbp
call	0x1400b2c30
call	0x1400b2c30
mov	rdx, qword ptr [r13]
mov	r8, qword ptr [rsp + 0xa0]
mov	rbp, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x253db]
mov	qword ptr [rbp + 0x10], 0
mov	rcx, rbp
add	rax, 0x10
mov	qword ptr [rbp], rax
call	0x140075970
call	0x140075970
mov	r10d, dword ptr [rsi]
test	r10d, r10d
jne	0x140099c50
jne	0x140099c50
add	dword ptr [rbp + 8], 1
mov	rcx, qword ptr [rip + 0x24d6c]
mov	r15, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
mov	ecx, 0x18
mov	qword ptr [r15 + rax*8], rbp
call	0x1400b2c30
call	0x1400b2c30
mov	rdx, qword ptr [r13]
mov	r8, qword ptr [rsp + 0xa0]
mov	rbp, rax
mov	dword ptr [rax + 8], 0
mov	rax, qword ptr [rip + 0x25388]
mov	qword ptr [rbp + 0x10], 0
mov	rcx, rbp
add	rax, 0x10
mov	qword ptr [rbp], rax
call	0x140075d40
call	0x140075d40
mov	r9d, dword ptr [rsi]
test	r9d, r9d
jne	0x140099c40
jne	0x140099c40
add	dword ptr [rbp + 8], 1
mov	rcx, qword ptr [rip + 0x24d19]
mov	r13, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
mov	ecx, 0x10
mov	qword ptr [r13 + rax*8], rbp
call	0x1400b2c30
call	0x1400b2c30
mov	r8d, dword ptr [rsi]
mov	dword ptr [rax + 8], 0
mov	rbp, rax
mov	rax, qword ptr [rip + 0x256ad]
add	rax, 0x10
mov	qword ptr [rbp], rax
test	r8d, r8d
jne	0x140099c30
jne	0x140099c30
mov	dword ptr [rbp + 8], 1
mov	rcx, qword ptr [rip + 0x250ce]
mov	r13, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
mov	ecx, 0x10
mov	qword ptr [r13 + rax*8], rbp
call	0x1400b2c30
call	0x1400b2c30
mov	ecx, dword ptr [rsi]
mov	dword ptr [rax + 8], 0
mov	rbp, rax
mov	rax, qword ptr [rip + 0x25683]
add	rax, 0x10
mov	qword ptr [rbp], rax
test	ecx, ecx
jne	0x140099c20
jne	0x140099c20
mov	dword ptr [rbp + 8], 1
mov	rcx, qword ptr [rip + 0x250a5]
mov	r13, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
mov	ecx, 0x10
mov	qword ptr [r13 + rax*8], rbp
call	0x1400b2c30
call	0x1400b2c30
mov	edx, dword ptr [rsi]
mov	dword ptr [rax + 8], 0
mov	rbp, rax
mov	rax, qword ptr [rip + 0x255aa]
add	rax, 0x10
mov	qword ptr [rbp], rax
test	edx, edx
jne	0x140099c10
jne	0x140099c10
mov	dword ptr [rbp + 8], 1
mov	rcx, qword ptr [rip + 0x24fec]
mov	r13, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
mov	ecx, 0x20
mov	qword ptr [r13 + rax*8], rbp
call	0x1400b2c30
call	0x1400b2c30
mov	rdx, qword ptr [rdi]
xor	r9d, r9d
mov	r8, r12
mov	rcx, rax
mov	rbp, rax
call	0x1400aa560
call	0x1400aa560
mov	eax, dword ptr [rsi]
test	eax, eax
jne	0x140099c00
jne	0x140099c00
add	dword ptr [rbp + 8], 1
mov	rcx, qword ptr [rip + 0x24f6f]
mov	rbx, qword ptr [rbx + 8]
call	0x140022a70
call	0x140022a70
mov	qword ptr [rbx + rax*8], rbp
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	
lock add	dword ptr [rbp + 8], 1
jmp	0x140099709
jmp	0x140099709
nop	word ptr [rax + rax]
lock add	dword ptr [rbp + 8], 1
jmp	0x140099bca
jmp	0x140099bca
nop	word ptr [rax + rax]
lock add	dword ptr [rbp + 8], 1
jmp	0x140099b8d
jmp	0x140099b8d
nop	word ptr [rax + rax]
lock add	dword ptr [rbp + 8], 1
jmp	0x140099b44
jmp	0x140099b44
nop	word ptr [rax + rax]
lock add	dword ptr [rbp + 8], 1
jmp	0x140099afb
jmp	0x140099afb
nop	word ptr [rax + rax]
lock add	dword ptr [rbp + 8], 1
jmp	0x140099ab0
jmp	0x140099ab0
nop	word ptr [rax + rax]
lock add	dword ptr [rbp + 8], 1
jmp	0x140099a4d
jmp	0x140099a4d
nop	word ptr [rax + rax]
lock add	dword ptr [rbp + 8], 1
jmp	0x1400999ea
jmp	0x1400999ea
nop	word ptr [rax + rax]
lock add	dword ptr [rbp + 8], 1
jmp	0x14009998f
jmp	0x14009998f
nop	word ptr [rax + rax]
lock add	dword ptr [rbp + 8], 1
jmp	0x140099935
jmp	0x140099935
nop	word ptr [rax + rax]
lock add	dword ptr [rbp + 8], 1
jmp	0x1400998f5
jmp	0x1400998f5
nop	word ptr [rax + rax]
lock add	dword ptr [rbp + 8], 1
jmp	0x1400998ad
jmp	0x1400998ad
nop	word ptr [rax + rax]
lock add	dword ptr [rbp + 8], 1
jmp	0x140099865
jmp	0x140099865
nop	word ptr [rax + rax]
lock add	dword ptr [rbp + 8], 1
jmp	0x14009981d
jmp	0x14009981d
nop	word ptr [rax + rax]
lock add	dword ptr [rbp + 8], 1
jmp	0x1400997c2
jmp	0x1400997c2
nop	word ptr [rax + rax]
lock add	dword ptr [rbp + 8], 1
jmp	0x140099767
jmp	0x140099767
mov	rcx, rbp
mov	rbx, rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbp
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
jmp	0x140099cea
jmp	0x140099cea
jmp	0x140099cea
jmp	0x140099cea
mov	rbx, rax
mov	rcx, rbp
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
jmp	0x140099cea
jmp	0x140099cea
jmp	0x140099cea
jmp	0x140099cea
jmp	0x140099d09
jmp	0x140099d09
jmp	0x140099cea
jmp	0x140099cea
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
movzx	eax, byte ptr [rip + 0x1b70d]
mov	rbp, rcx
mov	rdi, rdx
mov	rbx, r8
test	al, al
je	0x140099f78
je	0x140099f78
mov	rsi, qword ptr [rip + 0x248d5]
lea	r12, [rip + 0x1e25e]
mov	r13d, dword ptr [rsi]
mov	qword ptr [rsp + 0x28], r12
test	r13d, r13d
jne	0x140099f38
jne	0x140099f38
mov	rcx, qword ptr [rip + 0x24b96]
mov	rdx, qword ptr [rcx]
test	rdx, rdx
jne	0x140099dfc
jne	0x140099dfc
jmp	0x140099ed8
jmp	0x140099ed8
nop	word ptr [rax + rax]
mov	eax, dword ptr [rip + 0x1d5ba]
add	eax, 1
mov	dword ptr [rip + 0x1d5b1], eax
cdqe	
mov	qword ptr [rdx], rax
mov	r8, qword ptr [rcx + 8]
sub	rax, 1
mov	rdx, qword ptr [r8]
cmp	rbx, rax
je	0x140099e40
je	0x140099e40
test	rdx, rdx
jne	0x140099dde
jne	0x140099dde
mov	r10d, dword ptr [rsi]
test	r10d, r10d
jne	0x140099e70
jne	0x140099e70
mov	eax, dword ptr [rip + 0x1d581]
lea	edx, [rax + 1]
mov	dword ptr [rip + 0x1d578], edx
movsxd	rdx, edx
mov	qword ptr [r8], rdx
sub	rdx, 1
cmp	rbx, rdx
je	0x140099ea0
je	0x140099ea0
mov	rdx, qword ptr [rcx + 0x10]
add	rcx, 0x10
test	rdx, rdx
je	0x140099ed8
je	0x140099ed8
mov	rax, qword ptr [rdx]
test	rax, rax
jne	0x140099da4
jne	0x140099da4
mov	r12d, dword ptr [rsi]
test	r12d, r12d
je	0x140099d90
je	0x140099d90
mov	r8d, 1
lock xadd	dword ptr [rip + 0x1d535], r8d
add	r8d, 1
movsxd	r8, r8d
lock cmpxchg	qword ptr [rdx], r8
mov	rax, qword ptr [rdx]
mov	r8, qword ptr [rcx + 8]
sub	rax, 1
mov	rdx, qword ptr [r8]
cmp	rbx, rax
jne	0x140099db8
jne	0x140099db8
nop	
test	rdx, rdx
jne	0x140099e66
jne	0x140099e66
mov	r11d, dword ptr [rsi]
test	r11d, r11d
jne	0x14009a075
jne	0x14009a075
mov	eax, dword ptr [rip + 0x1d4f9]
lea	edx, [rax + 1]
mov	dword ptr [rip + 0x1d4f0], edx
movsxd	rdx, edx
mov	qword ptr [r8], rdx
sub	rdx, 1
jmp	0x140099edf
jmp	0x140099edf
nop	dword ptr [rax]
mov	eax, 1
lock xadd	dword ptr [rip + 0x1d4d3], eax
add	eax, 1
movsxd	r9, eax
mov	rax, rdx
lock cmpxchg	qword ptr [r8], r9
mov	rdx, qword ptr [r8]
sub	rdx, 1
cmp	rbx, rdx
jne	0x140099deb
jne	0x140099deb
nop	dword ptr [rax + rax]
mov	rdx, qword ptr [rcx]
mov	rax, qword ptr [rdx]
test	rax, rax
jne	0x140099ecb
jne	0x140099ecb
mov	r9d, dword ptr [rsi]
test	r9d, r9d
jne	0x14009a098
jne	0x14009a098
mov	eax, dword ptr [rip + 0x1d493]
add	eax, 1
mov	dword ptr [rip + 0x1d48a], eax
cdqe	
mov	qword ptr [rdx], rax
mov	rdx, rbx
lea	rbx, [rax - 1]
jmp	0x140099edf
jmp	0x140099edf
nop	dword ptr [rax]
mov	rdx, 0xffffffffffffffff
mov	rax, qword ptr [rbp + 0x18]
shl	rbx, 3
lea	rcx, [rax + rbx]
cmp	qword ptr [rcx], 0
je	0x14009a000
je	0x14009a000
test	rdi, rdi
je	0x140099f19
je	0x140099f19
mov	rax, qword ptr [rdi]
lea	rdx, [rip + 0x1cec]
mov	rcx, rdi
mov	rax, qword ptr [rax + 8]
cmp	rax, rdx
jne	0x14009a030
jne	0x14009a030
call	0x1400b2be0
call	0x1400b2be0
mov	ecx, dword ptr [rsi]
mov	rax, qword ptr [rsp + 0x28]
test	ecx, ecx
jne	0x140099fc0
jne	0x140099fc0
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	rcx, r12
call	0x14000c4f0
call	0x14000c4f0
test	eax, eax
je	0x140099d73
je	0x140099d73
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x81c59]
lea	rdx, [rip + 0x263a0]
mov	rcx, rax
lea	rax, [rip + 0x2ae86]
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
nop	word ptr [rax + rax]
lea	r13, [rip + 0x1b4d1]
lea	r12, [rip + 0x1e03a]
mov	rcx, r13
call	0x1400b3190
call	0x1400b3190
mov	rsi, qword ptr [rip + 0x2469b]
test	eax, eax
je	0x140099d62
je	0x140099d62
mov	eax, dword ptr [rsi]
test	eax, eax
jne	0x14009a068
jne	0x14009a068
lea	rcx, [rip + 0x197b2]
call	0x140001440
call	0x140001440
mov	rcx, r13
call	0x1400b33d0
call	0x1400b33d0
jmp	0x140099d62
jmp	0x140099d62
mov	rcx, rax
call	0x14000c550
call	0x14000c550
test	eax, eax
je	0x140099f28
je	0x140099f28
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x81c61]
lea	rdx, [rip + 0x26358]
mov	rcx, rax
lea	rax, [rip + 0x2ae5e]
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
nop	word ptr [rax + rax]
mov	r8d, dword ptr [rsi]
test	r8d, r8d
jne	0x14009a037
jne	0x14009a037
add	dword ptr [rdi + 8], 1
mov	qword ptr [rcx], rdi
cmp	rdx, -1
je	0x140099f28
je	0x140099f28
add	dword ptr [rdi + 8], 1
mov	qword ptr [rax + rdx*8], rdi
jmp	0x140099f28
jmp	0x140099f28
nop	word ptr cs:[rax + rax]
call	rax
call	rax
jmp	0x140099f19
jmp	0x140099f19
lock add	dword ptr [rdi + 8], 1
mov	rax, qword ptr [rbp + 0x18]
mov	ecx, dword ptr [rsi]
mov	qword ptr [rax + rbx], rdi
cmp	rdx, -1
je	0x140099f1b
je	0x140099f1b
test	ecx, ecx
je	0x14009a019
je	0x14009a019
lock add	dword ptr [rdi + 8], 1
mov	rax, qword ptr [rbp + 0x18]
mov	ecx, dword ptr [rsi]
mov	qword ptr [rax + rdx*8], rdi
jmp	0x140099f1b
jmp	0x140099f1b
mov	rcx, r12
call	0x14000c4d0
call	0x14000c4d0
jmp	0x140099fa7
jmp	0x140099fa7
mov	eax, 1
lock xadd	dword ptr [rip + 0x1d2ce], eax
add	eax, 1
movsxd	rcx, eax
mov	rax, rdx
lock cmpxchg	qword ptr [r8], rcx
mov	rdx, qword ptr [r8]
jmp	0x140099e66
jmp	0x140099e66
mov	ecx, 1
lock xadd	dword ptr [rip + 0x1d2ab], ecx
add	ecx, 1
movsxd	rcx, ecx
lock cmpxchg	qword ptr [rdx], rcx
mov	rax, qword ptr [rdx]
jmp	0x140099ecb
jmp	0x140099ecb
mov	rbx, rax
lea	rcx, [rsp + 0x28]
call	0x140016ce0
call	0x140016ce0
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
add	rdx, 1
mov	rcx, rax
jne	0x14009a0c8
jne	0x14009a0c8
call	0x1400b2e40
call	0x1400b2e40
mov	rbx, rax
mov	rcx, r13
call	0x1400b3090
call	0x1400b3090
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, rcx
mov	rdi, r8
test	r8, r8
je	0x14009a360
je	0x14009a360
mov	rsi, qword ptr [rdx]
test	rsi, rsi
je	0x14009a378
je	0x14009a378
mov	rax, qword ptr [rbx + 0x10]
lea	r13, [rsi - 1]
sub	rax, 1
cmp	rax, r13
jae	0x14009a227
jae	0x14009a227
lea	r12, [rsi + 3]
mov	r15, qword ptr [rbx + 8]
mov	rax, r12
shr	rax, 0x3c
je	0x14009a510
je	0x14009a510
mov	rcx, 0xffffffffffffffff
call	0x1400b2c00
call	0x1400b2c00
mov	rcx, qword ptr [rbx + 0x10]
mov	qword ptr [rsp + 0x28], 0xffffffffffffffff
mov	rbp, rax
test	rcx, rcx
je	0x14009a187
je	0x14009a187
mov	r8, qword ptr [rbx + 8]
xor	eax, eax
nop	dword ptr [rax]
mov	rdx, qword ptr [r8 + rax*8]
mov	qword ptr [rbp + rax*8], rdx
add	rax, 1
cmp	rax, rcx
jne	0x14009a170
jne	0x14009a170
cmp	rcx, r12
jae	0x14009a1a1
jae	0x14009a1a1
mov	rax, rsi
xor	edx, edx
sub	rax, rcx
lea	rcx, [rbp + rcx*8]
lea	r8, [rax*8 + 0x18]
call	0x1400159a8
call	0x1400159a8
mov	rcx, qword ptr [rsp + 0x28]
mov	r14, qword ptr [rbx + 0x18]
call	0x1400b2c00
call	0x1400b2c00
mov	rcx, qword ptr [rbx + 0x10]
mov	r9, rax
test	rcx, rcx
je	0x14009a1d9
je	0x14009a1d9
mov	r8, qword ptr [rbx + 0x18]
xor	eax, eax
nop	dword ptr [rax]
mov	rdx, qword ptr [r8 + rax*8]
mov	qword ptr [r9 + rax*8], rdx
add	rax, 1
cmp	rax, rcx
jne	0x14009a1c8
jne	0x14009a1c8
cmp	rcx, r12
jae	0x14009a201
jae	0x14009a201
mov	rax, rsi
xor	edx, edx
mov	qword ptr [rsp + 0x28], r9
sub	rax, rcx
lea	rcx, [r9 + rcx*8]
lea	r8, [rax*8 + 0x18]
call	0x1400159a8
call	0x1400159a8
mov	r9, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x10], r12
mov	qword ptr [rbx + 8], rbp
mov	qword ptr [rbx + 0x18], r9
test	r15, r15
je	0x14009a21a
je	0x14009a21a
mov	rcx, r15
call	0x1400b2bd0
call	0x1400b2bd0
test	r14, r14
je	0x14009a227
je	0x14009a227
mov	rcx, r14
call	0x1400b2bd0
call	0x1400b2bd0
mov	rbp, qword ptr [rip + 0x24402]
mov	r11d, dword ptr [rbp]
test	r11d, r11d
jne	0x14009a590
jne	0x14009a590
add	dword ptr [rdi + 8], 1
mov	rax, qword ptr [rbx + 8]
lea	r12, [rax + r13*8]
mov	rax, qword ptr [r12]
test	rax, rax
je	0x14009a480
je	0x14009a480
mov	rcx, qword ptr [rip + 0x246b5]
mov	r8, qword ptr [rcx]
test	r8, r8
jne	0x14009a2d1
jne	0x14009a2d1
jmp	0x14009a463
jmp	0x14009a463
nop	dword ptr [rax + rax]
mov	eax, dword ptr [rip + 0x1d0da]
lea	edx, [rax + 1]
mov	dword ptr [rip + 0x1d0d1], edx
movsxd	rdx, edx
mov	qword ptr [r8], rdx
mov	r8, qword ptr [rcx + 8]
mov	rax, qword ptr [r8]
cmp	rsi, rdx
je	0x14009a310
je	0x14009a310
test	rax, rax
jne	0x14009a2b7
jne	0x14009a2b7
mov	r11d, dword ptr [rbp]
test	r11d, r11d
jne	0x14009a3c0
jne	0x14009a3c0
mov	eax, dword ptr [rip + 0x1d0a7]
add	eax, 1
mov	dword ptr [rip + 0x1d09e], eax
cdqe	
mov	qword ptr [r8], rax
cmp	rsi, rax
je	0x14009a3e8
je	0x14009a3e8
mov	r8, qword ptr [rcx + 0x10]
add	rcx, 0x10
test	r8, r8
je	0x14009a45f
je	0x14009a45f
mov	rdx, qword ptr [r8]
test	rdx, rdx
jne	0x14009a285
jne	0x14009a285
mov	r10d, dword ptr [rbp]
test	r10d, r10d
je	0x14009a270
je	0x14009a270
mov	eax, 1
lock xadd	dword ptr [rip + 0x1d061], eax
add	eax, 1
movsxd	r9, eax
mov	rax, rdx
lock cmpxchg	qword ptr [r8], r9
mov	rdx, qword ptr [r8]
mov	r8, qword ptr [rcx + 8]
mov	rax, qword ptr [r8]
cmp	rsi, rdx
jne	0x14009a291
jne	0x14009a291
nop	dword ptr [rax]
mov	rdx, qword ptr [rbx + 8]
test	rax, rax
jne	0x14009a44f
jne	0x14009a44f
mov	r9d, dword ptr [rbp]
test	r9d, r9d
jne	0x14009a431
jne	0x14009a431
mov	eax, dword ptr [rip + 0x1d020]
add	eax, 1
mov	dword ptr [rip + 0x1d017], eax
cdqe	
lea	r13, [rdx + rax*8 - 8]
mov	qword ptr [r8], rax
cmp	qword ptr [r13], 0
jne	0x14009a640
jne	0x14009a640
mov	rax, qword ptr [r12]
jmp	0x14009a46e
jmp	0x14009a46e
nop	word ptr [rax + rax]
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rbp, qword ptr [rip + 0x242b1]
mov	r12d, dword ptr [rbp]
test	r12d, r12d
jne	0x14009a568
jne	0x14009a568
mov	eax, dword ptr [rip + 0x1cfbe]
lea	esi, [rax + 1]
mov	rax, qword ptr [rcx + 0x10]
mov	dword ptr [rip + 0x1cfb1], esi
movsxd	rsi, esi
lea	r13, [rsi - 1]
sub	rax, 1
mov	qword ptr [rdx], rsi
cmp	rax, r13
jb	0x14009a130
jb	0x14009a130
jmp	0x14009a23b
jmp	0x14009a23b
nop	dword ptr [rax + rax]
mov	edx, 1
lock xadd	dword ptr [rip + 0x1cf83], edx
add	edx, 1
movsxd	rdx, edx
lock cmpxchg	qword ptr [r8], rdx
mov	rax, qword ptr [r8]
cmp	rsi, rax
jne	0x14009a2c0
jne	0x14009a2c0
nop	dword ptr [rax]
mov	rdx, qword ptr [rcx]
mov	r8, qword ptr [rbx + 8]
mov	rax, qword ptr [rdx]
test	rax, rax
jne	0x14009a5dd
jne	0x14009a5dd
mov	r10d, dword ptr [rbp]
test	r10d, r10d
jne	0x14009a5bf
jne	0x14009a5bf
mov	eax, dword ptr [rip + 0x1cf42]
add	eax, 1
mov	dword ptr [rip + 0x1cf39], eax
cdqe	
lea	r13, [r8 + rax*8 - 8]
mov	qword ptr [rdx], rax
cmp	qword ptr [r13], 0
jne	0x14009a5f0
jne	0x14009a5f0
jmp	0x14009a34e
jmp	0x14009a34e
mov	r9d, 1
lock xadd	dword ptr [rip + 0x1cf10], r9d
add	r9d, 1
movsxd	r9, r9d
lock cmpxchg	qword ptr [r8], r9
mov	rax, qword ptr [r8]
lea	r13, [rdx + rax*8 - 8]
cmp	qword ptr [r13], 0
jne	0x14009a63c
jne	0x14009a63c
mov	rax, qword ptr [r12]
mov	edx, dword ptr [rbp]
test	edx, edx
jne	0x14009a5b0
jne	0x14009a5b0
mov	edx, dword ptr [rax + 8]
lea	ecx, [rdx - 1]
mov	dword ptr [rax + 8], ecx
cmp	edx, 1
je	0x14009a540
je	0x14009a540
cmp	qword ptr [rbx + 0x10], 0
mov	qword ptr [r12], rdi
je	0x14009a360
je	0x14009a360
mov	rax, qword ptr [rbx + 0x18]
xor	esi, esi
lea	r12, [rip + 0x1754]
jmp	0x14009a4ba
jmp	0x14009a4ba
nop	
mov	rax, qword ptr [rbx + 0x18]
mov	qword ptr [rax + rdi], 0
add	rsi, 1
cmp	rsi, qword ptr [rbx + 0x10]
jae	0x14009a360
jae	0x14009a360
mov	rcx, qword ptr [rax + rsi*8]
lea	rdi, [rsi*8]
test	rcx, rcx
je	0x14009a4ac
je	0x14009a4ac
mov	eax, dword ptr [rbp]
test	eax, eax
jne	0x14009a500
jne	0x14009a500
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14009a4a0
jne	0x14009a4a0
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 8]
cmp	rax, r12
jne	0x14009a5a0
jne	0x14009a5a0
call	0x1400b2be0
call	0x1400b2be0
jmp	0x14009a4a0
jmp	0x14009a4a0
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14009a4db
jmp	0x14009a4db
nop	dword ptr [rax]
lea	rax, [r12*8]
mov	rcx, rax
mov	qword ptr [rsp + 0x28], rax
call	0x1400b2c00
call	0x1400b2c00
mov	rcx, qword ptr [rbx + 0x10]
mov	rbp, rax
test	rcx, rcx
jne	0x14009a166
jne	0x14009a166
jmp	0x14009a182
jmp	0x14009a182
nop	word ptr [rax + rax]
mov	rdx, qword ptr [rax]
lea	rcx, [rip + 0x16a6]
mov	rdx, qword ptr [rdx + 8]
cmp	rdx, rcx
mov	rcx, rax
jne	0x14009a67a
jne	0x14009a67a
call	0x1400b2be0
call	0x1400b2be0
jmp	0x14009a480
jmp	0x14009a480
nop	dword ptr [rax]
mov	eax, 1
lock xadd	dword ptr [rip + 0x1cddb], eax
add	eax, 1
movsxd	rcx, eax
mov	rax, rsi
lock cmpxchg	qword ptr [rdx], rcx
mov	rsi, qword ptr [rdx]
jmp	0x14009a11b
jmp	0x14009a11b
nop	dword ptr [rax + rax]
lock add	dword ptr [rdi + 8], 1
jmp	0x14009a23f
jmp	0x14009a23f
nop	word ptr [rax + rax]
call	rax
call	rax
jmp	0x14009a4a0
jmp	0x14009a4a0
nop	word ptr [rax + rax]
mov	edx, 0xffffffff
lock xadd	dword ptr [rax + 8], edx
jmp	0x14009a477
jmp	0x14009a477
mov	r9d, 1
lock xadd	dword ptr [rip + 0x1cd82], r9d
add	r9d, 1
movsxd	r9, r9d
lock cmpxchg	qword ptr [rdx], r9
mov	rax, qword ptr [rdx]
lea	r13, [r8 + rax*8 - 8]
cmp	qword ptr [r13], 0
je	0x14009a45f
je	0x14009a45f
mov	rdx, qword ptr [rcx]
mov	rcx, rdi
call	0x1400230d0
call	0x1400230d0
mov	r9d, dword ptr [rbp]
mov	rsi, rax
test	r9d, r9d
jne	0x14009a6b9
jne	0x14009a6b9
add	dword ptr [rax + 8], 1
mov	rcx, qword ptr [r13]
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14009a66d
jne	0x14009a66d
mov	rax, qword ptr [rcx]
lea	rdx, [rip + 0x15c8]
mov	rax, qword ptr [rax + 8]
cmp	rax, rdx
jne	0x14009a6e1
jne	0x14009a6e1
call	0x1400b2be0
call	0x1400b2be0
jmp	0x14009a66d
jmp	0x14009a66d
mov	r8, qword ptr [rcx + 8]
mov	rdx, r8
mov	rcx, rdi
call	0x140023bd0
call	0x140023bd0
mov	r15d, dword ptr [rbp]
mov	rsi, rax
test	r15d, r15d
jne	0x14009a698
jne	0x14009a698
add	dword ptr [rax + 8], 1
mov	rcx, qword ptr [r13]
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
je	0x14009a681
je	0x14009a681
mov	qword ptr [r13], rsi
mov	rax, qword ptr [r12]
jmp	0x14009a463
jmp	0x14009a463
call	rdx
call	rdx
jmp	0x14009a480
jmp	0x14009a480
mov	rax, qword ptr [rcx]
lea	rdx, [rip + 0x1565]
mov	rax, qword ptr [rax + 8]
cmp	rax, rdx
je	0x14009a635
je	0x14009a635
call	rax
call	rax
jmp	0x14009a66d
jmp	0x14009a66d
lock add	dword ptr [rax + 8], 1
mov	rcx, qword ptr [r13]
mov	r14d, dword ptr [rbp]
lea	rdx, [rcx + 8]
test	r14d, r14d
je	0x14009a65f
je	0x14009a65f
mov	eax, 0xffffffff
lock xadd	dword ptr [rdx], eax
jmp	0x14009a668
jmp	0x14009a668
lock add	dword ptr [rax + 8], 1
mov	rcx, qword ptr [r13]
mov	r8d, dword ptr [rbp]
lea	rdx, [rcx + 8]
test	r8d, r8d
je	0x14009a610
je	0x14009a610
mov	eax, 0xffffffff
lock xadd	dword ptr [rdx], eax
jmp	0x14009a619
jmp	0x14009a619
call	rax
call	rax
jmp	0x14009a66d
jmp	0x14009a66d
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rcx, rbp
call	0x1400b2bd0
call	0x1400b2bd0
call	0x1400b3540
call	0x1400b3540
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14009a480
jmp	0x14009a480
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14009a4a0
jmp	0x14009a4a0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14009a66d
jmp	0x14009a66d
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14009a66d
jmp	0x14009a66d
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
add	rdx, 1
mov	rcx, rax
jne	0x14009a74d
jne	0x14009a74d
call	0x1400b2e40
call	0x1400b2e40
jmp	0x14009a752
jmp	0x14009a752
jmp	0x14009a752
jmp	0x14009a752
jmp	0x14009a752
jmp	0x14009a752
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [r8]
mov	r9, rcx
mov	rcx, rdx
mov	rdx, r8
test	rax, rax
jne	0x14009a7a8
jne	0x14009a7a8
mov	r8, qword ptr [rip + 0x23ea4]
mov	r8d, dword ptr [r8]
test	r8d, r8d
jne	0x14009a7d8
jne	0x14009a7d8
mov	eax, dword ptr [rip + 0x1cbb6]
add	eax, 1
mov	dword ptr [rip + 0x1cbad], eax
cdqe	
mov	qword ptr [rdx], rax
mov	r10, qword ptr [rcx + 0x10]
sub	rax, 1
lea	r8, [r10 - 1]
cmp	r8, rax
jb	0x14009a7f8
jb	0x14009a7f8
mov	rcx, qword ptr [rcx + 8]
mov	r8, qword ptr [rcx + rax*8]
test	r8, r8
je	0x14009a7f8
je	0x14009a7f8
mov	rcx, r9
add	rsp, 0x28
jmp	0x14009a0f0
jmp	0x14009a0f0
nop	word ptr [rax + rax]
mov	r8d, 1
lock xadd	dword ptr [rip + 0x1cb69], r8d
add	r8d, 1
movsxd	r8, r8d
lock cmpxchg	qword ptr [rdx], r8
mov	rax, qword ptr [rdx]
jmp	0x14009a7a8
jmp	0x14009a7a8
lea	rcx, [rip + 0x1e8b1]
call	0x1400b3c40
call	0x1400b3c40
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, qword ptr [rip + 0x23e11]
mov	rbp, rdx
mov	rdx, qword ptr [r8]
mov	rbx, rcx
mov	rdi, r8
test	rdx, rdx
jne	0x14009a87e
jne	0x14009a87e
jmp	0x14009a8b0
jmp	0x14009a8b0
nop	word ptr [rax + rax]
mov	eax, dword ptr [rip + 0x1cb12]
add	eax, 1
mov	dword ptr [rip + 0x1cb09], eax
cdqe	
mov	qword ptr [rdx], rax
mov	rcx, qword ptr [rbp + 0x10]
sub	rax, 1
sub	rcx, 1
cmp	rcx, rax
jb	0x14009a8b9
jb	0x14009a8b9
mov	rcx, qword ptr [rbp + 8]
mov	r8, qword ptr [rcx + rax*8]
test	r8, r8
je	0x14009a8b9
je	0x14009a8b9
mov	rcx, rbx
add	rdi, 8
call	0x14009a0f0
call	0x14009a0f0
mov	rdx, qword ptr [rdi]
test	rdx, rdx
je	0x14009a8b0
je	0x14009a8b0
mov	rax, qword ptr [rdx]
test	rax, rax
jne	0x14009a84c
jne	0x14009a84c
mov	ecx, dword ptr [rsi]
test	ecx, ecx
je	0x14009a838
je	0x14009a838
mov	ecx, 1
lock xadd	dword ptr [rip + 0x1cab7], ecx
add	ecx, 1
movsxd	rcx, ecx
lock cmpxchg	qword ptr [rdx], rcx
mov	rax, qword ptr [rdx]
jmp	0x14009a84c
jmp	0x14009a84c
nop	dword ptr [rax]
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
lea	rcx, [rip + 0x1e7f0]
call	0x1400b3c40
call	0x1400b3c40
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
pxor	xmm0, xmm0
mov	rax, qword ptr [rdx + 0x10]
mov	rdi, rdx
mov	qword ptr [rcx + 0x10], rax
mov	rbx, rcx
movabs	rdx, 0xfffffffffffffff
cmp	rdx, rax
mov	dword ptr [rcx], r8d
mov	qword ptr [rcx + 8], 0
movups	xmmword ptr [rcx + 0x18], xmm0
lea	rcx, [rax*8]
mov	rax, 0xffffffffffffffff
cmovb	rcx, rax
call	0x1400b2c00
call	0x1400b2c00
mov	r8, qword ptr [rbx + 0x10]
mov	qword ptr [rbx + 8], rax
mov	rcx, r8
test	r8, r8
je	0x14009a9a0
je	0x14009a9a0
mov	r9, qword ptr [rip + 0x23cf9]
xor	edx, edx
jmp	0x14009a951
jmp	0x14009a951
nop	dword ptr [rax + rax]
add	dword ptr [rcx + 8], 1
add	rdx, 1
cmp	rdx, r8
jae	0x14009a980
jae	0x14009a980
mov	rax, qword ptr [rbx + 8]
mov	rcx, qword ptr [rdi + 8]
mov	rcx, qword ptr [rcx + rdx*8]
mov	qword ptr [rax + rdx*8], rcx
test	rcx, rcx
je	0x14009a944
je	0x14009a944
mov	r10d, dword ptr [r9]
test	r10d, r10d
je	0x14009a940
je	0x14009a940
lock add	dword ptr [rcx + 8], 1
mov	r8, qword ptr [rbx + 0x10]
add	rdx, 1
cmp	rdx, r8
jb	0x14009a94d
jb	0x14009a94d
nop	dword ptr [rax]
movabs	rax, 0xfffffffffffffff
lea	rcx, [r8*8]
cmp	rax, r8
mov	rax, 0xffffffffffffffff
cmovb	rcx, rax
call	0x1400b2c00
call	0x1400b2c00
cmp	qword ptr [rbx + 0x10], 0
mov	qword ptr [rbx + 0x18], rax
je	0x14009aa00
je	0x14009aa00
mov	r8, qword ptr [rip + 0x23c79]
xor	edx, edx
jmp	0x14009a9d2
jmp	0x14009a9d2
nop	dword ptr [rax + rax]
add	dword ptr [rcx + 8], 1
add	rdx, 1
cmp	rdx, qword ptr [rbx + 0x10]
jae	0x14009aa00
jae	0x14009aa00
mov	rax, qword ptr [rbx + 0x18]
mov	rcx, qword ptr [rdi + 0x18]
mov	rcx, qword ptr [rcx + rdx*8]
mov	qword ptr [rax + rdx*8], rcx
test	rcx, rcx
je	0x14009a9c4
je	0x14009a9c4
mov	eax, dword ptr [r8]
test	eax, eax
je	0x14009a9c0
je	0x14009a9c0
lock add	dword ptr [rcx + 8], 1
add	rdx, 1
cmp	rdx, qword ptr [rbx + 0x10]
jb	0x14009a9ce
jb	0x14009a9ce
nop	dword ptr [rax]
mov	ecx, 0x30
call	0x1400b2c00
call	0x1400b2c00
mov	qword ptr [rbx + 0x20], rax
pxor	xmm0, xmm0
xor	esi, esi
movups	xmmword ptr [rax], xmm0
movups	xmmword ptr [rax + 0x10], xmm0
movups	xmmword ptr [rax + 0x20], xmm0
mov	rax, qword ptr [rdi + 0x20]
mov	rcx, qword ptr [rax + rsi]
test	rcx, rcx
je	0x14009aa6a
je	0x14009aa6a
call	0x140015a08
call	0x140015a08
mov	r12, qword ptr [rbx + 0x20]
lea	rbp, [rax + 1]
mov	rcx, rbp
add	r12, rsi
call	0x1400b2c00
call	0x1400b2c00
mov	qword ptr [r12], rax
mov	rax, qword ptr [rbx + 0x20]
mov	r8, rbp
mov	rcx, qword ptr [rax + rsi]
mov	rax, qword ptr [rdi + 0x20]
mov	rdx, qword ptr [rax + rsi]
add	rsi, 8
call	0x140015998
call	0x140015998
cmp	rsi, 0x30
jne	0x14009aa1f
jne	0x14009aa1f
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
mov	rcx, rbx
call	0x14009b8f0
call	0x14009b8f0
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x98
movups	xmmword ptr [rsp + 0x60], xmm6
movups	xmmword ptr [rsp + 0x70], xmm7
movups	xmmword ptr [rsp + 0x80], xmm8
xor	eax, eax
pxor	xmm0, xmm0
mov	qword ptr [rip + 0x1b931], 0
movups	xmmword ptr [rip + 0x1b90a], xmm0
movups	xmmword ptr [rip + 0x1b913], xmm0
mov	dword ptr [rcx], edx
mov	rbx, rcx
lea	rdx, [rip + 0x1bb2f]
mov	qword ptr [rcx + 0x10], 0x30
mov	rdi, rdx
mov	ecx, 0x30
rep stosq	qword ptr [rdi], rax
mov	qword ptr [rbx + 8], rdx
lea	rdx, [rip + 0x1b911]
mov	ecx, 0x30
mov	rdi, rdx
mov	qword ptr [rbx + 0x18], rdx
rep stosq	qword ptr [rdi], rax
lea	rax, [rip + 0x1b8bb]
mov	qword ptr [rbx + 0x20], rax
lea	rax, [rip + 0x1b360]
mov	qword ptr [rip + 0x1b8a9], rax
call	0x14009bae0
call	0x14009bae0
mov	r9d, 1
xor	r8d, r8d
xor	edx, edx
movzx	eax, word ptr [rax]
lea	rcx, [rip + 0x1b34f]
mov	word ptr [rip + 0x1b338], ax
call	0x140098a40
call	0x140098a40
mov	rdx, qword ptr [rip + 0x23d6c]
lea	r8, [rip + 0x1b335]
mov	rcx, rbx
call	0x14009a0f0
call	0x14009a0f0
mov	edx, 1
lea	rcx, [rip + 0x1ba21]
call	0x1400a86d0
call	0x1400a86d0
mov	rdx, qword ptr [rip + 0x23ef5]
lea	r8, [rip + 0x1ba0e]
mov	rcx, rbx
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x243bf]
xor	ecx, ecx
lea	rdi, [rip + 0x1a956]
lea	r13, [rip + 0x1abef]
mov	word ptr [rip + 0x1ac30], cx
xor	edx, edx
mov	rcx, rdi
add	rax, 0x10
mov	dword ptr [rip + 0x1abdd], 1
mov	qword ptr [rip + 0x1abce], rax
mov	rax, qword ptr [rip + 0x24157]
mov	qword ptr [rip + 0x1abcc], 0
add	rax, 0x10
mov	qword ptr [rip + 0x1abc5], 0
mov	byte ptr [rip + 0x1abc6], 0
mov	qword ptr [rip + 0x1abc3], 0
mov	qword ptr [rip + 0x1abc0], 0
mov	qword ptr [rip + 0x1abbd], 0
mov	qword ptr [rip + 0x1abba], 0
mov	byte ptr [rip + 0x1abfb], 0
mov	dword ptr [rip + 0x1a8d1], 1
mov	qword ptr [rip + 0x1a8c2], rax
mov	qword ptr [rip + 0x1a8cb], r13
call	0x1400a7ad0
call	0x1400a7ad0
mov	rdx, qword ptr [rip + 0x23d6f]
lea	r8, [rip + 0x1a8a8]
mov	rcx, rbx
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x24439]
mov	rdx, qword ptr [rip + 0x23e52]
lea	r8, [rip + 0x1bb3b]
mov	rcx, rbx
mov	dword ptr [rip + 0x1bb36], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1bb23], rax
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x24427]
mov	rdx, qword ptr [rip + 0x23e40]
lea	r8, [rip + 0x1bb29]
mov	rcx, rbx
mov	dword ptr [rip + 0x1bb24], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1bb11], rax
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x24045]
mov	dword ptr [rip + 0x1b913], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1b900], rax
call	0x14009baf0
call	0x14009baf0
mov	rdx, qword ptr [rip + 0x23c94]
lea	r8, [rip + 0x1b8ed]
mov	rcx, rbx
mov	qword ptr [rip + 0x1b8f3], rax
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x242a7]
xor	edx, edx
xor	r8d, r8d
lea	rsi, [rip + 0x1a9ab]
mov	word ptr [rip + 0x1af65], dx
mov	rcx, rsi
xor	edx, edx
lea	r12, [rip + 0x1af38]
add	rax, 0x10
mov	dword ptr [rip + 0x1af32], 1
mov	qword ptr [rip + 0x1af23], rax
mov	rax, qword ptr [rip + 0x23f8c]
mov	qword ptr [rip + 0x1af21], 0
add	rax, 0x10
mov	qword ptr [rip + 0x1af1a], 0
mov	byte ptr [rip + 0x1af1b], 0
mov	qword ptr [rip + 0x1af18], 0
mov	qword ptr [rip + 0x1af15], 0
mov	qword ptr [rip + 0x1af12], 0
mov	qword ptr [rip + 0x1af0f], 0
mov	qword ptr [rip + 0x1af0c], 0
mov	qword ptr [rip + 0x1af09], 0
mov	dword ptr [rip + 0x1af07], 0
mov	qword ptr [rip + 0x1af00], 0
mov	byte ptr [rip + 0x1af0c], 0
mov	dword ptr [rip + 0x1a8fb], 1
mov	qword ptr [rip + 0x1a8ec], rax
mov	qword ptr [rip + 0x1a8f5], r12
call	0x14009c040
call	0x14009c040
mov	rdx, qword ptr [rip + 0x23b59]
lea	r8, [rip + 0x1a8d2]
mov	rcx, rbx
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x241c3]
lea	rsi, [rip + 0x1a8dc]
xor	r8d, r8d
xor	edx, edx
lea	rbp, [rip + 0x1aed0]
mov	rcx, rsi
mov	dword ptr [rip + 0x1aecb], 1
add	rax, 0x10
mov	byte ptr [rip + 0x1aed8], 0
mov	qword ptr [rip + 0x1aeb1], rax
xor	eax, eax
mov	word ptr [rip + 0x1aec9], ax
mov	rax, qword ptr [rip + 0x23ea1]
mov	qword ptr [rip + 0x1aea6], 0
add	rax, 0x10
mov	qword ptr [rip + 0x1ae9f], 0
mov	qword ptr [rip + 0x1aea4], 0
mov	qword ptr [rip + 0x1aea1], 0
mov	qword ptr [rip + 0x1ae9e], 0
mov	qword ptr [rip + 0x1ae9b], 0
mov	qword ptr [rip + 0x1ae98], 0
mov	qword ptr [rip + 0x1ae95], 0
mov	dword ptr [rip + 0x1ae93], 0
mov	qword ptr [rip + 0x1ae8c], 0
mov	byte ptr [rip + 0x1ae98], 0
mov	dword ptr [rip + 0x1a827], 1
mov	qword ptr [rip + 0x1a818], rax
mov	qword ptr [rip + 0x1a821], rbp
call	0x14009c400
call	0x14009c400
mov	rdx, qword ptr [rip + 0x23a75]
lea	r8, [rip + 0x1a7fe]
mov	rcx, rbx
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x23e7f]
mov	rdx, qword ptr [rip + 0x23b08]
lea	r8, [rip + 0x1a6a1]
mov	rcx, rbx
mov	dword ptr [rip + 0x1a69c], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1a689], rax
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x23e6d]
mov	rdx, qword ptr [rip + 0x23af6]
lea	r8, [rip + 0x1a68f]
mov	rcx, rbx
mov	dword ptr [rip + 0x1a68a], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1a677], rax
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x2403b]
pxor	xmm0, xmm0
lea	r15, [rip + 0x1a9c0]
mov	r8d, 1
mov	rdx, r15
lea	rcx, [rip + 0x1a670]
mov	dword ptr [rip + 0x1a9ae], 1
add	rax, 0x10
mov	byte ptr [rip + 0x1ab23], 0
mov	qword ptr [rip + 0x1a994], rax
mov	qword ptr [rip + 0x1ab09], 0
movups	xmmword ptr [rip + 0x1a992], xmm0
movups	xmmword ptr [rip + 0x1a99b], xmm0
movups	xmmword ptr [rip + 0x1a9a4], xmm0
movups	xmmword ptr [rip + 0x1a9ad], xmm0
movups	xmmword ptr [rip + 0x1a9b6], xmm0
movups	xmmword ptr [rip + 0x1a9bf], xmm0
movups	xmmword ptr [rip + 0x1a9c8], xmm0
movups	xmmword ptr [rip + 0x1a9d1], xmm0
movups	xmmword ptr [rip + 0x1a9da], xmm0
movups	xmmword ptr [rip + 0x1a9e3], xmm0
movups	xmmword ptr [rip + 0x1a9ec], xmm0
movups	xmmword ptr [rip + 0x1a9f5], xmm0
movups	xmmword ptr [rip + 0x1a9fe], xmm0
movups	xmmword ptr [rip + 0x1aa07], xmm0
movups	xmmword ptr [rip + 0x1aa10], xmm0
movups	xmmword ptr [rip + 0x1aa19], xmm0
movups	xmmword ptr [rip + 0x1aa22], xmm0
movups	xmmword ptr [rip + 0x1aa2b], xmm0
movups	xmmword ptr [rip + 0x1aa34], xmm0
movups	xmmword ptr [rip + 0x1aa3d], xmm0
movups	xmmword ptr [rip + 0x1aa46], xmm0
movups	xmmword ptr [rip + 0x1aa4f], xmm0
movups	xmmword ptr [rip + 0x1aa58], xmm0
call	0x140076510
call	0x140076510
mov	rdx, qword ptr [rip + 0x2379c]
lea	r8, [rip + 0x1a595]
mov	rcx, rbx
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x23cf6]
mov	rdx, qword ptr [rip + 0x2397f]
lea	r8, [rip + 0x1a4d8]
mov	rcx, rbx
mov	dword ptr [rip + 0x1a4d3], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1a4c0], rax
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x240a4]
mov	rdx, qword ptr [rip + 0x23afd]
lea	r8, [rip + 0x1a4c6]
mov	rcx, rbx
mov	dword ptr [rip + 0x1a4c1], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1a4ae], rax
call	0x14009a0f0
call	0x14009a0f0
mov	edx, 1
lea	rcx, [rip + 0x1a3fd]
call	0x1400a7780
call	0x1400a7780
mov	rdx, qword ptr [rip + 0x238d1]
lea	r8, [rip + 0x1a3ea]
mov	rcx, rbx
call	0x14009a0f0
call	0x14009a0f0
mov	edx, 1
lea	rcx, [rip + 0x1aff6]
call	0x140098d40
call	0x140098d40
mov	rdx, qword ptr [rip + 0x237ea]
lea	r8, [rip + 0x1afe3]
mov	rcx, rbx
call	0x14009a0f0
call	0x14009a0f0
mov	edx, 1
lea	rcx, [rip + 0x1b4af]
call	0x1400a8830
call	0x1400a8830
mov	rdx, qword ptr [rip + 0x23973]
lea	r8, [rip + 0x1b49c]
mov	rcx, rbx
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x23e3d]
lea	rsi, [rip + 0x1a3e6]
lea	rdi, [rip + 0x1a6ff]
xor	edx, edx
mov	rcx, rsi
mov	dword ptr [rip + 0x1a6f8], 1
add	rax, 0x10
mov	byte ptr [rip + 0x1a705], 0
mov	qword ptr [rip + 0x1a6de], rax
mov	rax, qword ptr [rip + 0x23bd7]
mov	qword ptr [rip + 0x1a6dc], 0
add	rax, 0x10
mov	qword ptr [rip + 0x1a6d5], 0
mov	qword ptr [rip + 0x1a6da], 0
mov	qword ptr [rip + 0x1a6d7], 0
mov	qword ptr [rip + 0x1a6d4], 0
mov	qword ptr [rip + 0x1a6d1], 0
mov	dword ptr [rip + 0x1a6cf], 0
mov	byte ptr [rip + 0x1a748], 0
mov	dword ptr [rip + 0x1a35e], 1
mov	qword ptr [rip + 0x1a34f], rax
mov	qword ptr [rip + 0x1a358], rdi
call	0x1400a7e80
call	0x1400a7e80
mov	rdx, qword ptr [rip + 0x237ec]
lea	r8, [rip + 0x1a335]
mov	rcx, rbx
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x23eb6]
mov	rdx, qword ptr [rip + 0x238cf]
lea	r8, [rip + 0x1b5b8]
mov	rcx, rbx
mov	dword ptr [rip + 0x1b5b3], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1b5a0], rax
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x23ea4]
mov	rdx, qword ptr [rip + 0x238bd]
lea	r8, [rip + 0x1b5a6]
mov	rcx, rbx
mov	dword ptr [rip + 0x1b5a1], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1b58e], rax
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x23ac2]
mov	dword ptr [rip + 0x1b3a0], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1b38d], rax
call	0x14009baf0
call	0x14009baf0
lea	rsi, [rip + 0x1aae1]
mov	rdx, qword ptr [rip + 0x2370a]
movq	xmm8, r13
movq	xmm1, r12
movq	xmm7, rbp
movq	xmm2, rdi
movq	xmm6, rsi
mov	rcx, rbx
lea	r8, [rip + 0x1b357]
mov	qword ptr [rip + 0x1b360], rax
punpcklqdq	xmm8, xmm1
punpcklqdq	xmm7, xmm2
movhps	xmm6, qword ptr [rip + 0x1de60]
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x23d04]
lea	r14, [rip + 0x1a42d]
xor	r8d, r8d
xor	edx, edx
mov	rcx, r14
mov	dword ptr [rip + 0x1aa83], 1
add	rax, 0x10
mov	byte ptr [rip + 0x1aa90], 0
mov	qword ptr [rip + 0x1aa69], rax
mov	rax, qword ptr [rip + 0x239f2]
mov	qword ptr [rip + 0x1aa67], 0
add	rax, 0x10
mov	qword ptr [rip + 0x1aa60], 0
mov	dword ptr [rip + 0x1aa60], 0
mov	qword ptr [rip + 0x1aa5b], 0
mov	qword ptr [rip + 0x1aa58], 0
mov	qword ptr [rip + 0x1aa55], 0
mov	qword ptr [rip + 0x1aa52], 0
mov	qword ptr [rip + 0x1aa4f], 0
mov	qword ptr [rip + 0x1aa4c], 0
mov	dword ptr [rip + 0x1aa4a], 0
mov	qword ptr [rip + 0x1aa43], 0
mov	byte ptr [rip + 0x1aa5a], 0
mov	dword ptr [rip + 0x1a37e], 1
mov	qword ptr [rip + 0x1a36f], rax
mov	qword ptr [rip + 0x1a378], rsi
call	0x14009c7c0
call	0x14009c7c0
mov	rdx, qword ptr [rip + 0x235bc]
lea	r8, [rip + 0x1a355]
mov	rcx, rbx
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x23c26]
lea	r14, [rip + 0x1a35f]
xor	r8d, r8d
xor	edx, edx
mov	rcx, r14
mov	dword ptr [rip + 0x1aa15], 1
add	rax, 0x10
mov	byte ptr [rip + 0x1aa22], 0
mov	qword ptr [rip + 0x1a9fb], rax
mov	rax, qword ptr [rip + 0x23914]
mov	qword ptr [rip + 0x1a9f9], 0
add	rax, 0x10
mov	qword ptr [rip + 0x1a9f2], 0
mov	qword ptr [rip + 0x1a313], rax
lea	rax, [rip + 0x1a9cc]
mov	dword ptr [rip + 0x1a9e4], 0
mov	qword ptr [rip + 0x1a9df], 0
mov	qword ptr [rip + 0x1a9dc], 0
mov	qword ptr [rip + 0x1a9d9], 0
mov	qword ptr [rip + 0x1a9d6], 0
mov	qword ptr [rip + 0x1a9d3], 0
mov	qword ptr [rip + 0x1a9d0], 0
mov	dword ptr [rip + 0x1a9ce], 0
mov	qword ptr [rip + 0x1a9c7], 0
mov	byte ptr [rip + 0x1a9de], 0
mov	dword ptr [rip + 0x1a2a2], 1
mov	qword ptr [rip + 0x1a2a3], rax
call	0x14009cb80
call	0x14009cb80
mov	rdx, qword ptr [rip + 0x234d7]
lea	r8, [rip + 0x1a280]
mov	rcx, rbx
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x238d1]
mov	rdx, qword ptr [rip + 0x2355a]
lea	r8, [rip + 0x1a0f3]
mov	rcx, rbx
mov	dword ptr [rip + 0x1a0ee], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1a0db], rax
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x238bf]
mov	rdx, qword ptr [rip + 0x23548]
lea	r8, [rip + 0x1a0e1]
mov	rcx, rbx
mov	dword ptr [rip + 0x1a0dc], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1a0c9], rax
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x23a8d]
pxor	xmm0, xmm0
lea	r14, [rip + 0x1a5a2]
mov	r8d, 1
mov	rdx, r14
lea	rcx, [rip + 0x1a0f2]
mov	dword ptr [rip + 0x1a590], 1
add	rax, 0x10
mov	byte ptr [rip + 0x1a705], 0
mov	qword ptr [rip + 0x1a576], rax
mov	qword ptr [rip + 0x1a6eb], 0
movups	xmmword ptr [rip + 0x1a574], xmm0
movups	xmmword ptr [rip + 0x1a57d], xmm0
movups	xmmword ptr [rip + 0x1a586], xmm0
movups	xmmword ptr [rip + 0x1a58f], xmm0
movups	xmmword ptr [rip + 0x1a598], xmm0
movups	xmmword ptr [rip + 0x1a5a1], xmm0
movups	xmmword ptr [rip + 0x1a5aa], xmm0
movups	xmmword ptr [rip + 0x1a5b3], xmm0
movups	xmmword ptr [rip + 0x1a5bc], xmm0
movups	xmmword ptr [rip + 0x1a5c5], xmm0
movups	xmmword ptr [rip + 0x1a5ce], xmm0
movups	xmmword ptr [rip + 0x1a5d7], xmm0
movups	xmmword ptr [rip + 0x1a5e0], xmm0
movups	xmmword ptr [rip + 0x1a5e9], xmm0
movups	xmmword ptr [rip + 0x1a5f2], xmm0
movups	xmmword ptr [rip + 0x1a5fb], xmm0
movups	xmmword ptr [rip + 0x1a604], xmm0
movups	xmmword ptr [rip + 0x1a60d], xmm0
movups	xmmword ptr [rip + 0x1a616], xmm0
movups	xmmword ptr [rip + 0x1a61f], xmm0
movups	xmmword ptr [rip + 0x1a628], xmm0
movups	xmmword ptr [rip + 0x1a631], xmm0
movups	xmmword ptr [rip + 0x1a63a], xmm0
call	0x140076d70
call	0x140076d70
mov	rdx, qword ptr [rip + 0x231ee]
lea	r8, [rip + 0x1a017]
mov	rcx, rbx
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x23748]
mov	rdx, qword ptr [rip + 0x233d1]
lea	r8, [rip + 0x19f2a]
mov	rcx, rbx
mov	dword ptr [rip + 0x19f25], 1
add	rax, 0x10
mov	qword ptr [rip + 0x19f12], rax
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x23af6]
mov	rdx, qword ptr [rip + 0x2354f]
lea	r8, [rip + 0x19f18]
mov	rcx, rbx
mov	dword ptr [rip + 0x19f13], 1
add	rax, 0x10
mov	qword ptr [rip + 0x19f00], rax
call	0x14009a0f0
call	0x14009a0f0
mov	edx, 1
lea	rcx, [rip + 0x19e5f]
call	0x1400a7950
call	0x1400a7950
mov	rdx, qword ptr [rip + 0x23323]
lea	r8, [rip + 0x19e4c]
mov	rcx, rbx
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x239cd]
mov	rdx, qword ptr [rip + 0x233c6]
lea	r8, [rip + 0x19ecf]
mov	rcx, rbx
mov	dword ptr [rip + 0x19eca], 1
add	rax, 0x10
mov	qword ptr [rip + 0x19eb7], rax
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x2397b]
mov	rdx, qword ptr [rip + 0x23374]
lea	r8, [rip + 0x19ead]
mov	rcx, rbx
mov	dword ptr [rip + 0x19ea8], 1
add	rax, 0x10
mov	qword ptr [rip + 0x19e95], rax
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x23959]
mov	rdx, qword ptr [rip + 0x23352]
lea	r8, [rip + 0x1a02b]
mov	rcx, rbx
mov	dword ptr [rip + 0x1a026], 1
add	rax, 0x10
mov	qword ptr [rip + 0x1a013], rax
call	0x14009a0f0
call	0x14009a0f0
mov	rax, qword ptr [rip + 0x23907]
mov	rdx, qword ptr [rip + 0x23300]
lea	r8, [rip + 0x1a009]
mov	rcx, rbx
mov	dword ptr [rip + 0x1a004], 1
add	rax, 0x10
mov	qword ptr [rip + 0x19ff1], rax
call	0x14009a0f0
call	0x14009a0f0
lea	rdx, [rsp + 0x30]
mov	rcx, rbx
movups	xmmword ptr [rsp + 0x30], xmm8
movups	xmmword ptr [rsp + 0x40], xmm7
movups	xmmword ptr [rsp + 0x50], xmm6
call	0x140098f40
call	0x140098f40
mov	rdx, qword ptr [rbx + 0x18]
mov	rcx, qword ptr [rip + 0x23234]
mov	qword ptr [rsp + 0x28], rdx
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rip + 0x2319e]
mov	qword ptr [rdx + rax*8], r13
mov	r13, qword ptr [rbx + 0x18]
call	0x140022a70
call	0x140022a70
mov	rcx, qword ptr [rip + 0x2319a]
mov	qword ptr [r13 + rax*8], r12
mov	r12, qword ptr [rbx + 0x18]
call	0x140022a70
call	0x140022a70
mov	rcx, qword ptr [rip + 0x23015]
mov	qword ptr [r12 + rax*8], rbp
mov	rbp, qword ptr [rbx + 0x18]
call	0x140022a70
call	0x140022a70
mov	rcx, qword ptr [rip + 0x231f1]
mov	qword ptr [rbp + rax*8], r15
mov	rbp, qword ptr [rbx + 0x18]
call	0x140022a70
call	0x140022a70
mov	rcx, qword ptr [rip + 0x2316c]
mov	qword ptr [rbp + rax*8], rdi
mov	rdi, qword ptr [rbx + 0x18]
call	0x140022a70
call	0x140022a70
mov	rcx, qword ptr [rip + 0x23167]
mov	qword ptr [rdi + rax*8], rsi
mov	rsi, qword ptr [rbx + 0x18]
lea	rdi, [rip + 0x1a5c8]
call	0x140022a70
call	0x140022a70
mov	rcx, qword ptr [rip + 0x22fcc]
mov	rbx, qword ptr [rbx + 0x18]
mov	qword ptr [rsi + rax*8], rdi
call	0x140022a70
call	0x140022a70
mov	qword ptr [rbx + rax*8], r14
movups	xmm6, xmmword ptr [rsp + 0x60]
movups	xmm8, xmmword ptr [rsp + 0x80]
movups	xmm7, xmmword ptr [rsp + 0x70]
add	rsp, 0x98
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
mov	rbx, rax
mov	rax, rdx
add	rax, 1
mov	rcx, rbx
jne	0x14009b8dd
jne	0x14009b8dd
call	0x1400b2e40
call	0x1400b2e40
mov	rsi, rdx
mov	rcx, r14
mov	rbx, rax
call	0x14009bc00
call	0x14009bc00
mov	rax, rsi
jmp	0x14009b862
jmp	0x14009b862
mov	rdi, rdx
mov	rcx, rsi
mov	rbx, rax
call	0x14009bc00
call	0x14009bc00
mov	rax, rdi
jmp	0x14009b862
jmp	0x14009b862
mov	rsi, rdx
lea	rcx, [rip + 0x1ad60]
mov	rbx, rax
call	0x14009bc00
call	0x14009bc00
mov	rax, rsi
jmp	0x14009b862
jmp	0x14009b862
mov	rsi, rdx
lea	rcx, [rip + 0x1ad29]
mov	rbx, rax
call	0x14009bc00
call	0x14009bc00
mov	rax, rsi
jmp	0x14009b862
jmp	0x14009b862
mov	rsi, rdx
mov	rcx, rdi
mov	rbx, rax
call	0x14009bc00
call	0x14009bc00
mov	rax, rsi
jmp	0x14009b862
jmp	0x14009b862
jmp	0x14009b883
jmp	0x14009b883
jmp	0x14009b870
jmp	0x14009b870
jmp	0x14009b883
jmp	0x14009b883
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx + 8]
mov	rbx, rcx
test	rax, rax
je	0x14009b97d
je	0x14009b97d
cmp	qword ptr [rcx + 0x10], 0
je	0x14009b975
je	0x14009b975
mov	rdi, qword ptr [rip + 0x22d1e]
xor	esi, esi
lea	rbp, [rip + 0x2d5]
jmp	0x14009b92e
jmp	0x14009b92e
nop	dword ptr [rax]
mov	rax, qword ptr [rbx + 8]
add	rsi, 1
cmp	rsi, qword ptr [rbx + 0x10]
jae	0x14009b970
jae	0x14009b970
mov	rcx, qword ptr [rax + rsi*8]
test	rcx, rcx
je	0x14009b924
je	0x14009b924
mov	edx, dword ptr [rdi]
test	edx, edx
jne	0x14009ba48
jne	0x14009ba48
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14009b920
jne	0x14009b920
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 8]
cmp	rax, rbp
jne	0x14009ba90
jne	0x14009ba90
call	0x1400b2be0
call	0x1400b2be0
jmp	0x14009b920
jmp	0x14009b920
nop	word ptr cs:[rax + rax]
test	rax, rax
je	0x14009b97d
je	0x14009b97d
mov	rcx, rax
call	0x1400b2bd0
call	0x1400b2bd0
mov	rax, qword ptr [rbx + 0x18]
test	rax, rax
je	0x14009b9fd
je	0x14009b9fd
cmp	qword ptr [rbx + 0x10], 0
je	0x14009b9f5
je	0x14009b9f5
mov	rdi, qword ptr [rip + 0x22c9c]
xor	esi, esi
lea	rbp, [rip + 0x253]
jmp	0x14009b9ae
jmp	0x14009b9ae
nop	
mov	rax, qword ptr [rbx + 0x18]
add	rsi, 1
cmp	rsi, qword ptr [rbx + 0x10]
jae	0x14009b9f0
jae	0x14009b9f0
mov	rcx, qword ptr [rax + rsi*8]
test	rcx, rcx
je	0x14009b9a4
je	0x14009b9a4
mov	eax, dword ptr [rdi]
test	eax, eax
jne	0x14009ba60
jne	0x14009ba60
mov	eax, dword ptr [rcx + 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 8], edx
cmp	eax, 1
jne	0x14009b9a0
jne	0x14009b9a0
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax + 8]
cmp	rax, rbp
jne	0x14009ba80
jne	0x14009ba80
call	0x1400b2be0
call	0x1400b2be0
jmp	0x14009b9a0
jmp	0x14009b9a0
nop	word ptr cs:[rax + rax]
test	rax, rax
je	0x14009b9fd
je	0x14009b9fd
mov	rcx, rax
call	0x1400b2bd0
call	0x1400b2bd0
mov	rax, qword ptr [rbx + 0x20]
xor	esi, esi
test	rax, rax
je	0x14009ba70
je	0x14009ba70
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rax + rsi]
test	rcx, rcx
je	0x14009ba22
je	0x14009ba22
call	0x1400b2bd0
call	0x1400b2bd0
mov	rax, qword ptr [rbx + 0x20]
add	rsi, 8
cmp	rsi, 0x30
jne	0x14009ba10
jne	0x14009ba10
test	rax, rax
je	0x14009ba70
je	0x14009ba70
mov	rcx, rax
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
jmp	0x1400b2bd0
jmp	0x1400b2bd0
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14009b94a
jmp	0x14009b94a
nop	word ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 8], eax
jmp	0x14009b9ca
jmp	0x14009b9ca
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
call	rax
call	rax
jmp	0x14009b9a0
jmp	0x14009b9a0
nop	word ptr [rax + rax]
call	rax
call	rax
jmp	0x14009b920
jmp	0x14009b920
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14009b9a0
jmp	0x14009b9a0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x14009b920
jmp	0x14009b920
add	rdx, 1
mov	rcx, rax
jne	0x14009bacb
jne	0x14009bacb
call	0x1400b2e40
call	0x1400b2e40
jmp	0x14009babb
jmp	0x14009babb
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x23ee9]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x22b35]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14009bb18
jne	0x14009bb18
mov	rax, qword ptr [rip + 0x1b858]
test	rax, rax
je	0x14009bb40
je	0x14009bb40
add	rsp, 0x28
ret	
ret	
nop	word ptr [rax + rax]
lea	rdx, [rip + 0x91]
lea	rcx, [rip + 0x1b84a]
call	0x14000c3a0
call	0x14000c3a0
mov	rax, qword ptr [rip + 0x1b82e]
add	rsp, 0x28
ret	
ret	
nop	word ptr [rax + rax]
xor	r8d, r8d
lea	rdx, [rip + 0x23e86]
lea	rcx, [rip + 0x1b80f]
call	0x14009bb80
call	0x14009bb80
mov	rax, qword ptr [rip + 0x1b803]
add	rsp, 0x28
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	qword ptr [rcx], 0
cmp	byte ptr [rdx], 0x43
je	0x14009bba0
je	0x14009bba0
lea	rcx, [rip + 0x1f351]
call	0x1400b3c40
call	0x1400b3c40
nop	dword ptr [rax]
cmp	byte ptr [rdx + 1], 0
jne	0x14009bb90
jne	0x14009bb90
add	rsp, 0x28
ret	
ret	
nop	
nop	
nop	
nop	
nop	
xor	r8d, r8d
lea	rdx, [rip + 0x23e16]
lea	rcx, [rip + 0x1b79f]
jmp	0x14009bb80
jmp	0x14009bb80
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x58
mov	rsi, rcx
mov	rbx, rdx
call	0x140098e20
call	0x140098e20
call	0x1400167f0
call	0x1400167f0
mov	rdi, qword ptr [rip + 0x22a01]
mov	qword ptr [rsp + 0x28], rax
mov	r9d, dword ptr [rdi]
test	r9d, r9d
jne	0x14009bcd0
jne	0x14009bcd0
mov	rax, qword ptr [rip + 0x22ca9]
mov	rcx, qword ptr [rip + 0x22ce2]
mov	rdx, qword ptr [rbx]
mov	rax, qword ptr [rax]
mov	rbp, qword ptr [rcx]
cmp	rdx, rax
je	0x14009bc62
je	0x14009bc62
add	dword ptr [rdx], 1
mov	rax, rdx
mov	qword ptr [rcx], rax
mov	rdx, rbx
lea	rcx, [rsp + 0x30]
call	0x140022ac0
call	0x140022ac0
cmp	qword ptr [rsp + 0x38], 1
mov	rcx, qword ptr [rsp + 0x30]
je	0x14009bcc0
je	0x14009bcc0
mov	rdx, rcx
xor	ecx, ecx
call	0x1400159c8
call	0x1400159c8
mov	rcx, qword ptr [rsp + 0x30]
lea	rax, [rsp + 0x40]
cmp	rcx, rax
je	0x14009bc9d
je	0x14009bc9d
call	0x1400b2be0
call	0x1400b2be0
mov	eax, dword ptr [rdi]
mov	rcx, qword ptr [rsp + 0x28]
test	eax, eax
jne	0x14009bd18
jne	0x14009bd18
mov	rdx, rbp
mov	rcx, rsi
call	0x14009be10
call	0x14009be10
mov	rax, rsi
add	rsp, 0x58
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
cmp	byte ptr [rcx], 0x2a
je	0x14009bc8e
je	0x14009bc8e
jmp	0x14009bc7f
jmp	0x14009bc7f
nop	word ptr [rax + rax]
mov	rcx, rax
call	0x14000c4f0
call	0x14000c4f0
test	eax, eax
jne	0x14009bd4b
jne	0x14009bd4b
mov	rax, qword ptr [rip + 0x22c0d]
mov	rcx, qword ptr [rip + 0x22c46]
mov	rdx, qword ptr [rbx]
mov	rax, qword ptr [rax]
mov	rbp, qword ptr [rcx]
cmp	rdx, rax
je	0x14009bc62
je	0x14009bc62
mov	r8d, dword ptr [rdi]
test	r8d, r8d
je	0x14009bc5c
je	0x14009bc5c
lock add	dword ptr [rdx], 1
mov	rax, qword ptr [rbx]
jmp	0x14009bc62
jmp	0x14009bc62
nop	dword ptr [rax]
call	0x14000c550
call	0x14000c550
test	eax, eax
je	0x14009bca8
je	0x14009bca8
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x839b2]
lea	rdx, [rip + 0x24607]
mov	rcx, rax
lea	rax, [rip + 0x2910d]
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
call	0x140018720
call	0x140018720
add	rdx, 1
mov	rcx, rax
jne	0x14009bd6e
jne	0x14009bd6e
call	0x1400b2e40
call	0x1400b2e40
mov	rbx, rax
lea	rcx, [rsp + 0x28]
call	0x140016ce0
call	0x140016ce0
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x228a3]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14009bdb0
jne	0x14009bdb0
mov	rbx, qword ptr [rip + 0x22b56]
lea	rax, [rip + 0x1a61f]
cmp	qword ptr [rbx], 0
je	0x14009bdc8
je	0x14009bdc8
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
mov	rcx, qword ptr [rip + 0x22b69]
lea	rdx, [rip - 0x2f0e]
call	0x14000c3a0
call	0x14000c3a0
jmp	0x14009bd93
jmp	0x14009bd93
nop	dword ptr [rax]
lea	rsi, [rip + 0x198b1]
mov	edx, 2
mov	rcx, rsi
call	0x14009aaa0
call	0x14009aaa0
mov	rdx, qword ptr [rip + 0x22b4d]
lea	rax, [rip + 0x1a5d6]
mov	qword ptr [rbx], rsi
mov	rcx, rax
mov	qword ptr [rdx], rsi
mov	rdx, rsi
call	0x14009be10
call	0x14009be10
lea	rax, [rip + 0x1a5be]
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rdx]
cmp	rax, qword ptr [rip + 0x1b516]
mov	qword ptr [rcx], rax
je	0x14009be3f
je	0x14009be3f
mov	rdx, qword ptr [rip + 0x227fa]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x14009be40
jne	0x14009be40
add	dword ptr [rax], 1
ret	
ret	
lock add	dword ptr [rax], 1
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	qword ptr [rcx], 0
mov	rbx, rcx
call	0x140098e20
call	0x140098e20
mov	rsi, qword ptr [rip + 0x22ac2]
mov	rdx, qword ptr [rip + 0x22a7b]
mov	rax, qword ptr [rsi]
mov	qword ptr [rbx], rax
cmp	rax, qword ptr [rdx]
je	0x14009bea8
je	0x14009bea8
call	0x1400167f0
call	0x1400167f0
mov	rbp, qword ptr [rip + 0x227a4]
mov	rdi, rax
mov	r8d, dword ptr [rbp]
test	r8d, r8d
jne	0x14009bef0
jne	0x14009bef0
mov	rdx, qword ptr [rsi]
add	dword ptr [rdx], 1
mov	eax, dword ptr [rbp]
mov	qword ptr [rbx], rdx
test	eax, eax
jne	0x14009beb8
jne	0x14009beb8
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rdi
call	0x14000c550
call	0x14000c550
test	eax, eax
je	0x14009bea8
je	0x14009bea8
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x83b55]
lea	rdx, [rip + 0x24464]
mov	rcx, rax
lea	rax, [rip + 0x28f6a]
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
nop	
mov	rcx, rax
call	0x14000c4f0
call	0x14000c4f0
test	eax, eax
jne	0x14009bf1f
jne	0x14009bf1f
mov	ecx, dword ptr [rbp]
mov	rdx, qword ptr [rsi]
test	ecx, ecx
je	0x14009be9b
je	0x14009be9b
lock add	dword ptr [rdx], 1
mov	rdx, qword ptr [rsi]
jmp	0x14009be9e
jmp	0x14009be9e
add	rdx, 1
mov	rcx, rax
jne	0x14009bf24
jne	0x14009bf24
call	0x1400b2e40
call	0x1400b2e40
jmp	0x14009bf0f
jmp	0x14009bf0f
call	0x140018720
call	0x140018720
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, qword ptr [rcx]
cmp	rbx, qword ptr [rip + 0x1b401]
je	0x14009bf5a
je	0x14009bf5a
mov	rax, qword ptr [rip + 0x226e8]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x14009bf60
jne	0x14009bf60
mov	eax, dword ptr [rbx]
lea	edx, [rax - 1]
mov	dword ptr [rbx], edx
cmp	eax, 1
je	0x14009bf6e
je	0x14009bf6e
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	eax, 0xffffffff
lock xadd	dword ptr [rbx], eax
cmp	eax, 1
jne	0x14009bf5a
jne	0x14009bf5a
mov	rcx, rbx
call	0x14009b8f0
call	0x14009b8f0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, rcx
mov	rbx, rdx
mov	rcx, qword ptr [rdx]
mov	rdx, qword ptr [rip + 0x1b39a]
cmp	rcx, rdx
je	0x14009bfbd
je	0x14009bfbd
mov	r8, qword ptr [rip + 0x2267e]
mov	r8d, dword ptr [r8]
test	r8d, r8d
jne	0x14009bff0
jne	0x14009bff0
add	dword ptr [rcx], 1
mov	rsi, qword ptr [rax]
cmp	rsi, rdx
je	0x14009bfde
je	0x14009bfde
mov	rdx, qword ptr [rip + 0x22664]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x14009c000
jne	0x14009c000
mov	edx, dword ptr [rsi]
lea	ecx, [rdx - 1]
mov	dword ptr [rsi], ecx
cmp	edx, 1
je	0x14009c00e
je	0x14009c00e
mov	rdx, qword ptr [rbx]
mov	qword ptr [rax], rdx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
lock add	dword ptr [rcx], 1
mov	rdx, qword ptr [rip + 0x1b345]
jmp	0x14009bfbd
jmp	0x14009bfbd
nop	dword ptr [rax]
mov	edx, 0xffffffff
lock xadd	dword ptr [rsi], edx
cmp	edx, 1
jne	0x14009bfde
jne	0x14009bfde
mov	rcx, rsi
mov	qword ptr [rsp + 0x40], rax
call	0x14009b8f0
call	0x14009b8f0
mov	rcx, rsi
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0x40]
mov	rdx, qword ptr [rbx]
mov	qword ptr [rax], rdx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx + 0x10]
mov	rbx, rcx
test	rax, rax
je	0x14009c0e8
je	0x14009c0e8
mov	byte ptr [rax + 0x21], 0x2e
mov	rax, qword ptr [rbx + 0x10]
lea	rdx, [rip + 0x1d0cc]
mov	byte ptr [rax + 0x22], 0x2c
mov	rax, qword ptr [rbx + 0x10]
mov	qword ptr [rax + 0x10], rdx
mov	qword ptr [rax + 0x28], rdx
mov	qword ptr [rax + 0x38], rdx
mov	qword ptr [rax + 0x48], rdx
mov	rdx, qword ptr [rip + 0x226fd]
mov	qword ptr [rax + 0x18], 0
mov	edx, dword ptr [rdx]
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	dword ptr [rax + 0x58], 0
mov	dword ptr [rax + 0x5c], edx
mov	rax, qword ptr [rbx + 0x10]
mov	dword ptr [rax + 0x60], edx
mov	rax, qword ptr [rip + 0x226d3]
mov	r8, qword ptr [rax]
xor	eax, eax
nop	word ptr [rax + rax]
movzx	ecx, byte ptr [r8 + rax]
mov	rdx, qword ptr [rbx + 0x10]
mov	byte ptr [rdx + rax + 0x64], cl
add	rax, 1
cmp	rax, 0xb
jne	0x14009c0c8
jne	0x14009c0c8
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	ecx, 0x70
call	0x1400b2c30
call	0x1400b2c30
mov	rcx, qword ptr [rip + 0x22eb7]
mov	dword ptr [rax + 8], 0
lea	rdx, [rcx + 0x10]
mov	qword ptr [rax + 0x10], 0
mov	qword ptr [rax], rdx
xor	edx, edx
mov	qword ptr [rax + 0x18], 0
mov	byte ptr [rax + 0x20], 0
mov	word ptr [rax + 0x21], dx
mov	qword ptr [rax + 0x28], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x38], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x48], 0
mov	qword ptr [rax + 0x50], 0
mov	dword ptr [rax + 0x58], 0
mov	qword ptr [rax + 0x5c], 0
mov	byte ptr [rax + 0x6f], 0
mov	qword ptr [rbx + 0x10], rax
jmp	0x14009c055
jmp	0x14009c055
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x2972c]
mov	qword ptr [rcx], rax
call	0x14009c040
call	0x14009c040
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x296dd]
mov	qword ptr [rcx], rax
call	0x14009c040
call	0x14009c040
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x29688]
mov	qword ptr [rcx], rax
call	0x14009c040
call	0x14009c040
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x2963c]
mov	qword ptr [rcx], rax
call	0x14009c040
call	0x14009c040
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x295ed]
mov	qword ptr [rcx], rax
call	0x14009c040
call	0x14009c040
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x29598]
mov	qword ptr [rcx], rax
call	0x14009c040
call	0x14009c040
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x22973]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x14009c376
je	0x14009c376
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rbx
mov	rsi, rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
jmp	0x14009c397
jmp	0x14009c397
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x22913]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x14009c3d6
je	0x14009c3d6
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x14009bc00
jmp	0x14009bc00
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx + 0x10]
mov	rbx, rcx
test	rax, rax
je	0x14009c4a8
je	0x14009c4a8
mov	byte ptr [rax + 0x21], 0x2e
mov	rax, qword ptr [rbx + 0x10]
lea	rdx, [rip + 0x1cd0c]
mov	byte ptr [rax + 0x22], 0x2c
mov	rax, qword ptr [rbx + 0x10]
mov	qword ptr [rax + 0x10], rdx
mov	qword ptr [rax + 0x28], rdx
mov	qword ptr [rax + 0x38], rdx
mov	qword ptr [rax + 0x48], rdx
mov	rdx, qword ptr [rip + 0x2233d]
mov	qword ptr [rax + 0x18], 0
mov	edx, dword ptr [rdx]
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	dword ptr [rax + 0x58], 0
mov	dword ptr [rax + 0x5c], edx
mov	rax, qword ptr [rbx + 0x10]
mov	dword ptr [rax + 0x60], edx
mov	rax, qword ptr [rip + 0x22313]
mov	r8, qword ptr [rax]
xor	eax, eax
nop	word ptr [rax + rax]
movzx	ecx, byte ptr [r8 + rax]
mov	rdx, qword ptr [rbx + 0x10]
mov	byte ptr [rdx + rax + 0x64], cl
add	rax, 1
cmp	rax, 0xb
jne	0x14009c488
jne	0x14009c488
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
mov	ecx, 0x70
call	0x1400b2c30
call	0x1400b2c30
mov	rcx, qword ptr [rip + 0x22b07]
mov	dword ptr [rax + 8], 0
lea	rdx, [rcx + 0x10]
mov	qword ptr [rax + 0x10], 0
mov	qword ptr [rax], rdx
xor	edx, edx
mov	qword ptr [rax + 0x18], 0
mov	byte ptr [rax + 0x20], 0
mov	word ptr [rax + 0x21], dx
mov	qword ptr [rax + 0x28], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x38], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x48], 0
mov	qword ptr [rax + 0x50], 0
mov	dword ptr [rax + 0x58], 0
mov	qword ptr [rax + 0x5c], 0
mov	byte ptr [rax + 0x6f], 0
mov	qword ptr [rbx + 0x10], rax
jmp	0x14009c415
jmp	0x14009c415
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x293dc]
mov	qword ptr [rcx], rax
call	0x14009c400
call	0x14009c400
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x2938d]
mov	qword ptr [rcx], rax
call	0x14009c400
call	0x14009c400
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x29338]
mov	qword ptr [rcx], rax
call	0x14009c400
call	0x14009c400
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x292ec]
mov	qword ptr [rcx], rax
call	0x14009c400
call	0x14009c400
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x2929d]
mov	qword ptr [rcx], rax
call	0x14009c400
call	0x14009c400
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x29248]
mov	qword ptr [rcx], rax
call	0x14009c400
call	0x14009c400
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x225c3]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x14009c736
je	0x14009c736
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rbx
mov	rsi, rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
jmp	0x14009c757
jmp	0x14009c757
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x22563]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x14009c796
je	0x14009c796
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x14009bc00
jmp	0x14009bc00
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx + 0x10]
mov	rbx, rcx
test	rax, rax
je	0x14009c868
je	0x14009c868
lea	rdx, [rip + 0x1c956]
lea	rcx, [rip + 0x1c94d]
mov	dword ptr [rax + 0x22], 0x2c002e
mov	qword ptr [rax + 0x28], rdx
mov	qword ptr [rax + 0x38], rdx
mov	qword ptr [rax + 0x48], rdx
mov	rdx, qword ptr [rip + 0x21f83]
mov	qword ptr [rax + 0x10], rcx
mov	edx, dword ptr [rdx]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	dword ptr [rax + 0x5c], edx
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	dword ptr [rax + 0x58], 0
mov	rax, qword ptr [rbx + 0x10]
mov	dword ptr [rax + 0x60], edx
mov	rax, qword ptr [rip + 0x21f55]
mov	rcx, qword ptr [rbx + 0x10]
mov	r8, qword ptr [rax]
xor	eax, eax
nop	dword ptr [rax]
movsx	dx, byte ptr [r8 + rax]
mov	word ptr [rcx + rax*2 + 0x64], dx
add	rax, 1
cmp	rax, 0xb
jne	0x14009c848
jne	0x14009c848
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	ecx, 0x80
call	0x1400b2c30
call	0x1400b2c30
mov	rcx, qword ptr [rip + 0x22757]
mov	dword ptr [rax + 8], 0
lea	rdx, [rcx + 0x10]
mov	qword ptr [rax + 0x10], 0
mov	qword ptr [rax], rdx
mov	qword ptr [rax + 0x18], 0
mov	byte ptr [rax + 0x20], 0
mov	dword ptr [rax + 0x22], 0
mov	qword ptr [rax + 0x28], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x38], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x48], 0
mov	qword ptr [rax + 0x50], 0
mov	dword ptr [rax + 0x58], 0
mov	qword ptr [rax + 0x5c], 0
mov	byte ptr [rax + 0x7a], 0
mov	qword ptr [rbx + 0x10], rax
jmp	0x14009c7d5
jmp	0x14009c7d5
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x2908c]
mov	qword ptr [rcx], rax
call	0x14009c7c0
call	0x14009c7c0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x2903d]
mov	qword ptr [rcx], rax
call	0x14009c7c0
call	0x14009c7c0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x28fe8]
mov	qword ptr [rcx], rax
call	0x14009c7c0
call	0x14009c7c0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x28f9c]
mov	qword ptr [rcx], rax
call	0x14009c7c0
call	0x14009c7c0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x28f4d]
mov	qword ptr [rcx], rax
call	0x14009c7c0
call	0x14009c7c0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x28ef8]
mov	qword ptr [rcx], rax
call	0x14009c7c0
call	0x14009c7c0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x22213]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x14009caf6
je	0x14009caf6
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rbx
mov	rsi, rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
jmp	0x14009cb17
jmp	0x14009cb17
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x221b3]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x14009cb56
je	0x14009cb56
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x14009bc00
jmp	0x14009bc00
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx + 0x10]
mov	rbx, rcx
test	rax, rax
je	0x14009cc28
je	0x14009cc28
lea	rdx, [rip + 0x1c596]
lea	rcx, [rip + 0x1c58d]
mov	dword ptr [rax + 0x22], 0x2c002e
mov	qword ptr [rax + 0x28], rdx
mov	qword ptr [rax + 0x38], rdx
mov	qword ptr [rax + 0x48], rdx
mov	rdx, qword ptr [rip + 0x21bc3]
mov	qword ptr [rax + 0x10], rcx
mov	edx, dword ptr [rdx]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x30], 0
mov	dword ptr [rax + 0x5c], edx
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x50], 0
mov	dword ptr [rax + 0x58], 0
mov	rax, qword ptr [rbx + 0x10]
mov	dword ptr [rax + 0x60], edx
mov	rax, qword ptr [rip + 0x21b95]
mov	rcx, qword ptr [rbx + 0x10]
mov	r8, qword ptr [rax]
xor	eax, eax
nop	dword ptr [rax]
movsx	dx, byte ptr [r8 + rax]
mov	word ptr [rcx + rax*2 + 0x64], dx
add	rax, 1
cmp	rax, 0xb
jne	0x14009cc08
jne	0x14009cc08
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	ecx, 0x80
call	0x1400b2c30
call	0x1400b2c30
mov	rcx, qword ptr [rip + 0x223a7]
mov	dword ptr [rax + 8], 0
lea	rdx, [rcx + 0x10]
mov	qword ptr [rax + 0x10], 0
mov	qword ptr [rax], rdx
mov	qword ptr [rax + 0x18], 0
mov	byte ptr [rax + 0x20], 0
mov	dword ptr [rax + 0x22], 0
mov	qword ptr [rax + 0x28], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x38], 0
mov	qword ptr [rax + 0x40], 0
mov	qword ptr [rax + 0x48], 0
mov	qword ptr [rax + 0x50], 0
mov	dword ptr [rax + 0x58], 0
mov	qword ptr [rax + 0x5c], 0
mov	byte ptr [rax + 0x7a], 0
mov	qword ptr [rbx + 0x10], rax
jmp	0x14009cb95
jmp	0x14009cb95
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x28d3c]
mov	qword ptr [rcx], rax
call	0x14009cb80
call	0x14009cb80
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x28ced]
mov	qword ptr [rcx], rax
call	0x14009cb80
call	0x14009cb80
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x28c98]
mov	qword ptr [rcx], rax
call	0x14009cb80
call	0x14009cb80
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x28c4c]
mov	qword ptr [rcx], rax
call	0x14009cb80
call	0x14009cb80
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x28bfd]
mov	qword ptr [rcx], rax
call	0x14009cb80
call	0x14009cb80
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x28ba8]
mov	qword ptr [rcx], rax
call	0x14009cb80
call	0x14009cb80
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x21e63]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x14009ceb6
je	0x14009ceb6
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rbx
mov	rsi, rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
jmp	0x14009ced7
jmp	0x14009ced7
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x21e03]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x14009cf16
je	0x14009cf16
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x14009bc00
jmp	0x14009bc00
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rcx, qword ptr [rcx]
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rcx, 0x10
cmp	rax, rcx
je	0x14009cf68
je	0x14009cf68
mov	rcx, rax
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
movabs	rax, 0x3fffffffffffffff
mov	rsi, qword ptr [rsp + 0x80]
mov	rbx, rcx
mov	rcx, rdx
add	rax, r8
mov	rdx, qword ptr [rbx + 8]
sub	rax, rdx
cmp	rax, rsi
jb	0x14009d0ac
jb	0x14009d0ac
mov	rdi, rsi
mov	rax, qword ptr [rbx]
lea	r10, [rbx + 0x10]
sub	rdi, r8
add	rdi, rdx
cmp	rax, r10
je	0x14009d078
je	0x14009d078
mov	r10, qword ptr [rbx + 0x10]
cmp	r10, rdi
jb	0x14009d060
jb	0x14009d060
lea	rbp, [rax + rcx]
mov	r10, rdx
add	rcx, r8
sub	r10, rcx
cmp	r9, rax
jae	0x14009d040
jae	0x14009d040
test	r10, r10
je	0x14009d00b
je	0x14009d00b
cmp	r8, rsi
je	0x14009d00b
je	0x14009d00b
lea	rdx, [rbp + r8]
lea	rcx, [rbp + rsi]
cmp	r10, 1
je	0x14009d088
je	0x14009d088
mov	r8, r10
mov	qword ptr [rsp + 0x78], r9
call	0x1400159a0
call	0x1400159a0
mov	r9, qword ptr [rsp + 0x78]
test	rsi, rsi
je	0x14009d028
je	0x14009d028
cmp	rsi, 1
je	0x14009d0a0
je	0x14009d0a0
mov	r8, rsi
mov	rdx, r9
mov	rcx, rbp
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rbx]
mov	qword ptr [rbx + 8], rdi
mov	byte ptr [rax + rdi], 0
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
add	rax, rdx
cmp	rax, r9
jb	0x14009cfdb
jb	0x14009cfdb
mov	qword ptr [rsp + 0x28], r10
mov	rdx, rbp
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], rsi
call	0x14009da30
call	0x14009da30
jmp	0x14009d028
jmp	0x14009d028
nop	
mov	qword ptr [rsp + 0x20], rsi
mov	rdx, rcx
mov	rcx, rbx
call	0x14009faf0
call	0x14009faf0
jmp	0x14009d028
jmp	0x14009d028
nop	word ptr [rax + rax]
mov	r10d, 0xf
jmp	0x14009cfc0
jmp	0x14009cfc0
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
test	rsi, rsi
je	0x14009d028
je	0x14009d028
jmp	0x14009d010
jmp	0x14009d010
nop	word ptr [rax + rax]
movzx	eax, byte ptr [r9]
mov	byte ptr [rbp], al
jmp	0x14009d028
jmp	0x14009d028
lea	rcx, [rip + 0x1d462]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, 0x7fffffff
sub	rcx, rdx
cmp	rcx, 0x7fffffff
jg	0x14009d0e0
jg	0x14009d0e0
cmp	rcx, -0x80000000
mov	eax, 0x80000000
cmovge	eax, ecx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx + 0x10], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rcx, rdx
test	rdx, rdx
js	0x14009d118
js	0x14009d118
add	rsp, 0x28
jmp	0x1400b2c30
jmp	0x1400b2c30
nop	dword ptr [rax]
call	0x1400b39b0
call	0x1400b39b0
nop	
nop	
nop	
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rbx, rdx
mov	edi, r8d
cmp	rdx, 0xf
ja	0x14009d1a0
ja	0x14009d1a0
test	rdx, rdx
je	0x14009d187
je	0x14009d187
mov	rcx, qword ptr [rcx]
cmp	rdx, 1
jne	0x14009d1bc
jne	0x14009d1bc
mov	byte ptr [rcx], r8b
mov	rax, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rax + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, rdx
shr	rax, 0x3e
jne	0x14009d1ca
jne	0x14009d1ca
lea	rcx, [rdx + 1]
call	0x1400b2c30
call	0x1400b2c30
mov	qword ptr [rsi + 0x10], rbx
mov	qword ptr [rsi], rax
mov	rcx, rax
movsx	edx, dil
mov	r8, rbx
call	0x1400159a8
call	0x1400159a8
jmp	0x14009d187
jmp	0x14009d187
lea	rcx, [rip + 0x1d23f]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, r8
mov	rsi, rcx
mov	rdi, rdx
sub	rbx, rdx
cmp	rbx, 0xf
ja	0x14009d240
ja	0x14009d240
mov	rcx, qword ptr [rcx]
cmp	rbx, 1
je	0x14009d220
je	0x14009d220
test	rbx, rbx
jne	0x14009d25c
jne	0x14009d25c
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, rbx
shr	rax, 0x3e
jne	0x14009d27a
jne	0x14009d27a
lea	rcx, [rbx + 1]
call	0x1400b2c30
call	0x1400b2c30
mov	qword ptr [rsi + 0x10], rbx
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x1d18f]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, r8
mov	rsi, rcx
mov	rdi, rdx
sub	rbx, rdx
cmp	rbx, 0xf
ja	0x14009d2f0
ja	0x14009d2f0
mov	rcx, qword ptr [rcx]
cmp	rbx, 1
je	0x14009d2d0
je	0x14009d2d0
test	rbx, rbx
jne	0x14009d30c
jne	0x14009d30c
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, rbx
shr	rax, 0x3e
jne	0x14009d32a
jne	0x14009d32a
lea	rcx, [rbx + 1]
call	0x1400b2c30
call	0x1400b2c30
mov	qword ptr [rsi + 0x10], rbx
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x1d0df]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, r8
mov	rsi, rcx
mov	rdi, rdx
sub	rbx, rdx
cmp	rbx, 0xf
ja	0x14009d3a0
ja	0x14009d3a0
mov	rcx, qword ptr [rcx]
cmp	rbx, 1
je	0x14009d380
je	0x14009d380
test	rbx, rbx
jne	0x14009d3bc
jne	0x14009d3bc
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, rbx
shr	rax, 0x3e
jne	0x14009d3da
jne	0x14009d3da
lea	rcx, [rbx + 1]
call	0x1400b2c30
call	0x1400b2c30
mov	qword ptr [rsi + 0x10], rbx
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x1d02f]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rbx, r8
mov	rsi, rcx
mov	rdi, rdx
sub	rbx, rdx
mov	qword ptr [rsp + 0x28], rbx
cmp	rbx, 0xf
ja	0x14009d450
ja	0x14009d450
mov	rcx, qword ptr [rcx]
cmp	rbx, 1
jne	0x14009d438
jne	0x14009d438
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
mov	rbx, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
test	rbx, rbx
jne	0x14009d46c
jne	0x14009d46c
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x14009fa70
call	0x14009fa70
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rsi + 0x10], rax
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rbx, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rbx, r8
mov	rsi, rcx
mov	rdi, rdx
sub	rbx, rdx
mov	qword ptr [rsp + 0x28], rbx
cmp	rbx, 0xf
ja	0x14009d4f0
ja	0x14009d4f0
mov	rcx, qword ptr [rcx]
cmp	rbx, 1
jne	0x14009d4d8
jne	0x14009d4d8
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
mov	rbx, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
test	rbx, rbx
jne	0x14009d50c
jne	0x14009d50c
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x14009fa70
call	0x14009fa70
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rsi + 0x10], rax
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rbx, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rbx, r8
mov	rsi, rcx
mov	rdi, rdx
sub	rbx, rdx
mov	qword ptr [rsp + 0x28], rbx
cmp	rbx, 0xf
ja	0x14009d590
ja	0x14009d590
mov	rcx, qword ptr [rcx]
cmp	rbx, 1
jne	0x14009d578
jne	0x14009d578
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
mov	rbx, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
test	rbx, rbx
jne	0x14009d5ac
jne	0x14009d5ac
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x14009fa70
call	0x14009fa70
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rsi + 0x10], rax
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rbx, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rbx, r8
mov	rsi, rcx
mov	rdi, rdx
sub	rbx, rdx
mov	qword ptr [rsp + 0x28], rbx
cmp	rbx, 0xf
ja	0x14009d630
ja	0x14009d630
mov	rcx, qword ptr [rcx]
cmp	rbx, 1
jne	0x14009d618
jne	0x14009d618
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
mov	rbx, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
test	rbx, rbx
jne	0x14009d64c
jne	0x14009d64c
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x14009fa70
call	0x14009fa70
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rsi + 0x10], rax
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rbx, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rbx, r8
mov	rsi, rcx
mov	rdi, rdx
sub	rbx, rdx
mov	qword ptr [rsp + 0x28], rbx
cmp	rbx, 0xf
ja	0x14009d6d0
ja	0x14009d6d0
mov	rcx, qword ptr [rcx]
cmp	rbx, 1
jne	0x14009d6b8
jne	0x14009d6b8
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
mov	rbx, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
test	rbx, rbx
jne	0x14009d6ec
jne	0x14009d6ec
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x14009fa70
call	0x14009fa70
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rsi + 0x10], rax
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rbx, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, r8
mov	rsi, rcx
mov	rdi, rdx
sub	rbx, rdx
cmp	rbx, 0xf
ja	0x14009d770
ja	0x14009d770
mov	rcx, qword ptr [rcx]
cmp	rbx, 1
je	0x14009d750
je	0x14009d750
test	rbx, rbx
jne	0x14009d78c
jne	0x14009d78c
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, rbx
shr	rax, 0x3e
jne	0x14009d7aa
jne	0x14009d7aa
lea	rcx, [rbx + 1]
call	0x1400b2c30
call	0x1400b2c30
mov	qword ptr [rsi + 0x10], rbx
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x1cc5f]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rbx, r8
mov	rsi, rcx
mov	rdi, rdx
sub	rbx, rdx
mov	qword ptr [rsp + 0x28], rbx
cmp	rbx, 0xf
ja	0x14009d820
ja	0x14009d820
mov	rcx, qword ptr [rcx]
cmp	rbx, 1
jne	0x14009d808
jne	0x14009d808
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
mov	rbx, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
test	rbx, rbx
jne	0x14009d83c
jne	0x14009d83c
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x14009fa70
call	0x14009fa70
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rsi + 0x10], rax
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rbx, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
lea	rax, [rcx + 0x10]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	qword ptr [rcx + 8], rdx
mov	byte ptr [rax + rdx], 0
ret	
ret	
nop	
nop	
nop	
nop	
sub	r8, rdx
cmp	r8, 1
je	0x14009d898
je	0x14009d898
test	r8, r8
jne	0x14009d890
jne	0x14009d890
ret	
ret	
nop	
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
ret	
ret	
nop	
nop	
sub	r8, rdx
cmp	r8, 1
je	0x14009d8b8
je	0x14009d8b8
test	r8, r8
jne	0x14009d8b0
jne	0x14009d8b0
ret	
ret	
nop	
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
ret	
ret	
nop	
nop	
sub	r8, rdx
cmp	r8, 1
je	0x14009d8d8
je	0x14009d8d8
test	r8, r8
jne	0x14009d8d0
jne	0x14009d8d0
ret	
ret	
nop	
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
ret	
ret	
nop	
nop	
sub	r8, rdx
cmp	r8, 1
je	0x14009d8f8
je	0x14009d8f8
test	r8, r8
jne	0x14009d8f0
jne	0x14009d8f0
ret	
ret	
nop	
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
ret	
ret	
nop	
nop	
sub	rsp, 0x28
call	0x14009f650
call	0x14009f650
nop	
add	rsp, 0x28
ret	
ret	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
movabs	rax, 0x3fffffffffffffff
mov	edi, dword ptr [rsp + 0x80]
mov	rbp, rdx
mov	rdx, qword ptr [rcx + 8]
add	rax, r8
mov	rbx, rcx
mov	rsi, r9
sub	rax, rdx
cmp	rax, r9
jb	0x14009da22
jb	0x14009da22
mov	r12, r9
mov	rcx, qword ptr [rcx]
lea	rax, [rbx + 0x10]
sub	r12, r8
add	r12, rdx
cmp	rcx, rax
je	0x14009d9f0
je	0x14009d9f0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, r12
jb	0x14009d9d0
jb	0x14009d9d0
lea	rax, [r8 + rbp]
sub	rdx, rax
je	0x14009d999
je	0x14009d999
cmp	r8, rsi
je	0x14009d999
je	0x14009d999
add	rcx, rbp
lea	rax, [rcx + r8]
add	rcx, rsi
cmp	rdx, 1
je	0x14009da10
je	0x14009da10
mov	r8, rdx
mov	rdx, rax
call	0x1400159a0
call	0x1400159a0
mov	rcx, qword ptr [rbx]
test	rsi, rsi
je	0x14009d9b6
je	0x14009d9b6
add	rcx, rbp
cmp	rsi, 1
je	0x14009da00
je	0x14009da00
movsx	edx, dil
mov	r8, rsi
call	0x1400159a8
call	0x1400159a8
mov	rcx, qword ptr [rbx]
mov	rax, rbx
mov	qword ptr [rbx + 8], r12
mov	byte ptr [rcx + r12], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x20], rsi
mov	rcx, rbx
xor	r9d, r9d
mov	rdx, rbp
call	0x14009faf0
call	0x14009faf0
mov	rcx, qword ptr [rbx]
test	rsi, rsi
je	0x14009d9b6
je	0x14009d9b6
jmp	0x14009d99e
jmp	0x14009d99e
nop	dword ptr [rax]
mov	eax, 0xf
jmp	0x14009d964
jmp	0x14009d964
nop	word ptr [rax + rax]
mov	byte ptr [rcx], dil
mov	rcx, qword ptr [rbx]
jmp	0x14009d9b6
jmp	0x14009d9b6
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rax]
mov	byte ptr [rcx], al
mov	rcx, qword ptr [rbx]
test	rsi, rsi
je	0x14009d9b6
je	0x14009d9b6
jmp	0x14009d99e
jmp	0x14009d99e
lea	rcx, [rip + 0x1caa4]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, qword ptr [rsp + 0x80]
mov	rsi, qword ptr [rsp + 0x88]
lea	rax, [rbx - 1]
mov	rbp, rdx
mov	r13, r8
mov	rdi, r9
cmp	rax, r8
jae	0x14009da79
jae	0x14009da79
cmp	rbx, 1
jne	0x14009da6b
jne	0x14009da6b
mov	al, byte ptr [r9]
mov	byte ptr [rdx], al
jmp	0x14009da79
jmp	0x14009da79
mov	r8, rbx
mov	rdx, r9
mov	rcx, rbp
call	0x1400159a0
call	0x1400159a0
test	rsi, rsi
je	0x14009daa1
je	0x14009daa1
cmp	rbx, r13
je	0x14009daa1
je	0x14009daa1
lea	rdx, [rbp + r13]
lea	rcx, [rbp + rbx]
cmp	rsi, 1
jne	0x14009da99
jne	0x14009da99
mov	al, byte ptr [rdx]
mov	byte ptr [rcx], al
jmp	0x14009daa1
jmp	0x14009daa1
mov	r8, rsi
call	0x1400159a0
call	0x1400159a0
cmp	r13, rbx
jae	0x14009db40
jae	0x14009db40
lea	r12, [rbp + r13]
lea	rax, [rdi + rbx]
cmp	r12, rax
jb	0x14009dadf
jb	0x14009dadf
cmp	rbx, 1
jne	0x14009dac5
jne	0x14009dac5
mov	al, byte ptr [rdi]
mov	byte ptr [rbp], al
jmp	0x14009db40
jmp	0x14009db40
mov	r8, rbx
mov	rdx, rdi
mov	rcx, rbp
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
jmp	0x1400159a0
jmp	0x1400159a0
cmp	rdi, r12
jb	0x14009dafd
jb	0x14009dafd
mov	rsi, rbx
sub	rsi, r13
add	rsi, rdi
cmp	rbx, 1
je	0x14009db2f
je	0x14009db2f
mov	rdi, rbp
mov	rcx, rbx
rep movsb	byte ptr [rdi], byte ptr [rsi]
jmp	0x14009db40
jmp	0x14009db40
sub	r12, rdi
cmp	r12, 1
jne	0x14009db0d
jne	0x14009db0d
mov	al, byte ptr [rdi]
mov	byte ptr [rbp], al
jmp	0x14009db1b
jmp	0x14009db1b
mov	r8, r12
mov	rdx, rdi
mov	rcx, rbp
call	0x1400159a0
call	0x1400159a0
mov	rcx, rbx
lea	rsi, [rbp + rbx]
add	rbp, r12
sub	rcx, r12
cmp	rcx, 1
jne	0x14009db36
jne	0x14009db36
mov	al, byte ptr [rsi]
mov	byte ptr [rbp], al
jmp	0x14009db40
jmp	0x14009db40
test	rcx, rcx
je	0x14009db40
je	0x14009db40
mov	rdi, rbp
rep movsb	byte ptr [rdi], byte ptr [rsi]
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	
nop	
nop	
mov	rax, rcx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rcx + 0x10]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
mov	rbx, rdx
mov	edi, r8d
cmp	rdx, 0xf
ja	0x14009dbb0
ja	0x14009dbb0
test	rdx, rdx
je	0x14009db97
je	0x14009db97
mov	rcx, qword ptr [rcx]
cmp	rdx, 1
jne	0x14009dbcc
jne	0x14009dbcc
mov	byte ptr [rcx], r8b
mov	rax, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rax + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, rdx
shr	rax, 0x3e
jne	0x14009dbda
jne	0x14009dbda
lea	rcx, [rdx + 1]
call	0x1400b2c30
call	0x1400b2c30
mov	qword ptr [rsi + 0x10], rbx
mov	qword ptr [rsi], rax
mov	rcx, rax
movsx	edx, dil
mov	r8, rbx
call	0x1400159a8
call	0x1400159a8
jmp	0x14009db97
jmp	0x14009db97
lea	rcx, [rip + 0x1c82f]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r8, qword ptr [rcx + 8]
cmp	rdx, r8
jae	0x14009dc08
jae	0x14009dc08
mov	rax, qword ptr [rcx]
add	rax, rdx
add	rsp, 0x28
ret	
ret	
lea	rcx, [rip + 0x1c851]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rax, qword ptr [rcx + 8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 8]
mov	rdx, qword ptr [rcx]
lea	rax, [rdx + rax - 1]
ret	
ret	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	rax, rcx
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x18
mov	rax, rcx
cmp	rcx, rdx
je	0x14009dca5
je	0x14009dca5
mov	r8, qword ptr [rcx]
lea	r10, [rcx + 0x10]
mov	rcx, qword ptr [rdx]
cmp	r8, r10
je	0x14009dcb0
je	0x14009dcb0
lea	r11, [rdx + 0x10]
mov	r9, qword ptr [rax + 0x10]
cmp	rcx, r11
je	0x14009dd30
je	0x14009dd30
mov	qword ptr [rax], rcx
mov	rcx, qword ptr [rdx + 0x10]
mov	qword ptr [rdx], r8
mov	qword ptr [rax + 0x10], rcx
mov	rbx, qword ptr [rdx + 8]
mov	qword ptr [rdx + 0x10], r9
mov	rcx, qword ptr [rax + 8]
mov	r11, rbx
mov	qword ptr [rax + 8], r11
mov	qword ptr [rdx + 8], rcx
add	rsp, 0x18
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
lea	rsi, [rdx + 0x10]
mov	r9, qword ptr [rax + 8]
cmp	rsi, rcx
je	0x14009de30
je	0x14009de30
lea	r10, [r9 + 1]
mov	rbp, qword ptr [rdx + 0x10]
cmp	r10d, 8
jae	0x14009ddd0
jae	0x14009ddd0
test	r10b, 4
jne	0x14009defe
jne	0x14009defe
test	r10d, r10d
je	0x14009dd10
je	0x14009dd10
movzx	r9d, byte ptr [r8]
mov	byte ptr [rdx + 0x10], r9b
test	r10b, 2
je	0x14009de1d
je	0x14009de1d
mov	r10d, r10d
movzx	r8d, word ptr [r8 + r10 - 2]
mov	word ptr [rsi + r10 - 2], r8w
mov	r9, qword ptr [rax + 8]
nop	word ptr [rax + rax]
mov	qword ptr [rax], rcx
mov	rcx, r9
mov	qword ptr [rdx], rsi
mov	qword ptr [rax + 0x10], rbp
mov	r11, qword ptr [rdx + 8]
jmp	0x14009dc9d
jmp	0x14009dc9d
nop	word ptr cs:[rax + rax]
mov	rbx, qword ptr [rdx + 8]
lea	r11, [rbx + 1]
cmp	r11d, 8
jae	0x14009dd80
jae	0x14009dd80
test	r11b, 4
jne	0x14009dee3
jne	0x14009dee3
test	r11d, r11d
je	0x14009dd70
je	0x14009dd70
movzx	ebx, byte ptr [rcx]
mov	byte ptr [rax + 0x10], bl
test	r11b, 2
je	0x14009ddca
je	0x14009ddca
mov	r11d, r11d
movzx	ecx, word ptr [rcx + r11 - 2]
mov	word ptr [r10 + r11 - 2], cx
mov	rbx, qword ptr [rdx + 8]
nop	dword ptr [rax]
mov	qword ptr [rdx], r8
mov	qword ptr [rax], r10
jmp	0x14009dc92
jmp	0x14009dc92
nop	dword ptr [rax + rax]
mov	rbx, qword ptr [rcx]
lea	rdi, [rax + 0x18]
and	rdi, 0xfffffffffffffff8
mov	qword ptr [rax + 0x10], rbx
mov	ebx, r11d
mov	rsi, qword ptr [rcx + rbx - 8]
mov	qword ptr [r10 + rbx - 8], rsi
mov	rbx, r10
sub	rbx, rdi
add	r11d, ebx
sub	rcx, rbx
and	r11d, 0xfffffff8
cmp	r11d, 8
jb	0x14009ddca
jb	0x14009ddca
and	r11d, 0xfffffff8
xor	ebx, ebx
mov	esi, ebx
add	ebx, 8
mov	rbp, qword ptr [rcx + rsi]
mov	qword ptr [rdi + rsi], rbp
cmp	ebx, r11d
jb	0x14009ddb8
jb	0x14009ddb8
mov	rbx, qword ptr [rdx + 8]
jmp	0x14009dd70
jmp	0x14009dd70
mov	r9, qword ptr [r8]
lea	rbx, [rdx + 0x18]
and	rbx, 0xfffffffffffffff8
mov	qword ptr [rdx + 0x10], r9
mov	r9d, r10d
mov	r11, qword ptr [r8 + r9 - 8]
mov	qword ptr [rsi + r9 - 8], r11
mov	r9, rsi
sub	r9, rbx
add	r10d, r9d
sub	r8, r9
and	r10d, 0xfffffff8
cmp	r10d, 8
jb	0x14009de1d
jb	0x14009de1d
and	r10d, 0xfffffff8
xor	r9d, r9d
mov	r11d, r9d
add	r9d, 8
mov	rdi, qword ptr [r8 + r11]
mov	qword ptr [rbx + r11], rdi
cmp	r9d, r10d
jb	0x14009de09
jb	0x14009de09
mov	r9, qword ptr [rax + 8]
jmp	0x14009dd10
jmp	0x14009dd10
nop	word ptr cs:[rax + rax]
mov	r11, qword ptr [rdx + 8]
mov	rbx, r11
test	r9, r9
je	0x14009de90
je	0x14009de90
lea	r11, [r9 + 1]
test	rbx, rbx
jne	0x14009df22
jne	0x14009df22
cmp	r11d, 8
jae	0x14009e070
jae	0x14009e070
test	r11b, 4
jne	0x14009e186
jne	0x14009e186
test	r11d, r11d
je	0x14009de7a
je	0x14009de7a
movzx	ecx, byte ptr [r8]
mov	byte ptr [rdx + 0x10], cl
test	r11b, 2
jne	0x14009e1c0
jne	0x14009e1c0
mov	r8, qword ptr [rax]
mov	r9, qword ptr [rax + 8]
mov	qword ptr [rdx + 8], r9
mov	qword ptr [rax + 8], 0
mov	byte ptr [r8], 0
jmp	0x14009dca5
jmp	0x14009dca5
nop	
test	r11, r11
je	0x14009df1b
je	0x14009df1b
lea	r9, [r11 + 1]
cmp	r9d, 8
jae	0x14009dfc7
jae	0x14009dfc7
test	r9b, 4
jne	0x14009e166
jne	0x14009e166
test	r9d, r9d
je	0x14009decf
je	0x14009decf
movzx	r10d, byte ptr [rdx + 0x10]
mov	byte ptr [r8], r10b
test	r9b, 2
jne	0x14009e1a5
jne	0x14009e1a5
mov	rcx, qword ptr [rdx]
mov	rbx, qword ptr [rdx + 8]
mov	qword ptr [rax + 8], rbx
mov	qword ptr [rdx + 8], 0
mov	byte ptr [rcx], 0
jmp	0x14009dca5
jmp	0x14009dca5
mov	ebx, dword ptr [rcx]
mov	r11d, r11d
mov	dword ptr [rax + 0x10], ebx
mov	ecx, dword ptr [rcx + r11 - 4]
mov	dword ptr [r10 + r11 - 4], ecx
mov	rbx, qword ptr [rdx + 8]
jmp	0x14009dd70
jmp	0x14009dd70
mov	r9d, dword ptr [r8]
mov	r10d, r10d
mov	dword ptr [rdx + 0x10], r9d
mov	r8d, dword ptr [r8 + r10 - 4]
mov	dword ptr [rsi + r10 - 4], r8d
mov	r9, qword ptr [rax + 8]
jmp	0x14009dd10
jmp	0x14009dd10
xor	ecx, ecx
jmp	0x14009dc9d
jmp	0x14009dc9d
mov	r9, rsp
add	rbx, 1
mov	r8, rcx
mov	rdi, r9
cmp	ebx, 8
jae	0x14009e0c1
jae	0x14009e0c1
xor	esi, esi
test	bl, 4
je	0x14009df49
je	0x14009df49
mov	esi, dword ptr [r8]
mov	dword ptr [rdi], esi
mov	esi, 4
test	bl, 2
je	0x14009df5b
je	0x14009df5b
movzx	ebp, word ptr [r8 + rsi]
mov	word ptr [rdi + rsi], bp
add	rsi, 2
test	bl, 1
je	0x14009df69
je	0x14009df69
movzx	r8d, byte ptr [r8 + rsi]
mov	byte ptr [rdi + rsi], r8b
cmp	r11d, 8
jae	0x14009e018
jae	0x14009e018
test	r11b, 4
jne	0x14009e136
jne	0x14009e136
test	r11d, r11d
je	0x14009df94
je	0x14009df94
movzx	r8d, byte ptr [rax + 0x10]
mov	byte ptr [rcx], r8b
test	r11b, 2
jne	0x14009e1db
jne	0x14009e1db
cmp	ebx, 8
jae	0x14009e0e9
jae	0x14009e0e9
test	bl, 4
jne	0x14009e14f
jne	0x14009e14f
test	ebx, ebx
je	0x14009dfba
je	0x14009dfba
movzx	ecx, byte ptr [rsp]
mov	byte ptr [rax + 0x10], cl
test	bl, 2
jne	0x14009e1ef
jne	0x14009e1ef
mov	r11, qword ptr [rdx + 8]
mov	rcx, qword ptr [rax + 8]
jmp	0x14009dc9d
jmp	0x14009dc9d
mov	rcx, qword ptr [rdx + 0x10]
mov	qword ptr [r8], rcx
mov	ecx, r9d
mov	r10, qword ptr [rsi + rcx - 8]
mov	qword ptr [r8 + rcx - 8], r10
lea	r10, [rax + 0x18]
and	r10, 0xfffffffffffffff8
sub	r8, r10
add	r9d, r8d
sub	rsi, r8
and	r9d, 0xfffffff8
cmp	r9d, 8
jb	0x14009dec8
jb	0x14009dec8
and	r9d, 0xfffffff8
xor	ecx, ecx
mov	r8d, ecx
add	ecx, 8
mov	r11, qword ptr [rsi + r8]
mov	qword ptr [r10 + r8], r11
cmp	ecx, r9d
jb	0x14009e000
jb	0x14009e000
jmp	0x14009dec8
jmp	0x14009dec8
mov	r8, qword ptr [rax + 0x10]
mov	rbp, r10
mov	qword ptr [rcx], r8
mov	r8d, r11d
mov	rsi, qword ptr [r10 + r8 - 8]
mov	qword ptr [rcx + r8 - 8], rsi
lea	rsi, [rcx + 8]
and	rsi, 0xfffffffffffffff8
sub	rcx, rsi
mov	r8, rcx
sub	rbp, rcx
add	r8d, r11d
and	r8d, 0xfffffff8
cmp	r8d, 8
jb	0x14009df94
jb	0x14009df94
and	r8d, 0xfffffff8
xor	ecx, ecx
mov	r11d, ecx
add	ecx, 8
mov	rdi, qword ptr [rbp + r11]
mov	qword ptr [rsi + r11], rdi
cmp	ecx, r8d
jb	0x14009e057
jb	0x14009e057
jmp	0x14009df94
jmp	0x14009df94
mov	rcx, qword ptr [r8]
lea	rbx, [rdx + 0x18]
and	rbx, 0xfffffffffffffff8
mov	qword ptr [rdx + 0x10], rcx
mov	ecx, r11d
mov	r9, qword ptr [r8 + rcx - 8]
mov	qword ptr [rsi + rcx - 8], r9
sub	rsi, rbx
lea	ecx, [r11 + rsi]
sub	r8, rsi
and	ecx, 0xfffffff8
cmp	ecx, 8
jb	0x14009de73
jb	0x14009de73
and	ecx, 0xfffffff8
xor	r9d, r9d
mov	r10d, r9d
add	r9d, 8
mov	r11, qword ptr [r8 + r10]
mov	qword ptr [rbx + r10], r11
cmp	r9d, ecx
jb	0x14009e0a8
jb	0x14009e0a8
jmp	0x14009de73
jmp	0x14009de73
mov	ebp, ebx
xor	r8d, r8d
and	ebp, 0xfffffff8
mov	esi, r8d
add	r8d, 8
mov	rdi, qword ptr [rcx + rsi]
mov	qword ptr [r9 + rsi], rdi
cmp	r8d, ebp
jb	0x14009e0c9
jb	0x14009e0c9
lea	rdi, [r9 + r8]
add	r8, rcx
jmp	0x14009df38
jmp	0x14009df38
mov	rcx, qword ptr [rsp]
lea	r11, [r10 + 8]
and	r11, 0xfffffffffffffff8
mov	qword ptr [rax + 0x10], rcx
mov	ecx, ebx
mov	r8, qword ptr [r9 + rcx - 8]
mov	qword ptr [r10 + rcx - 8], r8
sub	r10, r11
add	ebx, r10d
sub	r9, r10
and	ebx, 0xfffffff8
cmp	ebx, 8
jb	0x14009dfba
jb	0x14009dfba
and	ebx, 0xfffffff8
xor	ecx, ecx
mov	r8d, ecx
add	ecx, 8
mov	r10, qword ptr [r9 + r8]
mov	qword ptr [r11 + r8], r10
cmp	ecx, ebx
jb	0x14009e11f
jb	0x14009e11f
jmp	0x14009dfba
jmp	0x14009dfba
mov	r8d, dword ptr [rax + 0x10]
mov	r11d, r11d
mov	dword ptr [rcx], r8d
mov	r8d, dword ptr [r10 + r11 - 4]
mov	dword ptr [rcx + r11 - 4], r8d
jmp	0x14009df94
jmp	0x14009df94
mov	ecx, dword ptr [rsp]
mov	ebx, ebx
mov	dword ptr [rax + 0x10], ecx
mov	ecx, dword ptr [r9 + rbx - 4]
mov	dword ptr [r10 + rbx - 4], ecx
jmp	0x14009dfba
jmp	0x14009dfba
mov	r10d, dword ptr [rdx + 0x10]
mov	r9d, r9d
mov	dword ptr [r8], r10d
mov	ecx, dword ptr [rcx + r9 - 4]
mov	dword ptr [r8 + r9 - 4], ecx
mov	rcx, qword ptr [rdx]
mov	rbx, qword ptr [rdx + 8]
jmp	0x14009decf
jmp	0x14009decf
mov	ecx, dword ptr [r8]
mov	dword ptr [rdx + 0x10], ecx
mov	ecx, r11d
mov	r8d, dword ptr [r8 + rcx - 4]
mov	dword ptr [rsi + rcx - 4], r8d
mov	r8, qword ptr [rax]
mov	r9, qword ptr [rax + 8]
jmp	0x14009de7a
jmp	0x14009de7a
mov	r9d, r9d
movzx	ecx, word ptr [rcx + r9 - 2]
mov	word ptr [r8 + r9 - 2], cx
mov	rcx, qword ptr [rdx]
mov	rbx, qword ptr [rdx + 8]
jmp	0x14009decf
jmp	0x14009decf
mov	ecx, r11d
movzx	r8d, word ptr [r8 + rcx - 2]
mov	word ptr [rsi + rcx - 2], r8w
mov	r8, qword ptr [rax]
mov	r9, qword ptr [rax + 8]
jmp	0x14009de7a
jmp	0x14009de7a
mov	r11d, r11d
movzx	r8d, word ptr [r10 + r11 - 2]
mov	word ptr [rcx + r11 - 2], r8w
jmp	0x14009df94
jmp	0x14009df94
mov	ebx, ebx
movzx	ecx, word ptr [r9 + rbx - 2]
mov	word ptr [r10 + rbx - 2], cx
jmp	0x14009dfba
jmp	0x14009dfba
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	qword ptr [rcx + 8], 0
mov	byte ptr [rax], 0
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rsi, rdx
mov	rcx, rdx
mov	rdx, qword ptr [rbx + 8]
mov	rax, qword ptr [rbx]
lea	r9, [rdx - 1]
sub	rsi, rax
mov	r8, r9
sub	r8, rsi
je	0x14009e270
je	0x14009e270
lea	rdx, [rax + rsi + 1]
cmp	r8, 1
je	0x14009e290
je	0x14009e290
call	0x1400159a0
call	0x1400159a0
mov	rax, qword ptr [rbx + 8]
lea	r9, [rax - 1]
mov	rax, qword ptr [rbx]
mov	qword ptr [rbx + 8], r9
mov	byte ptr [rax + r9], 0
mov	rax, qword ptr [rbx]
add	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
mov	rax, qword ptr [rbx + 8]
lea	r9, [rax - 1]
mov	rax, qword ptr [rbx]
jmp	0x14009e270
jmp	0x14009e270
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rcx, qword ptr [rcx]
mov	rsi, rdx
sub	rsi, rcx
add	rcx, qword ptr [rbx + 8]
cmp	r8, rcx
je	0x14009e2f0
je	0x14009e2f0
sub	r8, rdx
mov	rcx, rbx
mov	rdx, rsi
call	0x14009f890
call	0x14009f890
mov	rax, qword ptr [rbx]
add	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rdx], 0
mov	rax, qword ptr [rbx]
add	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	r8d, 1
mov	rbx, rdx
sub	rbx, qword ptr [rcx]
mov	rsi, rcx
mov	rdx, rbx
call	0x14009f890
call	0x14009f890
mov	rax, qword ptr [rsi]
add	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rcx, qword ptr [rcx]
mov	rsi, rdx
sub	rsi, rcx
add	rcx, qword ptr [rbx + 8]
cmp	r8, rcx
je	0x14009e380
je	0x14009e380
sub	r8, rdx
mov	rcx, rbx
mov	rdx, rsi
call	0x14009f890
call	0x14009f890
mov	rax, qword ptr [rbx]
add	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rdx], 0
mov	rax, qword ptr [rbx]
add	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r9, qword ptr [rcx + 8]
mov	rax, rcx
cmp	r9, rdx
jb	0x14009e3f0
jb	0x14009e3f0
cmp	r8, -1
je	0x14009e3e0
je	0x14009e3e0
test	r8, r8
jne	0x14009e3c0
jne	0x14009e3c0
add	rsp, 0x28
ret	
ret	
sub	r9, rdx
mov	qword ptr [rsp + 0x30], rcx
cmp	r9, r8
cmovbe	r8, r9
call	0x14009f890
call	0x14009f890
mov	rax, qword ptr [rsp + 0x30]
add	rsp, 0x28
ret	
ret	
nop	
mov	qword ptr [rcx + 8], rdx
mov	rcx, qword ptr [rcx]
mov	byte ptr [rcx + rdx], 0
add	rsp, 0x28
ret	
ret	
mov	r8, rdx
lea	rcx, [rip + 0x1c02e]
lea	rdx, [rip + 0x1c0b8]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rbx, rcx
mov	rcx, rdx
mov	rsi, rdx
call	0x140015a08
call	0x140015a08
mov	rdx, qword ptr [rbx + 8]
mov	r8, rax
movabs	rax, 0x3fffffffffffffff
sub	rax, rdx
cmp	rax, r8
jb	0x14009e4ca
jb	0x14009e4ca
mov	rcx, qword ptr [rbx]
lea	rax, [rbx + 0x10]
lea	rdi, [rdx + r8]
cmp	rcx, rax
je	0x14009e4b0
je	0x14009e4b0
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rdi
jb	0x14009e498
jb	0x14009e498
test	r8, r8
je	0x14009e480
je	0x14009e480
add	rcx, rdx
cmp	r8, 1
je	0x14009e4c0
je	0x14009e4c0
mov	rdx, rsi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
mov	rax, rbx
mov	qword ptr [rbx + 8], rdi
mov	byte ptr [rcx + rdi], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
mov	qword ptr [rsp + 0x20], r8
mov	rcx, rbx
mov	r9, rsi
xor	r8d, r8d
call	0x14009faf0
call	0x14009faf0
mov	rcx, qword ptr [rbx]
jmp	0x14009e480
jmp	0x14009e480
mov	eax, 0xf
jmp	0x14009e462
jmp	0x14009e462
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rsi]
mov	byte ptr [rcx], al
mov	rcx, qword ptr [rbx]
jmp	0x14009e480
jmp	0x14009e480
lea	rcx, [rip + 0x1bfd3]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
movabs	rax, 0x3fffffffffffffff
mov	r10, qword ptr [rcx + 8]
sub	rax, r10
mov	rbx, rcx
cmp	rax, r8
jb	0x14009e57a
jb	0x14009e57a
mov	rcx, qword ptr [rcx]
lea	rax, [rbx + 0x10]
lea	rsi, [r8 + r10]
cmp	rcx, rax
je	0x14009e560
je	0x14009e560
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rsi
jb	0x14009e540
jb	0x14009e540
test	r8, r8
je	0x14009e52e
je	0x14009e52e
add	rcx, r10
cmp	r8, 1
je	0x14009e570
je	0x14009e570
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
mov	rax, rbx
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	qword ptr [rsp + 0x20], r8
mov	r9, rdx
mov	rcx, rbx
xor	r8d, r8d
mov	rdx, r10
call	0x14009faf0
call	0x14009faf0
mov	rcx, qword ptr [rbx]
jmp	0x14009e52e
jmp	0x14009e52e
nop	dword ptr [rax + rax]
mov	eax, 0xf
jmp	0x14009e513
jmp	0x14009e513
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
mov	rcx, qword ptr [rbx]
jmp	0x14009e52e
jmp	0x14009e52e
lea	rcx, [rip + 0x1bf23]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
movabs	rax, 0x3fffffffffffffff
mov	r8, qword ptr [rdx + 8]
mov	r9, qword ptr [rdx]
mov	rdx, qword ptr [rcx + 8]
sub	rax, rdx
mov	rbx, rcx
cmp	rax, r8
jb	0x14009e62b
jb	0x14009e62b
mov	rcx, qword ptr [rcx]
lea	rax, [rbx + 0x10]
lea	rsi, [r8 + rdx]
cmp	rcx, rax
je	0x14009e618
je	0x14009e618
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rsi
jb	0x14009e600
jb	0x14009e600
test	r8, r8
je	0x14009e5e8
je	0x14009e5e8
add	rcx, rdx
cmp	r8, 1
je	0x14009e620
je	0x14009e620
mov	rdx, r9
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
mov	rax, rbx
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
mov	qword ptr [rsp + 0x20], r8
mov	rcx, rbx
xor	r8d, r8d
call	0x14009faf0
call	0x14009faf0
mov	rcx, qword ptr [rbx]
jmp	0x14009e5e8
jmp	0x14009e5e8
nop	dword ptr [rax]
mov	eax, 0xf
jmp	0x14009e5ca
jmp	0x14009e5ca
nop	
movzx	eax, byte ptr [r9]
mov	byte ptr [rcx], al
mov	rcx, qword ptr [rbx]
jmp	0x14009e5e8
jmp	0x14009e5e8
lea	rcx, [rip + 0x1be72]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, rcx
mov	rcx, qword ptr [rdx + 8]
mov	rax, rcx
sub	rax, r8
cmp	rax, r9
cmova	rax, r9
mov	r9, qword ptr [rdx]
cmp	rcx, r8
jb	0x14009e6fb
jb	0x14009e6fb
mov	rdx, qword ptr [rbx + 8]
add	r9, r8
movabs	rcx, 0x3fffffffffffffff
sub	rcx, rdx
cmp	rcx, rax
jb	0x14009e711
jb	0x14009e711
mov	rcx, qword ptr [rbx]
lea	r8, [rbx + 0x10]
lea	rsi, [rax + rdx]
cmp	rcx, r8
je	0x14009e6e8
je	0x14009e6e8
mov	r8, qword ptr [rbx + 0x10]
cmp	r8, rsi
jb	0x14009e6d0
jb	0x14009e6d0
test	rax, rax
je	0x14009e6b8
je	0x14009e6b8
add	rcx, rdx
cmp	rax, 1
je	0x14009e6f0
je	0x14009e6f0
mov	r8, rax
mov	rdx, r9
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
mov	rax, rbx
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
mov	qword ptr [rsp + 0x20], rax
mov	rcx, rbx
xor	r8d, r8d
call	0x14009faf0
call	0x14009faf0
mov	rcx, qword ptr [rbx]
jmp	0x14009e6b8
jmp	0x14009e6b8
nop	dword ptr [rax]
mov	r8d, 0xf
jmp	0x14009e697
jmp	0x14009e697
movzx	eax, byte ptr [r9]
mov	byte ptr [rcx], al
mov	rcx, qword ptr [rbx]
jmp	0x14009e6b8
jmp	0x14009e6b8
mov	r9, rcx
lea	rdx, [rip + 0x1bd9f]
lea	rcx, [rip + 0x1bd1c]
call	0x1400aed20
call	0x1400aed20
lea	rcx, [rip + 0x1bd8c]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
movabs	rax, 0x3fffffffffffffff
mov	r9, qword ptr [rdx]
mov	r8, qword ptr [rdx + 8]
mov	rdx, qword ptr [rcx + 8]
sub	rax, rdx
mov	rbx, rcx
cmp	rax, r8
jb	0x14009e7bb
jb	0x14009e7bb
mov	rcx, qword ptr [rcx]
lea	rax, [rbx + 0x10]
lea	rsi, [r8 + rdx]
cmp	rcx, rax
je	0x14009e7a8
je	0x14009e7a8
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rsi
jb	0x14009e790
jb	0x14009e790
test	r8, r8
je	0x14009e778
je	0x14009e778
add	rcx, rdx
cmp	r8, 1
je	0x14009e7b0
je	0x14009e7b0
mov	rdx, r9
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
mov	rax, rbx
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
mov	qword ptr [rsp + 0x20], r8
mov	rcx, rbx
xor	r8d, r8d
call	0x14009faf0
call	0x14009faf0
mov	rcx, qword ptr [rbx]
jmp	0x14009e778
jmp	0x14009e778
nop	dword ptr [rax]
mov	eax, 0xf
jmp	0x14009e75a
jmp	0x14009e75a
nop	
movzx	eax, byte ptr [r9]
mov	byte ptr [rcx], al
mov	rcx, qword ptr [rbx]
jmp	0x14009e778
jmp	0x14009e778
lea	rcx, [rip + 0x1bce2]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
movsx	r8d, r8b
mov	r9, rdx
mov	rdx, qword ptr [rcx + 8]
mov	dword ptr [rsp + 0x20], r8d
xor	r8d, r8d
call	0x14009d910
call	0x14009d910
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	r8, qword ptr [rdx + 8]
mov	rsi, rcx
mov	rcx, qword ptr [rcx]
mov	rbx, rdx
mov	rdx, qword ptr [rdx]
lea	rax, [rsi + 0x10]
cmp	rcx, rax
lea	rax, [rbx + 0x10]
je	0x14009e860
je	0x14009e860
cmp	rax, rdx
je	0x14009e880
je	0x14009e880
mov	qword ptr [rsi], rdx
mov	r9, qword ptr [rsi + 0x10]
mov	qword ptr [rsi + 8], r8
mov	rdx, qword ptr [rbx + 0x10]
mov	qword ptr [rsi + 0x10], rdx
test	rcx, rcx
je	0x14009e8b0
je	0x14009e8b0
mov	qword ptr [rbx], rcx
mov	qword ptr [rbx + 0x10], r9
mov	rax, rsi
mov	qword ptr [rbx + 8], 0
mov	byte ptr [rcx], 0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
cmp	rax, rdx
je	0x14009e880
je	0x14009e880
mov	qword ptr [rsi], rdx
mov	rcx, rax
mov	qword ptr [rsi + 8], r8
mov	rdx, qword ptr [rbx + 0x10]
mov	qword ptr [rsi + 0x10], rdx
mov	qword ptr [rbx], rcx
jmp	0x14009e847
jmp	0x14009e847
nop	dword ptr [rax]
cmp	rsi, rbx
je	0x14009e8d0
je	0x14009e8d0
test	r8, r8
je	0x14009e89c
je	0x14009e89c
cmp	r8, 1
je	0x14009e8b8
je	0x14009e8b8
call	0x140015998
call	0x140015998
mov	r8, qword ptr [rbx + 8]
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], r8
mov	byte ptr [rcx + r8], 0
mov	rcx, qword ptr [rbx]
jmp	0x14009e847
jmp	0x14009e847
nop	word ptr [rax + rax]
mov	rcx, rax
jmp	0x14009e877
jmp	0x14009e877
nop	dword ptr [rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
mov	r8, qword ptr [rbx + 8]
mov	rcx, qword ptr [rsi]
jmp	0x14009e89c
jmp	0x14009e89c
nop	word ptr cs:[rax + rax]
mov	rcx, rdx
jmp	0x14009e847
jmp	0x14009e847
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, rcx
mov	rcx, rdx
mov	rsi, rdx
call	0x140015a08
call	0x140015a08
mov	r9, rsi
xor	edx, edx
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], rax
mov	r8, qword ptr [rbx + 8]
call	0x14009cf70
call	0x14009cf70
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	qword ptr [rsp + 0x20], r8
mov	r8, qword ptr [rcx + 8]
mov	r9, rdx
xor	edx, edx
call	0x14009cf70
call	0x14009cf70
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x14009f9b0
call	0x14009f9b0
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	r10, qword ptr [rdx + 8]
mov	rdx, qword ptr [rdx]
mov	rax, r10
sub	rax, r8
cmp	rax, r9
cmova	rax, r9
cmp	r10, r8
jb	0x14009e996
jb	0x14009e996
mov	qword ptr [rsp + 0x20], rax
lea	r9, [rdx + r8]
mov	r8, qword ptr [rcx + 8]
xor	edx, edx
call	0x14009cf70
call	0x14009cf70
add	rsp, 0x38
ret	
ret	
mov	r9, r10
lea	rdx, [rip + 0x1bb8e]
lea	rcx, [rip + 0x1ba81]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 8]
mov	r8, qword ptr [rcx + 8]
mov	qword ptr [rsp + 0x20], rax
mov	r9, qword ptr [rdx]
xor	edx, edx
call	0x14009cf70
call	0x14009cf70
add	rsp, 0x38
ret	
ret	
sub	rsp, 0x38
movsx	r8d, r8b
mov	r9, rdx
xor	edx, edx
mov	dword ptr [rsp + 0x20], r8d
mov	r8, qword ptr [rcx + 8]
call	0x14009d910
call	0x14009d910
add	rsp, 0x38
ret	
ret	
push	rsi
push	rbx
sub	rsp, 0x38
mov	r9, qword ptr [r8]
mov	rsi, rcx
mov	rbx, rdx
mov	rcx, qword ptr [r8 + 8]
mov	rax, qword ptr [rsi + 8]
sub	rbx, qword ptr [rsi]
cmp	rax, rbx
jb	0x14009ea2f
jb	0x14009ea2f
mov	qword ptr [rsp + 0x20], rcx
xor	r8d, r8d
mov	rdx, rbx
mov	rcx, rsi
call	0x14009cf70
call	0x14009cf70
mov	rax, qword ptr [rsi]
add	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	r9, rax
mov	r8, rbx
lea	rdx, [rip + 0x1bac3]
lea	rcx, [rip + 0x1b9e5]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	r9d, 1
movsx	r8d, r8b
mov	rbx, rdx
sub	rbx, qword ptr [rcx]
mov	rsi, rcx
mov	dword ptr [rsp + 0x20], r8d
mov	rdx, rbx
xor	r8d, r8d
call	0x14009d910
call	0x14009d910
mov	rax, qword ptr [rsi]
add	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
movsx	r9d, r9b
mov	rbx, rdx
sub	rbx, qword ptr [rcx]
mov	rsi, rcx
mov	dword ptr [rsp + 0x20], r9d
mov	rdx, rbx
mov	r9, r8
xor	r8d, r8d
call	0x14009d910
call	0x14009d910
mov	rax, qword ptr [rsi]
add	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rcx + 8]
sub	rdx, qword ptr [rcx]
mov	r9, qword ptr [r8]
mov	r8, qword ptr [r8 + 8]
cmp	rax, rdx
jb	0x14009eafa
jb	0x14009eafa
mov	qword ptr [rsp + 0x20], r8
xor	r8d, r8d
call	0x14009cf70
call	0x14009cf70
nop	
add	rsp, 0x38
ret	
ret	
mov	r8, rdx
mov	r9, rax
lea	rdx, [rip + 0x1b9f8]
lea	rcx, [rip + 0x1b91a]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	r9d, 1
movsx	r8d, r8b
mov	rbx, rdx
sub	rbx, qword ptr [rcx]
mov	rsi, rcx
mov	dword ptr [rsp + 0x20], r8d
mov	rdx, rbx
xor	r8d, r8d
call	0x14009d910
call	0x14009d910
mov	rax, qword ptr [rsi]
add	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
sub	rdx, qword ptr [rcx]
movsx	r9d, r9b
mov	dword ptr [rsp + 0x20], r9d
mov	r9, r8
xor	r8d, r8d
call	0x14009d910
call	0x14009d910
nop	
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rsi, rcx
mov	rcx, r8
mov	rbx, rdx
mov	rdi, r8
call	0x140015a08
call	0x140015a08
mov	r9, qword ptr [rsi + 8]
cmp	r9, rbx
jb	0x14009ebcf
jb	0x14009ebcf
mov	qword ptr [rsp + 0x20], rax
mov	r9, rdi
xor	r8d, r8d
mov	rdx, rbx
mov	rcx, rsi
call	0x14009cf70
call	0x14009cf70
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	r8, rbx
lea	rdx, [rip + 0x1b926]
lea	rcx, [rip + 0x1b848]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rcx + 8]
cmp	rax, rdx
jb	0x14009ec12
jb	0x14009ec12
mov	qword ptr [rsp + 0x20], r9
mov	r9, r8
xor	r8d, r8d
call	0x14009cf70
call	0x14009cf70
add	rsp, 0x38
ret	
ret	
mov	r8, rdx
mov	r9, rax
lea	rdx, [rip + 0x1b8e0]
lea	rcx, [rip + 0x1b802]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rcx + 8]
mov	r10, qword ptr [r8 + 8]
mov	r9, qword ptr [r8]
cmp	rax, rdx
jb	0x14009ec56
jb	0x14009ec56
mov	qword ptr [rsp + 0x20], r10
xor	r8d, r8d
call	0x14009cf70
call	0x14009cf70
add	rsp, 0x38
ret	
ret	
mov	r8, rdx
mov	r9, rax
lea	rdx, [rip + 0x1b89c]
lea	rcx, [rip + 0x1b7be]
call	0x1400aed20
call	0x1400aed20
nop	
sub	rsp, 0x28
mov	r11, qword ptr [r8 + 8]
mov	r10, rcx
mov	rcx, r11
mov	rax, r9
sub	rcx, r9
mov	r9, qword ptr [rsp + 0x50]
cmp	rcx, r9
cmova	rcx, r9
mov	r9, qword ptr [r8]
cmp	r11, rax
jb	0x14009ecb8
jb	0x14009ecb8
add	r9, rax
mov	rax, qword ptr [r10 + 8]
cmp	rax, rdx
jb	0x14009ecd1
jb	0x14009ecd1
mov	qword ptr [rsp + 0x50], rcx
xor	r8d, r8d
mov	rcx, r10
add	rsp, 0x28
jmp	0x14009cf70
jmp	0x14009cf70
mov	r9, r11
mov	r8, rax
lea	rdx, [rip + 0x1b825]
lea	rcx, [rip + 0x1b75c]
call	0x1400aed20
call	0x1400aed20
mov	r8, rdx
mov	r9, rax
lea	rdx, [rip + 0x1b821]
lea	rcx, [rip + 0x1b743]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rcx + 8]
movsx	r9d, r9b
cmp	rax, rdx
jb	0x14009ed16
jb	0x14009ed16
mov	dword ptr [rsp + 0x20], r9d
mov	r9, r8
xor	r8d, r8d
call	0x14009d910
call	0x14009d910
add	rsp, 0x38
ret	
ret	
mov	r8, rdx
mov	r9, rax
lea	rdx, [rip + 0x1b7c7]
lea	rcx, [rip + 0x1b6fe]
call	0x1400aed20
call	0x1400aed20
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rcx + 8]
sub	rdx, qword ptr [rcx]
sub	r9, r8
cmp	rax, rdx
jb	0x14009ed59
jb	0x14009ed59
mov	qword ptr [rsp + 0x20], r9
mov	r9, r8
xor	r8d, r8d
call	0x14009cf70
call	0x14009cf70
nop	
add	rsp, 0x38
ret	
ret	
mov	r8, rdx
mov	r9, rax
lea	rdx, [rip + 0x1c34a]
lea	rcx, [rip + 0x1c35b]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rdx]
add	rcx, qword ptr [rdx + 8]
mov	qword ptr [rax], rcx
ret	
ret	
nop	
nop	
sub	rsp, 0x38
mov	r9, rdx
mov	rdx, qword ptr [rcx + 8]
cmp	rdx, r9
jb	0x14009edc0
jb	0x14009edc0
cmp	r9, rdx
jae	0x14009edb1
jae	0x14009edb1
mov	rax, qword ptr [rcx]
mov	qword ptr [rcx + 8], r9
mov	byte ptr [rax + r9], 0
add	rsp, 0x38
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	dword ptr [rsp + 0x20], 0
sub	r9, rdx
xor	r8d, r8d
call	0x14009d910
call	0x14009d910
nop	
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	r9, rdx
mov	rdx, qword ptr [rcx + 8]
cmp	rdx, r9
jb	0x14009ee10
jb	0x14009ee10
cmp	r9, rdx
jae	0x14009ee01
jae	0x14009ee01
mov	rax, qword ptr [rcx]
mov	qword ptr [rcx + 8], r9
mov	byte ptr [rax + r9], 0
add	rsp, 0x38
ret	
ret	
nop	word ptr cs:[rax + rax]
movsx	r8d, r8b
sub	r9, rdx
mov	dword ptr [rsp + 0x20], r8d
xor	r8d, r8d
call	0x14009d910
call	0x14009d910
nop	
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
cmp	r8, 1
je	0x14009ee58
je	0x14009ee58
test	r8, r8
jne	0x14009ee50
jne	0x14009ee50
ret	
ret	
nop	dword ptr [rax]
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
ret	
ret	
nop	
nop	
cmp	r8, 1
je	0x14009ee78
je	0x14009ee78
test	r8, r8
jne	0x14009ee70
jne	0x14009ee70
ret	
ret	
nop	dword ptr [rax]
jmp	0x1400159a0
jmp	0x1400159a0
nop	dword ptr [rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
ret	
ret	
nop	
nop	
sub	rsp, 0x28
mov	r11, qword ptr [rcx + 8]
mov	r10, qword ptr [rsp + 0x50]
mov	rax, rdx
sub	rdx, qword ptr [rcx]
sub	r10, r9
sub	r8, rax
mov	rax, r11
sub	rax, rdx
cmp	r8, rax
cmova	r8, rax
cmp	r11, rdx
jb	0x14009eeb9
jb	0x14009eeb9
mov	qword ptr [rsp + 0x50], r10
add	rsp, 0x28
jmp	0x14009cf70
jmp	0x14009cf70
mov	r8, rdx
mov	r9, r11
lea	rdx, [rip + 0x1b639]
lea	rcx, [rip + 0x1b55b]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r11, qword ptr [rcx + 8]
mov	r10, qword ptr [rsp + 0x50]
mov	rax, rdx
sub	rdx, qword ptr [rcx]
sub	r10, r9
sub	r8, rax
mov	rax, r11
sub	rax, rdx
cmp	r8, rax
cmova	r8, rax
cmp	r11, rdx
jb	0x14009ef19
jb	0x14009ef19
mov	qword ptr [rsp + 0x50], r10
add	rsp, 0x28
jmp	0x14009cf70
jmp	0x14009cf70
mov	r8, rdx
mov	r9, r11
lea	rdx, [rip + 0x1b5d9]
lea	rcx, [rip + 0x1b4fb]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	r10, qword ptr [rcx + 8]
mov	r11, qword ptr [r9 + 8]
mov	r9, qword ptr [r9]
mov	rax, rdx
sub	rdx, qword ptr [rcx]
sub	r8, rax
mov	rax, r10
sub	rax, rdx
cmp	r8, rax
cmova	r8, rax
cmp	r10, rdx
jb	0x14009ef79
jb	0x14009ef79
mov	qword ptr [rsp + 0x20], r11
call	0x14009cf70
call	0x14009cf70
add	rsp, 0x38
ret	
ret	
mov	r8, rdx
mov	r9, r10
lea	rdx, [rip + 0x1b579]
lea	rcx, [rip + 0x1b49b]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, rcx
mov	rcx, r9
mov	rdi, rdx
mov	rbx, r8
mov	rbp, r9
sub	rbx, rdi
call	0x140015a08
call	0x140015a08
mov	r9, qword ptr [rsi + 8]
mov	rdx, rdi
sub	rdx, qword ptr [rsi]
mov	r8, rbx
mov	rcx, r9
sub	rcx, rdx
cmp	rbx, rcx
cmova	r8, rcx
cmp	r9, rdx
jb	0x14009eff7
jb	0x14009eff7
mov	qword ptr [rsp + 0x20], rax
mov	r9, rbp
mov	rcx, rsi
call	0x14009cf70
call	0x14009cf70
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	r8, rdx
lea	rcx, [rip + 0x1b427]
lea	rdx, [rip + 0x1b4f7]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
sub	rsp, 0x28
mov	r11, qword ptr [rcx + 8]
mov	r10, qword ptr [rsp + 0x50]
mov	rax, rdx
sub	rdx, qword ptr [rcx]
sub	r10, r9
sub	r8, rax
mov	rax, r11
sub	rax, rdx
cmp	r8, rax
cmova	r8, rax
cmp	r11, rdx
jb	0x14009f049
jb	0x14009f049
mov	qword ptr [rsp + 0x50], r10
add	rsp, 0x28
jmp	0x14009cf70
jmp	0x14009cf70
mov	r8, rdx
mov	r9, r11
lea	rdx, [rip + 0x1b4a9]
lea	rcx, [rip + 0x1b3cb]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r10, qword ptr [rcx + 8]
mov	r11, qword ptr [rsp + 0x50]
mov	rax, rdx
sub	rdx, qword ptr [rcx]
sub	r8, rax
mov	rax, r10
sub	rax, rdx
cmp	r8, rax
cmova	r8, rax
cmp	r10, rdx
jb	0x14009f0a6
jb	0x14009f0a6
mov	qword ptr [rsp + 0x50], r11
add	rsp, 0x28
jmp	0x14009cf70
jmp	0x14009cf70
mov	r8, rdx
mov	r9, r10
lea	rdx, [rip + 0x1b44c]
lea	rcx, [rip + 0x1b36e]
call	0x1400aed20
call	0x1400aed20
nop	
sub	rsp, 0x28
mov	r11, qword ptr [rcx + 8]
mov	r10, qword ptr [rsp + 0x50]
mov	rax, rdx
sub	rdx, qword ptr [rcx]
sub	r10, r9
sub	r8, rax
mov	rax, r11
sub	rax, rdx
cmp	r8, rax
cmova	r8, rax
cmp	r11, rdx
jb	0x14009f0f9
jb	0x14009f0f9
mov	qword ptr [rsp + 0x50], r10
add	rsp, 0x28
jmp	0x14009cf70
jmp	0x14009cf70
mov	r8, rdx
mov	r9, r11
lea	rdx, [rip + 0x1b3f9]
lea	rcx, [rip + 0x1b31b]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	r10, qword ptr [rcx + 8]
mov	rax, rdx
mov	rdx, r9
mov	r9, qword ptr [r9]
sub	r8, rax
mov	r11, qword ptr [rdx + 8]
mov	rdx, rax
mov	rax, r10
sub	rdx, qword ptr [rcx]
sub	rax, rdx
cmp	r8, rax
cmova	r8, rax
cmp	r10, rdx
jb	0x14009f15f
jb	0x14009f15f
mov	qword ptr [rsp + 0x20], r11
call	0x14009cf70
call	0x14009cf70
add	rsp, 0x38
ret	
ret	
mov	r8, rdx
mov	r9, r10
lea	rdx, [rip + 0x1b393]
lea	rcx, [rip + 0x1b2b5]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movsx	r10d, byte ptr [rsp + 0x28]
mov	rax, rdx
sub	rax, qword ptr [rcx]
sub	r8, rdx
mov	dword ptr [rsp + 0x28], r10d
mov	rdx, rax
jmp	0x14009d910
jmp	0x14009d910
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r11, qword ptr [rcx + 8]
mov	r10, qword ptr [rsp + 0x50]
mov	rax, rdx
sub	rdx, qword ptr [rcx]
sub	r10, r9
sub	r8, rax
mov	rax, r11
sub	rax, rdx
cmp	r8, rax
cmova	r8, rax
cmp	r11, rdx
jb	0x14009f1d9
jb	0x14009f1d9
mov	qword ptr [rsp + 0x50], r10
add	rsp, 0x28
jmp	0x14009cf70
jmp	0x14009cf70
mov	r8, rdx
mov	r9, r11
lea	rdx, [rip + 0x1beca]
lea	rcx, [rip + 0x1bedb]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, rcx
mov	rcx, r9
mov	rdi, rdx
mov	rbx, r8
mov	rbp, r9
sub	rbx, rdi
call	0x140015a08
call	0x140015a08
mov	r9, qword ptr [rsi + 8]
mov	rdx, rdi
sub	rdx, qword ptr [rsi]
mov	r8, rbx
mov	rcx, r9
sub	rcx, rdx
cmp	rbx, rcx
cmova	r8, rcx
cmp	r9, rdx
jb	0x14009f257
jb	0x14009f257
mov	qword ptr [rsp + 0x20], rax
mov	r9, rbp
mov	rcx, rsi
call	0x14009cf70
call	0x14009cf70
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	r8, rdx
lea	rcx, [rip + 0x1be67]
lea	rdx, [rip + 0x1be48]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
sub	rsp, 0x28
mov	r11, qword ptr [rcx + 8]
mov	r10, qword ptr [rsp + 0x50]
mov	rax, rdx
sub	rdx, qword ptr [rcx]
sub	r10, r9
sub	r8, rax
mov	rax, r11
sub	rax, rdx
cmp	r8, rax
cmova	r8, rax
cmp	r11, rdx
jb	0x14009f2a9
jb	0x14009f2a9
mov	qword ptr [rsp + 0x50], r10
add	rsp, 0x28
jmp	0x14009cf70
jmp	0x14009cf70
mov	r8, rdx
mov	r9, r11
lea	rdx, [rip + 0x1bdfa]
lea	rcx, [rip + 0x1be0b]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r10, qword ptr [rcx + 8]
mov	r11, qword ptr [rsp + 0x50]
mov	rax, rdx
sub	rdx, qword ptr [rcx]
sub	r8, rax
mov	rax, r10
sub	rax, rdx
cmp	r8, rax
cmova	r8, rax
cmp	r10, rdx
jb	0x14009f306
jb	0x14009f306
mov	qword ptr [rsp + 0x50], r11
add	rsp, 0x28
jmp	0x14009cf70
jmp	0x14009cf70
mov	r8, rdx
mov	r9, r10
lea	rdx, [rip + 0x1bd9d]
lea	rcx, [rip + 0x1bdae]
call	0x1400aed20
call	0x1400aed20
nop	
sub	rsp, 0x38
mov	r10, qword ptr [rcx + 8]
mov	r11, qword ptr [r9 + 8]
mov	r9, qword ptr [r9]
mov	rax, rdx
sub	rdx, qword ptr [rcx]
sub	r8, rax
mov	rax, r10
sub	rax, rdx
cmp	r8, rax
cmova	r8, rax
cmp	r10, rdx
jb	0x14009f359
jb	0x14009f359
mov	qword ptr [rsp + 0x20], r11
call	0x14009cf70
call	0x14009cf70
add	rsp, 0x38
ret	
ret	
mov	r8, rdx
mov	r9, r10
lea	rdx, [rip + 0x1bd4a]
lea	rcx, [rip + 0x1bd5b]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r11, qword ptr [rcx + 8]
mov	r10, qword ptr [rsp + 0x50]
mov	rax, rdx
sub	rdx, qword ptr [rcx]
sub	r10, r9
sub	r8, rax
mov	rax, r11
sub	rax, rdx
cmp	r8, rax
cmova	r8, rax
cmp	r11, rdx
jb	0x14009f3b9
jb	0x14009f3b9
mov	qword ptr [rsp + 0x50], r10
add	rsp, 0x28
jmp	0x14009cf70
jmp	0x14009cf70
mov	r8, rdx
mov	r9, r11
lea	rdx, [rip + 0x1bcea]
lea	rcx, [rip + 0x1bcfb]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r11, qword ptr [rcx + 8]
mov	r10, qword ptr [rsp + 0x50]
mov	rax, rdx
sub	rdx, qword ptr [rcx]
sub	r10, r9
sub	r8, rax
mov	rax, r11
sub	rax, rdx
cmp	r8, rax
cmova	r8, rax
cmp	r11, rdx
jb	0x14009f419
jb	0x14009f419
mov	qword ptr [rsp + 0x50], r10
add	rsp, 0x28
jmp	0x14009cf70
jmp	0x14009cf70
mov	r8, rdx
mov	r9, r11
lea	rdx, [rip + 0x1bc8a]
lea	rcx, [rip + 0x1bc9b]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
movsx	r10d, byte ptr [rsp + 0x28]
mov	rax, rdx
sub	rax, qword ptr [rcx]
sub	r8, rdx
mov	dword ptr [rsp + 0x28], r10d
mov	rdx, rax
jmp	0x14009d910
jmp	0x14009d910
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rdi, rcx
mov	rcx, r9
mov	rsi, r8
mov	rbx, rdx
mov	rbp, r9
call	0x140015a08
call	0x140015a08
mov	r9, qword ptr [rdi + 8]
mov	r8, r9
sub	r8, rbx
cmp	r8, rsi
cmova	r8, rsi
cmp	r9, rbx
jb	0x14009f4ae
jb	0x14009f4ae
mov	qword ptr [rsp + 0x20], rax
mov	r9, rbp
mov	rdx, rbx
mov	rcx, rdi
call	0x14009cf70
call	0x14009cf70
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	r8, rbx
lea	rdx, [rip + 0x1b047]
lea	rcx, [rip + 0x1af69]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r10, qword ptr [rcx + 8]
mov	r11, qword ptr [rsp + 0x50]
mov	rax, r10
sub	rax, rdx
cmp	rax, r8
cmovbe	r8, rax
cmp	r10, rdx
jb	0x14009f4fd
jb	0x14009f4fd
mov	qword ptr [rsp + 0x50], r11
add	rsp, 0x28
jmp	0x14009cf70
jmp	0x14009cf70
mov	r8, rdx
mov	r9, r10
lea	rdx, [rip + 0x1aff5]
lea	rcx, [rip + 0x1af17]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	r10, qword ptr [rcx + 8]
mov	r11, qword ptr [r9 + 8]
mov	r9, qword ptr [r9]
mov	rax, r10
sub	rax, rdx
cmp	rax, r8
cmovbe	r8, rax
cmp	r10, rdx
jb	0x14009f550
jb	0x14009f550
mov	qword ptr [rsp + 0x20], r11
call	0x14009cf70
call	0x14009cf70
add	rsp, 0x38
ret	
ret	
mov	r8, rdx
mov	r9, r10
lea	rdx, [rip + 0x1afa2]
lea	rcx, [rip + 0x1aec4]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	r11, qword ptr [r9 + 8]
mov	r10, qword ptr [rsp + 0x50]
mov	rbx, qword ptr [rsp + 0x58]
mov	r9, qword ptr [r9]
mov	rax, r11
sub	rax, r10
cmp	rax, rbx
cmova	rax, rbx
cmp	r11, r10
jb	0x14009f5c0
jb	0x14009f5c0
mov	r11, qword ptr [rcx + 8]
add	r9, r10
mov	r10, r11
sub	r10, rdx
cmp	r10, r8
cmovbe	r8, r10
cmp	r11, rdx
jb	0x14009f5d9
jb	0x14009f5d9
mov	qword ptr [rsp + 0x50], rax
add	rsp, 0x20
pop	rbx
jmp	0x14009cf70
jmp	0x14009cf70
mov	r9, r11
mov	r8, r10
lea	rdx, [rip + 0x1af32]
lea	rcx, [rip + 0x1ae54]
call	0x1400aed20
call	0x1400aed20
mov	r8, rdx
mov	r9, r11
lea	rdx, [rip + 0x1af19]
lea	rcx, [rip + 0x1ae3b]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r10, qword ptr [rcx + 8]
movsx	r11d, byte ptr [rsp + 0x50]
mov	rax, r10
sub	rax, rdx
cmp	rax, r8
cmovbe	r8, rax
cmp	r10, rdx
jb	0x14009f62e
jb	0x14009f62e
mov	dword ptr [rsp + 0x50], r11d
add	rsp, 0x28
jmp	0x14009d910
jmp	0x14009d910
mov	r8, rdx
mov	r9, r10
lea	rdx, [rip + 0x1aec4]
lea	rcx, [rip + 0x1ade6]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rcx, qword ptr [rcx]
lea	rdi, [rbx + 0x10]
cmp	rcx, rdi
je	0x14009f6df
je	0x14009f6df
mov	rsi, qword ptr [rbx + 8]
mov	rax, qword ptr [rbx + 0x10]
cmp	rsi, 0xf
ja	0x14009f6f0
ja	0x14009f6f0
lea	rax, [rsi + 1]
test	rsi, rsi
je	0x14009f768
je	0x14009f768
cmp	eax, 8
jb	0x14009f740
jb	0x14009f740
mov	rdx, qword ptr [rcx]
lea	r9, [rbx + 0x18]
mov	r11, rcx
and	r9, 0xfffffffffffffff8
mov	qword ptr [rbx + 0x10], rdx
mov	edx, eax
mov	r8, qword ptr [rcx + rdx - 8]
mov	qword ptr [rdi + rdx - 8], r8
mov	rdx, rdi
sub	rdx, r9
add	eax, edx
sub	r11, rdx
and	eax, 0xfffffff8
cmp	eax, 8
jb	0x14009f6d7
jb	0x14009f6d7
and	eax, 0xfffffff8
xor	edx, edx
mov	r8d, edx
add	edx, 8
mov	r10, qword ptr [r11 + r8]
mov	qword ptr [r9 + r8], r10
cmp	edx, eax
jb	0x14009f6c5
jb	0x14009f6c5
call	0x1400b2be0
call	0x1400b2be0
mov	qword ptr [rbx], rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
cmp	rsi, rax
jae	0x14009f6df
jae	0x14009f6df
mov	r13, rsi
add	r13, 1
js	0x14009f780
js	0x14009f780
mov	rcx, r13
call	0x1400b2c30
call	0x1400b2c30
mov	r12, qword ptr [rbx]
mov	r8, r13
mov	rcx, rax
mov	rbp, rax
mov	rdx, r12
call	0x140015998
call	0x140015998
cmp	rdi, r12
je	0x14009f72b
je	0x14009f72b
mov	rcx, r12
call	0x1400b2be0
call	0x1400b2be0
mov	qword ptr [rbx], rbp
mov	qword ptr [rbx + 0x10], rsi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	
test	al, 4
jne	0x14009f785
jne	0x14009f785
test	eax, eax
je	0x14009f6d7
je	0x14009f6d7
movzx	edx, byte ptr [rcx]
mov	byte ptr [rbx + 0x10], dl
test	al, 2
je	0x14009f6d7
je	0x14009f6d7
mov	eax, eax
movzx	edx, word ptr [rcx + rax - 2]
mov	word ptr [rdi + rax - 2], dx
jmp	0x14009f6d7
jmp	0x14009f6d7
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rcx]
mov	byte ptr [rbx + 0x10], al
call	0x1400b2be0
call	0x1400b2be0
mov	qword ptr [rbx], rdi
jmp	0x14009f6df
jmp	0x14009f6df
nop	dword ptr [rax + rax]
call	0x1400b39b0
call	0x1400b39b0
mov	edx, dword ptr [rcx]
mov	eax, eax
mov	dword ptr [rbx + 0x10], edx
mov	edx, dword ptr [rcx + rax - 4]
mov	dword ptr [rdi + rax - 4], edx
jmp	0x14009f6d7
jmp	0x14009f6d7
sub	rdx, 1
mov	rcx, rax
jne	0x14009f7ac
jne	0x14009f7ac
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
jmp	0x1400b2f60
jmp	0x1400b2f60
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	qword ptr [rsp + 0x58], rdx
mov	rbx, rcx
lea	rsi, [rcx + 0x10]
cmp	rsi, qword ptr [rcx]
je	0x14009f870
je	0x14009f870
mov	r8, qword ptr [rcx + 0x10]
cmp	r8, qword ptr [rsp + 0x58]
jb	0x14009f810
jb	0x14009f810
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x58]
mov	rcx, rbx
call	0x14009fa70
call	0x14009fa70
mov	rbp, qword ptr [rbx]
mov	rdi, rax
mov	rax, qword ptr [rbx + 8]
lea	r8, [rax + 1]
test	rax, rax
je	0x14009f880
je	0x14009f880
test	r8, r8
jne	0x14009f860
jne	0x14009f860
cmp	rsi, rbp
je	0x14009f842
je	0x14009f842
mov	rcx, rbp
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0x58]
mov	qword ptr [rbx], rdi
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	rdx, rbp
mov	rcx, rdi
call	0x140015998
call	0x140015998
jmp	0x14009f835
jmp	0x14009f835
nop	dword ptr [rax]
mov	r8d, 0xf
jmp	0x14009f7fd
jmp	0x14009f7fd
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rbp]
mov	byte ptr [rdi], al
jmp	0x14009f835
jmp	0x14009f835
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx + 8]
mov	rsi, r8
lea	r9, [rdx + r8]
mov	r8, rax
mov	rbx, rcx
sub	r8, r9
je	0x14009f8cc
je	0x14009f8cc
test	rsi, rsi
je	0x14009f8cc
je	0x14009f8cc
mov	rcx, qword ptr [rcx]
add	r9, rcx
add	rcx, rdx
cmp	r8, 1
je	0x14009f8e8
je	0x14009f8e8
mov	rdx, r9
call	0x1400159a0
call	0x1400159a0
mov	rax, qword ptr [rbx + 8]
mov	rdx, qword ptr [rbx]
sub	rax, rsi
mov	qword ptr [rbx + 8], rax
mov	byte ptr [rdx + rax], 0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
movzx	eax, byte ptr [r9]
mov	byte ptr [rcx], al
mov	rax, qword ptr [rbx + 8]
jmp	0x14009f8cc
jmp	0x14009f8cc
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 8]
lea	rdx, [rax - 1]
mov	qword ptr [rcx + 8], rdx
mov	rdx, qword ptr [rcx]
mov	byte ptr [rdx + rax - 1], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [rcx + 8]
mov	rbx, rcx
mov	rcx, qword ptr [rcx]
lea	rsi, [r8 + rax]
lea	r9, [rbx + 0x10]
cmp	rcx, r9
je	0x14009f990
je	0x14009f990
mov	r9, qword ptr [rbx + 0x10]
cmp	r9, rsi
jb	0x14009f970
jb	0x14009f970
test	r8, r8
je	0x14009f95c
je	0x14009f95c
add	rcx, rax
cmp	r8, 1
je	0x14009f9a0
je	0x14009f9a0
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
mov	rax, rbx
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
mov	qword ptr [rsp + 0x20], r8
mov	r9, rdx
mov	rcx, rbx
xor	r8d, r8d
mov	rdx, rax
call	0x14009faf0
call	0x14009faf0
mov	rcx, qword ptr [rbx]
jmp	0x14009f95c
jmp	0x14009f95c
nop	dword ptr [rax + rax]
mov	r9d, 0xf
jmp	0x14009f941
jmp	0x14009f941
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
mov	rcx, qword ptr [rbx]
jmp	0x14009f95c
jmp	0x14009f95c
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rbx, rcx
mov	rsi, rdx
cmp	rcx, rdx
je	0x14009f9ec
je	0x14009f9ec
mov	rbp, qword ptr [rcx]
lea	r12, [rcx + 0x10]
mov	rdi, qword ptr [rdx + 8]
cmp	r12, rbp
je	0x14009fa50
je	0x14009fa50
mov	r8, qword ptr [rcx + 0x10]
cmp	r8, rdi
jb	0x14009fa00
jb	0x14009fa00
test	rdi, rdi
jne	0x14009fa2e
jne	0x14009fa2e
mov	qword ptr [rbx + 8], rdi
mov	byte ptr [rbp + rdi], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
mov	rcx, rbx
lea	rdx, [rsp + 0x28]
mov	qword ptr [rsp + 0x28], rdi
call	0x14009fa70
call	0x14009fa70
mov	rcx, qword ptr [rbx]
mov	rbp, rax
cmp	r12, rcx
je	0x14009fa22
je	0x14009fa22
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rbp
mov	qword ptr [rbx + 0x10], rax
mov	rdx, qword ptr [rsi]
cmp	rdi, 1
je	0x14009fa60
je	0x14009fa60
mov	rcx, rbp
mov	r8, rdi
call	0x140015998
call	0x140015998
mov	rbp, qword ptr [rbx]
jmp	0x14009f9e3
jmp	0x14009f9e3
nop	word ptr [rax + rax]
mov	r8d, 0xf
jmp	0x14009f9d9
jmp	0x14009f9d9
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rbp], al
mov	rbp, qword ptr [rbx]
jmp	0x14009f9e3
jmp	0x14009f9e3
nop	
nop	
sub	rsp, 0x28
movabs	rcx, 0x3fffffffffffffff
mov	rax, qword ptr [rdx]
cmp	rcx, rax
jb	0x14009facb
jb	0x14009facb
lea	r9, [rax + 1]
cmp	r8, rax
jae	0x14009faa9
jae	0x14009faa9
add	r8, r8
cmp	rax, r8
jae	0x14009faa9
jae	0x14009faa9
cmp	rcx, r8
jae	0x14009fab8
jae	0x14009fab8
movabs	r9, 0x4000000000000000
mov	qword ptr [rdx], rcx
mov	rcx, r9
add	rsp, 0x28
jmp	0x1400b2c30
jmp	0x1400b2c30
nop	dword ptr [rax]
lea	r9, [r8 + 1]
mov	qword ptr [rdx], r8
mov	rcx, r9
add	rsp, 0x28
jmp	0x1400b2c30
jmp	0x1400b2c30
lea	rcx, [rip + 0x1a93e]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx + 8], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	r14, qword ptr [rsp + 0xa0]
mov	rax, r14
mov	rsi, rdx
mov	rdx, qword ptr [rcx + 8]
sub	rax, r8
mov	rbx, rcx
lea	r15, [rsi + r8]
mov	rbp, r9
lea	r12, [rcx + 0x10]
mov	r13, rdx
add	rax, rdx
mov	qword ptr [rsp + 0x28], rax
sub	r13, r15
cmp	r12, qword ptr [rcx]
je	0x14009fc10
je	0x14009fc10
mov	r8, qword ptr [rcx + 0x10]
lea	rdx, [rsp + 0x28]
mov	rcx, rbx
call	0x14009fa70
call	0x14009fa70
mov	rdi, rax
test	rsi, rsi
je	0x14009fb6b
je	0x14009fb6b
mov	rdx, qword ptr [rbx]
cmp	rsi, 1
je	0x14009fbe0
je	0x14009fbe0
mov	r8, rsi
mov	rcx, rax
call	0x140015998
call	0x140015998
test	rbp, rbp
je	0x14009fb90
je	0x14009fb90
test	r14, r14
je	0x14009fb90
je	0x14009fb90
lea	rcx, [rdi + rsi]
cmp	r14, 1
je	0x14009fc00
je	0x14009fc00
mov	r8, r14
mov	rdx, rbp
call	0x140015998
call	0x140015998
nop	
mov	rbp, qword ptr [rbx]
test	r13, r13
je	0x14009fbb2
je	0x14009fbb2
lea	rcx, [rsi + r14]
lea	rdx, [rbp + r15]
add	rcx, rdi
cmp	r13, 1
je	0x14009fbf0
je	0x14009fbf0
mov	r8, r13
call	0x140015998
call	0x140015998
cmp	r12, rbp
je	0x14009fbbf
je	0x14009fbbf
mov	rcx, rbp
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rdi
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rdi], al
jmp	0x14009fb6b
jmp	0x14009fb6b
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
jmp	0x14009fbb2
jmp	0x14009fbb2
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rbp]
mov	byte ptr [rcx], al
jmp	0x14009fb90
jmp	0x14009fb90
nop	dword ptr [rax + rax]
mov	r8d, 0xf
jmp	0x14009fb3e
jmp	0x14009fb3e
nop	
nop	
nop	
nop	
nop	
cmp	rdx, 1
je	0x14009fc40
je	0x14009fc40
test	rdx, rdx
jne	0x14009fc30
jne	0x14009fc30
ret	
ret	
nop	dword ptr [rax]
movsx	eax, r8b
mov	r8, rdx
mov	edx, eax
jmp	0x1400159a8
jmp	0x1400159a8
nop	
mov	byte ptr [rcx], r8b
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [rcx + 8]
mov	rax, qword ptr [rcx]
lea	rbp, [rsi + 1]
mov	edi, edx
lea	rdx, [rcx + 0x10]
mov	rbx, rcx
cmp	rax, rdx
je	0x14009fcc0
je	0x14009fcc0
mov	rdx, qword ptr [rcx + 0x10]
cmp	rdx, rbp
jb	0x14009fc98
jb	0x14009fc98
mov	byte ptr [rax + rsi], dil
mov	rax, qword ptr [rbx]
mov	qword ptr [rbx + 8], rbp
mov	byte ptr [rax + rsi + 1], 0
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rbx]
jmp	0x14009fc7a
jmp	0x14009fc7a
nop	word ptr [rax + rax]
mov	edx, 0xf
jmp	0x14009fc75
jmp	0x14009fc75
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
mov	r9, rcx
lea	rcx, [rcx + 0x10]
mov	rax, rdx
mov	qword ptr [r9], rcx
mov	rdx, qword ptr [rdx]
lea	r10, [rax + 0x10]
mov	r8, qword ptr [rax + 8]
cmp	r10, rdx
je	0x14009fd10
je	0x14009fd10
mov	qword ptr [r9], rdx
mov	rdx, qword ptr [rax + 0x10]
mov	qword ptr [r9 + 0x10], rdx
mov	qword ptr [r9 + 8], r8
mov	qword ptr [rax], r10
mov	qword ptr [rax + 8], 0
mov	byte ptr [rax + 0x10], 0
pop	rbx
pop	rsi
ret	
ret	
lea	rdx, [r8 + 1]
cmp	edx, 8
jae	0x14009fd48
jae	0x14009fd48
test	dl, 4
jne	0x14009fd98
jne	0x14009fd98
test	edx, edx
je	0x14009fcfa
je	0x14009fcfa
movzx	r8d, byte ptr [rax + 0x10]
mov	byte ptr [r9 + 0x10], r8b
test	dl, 2
je	0x14009fd8f
je	0x14009fd8f
mov	edx, edx
movzx	r8d, word ptr [r10 + rdx - 2]
mov	word ptr [rcx + rdx - 2], r8w
mov	r8, qword ptr [rax + 8]
jmp	0x14009fcfa
jmp	0x14009fcfa
nop	dword ptr [rax]
mov	r8, qword ptr [rax + 0x10]
mov	rbx, r10
mov	qword ptr [r9 + 0x10], r8
mov	r8d, edx
mov	r11, qword ptr [r10 + r8 - 8]
mov	qword ptr [rcx + r8 - 8], r11
lea	r11, [r9 + 0x18]
and	r11, 0xfffffffffffffff8
sub	rcx, r11
add	edx, ecx
sub	rbx, rcx
and	edx, 0xfffffff8
cmp	edx, 8
jb	0x14009fd8f
jb	0x14009fd8f
and	edx, 0xfffffff8
xor	ecx, ecx
mov	r8d, ecx
add	ecx, 8
mov	rsi, qword ptr [rbx + r8]
mov	qword ptr [r11 + r8], rsi
cmp	ecx, edx
jb	0x14009fd7d
jb	0x14009fd7d
mov	r8, qword ptr [rax + 8]
jmp	0x14009fcfa
jmp	0x14009fcfa
mov	r8d, dword ptr [rax + 0x10]
mov	edx, edx
mov	dword ptr [r9 + 0x10], r8d
mov	r8d, dword ptr [r10 + rdx - 4]
mov	dword ptr [rcx + rdx - 4], r8d
mov	r8, qword ptr [rax + 8]
jmp	0x14009fcfa
jmp	0x14009fcfa
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
lea	r8, [rcx + 0x10]
mov	r9, rcx
mov	rax, rdx
mov	qword ptr [rcx], r8
mov	rcx, qword ptr [rdx]
lea	rdx, [rdx + 0x10]
movq	xmm0, qword ptr [rax + 8]
cmp	rdx, rcx
je	0x14009fe00
je	0x14009fe00
movhps	xmm0, qword ptr [rax + 0x10]
mov	qword ptr [r9], rcx
mov	qword ptr [rax], rdx
mov	qword ptr [rax + 8], 0
mov	byte ptr [rax + 0x10], 0
movups	xmmword ptr [r9 + 8], xmm0
pop	rbx
ret	
ret	
nop	dword ptr [rax]
movq	rbx, xmm0
lea	r10, [rbx + 1]
cmp	r10d, 8
jae	0x14009fe60
jae	0x14009fe60
test	r10b, 4
jne	0x14009feb3
jne	0x14009feb3
test	r10d, r10d
je	0x14009fe43
je	0x14009fe43
movzx	edx, byte ptr [rax + 0x10]
mov	byte ptr [r9 + 0x10], dl
test	r10b, 2
je	0x14009fea9
je	0x14009fea9
mov	r10d, r10d
movzx	edx, word ptr [rcx + r10 - 2]
mov	word ptr [r8 + r10 - 2], dx
mov	rcx, qword ptr [rax]
movq	xmm0, qword ptr [rax + 8]
mov	qword ptr [rax + 8], 0
movq	qword ptr [r9 + 8], xmm0
mov	byte ptr [rcx], 0
pop	rbx
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, qword ptr [rax + 0x10]
mov	qword ptr [r9 + 0x10], rcx
mov	ecx, r10d
mov	r11, qword ptr [rdx + rcx - 8]
mov	qword ptr [r8 + rcx - 8], r11
lea	r11, [r9 + 0x18]
and	r11, 0xfffffffffffffff8
sub	r8, r11
add	r10d, r8d
sub	rdx, r8
and	r10d, 0xfffffff8
cmp	r10d, 8
jb	0x14009fea9
jb	0x14009fea9
and	r10d, 0xfffffff8
xor	ecx, ecx
mov	r8d, ecx
add	ecx, 8
mov	rbx, qword ptr [rdx + r8]
mov	qword ptr [r11 + r8], rbx
cmp	ecx, r10d
jb	0x14009fe96
jb	0x14009fe96
mov	rcx, qword ptr [rax]
movq	xmm0, qword ptr [rax + 8]
jmp	0x14009fe43
jmp	0x14009fe43
mov	edx, dword ptr [rax + 0x10]
mov	r10d, r10d
mov	dword ptr [r9 + 0x10], edx
mov	edx, dword ptr [rcx + r10 - 4]
mov	dword ptr [r8 + r10 - 4], edx
mov	rcx, qword ptr [rax]
movq	xmm0, qword ptr [rax + 8]
jmp	0x14009fe43
jmp	0x14009fe43
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
lea	rax, [rcx + 0x10]
mov	rsi, rcx
mov	rbx, rdx
mov	qword ptr [rcx], rax
test	rdx, rdx
je	0x14009ff18
je	0x14009ff18
mov	rcx, rdx
call	0x140015a08
call	0x140015a08
xor	r9d, r9d
mov	rdx, rbx
mov	rcx, rsi
lea	r8, [rbx + rax]
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x14009d340
jmp	0x14009d340
lea	rcx, [rip + 0x1a679]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx], rax
test	rdx, rdx
jne	0x14009ff45
jne	0x14009ff45
test	r8, r8
jne	0x14009ff54
jne	0x14009ff54
xor	r9d, r9d
add	r8, rdx
add	rsp, 0x28
jmp	0x14009d340
jmp	0x14009d340
lea	rcx, [rip + 0x1a63d]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx + 8], 0
mov	qword ptr [rcx], rax
mov	byte ptr [rcx + 0x10], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, qword ptr [rdx + 8]
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	qword ptr [rbx], rcx
mov	rdi, qword ptr [rdx]
cmp	rsi, 0xf
ja	0x14009fff0
ja	0x14009fff0
cmp	rsi, 1
je	0x14009ffd0
je	0x14009ffd0
test	rsi, rsi
jne	0x1400a000c
jne	0x1400a000c
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
movzx	eax, byte ptr [rdi]
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rbx + 0x10], al
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rax, rsi
shr	rax, 0x3e
jne	0x1400a002a
jne	0x1400a002a
lea	rcx, [rsi + 1]
call	0x1400b2c30
call	0x1400b2c30
mov	qword ptr [rbx + 0x10], rsi
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x1a3df]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, qword ptr [rdx + 8]
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	qword ptr [rbx], rcx
mov	rdi, qword ptr [rdx]
cmp	rsi, 0xf
ja	0x1400a00a0
ja	0x1400a00a0
cmp	rsi, 1
je	0x1400a0080
je	0x1400a0080
test	rsi, rsi
jne	0x1400a00bc
jne	0x1400a00bc
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
movzx	eax, byte ptr [rdi]
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rbx + 0x10], al
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rax, rsi
shr	rax, 0x3e
jne	0x1400a00da
jne	0x1400a00da
lea	rcx, [rsi + 1]
call	0x1400b2c30
call	0x1400b2c30
mov	qword ptr [rbx + 0x10], rsi
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x1a32f]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx + 8]
mov	r10, qword ptr [rdx]
cmp	rax, r8
jb	0x1400a011b
jb	0x1400a011b
lea	rdx, [r10 + r8]
xor	r9d, r9d
lea	r8, [r10 + rax]
add	rsp, 0x28
jmp	0x14009d340
jmp	0x14009d340
mov	r9, rax
lea	rdx, [rip + 0x1a447]
lea	rcx, [rip + 0x1a2fc]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx + 8]
mov	r10, qword ptr [rdx]
cmp	rax, r8
jb	0x1400a0175
jb	0x1400a0175
sub	rax, r8
lea	rdx, [r10 + r8]
cmp	rax, r9
cmova	rax, r9
xor	r9d, r9d
lea	r8, [rdx + rax]
add	rsp, 0x28
jmp	0x14009d340
jmp	0x14009d340
mov	r9, rax
lea	rdx, [rip + 0x1a3ed]
lea	rcx, [rip + 0x1a2a2]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx + 8]
mov	r10, qword ptr [rdx]
cmp	rax, r8
jb	0x1400a01c5
jb	0x1400a01c5
sub	rax, r8
lea	rdx, [r10 + r8]
cmp	rax, r9
cmova	rax, r9
xor	r9d, r9d
lea	r8, [rdx + rax]
add	rsp, 0x28
jmp	0x14009d340
jmp	0x14009d340
mov	r9, rax
lea	rdx, [rip + 0x1a3b8]
lea	rcx, [rip + 0x1a252]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
xor	r9d, r9d
mov	rax, qword ptr [rdx]
lea	r8, [rcx + 0x10]
mov	qword ptr [rcx], r8
mov	r8, qword ptr [rdx + 8]
mov	rdx, rax
add	r8, rax
jmp	0x14009d340
jmp	0x14009d340
nop	
nop	
nop	
nop	
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx + 8], 0
mov	qword ptr [rcx], rax
mov	byte ptr [rcx + 0x10], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
lea	rcx, [rcx + 0x10]
mov	rbx, rdx
mov	edi, r8d
mov	qword ptr [rsi], rcx
cmp	rdx, 0xf
ja	0x1400a0260
ja	0x1400a0260
test	rdx, rdx
je	0x1400a024c
je	0x1400a024c
cmp	rdx, 1
jne	0x1400a027c
jne	0x1400a027c
mov	byte ptr [rsi + 0x10], r8b
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rax, rdx
shr	rax, 0x3e
jne	0x1400a029b
jne	0x1400a029b
lea	rcx, [rdx + 1]
call	0x1400b2c30
call	0x1400b2c30
mov	qword ptr [rsi + 0x10], rbx
mov	qword ptr [rsi], rax
mov	rcx, rax
movsx	edx, dil
mov	r8, rbx
call	0x1400159a8
call	0x1400159a8
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x1a16e]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, r8
mov	rsi, rcx
lea	rcx, [rcx + 0x10]
mov	rdi, rdx
sub	rbx, rdx
mov	qword ptr [rsi], rcx
mov	qword ptr [rsi + 8], 0
cmp	rbx, 0xf
ja	0x1400a0310
ja	0x1400a0310
cmp	rbx, 1
je	0x1400a02f8
je	0x1400a02f8
test	rbx, rbx
jne	0x1400a032c
jne	0x1400a032c
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rdx]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rsi + 0x10], al
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
mov	rax, rbx
shr	rax, 0x3e
jne	0x1400a034a
jne	0x1400a034a
lea	rcx, [rbx + 1]
call	0x1400b2c30
call	0x1400b2c30
mov	qword ptr [rsi + 0x10], rbx
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x1a0bf]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	r9d, r9d
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx + 8], 0
mov	qword ptr [rcx], rax
jmp	0x14009d340
jmp	0x14009d340
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, r8
mov	rsi, rcx
lea	rcx, [rcx + 0x10]
mov	rdi, rdx
sub	rbx, rdx
mov	qword ptr [rsi], rcx
mov	qword ptr [rsi + 8], 0
cmp	rbx, 0xf
ja	0x1400a03e0
ja	0x1400a03e0
cmp	rbx, 1
je	0x1400a03c8
je	0x1400a03c8
test	rbx, rbx
jne	0x1400a03fc
jne	0x1400a03fc
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rdx]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rsi + 0x10], al
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
mov	rax, rbx
shr	rax, 0x3e
jne	0x1400a041a
jne	0x1400a041a
lea	rcx, [rbx + 1]
call	0x1400b2c30
call	0x1400b2c30
mov	qword ptr [rsi + 0x10], rbx
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x19fef]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
mov	r9, rcx
lea	rcx, [rcx + 0x10]
mov	rax, rdx
mov	qword ptr [r9], rcx
mov	rdx, qword ptr [rdx]
lea	r10, [rax + 0x10]
mov	r8, qword ptr [rax + 8]
cmp	r10, rdx
je	0x1400a0470
je	0x1400a0470
mov	qword ptr [r9], rdx
mov	rdx, qword ptr [rax + 0x10]
mov	qword ptr [r9 + 0x10], rdx
mov	qword ptr [r9 + 8], r8
mov	qword ptr [rax], r10
mov	qword ptr [rax + 8], 0
mov	byte ptr [rax + 0x10], 0
pop	rbx
pop	rsi
ret	
ret	
lea	rdx, [r8 + 1]
cmp	edx, 8
jae	0x1400a04a8
jae	0x1400a04a8
test	dl, 4
jne	0x1400a04f8
jne	0x1400a04f8
test	edx, edx
je	0x1400a045a
je	0x1400a045a
movzx	r8d, byte ptr [rax + 0x10]
mov	byte ptr [r9 + 0x10], r8b
test	dl, 2
je	0x1400a04ef
je	0x1400a04ef
mov	edx, edx
movzx	r8d, word ptr [r10 + rdx - 2]
mov	word ptr [rcx + rdx - 2], r8w
mov	r8, qword ptr [rax + 8]
jmp	0x1400a045a
jmp	0x1400a045a
nop	dword ptr [rax]
mov	r8, qword ptr [rax + 0x10]
mov	rbx, r10
mov	qword ptr [r9 + 0x10], r8
mov	r8d, edx
mov	r11, qword ptr [r10 + r8 - 8]
mov	qword ptr [rcx + r8 - 8], r11
lea	r11, [r9 + 0x18]
and	r11, 0xfffffffffffffff8
sub	rcx, r11
add	edx, ecx
sub	rbx, rcx
and	edx, 0xfffffff8
cmp	edx, 8
jb	0x1400a04ef
jb	0x1400a04ef
and	edx, 0xfffffff8
xor	ecx, ecx
mov	r8d, ecx
add	ecx, 8
mov	rsi, qword ptr [rbx + r8]
mov	qword ptr [r11 + r8], rsi
cmp	ecx, edx
jb	0x1400a04dd
jb	0x1400a04dd
mov	r8, qword ptr [rax + 8]
jmp	0x1400a045a
jmp	0x1400a045a
mov	r8d, dword ptr [rax + 0x10]
mov	edx, edx
mov	dword ptr [r9 + 0x10], r8d
mov	r8d, dword ptr [r10 + rdx - 4]
mov	dword ptr [rcx + rdx - 4], r8d
mov	r8, qword ptr [rax + 8]
jmp	0x1400a045a
jmp	0x1400a045a
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
lea	r8, [rcx + 0x10]
mov	r9, rcx
mov	rax, rdx
mov	qword ptr [rcx], r8
mov	rcx, qword ptr [rdx]
lea	rdx, [rdx + 0x10]
movq	xmm0, qword ptr [rax + 8]
cmp	rdx, rcx
je	0x1400a0560
je	0x1400a0560
movhps	xmm0, qword ptr [rax + 0x10]
mov	qword ptr [r9], rcx
mov	qword ptr [rax], rdx
mov	qword ptr [rax + 8], 0
mov	byte ptr [rax + 0x10], 0
movups	xmmword ptr [r9 + 8], xmm0
pop	rbx
ret	
ret	
nop	dword ptr [rax]
movq	rbx, xmm0
lea	r10, [rbx + 1]
cmp	r10d, 8
jae	0x1400a05c0
jae	0x1400a05c0
test	r10b, 4
jne	0x1400a0613
jne	0x1400a0613
test	r10d, r10d
je	0x1400a05a3
je	0x1400a05a3
movzx	edx, byte ptr [rax + 0x10]
mov	byte ptr [r9 + 0x10], dl
test	r10b, 2
je	0x1400a0609
je	0x1400a0609
mov	r10d, r10d
movzx	edx, word ptr [rcx + r10 - 2]
mov	word ptr [r8 + r10 - 2], dx
mov	rcx, qword ptr [rax]
movq	xmm0, qword ptr [rax + 8]
mov	qword ptr [rax + 8], 0
movq	qword ptr [r9 + 8], xmm0
mov	byte ptr [rcx], 0
pop	rbx
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rcx, qword ptr [rax + 0x10]
mov	qword ptr [r9 + 0x10], rcx
mov	ecx, r10d
mov	r11, qword ptr [rdx + rcx - 8]
mov	qword ptr [r8 + rcx - 8], r11
lea	r11, [r9 + 0x18]
and	r11, 0xfffffffffffffff8
sub	r8, r11
add	r10d, r8d
sub	rdx, r8
and	r10d, 0xfffffff8
cmp	r10d, 8
jb	0x1400a0609
jb	0x1400a0609
and	r10d, 0xfffffff8
xor	ecx, ecx
mov	r8d, ecx
add	ecx, 8
mov	rbx, qword ptr [rdx + r8]
mov	qword ptr [r11 + r8], rbx
cmp	ecx, r10d
jb	0x1400a05f6
jb	0x1400a05f6
mov	rcx, qword ptr [rax]
movq	xmm0, qword ptr [rax + 8]
jmp	0x1400a05a3
jmp	0x1400a05a3
mov	edx, dword ptr [rax + 0x10]
mov	r10d, r10d
mov	dword ptr [r9 + 0x10], edx
mov	edx, dword ptr [rcx + r10 - 4]
mov	dword ptr [r8 + r10 - 4], edx
mov	rcx, qword ptr [rax]
movq	xmm0, qword ptr [rax + 8]
jmp	0x1400a05a3
jmp	0x1400a05a3
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
lea	rax, [rcx + 0x10]
mov	rsi, rcx
mov	rbx, rdx
mov	qword ptr [rcx], rax
test	rdx, rdx
je	0x1400a0678
je	0x1400a0678
mov	rcx, rdx
call	0x140015a08
call	0x140015a08
xor	r9d, r9d
mov	rdx, rbx
mov	rcx, rsi
lea	r8, [rbx + rax]
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x14009d340
jmp	0x14009d340
lea	rcx, [rip + 0x19f19]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
lea	rcx, [rip + 0x19435]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx], rax
test	rdx, rdx
jne	0x1400a06c5
jne	0x1400a06c5
test	r8, r8
jne	0x1400a06d4
jne	0x1400a06d4
xor	r9d, r9d
add	r8, rdx
add	rsp, 0x28
jmp	0x14009d340
jmp	0x14009d340
lea	rcx, [rip + 0x19ebd]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx + 8], 0
mov	qword ptr [rcx], rax
mov	byte ptr [rcx + 0x10], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, qword ptr [rdx + 8]
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	qword ptr [rbx], rcx
mov	rdi, qword ptr [rdx]
cmp	rsi, 0xf
ja	0x1400a0770
ja	0x1400a0770
cmp	rsi, 1
je	0x1400a0750
je	0x1400a0750
test	rsi, rsi
jne	0x1400a078c
jne	0x1400a078c
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
movzx	eax, byte ptr [rdi]
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rbx + 0x10], al
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rax, rsi
shr	rax, 0x3e
jne	0x1400a07aa
jne	0x1400a07aa
lea	rcx, [rsi + 1]
call	0x1400b2c30
call	0x1400b2c30
mov	qword ptr [rbx + 0x10], rsi
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x19c5f]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, qword ptr [rdx + 8]
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	qword ptr [rbx], rcx
mov	rdi, qword ptr [rdx]
cmp	rsi, 0xf
ja	0x1400a0820
ja	0x1400a0820
cmp	rsi, 1
je	0x1400a0800
je	0x1400a0800
test	rsi, rsi
jne	0x1400a083c
jne	0x1400a083c
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
movzx	eax, byte ptr [rdi]
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rbx + 0x10], al
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr cs:[rax + rax]
mov	rax, rsi
shr	rax, 0x3e
jne	0x1400a085a
jne	0x1400a085a
lea	rcx, [rsi + 1]
call	0x1400b2c30
call	0x1400b2c30
mov	qword ptr [rbx + 0x10], rsi
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x19baf]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx + 8]
mov	r10, qword ptr [rdx]
cmp	rax, r8
jb	0x1400a089b
jb	0x1400a089b
lea	rdx, [r10 + r8]
xor	r9d, r9d
lea	r8, [r10 + rax]
add	rsp, 0x28
jmp	0x14009d340
jmp	0x14009d340
mov	r9, rax
lea	rdx, [rip + 0x19cc7]
lea	rcx, [rip + 0x19b7c]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx + 8]
mov	r10, qword ptr [rdx]
cmp	rax, r8
jb	0x1400a08f5
jb	0x1400a08f5
sub	rax, r8
lea	rdx, [r10 + r8]
cmp	rax, r9
cmova	rax, r9
xor	r9d, r9d
lea	r8, [rdx + rax]
add	rsp, 0x28
jmp	0x14009d340
jmp	0x14009d340
mov	r9, rax
lea	rdx, [rip + 0x19c6d]
lea	rcx, [rip + 0x19b22]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx + 8]
mov	r10, qword ptr [rdx]
cmp	rax, r8
jb	0x1400a0945
jb	0x1400a0945
sub	rax, r8
lea	rdx, [r10 + r8]
cmp	rax, r9
cmova	rax, r9
xor	r9d, r9d
lea	r8, [rdx + rax]
add	rsp, 0x28
jmp	0x14009d340
jmp	0x14009d340
mov	r9, rax
lea	rdx, [rip + 0x19c38]
lea	rcx, [rip + 0x19ad2]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
xor	r9d, r9d
mov	rax, qword ptr [rdx]
lea	r8, [rcx + 0x10]
mov	qword ptr [rcx], r8
mov	r8, qword ptr [rdx + 8]
mov	rdx, rax
add	r8, rax
jmp	0x14009d340
jmp	0x14009d340
nop	
nop	
nop	
nop	
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx + 8], 0
mov	qword ptr [rcx], rax
mov	byte ptr [rcx + 0x10], 0
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
lea	rcx, [rcx + 0x10]
mov	rbx, rdx
mov	edi, r8d
mov	qword ptr [rsi], rcx
cmp	rdx, 0xf
ja	0x1400a09e0
ja	0x1400a09e0
test	rdx, rdx
je	0x1400a09cc
je	0x1400a09cc
cmp	rdx, 1
jne	0x1400a09fc
jne	0x1400a09fc
mov	byte ptr [rsi + 0x10], r8b
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rax, rdx
shr	rax, 0x3e
jne	0x1400a0a1b
jne	0x1400a0a1b
lea	rcx, [rdx + 1]
call	0x1400b2c30
call	0x1400b2c30
mov	qword ptr [rsi + 0x10], rbx
mov	qword ptr [rsi], rax
mov	rcx, rax
movsx	edx, dil
mov	r8, rbx
call	0x1400159a8
call	0x1400159a8
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x199ee]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, r8
mov	rsi, rcx
lea	rcx, [rcx + 0x10]
mov	rdi, rdx
sub	rbx, rdx
mov	qword ptr [rsi], rcx
mov	qword ptr [rsi + 8], 0
cmp	rbx, 0xf
ja	0x1400a0a90
ja	0x1400a0a90
cmp	rbx, 1
je	0x1400a0a78
je	0x1400a0a78
test	rbx, rbx
jne	0x1400a0aac
jne	0x1400a0aac
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rdx]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rsi + 0x10], al
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
mov	rax, rbx
shr	rax, 0x3e
jne	0x1400a0aca
jne	0x1400a0aca
lea	rcx, [rbx + 1]
call	0x1400b2c30
call	0x1400b2c30
mov	qword ptr [rsi + 0x10], rbx
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x1993f]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	r9d, r9d
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx + 8], 0
mov	qword ptr [rcx], rax
jmp	0x14009d340
jmp	0x14009d340
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, r8
mov	rsi, rcx
lea	rcx, [rcx + 0x10]
mov	rdi, rdx
sub	rbx, rdx
mov	qword ptr [rsi], rcx
mov	qword ptr [rsi + 8], 0
cmp	rbx, 0xf
ja	0x1400a0b60
ja	0x1400a0b60
cmp	rbx, 1
je	0x1400a0b48
je	0x1400a0b48
test	rbx, rbx
jne	0x1400a0b7c
jne	0x1400a0b7c
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
movzx	eax, byte ptr [rdx]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rsi + 0x10], al
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
mov	rax, rbx
shr	rax, 0x3e
jne	0x1400a0b9a
jne	0x1400a0b9a
lea	rcx, [rbx + 1]
call	0x1400b2c30
call	0x1400b2c30
mov	qword ptr [rsi + 0x10], rbx
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
mov	qword ptr [rsi + 8], rbx
mov	byte ptr [rcx + rbx], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x1986f]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rcx, 0x10
cmp	rax, rcx
je	0x1400a0bc8
je	0x1400a0bc8
mov	rcx, rax
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rcx, 0x10
cmp	rax, rcx
je	0x1400a0be8
je	0x1400a0be8
mov	rcx, rax
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	r8, qword ptr [rdx + 8]
mov	rsi, rcx
mov	rcx, qword ptr [rcx]
mov	rbx, rdx
mov	rdx, qword ptr [rdx]
lea	rax, [rsi + 0x10]
cmp	rcx, rax
lea	rax, [rbx + 0x10]
je	0x1400a0c50
je	0x1400a0c50
cmp	rax, rdx
je	0x1400a0c70
je	0x1400a0c70
mov	qword ptr [rsi], rdx
mov	r9, qword ptr [rsi + 0x10]
mov	qword ptr [rsi + 8], r8
mov	rdx, qword ptr [rbx + 0x10]
mov	qword ptr [rsi + 0x10], rdx
test	rcx, rcx
je	0x1400a0ca0
je	0x1400a0ca0
mov	qword ptr [rbx], rcx
mov	qword ptr [rbx + 0x10], r9
mov	rax, rsi
mov	qword ptr [rbx + 8], 0
mov	byte ptr [rcx], 0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
cmp	rax, rdx
je	0x1400a0c70
je	0x1400a0c70
mov	qword ptr [rsi], rdx
mov	rcx, rax
mov	qword ptr [rsi + 8], r8
mov	rdx, qword ptr [rbx + 0x10]
mov	qword ptr [rsi + 0x10], rdx
mov	qword ptr [rbx], rcx
jmp	0x1400a0c37
jmp	0x1400a0c37
nop	dword ptr [rax]
cmp	rsi, rbx
je	0x1400a0cc0
je	0x1400a0cc0
test	r8, r8
je	0x1400a0c8c
je	0x1400a0c8c
cmp	r8, 1
je	0x1400a0ca8
je	0x1400a0ca8
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
mov	r8, qword ptr [rbx + 8]
mov	qword ptr [rsi + 8], r8
mov	byte ptr [rcx + r8], 0
mov	rcx, qword ptr [rbx]
jmp	0x1400a0c37
jmp	0x1400a0c37
nop	word ptr [rax + rax]
mov	rcx, rax
jmp	0x1400a0c67
jmp	0x1400a0c67
nop	dword ptr [rax]
movzx	eax, byte ptr [rdx]
mov	byte ptr [rcx], al
mov	rcx, qword ptr [rsi]
mov	r8, qword ptr [rbx + 8]
jmp	0x1400a0c8c
jmp	0x1400a0c8c
nop	word ptr cs:[rax + rax]
mov	rcx, rdx
jmp	0x1400a0c37
jmp	0x1400a0c37
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, rcx
mov	rcx, rdx
mov	rsi, rdx
call	0x140015a08
call	0x140015a08
mov	r9, rsi
xor	edx, edx
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], rax
mov	r8, qword ptr [rbx + 8]
call	0x14009cf70
call	0x14009cf70
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x14009f9b0
call	0x14009f9b0
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rdx + 8]
mov	r8, qword ptr [rcx + 8]
mov	qword ptr [rsp + 0x20], rax
mov	r9, qword ptr [rdx]
mov	rbx, rcx
xor	edx, edx
call	0x14009cf70
call	0x14009cf70
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	r9d, 1
mov	r8, qword ptr [rcx + 8]
movsx	edx, dl
mov	rbx, rcx
mov	dword ptr [rsp + 0x20], edx
xor	edx, edx
call	0x14009d910
call	0x14009d910
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rax, rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rbx, rcx
mov	rcx, rdx
mov	rsi, rdx
call	0x140015a08
call	0x140015a08
mov	rdx, qword ptr [rbx + 8]
mov	r8, rax
movabs	rax, 0x3fffffffffffffff
sub	rax, rdx
cmp	rax, r8
jb	0x1400a0e4a
jb	0x1400a0e4a
mov	rcx, qword ptr [rbx]
lea	rax, [rbx + 0x10]
lea	rdi, [r8 + rdx]
cmp	rcx, rax
je	0x1400a0e30
je	0x1400a0e30
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rdi
jb	0x1400a0e18
jb	0x1400a0e18
test	r8, r8
je	0x1400a0e00
je	0x1400a0e00
add	rcx, rdx
cmp	r8, 1
je	0x1400a0e40
je	0x1400a0e40
mov	rdx, rsi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
mov	rax, rbx
mov	qword ptr [rbx + 8], rdi
mov	byte ptr [rcx + rdi], 0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
mov	qword ptr [rsp + 0x20], r8
mov	rcx, rbx
mov	r9, rsi
xor	r8d, r8d
call	0x14009faf0
call	0x14009faf0
mov	rcx, qword ptr [rbx]
jmp	0x1400a0e00
jmp	0x1400a0e00
mov	eax, 0xf
jmp	0x1400a0de2
jmp	0x1400a0de2
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rsi]
mov	byte ptr [rcx], al
mov	rcx, qword ptr [rbx]
jmp	0x1400a0e00
jmp	0x1400a0e00
lea	rcx, [rip + 0x19653]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
movabs	rax, 0x3fffffffffffffff
mov	r8, qword ptr [rdx + 8]
mov	r9, qword ptr [rdx]
mov	rdx, qword ptr [rcx + 8]
sub	rax, rdx
mov	rbx, rcx
cmp	rax, r8
jb	0x1400a0efb
jb	0x1400a0efb
mov	rcx, qword ptr [rcx]
lea	rax, [rbx + 0x10]
lea	rsi, [r8 + rdx]
cmp	rcx, rax
je	0x1400a0ee8
je	0x1400a0ee8
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rsi
jb	0x1400a0ed0
jb	0x1400a0ed0
test	r8, r8
je	0x1400a0eb8
je	0x1400a0eb8
add	rcx, rdx
cmp	r8, 1
je	0x1400a0ef0
je	0x1400a0ef0
mov	rdx, r9
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
mov	rax, rbx
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
mov	qword ptr [rsp + 0x20], r8
mov	rcx, rbx
xor	r8d, r8d
call	0x14009faf0
call	0x14009faf0
mov	rcx, qword ptr [rbx]
jmp	0x1400a0eb8
jmp	0x1400a0eb8
nop	dword ptr [rax]
mov	eax, 0xf
jmp	0x1400a0e9a
jmp	0x1400a0e9a
nop	
movzx	eax, byte ptr [r9]
mov	byte ptr [rcx], al
mov	rcx, qword ptr [rbx]
jmp	0x1400a0eb8
jmp	0x1400a0eb8
lea	rcx, [rip + 0x195a2]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
movabs	rax, 0x3fffffffffffffff
mov	r9, qword ptr [rdx]
mov	r8, qword ptr [rdx + 8]
mov	rdx, qword ptr [rcx + 8]
sub	rax, rdx
mov	rbx, rcx
cmp	rax, r8
jb	0x1400a0fab
jb	0x1400a0fab
mov	rcx, qword ptr [rcx]
lea	rax, [rbx + 0x10]
lea	rsi, [r8 + rdx]
cmp	rcx, rax
je	0x1400a0f98
je	0x1400a0f98
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, rsi
jb	0x1400a0f80
jb	0x1400a0f80
test	r8, r8
je	0x1400a0f68
je	0x1400a0f68
add	rcx, rdx
cmp	r8, 1
je	0x1400a0fa0
je	0x1400a0fa0
mov	rdx, r9
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
mov	rax, rbx
mov	qword ptr [rbx + 8], rsi
mov	byte ptr [rcx + rsi], 0
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
mov	qword ptr [rsp + 0x20], r8
mov	rcx, rbx
xor	r8d, r8d
call	0x14009faf0
call	0x14009faf0
mov	rcx, qword ptr [rbx]
jmp	0x1400a0f68
jmp	0x1400a0f68
nop	dword ptr [rax]
mov	eax, 0xf
jmp	0x1400a0f4a
jmp	0x1400a0f4a
nop	
movzx	eax, byte ptr [r9]
mov	byte ptr [rcx], al
mov	rcx, qword ptr [rbx]
jmp	0x1400a0f68
jmp	0x1400a0f68
lea	rcx, [rip + 0x194f2]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [rcx + 8]
mov	rax, qword ptr [rcx]
lea	rbp, [rsi + 1]
mov	edi, edx
lea	rdx, [rcx + 0x10]
mov	rbx, rcx
cmp	rax, rdx
je	0x1400a1030
je	0x1400a1030
mov	rdx, qword ptr [rcx + 0x10]
cmp	rdx, rbp
jb	0x1400a1010
jb	0x1400a1010
mov	byte ptr [rax + rsi], dil
mov	rax, qword ptr [rbx]
mov	qword ptr [rbx + 8], rbp
mov	byte ptr [rax + rsi + 1], 0
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr cs:[rax + rax]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], 1
call	0x14009faf0
call	0x14009faf0
mov	rax, qword ptr [rbx]
jmp	0x1400a0fea
jmp	0x1400a0fea
nop	
mov	edx, 0xf
jmp	0x1400a0fe5
jmp	0x1400a0fe5
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rcx, qword ptr [rcx]
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rcx, 0x10
cmp	rax, rcx
je	0x1400a1068
je	0x1400a1068
mov	rcx, rax
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
movabs	rax, 0x1fffffffffffffff
mov	rdi, qword ptr [rsp + 0x80]
mov	rbx, rcx
mov	rcx, rdx
add	rax, r8
mov	rdx, qword ptr [rbx + 8]
sub	rax, rdx
cmp	rax, rdi
jb	0x1400a11bd
jb	0x1400a11bd
mov	rsi, rdi
mov	rax, qword ptr [rbx]
lea	r10, [rbx + 0x10]
sub	rsi, r8
add	rsi, rdx
cmp	rax, r10
je	0x1400a1188
je	0x1400a1188
mov	r10, qword ptr [rbx + 0x10]
cmp	r10, rsi
jb	0x1400a1170
jb	0x1400a1170
lea	rbp, [rax + rcx*2]
mov	r10, rdx
add	rcx, r8
sub	r10, rcx
cmp	r9, rax
jae	0x1400a1148
jae	0x1400a1148
test	r10, r10
je	0x1400a110c
je	0x1400a110c
cmp	r8, rdi
je	0x1400a110c
je	0x1400a110c
lea	rdx, [rbp + r8*2]
lea	rcx, [rbp + rdi*2]
cmp	r10, 1
je	0x1400a1198
je	0x1400a1198
lea	r8, [r10 + r10]
mov	qword ptr [rsp + 0x78], r9
call	0x1400159a0
call	0x1400159a0
mov	r9, qword ptr [rsp + 0x78]
test	rdi, rdi
je	0x1400a112a
je	0x1400a112a
cmp	rdi, 1
je	0x1400a11b0
je	0x1400a11b0
lea	r8, [rdi + rdi]
mov	rdx, r9
mov	rcx, rbp
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rbx]
xor	edx, edx
mov	qword ptr [rbx + 8], rsi
mov	word ptr [rax + rsi*2], dx
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
lea	rax, [rax + rdx*2]
cmp	rax, r9
jb	0x1400a10db
jb	0x1400a10db
mov	qword ptr [rsp + 0x28], r10
mov	rdx, rbp
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], rdi
call	0x1400a19e0
call	0x1400a19e0
jmp	0x1400a112a
jmp	0x1400a112a
nop	dword ptr [rax + rax]
mov	qword ptr [rsp + 0x20], rdi
mov	rdx, rcx
mov	rcx, rbx
call	0x1400a3830
call	0x1400a3830
jmp	0x1400a112a
jmp	0x1400a112a
nop	word ptr [rax + rax]
mov	r10d, 7
jmp	0x1400a10c0
jmp	0x1400a10c0
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
test	rdi, rdi
je	0x1400a112a
je	0x1400a112a
jmp	0x1400a1111
jmp	0x1400a1111
nop	dword ptr [rax + rax]
movzx	eax, word ptr [r9]
mov	word ptr [rbp], ax
jmp	0x1400a112a
jmp	0x1400a112a
lea	rcx, [rip + 0x197d9]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, 0x7fffffff
sub	rcx, rdx
cmp	rcx, 0x7fffffff
jg	0x1400a11f0
jg	0x1400a11f0
cmp	rcx, -0x80000000
mov	eax, 0x80000000
cmovge	eax, ecx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx + 0x10], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, rdx
shr	rax, 0x3e
jne	0x1400a1230
jne	0x1400a1230
lea	rcx, [rdx + rdx]
add	rsp, 0x28
jmp	0x1400b2c30
jmp	0x1400b2c30
nop	word ptr [rax + rax]
test	rdx, rdx
js	0x1400a1240
js	0x1400a1240
call	0x1400b39b0
call	0x1400b39b0
nop	word ptr [rax + rax]
call	0x1400b39f0
call	0x1400b39f0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	qword ptr [rsp + 0x48], rdx
mov	rbx, rcx
mov	esi, r8d
mov	edi, r8d
cmp	rdx, 7
ja	0x1400a12c8
ja	0x1400a12c8
mov	rax, qword ptr [rcx]
test	rdx, rdx
jne	0x1400a12e6
jne	0x1400a12e6
xor	ecx, ecx
mov	qword ptr [rbx + 8], rdx
mov	word ptr [rax + rdx*2], cx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x48]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	rdx, qword ptr [rsp + 0x48]
mov	qword ptr [rbx], rax
mov	qword ptr [rbx + 0x10], rdx
test	rdx, rdx
je	0x1400a12b3
je	0x1400a12b3
xor	ecx, ecx
cmp	rdx, 1
je	0x1400a1318
je	0x1400a1318
test	dl, 1
je	0x1400a1300
je	0x1400a1300
mov	ecx, 1
mov	word ptr [rax], di
cmp	rcx, rdx
je	0x1400a12b3
je	0x1400a12b3
mov	word ptr [rax + rcx*2], di
mov	word ptr [rax + rcx*2 + 2], di
add	rcx, 2
cmp	rcx, rdx
jne	0x1400a1300
jne	0x1400a1300
jmp	0x1400a12b3
jmp	0x1400a12b3
nop	dword ptr [rax]
mov	word ptr [rax], si
jmp	0x1400a12b3
jmp	0x1400a12b3
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, r8
mov	rbx, rcx
mov	rdi, rdx
sub	rsi, rdx
mov	rbp, rsi
sar	rbp, 1
mov	qword ptr [rsp + 0x28], rbp
cmp	rsi, 0xe
ja	0x1400a13a0
ja	0x1400a13a0
mov	rcx, qword ptr [rcx]
cmp	rbp, 1
jne	0x1400a1380
jne	0x1400a1380
movzx	eax, word ptr [rdx]
mov	r12d, 1
mov	r13d, 2
mov	word ptr [rcx], ax
xor	eax, eax
mov	qword ptr [rbx + 8], r12
mov	word ptr [rcx + r13], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	r13, rsi
mov	r12, rbp
test	rbp, rbp
je	0x1400a1396
je	0x1400a1396
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
jmp	0x1400a1364
jmp	0x1400a1364
nop	dword ptr [rax + rax]
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	r12, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	qword ptr [rbx + 0x10], r12
lea	r13, [r12 + r12]
jmp	0x1400a1386
jmp	0x1400a1386
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, r8
mov	rbx, rcx
mov	rdi, rdx
sub	rsi, rdx
mov	rbp, rsi
sar	rbp, 1
mov	qword ptr [rsp + 0x28], rbp
cmp	rsi, 0xe
ja	0x1400a1450
ja	0x1400a1450
mov	rcx, qword ptr [rcx]
cmp	rbp, 1
jne	0x1400a1430
jne	0x1400a1430
movzx	eax, word ptr [rdx]
mov	r12d, 1
mov	r13d, 2
mov	word ptr [rcx], ax
xor	eax, eax
mov	qword ptr [rbx + 8], r12
mov	word ptr [rcx + r13], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	r13, rsi
mov	r12, rbp
test	rbp, rbp
je	0x1400a1446
je	0x1400a1446
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
jmp	0x1400a1414
jmp	0x1400a1414
nop	dword ptr [rax + rax]
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	r12, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	qword ptr [rbx + 0x10], r12
lea	r13, [r12 + r12]
jmp	0x1400a1436
jmp	0x1400a1436
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, r8
mov	rbx, rcx
mov	rdi, rdx
sub	rsi, rdx
mov	rbp, rsi
sar	rbp, 1
mov	qword ptr [rsp + 0x28], rbp
cmp	rsi, 0xe
ja	0x1400a1500
ja	0x1400a1500
mov	rcx, qword ptr [rcx]
cmp	rbp, 1
jne	0x1400a14e0
jne	0x1400a14e0
movzx	eax, word ptr [rdx]
mov	r12d, 1
mov	r13d, 2
mov	word ptr [rcx], ax
xor	eax, eax
mov	qword ptr [rbx + 8], r12
mov	word ptr [rcx + r13], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	r13, rsi
mov	r12, rbp
test	rbp, rbp
je	0x1400a14f6
je	0x1400a14f6
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
jmp	0x1400a14c4
jmp	0x1400a14c4
nop	dword ptr [rax + rax]
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	r12, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	qword ptr [rbx + 0x10], r12
lea	r13, [r12 + r12]
jmp	0x1400a14e6
jmp	0x1400a14e6
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, r8
mov	rbx, rcx
mov	rdi, rdx
sub	rsi, rdx
mov	rbp, rsi
sar	rbp, 1
mov	qword ptr [rsp + 0x28], rbp
mov	rax, rbp
cmp	rsi, 0xe
ja	0x1400a1570
ja	0x1400a1570
mov	rcx, qword ptr [rcx]
cmp	rbp, 1
jne	0x1400a158c
jne	0x1400a158c
movzx	edx, word ptr [rdx]
mov	word ptr [rcx], dx
mov	edx, 2
jmp	0x1400a159d
jmp	0x1400a159d
nop	
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x10], rax
test	rbp, rbp
jne	0x1400a15b0
jne	0x1400a15b0
mov	rax, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rbx]
lea	rdx, [rax + rax]
mov	qword ptr [rbx + 8], rax
xor	eax, eax
mov	word ptr [rcx + rdx], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
jmp	0x1400a1591
jmp	0x1400a1591
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, r8
mov	rbx, rcx
mov	rdi, rdx
sub	rsi, rdx
mov	rbp, rsi
sar	rbp, 1
mov	qword ptr [rsp + 0x28], rbp
mov	rax, rbp
cmp	rsi, 0xe
ja	0x1400a1600
ja	0x1400a1600
mov	rcx, qword ptr [rcx]
cmp	rbp, 1
jne	0x1400a161c
jne	0x1400a161c
movzx	edx, word ptr [rdx]
mov	word ptr [rcx], dx
mov	edx, 2
jmp	0x1400a162d
jmp	0x1400a162d
nop	
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x10], rax
test	rbp, rbp
jne	0x1400a1640
jne	0x1400a1640
mov	rax, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rbx]
lea	rdx, [rax + rax]
mov	qword ptr [rbx + 8], rax
xor	eax, eax
mov	word ptr [rcx + rdx], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
jmp	0x1400a1621
jmp	0x1400a1621
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, r8
mov	rbx, rcx
mov	rdi, rdx
sub	rsi, rdx
mov	rbp, rsi
sar	rbp, 1
mov	qword ptr [rsp + 0x28], rbp
cmp	rsi, 0xe
ja	0x1400a16d0
ja	0x1400a16d0
mov	rcx, qword ptr [rcx]
cmp	rbp, 1
jne	0x1400a16b0
jne	0x1400a16b0
movzx	eax, word ptr [rdx]
mov	r12d, 1
mov	r13d, 2
mov	word ptr [rcx], ax
xor	eax, eax
mov	qword ptr [rbx + 8], r12
mov	word ptr [rcx + r13], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	r13, rsi
mov	r12, rbp
test	rbp, rbp
je	0x1400a16c6
je	0x1400a16c6
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
jmp	0x1400a1694
jmp	0x1400a1694
nop	dword ptr [rax + rax]
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	r12, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	qword ptr [rbx + 0x10], r12
lea	r13, [r12 + r12]
jmp	0x1400a16b6
jmp	0x1400a16b6
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, r8
mov	rbx, rcx
mov	rdi, rdx
sub	rsi, rdx
mov	rbp, rsi
sar	rbp, 1
mov	qword ptr [rsp + 0x28], rbp
mov	rax, rbp
cmp	rsi, 0xe
ja	0x1400a1740
ja	0x1400a1740
mov	rcx, qword ptr [rcx]
cmp	rbp, 1
jne	0x1400a175c
jne	0x1400a175c
movzx	edx, word ptr [rdx]
mov	word ptr [rcx], dx
mov	edx, 2
jmp	0x1400a176d
jmp	0x1400a176d
nop	
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rbx + 0x10], rax
test	rbp, rbp
jne	0x1400a1780
jne	0x1400a1780
mov	rax, qword ptr [rsp + 0x28]
mov	rcx, qword ptr [rbx]
lea	rdx, [rax + rax]
mov	qword ptr [rbx + 8], rax
xor	eax, eax
mov	word ptr [rcx + rdx], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
jmp	0x1400a1761
jmp	0x1400a1761
nop	
nop	
nop	
lea	rax, [rcx + 0x10]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
mov	qword ptr [rcx + 8], rdx
xor	ecx, ecx
mov	word ptr [rax + rdx*2], cx
ret	
ret	
nop	
nop	
sub	r8, rdx
mov	rax, r8
sar	rax, 1
cmp	rax, 1
je	0x1400a17d0
je	0x1400a17d0
test	rax, rax
jne	0x1400a17c8
jne	0x1400a17c8
ret	
ret	
nop	dword ptr [rax]
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	r8, rdx
mov	rax, r8
sar	rax, 1
cmp	rax, 1
je	0x1400a1800
je	0x1400a1800
test	rax, rax
jne	0x1400a17f8
jne	0x1400a17f8
ret	
ret	
nop	dword ptr [rax]
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	r8, rdx
mov	rax, r8
sar	rax, 1
cmp	rax, 1
je	0x1400a1830
je	0x1400a1830
test	rax, rax
jne	0x1400a1828
jne	0x1400a1828
ret	
ret	
nop	dword ptr [rax]
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	r8, rdx
mov	rax, r8
sar	rax, 1
cmp	rax, 1
je	0x1400a1860
je	0x1400a1860
test	rax, rax
jne	0x1400a1858
jne	0x1400a1858
ret	
ret	
nop	dword ptr [rax]
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
call	0x1400a3400
call	0x1400a3400
nop	
add	rsp, 0x28
ret	
ret	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
movabs	rax, 0x1fffffffffffffff
mov	r13d, dword ptr [rsp + 0x90]
mov	r12d, r13d
mov	rbp, rdx
mov	rdx, qword ptr [rcx + 8]
add	rax, r8
mov	rbx, rcx
mov	rsi, r9
sub	rax, rdx
cmp	rax, r9
jb	0x1400a19c9
jb	0x1400a19c9
mov	rax, qword ptr [rcx]
mov	rdi, r9
lea	rcx, [rcx + 0x10]
sub	rdi, r8
add	rdi, rdx
cmp	rax, rcx
je	0x1400a19a0
je	0x1400a19a0
mov	rcx, qword ptr [rbx + 0x10]
cmp	rcx, rdi
jb	0x1400a1940
jb	0x1400a1940
lea	rcx, [r8 + rbp]
sub	rdx, rcx
je	0x1400a1918
je	0x1400a1918
cmp	r8, rsi
je	0x1400a1918
je	0x1400a1918
lea	rcx, [rax + rbp*2]
lea	r9, [rcx + r8*2]
lea	rcx, [rcx + rsi*2]
cmp	rdx, 1
je	0x1400a19b0
je	0x1400a19b0
lea	r8, [rdx + rdx]
mov	rdx, r9
call	0x1400159a0
call	0x1400159a0
mov	rax, qword ptr [rbx]
nop	word ptr [rax + rax]
test	rsi, rsi
jne	0x1400a195b
jne	0x1400a195b
xor	edx, edx
mov	qword ptr [rbx + 8], rdi
mov	word ptr [rax + rdi*2], dx
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr [rax + rax]
mov	qword ptr [rsp + 0x20], rsi
xor	r9d, r9d
mov	rdx, rbp
mov	rcx, rbx
call	0x1400a3830
call	0x1400a3830
mov	rax, qword ptr [rbx]
test	rsi, rsi
je	0x1400a191d
je	0x1400a191d
lea	rcx, [rax + rbp*2]
xor	edx, edx
cmp	rsi, 1
je	0x1400a19c0
je	0x1400a19c0
test	sil, 1
je	0x1400a1980
je	0x1400a1980
mov	word ptr [rcx], r12w
mov	edx, 1
nop	word ptr cs:[rax + rax]
mov	word ptr [rcx + rdx*2], r12w
mov	word ptr [rcx + rdx*2 + 2], r12w
add	rdx, 2
cmp	rsi, rdx
jne	0x1400a1980
jne	0x1400a1980
jmp	0x1400a191d
jmp	0x1400a191d
nop	word ptr cs:[rax + rax]
mov	ecx, 7
jmp	0x1400a18da
jmp	0x1400a18da
nop	word ptr [rax + rax]
movzx	edx, word ptr [r9]
mov	word ptr [rcx], dx
jmp	0x1400a1918
jmp	0x1400a1918
nop	dword ptr [rax]
mov	word ptr [rcx], r13w
jmp	0x1400a191d
jmp	0x1400a191d
lea	rcx, [rip + 0x18f85]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rdi, qword ptr [rsp + 0x80]
mov	r12, qword ptr [rsp + 0x88]
lea	rax, [rdi - 1]
mov	rbp, rdx
mov	rsi, r8
mov	rbx, r9
cmp	rax, r8
jae	0x1400a1a2b
jae	0x1400a1a2b
cmp	rdi, 1
jne	0x1400a1a1d
jne	0x1400a1a1d
mov	ax, word ptr [r9]
mov	word ptr [rdx], ax
jmp	0x1400a1a2b
jmp	0x1400a1a2b
mov	r8, rdi
mov	rdx, r9
mov	rcx, rbp
call	0x1400a2bd0
call	0x1400a2bd0
test	r12, r12
je	0x1400a1a59
je	0x1400a1a59
cmp	rdi, rsi
je	0x1400a1a59
je	0x1400a1a59
lea	rdx, [rsi + rsi]
lea	rcx, [rdi + rdi]
add	rdx, rbp
add	rcx, rbp
cmp	r12, 1
jne	0x1400a1a51
jne	0x1400a1a51
mov	ax, word ptr [rdx]
mov	word ptr [rcx], ax
jmp	0x1400a1a59
jmp	0x1400a1a59
mov	r8, r12
call	0x1400a2bd0
call	0x1400a2bd0
cmp	rsi, rdi
jae	0x1400a1b1b
jae	0x1400a1b1b
lea	r12, [rdi + rdi]
lea	r13, [rsi + rsi]
add	r13, rbp
lea	rax, [rbx + r12]
cmp	r13, rax
jb	0x1400a1aa2
jb	0x1400a1aa2
cmp	rdi, 1
jne	0x1400a1a88
jne	0x1400a1a88
mov	ax, word ptr [rbx]
mov	word ptr [rbp], ax
jmp	0x1400a1b1b
jmp	0x1400a1b1b
mov	r8, rdi
mov	rdx, rbx
mov	rcx, rbp
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
jmp	0x1400a2bd0
jmp	0x1400a2bd0
cmp	rbx, r13
jb	0x1400a1aca
jb	0x1400a1aca
sub	rbx, rbp
sar	rbx, 1
add	rbx, rdi
sub	rbx, rsi
add	rbx, rbx
dec	rdi
lea	rsi, [rbp + rbx]
je	0x1400a1b04
je	0x1400a1b04
mov	rdi, rbp
mov	rcx, r12
rep movsb	byte ptr [rdi], byte ptr [rsi]
jmp	0x1400a1b1b
jmp	0x1400a1b1b
sub	r13, rbx
mov	rsi, r13
sar	rsi, 1
cmp	r13, 2
jne	0x1400a1ae2
jne	0x1400a1ae2
mov	ax, word ptr [rbx]
mov	word ptr [rbp], ax
jmp	0x1400a1af0
jmp	0x1400a1af0
mov	r8, rsi
mov	rdx, rbx
mov	rcx, rbp
call	0x1400a2bd0
call	0x1400a2bd0
mov	rax, rdi
sub	rax, rsi
lea	rsi, [rbp + r12]
add	rbp, r13
cmp	rax, 1
jne	0x1400a1b0d
jne	0x1400a1b0d
mov	ax, word ptr [rsi]
mov	word ptr [rbp], ax
jmp	0x1400a1b1b
jmp	0x1400a1b1b
test	rax, rax
je	0x1400a1b1b
je	0x1400a1b1b
lea	rcx, [rax + rax]
mov	rdi, rbp
rep movsb	byte ptr [rdi], byte ptr [rsi]
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rcx + 0x10]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	qword ptr [rsp + 0x28], rdx
mov	rbx, rcx
mov	esi, r8d
mov	edi, r8d
cmp	rdx, 7
ja	0x1400a1b88
ja	0x1400a1b88
mov	rax, qword ptr [rcx]
test	rdx, rdx
jne	0x1400a1ba6
jne	0x1400a1ba6
xor	ecx, ecx
mov	qword ptr [rbx + 8], rdx
mov	word ptr [rax + rdx*2], cx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	rdx, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	qword ptr [rbx + 0x10], rdx
test	rdx, rdx
je	0x1400a1b73
je	0x1400a1b73
xor	ecx, ecx
cmp	rdx, 1
je	0x1400a1bd8
je	0x1400a1bd8
test	dl, 1
je	0x1400a1bc0
je	0x1400a1bc0
mov	ecx, 1
mov	word ptr [rax], di
cmp	rcx, rdx
je	0x1400a1b73
je	0x1400a1b73
mov	word ptr [rax + rcx*2], di
mov	word ptr [rax + rcx*2 + 2], di
add	rcx, 2
cmp	rcx, rdx
jne	0x1400a1bc0
jne	0x1400a1bc0
jmp	0x1400a1b73
jmp	0x1400a1b73
nop	dword ptr [rax]
mov	word ptr [rax], si
jmp	0x1400a1b73
jmp	0x1400a1b73
nop	
nop	
nop	
sub	rsp, 0x28
mov	r8, qword ptr [rcx + 8]
cmp	rdx, r8
jae	0x1400a1bf9
jae	0x1400a1bf9
mov	rax, qword ptr [rcx]
lea	rax, [rax + rdx*2]
add	rsp, 0x28
ret	
ret	
lea	rcx, [rip + 0x18ce8]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rcx + 8]
mov	rax, qword ptr [rcx]
lea	rax, [rax + rdx*2]
ret	
ret	
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rcx + 8]
mov	rax, qword ptr [rcx]
lea	rax, [rax + rdx*2 - 2]
ret	
ret	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
mov	rax, rcx
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbp, rcx
mov	rbx, rdx
cmp	rcx, rdx
je	0x1400a1c95
je	0x1400a1c95
mov	rsi, qword ptr [rcx]
lea	r12, [rcx + 0x10]
mov	rdi, qword ptr [rdx]
cmp	rsi, r12
je	0x1400a1ca8
je	0x1400a1ca8
mov	rax, qword ptr [rdx + 8]
lea	rdx, [rdx + 0x10]
mov	r13, qword ptr [rcx + 0x10]
cmp	rdi, rdx
je	0x1400a1ce0
je	0x1400a1ce0
mov	rdx, qword ptr [rbx + 0x10]
mov	qword ptr [rcx], rdi
mov	qword ptr [rbx], rsi
mov	qword ptr [rcx + 0x10], rdx
mov	qword ptr [rbx + 0x10], r13
mov	rdx, qword ptr [rbp + 8]
mov	qword ptr [rbp + 8], rax
mov	qword ptr [rbx + 8], rdx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr [rax + rax]
lea	r13, [rbx + 0x10]
mov	rdx, qword ptr [rcx + 8]
cmp	r13, rdi
je	0x1400a1d00
je	0x1400a1d00
mov	r12, qword ptr [rbx + 0x10]
lea	r8, [rdx + rdx + 2]
mov	rcx, r13
mov	rdx, rsi
call	0x140015998
call	0x140015998
mov	qword ptr [rbp], rdi
mov	rax, qword ptr [rbx + 8]
mov	qword ptr [rbx], r13
mov	rdx, qword ptr [rbp + 8]
mov	qword ptr [rbp + 0x10], r12
jmp	0x1400a1c8d
jmp	0x1400a1c8d
nop	
lea	r8, [rax + rax + 2]
mov	rdx, rdi
mov	rcx, r12
call	0x140015998
call	0x140015998
mov	qword ptr [rbx], rsi
mov	rax, qword ptr [rbx + 8]
mov	qword ptr [rbp], r12
jmp	0x1400a1c85
jmp	0x1400a1c85
nop	dword ptr [rax]
mov	rax, qword ptr [rbx + 8]
test	rdx, rdx
je	0x1400a1d60
je	0x1400a1d60
lea	rdi, [rdx + rdx + 2]
test	rax, rax
jne	0x1400a1d98
jne	0x1400a1d98
cmp	edi, 8
jae	0x1400a1e3d
jae	0x1400a1e3d
test	dil, 4
jne	0x1400a1ea0
jne	0x1400a1ea0
test	edi, edi
je	0x1400a1d46
je	0x1400a1d46
movzx	eax, byte ptr [rsi]
mov	byte ptr [rbx + 0x10], al
test	dil, 2
jne	0x1400a1ecf
jne	0x1400a1ecf
mov	rsi, qword ptr [rbp]
mov	rdx, qword ptr [rbp + 8]
xor	eax, eax
mov	qword ptr [rbx + 8], rdx
mov	qword ptr [rbp + 8], 0
mov	word ptr [rsi], ax
jmp	0x1400a1c95
jmp	0x1400a1c95
nop	dword ptr [rax]
xor	edx, edx
test	rax, rax
je	0x1400a1c8d
je	0x1400a1c8d
mov	rdx, r13
lea	r8, [rax + rax + 2]
mov	rcx, rsi
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rbx + 8]
xor	edx, edx
mov	qword ptr [rbp + 8], rax
mov	rax, qword ptr [rbx]
mov	qword ptr [rbx + 8], 0
mov	word ptr [rax], dx
jmp	0x1400a1c95
jmp	0x1400a1c95
lea	r9, [rsp + 0x20]
lea	rsi, [rax + rax + 2]
mov	rdx, r13
mov	rcx, r9
mov	r8, rsi
call	0x140015998
call	0x140015998
mov	r9, rax
cmp	edi, 8
jae	0x1400a1df2
jae	0x1400a1df2
test	dil, 4
jne	0x1400a1e89
jne	0x1400a1e89
test	edi, edi
je	0x1400a1dd7
je	0x1400a1dd7
movzx	eax, byte ptr [rbp + 0x10]
mov	byte ptr [rbx + 0x10], al
test	dil, 2
jne	0x1400a1ebc
jne	0x1400a1ebc
mov	rdx, r9
mov	r8, rsi
mov	rcx, r12
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rbx + 8]
mov	rdx, qword ptr [rbp + 8]
jmp	0x1400a1c8d
jmp	0x1400a1c8d
mov	rax, qword ptr [rbp + 0x10]
lea	r8, [rbx + 0x18]
mov	r11, r12
and	r8, 0xfffffffffffffff8
mov	qword ptr [rbx + 0x10], rax
mov	eax, edi
mov	rdx, qword ptr [r12 + rax - 8]
mov	qword ptr [r13 + rax - 8], rdx
sub	r13, r8
lea	eax, [rdi + r13]
sub	r11, r13
and	eax, 0xfffffff8
cmp	eax, 8
jb	0x1400a1dd7
jb	0x1400a1dd7
and	eax, 0xfffffff8
mov	edx, eax
xor	eax, eax
mov	ecx, eax
add	eax, 8
mov	r10, qword ptr [r11 + rcx]
mov	qword ptr [r8 + rcx], r10
cmp	eax, edx
jb	0x1400a1e2a
jb	0x1400a1e2a
jmp	0x1400a1dd7
jmp	0x1400a1dd7
mov	rax, qword ptr [rsi]
lea	r8, [rbx + 0x18]
and	r8, 0xfffffffffffffff8
mov	qword ptr [rbx + 0x10], rax
mov	eax, edi
mov	rdx, qword ptr [rsi + rax - 8]
mov	qword ptr [r13 + rax - 8], rdx
sub	r13, r8
lea	eax, [rdi + r13]
sub	rsi, r13
and	eax, 0xfffffff8
cmp	eax, 8
jb	0x1400a1d3e
jb	0x1400a1d3e
and	eax, 0xfffffff8
xor	edx, edx
mov	ecx, edx
add	edx, 8
mov	r9, qword ptr [rsi + rcx]
mov	qword ptr [r8 + rcx], r9
cmp	edx, eax
jb	0x1400a1e73
jb	0x1400a1e73
jmp	0x1400a1d3e
jmp	0x1400a1d3e
mov	eax, dword ptr [rbp + 0x10]
mov	edi, edi
mov	dword ptr [rbx + 0x10], eax
mov	eax, dword ptr [r12 + rdi - 4]
mov	dword ptr [r13 + rdi - 4], eax
jmp	0x1400a1dd7
jmp	0x1400a1dd7
mov	eax, dword ptr [rsi]
mov	edi, edi
mov	dword ptr [rbx + 0x10], eax
mov	eax, dword ptr [rsi + rdi - 4]
mov	dword ptr [r13 + rdi - 4], eax
mov	rsi, qword ptr [rcx]
mov	rdx, qword ptr [rcx + 8]
jmp	0x1400a1d46
jmp	0x1400a1d46
mov	edi, edi
movzx	eax, word ptr [r12 + rdi - 2]
mov	word ptr [r13 + rdi - 2], ax
jmp	0x1400a1dd7
jmp	0x1400a1dd7
mov	edi, edi
movzx	eax, word ptr [rsi + rdi - 2]
mov	word ptr [r13 + rdi - 2], ax
mov	rsi, qword ptr [rcx]
mov	rdx, qword ptr [rcx + 8]
jmp	0x1400a1d46
jmp	0x1400a1d46
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	edx, edx
mov	rax, qword ptr [rcx]
mov	qword ptr [rcx + 8], 0
mov	word ptr [rax], dx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rcx, qword ptr [rcx]
mov	rsi, rdx
mov	rax, rdx
mov	rdx, qword ptr [rbx + 8]
sub	rsi, rcx
lea	r9, [rdx - 1]
mov	rdx, rsi
sar	rdx, 1
mov	r8, r9
sub	r8, rdx
je	0x1400a1f70
je	0x1400a1f70
lea	rdx, [rcx + rsi + 2]
cmp	r8, 1
je	0x1400a1f88
je	0x1400a1f88
mov	rcx, rax
add	r8, r8
call	0x1400159a0
call	0x1400159a0
mov	rcx, qword ptr [rbx]
lea	rax, [rcx + rsi]
mov	rsi, qword ptr [rbx + 8]
lea	r9, [rsi - 1]
xor	edx, edx
mov	qword ptr [rbx + 8], r9
mov	word ptr [rcx + r9*2], dx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
movzx	edx, word ptr [rdx]
mov	word ptr [rax], dx
jmp	0x1400a1f70
jmp	0x1400a1f70
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, rdx
mov	rdx, qword ptr [rcx]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 8]
mov	rsi, rax
sub	rsi, rdx
lea	rdx, [rdx + rcx*2]
mov	r9, rsi
sar	r9, 1
cmp	r8, rdx
je	0x1400a1fe0
je	0x1400a1fe0
sub	r8, rax
mov	rdx, r9
mov	rcx, rbx
sar	r8, 1
call	0x1400a35d0
call	0x1400a35d0
mov	rax, qword ptr [rbx]
add	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
xor	edx, edx
mov	qword ptr [rbx + 8], r9
mov	word ptr [rax], dx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
push	rsi
push	rbx
sub	rsp, 0x28
mov	r8d, 1
mov	rbx, rdx
sub	rbx, qword ptr [rcx]
mov	rsi, rcx
mov	rdx, rbx
sar	rdx, 1
call	0x1400a35d0
call	0x1400a35d0
mov	rax, qword ptr [rsi]
add	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, rdx
mov	rdx, qword ptr [rcx]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 8]
mov	rsi, rax
sub	rsi, rdx
lea	rdx, [rdx + rcx*2]
mov	r9, rsi
sar	r9, 1
cmp	r8, rdx
je	0x1400a2070
je	0x1400a2070
sub	r8, rax
mov	rdx, r9
mov	rcx, rbx
sar	r8, 1
call	0x1400a35d0
call	0x1400a35d0
mov	rax, qword ptr [rbx]
add	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
xor	edx, edx
mov	qword ptr [rbx + 8], r9
mov	word ptr [rax], dx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
sub	rsp, 0x28
mov	r9, qword ptr [rcx + 8]
mov	rax, rcx
cmp	r9, rdx
jb	0x1400a20d4
jb	0x1400a20d4
cmp	r8, -1
je	0x1400a20c0
je	0x1400a20c0
test	r8, r8
jne	0x1400a20a0
jne	0x1400a20a0
add	rsp, 0x28
ret	
ret	
sub	r9, rdx
mov	qword ptr [rsp + 0x30], rcx
cmp	r9, r8
cmovbe	r8, r9
call	0x1400a35d0
call	0x1400a35d0
mov	rax, qword ptr [rsp + 0x30]
add	rsp, 0x28
ret	
ret	
nop	
mov	qword ptr [rcx + 8], rdx
mov	rcx, qword ptr [rcx]
xor	r8d, r8d
mov	word ptr [rcx + rdx*2], r8w
add	rsp, 0x28
ret	
ret	
mov	r8, rdx
lea	rcx, [rip + 0x1876a]
lea	rdx, [rip + 0x1885c]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rbx, rcx
mov	rcx, rdx
mov	rsi, rdx
call	0x140015a60
call	0x140015a60
mov	rcx, qword ptr [rbx + 8]
movabs	rdx, 0x1fffffffffffffff
sub	rdx, rcx
cmp	rdx, rax
jb	0x1400a21b8
jb	0x1400a21b8
mov	rdx, qword ptr [rbx]
lea	r8, [rbx + 0x10]
lea	rdi, [rcx + rax]
cmp	rdx, r8
je	0x1400a21a0
je	0x1400a21a0
mov	r8, qword ptr [rbx + 0x10]
cmp	r8, rdi
jb	0x1400a2180
jb	0x1400a2180
test	rax, rax
je	0x1400a2166
je	0x1400a2166
lea	rcx, [rdx + rcx*2]
cmp	rax, 1
je	0x1400a21b0
je	0x1400a21b0
mov	rdx, rsi
lea	r8, [rax + rax]
call	0x140015998
call	0x140015998
mov	rdx, qword ptr [rbx]
xor	eax, eax
mov	qword ptr [rbx + 8], rdi
mov	word ptr [rdx + rdi*2], ax
mov	rax, rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
mov	qword ptr [rsp + 0x20], rax
mov	rdx, rcx
mov	r9, rsi
xor	r8d, r8d
mov	rcx, rbx
call	0x1400a3830
call	0x1400a3830
mov	rdx, qword ptr [rbx]
jmp	0x1400a2166
jmp	0x1400a2166
nop	dword ptr [rax + rax]
mov	r8d, 7
jmp	0x1400a2143
jmp	0x1400a2143
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rsi]
mov	word ptr [rcx], ax
jmp	0x1400a2166
jmp	0x1400a2166
lea	rcx, [rip + 0x1876d]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
movabs	rax, 0x1fffffffffffffff
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 8]
sub	rax, rcx
cmp	rax, r8
jb	0x1400a2278
jb	0x1400a2278
mov	rax, qword ptr [rbx]
lea	r9, [rbx + 0x10]
lea	rsi, [r8 + rcx]
cmp	rax, r9
je	0x1400a2260
je	0x1400a2260
mov	r9, qword ptr [rbx + 0x10]
cmp	r9, rsi
jb	0x1400a2240
jb	0x1400a2240
test	r8, r8
je	0x1400a2226
je	0x1400a2226
lea	rcx, [rax + rcx*2]
cmp	r8, 1
je	0x1400a2270
je	0x1400a2270
add	r8, r8
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rbx]
xor	edx, edx
mov	qword ptr [rbx + 8], rsi
mov	word ptr [rax + rsi*2], dx
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
mov	qword ptr [rsp + 0x20], r8
mov	r9, rdx
xor	r8d, r8d
mov	rdx, rcx
mov	rcx, rbx
call	0x1400a3830
call	0x1400a3830
mov	rax, qword ptr [rbx]
jmp	0x1400a2226
jmp	0x1400a2226
nop	dword ptr [rax + rax]
mov	r9d, 7
jmp	0x1400a2207
jmp	0x1400a2207
nop	dword ptr [rax + rax]
movzx	edx, word ptr [rdx]
mov	word ptr [rcx], dx
jmp	0x1400a2226
jmp	0x1400a2226
lea	rcx, [rip + 0x186ad]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
movabs	rax, 0x1fffffffffffffff
mov	r8, qword ptr [rdx + 8]
mov	r9, qword ptr [rdx]
mov	rdx, qword ptr [rcx + 8]
sub	rax, rdx
mov	rbx, rcx
cmp	rax, r8
jb	0x1400a2329
jb	0x1400a2329
mov	rax, qword ptr [rcx]
lea	rcx, [rcx + 0x10]
lea	rsi, [r8 + rdx]
cmp	rax, rcx
je	0x1400a2318
je	0x1400a2318
mov	rcx, qword ptr [rbx + 0x10]
cmp	rcx, rsi
jb	0x1400a2300
jb	0x1400a2300
test	r8, r8
je	0x1400a22ec
je	0x1400a22ec
lea	rcx, [rax + rdx*2]
cmp	r8, 1
je	0x1400a2320
je	0x1400a2320
add	r8, r8
mov	rdx, r9
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rbx]
xor	edx, edx
mov	qword ptr [rbx + 8], rsi
mov	word ptr [rax + rsi*2], dx
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	qword ptr [rsp + 0x20], r8
mov	rcx, rbx
xor	r8d, r8d
call	0x1400a3830
call	0x1400a3830
mov	rax, qword ptr [rbx]
jmp	0x1400a22ec
jmp	0x1400a22ec
nop	dword ptr [rax]
mov	ecx, 7
jmp	0x1400a22ca
jmp	0x1400a22ca
nop	
movzx	edx, word ptr [r9]
mov	word ptr [rcx], dx
jmp	0x1400a22ec
jmp	0x1400a22ec
lea	rcx, [rip + 0x185fc]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, rcx
mov	rcx, qword ptr [rdx + 8]
mov	rdx, qword ptr [rdx]
mov	rax, rcx
sub	rax, r8
cmp	rax, r9
cmova	rax, r9
cmp	rcx, r8
jb	0x1400a240a
jb	0x1400a240a
movabs	rcx, 0x1fffffffffffffff
lea	r9, [rdx + r8*2]
mov	rdx, qword ptr [rbx + 8]
sub	rcx, rdx
cmp	rcx, rax
jb	0x1400a2420
jb	0x1400a2420
mov	rcx, qword ptr [rbx]
lea	r8, [rbx + 0x10]
lea	rsi, [rax + rdx]
cmp	rcx, r8
je	0x1400a23f0
je	0x1400a23f0
mov	r8, qword ptr [rbx + 0x10]
cmp	r8, rsi
jb	0x1400a23d8
jb	0x1400a23d8
test	rax, rax
je	0x1400a23be
je	0x1400a23be
lea	r10, [rcx + rdx*2]
cmp	rax, 1
je	0x1400a2400
je	0x1400a2400
mov	rcx, r10
lea	r8, [rax + rax]
mov	rdx, r9
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
xor	eax, eax
mov	qword ptr [rbx + 8], rsi
mov	word ptr [rcx + rsi*2], ax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
mov	qword ptr [rsp + 0x20], rax
mov	rcx, rbx
xor	r8d, r8d
call	0x1400a3830
call	0x1400a3830
mov	rcx, qword ptr [rbx]
jmp	0x1400a23be
jmp	0x1400a23be
nop	dword ptr [rax]
mov	r8d, 7
jmp	0x1400a2398
jmp	0x1400a2398
nop	dword ptr [rax + rax]
movzx	eax, word ptr [r9]
mov	word ptr [r10], ax
jmp	0x1400a23be
jmp	0x1400a23be
mov	r9, rcx
lea	rdx, [rip + 0x18518]
lea	rcx, [rip + 0x1842d]
call	0x1400aed20
call	0x1400aed20
lea	rcx, [rip + 0x18505]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
movabs	rax, 0x1fffffffffffffff
mov	r9, qword ptr [rdx]
mov	r8, qword ptr [rdx + 8]
mov	rdx, qword ptr [rcx + 8]
sub	rax, rdx
mov	rbx, rcx
cmp	rax, r8
jb	0x1400a24c9
jb	0x1400a24c9
mov	rax, qword ptr [rcx]
lea	rcx, [rcx + 0x10]
lea	rsi, [r8 + rdx]
cmp	rax, rcx
je	0x1400a24b8
je	0x1400a24b8
mov	rcx, qword ptr [rbx + 0x10]
cmp	rcx, rsi
jb	0x1400a24a0
jb	0x1400a24a0
test	r8, r8
je	0x1400a248c
je	0x1400a248c
lea	rcx, [rax + rdx*2]
cmp	r8, 1
je	0x1400a24c0
je	0x1400a24c0
add	r8, r8
mov	rdx, r9
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rbx]
xor	edx, edx
mov	qword ptr [rbx + 8], rsi
mov	word ptr [rax + rsi*2], dx
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	qword ptr [rsp + 0x20], r8
mov	rcx, rbx
xor	r8d, r8d
call	0x1400a3830
call	0x1400a3830
mov	rax, qword ptr [rbx]
jmp	0x1400a248c
jmp	0x1400a248c
nop	dword ptr [rax]
mov	ecx, 7
jmp	0x1400a246a
jmp	0x1400a246a
nop	
movzx	edx, word ptr [r9]
mov	word ptr [rcx], dx
jmp	0x1400a248c
jmp	0x1400a248c
lea	rcx, [rip + 0x1845c]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
movzx	r8d, r8w
mov	r9, rdx
mov	rdx, qword ptr [rcx + 8]
mov	dword ptr [rsp + 0x20], r8d
xor	r8d, r8d
call	0x1400a1880
call	0x1400a1880
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	r8, qword ptr [rdx + 8]
mov	rsi, rcx
mov	rcx, qword ptr [rcx]
mov	rbx, rdx
mov	rdx, qword ptr [rdx]
lea	rax, [rsi + 0x10]
cmp	rcx, rax
lea	rax, [rbx + 0x10]
je	0x1400a2570
je	0x1400a2570
cmp	rax, rdx
je	0x1400a2590
je	0x1400a2590
movq	xmm0, r8
mov	r9, qword ptr [rsi + 0x10]
mov	qword ptr [rsi], rdx
movhps	xmm0, qword ptr [rbx + 0x10]
movups	xmmword ptr [rsi + 8], xmm0
test	rcx, rcx
je	0x1400a25c8
je	0x1400a25c8
mov	qword ptr [rbx], rcx
mov	qword ptr [rbx + 0x10], r9
xor	eax, eax
mov	qword ptr [rbx + 8], 0
mov	word ptr [rcx], ax
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
cmp	rax, rdx
je	0x1400a2590
je	0x1400a2590
movq	xmm0, r8
mov	qword ptr [rsi], rdx
mov	rcx, rax
movhps	xmm0, qword ptr [rbx + 0x10]
movups	xmmword ptr [rsi + 8], xmm0
mov	qword ptr [rbx], rcx
jmp	0x1400a2558
jmp	0x1400a2558
nop	dword ptr [rax]
cmp	rsi, rbx
je	0x1400a25e0
je	0x1400a25e0
test	r8, r8
je	0x1400a25b2
je	0x1400a25b2
cmp	r8, 1
je	0x1400a25d0
je	0x1400a25d0
add	r8, r8
call	0x140015998
call	0x140015998
mov	r8, qword ptr [rbx + 8]
mov	rcx, qword ptr [rsi]
mov	rdx, qword ptr [rbx]
xor	r9d, r9d
mov	qword ptr [rsi + 8], r8
mov	word ptr [rcx + r8*2], r9w
mov	rcx, rdx
jmp	0x1400a2558
jmp	0x1400a2558
nop	dword ptr [rax + rax]
mov	rcx, rax
jmp	0x1400a2588
jmp	0x1400a2588
nop	dword ptr [rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
jmp	0x1400a25b2
jmp	0x1400a25b2
nop	dword ptr [rax + rax]
mov	rcx, rdx
jmp	0x1400a2558
jmp	0x1400a2558
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, rcx
mov	rcx, rdx
mov	rsi, rdx
call	0x140015a60
call	0x140015a60
mov	r9, rsi
xor	edx, edx
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], rax
mov	r8, qword ptr [rbx + 8]
call	0x1400a1070
call	0x1400a1070
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	qword ptr [rsp + 0x20], r8
mov	r8, qword ptr [rcx + 8]
mov	r9, rdx
xor	edx, edx
call	0x1400a1070
call	0x1400a1070
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x1400a36f0
call	0x1400a36f0
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	r10, qword ptr [rdx + 8]
mov	rdx, qword ptr [rdx]
mov	rax, r10
sub	rax, r8
cmp	rax, r9
cmova	rax, r9
cmp	r10, r8
jb	0x1400a26a6
jb	0x1400a26a6
mov	qword ptr [rsp + 0x20], rax
lea	r9, [rdx + r8*2]
mov	r8, qword ptr [rcx + 8]
xor	edx, edx
call	0x1400a1070
call	0x1400a1070
add	rsp, 0x38
ret	
ret	
mov	r9, r10
lea	rdx, [rip + 0x18306]
lea	rcx, [rip + 0x18191]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rdx + 8]
mov	r8, qword ptr [rcx + 8]
mov	qword ptr [rsp + 0x20], rax
mov	r9, qword ptr [rdx]
xor	edx, edx
call	0x1400a1070
call	0x1400a1070
add	rsp, 0x38
ret	
ret	
sub	rsp, 0x38
movzx	r8d, r8w
mov	r9, rdx
xor	edx, edx
mov	dword ptr [rsp + 0x20], r8d
mov	r8, qword ptr [rcx + 8]
call	0x1400a1880
call	0x1400a1880
add	rsp, 0x38
ret	
ret	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rax, qword ptr [r8 + 8]
mov	r9, qword ptr [r8]
add	rax, rax
sar	rax, 1
mov	rsi, rdx
sub	rsi, qword ptr [rcx]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 8]
mov	rdx, rsi
sar	rdx, 1
cmp	rcx, rdx
jb	0x1400a2748
jb	0x1400a2748
mov	qword ptr [rsp + 0x20], rax
xor	r8d, r8d
mov	rcx, rbx
call	0x1400a1070
call	0x1400a1070
mov	rax, qword ptr [rbx]
add	rax, rsi
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	r9, rcx
mov	r8, rdx
lea	rcx, [rip + 0x180f3]
lea	rdx, [rip + 0x1822b]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	r9d, 1
movzx	r8d, r8w
mov	rbx, rdx
sub	rbx, qword ptr [rcx]
mov	rsi, rcx
mov	dword ptr [rsp + 0x20], r8d
mov	rdx, rbx
xor	r8d, r8d
sar	rdx, 1
call	0x1400a1880
call	0x1400a1880
mov	rax, qword ptr [rsi]
add	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
movzx	r9d, r9w
mov	rbx, rdx
sub	rbx, qword ptr [rcx]
mov	rsi, rcx
mov	dword ptr [rsp + 0x20], r9d
mov	rdx, rbx
mov	r9, r8
xor	r8d, r8d
sar	rdx, 1
call	0x1400a1880
call	0x1400a1880
mov	rax, qword ptr [rsi]
add	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
sub	rdx, qword ptr [rcx]
mov	rax, qword ptr [rcx + 8]
sar	rdx, 1
mov	r9, qword ptr [r8]
mov	r8, qword ptr [r8 + 8]
cmp	rax, rdx
jb	0x1400a281d
jb	0x1400a281d
mov	qword ptr [rsp + 0x20], r8
xor	r8d, r8d
call	0x1400a1070
call	0x1400a1070
nop	
add	rsp, 0x38
ret	
ret	
mov	r8, rdx
mov	r9, rax
lea	rdx, [rip + 0x1815d]
lea	rcx, [rip + 0x18017]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	r9d, 1
movzx	r8d, r8w
mov	rbx, rdx
sub	rbx, qword ptr [rcx]
mov	rsi, rcx
mov	dword ptr [rsp + 0x20], r8d
mov	rdx, rbx
xor	r8d, r8d
sar	rdx, 1
call	0x1400a1880
call	0x1400a1880
mov	rax, qword ptr [rsi]
add	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
sub	rdx, qword ptr [rcx]
sar	rdx, 1
movzx	r9d, r9w
mov	dword ptr [rsp + 0x20], r9d
mov	r9, r8
xor	r8d, r8d
call	0x1400a1880
call	0x1400a1880
nop	
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rsi, rcx
mov	rcx, r8
mov	rbx, rdx
mov	rdi, r8
call	0x140015a60
call	0x140015a60
mov	r9, qword ptr [rsi + 8]
cmp	r9, rbx
jb	0x1400a28ef
jb	0x1400a28ef
mov	qword ptr [rsp + 0x20], rax
mov	r9, rdi
xor	r8d, r8d
mov	rdx, rbx
mov	rcx, rsi
call	0x1400a1070
call	0x1400a1070
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	r8, rbx
lea	rdx, [rip + 0x1808e]
lea	rcx, [rip + 0x17f48]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rcx + 8]
cmp	rax, rdx
jb	0x1400a2932
jb	0x1400a2932
mov	qword ptr [rsp + 0x20], r9
mov	r9, r8
xor	r8d, r8d
call	0x1400a1070
call	0x1400a1070
add	rsp, 0x38
ret	
ret	
mov	r8, rdx
mov	r9, rax
lea	rdx, [rip + 0x18048]
lea	rcx, [rip + 0x17f02]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rcx + 8]
mov	r10, qword ptr [r8 + 8]
mov	r9, qword ptr [r8]
cmp	rax, rdx
jb	0x1400a2976
jb	0x1400a2976
mov	qword ptr [rsp + 0x20], r10
xor	r8d, r8d
call	0x1400a1070
call	0x1400a1070
add	rsp, 0x38
ret	
ret	
mov	r8, rdx
mov	r9, rax
lea	rdx, [rip + 0x18004]
lea	rcx, [rip + 0x17ebe]
call	0x1400aed20
call	0x1400aed20
nop	
sub	rsp, 0x28
mov	r11, qword ptr [rsp + 0x50]
mov	rax, r9
mov	r9, qword ptr [r8 + 8]
mov	r10, rcx
mov	r8, qword ptr [r8]
mov	rcx, r9
sub	rcx, rax
cmp	rcx, r11
cmova	rcx, r11
cmp	r9, rax
jb	0x1400a29d9
jb	0x1400a29d9
lea	r9, [r8 + rax*2]
mov	rax, qword ptr [r10 + 8]
cmp	rax, rdx
jb	0x1400a29ef
jb	0x1400a29ef
mov	qword ptr [rsp + 0x50], rcx
xor	r8d, r8d
mov	rcx, r10
add	rsp, 0x28
jmp	0x1400a1070
jmp	0x1400a1070
mov	r8, rax
lea	rdx, [rip + 0x17f8f]
lea	rcx, [rip + 0x17e5e]
call	0x1400aed20
call	0x1400aed20
mov	r8, rdx
mov	r9, rax
lea	rdx, [rip + 0x17f8b]
lea	rcx, [rip + 0x17e45]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	rax, qword ptr [rcx + 8]
movzx	r9d, r9w
cmp	rax, rdx
jb	0x1400a2a36
jb	0x1400a2a36
mov	dword ptr [rsp + 0x20], r9d
mov	r9, r8
xor	r8d, r8d
call	0x1400a1880
call	0x1400a1880
add	rsp, 0x38
ret	
ret	
mov	r8, rdx
mov	r9, rax
lea	rdx, [rip + 0x17f2f]
lea	rcx, [rip + 0x17dfe]
call	0x1400aed20
call	0x1400aed20
nop	
sub	rsp, 0x38
sub	rdx, qword ptr [rcx]
mov	rax, qword ptr [rcx + 8]
sar	rdx, 1
sub	r9, r8
sar	r9, 1
cmp	rax, rdx
jb	0x1400a2a7f
jb	0x1400a2a7f
mov	qword ptr [rsp + 0x20], r9
mov	r9, r8
xor	r8d, r8d
call	0x1400a1070
call	0x1400a1070
nop	
add	rsp, 0x38
ret	
ret	
mov	r8, rdx
mov	r9, rax
lea	rdx, [rip + 0x18624]
lea	rcx, [rip + 0x18635]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rdx + 8]
mov	rdx, qword ptr [rdx]
lea	rdx, [rdx + rcx*2]
mov	qword ptr [rax], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	r9, rdx
mov	rdx, qword ptr [rcx + 8]
cmp	rdx, r9
jb	0x1400a2af0
jb	0x1400a2af0
cmp	r9, rdx
jae	0x1400a2ae3
jae	0x1400a2ae3
mov	rax, qword ptr [rcx]
xor	edx, edx
mov	qword ptr [rcx + 8], r9
mov	word ptr [rax + r9*2], dx
add	rsp, 0x38
ret	
ret	
nop	dword ptr [rax + rax]
mov	dword ptr [rsp + 0x20], 0
sub	r9, rdx
xor	r8d, r8d
call	0x1400a1880
call	0x1400a1880
nop	
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	r9, rdx
mov	rdx, qword ptr [rcx + 8]
cmp	rdx, r9
jb	0x1400a2b40
jb	0x1400a2b40
cmp	r9, rdx
jae	0x1400a2b33
jae	0x1400a2b33
mov	rax, qword ptr [rcx]
xor	edx, edx
mov	qword ptr [rcx + 8], r9
mov	word ptr [rax + r9*2], dx
add	rsp, 0x38
ret	
ret	
nop	dword ptr [rax + rax]
movzx	r8d, r8w
sub	r9, rdx
mov	dword ptr [rsp + 0x20], r8d
xor	r8d, r8d
call	0x1400a1880
call	0x1400a1880
nop	
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
cmp	r8, 1
je	0x1400a2b90
je	0x1400a2b90
test	r8, r8
jne	0x1400a2b80
jne	0x1400a2b80
ret	
ret	
nop	dword ptr [rax]
add	r8, r8
jmp	0x140015998
jmp	0x140015998
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
cmp	r8, 1
je	0x1400a2bc0
je	0x1400a2bc0
test	r8, r8
jne	0x1400a2bb0
jne	0x1400a2bb0
ret	
ret	
nop	dword ptr [rax]
add	r8, r8
jmp	0x1400159a0
jmp	0x1400159a0
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
test	r8, r8
jne	0x1400a2be0
jne	0x1400a2be0
ret	
ret	
nop	word ptr cs:[rax + rax]
add	r8, r8
jmp	0x1400159a0
jmp	0x1400159a0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r11, qword ptr [rcx + 8]
mov	rax, qword ptr [rsp + 0x50]
mov	r10, rdx
sub	rdx, qword ptr [rcx]
sub	rax, r9
sar	rdx, 1
sub	r8, r10
mov	r10, r11
sar	rax, 1
sar	r8, 1
sub	r10, rdx
cmp	r8, r10
cmova	r8, r10
cmp	r11, rdx
jb	0x1400a2c32
jb	0x1400a2c32
mov	qword ptr [rsp + 0x50], rax
add	rsp, 0x28
jmp	0x1400a1070
jmp	0x1400a1070
mov	r8, rdx
mov	r9, r11
lea	rdx, [rip + 0x17d48]
lea	rcx, [rip + 0x17c02]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r11, qword ptr [rcx + 8]
mov	rax, qword ptr [rsp + 0x50]
mov	r10, rdx
sub	rdx, qword ptr [rcx]
sub	rax, r9
sar	rdx, 1
sub	r8, r10
mov	r10, r11
sar	rax, 1
sar	r8, 1
sub	r10, rdx
cmp	r8, r10
cmova	r8, r10
cmp	r11, rdx
jb	0x1400a2c92
jb	0x1400a2c92
mov	qword ptr [rsp + 0x50], rax
add	rsp, 0x28
jmp	0x1400a1070
jmp	0x1400a1070
mov	r8, rdx
mov	r9, r11
lea	rdx, [rip + 0x17ce8]
lea	rcx, [rip + 0x17ba2]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	r10, qword ptr [rcx + 8]
mov	r11, qword ptr [r9 + 8]
mov	r9, qword ptr [r9]
mov	rax, rdx
sub	rdx, qword ptr [rcx]
sub	r8, rax
sar	rdx, 1
mov	rax, r10
sar	r8, 1
sub	rax, rdx
cmp	r8, rax
cmova	r8, rax
cmp	r10, rdx
jb	0x1400a2cef
jb	0x1400a2cef
mov	qword ptr [rsp + 0x20], r11
call	0x1400a1070
call	0x1400a1070
add	rsp, 0x38
ret	
ret	
mov	r8, rdx
mov	r9, r10
lea	rdx, [rip + 0x17c8b]
lea	rcx, [rip + 0x17b45]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, rcx
mov	rcx, r9
mov	rdi, rdx
mov	rbx, r8
mov	rbp, r9
sub	rbx, rdi
call	0x140015a60
call	0x140015a60
mov	r9, qword ptr [rsi + 8]
mov	rdx, rdi
sub	rdx, qword ptr [rsi]
sar	rdx, 1
mov	r8, rbx
mov	rcx, r9
sar	r8, 1
sub	rcx, rdx
cmp	r8, rcx
cmova	r8, rcx
cmp	r9, rdx
jb	0x1400a2d6d
jb	0x1400a2d6d
mov	qword ptr [rsp + 0x20], rax
mov	r9, rbp
mov	rcx, rsi
call	0x1400a1070
call	0x1400a1070
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	r8, rdx
lea	rcx, [rip + 0x17ad1]
lea	rdx, [rip + 0x17c09]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r11, qword ptr [rcx + 8]
mov	rax, qword ptr [rsp + 0x50]
mov	r10, rdx
sub	rdx, qword ptr [rcx]
sub	rax, r9
sar	rdx, 1
sub	r8, r10
mov	r10, r11
sar	rax, 1
sar	r8, 1
sub	r10, rdx
cmp	r8, r10
cmova	r8, r10
cmp	r11, rdx
jb	0x1400a2dd2
jb	0x1400a2dd2
mov	qword ptr [rsp + 0x50], rax
add	rsp, 0x28
jmp	0x1400a1070
jmp	0x1400a1070
mov	r8, rdx
mov	r9, r11
lea	rdx, [rip + 0x17ba8]
lea	rcx, [rip + 0x17a62]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r10, qword ptr [rcx + 8]
mov	r11, qword ptr [rsp + 0x50]
mov	rax, rdx
sub	rdx, qword ptr [rcx]
sub	r8, rax
sar	rdx, 1
mov	rax, r10
sar	r8, 1
sub	rax, rdx
cmp	r8, rax
cmova	r8, rax
cmp	r10, rdx
jb	0x1400a2e2c
jb	0x1400a2e2c
mov	qword ptr [rsp + 0x50], r11
add	rsp, 0x28
jmp	0x1400a1070
jmp	0x1400a1070
mov	r8, rdx
mov	r9, r10
lea	rdx, [rip + 0x17b4e]
lea	rcx, [rip + 0x17a08]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r11, qword ptr [rcx + 8]
mov	rax, qword ptr [rsp + 0x50]
mov	r10, rdx
sub	rdx, qword ptr [rcx]
sub	rax, r9
sar	rdx, 1
sub	r8, r10
mov	r10, r11
sar	rax, 1
sar	r8, 1
sub	r10, rdx
cmp	r8, r10
cmova	r8, r10
cmp	r11, rdx
jb	0x1400a2e92
jb	0x1400a2e92
mov	qword ptr [rsp + 0x50], rax
add	rsp, 0x28
jmp	0x1400a1070
jmp	0x1400a1070
mov	r8, rdx
mov	r9, r11
lea	rdx, [rip + 0x17ae8]
lea	rcx, [rip + 0x179a2]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	r10, qword ptr [rcx + 8]
mov	rax, rdx
mov	rdx, r9
mov	r9, qword ptr [r9]
mov	r11, qword ptr [rdx + 8]
mov	rdx, rax
sub	rdx, qword ptr [rcx]
sub	r8, rax
sar	rdx, 1
mov	rax, r10
sar	r8, 1
sub	rax, rdx
cmp	r8, rax
cmova	r8, rax
cmp	r10, rdx
jb	0x1400a2ef5
jb	0x1400a2ef5
mov	qword ptr [rsp + 0x20], r11
call	0x1400a1070
call	0x1400a1070
add	rsp, 0x38
ret	
ret	
mov	r8, rdx
mov	r9, r10
lea	rdx, [rip + 0x17a85]
lea	rcx, [rip + 0x1793f]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
movzx	eax, word ptr [rsp + 0x28]
sub	r8, rdx
sub	rdx, qword ptr [rcx]
mov	dword ptr [rsp + 0x28], eax
sar	rdx, 1
sar	r8, 1
jmp	0x1400a1880
jmp	0x1400a1880
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r11, qword ptr [rcx + 8]
mov	rax, qword ptr [rsp + 0x50]
mov	r10, rdx
sub	rdx, qword ptr [rcx]
sub	rax, r9
sar	rdx, 1
sub	r8, r10
mov	r10, r11
sar	rax, 1
sar	r8, 1
sub	r10, rdx
cmp	r8, r10
cmova	r8, r10
cmp	r11, rdx
jb	0x1400a2f72
jb	0x1400a2f72
mov	qword ptr [rsp + 0x50], rax
add	rsp, 0x28
jmp	0x1400a1070
jmp	0x1400a1070
mov	r8, rdx
mov	r9, r11
lea	rdx, [rip + 0x18131]
lea	rcx, [rip + 0x18142]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, rcx
mov	rcx, r9
mov	rdi, rdx
mov	rbx, r8
mov	rbp, r9
sub	rbx, rdi
call	0x140015a60
call	0x140015a60
mov	r9, qword ptr [rsi + 8]
mov	rdx, rdi
sub	rdx, qword ptr [rsi]
sar	rdx, 1
mov	r8, rbx
mov	rcx, r9
sar	r8, 1
sub	rcx, rdx
cmp	r8, rcx
cmova	r8, rcx
cmp	r9, rdx
jb	0x1400a2fed
jb	0x1400a2fed
mov	qword ptr [rsp + 0x20], rax
mov	r9, rbp
mov	rcx, rsi
call	0x1400a1070
call	0x1400a1070
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	r8, rdx
lea	rcx, [rip + 0x180d1]
lea	rdx, [rip + 0x180b2]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r11, qword ptr [rcx + 8]
mov	rax, qword ptr [rsp + 0x50]
mov	r10, rdx
sub	rdx, qword ptr [rcx]
sub	rax, r9
sar	rdx, 1
sub	r8, r10
mov	r10, r11
sar	rax, 1
sar	r8, 1
sub	r10, rdx
cmp	r8, r10
cmova	r8, r10
cmp	r11, rdx
jb	0x1400a3052
jb	0x1400a3052
mov	qword ptr [rsp + 0x50], rax
add	rsp, 0x28
jmp	0x1400a1070
jmp	0x1400a1070
mov	r8, rdx
mov	r9, r11
lea	rdx, [rip + 0x18051]
lea	rcx, [rip + 0x18062]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r10, qword ptr [rcx + 8]
mov	r11, qword ptr [rsp + 0x50]
mov	rax, rdx
sub	rdx, qword ptr [rcx]
sub	r8, rax
sar	rdx, 1
mov	rax, r10
sar	r8, 1
sub	rax, rdx
cmp	r8, rax
cmova	r8, rax
cmp	r10, rdx
jb	0x1400a30ac
jb	0x1400a30ac
mov	qword ptr [rsp + 0x50], r11
add	rsp, 0x28
jmp	0x1400a1070
jmp	0x1400a1070
mov	r8, rdx
mov	r9, r10
lea	rdx, [rip + 0x17ff7]
lea	rcx, [rip + 0x18008]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	r10, qword ptr [rcx + 8]
mov	r11, qword ptr [r9 + 8]
mov	r9, qword ptr [r9]
mov	rax, rdx
sub	rdx, qword ptr [rcx]
sub	r8, rax
sar	rdx, 1
mov	rax, r10
sar	r8, 1
sub	rax, rdx
cmp	r8, rax
cmova	r8, rax
cmp	r10, rdx
jb	0x1400a310f
jb	0x1400a310f
mov	qword ptr [rsp + 0x20], r11
call	0x1400a1070
call	0x1400a1070
add	rsp, 0x38
ret	
ret	
mov	r8, rdx
mov	r9, r10
lea	rdx, [rip + 0x17f94]
lea	rcx, [rip + 0x17fa5]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r11, qword ptr [rcx + 8]
mov	rax, qword ptr [rsp + 0x50]
mov	r10, rdx
sub	rdx, qword ptr [rcx]
sub	rax, r9
sar	rdx, 1
sub	r8, r10
mov	r10, r11
sar	rax, 1
sar	r8, 1
sub	r10, rdx
cmp	r8, r10
cmova	r8, r10
cmp	r11, rdx
jb	0x1400a3172
jb	0x1400a3172
mov	qword ptr [rsp + 0x50], rax
add	rsp, 0x28
jmp	0x1400a1070
jmp	0x1400a1070
mov	r8, rdx
mov	r9, r11
lea	rdx, [rip + 0x17f31]
lea	rcx, [rip + 0x17f42]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r11, qword ptr [rcx + 8]
mov	rax, qword ptr [rsp + 0x50]
mov	r10, rdx
sub	rdx, qword ptr [rcx]
sub	rax, r9
sar	rdx, 1
sub	r8, r10
mov	r10, r11
sar	rax, 1
sar	r8, 1
sub	r10, rdx
cmp	r8, r10
cmova	r8, r10
cmp	r11, rdx
jb	0x1400a31d2
jb	0x1400a31d2
mov	qword ptr [rsp + 0x50], rax
add	rsp, 0x28
jmp	0x1400a1070
jmp	0x1400a1070
mov	r8, rdx
mov	r9, r11
lea	rdx, [rip + 0x17ed1]
lea	rcx, [rip + 0x17ee2]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
movzx	eax, word ptr [rsp + 0x28]
sub	r8, rdx
sub	rdx, qword ptr [rcx]
mov	dword ptr [rsp + 0x28], eax
sar	rdx, 1
sar	r8, 1
jmp	0x1400a1880
jmp	0x1400a1880
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rdi, rcx
mov	rcx, r9
mov	rsi, r8
mov	rbx, rdx
mov	rbp, r9
call	0x140015a60
call	0x140015a60
mov	r9, qword ptr [rdi + 8]
mov	r8, r9
sub	r8, rbx
cmp	r8, rsi
cmova	r8, rsi
cmp	r9, rbx
jb	0x1400a325e
jb	0x1400a325e
mov	qword ptr [rsp + 0x20], rax
mov	r9, rbp
mov	rdx, rbx
mov	rcx, rdi
call	0x1400a1070
call	0x1400a1070
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	r8, rbx
lea	rdx, [rip + 0x1771f]
lea	rcx, [rip + 0x175d9]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r10, qword ptr [rcx + 8]
mov	r11, qword ptr [rsp + 0x50]
mov	rax, r10
sub	rax, rdx
cmp	rax, r8
cmovbe	r8, rax
cmp	r10, rdx
jb	0x1400a32ad
jb	0x1400a32ad
mov	qword ptr [rsp + 0x50], r11
add	rsp, 0x28
jmp	0x1400a1070
jmp	0x1400a1070
mov	r8, rdx
mov	r9, r10
lea	rdx, [rip + 0x176cd]
lea	rcx, [rip + 0x17587]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
mov	r10, qword ptr [rcx + 8]
mov	r11, qword ptr [r9 + 8]
mov	r9, qword ptr [r9]
mov	rax, r10
sub	rax, rdx
cmp	rax, r8
cmovbe	r8, rax
cmp	r10, rdx
jb	0x1400a3300
jb	0x1400a3300
mov	qword ptr [rsp + 0x20], r11
call	0x1400a1070
call	0x1400a1070
add	rsp, 0x38
ret	
ret	
mov	r8, rdx
mov	r9, r10
lea	rdx, [rip + 0x1767a]
lea	rcx, [rip + 0x17534]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	r11, qword ptr [r9 + 8]
mov	r10, qword ptr [rsp + 0x50]
mov	rbx, qword ptr [rsp + 0x58]
mov	r9, qword ptr [r9]
mov	rax, r11
sub	rax, r10
cmp	rax, rbx
cmova	rax, rbx
cmp	r11, r10
jb	0x1400a3371
jb	0x1400a3371
mov	r11, qword ptr [rcx + 8]
lea	r9, [r9 + r10*2]
mov	r10, r11
sub	r10, rdx
cmp	r10, r8
cmovbe	r8, r10
cmp	r11, rdx
jb	0x1400a338a
jb	0x1400a338a
mov	qword ptr [rsp + 0x50], rax
add	rsp, 0x20
pop	rbx
jmp	0x1400a1070
jmp	0x1400a1070
mov	r9, r11
mov	r8, r10
lea	rdx, [rip + 0x17609]
lea	rcx, [rip + 0x174c3]
call	0x1400aed20
call	0x1400aed20
mov	r8, rdx
mov	r9, r11
lea	rdx, [rip + 0x175f0]
lea	rcx, [rip + 0x174aa]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r10, qword ptr [rcx + 8]
movzx	r11d, word ptr [rsp + 0x50]
mov	rax, r10
sub	rax, rdx
cmp	rax, r8
cmovbe	r8, rax
cmp	r10, rdx
jb	0x1400a33de
jb	0x1400a33de
mov	dword ptr [rsp + 0x50], r11d
add	rsp, 0x28
jmp	0x1400a1880
jmp	0x1400a1880
mov	r8, rdx
mov	r9, r10
lea	rdx, [rip + 0x1759c]
lea	rcx, [rip + 0x17456]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, qword ptr [rcx]
lea	rbp, [rcx + 0x10]
mov	rbx, rcx
cmp	rsi, rbp
je	0x1400a344f
je	0x1400a344f
mov	rdi, qword ptr [rcx + 8]
mov	rax, qword ptr [rcx + 0x10]
cmp	rdi, 7
ja	0x1400a3460
ja	0x1400a3460
lea	r8, [rdi + 1]
test	rdi, rdi
je	0x1400a34b8
je	0x1400a34b8
add	r8, r8
mov	rdx, rsi
mov	rcx, rbp
call	0x140015998
call	0x140015998
mov	rcx, rsi
call	0x1400b2be0
call	0x1400b2be0
mov	qword ptr [rbx], rbp
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
cmp	rdi, rax
jae	0x1400a344f
jae	0x1400a344f
lea	r8, [rdi + 1]
mov	rax, r8
shr	rax, 0x3e
jne	0x1400a34c8
jne	0x1400a34c8
lea	rsi, [r8 + r8]
mov	rcx, rsi
call	0x1400b2c30
call	0x1400b2c30
mov	r13, qword ptr [rbx]
mov	r8, rsi
mov	rcx, rax
mov	r12, rax
mov	rdx, r13
call	0x140015998
call	0x140015998
cmp	rbp, r13
je	0x1400a349f
je	0x1400a349f
mov	rcx, r13
call	0x1400b2be0
call	0x1400b2be0
mov	qword ptr [rbx], r12
mov	qword ptr [rbx + 0x10], rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rsi]
mov	word ptr [rcx + 0x10], ax
jmp	0x1400a3444
jmp	0x1400a3444
nop	dword ptr [rax]
test	r8, r8
js	0x1400a34d2
js	0x1400a34d2
call	0x1400b39b0
call	0x1400b39b0
call	0x1400b39f0
call	0x1400b39f0
sub	rdx, 1
mov	rcx, rax
jne	0x1400a34ea
jne	0x1400a34ea
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
jmp	0x1400b2f60
jmp	0x1400b2f60
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	qword ptr [rsp + 0x58], rdx
mov	rbx, rcx
lea	rsi, [rcx + 0x10]
cmp	rsi, qword ptr [rcx]
je	0x1400a35b0
je	0x1400a35b0
mov	r8, qword ptr [rcx + 0x10]
cmp	r8, qword ptr [rsp + 0x58]
jb	0x1400a3550
jb	0x1400a3550
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x58]
mov	rcx, rbx
call	0x1400a37b0
call	0x1400a37b0
mov	rbp, qword ptr [rbx]
mov	rdi, rax
mov	rax, qword ptr [rbx + 8]
lea	r8, [rax + 1]
test	rax, rax
je	0x1400a35c0
je	0x1400a35c0
test	r8, r8
jne	0x1400a35a0
jne	0x1400a35a0
cmp	rsi, rbp
je	0x1400a3582
je	0x1400a3582
mov	rcx, rbp
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0x58]
mov	qword ptr [rbx], rdi
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
add	r8, r8
mov	rdx, rbp
mov	rcx, rdi
call	0x140015998
call	0x140015998
jmp	0x1400a3575
jmp	0x1400a3575
mov	r8d, 7
jmp	0x1400a353d
jmp	0x1400a353d
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rbp]
mov	word ptr [rdi], ax
jmp	0x1400a3575
jmp	0x1400a3575
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx + 8]
mov	rbx, rcx
mov	rsi, r8
lea	rcx, [rdx + r8]
mov	r8, rax
mov	r9, qword ptr [rbx]
sub	r8, rcx
je	0x1400a3614
je	0x1400a3614
test	rsi, rsi
je	0x1400a3614
je	0x1400a3614
lea	r10, [r9 + rcx*2]
lea	rcx, [r9 + rdx*2]
cmp	r8, 1
je	0x1400a3630
je	0x1400a3630
add	r8, r8
mov	rdx, r10
call	0x1400159a0
call	0x1400159a0
mov	rax, qword ptr [rbx + 8]
mov	r9, qword ptr [rbx]
sub	rax, rsi
xor	edx, edx
mov	qword ptr [rbx + 8], rax
mov	word ptr [r9 + rax*2], dx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
movzx	edx, word ptr [r10]
mov	word ptr [rcx], dx
jmp	0x1400a3614
jmp	0x1400a3614
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 8]
mov	rdx, qword ptr [rcx]
sub	rax, 1
mov	qword ptr [rcx + 8], rax
xor	ecx, ecx
mov	word ptr [rdx + rax*2], cx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 8]
mov	rax, qword ptr [rbx]
lea	r9, [rbx + 0x10]
lea	rsi, [r8 + rcx]
cmp	rax, r9
je	0x1400a36d8
je	0x1400a36d8
mov	r9, qword ptr [rbx + 0x10]
cmp	r9, rsi
jb	0x1400a36b8
jb	0x1400a36b8
test	r8, r8
je	0x1400a36a0
je	0x1400a36a0
lea	rcx, [rax + rcx*2]
cmp	r8, 1
je	0x1400a36e0
je	0x1400a36e0
add	r8, r8
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rbx]
xor	edx, edx
mov	qword ptr [rbx + 8], rsi
mov	word ptr [rax + rsi*2], dx
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	qword ptr [rsp + 0x20], r8
mov	r9, rdx
xor	r8d, r8d
mov	rdx, rcx
mov	rcx, rbx
call	0x1400a3830
call	0x1400a3830
mov	rax, qword ptr [rbx]
jmp	0x1400a36a0
jmp	0x1400a36a0
nop	dword ptr [rax + rax]
mov	r9d, 7
jmp	0x1400a3681
jmp	0x1400a3681
movzx	edx, word ptr [rdx]
mov	word ptr [rcx], dx
jmp	0x1400a36a0
jmp	0x1400a36a0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, rcx
mov	rsi, rdx
cmp	rcx, rdx
je	0x1400a3734
je	0x1400a3734
mov	rbp, qword ptr [rcx]
lea	r12, [rcx + 0x10]
mov	rdi, qword ptr [rdx + 8]
cmp	r12, rbp
je	0x1400a3790
je	0x1400a3790
mov	r8, qword ptr [rcx + 0x10]
lea	r13, [rdi + rdi]
cmp	r8, rdi
jb	0x1400a3748
jb	0x1400a3748
test	rdi, rdi
jne	0x1400a3776
jne	0x1400a3776
xor	eax, eax
mov	qword ptr [rbx + 8], rdi
mov	word ptr [rbp + rdi*2], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rbx
lea	rdx, [rsp + 0x28]
mov	qword ptr [rsp + 0x28], rdi
call	0x1400a37b0
call	0x1400a37b0
mov	rcx, qword ptr [rbx]
mov	rbp, rax
cmp	r12, rcx
je	0x1400a376a
je	0x1400a376a
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rbp
mov	qword ptr [rbx + 0x10], rax
mov	rdx, qword ptr [rsi]
cmp	rdi, 1
je	0x1400a37a0
je	0x1400a37a0
mov	rcx, rbp
mov	r8, r13
call	0x140015998
call	0x140015998
mov	rbp, qword ptr [rbx]
jmp	0x1400a3729
jmp	0x1400a3729
nop	
mov	r8d, 7
jmp	0x1400a371b
jmp	0x1400a371b
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rbp], ax
jmp	0x1400a3729
jmp	0x1400a3729
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
movabs	rax, 0x1fffffffffffffff
mov	rcx, qword ptr [rdx]
cmp	rax, rcx
jb	0x1400a3811
jb	0x1400a3811
cmp	r8, rcx
jb	0x1400a37e0
jb	0x1400a37e0
add	rcx, 1
add	rcx, rcx
add	rsp, 0x28
jmp	0x1400b2c30
jmp	0x1400b2c30
nop	dword ptr [rax + rax]
add	r8, r8
cmp	rcx, r8
jae	0x1400a37cb
jae	0x1400a37cb
cmp	rax, r8
jae	0x1400a3808
jae	0x1400a3808
movabs	rcx, 0x4000000000000000
mov	qword ptr [rdx], rax
add	rsp, 0x28
jmp	0x1400b2c30
jmp	0x1400b2c30
nop	dword ptr [rax + rax]
mov	qword ptr [rdx], r8
lea	rcx, [r8 + 1]
jmp	0x1400a37cf
jmp	0x1400a37cf
lea	rcx, [rip + 0x17018]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
mov	qword ptr [rcx + 8], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	r12, qword ptr [rsp + 0xa0]
mov	rax, r12
mov	rsi, rdx
mov	rdx, qword ptr [rcx + 8]
sub	rax, r8
mov	rbx, rcx
lea	r15, [rsi + r8]
mov	rbp, r9
lea	r13, [rcx + 0x10]
mov	r14, rdx
add	rax, rdx
mov	qword ptr [rsp + 0x28], rax
sub	r14, r15
cmp	r13, qword ptr [rcx]
je	0x1400a3950
je	0x1400a3950
mov	r8, qword ptr [rcx + 0x10]
lea	rdx, [rsp + 0x28]
mov	rcx, rbx
call	0x1400a37b0
call	0x1400a37b0
mov	rdi, rax
test	rsi, rsi
je	0x1400a38ac
je	0x1400a38ac
mov	rdx, qword ptr [rbx]
cmp	rsi, 1
je	0x1400a3920
je	0x1400a3920
lea	r8, [rsi + rsi]
mov	rcx, rax
call	0x140015998
call	0x140015998
test	rbp, rbp
je	0x1400a38d0
je	0x1400a38d0
test	r12, r12
je	0x1400a38d0
je	0x1400a38d0
lea	rcx, [rdi + rsi*2]
cmp	r12, 1
je	0x1400a3940
je	0x1400a3940
lea	r8, [r12 + r12]
mov	rdx, rbp
call	0x140015998
call	0x140015998
mov	rbp, qword ptr [rbx]
test	r14, r14
je	0x1400a38f3
je	0x1400a38f3
add	rsi, r12
lea	rdx, [rbp + r15*2]
lea	rcx, [rdi + rsi*2]
cmp	r14, 1
je	0x1400a3930
je	0x1400a3930
lea	r8, [r14 + r14]
call	0x140015998
call	0x140015998
cmp	r13, rbp
je	0x1400a3900
je	0x1400a3900
mov	rcx, rbp
call	0x1400b2be0
call	0x1400b2be0
mov	rax, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rdi
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rdi], ax
jmp	0x1400a38ac
jmp	0x1400a38ac
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
jmp	0x1400a38f3
jmp	0x1400a38f3
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rbp]
mov	word ptr [rcx], ax
jmp	0x1400a38d0
jmp	0x1400a38d0
nop	dword ptr [rax]
mov	r8d, 7
jmp	0x1400a387e
jmp	0x1400a387e
nop	
nop	
nop	
nop	
nop	
mov	r9d, r8d
cmp	rdx, 1
je	0x1400a39a0
je	0x1400a39a0
test	rdx, rdx
je	0x1400a399c
je	0x1400a399c
xor	eax, eax
test	dl, 1
je	0x1400a3988
je	0x1400a3988
mov	word ptr [rcx], r8w
mov	eax, 1
cmp	rdx, 1
je	0x1400a399c
je	0x1400a399c
nop	dword ptr [rax]
mov	word ptr [rcx + rax*2], r9w
mov	word ptr [rcx + rax*2 + 2], r9w
add	rax, 2
cmp	rdx, rax
jne	0x1400a3988
jne	0x1400a3988
ret	
ret	
nop	dword ptr [rax]
mov	word ptr [rcx], r8w
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [rcx + 8]
mov	rax, qword ptr [rcx]
lea	rbp, [rsi + 1]
mov	edi, edx
lea	rdx, [rcx + 0x10]
mov	rbx, rcx
cmp	rax, rdx
je	0x1400a3a20
je	0x1400a3a20
mov	rdx, qword ptr [rcx + 0x10]
cmp	rdx, rbp
jb	0x1400a39f8
jb	0x1400a39f8
xor	edx, edx
mov	word ptr [rax + rsi*2], di
mov	qword ptr [rbx + 8], rbp
mov	word ptr [rax + rsi*2 + 2], dx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], 1
call	0x1400a3830
call	0x1400a3830
mov	rax, qword ptr [rbx]
jmp	0x1400a39da
jmp	0x1400a39da
nop	word ptr [rax + rax]
mov	edx, 7
jmp	0x1400a39d5
jmp	0x1400a39d5
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
lea	rcx, [rcx + 0x10]
lea	rdi, [rdx + 0x10]
mov	rbx, rdx
mov	qword ptr [rsi], rcx
mov	rax, qword ptr [rdx]
mov	rdx, qword ptr [rdx + 8]
cmp	rdi, rax
je	0x1400a3a80
je	0x1400a3a80
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rbx + 0x10]
mov	qword ptr [rsi + 0x10], rax
xor	eax, eax
mov	qword ptr [rsi + 8], rdx
mov	qword ptr [rbx], rdi
mov	qword ptr [rbx + 8], 0
mov	word ptr [rbx + 0x10], ax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	r8, [rdx + rdx + 2]
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rdx, qword ptr [rbx + 8]
jmp	0x1400a3a5f
jmp	0x1400a3a5f
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
lea	rcx, [rcx + 0x10]
mov	rbx, rdx
mov	qword ptr [rsi], rcx
mov	rax, qword ptr [rdx]
lea	rdx, [rdx + 0x10]
movq	xmm0, qword ptr [rbx + 8]
cmp	rdx, rax
je	0x1400a3af0
je	0x1400a3af0
movhps	xmm0, qword ptr [rbx + 0x10]
mov	qword ptr [rsi], rax
xor	eax, eax
mov	qword ptr [rbx], rdx
mov	qword ptr [rbx + 8], 0
mov	word ptr [rbx + 0x10], ax
movups	xmmword ptr [rsi + 8], xmm0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
movq	rax, xmm0
lea	r8, [rax + rax + 2]
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rbx + 8]
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	qword ptr [rsi + 8], rax
mov	rax, qword ptr [rbx]
mov	word ptr [rax], dx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
lea	rax, [rcx + 0x10]
mov	rsi, rcx
mov	rbx, rdx
mov	qword ptr [rcx], rax
test	rdx, rdx
je	0x1400a3b58
je	0x1400a3b58
mov	rcx, rdx
call	0x140015a60
call	0x140015a60
xor	r9d, r9d
mov	rdx, rbx
mov	rcx, rsi
lea	r8, [rbx + rax*2]
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400a1480
jmp	0x1400a1480
lea	rcx, [rip + 0x16d51]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, rcx
lea	rcx, [rcx + 0x10]
mov	rdi, rdx
mov	qword ptr [rsi], rcx
test	rdx, rdx
jne	0x1400a3b97
jne	0x1400a3b97
test	r8, r8
jne	0x1400a3c25
jne	0x1400a3c25
lea	rbx, [r8 + r8]
mov	rbp, rbx
sar	rbp, 1
mov	qword ptr [rsp + 0x28], rbp
cmp	rbx, 0xe
ja	0x1400a3c00
ja	0x1400a3c00
cmp	rbp, 1
jne	0x1400a3be0
jne	0x1400a3be0
movzx	eax, word ptr [rdi]
mov	r12d, 1
mov	r13d, 2
mov	word ptr [rsi + 0x10], ax
xor	eax, eax
mov	qword ptr [rsi + 8], r12
mov	word ptr [rcx + r13], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	r13, rbx
mov	r12, rbp
test	rbp, rbp
je	0x1400a3bf6
je	0x1400a3bf6
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
jmp	0x1400a3bc5
jmp	0x1400a3bc5
nop	dword ptr [rax + rax]
mov	rcx, rsi
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	r12, qword ptr [rsp + 0x28]
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	qword ptr [rsi + 0x10], r12
lea	r13, [r12 + r12]
jmp	0x1400a3be6
jmp	0x1400a3be6
lea	rcx, [rip + 0x16c84]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx + 8], 0
mov	qword ptr [rcx], rax
xor	eax, eax
mov	word ptr [rcx + 0x10], ax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [rdx + 8]
add	rsi, rsi
mov	rdi, rsi
mov	rbx, rcx
sar	rdi, 1
lea	rcx, [rcx + 0x10]
mov	qword ptr [rbx], rcx
mov	r13, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], rdi
cmp	rsi, 0xe
ja	0x1400a3ce8
ja	0x1400a3ce8
cmp	rdi, 1
jne	0x1400a3cc8
jne	0x1400a3cc8
movzx	eax, word ptr [r13]
mov	ebp, 1
mov	r12d, 2
mov	word ptr [rbx + 0x10], ax
xor	eax, eax
mov	qword ptr [rbx + 8], rbp
mov	word ptr [rcx + r12], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	r12, rsi
mov	rbp, rdi
test	rdi, rdi
je	0x1400a3cde
je	0x1400a3cde
mov	r8, rsi
mov	rdx, r13
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
jmp	0x1400a3cab
jmp	0x1400a3cab
nop	dword ptr [rax + rax]
mov	rcx, rbx
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	rbp, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	qword ptr [rbx + 0x10], rbp
lea	r12, [rbp + rbp]
jmp	0x1400a3cce
jmp	0x1400a3cce
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [rdx + 8]
add	rsi, rsi
mov	rdi, rsi
mov	rbx, rcx
sar	rdi, 1
lea	rcx, [rcx + 0x10]
mov	qword ptr [rbx], rcx
mov	r13, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], rdi
cmp	rsi, 0xe
ja	0x1400a3d98
ja	0x1400a3d98
cmp	rdi, 1
jne	0x1400a3d78
jne	0x1400a3d78
movzx	eax, word ptr [r13]
mov	ebp, 1
mov	r12d, 2
mov	word ptr [rbx + 0x10], ax
xor	eax, eax
mov	qword ptr [rbx + 8], rbp
mov	word ptr [rcx + r12], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	r12, rsi
mov	rbp, rdi
test	rdi, rdi
je	0x1400a3d8e
je	0x1400a3d8e
mov	r8, rsi
mov	rdx, r13
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
jmp	0x1400a3d5b
jmp	0x1400a3d5b
nop	dword ptr [rax + rax]
mov	rcx, rbx
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	rbp, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	qword ptr [rbx + 0x10], rbp
lea	r12, [rbp + rbp]
jmp	0x1400a3d7e
jmp	0x1400a3d7e
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, qword ptr [rdx + 8]
mov	rsi, rcx
lea	rcx, [rcx + 0x10]
mov	qword ptr [rsi], rcx
mov	rax, qword ptr [rdx]
cmp	rbx, r8
jb	0x1400a3e7e
jb	0x1400a3e7e
sub	rbx, r8
lea	r13, [rax + r8*2]
add	rbx, rbx
mov	rdi, rbx
sar	rdi, 1
mov	qword ptr [rsp + 0x28], rdi
cmp	rbx, 0xe
ja	0x1400a3e58
ja	0x1400a3e58
cmp	rdi, 1
jne	0x1400a3e38
jne	0x1400a3e38
movzx	eax, word ptr [r13]
mov	ebp, 1
mov	r12d, 2
mov	word ptr [rsi + 0x10], ax
xor	eax, eax
mov	qword ptr [rsi + 8], rbp
mov	word ptr [rcx + r12], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	r12, rbx
mov	rbp, rdi
test	rdi, rdi
je	0x1400a3e4e
je	0x1400a3e4e
mov	r8, rbx
mov	rdx, r13
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
jmp	0x1400a3e1b
jmp	0x1400a3e1b
nop	dword ptr [rax + rax]
mov	rcx, rsi
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	rbp, qword ptr [rsp + 0x28]
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	qword ptr [rsi + 0x10], rbp
lea	r12, [rbp + rbp]
jmp	0x1400a3e3e
jmp	0x1400a3e3e
mov	r9, rbx
lea	rdx, [rip + 0x169f7]
lea	rcx, [rip + 0x169b9]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, qword ptr [rdx + 8]
mov	rsi, rcx
lea	rcx, [rcx + 0x10]
mov	qword ptr [rsi], rcx
mov	rax, qword ptr [rdx]
cmp	rbx, r8
jb	0x1400a3f66
jb	0x1400a3f66
sub	rbx, r8
lea	r12, [rax + r8*2]
cmp	rbx, r9
cmova	rbx, r9
add	rbx, rbx
mov	rdi, rbx
sar	rdi, 1
mov	qword ptr [rsp + 0x28], rdi
cmp	rbx, 0xe
ja	0x1400a3f40
ja	0x1400a3f40
cmp	rdi, 1
jne	0x1400a3f20
jne	0x1400a3f20
movzx	eax, word ptr [r12]
mov	ebp, 1
mov	r13d, 2
mov	word ptr [rsi + 0x10], ax
xor	eax, eax
mov	qword ptr [rsi + 8], rbp
mov	word ptr [rcx + r13], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr [rax + rax]
mov	r13, rbx
mov	rbp, rdi
test	rdi, rdi
je	0x1400a3f36
je	0x1400a3f36
mov	r8, rbx
mov	rdx, r12
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
jmp	0x1400a3f02
jmp	0x1400a3f02
nop	dword ptr [rax + rax]
mov	rcx, rsi
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	rbp, qword ptr [rsp + 0x28]
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	qword ptr [rsi + 0x10], rbp
lea	r13, [rbp + rbp]
jmp	0x1400a3f26
jmp	0x1400a3f26
mov	r9, rbx
lea	rdx, [rip + 0x1690f]
lea	rcx, [rip + 0x168d1]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, qword ptr [rdx + 8]
mov	rsi, rcx
lea	rcx, [rcx + 0x10]
mov	qword ptr [rsi], rcx
mov	rax, qword ptr [rdx]
cmp	rbx, r8
jb	0x1400a4046
jb	0x1400a4046
sub	rbx, r8
lea	r12, [rax + r8*2]
cmp	rbx, r9
cmova	rbx, r9
add	rbx, rbx
mov	rdi, rbx
sar	rdi, 1
mov	qword ptr [rsp + 0x28], rdi
cmp	rbx, 0xe
ja	0x1400a4020
ja	0x1400a4020
cmp	rdi, 1
jne	0x1400a4000
jne	0x1400a4000
movzx	eax, word ptr [r12]
mov	ebp, 1
mov	r13d, 2
mov	word ptr [rsi + 0x10], ax
xor	eax, eax
mov	qword ptr [rsi + 8], rbp
mov	word ptr [rcx + r13], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr [rax + rax]
mov	r13, rbx
mov	rbp, rdi
test	rdi, rdi
je	0x1400a4016
je	0x1400a4016
mov	r8, rbx
mov	rdx, r12
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
jmp	0x1400a3fe2
jmp	0x1400a3fe2
nop	dword ptr [rax + rax]
mov	rcx, rsi
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	rbp, qword ptr [rsp + 0x28]
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	qword ptr [rsi + 0x10], rbp
lea	r13, [rbp + rbp]
jmp	0x1400a4006
jmp	0x1400a4006
mov	r9, rbx
lea	rdx, [rip + 0x1684a]
lea	rcx, [rip + 0x167f1]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [rdx + 8]
mov	r13, qword ptr [rdx]
add	rsi, rsi
mov	rdi, rsi
mov	rbx, rcx
sar	rdi, 1
lea	rcx, [rcx + 0x10]
mov	qword ptr [rbx], rcx
mov	qword ptr [rsp + 0x28], rdi
cmp	rsi, 0xe
ja	0x1400a40e8
ja	0x1400a40e8
cmp	rdi, 1
jne	0x1400a40c8
jne	0x1400a40c8
movzx	eax, word ptr [r13]
mov	ebp, 1
mov	r12d, 2
mov	word ptr [rbx + 0x10], ax
xor	eax, eax
mov	qword ptr [rbx + 8], rbp
mov	word ptr [rcx + r12], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	r12, rsi
mov	rbp, rdi
test	rdi, rdi
je	0x1400a40de
je	0x1400a40de
mov	r8, rsi
mov	rdx, r13
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
jmp	0x1400a40ab
jmp	0x1400a40ab
nop	dword ptr [rax + rax]
mov	rcx, rbx
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	rbp, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	qword ptr [rbx + 0x10], rbp
lea	r12, [rbp + rbp]
jmp	0x1400a40ce
jmp	0x1400a40ce
nop	
nop	
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx + 8], 0
mov	qword ptr [rcx], rax
xor	eax, eax
mov	word ptr [rcx + 0x10], ax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
lea	rax, [rcx + 0x10]
mov	qword ptr [rsp + 0x28], rdx
mov	rbx, rcx
mov	esi, r8d
mov	qword ptr [rcx], rax
mov	edi, r8d
cmp	rdx, 7
ja	0x1400a4170
ja	0x1400a4170
test	rdx, rdx
jne	0x1400a418e
jne	0x1400a418e
xor	ecx, ecx
mov	qword ptr [rbx + 8], rdx
mov	word ptr [rax + rdx*2], cx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	rdx, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	qword ptr [rbx + 0x10], rdx
test	rdx, rdx
je	0x1400a4157
je	0x1400a4157
xor	ecx, ecx
cmp	rdx, 1
je	0x1400a41c8
je	0x1400a41c8
test	dl, 1
je	0x1400a41b0
je	0x1400a41b0
mov	ecx, 1
mov	word ptr [rax], di
cmp	rcx, rdx
je	0x1400a4157
je	0x1400a4157
nop	dword ptr [rax + rax]
mov	word ptr [rax + rcx*2], di
mov	word ptr [rax + rcx*2 + 2], di
add	rcx, 2
cmp	rcx, rdx
jne	0x1400a41b0
jne	0x1400a41b0
jmp	0x1400a4157
jmp	0x1400a4157
nop	dword ptr [rax]
mov	word ptr [rax], si
jmp	0x1400a4157
jmp	0x1400a4157
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, r8
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	rdi, rdx
sub	rsi, rdx
mov	qword ptr [rbx], rcx
mov	rbp, rsi
mov	qword ptr [rbx + 8], 0
sar	rbp, 1
mov	qword ptr [rsp + 0x28], rbp
cmp	rsi, 0xe
ja	0x1400a4260
ja	0x1400a4260
cmp	rbp, 1
jne	0x1400a4240
jne	0x1400a4240
movzx	eax, word ptr [rdx]
mov	r12d, 1
mov	r13d, 2
mov	word ptr [rbx + 0x10], ax
xor	eax, eax
mov	qword ptr [rbx + 8], r12
mov	word ptr [rcx + r13], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	r13, rsi
mov	r12, rbp
test	rbp, rbp
je	0x1400a4256
je	0x1400a4256
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
jmp	0x1400a4221
jmp	0x1400a4221
nop	dword ptr [rax + rax]
mov	rcx, rbx
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	r12, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	qword ptr [rbx + 0x10], r12
lea	r13, [r12 + r12]
jmp	0x1400a4246
jmp	0x1400a4246
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, r8
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	rdi, rdx
sub	rsi, rdx
mov	qword ptr [rbx], rcx
mov	rbp, rsi
mov	qword ptr [rbx + 8], 0
sar	rbp, 1
mov	qword ptr [rsp + 0x28], rbp
cmp	rsi, 0xe
ja	0x1400a4320
ja	0x1400a4320
cmp	rbp, 1
jne	0x1400a4300
jne	0x1400a4300
movzx	eax, word ptr [rdx]
mov	r12d, 1
mov	r13d, 2
mov	word ptr [rbx + 0x10], ax
xor	eax, eax
mov	qword ptr [rbx + 8], r12
mov	word ptr [rcx + r13], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	r13, rsi
mov	r12, rbp
test	rbp, rbp
je	0x1400a4316
je	0x1400a4316
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
jmp	0x1400a42e1
jmp	0x1400a42e1
nop	dword ptr [rax + rax]
mov	rcx, rbx
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	r12, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	qword ptr [rbx + 0x10], r12
lea	r13, [r12 + r12]
jmp	0x1400a4306
jmp	0x1400a4306
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, r8
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	rdi, rdx
sub	rsi, rdx
mov	qword ptr [rbx], rcx
mov	rbp, rsi
mov	qword ptr [rbx + 8], 0
sar	rbp, 1
mov	qword ptr [rsp + 0x28], rbp
cmp	rsi, 0xe
ja	0x1400a43e0
ja	0x1400a43e0
cmp	rbp, 1
jne	0x1400a43c0
jne	0x1400a43c0
movzx	eax, word ptr [rdx]
mov	r12d, 1
mov	r13d, 2
mov	word ptr [rbx + 0x10], ax
xor	eax, eax
mov	qword ptr [rbx + 8], r12
mov	word ptr [rcx + r13], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	r13, rsi
mov	r12, rbp
test	rbp, rbp
je	0x1400a43d6
je	0x1400a43d6
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
jmp	0x1400a43a1
jmp	0x1400a43a1
nop	dword ptr [rax + rax]
mov	rcx, rbx
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	r12, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	qword ptr [rbx + 0x10], r12
lea	r13, [r12 + r12]
jmp	0x1400a43c6
jmp	0x1400a43c6
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, rcx
lea	rcx, [rcx + 0x10]
lea	rdi, [rdx + 0x10]
mov	rbx, rdx
mov	qword ptr [rsi], rcx
mov	rax, qword ptr [rdx]
mov	rdx, qword ptr [rdx + 8]
cmp	rdi, rax
je	0x1400a4460
je	0x1400a4460
mov	qword ptr [rsi], rax
mov	rax, qword ptr [rbx + 0x10]
mov	qword ptr [rsi + 0x10], rax
xor	eax, eax
mov	qword ptr [rsi + 8], rdx
mov	qword ptr [rbx], rdi
mov	qword ptr [rbx + 8], 0
mov	word ptr [rbx + 0x10], ax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	r8, [rdx + rdx + 2]
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rdx, qword ptr [rbx + 8]
jmp	0x1400a443f
jmp	0x1400a443f
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
lea	rcx, [rcx + 0x10]
mov	rbx, rdx
mov	qword ptr [rsi], rcx
mov	rax, qword ptr [rdx]
lea	rdx, [rdx + 0x10]
movq	xmm0, qword ptr [rbx + 8]
cmp	rdx, rax
je	0x1400a44d0
je	0x1400a44d0
movhps	xmm0, qword ptr [rbx + 0x10]
mov	qword ptr [rsi], rax
xor	eax, eax
mov	qword ptr [rbx], rdx
mov	qword ptr [rbx + 8], 0
mov	word ptr [rbx + 0x10], ax
movups	xmmword ptr [rsi + 8], xmm0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
movq	rax, xmm0
lea	r8, [rax + rax + 2]
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rbx + 8]
xor	edx, edx
mov	qword ptr [rbx + 8], 0
mov	qword ptr [rsi + 8], rax
mov	rax, qword ptr [rbx]
mov	word ptr [rax], dx
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
lea	rax, [rcx + 0x10]
mov	rsi, rcx
mov	rbx, rdx
mov	qword ptr [rcx], rax
test	rdx, rdx
je	0x1400a4538
je	0x1400a4538
mov	rcx, rdx
call	0x140015a60
call	0x140015a60
xor	r9d, r9d
mov	rdx, rbx
mov	rcx, rsi
lea	r8, [rbx + rax*2]
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400a1480
jmp	0x1400a1480
lea	rcx, [rip + 0x16371]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, rcx
lea	rcx, [rcx + 0x10]
mov	rdi, rdx
mov	qword ptr [rsi], rcx
test	rdx, rdx
jne	0x1400a4577
jne	0x1400a4577
test	r8, r8
jne	0x1400a4605
jne	0x1400a4605
lea	rbx, [r8 + r8]
mov	rbp, rbx
sar	rbp, 1
mov	qword ptr [rsp + 0x28], rbp
cmp	rbx, 0xe
ja	0x1400a45e0
ja	0x1400a45e0
cmp	rbp, 1
jne	0x1400a45c0
jne	0x1400a45c0
movzx	eax, word ptr [rdi]
mov	r12d, 1
mov	r13d, 2
mov	word ptr [rsi + 0x10], ax
xor	eax, eax
mov	qword ptr [rsi + 8], r12
mov	word ptr [rcx + r13], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	r13, rbx
mov	r12, rbp
test	rbp, rbp
je	0x1400a45d6
je	0x1400a45d6
mov	r8, rbx
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
jmp	0x1400a45a5
jmp	0x1400a45a5
nop	dword ptr [rax + rax]
mov	rcx, rsi
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	r12, qword ptr [rsp + 0x28]
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	qword ptr [rsi + 0x10], r12
lea	r13, [r12 + r12]
jmp	0x1400a45c6
jmp	0x1400a45c6
lea	rcx, [rip + 0x162a4]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx + 8], 0
mov	qword ptr [rcx], rax
xor	eax, eax
mov	word ptr [rcx + 0x10], ax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [rdx + 8]
add	rsi, rsi
mov	rdi, rsi
mov	rbx, rcx
sar	rdi, 1
lea	rcx, [rcx + 0x10]
mov	qword ptr [rbx], rcx
mov	r13, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], rdi
cmp	rsi, 0xe
ja	0x1400a46c8
ja	0x1400a46c8
cmp	rdi, 1
jne	0x1400a46a8
jne	0x1400a46a8
movzx	eax, word ptr [r13]
mov	ebp, 1
mov	r12d, 2
mov	word ptr [rbx + 0x10], ax
xor	eax, eax
mov	qword ptr [rbx + 8], rbp
mov	word ptr [rcx + r12], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	r12, rsi
mov	rbp, rdi
test	rdi, rdi
je	0x1400a46be
je	0x1400a46be
mov	r8, rsi
mov	rdx, r13
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
jmp	0x1400a468b
jmp	0x1400a468b
nop	dword ptr [rax + rax]
mov	rcx, rbx
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	rbp, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	qword ptr [rbx + 0x10], rbp
lea	r12, [rbp + rbp]
jmp	0x1400a46ae
jmp	0x1400a46ae
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [rdx + 8]
add	rsi, rsi
mov	rdi, rsi
mov	rbx, rcx
sar	rdi, 1
lea	rcx, [rcx + 0x10]
mov	qword ptr [rbx], rcx
mov	r13, qword ptr [rdx]
mov	qword ptr [rsp + 0x28], rdi
cmp	rsi, 0xe
ja	0x1400a4778
ja	0x1400a4778
cmp	rdi, 1
jne	0x1400a4758
jne	0x1400a4758
movzx	eax, word ptr [r13]
mov	ebp, 1
mov	r12d, 2
mov	word ptr [rbx + 0x10], ax
xor	eax, eax
mov	qword ptr [rbx + 8], rbp
mov	word ptr [rcx + r12], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	r12, rsi
mov	rbp, rdi
test	rdi, rdi
je	0x1400a476e
je	0x1400a476e
mov	r8, rsi
mov	rdx, r13
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
jmp	0x1400a473b
jmp	0x1400a473b
nop	dword ptr [rax + rax]
mov	rcx, rbx
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	rbp, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	qword ptr [rbx + 0x10], rbp
lea	r12, [rbp + rbp]
jmp	0x1400a475e
jmp	0x1400a475e
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, qword ptr [rdx + 8]
mov	rsi, rcx
lea	rcx, [rcx + 0x10]
mov	qword ptr [rsi], rcx
mov	rax, qword ptr [rdx]
cmp	rbx, r8
jb	0x1400a485e
jb	0x1400a485e
sub	rbx, r8
lea	r13, [rax + r8*2]
add	rbx, rbx
mov	rdi, rbx
sar	rdi, 1
mov	qword ptr [rsp + 0x28], rdi
cmp	rbx, 0xe
ja	0x1400a4838
ja	0x1400a4838
cmp	rdi, 1
jne	0x1400a4818
jne	0x1400a4818
movzx	eax, word ptr [r13]
mov	ebp, 1
mov	r12d, 2
mov	word ptr [rsi + 0x10], ax
xor	eax, eax
mov	qword ptr [rsi + 8], rbp
mov	word ptr [rcx + r12], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	r12, rbx
mov	rbp, rdi
test	rdi, rdi
je	0x1400a482e
je	0x1400a482e
mov	r8, rbx
mov	rdx, r13
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
jmp	0x1400a47fb
jmp	0x1400a47fb
nop	dword ptr [rax + rax]
mov	rcx, rsi
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	rbp, qword ptr [rsp + 0x28]
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	qword ptr [rsi + 0x10], rbp
lea	r12, [rbp + rbp]
jmp	0x1400a481e
jmp	0x1400a481e
mov	r9, rbx
lea	rdx, [rip + 0x16017]
lea	rcx, [rip + 0x15fd9]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, qword ptr [rdx + 8]
mov	rsi, rcx
lea	rcx, [rcx + 0x10]
mov	qword ptr [rsi], rcx
mov	rax, qword ptr [rdx]
cmp	rbx, r8
jb	0x1400a4946
jb	0x1400a4946
sub	rbx, r8
lea	r12, [rax + r8*2]
cmp	rbx, r9
cmova	rbx, r9
add	rbx, rbx
mov	rdi, rbx
sar	rdi, 1
mov	qword ptr [rsp + 0x28], rdi
cmp	rbx, 0xe
ja	0x1400a4920
ja	0x1400a4920
cmp	rdi, 1
jne	0x1400a4900
jne	0x1400a4900
movzx	eax, word ptr [r12]
mov	ebp, 1
mov	r13d, 2
mov	word ptr [rsi + 0x10], ax
xor	eax, eax
mov	qword ptr [rsi + 8], rbp
mov	word ptr [rcx + r13], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr [rax + rax]
mov	r13, rbx
mov	rbp, rdi
test	rdi, rdi
je	0x1400a4916
je	0x1400a4916
mov	r8, rbx
mov	rdx, r12
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
jmp	0x1400a48e2
jmp	0x1400a48e2
nop	dword ptr [rax + rax]
mov	rcx, rsi
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	rbp, qword ptr [rsp + 0x28]
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	qword ptr [rsi + 0x10], rbp
lea	r13, [rbp + rbp]
jmp	0x1400a4906
jmp	0x1400a4906
mov	r9, rbx
lea	rdx, [rip + 0x15f2f]
lea	rcx, [rip + 0x15ef1]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, qword ptr [rdx + 8]
mov	rsi, rcx
lea	rcx, [rcx + 0x10]
mov	qword ptr [rsi], rcx
mov	rax, qword ptr [rdx]
cmp	rbx, r8
jb	0x1400a4a26
jb	0x1400a4a26
sub	rbx, r8
lea	r12, [rax + r8*2]
cmp	rbx, r9
cmova	rbx, r9
add	rbx, rbx
mov	rdi, rbx
sar	rdi, 1
mov	qword ptr [rsp + 0x28], rdi
cmp	rbx, 0xe
ja	0x1400a4a00
ja	0x1400a4a00
cmp	rdi, 1
jne	0x1400a49e0
jne	0x1400a49e0
movzx	eax, word ptr [r12]
mov	ebp, 1
mov	r13d, 2
mov	word ptr [rsi + 0x10], ax
xor	eax, eax
mov	qword ptr [rsi + 8], rbp
mov	word ptr [rcx + r13], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr [rax + rax]
mov	r13, rbx
mov	rbp, rdi
test	rdi, rdi
je	0x1400a49f6
je	0x1400a49f6
mov	r8, rbx
mov	rdx, r12
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
jmp	0x1400a49c2
jmp	0x1400a49c2
nop	dword ptr [rax + rax]
mov	rcx, rsi
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	rbp, qword ptr [rsp + 0x28]
mov	qword ptr [rsi], rax
mov	rcx, rax
mov	qword ptr [rsi + 0x10], rbp
lea	r13, [rbp + rbp]
jmp	0x1400a49e6
jmp	0x1400a49e6
mov	r9, rbx
lea	rdx, [rip + 0x15e6a]
lea	rcx, [rip + 0x15e11]
call	0x1400aed20
call	0x1400aed20
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [rdx + 8]
mov	r13, qword ptr [rdx]
add	rsi, rsi
mov	rdi, rsi
mov	rbx, rcx
sar	rdi, 1
lea	rcx, [rcx + 0x10]
mov	qword ptr [rbx], rcx
mov	qword ptr [rsp + 0x28], rdi
cmp	rsi, 0xe
ja	0x1400a4ac8
ja	0x1400a4ac8
cmp	rdi, 1
jne	0x1400a4aa8
jne	0x1400a4aa8
movzx	eax, word ptr [r13]
mov	ebp, 1
mov	r12d, 2
mov	word ptr [rbx + 0x10], ax
xor	eax, eax
mov	qword ptr [rbx + 8], rbp
mov	word ptr [rcx + r12], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	r12, rsi
mov	rbp, rdi
test	rdi, rdi
je	0x1400a4abe
je	0x1400a4abe
mov	r8, rsi
mov	rdx, r13
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
jmp	0x1400a4a8b
jmp	0x1400a4a8b
nop	dword ptr [rax + rax]
mov	rcx, rbx
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	rbp, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	qword ptr [rbx + 0x10], rbp
lea	r12, [rbp + rbp]
jmp	0x1400a4aae
jmp	0x1400a4aae
nop	
nop	
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx + 8], 0
mov	qword ptr [rcx], rax
xor	eax, eax
mov	word ptr [rcx + 0x10], ax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
lea	rax, [rcx + 0x10]
mov	qword ptr [rsp + 0x28], rdx
mov	rbx, rcx
mov	esi, r8d
mov	qword ptr [rcx], rax
mov	edi, r8d
cmp	rdx, 7
ja	0x1400a4b50
ja	0x1400a4b50
test	rdx, rdx
jne	0x1400a4b6e
jne	0x1400a4b6e
xor	ecx, ecx
mov	qword ptr [rbx + 8], rdx
mov	word ptr [rax + rdx*2], cx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	rdx, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	qword ptr [rbx + 0x10], rdx
test	rdx, rdx
je	0x1400a4b37
je	0x1400a4b37
xor	ecx, ecx
cmp	rdx, 1
je	0x1400a4ba8
je	0x1400a4ba8
test	dl, 1
je	0x1400a4b90
je	0x1400a4b90
mov	ecx, 1
mov	word ptr [rax], di
cmp	rcx, rdx
je	0x1400a4b37
je	0x1400a4b37
nop	dword ptr [rax + rax]
mov	word ptr [rax + rcx*2], di
mov	word ptr [rax + rcx*2 + 2], di
add	rcx, 2
cmp	rcx, rdx
jne	0x1400a4b90
jne	0x1400a4b90
jmp	0x1400a4b37
jmp	0x1400a4b37
nop	dword ptr [rax]
mov	word ptr [rax], si
jmp	0x1400a4b37
jmp	0x1400a4b37
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, r8
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	rdi, rdx
sub	rsi, rdx
mov	qword ptr [rbx], rcx
mov	rbp, rsi
mov	qword ptr [rbx + 8], 0
sar	rbp, 1
mov	qword ptr [rsp + 0x28], rbp
cmp	rsi, 0xe
ja	0x1400a4c40
ja	0x1400a4c40
cmp	rbp, 1
jne	0x1400a4c20
jne	0x1400a4c20
movzx	eax, word ptr [rdx]
mov	r12d, 1
mov	r13d, 2
mov	word ptr [rbx + 0x10], ax
xor	eax, eax
mov	qword ptr [rbx + 8], r12
mov	word ptr [rcx + r13], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	r13, rsi
mov	r12, rbp
test	rbp, rbp
je	0x1400a4c36
je	0x1400a4c36
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
jmp	0x1400a4c01
jmp	0x1400a4c01
nop	dword ptr [rax + rax]
mov	rcx, rbx
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	r12, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	qword ptr [rbx + 0x10], r12
lea	r13, [r12 + r12]
jmp	0x1400a4c26
jmp	0x1400a4c26
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, r8
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	rdi, rdx
sub	rsi, rdx
mov	qword ptr [rbx], rcx
mov	rbp, rsi
mov	qword ptr [rbx + 8], 0
sar	rbp, 1
mov	qword ptr [rsp + 0x28], rbp
cmp	rsi, 0xe
ja	0x1400a4d00
ja	0x1400a4d00
cmp	rbp, 1
jne	0x1400a4ce0
jne	0x1400a4ce0
movzx	eax, word ptr [rdx]
mov	r12d, 1
mov	r13d, 2
mov	word ptr [rbx + 0x10], ax
xor	eax, eax
mov	qword ptr [rbx + 8], r12
mov	word ptr [rcx + r13], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	r13, rsi
mov	r12, rbp
test	rbp, rbp
je	0x1400a4cf6
je	0x1400a4cf6
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
jmp	0x1400a4cc1
jmp	0x1400a4cc1
nop	dword ptr [rax + rax]
mov	rcx, rbx
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	r12, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	qword ptr [rbx + 0x10], r12
lea	r13, [r12 + r12]
jmp	0x1400a4ce6
jmp	0x1400a4ce6
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, r8
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
mov	rdi, rdx
sub	rsi, rdx
mov	qword ptr [rbx], rcx
mov	rbp, rsi
mov	qword ptr [rbx + 8], 0
sar	rbp, 1
mov	qword ptr [rsp + 0x28], rbp
cmp	rsi, 0xe
ja	0x1400a4dc0
ja	0x1400a4dc0
cmp	rbp, 1
jne	0x1400a4da0
jne	0x1400a4da0
movzx	eax, word ptr [rdx]
mov	r12d, 1
mov	r13d, 2
mov	word ptr [rbx + 0x10], ax
xor	eax, eax
mov	qword ptr [rbx + 8], r12
mov	word ptr [rcx + r13], ax
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	r13, rsi
mov	r12, rbp
test	rbp, rbp
je	0x1400a4db6
je	0x1400a4db6
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rbx]
jmp	0x1400a4d81
jmp	0x1400a4d81
nop	dword ptr [rax + rax]
mov	rcx, rbx
lea	rdx, [rsp + 0x28]
xor	r8d, r8d
call	0x1400a37b0
call	0x1400a37b0
mov	r12, qword ptr [rsp + 0x28]
mov	qword ptr [rbx], rax
mov	rcx, rax
mov	qword ptr [rbx + 0x10], r12
lea	r13, [r12 + r12]
jmp	0x1400a4da6
jmp	0x1400a4da6
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rcx, 0x10
cmp	rax, rcx
je	0x1400a4e08
je	0x1400a4e08
mov	rcx, rax
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rcx, 0x10
cmp	rax, rcx
je	0x1400a4e28
je	0x1400a4e28
mov	rcx, rax
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	r8, qword ptr [rdx + 8]
mov	rsi, rcx
mov	rcx, qword ptr [rcx]
mov	rbx, rdx
mov	rdx, qword ptr [rdx]
lea	rax, [rsi + 0x10]
cmp	rcx, rax
lea	rax, [rbx + 0x10]
je	0x1400a4e90
je	0x1400a4e90
cmp	rax, rdx
je	0x1400a4eb0
je	0x1400a4eb0
movq	xmm0, r8
mov	r9, qword ptr [rsi + 0x10]
mov	qword ptr [rsi], rdx
movhps	xmm0, qword ptr [rbx + 0x10]
movups	xmmword ptr [rsi + 8], xmm0
test	rcx, rcx
je	0x1400a4ee8
je	0x1400a4ee8
mov	qword ptr [rbx], rcx
mov	qword ptr [rbx + 0x10], r9
xor	eax, eax
mov	qword ptr [rbx + 8], 0
mov	word ptr [rcx], ax
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
cmp	rax, rdx
je	0x1400a4eb0
je	0x1400a4eb0
movq	xmm0, r8
mov	qword ptr [rsi], rdx
mov	rcx, rax
movhps	xmm0, qword ptr [rbx + 0x10]
movups	xmmword ptr [rsi + 8], xmm0
mov	qword ptr [rbx], rcx
jmp	0x1400a4e78
jmp	0x1400a4e78
nop	dword ptr [rax]
cmp	rsi, rbx
je	0x1400a4f00
je	0x1400a4f00
test	r8, r8
je	0x1400a4ed2
je	0x1400a4ed2
cmp	r8, 1
je	0x1400a4ef0
je	0x1400a4ef0
add	r8, r8
call	0x140015998
call	0x140015998
mov	rcx, qword ptr [rsi]
mov	r8, qword ptr [rbx + 8]
mov	rdx, qword ptr [rbx]
xor	r9d, r9d
mov	qword ptr [rsi + 8], r8
mov	word ptr [rcx + r8*2], r9w
mov	rcx, rdx
jmp	0x1400a4e78
jmp	0x1400a4e78
nop	dword ptr [rax + rax]
mov	rcx, rax
jmp	0x1400a4ea8
jmp	0x1400a4ea8
nop	dword ptr [rax]
movzx	eax, word ptr [rdx]
mov	word ptr [rcx], ax
jmp	0x1400a4ed2
jmp	0x1400a4ed2
nop	dword ptr [rax + rax]
mov	rcx, rdx
jmp	0x1400a4e78
jmp	0x1400a4e78
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, rcx
mov	rcx, rdx
mov	rsi, rdx
call	0x140015a60
call	0x140015a60
mov	r9, rsi
xor	edx, edx
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], rax
mov	r8, qword ptr [rbx + 8]
call	0x1400a1070
call	0x1400a1070
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x1400a36f0
call	0x1400a36f0
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rdx + 8]
mov	r8, qword ptr [rcx + 8]
mov	qword ptr [rsp + 0x20], rax
mov	r9, qword ptr [rdx]
mov	rbx, rcx
xor	edx, edx
call	0x1400a1070
call	0x1400a1070
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	r9d, 1
mov	r8, qword ptr [rcx + 8]
movzx	edx, dx
mov	rbx, rcx
mov	dword ptr [rsp + 0x20], edx
xor	edx, edx
call	0x1400a1880
call	0x1400a1880
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
lea	rax, [rax + rdx*2]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rbx, rcx
mov	rcx, rdx
mov	rsi, rdx
call	0x140015a60
call	0x140015a60
mov	rcx, qword ptr [rbx + 8]
movabs	rdx, 0x1fffffffffffffff
sub	rdx, rcx
cmp	rdx, rax
jb	0x1400a5098
jb	0x1400a5098
mov	rdx, qword ptr [rbx]
lea	r8, [rbx + 0x10]
lea	rdi, [rax + rcx]
cmp	rdx, r8
je	0x1400a5080
je	0x1400a5080
mov	r8, qword ptr [rbx + 0x10]
cmp	r8, rdi
jb	0x1400a5060
jb	0x1400a5060
test	rax, rax
je	0x1400a5046
je	0x1400a5046
lea	rcx, [rdx + rcx*2]
cmp	rax, 1
je	0x1400a5090
je	0x1400a5090
mov	rdx, rsi
lea	r8, [rax + rax]
call	0x140015998
call	0x140015998
mov	rdx, qword ptr [rbx]
xor	eax, eax
mov	qword ptr [rbx + 8], rdi
mov	word ptr [rdx + rdi*2], ax
mov	rax, rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
mov	qword ptr [rsp + 0x20], rax
mov	rdx, rcx
mov	r9, rsi
xor	r8d, r8d
mov	rcx, rbx
call	0x1400a3830
call	0x1400a3830
mov	rdx, qword ptr [rbx]
jmp	0x1400a5046
jmp	0x1400a5046
nop	dword ptr [rax + rax]
mov	r8d, 7
jmp	0x1400a5023
jmp	0x1400a5023
nop	dword ptr [rax + rax]
movzx	eax, word ptr [rsi]
mov	word ptr [rcx], ax
jmp	0x1400a5046
jmp	0x1400a5046
lea	rcx, [rip + 0x1588d]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
movabs	rax, 0x1fffffffffffffff
mov	r8, qword ptr [rdx + 8]
mov	r9, qword ptr [rdx]
mov	rdx, qword ptr [rcx + 8]
sub	rax, rdx
mov	rbx, rcx
cmp	rax, r8
jb	0x1400a5149
jb	0x1400a5149
mov	rax, qword ptr [rcx]
lea	rcx, [rcx + 0x10]
lea	rsi, [r8 + rdx]
cmp	rax, rcx
je	0x1400a5138
je	0x1400a5138
mov	rcx, qword ptr [rbx + 0x10]
cmp	rcx, rsi
jb	0x1400a5120
jb	0x1400a5120
test	r8, r8
je	0x1400a510c
je	0x1400a510c
lea	rcx, [rax + rdx*2]
cmp	r8, 1
je	0x1400a5140
je	0x1400a5140
add	r8, r8
mov	rdx, r9
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rbx]
xor	edx, edx
mov	qword ptr [rbx + 8], rsi
mov	word ptr [rax + rsi*2], dx
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	qword ptr [rsp + 0x20], r8
mov	rcx, rbx
xor	r8d, r8d
call	0x1400a3830
call	0x1400a3830
mov	rax, qword ptr [rbx]
jmp	0x1400a510c
jmp	0x1400a510c
nop	dword ptr [rax]
mov	ecx, 7
jmp	0x1400a50ea
jmp	0x1400a50ea
nop	
movzx	edx, word ptr [r9]
mov	word ptr [rcx], dx
jmp	0x1400a510c
jmp	0x1400a510c
lea	rcx, [rip + 0x157dc]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
movabs	rax, 0x1fffffffffffffff
mov	r9, qword ptr [rdx]
mov	r8, qword ptr [rdx + 8]
mov	rdx, qword ptr [rcx + 8]
sub	rax, rdx
mov	rbx, rcx
cmp	rax, r8
jb	0x1400a51f9
jb	0x1400a51f9
mov	rax, qword ptr [rcx]
lea	rcx, [rcx + 0x10]
lea	rsi, [r8 + rdx]
cmp	rax, rcx
je	0x1400a51e8
je	0x1400a51e8
mov	rcx, qword ptr [rbx + 0x10]
cmp	rcx, rsi
jb	0x1400a51d0
jb	0x1400a51d0
test	r8, r8
je	0x1400a51bc
je	0x1400a51bc
lea	rcx, [rax + rdx*2]
cmp	r8, 1
je	0x1400a51f0
je	0x1400a51f0
add	r8, r8
mov	rdx, r9
call	0x140015998
call	0x140015998
mov	rax, qword ptr [rbx]
xor	edx, edx
mov	qword ptr [rbx + 8], rsi
mov	word ptr [rax + rsi*2], dx
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	qword ptr [rsp + 0x20], r8
mov	rcx, rbx
xor	r8d, r8d
call	0x1400a3830
call	0x1400a3830
mov	rax, qword ptr [rbx]
jmp	0x1400a51bc
jmp	0x1400a51bc
nop	dword ptr [rax]
mov	ecx, 7
jmp	0x1400a519a
jmp	0x1400a519a
nop	
movzx	edx, word ptr [r9]
mov	word ptr [rcx], dx
jmp	0x1400a51bc
jmp	0x1400a51bc
lea	rcx, [rip + 0x1572c]
call	0x1400b3ba0
call	0x1400b3ba0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [rcx + 8]
mov	rax, qword ptr [rcx]
lea	rbp, [rsi + 1]
mov	edi, edx
lea	rdx, [rcx + 0x10]
mov	rbx, rcx
cmp	rax, rdx
je	0x1400a5280
je	0x1400a5280
mov	rdx, qword ptr [rcx + 0x10]
cmp	rdx, rbp
jb	0x1400a5258
jb	0x1400a5258
xor	edx, edx
mov	word ptr [rax + rsi*2], di
mov	qword ptr [rbx + 8], rbp
mov	word ptr [rax + rsi*2 + 2], dx
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
xor	r9d, r9d
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], 1
call	0x1400a3830
call	0x1400a3830
mov	rax, qword ptr [rbx]
jmp	0x1400a523a
jmp	0x1400a523a
nop	word ptr [rax + rax]
mov	edx, 7
jmp	0x1400a5235
jmp	0x1400a5235
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	rsi, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x20bf1]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x207be]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a52e0
jne	0x1400a52e0
cmp	byte ptr [rsi + 1], 0
jne	0x1400a52e0
jne	0x1400a52e0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x14677]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a52d0
je	0x1400a52d0
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a7550
call	0x1400a7550
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x20b41]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x2070e]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a5390
jne	0x1400a5390
cmp	byte ptr [rsi + 1], 0
jne	0x1400a5390
jne	0x1400a5390
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x145c7]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a5380
je	0x1400a5380
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a7550
call	0x1400a7550
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	rsi, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x20a91]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x2065e]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a5440
jne	0x1400a5440
cmp	byte ptr [rsi + 1], 0
jne	0x1400a5440
jne	0x1400a5440
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x14517]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a5430
je	0x1400a5430
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a7550
call	0x1400a7550
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x209e1]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x205ae]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a54f0
jne	0x1400a54f0
cmp	byte ptr [rsi + 1], 0
jne	0x1400a54f0
jne	0x1400a54f0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x14467]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a54e0
je	0x1400a54e0
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a7550
call	0x1400a7550
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x20944]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x20914]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x208e4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	rsi, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x208e1]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x204ae]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a5630
jne	0x1400a5630
cmp	byte ptr [rsi + 1], 0
jne	0x1400a5630
jne	0x1400a5630
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x146b7]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a5620
je	0x1400a5620
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a7700
call	0x1400a7700
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x20831]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x203fe]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a56e0
jne	0x1400a56e0
cmp	byte ptr [rsi + 1], 0
jne	0x1400a56e0
jne	0x1400a56e0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x14607]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a56d0
je	0x1400a56d0
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a7700
call	0x1400a7700
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	rsi, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x20781]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x2034e]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a5790
jne	0x1400a5790
cmp	byte ptr [rsi + 1], 0
jne	0x1400a5790
jne	0x1400a5790
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x14557]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a5780
je	0x1400a5780
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a7700
call	0x1400a7700
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x206d1]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x2029e]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a5840
jne	0x1400a5840
cmp	byte ptr [rsi + 1], 0
jne	0x1400a5840
jne	0x1400a5840
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x144a7]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a5830
je	0x1400a5830
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a7700
call	0x1400a7700
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x20634]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x20604]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x205d4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	rsi, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x205d1]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x2019e]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a5980
jne	0x1400a5980
cmp	byte ptr [rsi + 1], 0
jne	0x1400a5980
jne	0x1400a5980
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x13fd7]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a5970
je	0x1400a5970
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a78d0
call	0x1400a78d0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
jmp	0x1400a5930
jmp	0x1400a5930
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	rsi, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x20511]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x200de]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a5a40
jne	0x1400a5a40
cmp	byte ptr [rsi + 1], 0
jne	0x1400a5a40
jne	0x1400a5a40
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x13f17]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a5a30
je	0x1400a5a30
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a78d0
call	0x1400a78d0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
jmp	0x1400a5930
jmp	0x1400a5930
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x20464]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x20434]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x20404]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	rsi, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x20401]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x1ffce]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a5b90
jne	0x1400a5b90
cmp	byte ptr [rsi + 1], 0
jne	0x1400a5b90
jne	0x1400a5b90
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x14157]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a5b80
je	0x1400a5b80
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a7aa0
call	0x1400a7aa0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
jmp	0x1400a5b40
jmp	0x1400a5b40
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	rsi, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x20341]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0x1ff0e]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a5c50
jne	0x1400a5c50
cmp	byte ptr [rsi + 1], 0
jne	0x1400a5c50
jne	0x1400a5c50
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rip + 0x14097]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a5c40
je	0x1400a5c40
lea	rdi, [rbx + 0x10]
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
nop	
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a7aa0
call	0x1400a7aa0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
mov	rdx, qword ptr [rdx]
jmp	0x1400a5b40
jmp	0x1400a5b40
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x20294]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x20264]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x20234]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x20227]
mov	qword ptr [rcx], rax
call	0x1400a7ad0
call	0x1400a7ad0
lea	rax, [rip + 0x1fdf8]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a5da0
jne	0x1400a5da0
cmp	byte ptr [rsi + 1], 0
jne	0x1400a5da0
jne	0x1400a5da0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
lea	rdx, [rip + 0x13bb7]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a5d96
je	0x1400a5d96
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
mov	rcx, rbx
call	0x1400a7ad0
call	0x1400a7ad0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a7e30
call	0x1400a7e30
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x20167]
mov	qword ptr [rcx], rax
call	0x1400a7ad0
call	0x1400a7ad0
lea	rax, [rip + 0x1fd38]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a5e60
jne	0x1400a5e60
cmp	byte ptr [rsi + 1], 0
jne	0x1400a5e60
jne	0x1400a5e60
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
lea	rdx, [rip + 0x13af7]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a5e56
je	0x1400a5e56
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
mov	rcx, rbx
call	0x1400a7ad0
call	0x1400a7ad0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a7e30
call	0x1400a7e30
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x200a7]
mov	qword ptr [rcx], rax
call	0x1400a7ad0
call	0x1400a7ad0
lea	rax, [rip + 0x1fc78]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a5f20
jne	0x1400a5f20
cmp	byte ptr [rsi + 1], 0
jne	0x1400a5f20
jne	0x1400a5f20
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
lea	rdx, [rip + 0x13a37]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a5f16
je	0x1400a5f16
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
mov	rcx, rbx
call	0x1400a7ad0
call	0x1400a7ad0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a7e30
call	0x1400a7e30
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1ffe7]
mov	qword ptr [rcx], rax
call	0x1400a7ad0
call	0x1400a7ad0
lea	rax, [rip + 0x1fbb8]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a5fe0
jne	0x1400a5fe0
cmp	byte ptr [rsi + 1], 0
jne	0x1400a5fe0
jne	0x1400a5fe0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
lea	rdx, [rip + 0x13977]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a5fd6
je	0x1400a5fd6
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
mov	rcx, rbx
call	0x1400a7ad0
call	0x1400a7ad0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a7e30
call	0x1400a7e30
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1fb24]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400a7e30
call	0x1400a7e30
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1faf9]
mov	qword ptr [rcx], rax
jmp	0x1400a7e30
jmp	0x1400a7e30
nop	
lea	rax, [rip + 0x1fae9]
mov	qword ptr [rcx], rax
jmp	0x1400a7e30
jmp	0x1400a7e30
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1ff27]
mov	qword ptr [rcx], rax
call	0x1400a7e80
call	0x1400a7e80
lea	rax, [rip + 0x1faf8]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a60f0
jne	0x1400a60f0
cmp	byte ptr [rsi + 1], 0
jne	0x1400a60f0
jne	0x1400a60f0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
lea	rdx, [rip + 0x13bf7]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a60e6
je	0x1400a60e6
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
mov	rcx, rbx
call	0x1400a7e80
call	0x1400a7e80
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a81e0
call	0x1400a81e0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1fe67]
mov	qword ptr [rcx], rax
call	0x1400a7e80
call	0x1400a7e80
lea	rax, [rip + 0x1fa38]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a61b0
jne	0x1400a61b0
cmp	byte ptr [rsi + 1], 0
jne	0x1400a61b0
jne	0x1400a61b0
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
lea	rdx, [rip + 0x13b37]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a61a6
je	0x1400a61a6
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
mov	rcx, rbx
call	0x1400a7e80
call	0x1400a7e80
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a81e0
call	0x1400a81e0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1fda7]
mov	qword ptr [rcx], rax
call	0x1400a7e80
call	0x1400a7e80
lea	rax, [rip + 0x1f978]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a6270
jne	0x1400a6270
cmp	byte ptr [rsi + 1], 0
jne	0x1400a6270
jne	0x1400a6270
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
lea	rdx, [rip + 0x13a77]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a6266
je	0x1400a6266
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
mov	rcx, rbx
call	0x1400a7e80
call	0x1400a7e80
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a81e0
call	0x1400a81e0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1fce7]
mov	qword ptr [rcx], rax
call	0x1400a7e80
call	0x1400a7e80
lea	rax, [rip + 0x1f8b8]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a6330
jne	0x1400a6330
cmp	byte ptr [rsi + 1], 0
jne	0x1400a6330
jne	0x1400a6330
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
lea	rdx, [rip + 0x139b7]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a6326
je	0x1400a6326
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
mov	rcx, rbx
call	0x1400a7e80
call	0x1400a7e80
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x1400a81e0
call	0x1400a81e0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1f824]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400a81e0
call	0x1400a81e0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1f7f9]
mov	qword ptr [rcx], rax
jmp	0x1400a81e0
jmp	0x1400a81e0
nop	
lea	rax, [rip + 0x1f7e9]
mov	qword ptr [rcx], rax
jmp	0x1400a81e0
jmp	0x1400a81e0
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f81e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f7fe]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f7de]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f7be]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1fbc4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1fb99]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1fb89]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f7ae]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f78e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f76e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	r8, r8
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f74e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1fb54]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1fb29]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1fb19]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f304]
mov	qword ptr [rcx], rax
call	0x14009c040
call	0x14009c040
lea	rax, [rip + 0x1f715]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a65e8
jne	0x1400a65e8
cmp	byte ptr [rsi + 1], 0
jne	0x1400a65e8
jne	0x1400a65e8
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x1336f]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a65d9
je	0x1400a65d9
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x14009c040
call	0x14009c040
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009c3b0
call	0x14009c3b0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f234]
mov	qword ptr [rcx], rax
call	0x14009c040
call	0x14009c040
lea	rax, [rip + 0x1f645]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a66b8
jne	0x1400a66b8
cmp	byte ptr [rsi + 1], 0
jne	0x1400a66b8
jne	0x1400a66b8
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x1329f]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a66a9
je	0x1400a66a9
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x14009c040
call	0x14009c040
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009c3b0
call	0x14009c3b0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f164]
mov	qword ptr [rcx], rax
call	0x14009c040
call	0x14009c040
lea	rax, [rip + 0x1f575]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a6788
jne	0x1400a6788
cmp	byte ptr [rsi + 1], 0
jne	0x1400a6788
jne	0x1400a6788
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x131cf]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a6779
je	0x1400a6779
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x14009c040
call	0x14009c040
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009c3b0
call	0x14009c3b0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f094]
mov	qword ptr [rcx], rax
call	0x14009c040
call	0x14009c040
lea	rax, [rip + 0x1f4a5]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a6858
jne	0x1400a6858
cmp	byte ptr [rsi + 1], 0
jne	0x1400a6858
jne	0x1400a6858
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x130ff]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a6849
je	0x1400a6849
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x14009c040
call	0x14009c040
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009c3b0
call	0x14009c3b0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1f404]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009c3b0
call	0x14009c3b0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1f3d9]
mov	qword ptr [rcx], rax
jmp	0x14009c3b0
jmp	0x14009c3b0
nop	
lea	rax, [rip + 0x1f3c9]
mov	qword ptr [rcx], rax
jmp	0x14009c3b0
jmp	0x14009c3b0
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1efe4]
mov	qword ptr [rcx], rax
call	0x14009c400
call	0x14009c400
lea	rax, [rip + 0x1f3f5]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a6978
jne	0x1400a6978
cmp	byte ptr [rsi + 1], 0
jne	0x1400a6978
jne	0x1400a6978
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x12fdf]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a6969
je	0x1400a6969
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x14009c400
call	0x14009c400
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009c770
call	0x14009c770
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1ef14]
mov	qword ptr [rcx], rax
call	0x14009c400
call	0x14009c400
lea	rax, [rip + 0x1f325]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a6a48
jne	0x1400a6a48
cmp	byte ptr [rsi + 1], 0
jne	0x1400a6a48
jne	0x1400a6a48
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x12f0f]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a6a39
je	0x1400a6a39
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x14009c400
call	0x14009c400
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009c770
call	0x14009c770
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1ee44]
mov	qword ptr [rcx], rax
call	0x14009c400
call	0x14009c400
lea	rax, [rip + 0x1f255]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a6b18
jne	0x1400a6b18
cmp	byte ptr [rsi + 1], 0
jne	0x1400a6b18
jne	0x1400a6b18
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x12e3f]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a6b09
je	0x1400a6b09
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x14009c400
call	0x14009c400
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009c770
call	0x14009c770
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1ed74]
mov	qword ptr [rcx], rax
call	0x14009c400
call	0x14009c400
lea	rax, [rip + 0x1f185]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a6be8
jne	0x1400a6be8
cmp	byte ptr [rsi + 1], 0
jne	0x1400a6be8
jne	0x1400a6be8
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x12d6f]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a6bd9
je	0x1400a6bd9
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x14009c400
call	0x14009c400
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009c770
call	0x14009c770
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1f0e4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009c770
call	0x14009c770
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1f0b9]
mov	qword ptr [rcx], rax
jmp	0x14009c770
jmp	0x14009c770
nop	
lea	rax, [rip + 0x1f0a9]
mov	qword ptr [rcx], rax
jmp	0x14009c770
jmp	0x14009c770
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1ecc4]
mov	qword ptr [rcx], rax
call	0x14009c7c0
call	0x14009c7c0
lea	rax, [rip + 0x1f0d5]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a6d08
jne	0x1400a6d08
cmp	byte ptr [rsi + 1], 0
jne	0x1400a6d08
jne	0x1400a6d08
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x12fdf]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a6cf9
je	0x1400a6cf9
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x14009c7c0
call	0x14009c7c0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009cb30
call	0x14009cb30
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1ebf4]
mov	qword ptr [rcx], rax
call	0x14009c7c0
call	0x14009c7c0
lea	rax, [rip + 0x1f005]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a6dd8
jne	0x1400a6dd8
cmp	byte ptr [rsi + 1], 0
jne	0x1400a6dd8
jne	0x1400a6dd8
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x12f0f]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a6dc9
je	0x1400a6dc9
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x14009c7c0
call	0x14009c7c0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009cb30
call	0x14009cb30
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1eb24]
mov	qword ptr [rcx], rax
call	0x14009c7c0
call	0x14009c7c0
lea	rax, [rip + 0x1ef35]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a6ea8
jne	0x1400a6ea8
cmp	byte ptr [rsi + 1], 0
jne	0x1400a6ea8
jne	0x1400a6ea8
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x12e3f]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a6e99
je	0x1400a6e99
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x14009c7c0
call	0x14009c7c0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009cb30
call	0x14009cb30
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1ea54]
mov	qword ptr [rcx], rax
call	0x14009c7c0
call	0x14009c7c0
lea	rax, [rip + 0x1ee65]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a6f78
jne	0x1400a6f78
cmp	byte ptr [rsi + 1], 0
jne	0x1400a6f78
jne	0x1400a6f78
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x12d6f]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a6f69
je	0x1400a6f69
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x14009c7c0
call	0x14009c7c0
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009cb30
call	0x14009cb30
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1edc4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009cb30
call	0x14009cb30
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1ed99]
mov	qword ptr [rcx], rax
jmp	0x14009cb30
jmp	0x14009cb30
nop	
lea	rax, [rip + 0x1ed89]
mov	qword ptr [rcx], rax
jmp	0x14009cb30
jmp	0x14009cb30
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e9a4]
mov	qword ptr [rcx], rax
call	0x14009cb80
call	0x14009cb80
lea	rax, [rip + 0x1edb5]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a7098
jne	0x1400a7098
cmp	byte ptr [rsi + 1], 0
jne	0x1400a7098
jne	0x1400a7098
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x12c4f]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a7089
je	0x1400a7089
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x14009cb80
call	0x14009cb80
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009cef0
call	0x14009cef0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e8d4]
mov	qword ptr [rcx], rax
call	0x14009cb80
call	0x14009cb80
lea	rax, [rip + 0x1ece5]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a7168
jne	0x1400a7168
cmp	byte ptr [rsi + 1], 0
jne	0x1400a7168
jne	0x1400a7168
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x12b7f]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a7159
je	0x1400a7159
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x14009cb80
call	0x14009cb80
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009cef0
call	0x14009cef0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rsi, rdx
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e804]
mov	qword ptr [rcx], rax
call	0x14009cb80
call	0x14009cb80
lea	rax, [rip + 0x1ec15]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a7238
jne	0x1400a7238
cmp	byte ptr [rsi + 1], 0
jne	0x1400a7238
jne	0x1400a7238
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x12aaf]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a7229
je	0x1400a7229
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x14009cb80
call	0x14009cb80
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009cef0
call	0x14009cef0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
xor	eax, eax
mov	rsi, qword ptr [rdx]
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	r8d, r8d
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e734]
mov	qword ptr [rcx], rax
call	0x14009cb80
call	0x14009cb80
lea	rax, [rip + 0x1eb45]
mov	qword ptr [rbx], rax
cmp	byte ptr [rsi], 0x43
jne	0x1400a7308
jne	0x1400a7308
cmp	byte ptr [rsi + 1], 0
jne	0x1400a7308
jne	0x1400a7308
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rip + 0x129df]
mov	rcx, rsi
call	0x1400159e8
call	0x1400159e8
test	eax, eax
je	0x1400a72f9
je	0x1400a72f9
lea	rdi, [rsp + 0x28]
xor	r8d, r8d
mov	rdx, rsi
mov	rcx, rdi
call	0x14009bb80
call	0x14009bb80
mov	rdx, qword ptr [rsp + 0x28]
xor	r8d, r8d
mov	rcx, rbx
call	0x14009cb80
call	0x14009cb80
mov	rcx, rdi
call	0x14009bbd0
call	0x14009bbd0
nop	
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009cef0
call	0x14009cef0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1eaa4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009cef0
call	0x14009cef0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1ea79]
mov	qword ptr [rcx], rax
jmp	0x14009cef0
jmp	0x14009cef0
nop	
lea	rax, [rip + 0x1ea69]
mov	qword ptr [rcx], rax
jmp	0x14009cef0
jmp	0x14009cef0
nop	
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	qword ptr [rsp + 0x38], rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1eab1]
mov	qword ptr [rcx], rax
lea	rcx, [rsp + 0x38]
call	0x14009bb70
call	0x14009bb70
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1ea75]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	qword ptr [rsp + 0x38], rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1ea21]
mov	qword ptr [rcx], rax
lea	rcx, [rsp + 0x38]
call	0x14009bb70
call	0x14009bb70
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e9e5]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1e9a4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1e974]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1e944]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	qword ptr [rsp + 0x38], rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e941]
mov	qword ptr [rcx], rax
lea	rcx, [rsp + 0x38]
call	0x14009bb70
call	0x14009bb70
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e905]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	qword ptr [rsp + 0x38], rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e8b1]
mov	qword ptr [rcx], rax
lea	rcx, [rsp + 0x38]
call	0x14009bb70
call	0x14009bb70
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e875]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1e834]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1e804]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1e7d4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e7d5]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e785]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e735]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e6e5]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1e6a4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1e674]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1e644]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e645]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e5f5]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e5a5]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e555]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1e514]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1e4e4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1e4b4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx + 0x10]
mov	rbx, rcx
test	rax, rax
je	0x1400a7b87
je	0x1400a7b87
lea	rdx, [rip + 0x11664]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x10], rdx
mov	byte ptr [rax + 0x20], 0
mov	byte ptr [rax + 0x48], 0x2e
mov	rax, qword ptr [rbx + 0x10]
mov	byte ptr [rax + 0x49], 0x2c
mov	rax, qword ptr [rip + 0x16c51]
mov	r8, qword ptr [rax]
xor	eax, eax
nop	dword ptr [rax]
movzx	ecx, byte ptr [r8 + rax]
mov	rdx, qword ptr [rbx + 0x10]
mov	byte ptr [rdx + rax + 0x4a], cl
add	rax, 1
cmp	rax, 0x24
jne	0x1400a7b18
jne	0x1400a7b18
mov	rax, qword ptr [rip + 0x16c1a]
mov	r8, qword ptr [rax]
xor	eax, eax
nop	dword ptr [rax + rax]
movzx	ecx, byte ptr [r8 + rax]
mov	rdx, qword ptr [rbx + 0x10]
mov	byte ptr [rdx + rax + 0x6e], cl
add	rax, 1
cmp	rax, 0x1a
jne	0x1400a7b40
jne	0x1400a7b40
mov	rax, qword ptr [rbx + 0x10]
lea	rbx, [rip + 0x115ef]
mov	qword ptr [rax + 0x28], rbx
lea	rbx, [rip + 0x115e9]
mov	qword ptr [rax + 0x30], 4
mov	qword ptr [rax + 0x38], rbx
mov	qword ptr [rax + 0x40], 5
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	ecx, 0x90
call	0x1400b2c30
call	0x1400b2c30
mov	rdx, qword ptr [rip + 0x173c8]
mov	dword ptr [rax + 8], 0
add	rdx, 0x10
mov	qword ptr [rax + 0x10], 0
mov	qword ptr [rax], rdx
xor	edx, edx
mov	qword ptr [rax + 0x18], 0
mov	byte ptr [rax + 0x20], 0
mov	qword ptr [rax + 0x28], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x38], 0
mov	qword ptr [rax + 0x40], 0
mov	word ptr [rax + 0x48], dx
mov	byte ptr [rax + 0x88], 0
mov	qword ptr [rbx + 0x10], rax
jmp	0x1400a7ae5
jmp	0x1400a7ae5
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e38f]
mov	qword ptr [rcx], rax
call	0x1400a7ad0
call	0x1400a7ad0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e33d]
mov	qword ptr [rcx], rax
call	0x1400a7ad0
call	0x1400a7ad0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e2eb]
mov	qword ptr [rcx], rax
call	0x1400a7ad0
call	0x1400a7ad0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e29f]
mov	qword ptr [rcx], rax
call	0x1400a7ad0
call	0x1400a7ad0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e24d]
mov	qword ptr [rcx], rax
call	0x1400a7ad0
call	0x1400a7ad0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e1fb]
mov	qword ptr [rcx], rax
call	0x1400a7ad0
call	0x1400a7ad0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x16f53]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x1400a7df6
je	0x1400a7df6
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rbx
mov	rsi, rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
jmp	0x1400a7e17
jmp	0x1400a7e17
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x16ef3]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x1400a7e56
je	0x1400a7e56
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x14009bc00
jmp	0x14009bc00
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx + 0x10]
mov	rbx, rcx
test	rax, rax
je	0x1400a7f2c
je	0x1400a7f2c
lea	rbx, [rip + 0x112b4]
mov	rdx, qword ptr [rip + 0x168bd]
mov	byte ptr [rax + 0x20], 0
mov	qword ptr [rax + 0x10], rbx
mov	qword ptr [rax + 0x18], 0
mov	r8, qword ptr [rdx]
xor	edx, edx
mov	dword ptr [rax + 0x48], 0x2c002e
nop	
movsx	cx, byte ptr [r8 + rdx]
mov	word ptr [rax + rdx*2 + 0x4c], cx
add	rdx, 1
cmp	rdx, 0x24
jne	0x1400a7ec0
jne	0x1400a7ec0
mov	rdx, qword ptr [rip + 0x16874]
mov	r8, qword ptr [rdx]
xor	edx, edx
nop	dword ptr [rax]
movsx	cx, byte ptr [r8 + rdx]
mov	word ptr [rax + rdx*2 + 0x94], cx
add	rdx, 1
cmp	rdx, 0x1a
jne	0x1400a7ee8
jne	0x1400a7ee8
lea	rbx, [rip + 0x11255]
mov	qword ptr [rax + 0x30], 4
mov	qword ptr [rax + 0x28], rbx
lea	rbx, [rip + 0x1124c]
mov	qword ptr [rax + 0x38], rbx
mov	qword ptr [rax + 0x40], 5
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	ecx, 0xd0
call	0x1400b2c30
call	0x1400b2c30
mov	rcx, qword ptr [rip + 0x17033]
mov	dword ptr [rax + 8], 0
lea	rdx, [rcx + 0x10]
mov	qword ptr [rax + 0x10], 0
mov	qword ptr [rax], rdx
mov	qword ptr [rax + 0x18], 0
mov	byte ptr [rax + 0x20], 0
mov	qword ptr [rax + 0x28], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x38], 0
mov	qword ptr [rax + 0x40], 0
mov	dword ptr [rax + 0x48], 0
mov	byte ptr [rax + 0xc8], 0
mov	qword ptr [rbx + 0x10], rax
jmp	0x1400a7e95
jmp	0x1400a7e95
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1e02f]
mov	qword ptr [rcx], rax
call	0x1400a7e80
call	0x1400a7e80
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1dfdd]
mov	qword ptr [rcx], rax
call	0x1400a7e80
call	0x1400a7e80
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1df8b]
mov	qword ptr [rcx], rax
call	0x1400a7e80
call	0x1400a7e80
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1df3f]
mov	qword ptr [rcx], rax
call	0x1400a7e80
call	0x1400a7e80
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1deed]
mov	qword ptr [rcx], rax
call	0x1400a7e80
call	0x1400a7e80
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1de9b]
mov	qword ptr [rcx], rax
call	0x1400a7e80
call	0x1400a7e80
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x16bb3]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x1400a81a6
je	0x1400a81a6
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rbx
mov	rsi, rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
jmp	0x1400a81c7
jmp	0x1400a81c7
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x16b53]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 0x10]
test	rcx, rcx
je	0x1400a8206
je	0x1400a8206
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 8]
call	qword ptr [rax + 8]
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x14009bc00
jmp	0x14009bc00
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1ddfe]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1ddde]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1ddc4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1dd99]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1dd89]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1ddce]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1ddae]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1dd94]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1dd69]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1dd59]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1dd9e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1dd7e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1dd64]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1dd39]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1dd29]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1dd3e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1dd1e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1dd04]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1dcd9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1dcc9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1dcde]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1dcbe]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1dca4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1dc79]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1dc69]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1dc7e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1dc5e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1dc44]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1dc19]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1dc09]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1f244]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1f219]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1f264]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1f239]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1f284]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1f259]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1f2a4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1f279]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	qword ptr [rsp + 0x38], rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f6f1]
mov	qword ptr [rcx], rax
lea	rcx, [rsp + 0x38]
call	0x14009bb70
call	0x14009bb70
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f6b5]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rax, qword ptr [rip + 0x16908]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
push	rsi
push	rbx
sub	rsp, 0x28
lea	rax, [rip + 0x1f673]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rax, qword ptr [rip + 0x168cd]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rsi, rax
mov	rax, qword ptr [rip + 0x168a6]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
jmp	0x1400a8779
jmp	0x1400a8779
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
lea	rax, [rip + 0x1f603]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rax, qword ptr [rip + 0x1685d]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x14009bc00
jmp	0x14009bc00
mov	rsi, rax
mov	rax, qword ptr [rip + 0x1683e]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	qword ptr [rsp + 0x38], rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f5f1]
mov	qword ptr [rcx], rax
lea	rcx, [rsp + 0x38]
call	0x14009bb70
call	0x14009bb70
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f5b5]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rax, qword ptr [rip + 0x167b8]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
push	rsi
push	rbx
sub	rsp, 0x28
lea	rax, [rip + 0x1f573]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rax, qword ptr [rip + 0x1677d]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rsi, rax
mov	rax, qword ptr [rip + 0x16756]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
mov	rsi, rax
jmp	0x1400a88d9
jmp	0x1400a88d9
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
lea	rax, [rip + 0x1f503]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rax, qword ptr [rip + 0x1670d]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x14009bc00
jmp	0x14009bc00
mov	rsi, rax
mov	rax, qword ptr [rip + 0x166ee]
mov	rcx, rbx
add	rax, 0x10
mov	qword ptr [rbx], rax
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	qword ptr [rsp + 0x38], rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f4f1]
mov	qword ptr [rcx], rax
lea	rcx, [rsp + 0x38]
call	0x14009bb70
call	0x14009bb70
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f4b5]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	qword ptr [rsp + 0x38], rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f461]
mov	qword ptr [rcx], rax
lea	rcx, [rsp + 0x38]
call	0x14009bb70
call	0x14009bb70
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f425]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1f3e4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1f3b4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1f384]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	qword ptr [rsp + 0x38], rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f381]
mov	qword ptr [rcx], rax
lea	rcx, [rsp + 0x38]
call	0x14009bb70
call	0x14009bb70
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f345]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
xor	eax, eax
test	r8, r8
mov	rbx, rcx
mov	qword ptr [rsp + 0x38], rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f2f1]
mov	qword ptr [rcx], rax
lea	rcx, [rsp + 0x38]
call	0x14009bb70
call	0x14009bb70
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f2b5]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1f274]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1f244]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1f214]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f21e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f1fe]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1f1e4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1f1b9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1f1a9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f20e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f1ee]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1f1d4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1f1a9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1f199]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f1fe]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f1de]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1f1c4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1f199]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1f189]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f1ce]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1f1ae]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1f194]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1f169]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1f159]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1f1a4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400ac440
call	0x1400ac440
mov	edx, 8
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2bf0
jmp	0x1400b2bf0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1f179]
mov	qword ptr [rcx], rax
jmp	0x1400ac440
jmp	0x1400ac440
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
movsxd	rsi, edx
mov	rbx, rcx
cmp	esi, 0x7ffffffe
ja	0x1400a8f80
ja	0x1400a8f80
lea	rbp, [rcx + 0x40]
mov	r12d, 8
cmp	esi, 7
jg	0x1400a8fd0
jg	0x1400a8fd0
shl	rsi, 4
mov	qword ptr [rbx + 0xc8], rbp
lea	rax, [rbp + rsi]
mov	dword ptr [rbx + 0xc0], r12d
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
lea	rcx, [rip + 0x11079]
mov	eax, dword ptr [rbx + 0x20]
or	eax, 1
mov	dword ptr [rbx + 0x20], eax
and	eax, dword ptr [rbx + 0x1c]
jne	0x1400a9070
jne	0x1400a9070
test	r8b, r8b
jne	0x1400a8fc0
jne	0x1400a8fc0
mov	qword ptr [rbx + 0x30], 0
lea	rax, [rbx + 0x30]
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	word ptr [rax + rax]
mov	dword ptr [rbx + 0x38], 0
jmp	0x1400a8fa6
jmp	0x1400a8fa6
nop	dword ptr [rax]
lea	r12d, [rsi + 1]
mov	dword ptr [rsp + 0x2c], r8d
movsxd	rdx, r12d
shl	rdx, 4
mov	r13, rdx
mov	rdx, qword ptr [rip + 0x15c96]
mov	rcx, r13
call	0x1400b2c10
call	0x1400b2c10
mov	r8d, dword ptr [rsp + 0x2c]
test	rax, rax
mov	rdi, rax
je	0x1400a9075
je	0x1400a9075
lea	rdx, [rax + r13]
nop	dword ptr [rax + rax]
mov	qword ptr [rax], 0
add	rax, 0x10
mov	dword ptr [rax - 8], 0
cmp	rdx, rax
jne	0x1400a9008
jne	0x1400a9008
movsxd	r8, dword ptr [rbx + 0xc0]
mov	rcx, qword ptr [rbx + 0xc8]
xor	eax, eax
mov	rdx, r8
shl	r8, 4
test	edx, edx
jle	0x1400a9059
jle	0x1400a9059
nop	word ptr [rax + rax]
mov	rdx, qword ptr [rcx + rax]
mov	qword ptr [rdi + rax], rdx
mov	edx, dword ptr [rcx + rax + 8]
mov	dword ptr [rdi + rax + 8], edx
add	rax, 0x10
cmp	rax, r8
jne	0x1400a9040
jne	0x1400a9040
test	rcx, rcx
je	0x1400a9068
je	0x1400a9068
cmp	rbp, rcx
je	0x1400a9068
je	0x1400a9068
call	0x1400b2bd0
call	0x1400b2bd0
mov	rbp, rdi
jmp	0x1400a8f59
jmp	0x1400a8f59
call	0x1400b4200
call	0x1400b4200
lea	rcx, [rip + 0x10f54]
jmp	0x1400a8f87
jmp	0x1400a8f87
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rsi, qword ptr [rip + 0x15a7f]
movzx	ebx, byte ptr [rsi]
cmp	cl, 1
je	0x1400a90ad
je	0x1400a90ad
test	bl, bl
jne	0x1400a90c0
jne	0x1400a90c0
mov	eax, ebx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rip + 0x15569]
mov	rdx, qword ptr [rip + 0x15a42]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400a9308
jne	0x1400a9308
mov	eax, dword ptr [rdx]
lea	ecx, [rax + 1]
mov	dword ptr [rdx], ecx
test	eax, eax
je	0x1400a9319
je	0x1400a9319
mov	rax, qword ptr [rip + 0x15e22]
mov	rcx, qword ptr [rip + 0x1559b]
mov	byte ptr [rsi], 0
lea	rsi, [rax + 0x10]
add	rcx, 0x38
mov	qword ptr [rcx - 0x38], rsi
call	0x14009bf30
call	0x14009bf30
mov	rcx, qword ptr [rip + 0x15560]
mov	qword ptr [rcx], rsi
add	rcx, 0x38
call	0x14009bf30
call	0x14009bf30
mov	rcx, qword ptr [rip + 0x1555d]
mov	qword ptr [rcx], rsi
add	rcx, 0x38
call	0x14009bf30
call	0x14009bf30
mov	rax, qword ptr [rip + 0x15dea]
mov	rcx, qword ptr [rip + 0x15583]
lea	rsi, [rax + 0x10]
add	rcx, 0x38
mov	qword ptr [rcx - 0x38], rsi
call	0x14009bf30
call	0x14009bf30
mov	rcx, qword ptr [rip + 0x1554b]
mov	qword ptr [rcx], rsi
add	rcx, 0x38
call	0x14009bf30
call	0x14009bf30
mov	rcx, qword ptr [rip + 0x15548]
mov	qword ptr [rcx], rsi
add	rcx, 0x38
call	0x14009bf30
call	0x14009bf30
mov	rsi, qword ptr [rip + 0xbfa5]
mov	ecx, 1
call	rsi
call	rsi
mov	rbp, qword ptr [rip + 0x15567]
mov	rdx, rax
mov	r9d, 0x1000
mov	r8d, 0x10
mov	rcx, rbp
call	0x140016d80
call	0x140016d80
xor	ecx, ecx
call	rsi
call	rsi
mov	r12, qword ptr [rip + 0x15525]
mov	rdx, rax
mov	r9d, 0x1000
mov	r8d, 8
mov	rcx, r12
call	0x140016d80
call	0x140016d80
mov	ecx, 2
call	rsi
call	rsi
mov	rdi, qword ptr [rip + 0x15510]
mov	rdx, rax
mov	r9d, 0x1000
mov	r8d, 0x10
mov	rcx, rdi
call	0x140016d80
call	0x140016d80
mov	rax, qword ptr [rip + 0x15a42]
mov	rdx, rbp
lea	rcx, [rax + 8]
call	0x1400ab580
call	0x1400ab580
mov	rax, qword ptr [rip + 0x159ff]
mov	rdx, r12
lea	rcx, [rax + 0x10]
call	0x1400ab580
call	0x1400ab580
mov	rax, qword ptr [rip + 0x159fc]
mov	rdx, rdi
lea	rcx, [rax + 8]
call	0x1400ab580
call	0x1400ab580
mov	rax, qword ptr [rip + 0x159f9]
mov	rdx, rdi
lea	rcx, [rax + 8]
call	0x1400ab580
call	0x1400ab580
mov	ecx, 1
call	rsi
call	rsi
mov	rdi, qword ptr [rip + 0x154df]
mov	rdx, rax
mov	r9d, 0x1000
mov	r8d, 0x10
mov	rcx, rdi
call	0x1400171b0
call	0x1400171b0
xor	ecx, ecx
call	rsi
call	rsi
mov	rbp, qword ptr [rip + 0x1549d]
mov	rdx, rax
mov	r9d, 0x1000
mov	r8d, 8
mov	rcx, rbp
call	0x1400171b0
call	0x1400171b0
mov	ecx, 2
call	rsi
call	rsi
mov	rsi, qword ptr [rip + 0x15488]
mov	rdx, rax
mov	r9d, 0x1000
mov	r8d, 0x10
mov	rcx, rsi
call	0x1400171b0
call	0x1400171b0
mov	rax, qword ptr [rip + 0x159ca]
mov	rdx, rdi
lea	rcx, [rax + 8]
call	0x1400abf10
call	0x1400abf10
mov	rax, qword ptr [rip + 0x15987]
mov	rdx, rbp
lea	rcx, [rax + 0x10]
call	0x1400abf10
call	0x1400abf10
mov	rax, qword ptr [rip + 0x15984]
mov	rdx, rsi
lea	rcx, [rax + 8]
call	0x1400abf10
call	0x1400abf10
mov	rax, qword ptr [rip + 0x15981]
mov	rdx, rsi
lea	rcx, [rax + 8]
call	0x1400abf10
call	0x1400abf10
lea	rcx, [rsp + 0x2f]
call	0x1400a9b80
call	0x1400a9b80
mov	eax, ebx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, 1
lock xadd	dword ptr [rdx], eax
test	eax, eax
jne	0x1400a90e7
jne	0x1400a90e7
call	0x1400a9490
call	0x1400a9490
jmp	0x1400a90e7
jmp	0x1400a90e7
mov	rbx, rax
lea	rcx, [rsp + 0x2f]
call	0x1400a9b80
call	0x1400a9b80
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, qword ptr [rcx + 0x28]
mov	rsi, rcx
mov	edi, edx
test	rbx, rbx
je	0x1400a936c
je	0x1400a936c
nop	dword ptr [rax]
mov	r8d, dword ptr [rbx + 0x10]
mov	rdx, rsi
mov	ecx, edi
call	qword ptr [rbx + 8]
call	qword ptr [rbx + 8]
mov	rbx, qword ptr [rbx]
test	rbx, rbx
jne	0x1400a9358
jne	0x1400a9358
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400a9364
jmp	0x1400a9364
add	rdx, 1
mov	rcx, rax
jne	0x1400a9391
jne	0x1400a9391
call	0x1400b2e40
call	0x1400b2e40
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	ecx, 0x18
mov	rdi, rdx
mov	esi, r8d
call	0x1400b2c30
call	0x1400b2c30
mov	rdx, qword ptr [rbx + 0x28]
mov	qword ptr [rax + 8], rdi
mov	qword ptr [rax], rdx
mov	dword ptr [rax + 0x10], esi
mov	dword ptr [rax + 0x14], 0
mov	qword ptr [rbx + 0x28], rax
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, qword ptr [rip + 0x15242]
mov	rdi, rcx
mov	rcx, qword ptr [rcx + 0x28]
test	rcx, rcx
jne	0x1400a941d
jne	0x1400a941d
jmp	0x1400a9431
jmp	0x1400a9431
nop	dword ptr [rax]
mov	eax, dword ptr [rcx + 0x14]
lea	edx, [rax - 1]
mov	dword ptr [rcx + 0x14], edx
test	eax, eax
jne	0x1400a9431
jne	0x1400a9431
mov	rbx, qword ptr [rcx]
call	0x1400b2be0
call	0x1400b2be0
test	rbx, rbx
je	0x1400a9431
je	0x1400a9431
mov	rcx, rbx
mov	eax, dword ptr [rsi]
test	eax, eax
je	0x1400a9400
je	0x1400a9400
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx + 0x14], eax
test	eax, eax
je	0x1400a940d
je	0x1400a940d
mov	qword ptr [rdi + 0x28], 0
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x151d9]
mov	rdx, qword ptr [rip + 0x156b2]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400a9470
jne	0x1400a9470
mov	eax, dword ptr [rdx]
lea	ecx, [rax + 1]
mov	dword ptr [rdx], ecx
test	eax, eax
je	0x1400a947d
je	0x1400a947d
ret	
ret	
mov	eax, 1
lock xadd	dword ptr [rdx], eax
test	eax, eax
jne	0x1400a946f
jne	0x1400a946f
jmp	0x1400a9490
jmp	0x1400a9490
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
movups	xmmword ptr [rsp + 0x20], xmm6
movups	xmmword ptr [rsp + 0x30], xmm7
mov	rax, qword ptr [rip + 0x15a11]
mov	rbp, qword ptr [rip + 0xbc6a]
mov	ecx, 1
lea	rdx, [rax + 0x40]
add	rax, 0x18
movq	xmm6, rax
mov	rax, qword ptr [rip + 0x158f1]
movq	xmm1, rdx
punpcklqdq	xmm6, xmm1
lea	rdx, [rax + 0x40]
add	rax, 0x18
movq	xmm7, rax
mov	rax, qword ptr [rip + 0x15634]
movq	xmm2, rdx
punpcklqdq	xmm7, xmm2
mov	byte ptr [rax], 1
call	rbp
call	rbp
mov	rdi, qword ptr [rip + 0x1518f]
mov	rbx, rax
mov	rax, qword ptr [rip + 0x15a05]
lea	rcx, [rdi + 0x38]
mov	qword ptr [rdi + 8], 0
lea	r13, [rax + 0x10]
mov	qword ptr [rdi + 0x10], 0
mov	qword ptr [rdi], r13
mov	qword ptr [rdi + 0x18], 0
mov	qword ptr [rdi + 0x20], 0
mov	qword ptr [rdi + 0x28], 0
mov	qword ptr [rdi + 0x30], 0
call	0x14009be50
call	0x14009be50
mov	rax, qword ptr [rip + 0x1575e]
mov	qword ptr [rdi + 0x40], rbx
xor	ecx, ecx
mov	dword ptr [rdi + 0x48], 0xffffffff
lea	r12, [rax + 0x10]
mov	qword ptr [rdi], r12
call	rbp
call	rbp
mov	rsi, qword ptr [rip + 0x15101]
mov	rbx, rax
lea	rcx, [rsi + 0x38]
mov	qword ptr [rsi], r13
mov	qword ptr [rsi + 8], 0
mov	qword ptr [rsi + 0x10], 0
mov	qword ptr [rsi + 0x18], 0
mov	qword ptr [rsi + 0x20], 0
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
call	0x14009be50
call	0x14009be50
mov	qword ptr [rsi], r12
mov	ecx, 2
mov	qword ptr [rsi + 0x40], rbx
mov	dword ptr [rsi + 0x48], 0xffffffff
call	rbp
call	rbp
mov	rbx, qword ptr [rip + 0x150b6]
mov	r14, rax
lea	rcx, [rbx + 0x38]
mov	qword ptr [rbx], r13
mov	qword ptr [rbx + 8], 0
mov	qword ptr [rbx + 0x10], 0
mov	qword ptr [rbx + 0x18], 0
mov	qword ptr [rbx + 0x20], 0
mov	qword ptr [rbx + 0x28], 0
mov	qword ptr [rbx + 0x30], 0
call	0x14009be50
call	0x14009be50
mov	qword ptr [rbx], r12
mov	r12, qword ptr [rip + 0x1561d]
mov	qword ptr [rbx + 0x40], r14
lea	r13, [r12 + 8]
mov	dword ptr [rbx + 0x48], 0xffffffff
mov	rcx, r13
call	0x1400aa250
call	0x1400aa250
pxor	xmm0, xmm0
xor	eax, eax
mov	rdx, rdi
mov	rcx, r13
movups	xmmword ptr [r12], xmm7
mov	qword ptr [r12 + 0xe0], 0
mov	word ptr [r12 + 0xe8], ax
movups	xmmword ptr [r12 + 0xf0], xmm0
movups	xmmword ptr [r12 + 0x100], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
mov	rdi, qword ptr [rip + 0x15591]
lea	r13, [rdi + 0x10]
mov	rcx, r13
call	0x1400aa250
call	0x1400aa250
xor	eax, eax
pxor	xmm0, xmm0
mov	rcx, r13
mov	word ptr [rdi + 0xf0], ax
mov	rax, qword ptr [rip + 0x1571e]
mov	qword ptr [rdi + 0xe8], 0
lea	rdx, [rax + 0x18]
add	rax, 0x40
mov	qword ptr [rdi + 8], 0
mov	qword ptr [rdi], rdx
mov	rdx, rsi
mov	qword ptr [rdi + 0x10], rax
movups	xmmword ptr [rdi + 0xf8], xmm0
movups	xmmword ptr [rdi + 0x108], xmm0
call	0x1400ab2c0
call	0x1400ab2c0
mov	rsi, qword ptr [rip + 0x1553f]
lea	r13, [rsi + 8]
mov	rcx, r13
call	0x1400aa250
call	0x1400aa250
pxor	xmm0, xmm0
xor	eax, eax
mov	rdx, rbx
mov	rcx, r13
mov	word ptr [rsi + 0xe8], ax
mov	qword ptr [rsi + 0xe0], 0
movups	xmmword ptr [rsi + 0xf0], xmm0
movups	xmmword ptr [rsi + 0x100], xmm0
movups	xmmword ptr [rsi], xmm7
call	0x1400ab2c0
call	0x1400ab2c0
mov	r13, qword ptr [rip + 0x15508]
lea	r14, [r13 + 8]
mov	rcx, r14
call	0x1400aa250
call	0x1400aa250
pxor	xmm0, xmm0
xor	eax, eax
mov	rdx, rbx
mov	rcx, r14
mov	word ptr [r13 + 0xe8], ax
mov	qword ptr [r13 + 0xe0], 0
movups	xmmword ptr [r13 + 0xf0], xmm0
movups	xmmword ptr [r13 + 0x100], xmm0
movups	xmmword ptr [r13], xmm7
call	0x1400ab2c0
call	0x1400ab2c0
mov	qword ptr [rdi + 0xe8], r12
mov	ecx, 1
mov	qword ptr [rsi + 0xe0], r12
or	dword ptr [rsi + 0x20], 0x2000
call	rbp
call	rbp
mov	rdi, qword ptr [rip + 0x14f40]
mov	rbx, rax
mov	rax, qword ptr [rip + 0x15796]
lea	rcx, [rdi + 0x38]
mov	qword ptr [rdi + 8], 0
lea	r13, [rax + 0x10]
mov	qword ptr [rdi + 0x10], 0
mov	qword ptr [rdi], r13
mov	qword ptr [rdi + 0x18], 0
mov	qword ptr [rdi + 0x20], 0
mov	qword ptr [rdi + 0x28], 0
mov	qword ptr [rdi + 0x30], 0
call	0x14009be50
call	0x14009be50
mov	rax, qword ptr [rip + 0x154ef]
mov	r9d, 0xffffffff
xor	ecx, ecx
mov	word ptr [rdi + 0x48], r9w
lea	r12, [rax + 0x10]
mov	qword ptr [rdi + 0x40], rbx
mov	qword ptr [rdi], r12
call	rbp
call	rbp
mov	rsi, qword ptr [rip + 0x14eae]
mov	rbx, rax
lea	rcx, [rsi + 0x38]
mov	qword ptr [rsi], r13
mov	qword ptr [rsi + 8], 0
mov	qword ptr [rsi + 0x10], 0
mov	qword ptr [rsi + 0x18], 0
mov	qword ptr [rsi + 0x20], 0
mov	qword ptr [rsi + 0x28], 0
mov	qword ptr [rsi + 0x30], 0
call	0x14009be50
call	0x14009be50
mov	r10d, 0xffffffff
mov	qword ptr [rsi], r12
mov	ecx, 2
mov	word ptr [rsi + 0x48], r10w
mov	qword ptr [rsi + 0x40], rbx
call	rbp
call	rbp
mov	rbx, qword ptr [rip + 0x14e5f]
mov	rbp, rax
lea	rcx, [rbx + 0x38]
mov	qword ptr [rbx], r13
xor	r13d, r13d
mov	qword ptr [rbx + 8], 0
mov	qword ptr [rbx + 0x10], 0
mov	qword ptr [rbx + 0x18], 0
mov	qword ptr [rbx + 0x20], 0
mov	qword ptr [rbx + 0x28], 0
mov	qword ptr [rbx + 0x30], 0
call	0x14009be50
call	0x14009be50
mov	qword ptr [rbx + 0x40], rbp
mov	rbp, qword ptr [rip + 0x153d2]
mov	r11d, 0xffffffff
mov	qword ptr [rbx], r12
lea	r12, [rbp + 8]
mov	word ptr [rbx + 0x48], r11w
mov	rcx, r12
call	0x1400aa250
call	0x1400aa250
pxor	xmm0, xmm0
mov	rdx, rdi
mov	rcx, r12
mov	qword ptr [rbp + 0xe0], 0
mov	word ptr [rbp + 0xe8], r13w
mov	byte ptr [rbp + 0xea], 0
movups	xmmword ptr [rbp + 0xf0], xmm0
movups	xmmword ptr [rbp + 0x100], xmm0
movups	xmmword ptr [rbp], xmm6
call	0x1400abc50
call	0x1400abc50
mov	rdi, qword ptr [rip + 0x15346]
lea	r12, [rdi + 0x10]
mov	rcx, r12
call	0x1400aa250
call	0x1400aa250
pxor	xmm0, xmm0
xor	r8d, r8d
mov	rcx, r12
mov	rax, qword ptr [rip + 0x15599]
mov	word ptr [rdi + 0xf0], r8w
mov	qword ptr [rdi + 0xe8], 0
lea	rdx, [rax + 0x18]
add	rax, 0x40
mov	byte ptr [rdi + 0xf2], 0
mov	qword ptr [rdi], rdx
mov	rdx, rsi
mov	qword ptr [rdi + 0x10], rax
mov	qword ptr [rdi + 8], 0
movups	xmmword ptr [rdi + 0xf8], xmm0
movups	xmmword ptr [rdi + 0x108], xmm0
call	0x1400abc50
call	0x1400abc50
mov	rsi, qword ptr [rip + 0x152eb]
lea	r12, [rsi + 8]
mov	rcx, r12
call	0x1400aa250
call	0x1400aa250
xor	ecx, ecx
pxor	xmm0, xmm0
mov	rdx, rbx
mov	word ptr [rsi + 0xe8], cx
mov	rcx, r12
mov	qword ptr [rsi + 0xe0], 0
mov	byte ptr [rsi + 0xea], 0
movups	xmmword ptr [rsi + 0xf0], xmm0
movups	xmmword ptr [rsi + 0x100], xmm0
movups	xmmword ptr [rsi], xmm6
call	0x1400abc50
call	0x1400abc50
mov	r12, qword ptr [rip + 0x152ad]
lea	r13, [r12 + 8]
mov	rcx, r13
call	0x1400aa250
call	0x1400aa250
xor	edx, edx
pxor	xmm0, xmm0
mov	rcx, r13
mov	word ptr [r12 + 0xe8], dx
mov	rdx, rbx
mov	qword ptr [r12 + 0xe0], 0
mov	byte ptr [r12 + 0xea], 0
movups	xmmword ptr [r12 + 0xf0], xmm0
movups	xmmword ptr [r12 + 0x100], xmm0
movups	xmmword ptr [r12], xmm6
call	0x1400abc50
call	0x1400abc50
mov	rax, qword ptr [rip + 0x14c23]
or	dword ptr [rsi + 0x20], 0x2000
mov	qword ptr [rdi + 0xe8], rbp
mov	eax, dword ptr [rax]
mov	qword ptr [rsi + 0xe0], rbp
test	eax, eax
mov	rax, qword ptr [rip + 0x150e3]
jne	0x1400a9a50
jne	0x1400a9a50
add	dword ptr [rax], 1
movups	xmm6, xmmword ptr [rsp + 0x20]
movups	xmm7, xmmword ptr [rsp + 0x30]
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax + rax]
lock add	dword ptr [rax], 1
jmp	0x1400a9a32
jmp	0x1400a9a32
mov	rbx, rax
mov	rax, qword ptr [rip + 0x15710]
lea	rcx, [r12 + 8]
add	rax, 0x10
mov	qword ptr [r12 + 8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
mov	rax, qword ptr [rip + 0x156eb]
lea	rcx, [rsi + 8]
add	rax, 0x10
mov	qword ptr [rsi + 8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
mov	rax, qword ptr [rip + 0x156c8]
lea	rcx, [rdi + 0x10]
add	rax, 0x10
mov	qword ptr [rdi + 0x10], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
mov	rax, qword ptr [rip + 0x156a5]
lea	rcx, [rbp + 8]
add	rax, 0x10
mov	qword ptr [rbp + 8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
mov	rax, qword ptr [rip + 0x15672]
lea	rcx, [r13 + 8]
add	rax, 0x10
mov	qword ptr [r13 + 8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
mov	rax, qword ptr [rip + 0x1564f]
lea	rcx, [rsi + 8]
add	rax, 0x10
mov	qword ptr [rsi + 8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
mov	rax, qword ptr [rip + 0x1562c]
lea	rcx, [rdi + 0x10]
add	rax, 0x10
mov	qword ptr [rdi + 0x10], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
mov	rax, qword ptr [rip + 0x15609]
lea	rcx, [r12 + 8]
add	rax, 0x10
mov	qword ptr [r12 + 8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x14aa5]
mov	rdx, qword ptr [rip + 0x14f7e]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400a9bb0
jne	0x1400a9bb0
mov	eax, dword ptr [rdx]
lea	ecx, [rax - 1]
mov	dword ptr [rdx], ecx
cmp	eax, 2
je	0x1400a9bbe
je	0x1400a9bbe
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rdx], eax
cmp	eax, 2
jne	0x1400a9ba4
jne	0x1400a9ba4
mov	rcx, qword ptr [rip + 0x1506b]
call	0x14006fd10
call	0x14006fd10
mov	rcx, qword ptr [rip + 0x1503f]
call	0x14006fd10
call	0x14006fd10
mov	rcx, qword ptr [rip + 0x15043]
call	0x14006fd10
call	0x14006fd10
mov	rcx, qword ptr [rip + 0x15087]
call	0x14008a0e0
call	0x14008a0e0
mov	rcx, qword ptr [rip + 0x1505b]
call	0x14008a0e0
call	0x14008a0e0
mov	rcx, qword ptr [rip + 0x1505f]
call	0x14008a0e0
call	0x14008a0e0
nop	
add	rsp, 0x28
ret	
ret	
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
nop	
add	rsp, 0x28
jmp	0x1400b2f60
jmp	0x1400b2f60
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
lea	rbp, [rdx + 0xd0]
mov	rdi, r8
mov	rsi, rdx
mov	rbx, rcx
mov	rdx, rbp
call	0x14009be20
call	0x14009be20
mov	rdx, rdi
mov	rcx, rbp
call	0x14009bf90
call	0x14009bf90
mov	edx, 1
mov	rcx, rsi
call	0x1400a9340
call	0x1400a9340
mov	rax, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x149b9]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400a9c90
jne	0x1400a9c90
mov	eax, dword ptr [rip + 0xe38d]
lea	edx, [rax + 1]
add	eax, 4
mov	dword ptr [rip + 0xe381], edx
ret	
ret	
mov	eax, 1
lock xadd	dword ptr [rip + 0xe373], eax
add	eax, 4
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
movdqu	xmm0, xmmword ptr [rip + 0x112f2]
mov	dword ptr [rcx + 0x18], 0x1002
lea	rsi, [rsp + 0x28]
mov	rbx, rcx
movups	xmmword ptr [rcx + 8], xmm0
mov	rcx, rsi
call	0x14009be50
call	0x14009be50
lea	rcx, [rbx + 0xd0]
mov	rdx, rsi
call	0x14009bf90
call	0x14009bf90
mov	rcx, rsi
call	0x14009bf30
call	0x14009bf30
nop	
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
movdqu	xmm0, xmmword ptr [rdx + 8]
movups	xmmword ptr [rcx + 8], xmm0
mov	rax, qword ptr [rdx + 0x18]
mov	rsi, rcx
mov	rbx, rdx
lea	rdi, [rsi + 0x40]
mov	qword ptr [rcx + 0x18], rax
mov	eax, dword ptr [rdx + 0x20]
mov	dword ptr [rcx + 0x20], eax
mov	rax, qword ptr [rdx + 0x28]
mov	qword ptr [rdx + 0x28], 0
mov	qword ptr [rcx + 0x28], rax
mov	rcx, qword ptr [rcx + 0xc8]
test	rcx, rcx
je	0x1400a9d4e
je	0x1400a9d4e
cmp	rcx, rdi
je	0x1400a9d4e
je	0x1400a9d4e
call	0x1400b2bd0
call	0x1400b2bd0
mov	rax, qword ptr [rbx + 0xc8]
lea	rdx, [rbx + 0x40]
cmp	rax, rdx
je	0x1400a9da0
je	0x1400a9da0
mov	qword ptr [rbx + 0xc8], rdx
mov	qword ptr [rsi + 0xc8], rax
mov	eax, dword ptr [rbx + 0xc0]
mov	dword ptr [rbx + 0xc0], 8
mov	dword ptr [rsi + 0xc0], eax
lea	rdx, [rbx + 0xd0]
lea	rcx, [rsi + 0xd0]
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
jmp	0x14009bf90
jmp	0x14009bf90
nop	dword ptr [rax]
mov	qword ptr [rsi + 0xc8], rdi
xor	eax, eax
mov	dword ptr [rsi + 0xc0], 8
nop	dword ptr [rax + rax]
mov	rdx, qword ptr [rbx + 0xc8]
add	rdx, rax
mov	rcx, qword ptr [rdx]
mov	r9, qword ptr [rdx + 8]
mov	qword ptr [rdx], 0
mov	dword ptr [rdx + 8], 0
mov	rdx, qword ptr [rsi + 0xc8]
mov	qword ptr [rsp + 0x20], rcx
mov	qword ptr [rsp + 0x28], r9
mov	qword ptr [rdx + rax], rcx
mov	ecx, dword ptr [rsp + 0x28]
mov	dword ptr [rdx + rax + 8], ecx
add	rax, 0x10
cmp	rax, 0x80
jne	0x1400a9db8
jne	0x1400a9db8
jmp	0x1400a9d82
jmp	0x1400a9d82
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x40
mov	rax, rdx
mov	rdx, qword ptr [rcx + 8]
lea	r11, [rcx + 0x40]
mov	r8, qword ptr [rax + 8]
lea	r10, [rax + 0x40]
mov	qword ptr [rcx + 8], r8
mov	r8, qword ptr [rax + 0x10]
mov	qword ptr [rax + 8], rdx
mov	rdx, qword ptr [rcx + 0x10]
mov	qword ptr [rcx + 0x10], r8
mov	r8d, dword ptr [rax + 0x18]
mov	qword ptr [rax + 0x10], rdx
mov	edx, dword ptr [rcx + 0x18]
mov	dword ptr [rcx + 0x18], r8d
mov	r8d, dword ptr [rax + 0x1c]
mov	dword ptr [rax + 0x18], edx
mov	edx, dword ptr [rcx + 0x1c]
mov	dword ptr [rcx + 0x1c], r8d
mov	r8d, dword ptr [rax + 0x20]
mov	dword ptr [rax + 0x1c], edx
mov	edx, dword ptr [rcx + 0x20]
mov	dword ptr [rcx + 0x20], r8d
mov	r8, qword ptr [rax + 0x28]
mov	dword ptr [rax + 0x20], edx
mov	rdx, qword ptr [rcx + 0x28]
mov	qword ptr [rcx + 0x28], r8
mov	r8, qword ptr [rax + 0xc8]
mov	qword ptr [rax + 0x28], rdx
mov	rdx, qword ptr [rcx + 0xc8]
cmp	rdx, r11
jne	0x1400a9ef0
jne	0x1400a9ef0
cmp	r8, r10
je	0x1400a9f68
je	0x1400a9f68
cmp	rdx, r11
jne	0x1400a9ef0
jne	0x1400a9ef0
mov	r8, rcx
mov	r9, rax
cmp	rdx, r11
je	0x1400a9fb8
je	0x1400a9fb8
mov	edx, 0x40
nop	dword ptr [rax]
mov	r10, qword ptr [r9 + rdx]
mov	qword ptr [r8 + rdx], r10
mov	r10d, dword ptr [r9 + rdx + 8]
mov	dword ptr [r8 + rdx + 8], r10d
add	rdx, 0x10
cmp	rdx, 0xc0
jne	0x1400a9eb8
jne	0x1400a9eb8
mov	rdx, qword ptr [r8 + 0xc8]
mov	qword ptr [r9 + 0xc8], rdx
mov	qword ptr [r8 + 0xc8], r11
jmp	0x1400a9f03
jmp	0x1400a9f03
nop	
cmp	r8, r10
je	0x1400a9e9d
je	0x1400a9e9d
mov	qword ptr [rcx + 0xc8], r8
mov	qword ptr [rax + 0xc8], rdx
mov	edx, dword ptr [rcx + 0xc0]
mov	r8d, dword ptr [rax + 0xc0]
mov	dword ptr [rcx + 0xc0], r8d
mov	dword ptr [rax + 0xc0], edx
lea	rsi, [rcx + 0xd0]
lea	rdi, [rsp + 0x38]
lea	rbx, [rax + 0xd0]
mov	rdx, rsi
mov	rcx, rdi
call	0x14009be20
call	0x14009be20
mov	rdx, rbx
mov	rcx, rsi
call	0x14009bf90
call	0x14009bf90
mov	rdx, rdi
mov	rcx, rbx
call	0x14009bf90
call	0x14009bf90
mov	rcx, rdi
call	0x14009bf30
call	0x14009bf30
nop	
add	rsp, 0x40
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	word ptr [rax + rax]
mov	edx, 0x40
nop	dword ptr [rax]
mov	r9, qword ptr [rax + rdx]
mov	r8, qword ptr [rcx + rdx]
mov	r10, qword ptr [rcx + rdx + 8]
mov	qword ptr [rcx + rdx], r9
mov	r9d, dword ptr [rax + rdx + 8]
mov	dword ptr [rcx + rdx + 8], r9d
mov	qword ptr [rsp + 0x20], r8
mov	qword ptr [rsp + 0x28], r10
mov	qword ptr [rax + rdx], r8
mov	r8d, dword ptr [rsp + 0x28]
mov	dword ptr [rax + rdx + 8], r8d
add	rdx, 0x10
cmp	rdx, 0xc0
jne	0x1400a9f70
jne	0x1400a9f70
jmp	0x1400a9f1d
jmp	0x1400a9f1d
nop	dword ptr [rax]
mov	r11, r10
mov	r8, rax
mov	r9, rcx
jmp	0x1400a9eac
jmp	0x1400a9eac
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
movdqu	xmm0, xmmword ptr [r8]
mov	rax, rdx
lea	rdx, [rsp + 0x20]
mov	rbx, rcx
movups	xmmword ptr [rsp + 0x20], xmm0
mov	r8, rax
call	0x140079920
call	0x140079920
lea	rax, [rip + 0x1c1c7]
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbx, rcx
mov	rsi, rdx
call	0x1400ae890
call	0x1400ae890
lea	rdx, [rsp + 0x20]
mov	r8, rsi
mov	rcx, rbx
mov	qword ptr [rsp + 0x28], rax
mov	qword ptr [rsp + 0x20], 1
call	0x140079bb0
call	0x140079bb0
lea	rax, [rip + 0x1c17a]
mov	qword ptr [rbx], rax
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
push	rbx
sub	rsp, 0x30
movdqu	xmm0, xmmword ptr [r8]
mov	rax, rdx
lea	rdx, [rsp + 0x20]
mov	rbx, rcx
movups	xmmword ptr [rsp + 0x20], xmm0
mov	r8, rax
call	0x140079bb0
call	0x140079bb0
lea	rax, [rip + 0x1c147]
mov	qword ptr [rbx], rax
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1c124]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x140079f10
call	0x140079f10
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1c0f9]
mov	qword ptr [rcx], rax
jmp	0x140079f10
jmp	0x140079f10
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
lea	rax, [rip + 0x1c112]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rdx]
mov	rbx, rcx
mov	edx, dword ptr [rax - 8]
lea	rcx, [rax - 0x18]
lea	r8, [rax - 8]
test	edx, edx
js	0x1400aa118
js	0x1400aa118
mov	rdx, qword ptr [rip + 0x14533]
mov	edx, dword ptr [rdx]
test	edx, edx
jne	0x1400aa138
jne	0x1400aa138
add	dword ptr [rax - 8], 1
mov	qword ptr [rbx + 8], rax
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rdx, [rsp + 0x2f]
xor	r8d, r8d
call	0x140072590
call	0x140072590
mov	qword ptr [rbx + 8], rax
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
lock add	dword ptr [r8], 1
mov	qword ptr [rbx + 8], rax
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
mov	rdi, rdx
mov	rcx, rbx
mov	rsi, rax
call	0x1400ac440
call	0x1400ac440
add	rdi, 1
mov	rcx, rsi
jne	0x1400aa165
jne	0x1400aa165
call	0x1400b2e40
call	0x1400b2e40
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
lea	rax, [rip + 0x1c074]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x144aa]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 8]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400aa1b8
jne	0x1400aa1b8
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x1400aa1c6
jle	0x1400aa1c6
mov	rcx, rbx
call	0x1400ac440
call	0x1400ac440
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x1400aa1a0
jg	0x1400aa1a0
lea	rdx, [rsp + 0x2f]
sub	rcx, 0x18
call	0x140072480
call	0x140072480
jmp	0x1400aa1a0
jmp	0x1400aa1a0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
lea	rax, [rip + 0x1c004]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0x1443a]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + 8]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400aa220
jne	0x1400aa220
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x1400aa22e
jle	0x1400aa22e
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	dword ptr [rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x1400aa210
jg	0x1400aa210
sub	rcx, 0x18
lea	rdx, [rsp + 0x2f]
call	0x140072480
call	0x140072480
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1de79]
pxor	xmm0, xmm0
lea	r8, [rcx + 0x40]
mov	qword ptr [rcx], rax
lea	rdx, [rcx + 0xc0]
mov	qword ptr [rcx + 0x18], 0
mov	rax, r8
mov	dword ptr [rcx + 0x20], 0
mov	dword ptr [rcx + 0x38], 0
movups	xmmword ptr [rcx + 8], xmm0
movups	xmmword ptr [rcx + 0x28], xmm0
nop	word ptr [rax + rax]
mov	qword ptr [rax], 0
add	rax, 0x10
mov	dword ptr [rax - 8], 0
cmp	rax, rdx
jne	0x1400aa290
jne	0x1400aa290
mov	qword ptr [rcx + 0xc8], r8
add	rcx, 0xd0
mov	dword ptr [rcx - 0x10], 8
jmp	0x14009be50
jmp	0x14009be50
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1ddf4]
xor	edx, edx
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400a9340
call	0x1400a9340
mov	rcx, rbx
call	0x1400a93e0
call	0x1400a93e0
mov	rcx, qword ptr [rbx + 0xc8]
lea	rax, [rbx + 0x40]
cmp	rcx, rax
je	0x1400aa316
je	0x1400aa316
test	rcx, rcx
je	0x1400aa30b
je	0x1400aa30b
call	0x1400b2bd0
call	0x1400b2bd0
mov	qword ptr [rbx + 0xc8], 0
lea	rcx, [rbx + 0xd0]
call	0x14009bf30
call	0x14009bf30
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1dd94]
xor	edx, edx
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400a9340
call	0x1400a9340
mov	rcx, rbx
call	0x1400a93e0
call	0x1400a93e0
mov	rcx, qword ptr [rbx + 0xc8]
lea	rax, [rbx + 0x40]
cmp	rcx, rax
je	0x1400aa376
je	0x1400aa376
test	rcx, rcx
je	0x1400aa36b
je	0x1400aa36b
call	0x1400b2bd0
call	0x1400b2bd0
mov	qword ptr [rbx + 0xc8], 0
lea	rcx, [rbx + 0xd0]
add	rsp, 0x20
pop	rbx
jmp	0x14009bf30
jmp	0x14009bf30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1dd45]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1dcf5]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1dca5]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1dc55]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1dc14]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1dbe4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1dbb4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1dbb5]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1db65]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r9, r9
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1db15]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1dac5]
mov	qword ptr [rcx], rax
call	0x14009baf0
call	0x14009baf0
mov	qword ptr [rbx + 0x10], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1da84]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1da54]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1da24]
mov	qword ptr [rcx], rax
mov	rbx, rcx
lea	rcx, [rcx + 0x10]
call	0x14009bbd0
call	0x14009bbd0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x14009bc00
jmp	0x14009bc00
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx + 0x10]
mov	rbx, rcx
test	rax, rax
je	0x1400aa7e7
je	0x1400aa7e7
lea	rdx, [rip + 0xea34]
mov	qword ptr [rax + 0x18], 0
mov	qword ptr [rax + 0x10], rdx
mov	byte ptr [rax + 0x20], 0
mov	byte ptr [rax + 0x48], 0x2e
mov	rax, qword ptr [rbx + 0x10]
mov	byte ptr [rax + 0x49], 0x2c
mov	rax, qword ptr [rip + 0x13ff1]
mov	r8, qword ptr [rax]
xor	eax, eax
nop	dword ptr [rax]
movzx	ecx, byte ptr [r8 + rax]
mov	rdx, qword ptr [rbx + 0x10]
mov	byte ptr [rdx + rax + 0x4a], cl
add	rax, 1
cmp	rax, 0x24
jne	0x1400aa778
jne	0x1400aa778
mov	rax, qword ptr [rip + 0x13fba]
mov	r8, qword ptr [rax]
xor	eax, eax
nop	dword ptr [rax + rax]
movzx	ecx, byte ptr [r8 + rax]
mov	rdx, qword ptr [rbx + 0x10]
mov	byte ptr [rdx + rax + 0x6e], cl
add	rax, 1
cmp	rax, 0x1a
jne	0x1400aa7a0
jne	0x1400aa7a0
mov	rax, qword ptr [rbx + 0x10]
lea	rbx, [rip + 0xe9bf]
mov	qword ptr [rax + 0x28], rbx
lea	rbx, [rip + 0xe9b9]
mov	qword ptr [rax + 0x30], 4
mov	qword ptr [rax + 0x38], rbx
mov	qword ptr [rax + 0x40], 5
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	ecx, 0x90
call	0x1400b2c30
call	0x1400b2c30
lea	rdx, [rip + 0x1c928]
mov	qword ptr [rax], rdx
xor	edx, edx
mov	dword ptr [rax + 8], 0
mov	qword ptr [rax + 0x10], 0
mov	qword ptr [rax + 0x18], 0
mov	byte ptr [rax + 0x20], 0
mov	qword ptr [rax + 0x28], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x38], 0
mov	qword ptr [rax + 0x40], 0
mov	word ptr [rax + 0x48], dx
mov	byte ptr [rax + 0x88], 0
mov	qword ptr [rbx + 0x10], rax
jmp	0x1400aa745
jmp	0x1400aa745
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d8ff]
mov	qword ptr [rcx], rax
call	0x1400aa730
call	0x1400aa730
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d8ad]
mov	qword ptr [rcx], rax
call	0x1400aa730
call	0x1400aa730
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d85b]
mov	qword ptr [rcx], rax
call	0x1400aa730
call	0x1400aa730
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d80f]
mov	qword ptr [rcx], rax
call	0x1400aa730
call	0x1400aa730
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d7bd]
mov	qword ptr [rcx], rax
call	0x1400aa730
call	0x1400aa730
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d76b]
mov	qword ptr [rcx], rax
call	0x1400aa730
call	0x1400aa730
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
call	0x1400aaa60
call	0x1400aaa60
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rsi, rax
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0x14682]
mov	rsi, qword ptr [rcx + 0x10]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
test	rsi, rsi
je	0x1400aaaa4
je	0x1400aaaa4
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x168bb]
mov	rcx, rsi
mov	rax, qword ptr [rax + 8]
cmp	rax, rdx
jne	0x1400aaab8
jne	0x1400aaab8
call	0x140094200
call	0x140094200
mov	rcx, rsi
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14009bc00
jmp	0x14009bc00
nop	dword ptr [rax + rax]
call	rax
call	rax
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14009bc00
jmp	0x14009bc00
mov	rdi, rax
jmp	0x1400aaad9
jmp	0x1400aaad9
mov	rcx, rsi
mov	rdi, rax
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rdi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx + 0x10]
mov	rbx, rcx
test	rax, rax
je	0x1400aab9c
je	0x1400aab9c
lea	rbx, [rip + 0xe674]
mov	rdx, qword ptr [rip + 0x13c4d]
mov	byte ptr [rax + 0x20], 0
mov	qword ptr [rax + 0x10], rbx
mov	qword ptr [rax + 0x18], 0
mov	r8, qword ptr [rdx]
xor	edx, edx
mov	dword ptr [rax + 0x48], 0x2c002e
nop	
movsx	cx, byte ptr [r8 + rdx]
mov	word ptr [rax + rdx*2 + 0x4c], cx
add	rdx, 1
cmp	rdx, 0x24
jne	0x1400aab30
jne	0x1400aab30
mov	rdx, qword ptr [rip + 0x13c04]
mov	r8, qword ptr [rdx]
xor	edx, edx
nop	dword ptr [rax]
movsx	cx, byte ptr [r8 + rdx]
mov	word ptr [rax + rdx*2 + 0x94], cx
add	rdx, 1
cmp	rdx, 0x1a
jne	0x1400aab58
jne	0x1400aab58
lea	rbx, [rip + 0xe615]
mov	qword ptr [rax + 0x30], 4
mov	qword ptr [rax + 0x28], rbx
lea	rbx, [rip + 0xe60c]
mov	qword ptr [rax + 0x38], rbx
mov	qword ptr [rax + 0x40], 5
add	rsp, 0x20
pop	rbx
ret	
ret	
mov	ecx, 0xd0
call	0x1400b2c30
call	0x1400b2c30
lea	rcx, [rip + 0x1c593]
mov	dword ptr [rax + 8], 0
mov	qword ptr [rax], rcx
mov	qword ptr [rax + 0x10], 0
mov	qword ptr [rax + 0x18], 0
mov	byte ptr [rax + 0x20], 0
mov	qword ptr [rax + 0x28], 0
mov	qword ptr [rax + 0x30], 0
mov	qword ptr [rax + 0x38], 0
mov	qword ptr [rax + 0x40], 0
mov	dword ptr [rax + 0x48], 0
mov	byte ptr [rax + 0xc8], 0
mov	qword ptr [rbx + 0x10], rax
jmp	0x1400aab05
jmp	0x1400aab05
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d58f]
mov	qword ptr [rcx], rax
call	0x1400aaaf0
call	0x1400aaaf0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d53d]
mov	qword ptr [rcx], rax
call	0x1400aaaf0
call	0x1400aaaf0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d4eb]
mov	qword ptr [rcx], rax
call	0x1400aaaf0
call	0x1400aaaf0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], rdx
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d49f]
mov	qword ptr [rcx], rax
call	0x1400aaaf0
call	0x1400aaaf0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	r8, r8
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d44d]
mov	qword ptr [rcx], rax
call	0x1400aaaf0
call	0x1400aaaf0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
xor	eax, eax
test	rdx, rdx
mov	qword ptr [rcx + 0x10], 0
mov	rbx, rcx
setne	al
xor	edx, edx
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d3fb]
mov	qword ptr [rcx], rax
call	0x1400aaaf0
call	0x1400aaaf0
nop	
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
mov	rsi, rax
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
call	0x1400aae20
call	0x1400aae20
mov	rcx, rbx
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rsi, rax
mov	rcx, rbx
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rip + 0x142d2]
mov	rsi, qword ptr [rcx + 0x10]
add	rax, 0x10
mov	qword ptr [rcx], rax
mov	rbx, rcx
test	rsi, rsi
je	0x1400aae64
je	0x1400aae64
mov	rax, qword ptr [rsi]
lea	rdx, [rip - 0x1660b]
mov	rcx, rsi
mov	rax, qword ptr [rax + 8]
cmp	rax, rdx
jne	0x1400aae78
jne	0x1400aae78
call	0x140094870
call	0x140094870
mov	rcx, rsi
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14009bc00
jmp	0x14009bc00
nop	dword ptr [rax + rax]
call	rax
call	rax
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
jmp	0x14009bc00
jmp	0x14009bc00
mov	rdi, rax
jmp	0x1400aae99
jmp	0x1400aae99
mov	rcx, rsi
mov	rdi, rax
call	0x1400b2be0
call	0x1400b2be0
mov	rcx, rbx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rdi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d34e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d32e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1d314]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1d2e9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1d2d9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d30e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d2ee]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1d2d4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1d2a9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1d299]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d2ce]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d2ae]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1d294]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1d269]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1d259]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d26e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1d24e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1d234]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1d209]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1d1f9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1d214]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400ac440
call	0x1400ac440
mov	edx, 8
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2bf0
jmp	0x1400b2bf0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1d1e9]
mov	qword ptr [rcx], rax
jmp	0x1400ac440
jmp	0x1400ac440
nop	
sub	rsp, 0x28
cmp	qword ptr [rcx + 0xe8], 0
mov	eax, dword ptr [rcx + 0x20]
mov	dword ptr [rcx + 0x1c], edx
je	0x1400ab150
je	0x1400ab150
test	edx, eax
jne	0x1400ab158
jne	0x1400ab158
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax]
or	eax, 1
mov	dword ptr [rcx + 0x20], eax
jmp	0x1400ab144
jmp	0x1400ab144
lea	rcx, [rip + 0xee51]
call	0x1400b4200
call	0x1400b4200
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
or	dword ptr [rcx + 0x20], edx
and	edx, dword ptr [rcx + 0x1c]
jne	0x1400ab181
jne	0x1400ab181
add	rsp, 0x28
ret	
ret	
call	0x1400b3540
call	0x1400b3540
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0x13730]
mov	rsi, rdx
call	0x140022a70
call	0x140022a70
mov	rcx, qword ptr [rip + 0x13931]
mov	rdx, rax
mov	rax, qword ptr [rsi]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
mov	qword ptr [rbx + 0xf0], rax
call	0x140022a70
call	0x140022a70
mov	rcx, qword ptr [rip + 0x138f0]
mov	rdx, rax
mov	rax, qword ptr [rsi]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
mov	qword ptr [rbx + 0xf8], rax
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsi]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
mov	qword ptr [rbx + 0x100], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0xd8]
mov	qword ptr [rcx + 0xd8], rdx
ret	
ret	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
cmp	byte ptr [rcx + 0xe1], 0
mov	rbx, rcx
mov	esi, edx
je	0x1400ab250
je	0x1400ab250
movzx	eax, byte ptr [rcx + 0xe0]
mov	byte ptr [rbx + 0xe0], sil
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax + rax]
mov	rdi, qword ptr [rcx + 0xf0]
test	rdi, rdi
je	0x1400ab2ad
je	0x1400ab2ad
cmp	byte ptr [rdi + 0x38], 0
je	0x1400ab280
je	0x1400ab280
movzx	eax, byte ptr [rdi + 0x59]
mov	byte ptr [rbx + 0xe1], 1
mov	byte ptr [rbx + 0xe0], sil
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, rdi
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [rdi]
lea	rdx, [rip - 0x88df2]
mov	r8, qword ptr [rax + 0x30]
mov	eax, 0x20
cmp	r8, rdx
je	0x1400ab266
je	0x1400ab266
mov	edx, 0x20
mov	rcx, rdi
call	r8
call	r8
jmp	0x1400ab266
jmp	0x1400ab266
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rsi, rdx
call	0x1400a9cb0
call	0x1400a9cb0
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400ab190
call	0x1400ab190
xor	eax, eax
mov	qword ptr [rbx + 0xd8], 0
mov	word ptr [rbx + 0xe0], ax
xor	eax, eax
test	rsi, rsi
sete	al
mov	dword ptr [rbx + 0x1c], 0
mov	qword ptr [rbx + 0xe8], rsi
mov	dword ptr [rbx + 0x20], eax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rsi, rdx
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rsi + 0xd8]
mov	qword ptr [rsi + 0xd8], 0
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, byte ptr [rsi + 0xe0]
mov	byte ptr [rbx + 0xe0], al
movzx	eax, byte ptr [rsi + 0xe1]
mov	qword ptr [rbx + 0xe8], 0
mov	byte ptr [rbx + 0xe1], al
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rsi, rdx
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rsi + 0xd8]
mov	qword ptr [rsi + 0xd8], 0
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, byte ptr [rsi + 0xe0]
mov	byte ptr [rbx + 0xe0], al
movzx	eax, byte ptr [rsi + 0xe1]
mov	qword ptr [rbx + 0xe8], 0
mov	byte ptr [rbx + 0xe1], al
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rbx, rdx
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400ab190
call	0x1400ab190
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400ab190
call	0x1400ab190
mov	rax, qword ptr [rsi + 0xd8]
mov	rdx, qword ptr [rbx + 0xd8]
mov	qword ptr [rsi + 0xd8], rdx
movzx	edx, byte ptr [rbx + 0xe0]
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, byte ptr [rsi + 0xe0]
mov	byte ptr [rsi + 0xe0], dl
movzx	edx, byte ptr [rbx + 0xe1]
mov	byte ptr [rbx + 0xe0], al
movzx	eax, byte ptr [rsi + 0xe1]
mov	byte ptr [rsi + 0xe1], dl
mov	byte ptr [rbx + 0xe1], al
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
cmp	qword ptr [rcx + 0xe8], 0
je	0x1400ab4b0
je	0x1400ab4b0
mov	dword ptr [rcx + 0x20], edx
and	edx, dword ptr [rcx + 0x1c]
jne	0x1400ab4b5
jne	0x1400ab4b5
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax + rax]
or	edx, 1
jmp	0x1400ab49e
jmp	0x1400ab49e
lea	rcx, [rip + 0xeaf4]
call	0x1400b4200
call	0x1400b4200
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rbx, rdx
mov	rsi, r8
lea	rdx, [rdx + 0xd0]
mov	rdi, rcx
call	0x14009be20
call	0x14009be20
lea	rbp, [rsp + 0x28]
mov	rdx, rbx
mov	r8, rsi
mov	rcx, rbp
call	0x1400a9c20
call	0x1400a9c20
mov	rcx, rbp
call	0x14009bf30
call	0x14009bf30
mov	rcx, rbx
mov	rdx, rsi
call	0x1400ab190
call	0x1400ab190
mov	rbx, qword ptr [rbx + 0xe8]
test	rbx, rbx
je	0x1400ab54f
je	0x1400ab54f
lea	r12, [rbx + 0x38]
mov	rcx, rbp
mov	rdx, r12
call	0x14009be20
call	0x14009be20
mov	rax, qword ptr [rbx]
mov	rdx, rsi
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rcx, r12
mov	rdx, rsi
call	0x14009bf90
call	0x14009bf90
mov	rcx, rbp
call	0x14009bf30
call	0x14009bf30
mov	rax, rdi
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rbp
mov	rbx, rax
call	0x14009bf30
call	0x14009bf30
mov	rcx, rdi
call	0x14009bf30
call	0x14009bf30
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
xor	eax, eax
mov	r8, qword ptr [rcx + 0xe8]
test	rdx, rdx
mov	qword ptr [rcx + 0xe8], rdx
sete	al
mov	dword ptr [rcx + 0x20], eax
and	eax, dword ptr [rcx + 0x1c]
jne	0x1400ab5aa
jne	0x1400ab5aa
mov	rax, r8
add	rsp, 0x28
ret	
ret	
lea	rcx, [rip + 0xe9ff]
call	0x1400b4200
call	0x1400b4200
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rbx, rcx
mov	rsi, rdx
cmp	rcx, rdx
je	0x1400ab738
je	0x1400ab738
mov	eax, dword ptr [rdx + 0xc0]
cmp	eax, 8
jg	0x1400ab750
jg	0x1400ab750
lea	r12, [rcx + 0x40]
mov	rdi, r12
mov	rbp, qword ptr [rsi + 0x28]
test	rbp, rbp
je	0x1400ab60d
je	0x1400ab60d
mov	rax, qword ptr [rip + 0x13031]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400ab868
jne	0x1400ab868
add	dword ptr [rbp + 0x14], 1
mov	rcx, rbx
xor	edx, edx
call	0x1400a9340
call	0x1400a9340
mov	rcx, qword ptr [rbx + 0xc8]
cmp	rcx, r12
je	0x1400ab638
je	0x1400ab638
test	rcx, rcx
je	0x1400ab62d
je	0x1400ab62d
call	0x1400b2bd0
call	0x1400b2bd0
mov	qword ptr [rbx + 0xc8], 0
mov	rcx, rbx
call	0x1400a93e0
call	0x1400a93e0
movsxd	r8, dword ptr [rsi + 0xc0]
mov	qword ptr [rbx + 0x28], rbp
xor	eax, eax
mov	r9, r8
shl	r8, 4
test	r9d, r9d
jle	0x1400ab680
jle	0x1400ab680
nop	dword ptr [rax]
mov	rdx, qword ptr [rsi + 0xc8]
mov	rcx, qword ptr [rdx + rax]
mov	qword ptr [rdi + rax], rcx
mov	edx, dword ptr [rdx + rax + 8]
mov	dword ptr [rdi + rax + 8], edx
add	rax, 0x10
cmp	rax, r8
jne	0x1400ab660
jne	0x1400ab660
mov	eax, dword ptr [rsi + 0x18]
movdqu	xmm0, xmmword ptr [rsi + 8]
mov	qword ptr [rbx + 0xc8], rdi
cmp	byte ptr [rsi + 0xe1], 0
mov	dword ptr [rbx + 0xc0], r9d
mov	dword ptr [rbx + 0x18], eax
mov	rax, qword ptr [rsi + 0xd8]
movups	xmmword ptr [rbx + 8], xmm0
mov	qword ptr [rbx + 0xd8], rax
je	0x1400ab7c0
je	0x1400ab7c0
movzx	edi, byte ptr [rsi + 0xe0]
cmp	byte ptr [rbx + 0xe1], 0
je	0x1400ab798
je	0x1400ab798
mov	byte ptr [rbx + 0xe0], dil
lea	rdi, [rsp + 0x28]
lea	rdx, [rsi + 0xd0]
mov	rcx, rdi
lea	rbp, [rbx + 0xd0]
call	0x14009be20
call	0x14009be20
mov	rdx, rdi
mov	rcx, rbp
call	0x14009bf90
call	0x14009bf90
mov	rcx, rdi
call	0x14009bf30
call	0x14009bf30
mov	rdx, rbp
mov	rcx, rbx
call	0x1400ab190
call	0x1400ab190
mov	edx, 2
mov	rcx, rbx
call	0x1400a9340
call	0x1400a9340
mov	eax, dword ptr [rsi + 0x1c]
cmp	qword ptr [rbx + 0xe8], 0
mov	edx, dword ptr [rbx + 0x20]
mov	dword ptr [rbx + 0x1c], eax
je	0x1400ab7f0
je	0x1400ab7f0
test	edx, eax
jne	0x1400ab872
jne	0x1400ab872
mov	rax, rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr cs:[rax + rax]
movsxd	rcx, eax
shl	rcx, 4
call	0x1400b2c00
call	0x1400b2c00
movsxd	rdx, dword ptr [rsi + 0xc0]
mov	rdi, rax
sub	rdx, 1
js	0x1400ab788
js	0x1400ab788
nop	dword ptr [rax]
mov	qword ptr [rax], 0
add	rax, 0x10
mov	dword ptr [rax - 8], 0
sub	rdx, 1
jae	0x1400ab770
jae	0x1400ab770
lea	r12, [rbx + 0x40]
jmp	0x1400ab5ef
jmp	0x1400ab5ef
nop	dword ptr [rax]
mov	rbp, qword ptr [rbx + 0xf0]
test	rbp, rbp
je	0x1400ab87e
je	0x1400ab87e
cmp	byte ptr [rbp + 0x38], 0
je	0x1400ab800
je	0x1400ab800
mov	byte ptr [rbx + 0xe1], 1
jmp	0x1400ab6cc
jmp	0x1400ab6cc
nop	word ptr [rax + rax]
mov	rbp, qword ptr [rsi + 0xf0]
test	rbp, rbp
je	0x1400ab87e
je	0x1400ab87e
cmp	byte ptr [rbp + 0x38], 0
je	0x1400ab830
je	0x1400ab830
movzx	edi, byte ptr [rbp + 0x59]
mov	byte ptr [rsi + 0xe0], dil
mov	byte ptr [rsi + 0xe1], 1
jmp	0x1400ab6bf
jmp	0x1400ab6bf
nop	dword ptr [rax]
or	edx, 1
mov	dword ptr [rbx + 0x20], edx
jmp	0x1400ab730
jmp	0x1400ab730
nop	dword ptr [rax + rax]
mov	rcx, rbp
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [rbp]
lea	rdx, [rip - 0x89373]
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rdx
je	0x1400ab7ae
je	0x1400ab7ae
mov	edx, 0x20
mov	rcx, rbp
call	rax
call	rax
jmp	0x1400ab7ae
jmp	0x1400ab7ae
nop	dword ptr [rax + rax]
mov	rcx, rbp
mov	edi, 0x20
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [rbp]
lea	rdx, [rip - 0x893a8]
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rdx
je	0x1400ab7da
je	0x1400ab7da
mov	edx, 0x20
mov	rcx, rbp
call	rax
call	rax
mov	edi, eax
jmp	0x1400ab7da
jmp	0x1400ab7da
nop	word ptr [rax + rax]
lock add	dword ptr [rbp + 0x14], 1
jmp	0x1400ab60d
jmp	0x1400ab60d
lea	rcx, [rip + 0xe737]
call	0x1400b4200
call	0x1400b4200
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
or	edx, dword ptr [rcx + 0x20]
cmp	qword ptr [rcx + 0xe8], 0
je	0x1400ab8b0
je	0x1400ab8b0
mov	dword ptr [rcx + 0x20], edx
and	edx, dword ptr [rcx + 0x1c]
jne	0x1400ab8b5
jne	0x1400ab8b5
add	rsp, 0x28
ret	
ret	
nop	
or	edx, 1
jmp	0x1400ab8a1
jmp	0x1400ab8a1
lea	rcx, [rip + 0xe6f4]
call	0x1400b4200
call	0x1400b4200
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx + 0xe8], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rsi, rdx
call	0x1400aa250
call	0x1400aa250
lea	rax, [rip + 0x1ca48]
pxor	xmm0, xmm0
mov	rcx, rbx
mov	qword ptr [rbx], rax
xor	eax, eax
mov	word ptr [rbx + 0xe0], ax
mov	qword ptr [rbx + 0xd8], 0
movups	xmmword ptr [rbx + 0xe8], xmm0
movups	xmmword ptr [rbx + 0xf8], xmm0
call	0x1400a9cb0
call	0x1400a9cb0
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400ab190
call	0x1400ab190
xor	edx, edx
xor	eax, eax
test	rsi, rsi
sete	al
mov	word ptr [rbx + 0xe0], dx
mov	qword ptr [rbx + 0xd8], 0
mov	dword ptr [rbx + 0x1c], 0
mov	qword ptr [rbx + 0xe8], rsi
mov	dword ptr [rbx + 0x20], eax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x1400aa250
call	0x1400aa250
lea	rax, [rip + 0x1c9bc]
pxor	xmm0, xmm0
mov	qword ptr [rbx + 0xd8], 0
mov	qword ptr [rbx], rax
xor	eax, eax
mov	word ptr [rbx + 0xe0], ax
movups	xmmword ptr [rbx + 0xe8], xmm0
movups	xmmword ptr [rbx + 0xf8], xmm0
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rsi, rdx
call	0x1400aa250
call	0x1400aa250
lea	rax, [rip + 0x1c968]
pxor	xmm0, xmm0
mov	rcx, rbx
mov	qword ptr [rbx], rax
xor	eax, eax
mov	word ptr [rbx + 0xe0], ax
mov	qword ptr [rbx + 0xd8], 0
movups	xmmword ptr [rbx + 0xe8], xmm0
movups	xmmword ptr [rbx + 0xf8], xmm0
call	0x1400a9cb0
call	0x1400a9cb0
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400ab190
call	0x1400ab190
xor	edx, edx
xor	eax, eax
test	rsi, rsi
sete	al
mov	word ptr [rbx + 0xe0], dx
mov	qword ptr [rbx + 0xd8], 0
mov	dword ptr [rbx + 0x1c], 0
mov	qword ptr [rbx + 0xe8], rsi
mov	dword ptr [rbx + 0x20], eax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x1400aa250
call	0x1400aa250
lea	rax, [rip + 0x1c8dc]
pxor	xmm0, xmm0
mov	qword ptr [rbx + 0xd8], 0
mov	qword ptr [rbx], rax
xor	eax, eax
mov	word ptr [rbx + 0xe0], ax
movups	xmmword ptr [rbx + 0xe8], xmm0
movups	xmmword ptr [rbx + 0xf8], xmm0
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1c894]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1c869]
mov	qword ptr [rcx], rax
jmp	0x1400aa330
jmp	0x1400aa330
nop	
lea	rax, [rip + 0x1c859]
mov	qword ptr [rcx], rax
jmp	0x1400aa330
jmp	0x1400aa330
nop	
sub	rsp, 0x28
cmp	qword ptr [rcx + 0xe8], 0
mov	eax, dword ptr [rcx + 0x20]
mov	dword ptr [rcx + 0x1c], edx
je	0x1400abb10
je	0x1400abb10
test	edx, eax
jne	0x1400abb18
jne	0x1400abb18
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax]
or	eax, 1
mov	dword ptr [rcx + 0x20], eax
jmp	0x1400abb04
jmp	0x1400abb04
lea	rcx, [rip + 0xe491]
call	0x1400b4200
call	0x1400b4200
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
or	dword ptr [rcx + 0x20], edx
and	edx, dword ptr [rcx + 0x1c]
jne	0x1400abb41
jne	0x1400abb41
add	rsp, 0x28
ret	
ret	
call	0x1400b3540
call	0x1400b3540
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0x12d80]
mov	rsi, rdx
call	0x140022a70
call	0x140022a70
mov	rcx, qword ptr [rip + 0x12f81]
mov	rdx, rax
mov	rax, qword ptr [rsi]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
mov	qword ptr [rbx + 0xf0], rax
call	0x140022a70
call	0x140022a70
mov	rcx, qword ptr [rip + 0x12f40]
mov	rdx, rax
mov	rax, qword ptr [rsi]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
mov	qword ptr [rbx + 0xf8], rax
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsi]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
mov	qword ptr [rbx + 0x100], rax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx + 0xd8]
mov	qword ptr [rcx + 0xd8], rdx
ret	
ret	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
cmp	byte ptr [rcx + 0xe2], 0
mov	rbx, rcx
mov	esi, edx
je	0x1400abc10
je	0x1400abc10
movzx	eax, word ptr [rcx + 0xe0]
mov	word ptr [rbx + 0xe0], si
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, qword ptr [rcx + 0xf0]
test	rcx, rcx
je	0x1400abc3c
je	0x1400abc3c
mov	rax, qword ptr [rcx]
mov	edx, 0x20
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	byte ptr [rbx + 0xe2], 1
mov	word ptr [rbx + 0xe0], si
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rsi, rdx
call	0x1400a9cb0
call	0x1400a9cb0
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400abb50
call	0x1400abb50
xor	eax, eax
mov	byte ptr [rbx + 0xe2], 0
mov	word ptr [rbx + 0xe0], ax
xor	eax, eax
test	rsi, rsi
sete	al
mov	dword ptr [rbx + 0x1c], 0
mov	qword ptr [rbx + 0xd8], 0
mov	qword ptr [rbx + 0xe8], rsi
mov	dword ptr [rbx + 0x20], eax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rsi, rdx
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rsi + 0xd8]
mov	qword ptr [rsi + 0xd8], 0
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, word ptr [rsi + 0xe0]
mov	word ptr [rbx + 0xe0], ax
movzx	eax, byte ptr [rsi + 0xe2]
mov	qword ptr [rbx + 0xe8], 0
mov	byte ptr [rbx + 0xe2], al
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rsi, rdx
call	0x1400a9d00
call	0x1400a9d00
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rsi + 0xd8]
mov	qword ptr [rsi + 0xd8], 0
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, word ptr [rsi + 0xe0]
mov	word ptr [rbx + 0xe0], ax
movzx	eax, byte ptr [rsi + 0xe2]
mov	qword ptr [rbx + 0xe8], 0
mov	byte ptr [rbx + 0xe2], al
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rbx, rdx
call	0x1400a9e10
call	0x1400a9e10
lea	rdx, [rsi + 0xd0]
mov	rcx, rsi
call	0x1400abb50
call	0x1400abb50
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400abb50
call	0x1400abb50
mov	rax, qword ptr [rsi + 0xd8]
mov	rdx, qword ptr [rbx + 0xd8]
mov	qword ptr [rsi + 0xd8], rdx
movzx	edx, word ptr [rbx + 0xe0]
mov	qword ptr [rbx + 0xd8], rax
movzx	eax, word ptr [rsi + 0xe0]
mov	word ptr [rsi + 0xe0], dx
movzx	edx, byte ptr [rbx + 0xe2]
mov	word ptr [rbx + 0xe0], ax
movzx	eax, byte ptr [rsi + 0xe2]
mov	byte ptr [rsi + 0xe2], dl
mov	byte ptr [rbx + 0xe2], al
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
cmp	qword ptr [rcx + 0xe8], 0
je	0x1400abe40
je	0x1400abe40
mov	dword ptr [rcx + 0x20], edx
and	edx, dword ptr [rcx + 0x1c]
jne	0x1400abe45
jne	0x1400abe45
add	rsp, 0x28
ret	
ret	
nop	dword ptr [rax + rax]
or	edx, 1
jmp	0x1400abe2e
jmp	0x1400abe2e
lea	rcx, [rip + 0xe164]
call	0x1400b4200
call	0x1400b4200
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rbx, rdx
mov	rsi, r8
lea	rdx, [rdx + 0xd0]
mov	rdi, rcx
call	0x14009be20
call	0x14009be20
lea	rbp, [rsp + 0x28]
mov	rdx, rbx
mov	r8, rsi
mov	rcx, rbp
call	0x1400a9c20
call	0x1400a9c20
mov	rcx, rbp
call	0x14009bf30
call	0x14009bf30
mov	rcx, rbx
mov	rdx, rsi
call	0x1400abb50
call	0x1400abb50
mov	rbx, qword ptr [rbx + 0xe8]
test	rbx, rbx
je	0x1400abedf
je	0x1400abedf
lea	r12, [rbx + 0x38]
mov	rcx, rbp
mov	rdx, r12
call	0x14009be20
call	0x14009be20
mov	rax, qword ptr [rbx]
mov	rdx, rsi
mov	rcx, rbx
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
mov	rcx, r12
mov	rdx, rsi
call	0x14009bf90
call	0x14009bf90
mov	rcx, rbp
call	0x14009bf30
call	0x14009bf30
mov	rax, rdi
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
mov	rcx, rbp
mov	rbx, rax
call	0x14009bf30
call	0x14009bf30
mov	rcx, rdi
call	0x14009bf30
call	0x14009bf30
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
xor	eax, eax
mov	r8, qword ptr [rcx + 0xe8]
test	rdx, rdx
mov	qword ptr [rcx + 0xe8], rdx
sete	al
mov	dword ptr [rcx + 0x20], eax
and	eax, dword ptr [rcx + 0x1c]
jne	0x1400abf3a
jne	0x1400abf3a
mov	rax, r8
add	rsp, 0x28
ret	
ret	
lea	rcx, [rip + 0xe06f]
call	0x1400b4200
call	0x1400b4200
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rbx, rcx
mov	rsi, rdx
cmp	rcx, rdx
je	0x1400ac0c8
je	0x1400ac0c8
mov	eax, dword ptr [rdx + 0xc0]
cmp	eax, 8
jg	0x1400ac0e0
jg	0x1400ac0e0
lea	r12, [rcx + 0x40]
mov	rdi, r12
mov	rbp, qword ptr [rsi + 0x28]
test	rbp, rbp
je	0x1400abf9d
je	0x1400abf9d
mov	rax, qword ptr [rip + 0x126a1]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400ac190
jne	0x1400ac190
add	dword ptr [rbp + 0x14], 1
mov	rcx, rbx
xor	edx, edx
call	0x1400a9340
call	0x1400a9340
mov	rcx, qword ptr [rbx + 0xc8]
cmp	rcx, r12
je	0x1400abfc8
je	0x1400abfc8
test	rcx, rcx
je	0x1400abfbd
je	0x1400abfbd
call	0x1400b2bd0
call	0x1400b2bd0
mov	qword ptr [rbx + 0xc8], 0
mov	rcx, rbx
call	0x1400a93e0
call	0x1400a93e0
movsxd	r8, dword ptr [rsi + 0xc0]
mov	qword ptr [rbx + 0x28], rbp
xor	eax, eax
mov	r9, r8
shl	r8, 4
test	r9d, r9d
jle	0x1400ac010
jle	0x1400ac010
nop	dword ptr [rax]
mov	rdx, qword ptr [rsi + 0xc8]
mov	rcx, qword ptr [rdx + rax]
mov	qword ptr [rdi + rax], rcx
mov	edx, dword ptr [rdx + rax + 8]
mov	dword ptr [rdi + rax + 8], edx
add	rax, 0x10
cmp	rax, r8
jne	0x1400abff0
jne	0x1400abff0
mov	eax, dword ptr [rsi + 0x18]
movdqu	xmm0, xmmword ptr [rsi + 8]
mov	qword ptr [rbx + 0xc8], rdi
cmp	byte ptr [rsi + 0xe2], 0
mov	dword ptr [rbx + 0xc0], r9d
mov	dword ptr [rbx + 0x18], eax
mov	rax, qword ptr [rsi + 0xd8]
movups	xmmword ptr [rbx + 8], xmm0
mov	qword ptr [rbx + 0xd8], rax
je	0x1400ac150
je	0x1400ac150
movzx	edi, word ptr [rsi + 0xe0]
cmp	byte ptr [rbx + 0xe2], 0
je	0x1400ac128
je	0x1400ac128
mov	word ptr [rbx + 0xe0], di
lea	rdi, [rsp + 0x28]
lea	rdx, [rsi + 0xd0]
mov	rcx, rdi
lea	rbp, [rbx + 0xd0]
call	0x14009be20
call	0x14009be20
mov	rdx, rdi
mov	rcx, rbp
call	0x14009bf90
call	0x14009bf90
mov	rcx, rdi
call	0x14009bf30
call	0x14009bf30
mov	rdx, rbp
mov	rcx, rbx
call	0x1400abb50
call	0x1400abb50
mov	edx, 2
mov	rcx, rbx
call	0x1400a9340
call	0x1400a9340
mov	eax, dword ptr [rsi + 0x1c]
cmp	qword ptr [rbx + 0xe8], 0
mov	edx, dword ptr [rbx + 0x20]
mov	dword ptr [rbx + 0x1c], eax
je	0x1400ac180
je	0x1400ac180
test	edx, eax
jne	0x1400ac19f
jne	0x1400ac19f
mov	rax, rbx
add	rsp, 0x30
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr cs:[rax + rax]
movsxd	rcx, eax
shl	rcx, 4
call	0x1400b2c00
call	0x1400b2c00
movsxd	rdx, dword ptr [rsi + 0xc0]
mov	rdi, rax
sub	rdx, 1
js	0x1400ac118
js	0x1400ac118
nop	dword ptr [rax]
mov	qword ptr [rax], 0
add	rax, 0x10
mov	dword ptr [rax - 8], 0
sub	rdx, 1
jae	0x1400ac100
jae	0x1400ac100
lea	r12, [rbx + 0x40]
jmp	0x1400abf7f
jmp	0x1400abf7f
nop	dword ptr [rax]
mov	rcx, qword ptr [rbx + 0xf0]
test	rcx, rcx
je	0x1400ac19a
je	0x1400ac19a
mov	rax, qword ptr [rcx]
mov	edx, 0x20
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	byte ptr [rbx + 0xe2], 1
jmp	0x1400ac05c
jmp	0x1400ac05c
nop	dword ptr [rax + rax]
mov	rcx, qword ptr [rsi + 0xf0]
test	rcx, rcx
je	0x1400ac19a
je	0x1400ac19a
mov	rax, qword ptr [rcx]
mov	edx, 0x20
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	byte ptr [rsi + 0xe2], 1
mov	word ptr [rsi + 0xe0], ax
mov	edi, eax
jmp	0x1400ac04f
jmp	0x1400ac04f
nop	dword ptr [rax]
or	edx, 1
mov	dword ptr [rbx + 0x20], edx
jmp	0x1400ac0c0
jmp	0x1400ac0c0
nop	dword ptr [rax + rax]
lock add	dword ptr [rbp + 0x14], 1
jmp	0x1400abf9d
jmp	0x1400abf9d
call	0x1400b3a30
call	0x1400b3a30
lea	rcx, [rip + 0xde0a]
call	0x1400b4200
call	0x1400b4200
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
or	edx, dword ptr [rcx + 0x20]
cmp	qword ptr [rcx + 0xe8], 0
je	0x1400ac1d0
je	0x1400ac1d0
mov	dword ptr [rcx + 0x20], edx
and	edx, dword ptr [rcx + 0x1c]
jne	0x1400ac1d5
jne	0x1400ac1d5
add	rsp, 0x28
ret	
ret	
nop	
or	edx, 1
jmp	0x1400ac1c1
jmp	0x1400ac1c1
lea	rcx, [rip + 0xddd4]
call	0x1400b4200
call	0x1400b4200
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	qword ptr [rcx + 0xe8], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rsi, rdx
call	0x1400aa250
call	0x1400aa250
lea	rax, [rip + 0x1c148]
pxor	xmm0, xmm0
mov	rcx, rbx
mov	qword ptr [rbx], rax
xor	eax, eax
mov	word ptr [rbx + 0xe0], ax
mov	qword ptr [rbx + 0xd8], 0
mov	byte ptr [rbx + 0xe2], 0
movups	xmmword ptr [rbx + 0xe8], xmm0
movups	xmmword ptr [rbx + 0xf8], xmm0
call	0x1400a9cb0
call	0x1400a9cb0
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400abb50
call	0x1400abb50
xor	edx, edx
xor	eax, eax
test	rsi, rsi
sete	al
mov	word ptr [rbx + 0xe0], dx
mov	byte ptr [rbx + 0xe2], 0
mov	qword ptr [rbx + 0xd8], 0
mov	dword ptr [rbx + 0x1c], 0
mov	qword ptr [rbx + 0xe8], rsi
mov	dword ptr [rbx + 0x20], eax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x1400aa250
call	0x1400aa250
lea	rax, [rip + 0x1c0ac]
pxor	xmm0, xmm0
mov	qword ptr [rbx + 0xd8], 0
mov	qword ptr [rbx], rax
xor	eax, eax
mov	word ptr [rbx + 0xe0], ax
mov	byte ptr [rbx + 0xe2], 0
movups	xmmword ptr [rbx + 0xe8], xmm0
movups	xmmword ptr [rbx + 0xf8], xmm0
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, rcx
mov	rsi, rdx
call	0x1400aa250
call	0x1400aa250
lea	rax, [rip + 0x1c058]
pxor	xmm0, xmm0
mov	rcx, rbx
mov	qword ptr [rbx], rax
xor	eax, eax
mov	word ptr [rbx + 0xe0], ax
mov	qword ptr [rbx + 0xd8], 0
mov	byte ptr [rbx + 0xe2], 0
movups	xmmword ptr [rbx + 0xe8], xmm0
movups	xmmword ptr [rbx + 0xf8], xmm0
call	0x1400a9cb0
call	0x1400a9cb0
lea	rdx, [rbx + 0xd0]
mov	rcx, rbx
call	0x1400abb50
call	0x1400abb50
xor	edx, edx
xor	eax, eax
test	rsi, rsi
sete	al
mov	word ptr [rbx + 0xe0], dx
mov	byte ptr [rbx + 0xe2], 0
mov	qword ptr [rbx + 0xd8], 0
mov	dword ptr [rbx + 0x1c], 0
mov	qword ptr [rbx + 0xe8], rsi
mov	dword ptr [rbx + 0x20], eax
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x1400aa250
call	0x1400aa250
lea	rax, [rip + 0x1bfbc]
pxor	xmm0, xmm0
mov	qword ptr [rbx + 0xd8], 0
mov	qword ptr [rbx], rax
xor	eax, eax
mov	word ptr [rbx + 0xe0], ax
mov	byte ptr [rbx + 0xe2], 0
movups	xmmword ptr [rbx + 0xe8], xmm0
movups	xmmword ptr [rbx + 0xf8], xmm0
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1bf74]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1bf49]
mov	qword ptr [rcx], rax
jmp	0x1400aa330
jmp	0x1400aa330
nop	
lea	rax, [rip + 0x1bf39]
mov	qword ptr [rcx], rax
jmp	0x1400aa330
jmp	0x1400aa330
nop	
mov	edx, 8
jmp	0x1400b2bf0
jmp	0x1400b2bf0
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1bf4e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1bf2e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1bf14]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1bee9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1bed9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1beee]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1bece]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1beb4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1be89]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1be79]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1be8e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1be6e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1be54]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1be29]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1be19]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1be2e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	eax, eax
test	rdx, rdx
setne	al
mov	dword ptr [rcx + 8], eax
lea	rax, [rip + 0x1be0e]
mov	qword ptr [rcx], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x1bdf4]
mov	qword ptr [rcx], rax
mov	rbx, rcx
call	0x14009bc00
call	0x14009bc00
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x1bdc9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
lea	rax, [rip + 0x1bdb9]
mov	qword ptr [rcx], rax
jmp	0x14009bc00
jmp	0x14009bc00
nop	
mov	edx, 0x10
jmp	0x1400b2bf0
jmp	0x1400b2bf0
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0x11fa5]
mov	rcx, qword ptr [rax]
call	0x140016090
call	0x140016090
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
cmp	byte ptr [rsp + 0x30], 0
mov	rax, rcx
mov	ecx, edx
je	0x1400ac720
je	0x1400ac720
mov	r10, rax
mov	ebx, 0xcccccccd
nop	dword ptr [rax]
mov	edx, ecx
mov	r11d, ecx
sub	r10, 1
imul	rdx, rbx
shr	rdx, 0x23
lea	r9d, [rdx + rdx*4]
add	r9d, r9d
sub	r11d, r9d
lea	r9d, [r11 + 4]
movzx	r9d, byte ptr [r8 + r9]
mov	byte ptr [r10], r9b
mov	r9d, ecx
mov	ecx, edx
cmp	r9d, 9
ja	0x1400ac6e8
ja	0x1400ac6e8
sub	eax, r10d
pop	rbx
ret	
ret	
nop	
mov	edx, r9d
and	edx, 0x4a
cmp	edx, 0x40
je	0x1400ac765
je	0x1400ac765
and	r9d, 0x4000
mov	r10, rax
cmp	r9d, 1
sbb	r9d, r9d
and	r9d, 0xfffffff0
add	r9d, 0x14
nop	dword ptr [rax]
mov	edx, ecx
sub	r10, 1
and	edx, 0xf
add	edx, r9d
shr	ecx, 4
mov	edx, edx
movzx	edx, byte ptr [r8 + rdx]
mov	byte ptr [r10], dl
jne	0x1400ac748
jne	0x1400ac748
jmp	0x1400ac71a
jmp	0x1400ac71a
mov	r10, rax
nop	dword ptr [rax + rax]
mov	edx, ecx
sub	r10, 1
and	edx, 7
shr	ecx, 3
movzx	edx, byte ptr [r8 + rdx + 4]
mov	byte ptr [r10], dl
jne	0x1400ac770
jne	0x1400ac770
jmp	0x1400ac71a
jmp	0x1400ac71a
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
cmp	byte ptr [rsp + 0x38], 0
mov	rbx, rcx
mov	rcx, rdx
je	0x1400ac7f0
je	0x1400ac7f0
movabs	rsi, 0xcccccccccccccccd
mov	r10, rbx
nop	dword ptr [rax]
mov	rax, rcx
mov	r11, rcx
sub	r10, 1
mul	rsi
shr	rdx, 3
lea	r9, [rdx + rdx*4]
add	r9, r9
sub	r11, r9
movzx	r9d, byte ptr [r8 + r11 + 4]
mov	byte ptr [r10], r9b
mov	r9, rcx
mov	rcx, rdx
cmp	r9, 9
ja	0x1400ac7b0
ja	0x1400ac7b0
mov	eax, ebx
sub	eax, r10d
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
mov	eax, r9d
and	eax, 0x4a
cmp	eax, 0x40
je	0x1400ac831
je	0x1400ac831
and	r9d, 0x4000
mov	r10, rbx
cmp	r9d, 1
sbb	rax, rax
and	rax, 0xfffffffffffffff0
lea	rdx, [r8 + rax + 0x14]
nop	dword ptr [rax]
mov	rax, rcx
sub	r10, 1
and	eax, 0xf
shr	rcx, 4
movzx	eax, byte ptr [rdx + rax]
mov	byte ptr [r10], al
jne	0x1400ac818
jne	0x1400ac818
jmp	0x1400ac7e0
jmp	0x1400ac7e0
mov	r10, rbx
nop	dword ptr [rax]
mov	rax, rcx
sub	r10, 1
and	eax, 7
shr	rcx, 3
movzx	eax, byte ptr [r8 + rax + 4]
mov	byte ptr [r10], al
jne	0x1400ac838
jne	0x1400ac838
jmp	0x1400ac7e0
jmp	0x1400ac7e0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
cmp	byte ptr [rsp + 0x30], 0
mov	rax, rcx
mov	ecx, edx
je	0x1400ac8b8
je	0x1400ac8b8
mov	r10, rax
mov	ebx, 0xcccccccd
nop	dword ptr [rax]
mov	edx, ecx
mov	r11d, ecx
sub	r10, 2
imul	rdx, rbx
shr	rdx, 0x23
lea	r9d, [rdx + rdx*4]
add	r9d, r9d
sub	r11d, r9d
lea	r9d, [r11 + 4]
movzx	r9d, word ptr [r8 + r9*2]
mov	word ptr [r10], r9w
mov	r9d, ecx
mov	ecx, edx
cmp	r9d, 9
ja	0x1400ac878
ja	0x1400ac878
sub	rax, r10
sar	rax, 1
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	edx, r9d
and	edx, 0x4a
cmp	edx, 0x40
je	0x1400ac8fe
je	0x1400ac8fe
and	r9d, 0x4000
mov	r10, rax
cmp	r9d, 1
sbb	r9d, r9d
and	r9d, 0xfffffff0
add	r9d, 0x14
nop	dword ptr [rax]
mov	edx, ecx
sub	r10, 2
and	edx, 0xf
add	edx, r9d
shr	ecx, 4
mov	edx, edx
movzx	edx, word ptr [r8 + rdx*2]
mov	word ptr [r10], dx
jne	0x1400ac8e0
jne	0x1400ac8e0
jmp	0x1400ac8ab
jmp	0x1400ac8ab
mov	r10, rax
nop	dword ptr [rax]
mov	edx, ecx
sub	r10, 2
and	edx, 7
shr	ecx, 3
movzx	edx, word ptr [r8 + rdx*2 + 8]
mov	word ptr [r10], dx
jne	0x1400ac908
jne	0x1400ac908
jmp	0x1400ac8ab
jmp	0x1400ac8ab
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
cmp	byte ptr [rsp + 0x38], 0
mov	rbx, rcx
mov	rcx, rdx
je	0x1400ac990
je	0x1400ac990
movabs	rsi, 0xcccccccccccccccd
mov	r10, rbx
nop	dword ptr [rax]
mov	rax, rcx
mov	r11, rcx
sub	r10, 2
mul	rsi
shr	rdx, 3
lea	r9, [rdx + rdx*4]
add	r9, r9
sub	r11, r9
movzx	r9d, word ptr [r8 + r11*2 + 8]
mov	word ptr [r10], r9w
mov	r9, rcx
mov	rcx, rdx
cmp	r9, 9
ja	0x1400ac950
ja	0x1400ac950
mov	rax, rbx
sub	rax, r10
sar	rax, 1
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	eax, r9d
and	eax, 0x4a
cmp	eax, 0x40
je	0x1400ac9d6
je	0x1400ac9d6
and	r9d, 0x4000
mov	r10, rbx
cmp	r9d, 1
sbb	rdx, rdx
and	rdx, 0xfffffffffffffff0
add	rdx, 0x14
nop	dword ptr [rax]
mov	rax, rcx
sub	r10, 2
and	eax, 0xf
add	rax, rdx
shr	rcx, 4
movzx	eax, word ptr [r8 + rax*2]
mov	word ptr [r10], ax
jne	0x1400ac9b8
jne	0x1400ac9b8
jmp	0x1400ac981
jmp	0x1400ac981
mov	r10, rbx
nop	dword ptr [rax]
mov	rax, rcx
sub	r10, 2
and	eax, 7
shr	rcx, 3
movzx	eax, word ptr [r8 + rax*2 + 8]
mov	word ptr [r10], ax
jne	0x1400ac9e0
jne	0x1400ac9e0
jmp	0x1400ac981
jmp	0x1400ac981
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x11c49]
mov	rax, qword ptr [rax]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip - 0x944f7]
mov	rax, rcx
test	rcx, rcx
cmove	rax, rdx
mov	rdx, qword ptr [rip + 0x11c28]
xchg	qword ptr [rdx], rax
ret	
ret	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
movsx	rax, byte ptr [r8]
lea	ebx, [rax - 1]
mov	r10, rcx
mov	r11d, edx
mov	rcx, qword ptr [rsp + 0x60]
mov	rdx, qword ptr [rsp + 0x58]
cmp	bl, 0x7d
ja	0x1400acb85
ja	0x1400acb85
mov	rbx, rcx
sub	rbx, rdx
cmp	rbx, rax
jle	0x1400acb85
jle	0x1400acb85
lea	rbx, [r9 - 1]
xor	r12d, r12d
xor	esi, esi
jmp	0x1400aca9a
jmp	0x1400aca9a
nop	word ptr [rax + rax]
add	rsi, 1
lea	rbp, [r8 + rsi]
movsx	rax, byte ptr [rbp]
lea	r9d, [rax - 1]
cmp	r9b, 0x7d
ja	0x1400acab0
ja	0x1400acab0
mov	r9, rcx
sub	r9, rdx
cmp	r9, rax
jle	0x1400acab0
jle	0x1400acab0
sub	rcx, rax
cmp	rsi, rbx
jb	0x1400aca78
jb	0x1400aca78
add	r12, 1
jmp	0x1400aca7c
jmp	0x1400aca7c
nop	dword ptr [rax + rax]
lea	rdi, [r12 - 1]
lea	rbx, [rsi - 1]
cmp	rdx, rcx
je	0x1400acba5
je	0x1400acba5
mov	r13, rcx
xor	eax, eax
sub	r13, rdx
nop	word ptr [rax + rax]
movzx	r9d, byte ptr [rdx + rax]
mov	byte ptr [r10 + rax], r9b
add	rax, 1
cmp	rax, r13
jne	0x1400acad0
jne	0x1400acad0
lea	rdx, [r10 + rax]
test	r12, r12
je	0x1400acb28
je	0x1400acb28
nop	dword ptr [rax + rax]
mov	byte ptr [rdx], r11b
movzx	r10d, byte ptr [rbp]
lea	r12, [rdx + 1]
test	r10b, r10b
jle	0x1400acb80
jle	0x1400acb80
xor	eax, eax
nop	dword ptr [rax + rax]
movzx	r9d, byte ptr [rcx + rax]
mov	byte ptr [rdx + rax + 1], r9b
add	rax, 1
cmp	rax, r10
jne	0x1400acb08
jne	0x1400acb08
add	rcx, rax
lea	rdx, [r12 + rax]
sub	rdi, 1
jae	0x1400acaf0
jae	0x1400acaf0
test	rsi, rsi
je	0x1400acb68
je	0x1400acb68
nop	dword ptr [rax]
mov	byte ptr [rdx], r11b
movzx	r10d, byte ptr [r8 + rbx]
lea	rsi, [rdx + 1]
test	r10b, r10b
jle	0x1400acb78
jle	0x1400acb78
xor	eax, eax
nop	dword ptr [rax + rax]
movzx	r9d, byte ptr [rcx + rax]
mov	byte ptr [rdx + rax + 1], r9b
add	rax, 1
cmp	r10, rax
jne	0x1400acb48
jne	0x1400acb48
add	rcx, r10
lea	rdx, [rsi + r10]
sub	rbx, 1
jae	0x1400acb30
jae	0x1400acb30
mov	rax, rdx
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	rdx, rsi
jmp	0x1400acb62
jmp	0x1400acb62
nop	dword ptr [rax]
mov	rdx, r12
jmp	0x1400acb22
jmp	0x1400acb22
cmp	rcx, rdx
je	0x1400acbad
je	0x1400acbad
mov	rbp, r8
mov	rbx, 0xffffffffffffffff
xor	r12d, r12d
xor	esi, esi
mov	rdi, 0xffffffffffffffff
jmp	0x1400acac2
jmp	0x1400acac2
mov	rdx, r10
jmp	0x1400acae6
jmp	0x1400acae6
mov	rdx, r10
jmp	0x1400acb68
jmp	0x1400acb68
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
mov	r12, qword ptr [rsp + 0x58]
movsx	rbx, byte ptr [r8]
mov	rax, rbx
mov	r10, rcx
mov	rcx, qword ptr [rsp + 0x60]
mov	r11d, edx
mov	rdx, rcx
sub	rdx, r12
sar	rdx, 1
cmp	rdx, rbx
jle	0x1400acd2d
jle	0x1400acd2d
sub	eax, 1
cmp	al, 0x7d
ja	0x1400acd2d
ja	0x1400acd2d
lea	rbp, [r9 - 1]
xor	esi, esi
xor	r9d, r9d
jmp	0x1400acc32
jmp	0x1400acc32
nop	word ptr [rax + rax]
add	rsi, 1
lea	rdi, [r8 + rsi]
mov	rdx, rcx
sub	rdx, r12
movsx	rbx, byte ptr [rdi]
sar	rdx, 1
cmp	rdx, rbx
jle	0x1400acc48
jle	0x1400acc48
lea	edx, [rbx - 1]
cmp	dl, 0x7d
ja	0x1400acc48
ja	0x1400acc48
lea	rax, [rbx + rbx]
sub	rcx, rax
cmp	rsi, rbp
jb	0x1400acc10
jb	0x1400acc10
add	r9, 1
jmp	0x1400acc14
jmp	0x1400acc14
nop	dword ptr [rax]
lea	rbp, [r9 - 1]
lea	rbx, [rsi - 1]
cmp	r12, rcx
je	0x1400acd4d
je	0x1400acd4d
mov	r13, rcx
xor	eax, eax
sub	r13, r12
nop	dword ptr [rax]
movzx	edx, word ptr [r12 + rax]
mov	word ptr [r10 + rax], dx
add	rax, 2
cmp	rax, r13
jne	0x1400acc68
jne	0x1400acc68
lea	rdx, [r10 + rax]
test	r9, r9
je	0x1400accc9
je	0x1400accc9
nop	dword ptr [rax]
mov	word ptr [rdx], r11w
movzx	r10d, byte ptr [rdi]
lea	r12, [rdx + 2]
test	r10b, r10b
jle	0x1400acd28
jle	0x1400acd28
add	r10, r10
xor	eax, eax
nop	word ptr [rax + rax]
movzx	r9d, word ptr [rcx + rax]
mov	word ptr [rdx + rax + 2], r9w
add	rax, 2
cmp	r10, rax
jne	0x1400acca8
jne	0x1400acca8
add	rcx, r10
lea	rdx, [r12 + r10]
sub	rbp, 1
jae	0x1400acc88
jae	0x1400acc88
test	rsi, rsi
je	0x1400acd11
je	0x1400acd11
nop	
mov	word ptr [rdx], r11w
movzx	r10d, byte ptr [r8 + rbx]
lea	rsi, [rdx + 2]
test	r10b, r10b
jle	0x1400acd20
jle	0x1400acd20
add	r10, r10
xor	eax, eax
nop	word ptr [rax + rax]
movzx	r9d, word ptr [rcx + rax]
mov	word ptr [rdx + rax + 2], r9w
add	rax, 2
cmp	rax, r10
jne	0x1400accf0
jne	0x1400accf0
add	rcx, rax
lea	rdx, [rsi + rax]
sub	rbx, 1
jae	0x1400accd0
jae	0x1400accd0
mov	rax, rdx
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax]
mov	rdx, rsi
jmp	0x1400acd0b
jmp	0x1400acd0b
nop	dword ptr [rax]
mov	rdx, r12
jmp	0x1400accc3
jmp	0x1400accc3
cmp	rcx, r12
je	0x1400acd55
je	0x1400acd55
mov	rdi, r8
mov	rbx, 0xffffffffffffffff
xor	r9d, r9d
xor	esi, esi
mov	rbp, 0xffffffffffffffff
jmp	0x1400acc59
jmp	0x1400acc59
mov	rdx, r10
jmp	0x1400acc7f
jmp	0x1400acc7f
mov	rdx, r10
jmp	0x1400acd11
jmp	0x1400acd11
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, rcx
mov	rdi, rdx
mov	rbp, r8
call	0x140077830
call	0x140077830
mov	rbx, rax
test	rax, rax
je	0x1400acdf0
je	0x1400acdf0
lea	rdx, [rsp + 0x28]
mov	rcx, rsi
call	0x14000cf50
call	0x14000cf50
mov	rax, qword ptr [rsp + 0x28]
movsd	qword ptr [rdi], xmm0
cmp	rax, rsi
je	0x1400acdc0
je	0x1400acdc0
cmp	byte ptr [rax], 0
jne	0x1400acdc0
jne	0x1400acdc0
ucomisd	xmm0, qword ptr [rip + 0xe1d2]
jp	0x1400ace00
jp	0x1400ace00
movsd	xmm1, qword ptr [rip + 0xe1b8]
jne	0x1400ace00
jne	0x1400ace00
movsd	qword ptr [rdi], xmm1
mov	dword ptr [rbp], 4
jmp	0x1400acdce
jmp	0x1400acdce
nop	
mov	qword ptr [rdi], 0
mov	dword ptr [rbp], 4
mov	rdx, rbx
xor	ecx, ecx
call	0x1400159c8
call	0x1400159c8
mov	rcx, rbx
call	0x1400b2bd0
call	0x1400b2bd0
nop	
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	dword ptr [rbp], 4
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
ucomisd	xmm0, qword ptr [rip + 0xe178]
jp	0x1400acdce
jp	0x1400acdce
movsd	xmm1, qword ptr [rip + 0xe15e]
je	0x1400acdb2
je	0x1400acdb2
jmp	0x1400acdce
jmp	0x1400acdce
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
mov	rsi, rcx
mov	rdi, rdx
mov	rbp, r8
call	0x140077830
call	0x140077830
mov	rbx, rax
test	rax, rax
je	0x1400acec8
je	0x1400acec8
lea	rcx, [rsp + 0x20]
lea	r8, [rsp + 0x38]
mov	rdx, rsi
call	0x14000d0f0
call	0x14000d0f0
fld	xword ptr [rsp + 0x20]
mov	rax, qword ptr [rsp + 0x38]
fld	st(0)
fstp	xword ptr [rdi]
cmp	rax, rsi
je	0x1400ace90
je	0x1400ace90
cmp	byte ptr [rax], 0
jne	0x1400ace98
jne	0x1400ace98
fld	dword ptr [rip + 0xe0ef]
fxch	st(1)
fucomi	st(1)
fstp	st(1)
jp	0x1400acee0
jp	0x1400acee0
jne	0x1400acee0
jne	0x1400acee0
fstp	st(0)
fld	xword ptr [rip + 0xe10d]
fstp	xword ptr [rdi]
mov	dword ptr [rbp], 4
jmp	0x1400acea5
jmp	0x1400acea5
nop	
fstp	st(0)
jmp	0x1400ace9a
jmp	0x1400ace9a
nop	dword ptr [rax]
fstp	st(0)
fldz	
fstp	xword ptr [rdi]
mov	dword ptr [rbp], 4
mov	rdx, rbx
xor	ecx, ecx
call	0x1400159c8
call	0x1400159c8
mov	rcx, rbx
call	0x1400b2bd0
call	0x1400b2bd0
nop	
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	dword ptr [rbp], 4
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
fld	dword ptr [rip + 0xe07e]
fxch	st(1)
fucompi	st(1)
fstp	st(0)
jp	0x1400acea5
jp	0x1400acea5
jne	0x1400acea5
jne	0x1400acea5
fld	xword ptr [rip + 0xe0aa]
jmp	0x1400ace83
jmp	0x1400ace83
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, rcx
mov	rdi, rdx
mov	rbp, r8
call	0x140077830
call	0x140077830
mov	rbx, rax
test	rax, rax
je	0x1400acf90
je	0x1400acf90
lea	rdx, [rsp + 0x28]
mov	rcx, rsi
call	0x14000d050
call	0x14000d050
mov	rax, qword ptr [rsp + 0x28]
movss	dword ptr [rdi], xmm0
cmp	rax, rsi
je	0x1400acf60
je	0x1400acf60
cmp	byte ptr [rax], 0
jne	0x1400acf60
jne	0x1400acf60
ucomiss	xmm0, dword ptr [rip + 0xe01b]
jp	0x1400acfa0
jp	0x1400acfa0
movss	xmm1, dword ptr [rip + 0xe009]
jne	0x1400acfa0
jne	0x1400acfa0
movss	dword ptr [rdi], xmm1
mov	dword ptr [rbp], 4
jmp	0x1400acf6d
jmp	0x1400acf6d
nop	
mov	dword ptr [rdi], 0
mov	dword ptr [rbp], 4
mov	rdx, rbx
xor	ecx, ecx
call	0x1400159c8
call	0x1400159c8
mov	rcx, rbx
call	0x1400b2bd0
call	0x1400b2bd0
nop	
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	dword ptr [rbp], 4
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
ucomiss	xmm0, dword ptr [rip + 0xdfbd]
jp	0x1400acf6d
jp	0x1400acf6d
movss	xmm1, dword ptr [rip + 0xdfab]
je	0x1400acf51
je	0x1400acf51
jmp	0x1400acf6d
jmp	0x1400acf6d
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x11699]
mov	rax, qword ptr [rax]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x2a59]
mov	rax, rcx
test	rcx, rcx
cmove	rax, rdx
mov	rdx, qword ptr [rip + 0x11678]
xchg	qword ptr [rdx], rax
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0xa3a1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0xa381]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0xa361]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0xa341]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0xa321]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0xa301]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0xa2e1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0xa2c1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0xa2a1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0xa281]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0xa261]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0xa241]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0xa221]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0xa201]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0xa1e1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0xa1c1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9d11]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9cf1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9cd1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9cb1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9c91]
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x1400ad3f8
jae	0x1400ad3f8
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x1400ad3f8
je	0x1400ad3f8
xor	r9d, r9d
lea	r8, [rip + 0x13e6c]
lea	rdx, [rip + 0x137b5]
add	rsp, 0x20
pop	rbx
jmp	0x1400b35e0
jmp	0x1400b35e0
nop	dword ptr [rax]
xor	eax, eax
add	rsp, 0x20
pop	rbx
ret	
ret	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9c51]
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x1400ad448
jae	0x1400ad448
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x1400ad448
je	0x1400ad448
xor	r9d, r9d
lea	r8, [rip + 0x13e3c]
lea	rdx, [rip + 0x13765]
add	rsp, 0x20
pop	rbx
jmp	0x1400b35e0
jmp	0x1400b35e0
nop	dword ptr [rax]
xor	eax, eax
add	rsp, 0x20
pop	rbx
ret	
ret	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0x11471]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0x11451]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0x115c1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0x115a1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9fe1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9fc1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9fa1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9f81]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9f61]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9f41]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9f41]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9f21]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9f01]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9ee1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9ec1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9ea1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9e81]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9e61]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9e41]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9e21]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9e01]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x9de1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x7de9]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
xchg	qword ptr [rip + 0x7dd6], rax
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	ecx, 4
mov	rdi, rdx
xor	edx, edx
movsxd	rsi, r8d
mov	rbp, r9
call	0x1400159c8
call	0x1400159c8
mov	rbx, rax
movzx	eax, byte ptr [rax]
sub	eax, 0x43
jne	0x1400ad8c0
jne	0x1400ad8c0
movzx	eax, byte ptr [rbx + 1]
test	eax, eax
jne	0x1400ad8f0
jne	0x1400ad8f0
lea	r9, [rsp + 0x90]
mov	r8, rbp
mov	rdx, rsi
mov	rcx, rdi
mov	qword ptr [rsp + 0x28], r9
call	0x14000d3c0
call	0x14000d3c0
mov	ebx, eax
mov	eax, ebx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rcx, rbx
call	0x140015a08
call	0x140015a08
lea	r13, [rax + 1]
mov	rcx, r13
call	0x1400b2c00
call	0x1400b2c00
mov	r8, r13
mov	rdx, rbx
mov	rcx, rax
mov	r12, rax
call	0x140015998
call	0x140015998
lea	rdx, [rip + 0xbf9b]
mov	ecx, 4
call	0x1400159c8
call	0x1400159c8
mov	r8, rbp
mov	rdx, rsi
mov	rcx, rdi
lea	r9, [rsp + 0x90]
mov	qword ptr [rsp + 0x28], r9
call	0x14000d3c0
call	0x14000d3c0
mov	rdx, r12
mov	ecx, 4
mov	ebx, eax
call	0x1400159c8
call	0x1400159c8
mov	rcx, r12
call	0x1400b2bd0
call	0x1400b2bd0
mov	eax, ebx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	r15, [rsp + 0x30]
mov	rbx, rcx
mov	r12, rdx
mov	rdx, rcx
mov	rcx, r15
mov	rbp, r8
call	0x140070250
call	0x140070250
cmp	byte ptr [rsp + 0x30], 0
je	0x1400ada68
je	0x1400ada68
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
lea	rdi, [rbx + rax]
mov	r13, qword ptr [rdi + 0x10]
cmp	rbp, r13
jge	0x1400adab8
jge	0x1400adab8
mov	esi, dword ptr [rdi + 0x18]
and	esi, 0xb0
mov	dword ptr [rsp + 0x24], esi
cmp	esi, 0x20
je	0x1400adb04
je	0x1400adb04
mov	rsi, r13
sub	rsi, rbp
cmp	byte ptr [rdi + 0xe1], 0
je	0x1400adbd8
je	0x1400adbd8
movzx	r14d, byte ptr [rdi + 0xe0]
jmp	0x1400ada09
jmp	0x1400ada09
nop	
mov	byte ptr [rax], r14b
add	qword ptr [rcx + 0x28], 1
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
sub	rsi, 1
je	0x1400adb00
je	0x1400adb00
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rax, qword ptr [rcx + 0x28]
cmp	rax, qword ptr [rcx + 0x30]
jb	0x1400ad9f0
jb	0x1400ad9f0
mov	rax, qword ptr [rcx]
movzx	edx, r14b
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	eax, -1
jne	0x1400ad9f8
jne	0x1400ad9f8
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
mov	rax, qword ptr [rbx]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rbx
mov	r8d, dword ptr [rdi + 0x20]
test	r8d, r8d
je	0x1400adb0f
je	0x1400adb0f
nop	word ptr cs:[rax + rax]
mov	qword ptr [rdi + 0x10], 0
mov	rsi, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x1400adaa1
je	0x1400adaa1
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x1400adaa1
jne	0x1400adaa1
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x1400adaa1
je	0x1400adaa1
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x1400adc20
je	0x1400adc20
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rcx, qword ptr [rdi + 0xe8]
mov	r8, rbp
mov	rdx, r12
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
mov	rdx, qword ptr [rbx]
mov	rdi, qword ptr [rdx - 0x18]
add	rdi, rbx
cmp	rbp, rax
je	0x1400ada60
je	0x1400ada60
mov	edx, dword ptr [rdi + 0x20]
mov	rcx, rdi
or	edx, 1
call	0x1400ab490
call	0x1400ab490
mov	rax, qword ptr [rbx]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rbx
mov	qword ptr [rdi + 0x10], 0
jmp	0x1400ada68
jmp	0x1400ada68
nop	
lea	rdi, [rbx + rax]
mov	ecx, dword ptr [rdi + 0x20]
test	ecx, ecx
jne	0x1400ada60
jne	0x1400ada60
mov	rcx, qword ptr [rdi + 0xe8]
mov	r8, rbp
mov	rdx, r12
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
cmp	rbp, rdx
je	0x1400adb42
je	0x1400adb42
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
cmp	dword ptr [rsp + 0x24], 0x20
lea	rdi, [rbx + rax]
jne	0x1400ada60
jne	0x1400ada60
mov	edx, dword ptr [rdi + 0x20]
test	edx, edx
jne	0x1400ada60
jne	0x1400ada60
sub	r13, rbp
cmp	byte ptr [rdi + 0xe1], 0
je	0x1400adc77
je	0x1400adc77
movzx	esi, byte ptr [rdi + 0xe0]
jmp	0x1400adb99
jmp	0x1400adb99
nop	dword ptr [rax]
mov	byte ptr [rax], sil
add	qword ptr [rcx + 0x28], 1
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
sub	r13, 1
je	0x1400adcb0
je	0x1400adcb0
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rax, qword ptr [rcx + 0x28]
cmp	rax, qword ptr [rcx + 0x30]
jb	0x1400adb80
jb	0x1400adb80
mov	rax, qword ptr [rcx]
movzx	edx, sil
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	eax, -1
jne	0x1400adb88
jne	0x1400adb88
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x1400adae8
jmp	0x1400adae8
nop	dword ptr [rax]
mov	rax, qword ptr [rdi + 0xf0]
mov	qword ptr [rsp + 0x28], rax
test	rax, rax
je	0x1400adced
je	0x1400adced
mov	rax, qword ptr [rsp + 0x28]
cmp	byte ptr [rax + 0x38], 0
je	0x1400adc40
je	0x1400adc40
movzx	r14d, byte ptr [rax + 0x59]
mov	byte ptr [rdi + 0xe0], r14b
mov	rax, qword ptr [rbx]
mov	byte ptr [rdi + 0xe1], 1
mov	rax, qword ptr [rax - 0x18]
jmp	0x1400ada09
jmp	0x1400ada09
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400ab490
call	0x1400ab490
jmp	0x1400adaa1
jmp	0x1400adaa1
nop	word ptr [rax + rax]
mov	r14, qword ptr [rsp + 0x28]
mov	rcx, r14
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [r14]
lea	rdx, [rip - 0x8b7b7]
mov	r14d, 0x20
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rdx
je	0x1400adbfd
je	0x1400adbfd
mov	rcx, qword ptr [rsp + 0x28]
mov	edx, 0x20
call	rax
call	rax
mov	r14d, eax
jmp	0x1400adbfd
jmp	0x1400adbfd
mov	rbp, qword ptr [rdi + 0xf0]
test	rbp, rbp
je	0x1400adce8
je	0x1400adce8
cmp	byte ptr [rbp + 0x38], 0
je	0x1400adcb9
je	0x1400adcb9
movzx	esi, byte ptr [rbp + 0x59]
mov	byte ptr [rdi + 0xe0], sil
mov	rax, qword ptr [rbx]
mov	byte ptr [rdi + 0xe1], 1
mov	rax, qword ptr [rax - 0x18]
jmp	0x1400adb99
jmp	0x1400adb99
nop	word ptr [rax + rax]
lea	rdi, [rbx + rax]
jmp	0x1400ada60
jmp	0x1400ada60
mov	rcx, rbp
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [rbp]
lea	rdx, [rip - 0x8b82c]
mov	esi, 0x20
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rdx
je	0x1400adc8d
je	0x1400adc8d
mov	edx, 0x20
mov	rcx, rbp
call	rax
call	rax
mov	esi, eax
jmp	0x1400adc8d
jmp	0x1400adc8d
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x1400add19
jne	0x1400add19
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400ada68
jmp	0x1400ada68
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, r15
call	0x140070350
call	0x140070350
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x1400add44
jmp	0x1400add44
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400add44
jmp	0x1400add44
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	r15, [rsp + 0x30]
mov	rbx, rcx
mov	r13, rdx
mov	rdx, rcx
mov	rcx, r15
mov	rbp, r8
call	0x14008a620
call	0x14008a620
cmp	byte ptr [rsp + 0x30], 0
je	0x1400ade6c
je	0x1400ade6c
mov	rax, qword ptr [rbx]
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
mov	r14, qword ptr [rsi + 0x10]
mov	r8, rsi
cmp	rbp, r14
jge	0x1400adec0
jge	0x1400adec0
mov	eax, dword ptr [rsi + 0x18]
and	eax, 0xb0
mov	dword ptr [rsp + 0x2c], eax
cmp	eax, 0x20
je	0x1400ade58
je	0x1400ade58
mov	rdi, r14
sub	rdi, rbp
cmp	byte ptr [rsi + 0xe2], 0
je	0x1400adfe0
je	0x1400adfe0
movzx	r12d, word ptr [rsi + 0xe0]
jmp	0x1400ade0f
jmp	0x1400ade0f
mov	word ptr [rax], r12w
add	rax, 2
mov	qword ptr [rcx + 0x28], rax
mov	eax, r12d
cmp	ax, -1
je	0x1400ade40
je	0x1400ade40
sub	rdi, 1
je	0x1400adf10
je	0x1400adf10
mov	rcx, qword ptr [rsi + 0xe8]
mov	r8, rsi
mov	rax, qword ptr [rcx + 0x28]
cmp	rax, qword ptr [rcx + 0x30]
jb	0x1400addf0
jb	0x1400addf0
mov	rax, qword ptr [rcx]
movzx	edx, r12w
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
mov	rdx, qword ptr [rbx]
mov	rsi, qword ptr [rdx - 0x18]
add	rsi, rbx
mov	r8, rsi
cmp	ax, -1
jne	0x1400ade05
jne	0x1400ade05
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400abe20
call	0x1400abe20
mov	rax, qword ptr [rbx]
mov	r8, qword ptr [rax - 0x18]
add	r8, rbx
mov	ecx, dword ptr [r8 + 0x20]
test	ecx, ecx
je	0x1400adf1b
je	0x1400adf1b
mov	qword ptr [r8 + 0x10], 0
mov	rsi, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rsi]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rsi
test	byte ptr [rdi + 0x19], 0x20
je	0x1400adea5
je	0x1400adea5
call	0x1400ae8a0
call	0x1400ae8a0
test	al, al
jne	0x1400adea5
jne	0x1400adea5
mov	rcx, qword ptr [rdi + 0xe8]
test	rcx, rcx
je	0x1400adea5
je	0x1400adea5
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x30]
call	qword ptr [rax + 0x30]
cmp	eax, -1
je	0x1400ae020
je	0x1400ae020
mov	rax, rbx
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rcx, qword ptr [rsi + 0xe8]
mov	r8, rbp
mov	rdx, r13
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
mov	rdx, qword ptr [rbx]
mov	r8, qword ptr [rdx - 0x18]
add	r8, rbx
cmp	rbp, rax
je	0x1400ade64
je	0x1400ade64
mov	edx, dword ptr [r8 + 0x20]
mov	rcx, r8
or	edx, 1
call	0x1400abe20
call	0x1400abe20
mov	rax, qword ptr [rbx]
mov	r8, qword ptr [rax - 0x18]
add	r8, rbx
mov	qword ptr [r8 + 0x10], 0
jmp	0x1400ade6c
jmp	0x1400ade6c
nop	dword ptr [rax + rax]
mov	edx, dword ptr [rsi + 0x20]
test	edx, edx
jne	0x1400ade64
jne	0x1400ade64
mov	rcx, qword ptr [r8 + 0xe8]
mov	rdx, r13
mov	r8, rbp
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
cmp	rbp, rdx
je	0x1400adf4e
je	0x1400adf4e
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400abe20
call	0x1400abe20
mov	rax, qword ptr [rbx]
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
cmp	dword ptr [rsp + 0x2c], 0x20
mov	r8, rsi
jne	0x1400ade64
jne	0x1400ade64
mov	eax, dword ptr [rsi + 0x20]
test	eax, eax
jne	0x1400ade64
jne	0x1400ade64
sub	r14, rbp
cmp	byte ptr [rsi + 0xe2], 0
je	0x1400ae03a
je	0x1400ae03a
movzx	edi, word ptr [rsi + 0xe0]
jmp	0x1400adfb1
jmp	0x1400adfb1
nop	word ptr [rax + rax]
mov	word ptr [rax], di
add	rax, 2
mov	qword ptr [rcx + 0x28], rax
mov	eax, edi
cmp	ax, -1
je	0x1400ae070
je	0x1400ae070
sub	r14, 1
je	0x1400ade64
je	0x1400ade64
mov	rcx, qword ptr [rsi + 0xe8]
mov	r8, rsi
mov	rax, qword ptr [rcx + 0x28]
cmp	rax, qword ptr [rcx + 0x30]
jb	0x1400adf90
jb	0x1400adf90
mov	rax, qword ptr [rcx]
movzx	edx, di
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
mov	rdx, qword ptr [rbx]
mov	rsi, qword ptr [rdx - 0x18]
add	rsi, rbx
mov	r8, rsi
jmp	0x1400adf9d
jmp	0x1400adf9d
nop	dword ptr [rax]
mov	rcx, qword ptr [rsi + 0xf0]
test	rcx, rcx
je	0x1400ae083
je	0x1400ae083
mov	rax, qword ptr [rcx]
mov	edx, 0x20
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	word ptr [rsi + 0xe0], ax
mov	r12d, eax
mov	rax, qword ptr [rbx]
mov	byte ptr [rsi + 0xe2], 1
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
jmp	0x1400ade0f
jmp	0x1400ade0f
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rsi]
add	rsi, qword ptr [rax - 0x18]
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x1400adea5
jmp	0x1400adea5
mov	rcx, qword ptr [rsi + 0xf0]
test	rcx, rcx
je	0x1400ae088
je	0x1400ae088
mov	rax, qword ptr [rcx]
mov	edx, 0x20
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	word ptr [rsi + 0xe0], ax
mov	edi, eax
mov	rax, qword ptr [rbx]
mov	byte ptr [rsi + 0xe2], 1
mov	rsi, qword ptr [rax - 0x18]
add	rsi, rbx
jmp	0x1400adfb1
jmp	0x1400adfb1
mov	edx, dword ptr [rsi + 0x20]
mov	rcx, rsi
or	edx, 1
call	0x1400abe20
call	0x1400abe20
jmp	0x1400adef1
jmp	0x1400adef1
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
call	0x1400b3a30
sub	rdx, 1
mov	rcx, rax
jne	0x1400ae0b4
jne	0x1400ae0b4
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400ade6c
jmp	0x1400ade6c
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, r15
call	0x14008a720
call	0x14008a720
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
jmp	0x1400ae0df
jmp	0x1400ae0df
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400ae0df
jmp	0x1400ae0df
nop	
nop	
sub	rsp, 0x38
lea	r8, [rsp + 0x2f]
call	0x1400ae8e0
call	0x1400ae8e0
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
lea	r8, [rsp + 0x2f]
call	0x1400ae9f0
call	0x1400ae9f0
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbp, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x27]
mov	rbx, r8
mov	rdx, rbp
xor	r8d, r8d
call	0x140088bb0
call	0x140088bb0
movzx	r15d, byte ptr [rsp + 0x27]
mov	rax, qword ptr [rbp]
test	r15b, r15b
je	0x1400ae300
je	0x1400ae300
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbp
mov	r13, qword ptr [rdx + 0x10]
test	r13, r13
jle	0x1400ae328
jle	0x1400ae328
cmp	rbx, r13
jle	0x1400ae328
jle	0x1400ae328
lea	rbx, [rsp + 0x28]
add	rdx, 0xd0
mov	rcx, rbx
call	0x14009be20
call	0x14009be20
mov	rcx, qword ptr [rip + 0x1072c]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x28]
mov	rax, qword ptr [rax + 8]
mov	r12, qword ptr [rax + rdx*8]
test	r12, r12
je	0x1400ae3e3
je	0x1400ae3e3
mov	rcx, rbx
call	0x14009bf30
call	0x14009bf30
mov	rax, qword ptr [rbp]
mov	rax, qword ptr [rax - 0x18]
mov	rbx, qword ptr [rbp + rax + 0xe8]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400ae3a8
jae	0x1400ae3a8
movzx	r14d, word ptr [rax]
sub	r13, 1
test	r13, r13
jle	0x1400ae3b9
jle	0x1400ae3b9
xor	edi, edi
cmp	r14w, -1
jne	0x1400ae253
jne	0x1400ae253
jmp	0x1400ae3c2
jmp	0x1400ae3c2
nop	word ptr [rax + rax]
movzx	eax, word ptr [rdx]
add	rdx, 2
mov	qword ptr [rbx + 0x10], rdx
cmp	ax, -1
je	0x1400ae298
je	0x1400ae298
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400ae330
jae	0x1400ae330
movzx	r14d, word ptr [rax]
cmp	rdi, r13
je	0x1400ae348
je	0x1400ae348
cmp	r14w, -1
je	0x1400ae298
je	0x1400ae298
mov	rax, qword ptr [r12]
movzx	r8d, r14w
mov	edx, 0x20
mov	rcx, r12
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
test	al, al
jne	0x1400ae378
jne	0x1400ae378
add	rsi, 2
mov	rdx, qword ptr [rbx + 0x10]
add	rdi, 1
mov	word ptr [rsi - 2], r14w
cmp	rdx, qword ptr [rbx + 0x18]
jb	0x1400ae220
jb	0x1400ae220
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	ax, -1
jne	0x1400ae231
jne	0x1400ae231
nop	dword ptr [rax]
xor	eax, eax
mov	word ptr [rsi], ax
mov	rax, qword ptr [rbp]
mov	rdx, qword ptr [rax - 0x18]
mov	qword ptr [rbp + rdx + 0x10], 0
cmp	rdi, r13
jge	0x1400ae360
jge	0x1400ae360
mov	edx, 2
jmp	0x1400ae305
jmp	0x1400ae305
mov	rcx, rax
xor	edi, edi
mov	rax, rdx
sub	rax, 1
je	0x1400ae40e
je	0x1400ae40e
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbp]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbp
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
test	rdi, rdi
jne	0x1400ae360
jne	0x1400ae360
mov	rax, qword ptr [rbp]
nop	dword ptr [rax + rax]
mov	edx, 4
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbp
or	edx, dword ptr [rcx + 0x20]
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
jmp	0x1400abe20
jmp	0x1400abe20
nop	dword ptr [rax]
mov	r13, rbx
jmp	0x1400ae199
jmp	0x1400ae199
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r14d, eax
cmp	rdi, r13
jne	0x1400ae24c
jne	0x1400ae24c
nop	dword ptr [rax]
mov	rax, qword ptr [rbp]
xor	r9d, r9d
mov	word ptr [rsi], r9w
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbp + rax + 0x10], 0
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbp]
xor	r8d, r8d
mov	word ptr [rsi], r8w
mov	rdx, qword ptr [rax - 0x18]
mov	qword ptr [rbp + rdx + 0x10], 0
test	rdi, rdi
jne	0x1400ae360
jne	0x1400ae360
xor	edx, edx
movzx	edx, dl
add	edx, edx
or	edx, 4
jmp	0x1400ae305
jmp	0x1400ae305
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	r14d, eax
jmp	0x1400ae1fc
jmp	0x1400ae1fc
cmp	r14w, -1
sete	r15b
test	r13, r13
mov	rax, qword ptr [rbp]
setg	dl
xor	ecx, ecx
mov	word ptr [rsi], cx
mov	rcx, qword ptr [rax - 0x18]
and	edx, r15d
mov	qword ptr [rbp + rcx + 0x10], 0
jmp	0x1400ae397
jmp	0x1400ae397
call	0x1400b3a30
call	0x1400b3a30
mov	rcx, rax
mov	rax, rdx
jmp	0x1400ae2c6
jmp	0x1400ae2c6
mov	rsi, rax
mov	rdi, rdx
mov	rcx, rbx
call	0x14009bf30
call	0x14009bf30
mov	rax, rdi
mov	rcx, rsi
xor	edi, edi
jmp	0x1400ae2c6
jmp	0x1400ae2c6
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbp]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbp
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	r15
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
mov	rbp, rcx
mov	rdi, rdx
lea	rcx, [rsp + 0x37]
mov	rbx, r8
mov	rdx, rbp
xor	r8d, r8d
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x37], 0
mov	rax, qword ptr [rbp]
je	0x1400ae608
je	0x1400ae608
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rbp
mov	r12, qword ptr [rdx + 0x10]
test	r12, r12
jle	0x1400ae630
jle	0x1400ae630
cmp	rbx, r12
jle	0x1400ae630
jle	0x1400ae630
lea	rbx, [rsp + 0x38]
add	rdx, 0xd0
mov	rcx, rbx
call	0x14009be20
call	0x14009be20
mov	rcx, qword ptr [rip + 0x10410]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x38]
mov	rax, qword ptr [rax + 8]
mov	r13, qword ptr [rax + rdx*8]
test	r13, r13
je	0x1400ae7d9
je	0x1400ae7d9
mov	rcx, rbx
call	0x14009bf30
call	0x14009bf30
mov	rax, qword ptr [rbp]
mov	rax, qword ptr [rax - 0x18]
mov	rbx, qword ptr [rbp + rax + 0xe8]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400ae7b6
jae	0x1400ae7b6
lea	r14, [r12 - 1]
movzx	eax, byte ptr [rax]
test	r14, r14
jle	0x1400ae79b
jle	0x1400ae79b
xor	esi, esi
nop	word ptr [rax + rax]
mov	rcx, qword ptr [r13 + 0x30]
movzx	edx, al
test	byte ptr [rcx + rdx*2], 0x20
jne	0x1400ae68c
jne	0x1400ae68c
mov	r10, qword ptr [rbx + 0x18]
mov	r9, qword ptr [rbx + 0x10]
mov	rdx, r12
sub	rdx, rsi
mov	r8, r10
sub	rdx, 1
sub	r8, r9
cmp	rdx, r8
cmovg	rdx, r8
cmp	rdx, 1
jle	0x1400ae640
jle	0x1400ae640
add	rdx, r9
lea	rax, [r9 + 1]
cmp	rax, rdx
jb	0x1400ae579
jb	0x1400ae579
jmp	0x1400ae6b3
jmp	0x1400ae6b3
nop	dword ptr [rax + rax]
add	rax, 1
cmp	rdx, rax
je	0x1400ae584
je	0x1400ae584
movzx	r8d, byte ptr [rax]
test	byte ptr [rcx + r8*2], 0x20
je	0x1400ae570
je	0x1400ae570
mov	r15, rax
sub	r15, r9
mov	r8, r15
test	r15, r15
jne	0x1400ae6c0
jne	0x1400ae6c0
mov	qword ptr [rbx + 0x10], rax
add	rdi, r8
add	rsi, r15
cmp	rax, r10
jae	0x1400ae6f3
jae	0x1400ae6f3
movzx	eax, byte ptr [rax]
cmp	rsi, r14
jl	0x1400ae520
jl	0x1400ae520
mov	byte ptr [rdi], 0
mov	rax, qword ptr [rbp]
mov	rax, qword ptr [rax - 0x18]
mov	qword ptr [rbp + rax + 0x10], 0
jmp	0x1400ae61d
jmp	0x1400ae61d
mov	rcx, rax
xor	esi, esi
mov	rax, rdx
sub	rax, 1
je	0x1400ae804
je	0x1400ae804
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbp]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbp
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
test	rsi, rsi
jne	0x1400ae61d
jne	0x1400ae61d
mov	rax, qword ptr [rbp]
nop	dword ptr [rax]
mov	edx, 4
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbp
or	edx, dword ptr [rcx + 0x20]
call	0x1400ab490
call	0x1400ab490
nop	
add	rsp, 0x48
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
pop	r15
ret	
ret	
nop	
mov	r12, rbx
jmp	0x1400ae4a5
jmp	0x1400ae4a5
nop	dword ptr [rax + rax]
mov	byte ptr [rdi], al
mov	rax, qword ptr [rbx + 0x10]
lea	r15, [rdi + 1]
add	rsi, 1
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jae	0x1400ae738
jae	0x1400ae738
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x1400ae757
jae	0x1400ae757
movzx	eax, byte ptr [rax]
mov	rdi, r15
cmp	rsi, r14
jge	0x1400ae5b5
jge	0x1400ae5b5
mov	rcx, qword ptr [r13 + 0x30]
movzx	edx, al
test	byte ptr [rcx + rdx*2], 0x20
je	0x1400ae531
je	0x1400ae531
mov	byte ptr [rdi], 0
mov	rax, qword ptr [rbp]
mov	rdx, qword ptr [rax - 0x18]
mov	qword ptr [rbp + rdx + 0x10], 0
test	rsi, rsi
jne	0x1400ae61d
jne	0x1400ae61d
xor	edx, edx
or	edx, 4
jmp	0x1400ae60d
jmp	0x1400ae60d
mov	r8d, 1
mov	r15d, 1
nop	
mov	rcx, rdi
mov	rdx, r9
mov	qword ptr [rsp + 0x28], r8
add	rsi, r15
call	0x140015998
call	0x140015998
mov	r8, qword ptr [rsp + 0x28]
mov	rax, qword ptr [rbx + 0x10]
mov	r10, qword ptr [rbx + 0x18]
add	rax, r8
add	rdi, r8
mov	qword ptr [rbx + 0x10], rax
cmp	rax, r10
jb	0x1400ae5a9
jb	0x1400ae5a9
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	rsi, r14
jge	0x1400ae5b5
jge	0x1400ae5b5
cmp	eax, -1
jne	0x1400ae520
jne	0x1400ae520
mov	byte ptr [rdi], 0
mov	rax, qword ptr [rbp]
mov	rdx, qword ptr [rax - 0x18]
mov	qword ptr [rbp + rdx + 0x10], 0
mov	edx, 2
test	rsi, rsi
jne	0x1400ae60d
jne	0x1400ae60d
or	edx, 4
jmp	0x1400ae60d
jmp	0x1400ae60d
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	eax, -1
je	0x1400ae765
je	0x1400ae765
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jb	0x1400ae66c
jb	0x1400ae66c
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
mov	rdi, r15
jmp	0x1400ae6fc
jmp	0x1400ae6fc
mov	byte ptr [rdi + 1], 0
mov	rax, qword ptr [rbp]
mov	rdx, qword ptr [rax - 0x18]
mov	qword ptr [rbp + rdx + 0x10], 0
mov	edx, 2
test	rsi, rsi
je	0x1400ae6ab
je	0x1400ae6ab
cmp	rsi, r14
jge	0x1400ae61d
jge	0x1400ae61d
mov	edx, 2
jmp	0x1400ae60d
jmp	0x1400ae60d
xor	edx, edx
mov	byte ptr [rdi], 0
mov	rax, qword ptr [rbp]
mov	rcx, qword ptr [rax - 0x18]
mov	qword ptr [rbp + rcx + 0x10], 0
jmp	0x1400ae6ab
jmp	0x1400ae6ab
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
lea	r14, [r12 - 1]
test	r14, r14
jle	0x1400ae79b
jle	0x1400ae79b
cmp	eax, -1
jne	0x1400ae515
jne	0x1400ae515
mov	edx, 2
jmp	0x1400ae79d
jmp	0x1400ae79d
call	0x1400b3a30
call	0x1400b3a30
mov	rcx, rax
mov	rax, rdx
jmp	0x1400ae5d3
jmp	0x1400ae5d3
mov	rsi, rax
mov	rdi, rdx
mov	rcx, rbx
call	0x14009bf30
call	0x14009bf30
mov	rcx, rsi
mov	rax, rdi
xor	esi, esi
jmp	0x1400ae5d3
jmp	0x1400ae5d3
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbp]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbp
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	r9, qword ptr [r8 + 8]
mov	r8, qword ptr [r8]
call	0x1400aeba0
call	0x1400aeba0
nop	
add	rsp, 0x28
ret	
ret	
add	rdx, 1
mov	rcx, rax
jne	0x1400ae874
jne	0x1400ae874
call	0x1400b2e40
call	0x1400b2e40
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	r8, qword ptr [r8]
mov	r9, qword ptr [r8 - 0x18]
jmp	0x1400aeba0
jmp	0x1400aeba0
nop	
nop	
nop	
nop	
lea	rax, [rip + 0x75c9]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
call	0x1400b3070
call	0x1400b3070
mov	eax, dword ptr [rax + 8]
test	eax, eax
setne	al
add	rsp, 0x28
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
call	0x1400b3070
call	0x1400b3070
mov	eax, dword ptr [rax + 8]
add	rsp, 0x28
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, qword ptr [rcx + 0x18]
mov	r12, rdx
mov	rdx, qword ptr [rcx + 0x10]
mov	byte ptr [r8], 1
mov	rsi, rcx
mov	rbp, r8
cmp	rdx, rbx
jae	0x1400ae9c8
jae	0x1400ae9c8
movzx	eax, byte ptr [rdx]
xor	edi, edi
jmp	0x1400ae93f
jmp	0x1400ae93f
nop	
mov	rax, qword ptr [r12]
mov	r8, rbx
mov	rcx, r12
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
add	qword ptr [rsi + 0x10], rax
add	rdi, rax
cmp	rbx, rax
jg	0x1400ae998
jg	0x1400ae998
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
je	0x1400ae99c
je	0x1400ae99c
mov	rbx, qword ptr [rsi + 0x18]
mov	rdx, qword ptr [rsi + 0x10]
sub	rbx, rdx
cmp	rbx, 1
jg	0x1400ae910
jg	0x1400ae910
mov	rdx, qword ptr [r12 + 0x28]
cmp	rdx, qword ptr [r12 + 0x30]
jae	0x1400ae980
jae	0x1400ae980
mov	byte ptr [rdx], al
add	qword ptr [r12 + 0x28], 1
mov	rax, qword ptr [rsi + 0x10]
mov	rbx, qword ptr [rsi + 0x18]
add	rdi, 1
cmp	rax, rbx
jae	0x1400ae9b0
jae	0x1400ae9b0
add	rax, 1
mov	qword ptr [rsi + 0x10], rax
cmp	rax, rbx
jae	0x1400ae929
jae	0x1400ae929
movzx	eax, byte ptr [rax]
jmp	0x1400ae93b
jmp	0x1400ae93b
nop	
movzx	edx, al
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	eax, -1
jne	0x1400ae95c
jne	0x1400ae95c
nop	word ptr [rax + rax]
mov	byte ptr [rbp], 0
mov	rax, rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rsi]
mov	rcx, rsi
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	eax, -1
je	0x1400ae99c
je	0x1400ae99c
mov	rax, qword ptr [rsi + 0x10]
mov	rbx, qword ptr [rsi + 0x18]
jmp	0x1400ae975
jmp	0x1400ae975
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
je	0x1400ae9e0
je	0x1400ae9e0
mov	rbx, qword ptr [rsi + 0x18]
mov	rdx, qword ptr [rsi + 0x10]
jmp	0x1400ae90b
jmp	0x1400ae90b
xor	edi, edi
jmp	0x1400ae99c
jmp	0x1400ae99c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx + 0x10]
mov	byte ptr [r8], 1
mov	rbx, rcx
mov	r12, rdx
mov	rbp, r8
cmp	rax, qword ptr [rcx + 0x18]
jae	0x1400aeafb
jae	0x1400aeafb
movzx	eax, word ptr [rax]
xor	edi, edi
cmp	ax, -1
jne	0x1400aea5a
jne	0x1400aea5a
jmp	0x1400aeab4
jmp	0x1400aeab4
nop	dword ptr [rax]
mov	rsi, r8
mov	rax, qword ptr [r12]
mov	rcx, r12
sar	rsi, 1
mov	r8, rsi
call	qword ptr [rax + 0x60]
call	qword ptr [rax + 0x60]
lea	rdx, [rax + rax]
add	rdi, rax
add	qword ptr [rbx + 0x10], rdx
cmp	rsi, rax
jg	0x1400aeab0
jg	0x1400aeab0
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	ax, -1
je	0x1400aeab4
je	0x1400aeab4
mov	rcx, qword ptr [rbx + 0x18]
mov	rdx, qword ptr [rbx + 0x10]
mov	r8, rcx
sub	r8, rdx
cmp	r8, 2
jg	0x1400aea28
jg	0x1400aea28
mov	r8, qword ptr [r12 + 0x28]
cmp	r8, qword ptr [r12 + 0x30]
jae	0x1400aeac8
jae	0x1400aeac8
mov	word ptr [r8], ax
add	r8, 2
add	rdi, 1
mov	qword ptr [r12 + 0x28], r8
cmp	rdx, rcx
jae	0x1400aeaf0
jae	0x1400aeaf0
movzx	eax, word ptr [rdx]
add	rdx, 2
mov	qword ptr [rbx + 0x10], rdx
cmp	ax, -1
je	0x1400aeab4
je	0x1400aeab4
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400aea4b
jae	0x1400aea4b
movzx	eax, word ptr [rax]
jmp	0x1400aea54
jmp	0x1400aea54
mov	byte ptr [rbp], 0
mov	rax, rdi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
movzx	edx, ax
mov	rax, qword ptr [r12]
mov	rcx, r12
call	qword ptr [rax + 0x68]
call	qword ptr [rax + 0x68]
cmp	ax, -1
je	0x1400aeab0
je	0x1400aeab0
mov	rdx, qword ptr [rbx + 0x10]
mov	rcx, qword ptr [rbx + 0x18]
add	rdi, 1
cmp	rdx, rcx
jb	0x1400aea90
jb	0x1400aea90
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x1400aea9b
jmp	0x1400aea9b
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
jmp	0x1400aea18
jmp	0x1400aea18
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
lea	rdx, [rip - 0x493c]
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax]
mov	rbx, rcx
cmp	rax, rdx
jne	0x1400aeb90
jne	0x1400aeb90
lea	rax, [rip + 0x176bf]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0xfaf5]
mov	rcx, qword ptr [rcx + 8]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400aeb60
jne	0x1400aeb60
mov	eax, dword ptr [rcx - 8]
lea	edx, [rax - 1]
mov	dword ptr [rcx - 8], edx
test	eax, eax
jle	0x1400aeb6e
jle	0x1400aeb6e
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	
mov	eax, 0xffffffff
lock xadd	dword ptr [rcx - 8], eax
test	eax, eax
jg	0x1400aeb52
jg	0x1400aeb52
sub	rcx, 0x18
lea	rdx, [rsp + 0x2f]
call	0x140072480
call	0x140072480
mov	rcx, rbx
add	rsp, 0x30
pop	rbx
jmp	0x1400ac440
jmp	0x1400ac440
nop	dword ptr [rax]
add	rsp, 0x30
pop	rbx
jmp	rax
jmp	rax
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	r9, 1
sub	rdx, 1
cmp	rdx, r9
cmova	rdx, r9
test	rdx, rdx
je	0x1400aec18
je	0x1400aec18
xor	r10d, r10d
nop	word ptr [rax + rax]
movzx	eax, byte ptr [rcx + r10]
cmp	byte ptr [r8 + r9], al
sete	al
add	r10, 1
sub	r9, 1
cmp	r10, rdx
jae	0x1400aebdd
jae	0x1400aebdd
test	al, al
jne	0x1400aebc0
jne	0x1400aebc0
movzx	edx, byte ptr [rcx + rdx]
test	r9, r9
jne	0x1400aebfd
jne	0x1400aebfd
jmp	0x1400aec01
jmp	0x1400aec01
nop	dword ptr [rax + rax]
cmp	byte ptr [r8 + r9], dl
sete	al
sub	r9, 1
je	0x1400aec01
je	0x1400aec01
test	al, al
jne	0x1400aebf0
jne	0x1400aebf0
lea	ecx, [rdx - 1]
cmp	cl, 0x7d
ja	0x1400aec11
ja	0x1400aec11
cmp	byte ptr [r8], dl
setle	dl
and	eax, edx
ret	
ret	
nop	word ptr [rax + rax]
mov	eax, 1
jmp	0x1400aebdd
jmp	0x1400aebdd
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbp, rcx
mov	rdi, rdx
test	rdx, rdx
je	0x1400aecf5
je	0x1400aecf5
mov	rcx, rdx
call	0x140015a08
call	0x140015a08
lea	r8, [rsp + 0x26]
xor	edx, edx
mov	rcx, rax
mov	rsi, rax
call	0x140072600
call	0x140072600
mov	rbx, rax
lea	rcx, [rax + 0x18]
cmp	rsi, 1
je	0x1400aecc0
je	0x1400aecc0
test	rsi, rsi
jne	0x1400aecb0
jne	0x1400aecb0
mov	dword ptr [rbx + 0x10], 0
lea	rdx, [rsp + 0x28]
mov	qword ptr [rbx], rsi
mov	byte ptr [rbx + rsi + 0x18], 0
mov	qword ptr [rsp + 0x28], rcx
mov	rcx, rbp
call	0x1400aa0d0
call	0x1400aa0d0
mov	rax, qword ptr [rip + 0xf9a5]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400aecd0
jne	0x1400aecd0
mov	eax, dword ptr [rbx + 0x10]
lea	edx, [rax - 1]
mov	dword ptr [rbx + 0x10], edx
test	eax, eax
jle	0x1400aecde
jle	0x1400aecde
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	word ptr [rax + rax]
mov	r8, rsi
mov	rdx, rdi
call	0x140015998
call	0x140015998
mov	rcx, rax
jmp	0x1400aec63
jmp	0x1400aec63
movzx	eax, byte ptr [rdi]
mov	byte ptr [rbx + 0x18], al
jmp	0x1400aec63
jmp	0x1400aec63
nop	dword ptr [rax + rax]
mov	eax, 0xffffffff
lock xadd	dword ptr [rbx + 0x10], eax
test	eax, eax
jg	0x1400aec9e
jg	0x1400aec9e
lea	rdx, [rsp + 0x27]
mov	rcx, rbx
call	0x140072480
call	0x140072480
nop	
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
lea	rcx, [rip + 0xeea4]
call	0x1400b3ab0
call	0x1400b3ab0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x12339]
jmp	0x140068780
jmp	0x140068780
nop	
nop	
nop	
nop	
push	rbp
push	rsi
push	rbx
sub	rsp, 0x30
lea	rbp, [rsp + 0x30]
mov	qword ptr [rbp + 0x28], rdx
mov	rbx, rcx
mov	qword ptr [rbp + 0x30], r8
mov	qword ptr [rbp + 0x38], r9
call	0x140015a08
call	0x140015a08
lea	rdx, [rax + 0x200]
add	rax, 0x20f
and	rax, 0xfffffffffffffff0
call	0x14000c150
call	0x14000c150
sub	rsp, rax
lea	r9, [rbp + 0x28]
mov	r8, rbx
lea	rsi, [rsp + 0x20]
mov	qword ptr [rbp - 8], r9
mov	rcx, rsi
call	0x140017650
call	0x140017650
mov	ecx, 0x10
call	0x1400b2d10
call	0x1400b2d10
mov	rdx, rsi
mov	rcx, rax
mov	rbx, rax
call	0x140079730
call	0x140079730
lea	r8, [rip - 0x354e0]
lea	rdx, [rip + 0x125c9]
mov	rcx, rbx
call	0x1400b3590
call	0x1400b3590
mov	rsi, rax
mov	rcx, rbx
call	0x1400b3020
call	0x1400b3020
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	r8d, 1
mov	rsi, rcx
lea	rcx, [rsp + 0x27]
mov	rdx, rsi
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x27], 0
jne	0x1400aedf8
jne	0x1400aedf8
mov	rax, rsi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
lea	rbx, [rsp + 0x28]
mov	rcx, rbx
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rsi
add	rdx, 0xd0
call	0x14009be20
call	0x14009be20
mov	rcx, qword ptr [rip + 0xfab3]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x28]
mov	rax, qword ptr [rax + 8]
mov	rdi, qword ptr [rax + rdx*8]
test	rdi, rdi
je	0x1400aeedf
je	0x1400aeedf
mov	rcx, rbx
call	0x14009bf30
call	0x14009bf30
mov	rax, qword ptr [rsi]
mov	rax, qword ptr [rax - 0x18]
mov	rbx, qword ptr [rsi + rax + 0xe8]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jb	0x1400aee6d
jb	0x1400aee6d
jmp	0x1400aeeb0
jmp	0x1400aeeb0
nop	
add	rax, 1
mov	qword ptr [rbx + 0x10], rax
cmp	rax, rdx
jae	0x1400aeeb0
jae	0x1400aeeb0
movzx	eax, byte ptr [rax]
mov	rdx, qword ptr [rdi + 0x30]
movzx	eax, al
test	byte ptr [rdx + rax*2], 0x20
je	0x1400aede5
je	0x1400aede5
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jb	0x1400aee60
jb	0x1400aee60
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	eax, -1
je	0x1400aeebe
je	0x1400aeebe
mov	rax, qword ptr [rbx + 0x10]
mov	rdx, qword ptr [rbx + 0x18]
cmp	rax, rdx
jb	0x1400aee6d
jb	0x1400aee6d
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
cmp	eax, -1
jne	0x1400aee70
jne	0x1400aee70
mov	rax, qword ptr [rsi]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
mov	edx, dword ptr [rcx + 0x20]
or	edx, 2
call	0x1400ab490
call	0x1400ab490
mov	rax, rsi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
mov	rcx, rax
mov	rax, rdx
sub	rax, 1
jne	0x1400aef24
jne	0x1400aef24
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	edx, 1
add	rsi, qword ptr [rax - 0x18]
mov	rcx, rsi
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
mov	rdi, rax
mov	rbp, rdx
mov	rcx, rbx
call	0x14009bf30
call	0x14009bf30
mov	rcx, rdi
mov	rax, rbp
jmp	0x1400aeeea
jmp	0x1400aeeea
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400aede5
jmp	0x1400aede5
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	r8d, 1
mov	rsi, rcx
lea	rcx, [rsp + 0x27]
mov	rdx, rsi
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x27], 0
jne	0x1400aefa8
jne	0x1400aefa8
mov	rax, rsi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rsi]
lea	rbx, [rsp + 0x28]
mov	rcx, rbx
mov	rdx, qword ptr [rax - 0x18]
add	rdx, rsi
add	rdx, 0xd0
call	0x14009be20
call	0x14009be20
mov	rcx, qword ptr [rip + 0xf913]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rsp + 0x28]
mov	rax, qword ptr [rax + 8]
mov	rdi, qword ptr [rax + rdx*8]
test	rdi, rdi
je	0x1400af09f
je	0x1400af09f
mov	rcx, rbx
call	0x14009bf30
call	0x14009bf30
mov	rax, qword ptr [rsi]
mov	rax, qword ptr [rax - 0x18]
mov	rbx, qword ptr [rsi + rax + 0xe8]
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jb	0x1400af033
jb	0x1400af033
jmp	0x1400af090
jmp	0x1400af090
nop	dword ptr [rax]
movzx	eax, word ptr [rdx]
add	rdx, 2
mov	qword ptr [rbx + 0x10], rdx
cmp	ax, -1
je	0x1400af06d
je	0x1400af06d
mov	rax, qword ptr [rbx + 0x10]
cmp	rax, qword ptr [rbx + 0x18]
jae	0x1400af090
jae	0x1400af090
movzx	r8d, word ptr [rax]
cmp	r8w, -1
je	0x1400af06d
je	0x1400af06d
mov	rax, qword ptr [rdi]
mov	edx, 0x20
mov	rcx, rdi
call	qword ptr [rax + 0x10]
call	qword ptr [rax + 0x10]
test	al, al
je	0x1400aef95
je	0x1400aef95
mov	rdx, qword ptr [rbx + 0x10]
cmp	rdx, qword ptr [rbx + 0x18]
jb	0x1400af018
jb	0x1400af018
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	ax, -1
jne	0x1400af029
jne	0x1400af029
mov	rax, qword ptr [rsi]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
mov	edx, dword ptr [rcx + 0x20]
or	edx, 2
call	0x1400abe20
call	0x1400abe20
mov	rax, rsi
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	
mov	rax, qword ptr [rbx]
mov	rcx, rbx
call	qword ptr [rax + 0x48]
call	qword ptr [rax + 0x48]
movzx	r8d, ax
jmp	0x1400af037
jmp	0x1400af037
call	0x1400b3a30
call	0x1400b3a30
mov	rcx, rax
mov	rax, rdx
sub	rax, 1
jne	0x1400af0e4
jne	0x1400af0e4
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	edx, 1
add	rsi, qword ptr [rax - 0x18]
mov	rcx, rsi
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
mov	rdi, rax
mov	rbp, rdx
mov	rcx, rbx
call	0x14009bf30
call	0x14009bf30
mov	rcx, rdi
mov	rax, rbp
jmp	0x1400af0aa
jmp	0x1400af0aa
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rsi]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400aef95
jmp	0x1400aef95
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
mov	rsi, qword ptr [rcx + rax + 0xf0]
mov	rbx, rcx
test	rsi, rsi
je	0x1400af19a
je	0x1400af19a
cmp	byte ptr [rsi + 0x38], 0
je	0x1400af170
je	0x1400af170
movsx	edx, byte ptr [rsi + 0x43]
mov	rcx, rbx
call	0x14006fb30
call	0x14006fb30
mov	rcx, rax
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x14006fd10
jmp	0x14006fd10
nop	dword ptr [rax]
mov	rcx, rsi
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [rsi]
mov	edx, 0xa
lea	rcx, [rip - 0x8cce7]
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rcx
je	0x1400af157
je	0x1400af157
mov	rcx, rsi
call	rax
call	rax
movsx	edx, al
jmp	0x1400af157
jmp	0x1400af157
call	0x1400b3a30
call	0x1400b3a30
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + rax + 0xf0]
test	rcx, rcx
je	0x1400af1df
je	0x1400af1df
mov	rax, qword ptr [rcx]
mov	edx, 0xa
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rcx, rbx
movzx	edx, ax
call	0x140089ef0
call	0x140089ef0
mov	rcx, rax
add	rsp, 0x20
pop	rbx
jmp	0x14008a0e0
jmp	0x14008a0e0
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	edx, edx
jmp	0x14006fb30
jmp	0x14006fb30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	edx, edx
jmp	0x140089ef0
jmp	0x140089ef0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14006fd10
jmp	0x14006fd10
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x14008a0e0
jmp	0x14008a0e0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, ecx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	eax, ecx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x8141]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x8131]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x8121]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x8101]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x80e1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x80c1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x80a1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x8081]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x8061]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x8041]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x8021]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x8001]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7fe1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7fc1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7b11]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7b01]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7af1]
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x1400af5a0
jae	0x1400af5a0
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x1400af5a0
je	0x1400af5a0
xor	r9d, r9d
lea	r8, [rip + 0x11ccc]
lea	rdx, [rip + 0x11615]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
xor	eax, eax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7aa1]
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x1400af600
jae	0x1400af600
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x1400af600
je	0x1400af600
xor	r9d, r9d
lea	r8, [rip + 0x11c8c]
lea	rdx, [rip + 0x115b5]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
xor	eax, eax
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0xf2b1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0xf291]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0xf401]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0xf3e1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7e21]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7e01]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7de1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7dc1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7da1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7d81]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7d81]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7d61]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7d41]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7d21]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7d01]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7ce1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7cc1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7ca1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7c81]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7c61]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7c41]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7c21]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
cmp	qword ptr [rax + rdx*8], 0
setne	al
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0xec15]
mov	rcx, qword ptr [rax]
call	0x140016070
call	0x140016070
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7941]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400afa7d
je	0x1400afa7d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7911]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400afabd
je	0x1400afabd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x78e1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400afafd
je	0x1400afafd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x78b1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400afb3d
je	0x1400afb3d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7881]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400afb7d
je	0x1400afb7d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7851]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400afbbd
je	0x1400afbbd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7821]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400afbfd
je	0x1400afbfd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x77f1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400afc3d
je	0x1400afc3d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x77c1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400afc7d
je	0x1400afc7d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7791]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400afcbd
je	0x1400afcbd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7761]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400afcfd
je	0x1400afcfd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7731]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400afd3d
je	0x1400afd3d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7701]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400afd7d
je	0x1400afd7d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x76d1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400afdbd
je	0x1400afdbd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x76a1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400afdfd
je	0x1400afdfd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7671]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400afe3d
je	0x1400afe3d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x71b1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400afe7d
je	0x1400afe7d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7181]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400afebd
je	0x1400afebd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7151]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400afefd
je	0x1400afefd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7121]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400aff3d
je	0x1400aff3d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x70f1]
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x1400aff9b
jae	0x1400aff9b
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x1400aff9b
je	0x1400aff9b
xor	r9d, r9d
lea	r8, [rip + 0x112cc]
lea	rdx, [rip + 0x10c15]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x1400aff9b
je	0x1400aff9b
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x70a1]
call	0x140022a70
call	0x140022a70
mov	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rdx + 8]
cmp	rax, qword ptr [rdx + 0x10]
jae	0x1400afffb
jae	0x1400afffb
mov	rcx, qword ptr [rcx + rax*8]
test	rcx, rcx
je	0x1400afffb
je	0x1400afffb
xor	r9d, r9d
lea	r8, [rip + 0x1128c]
lea	rdx, [rip + 0x10bb5]
call	0x1400b35e0
call	0x1400b35e0
test	rax, rax
je	0x1400afffb
je	0x1400afffb
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0xe8b1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b003d
je	0x1400b003d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0xe881]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b007d
je	0x1400b007d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0xe9e1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b00bd
je	0x1400b00bd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rcx, qword ptr [rip + 0xe9b1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b00fd
je	0x1400b00fd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x73e1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b013d
je	0x1400b013d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x73b1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b017d
je	0x1400b017d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7381]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b01bd
je	0x1400b01bd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7351]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b01fd
je	0x1400b01fd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7321]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b023d
je	0x1400b023d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x72f1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b027d
je	0x1400b027d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x72e1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b02bd
je	0x1400b02bd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x72b1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b02fd
je	0x1400b02fd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7281]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b033d
je	0x1400b033d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7251]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b037d
je	0x1400b037d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7221]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b03bd
je	0x1400b03bd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x71f1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b03fd
je	0x1400b03fd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x71c1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b043d
je	0x1400b043d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7191]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b047d
je	0x1400b047d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7161]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b04bd
je	0x1400b04bd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7131]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b04fd
je	0x1400b04fd
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x7101]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b053d
je	0x1400b053d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
lea	rcx, [rip + 0x70d1]
call	0x140022a70
call	0x140022a70
mov	rdx, rax
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax + 8]
mov	rax, qword ptr [rax + rdx*8]
test	rax, rax
je	0x1400b057d
je	0x1400b057d
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rbx, rdx
test	rdx, rdx
je	0x1400b05c8
je	0x1400b05c8
mov	rcx, rdx
call	0x140015a08
call	0x140015a08
mov	rdx, rbx
mov	rcx, rsi
mov	r8, rax
call	0x1400ad970
call	0x1400ad970
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rbx, rdx
test	rdx, rdx
je	0x1400b0628
je	0x1400b0628
mov	rcx, rdx
call	0x140015a08
call	0x140015a08
mov	rdx, rbx
mov	rcx, rsi
mov	r8, rax
call	0x1400ad970
call	0x1400ad970
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rbx, rdx
test	rdx, rdx
je	0x1400b0688
je	0x1400b0688
mov	rcx, rdx
call	0x140015a08
call	0x140015a08
mov	rdx, rbx
mov	rcx, rsi
mov	r8, rax
call	0x1400ad970
call	0x1400ad970
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400ab490
call	0x1400ab490
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
cmp	qword ptr [rcx + rax + 0x10], 0
mov	byte ptr [rsp + 0x2f], dl
mov	rbx, rcx
je	0x1400b06e8
je	0x1400b06e8
lea	rdx, [rsp + 0x2f]
mov	r8d, 1
call	0x1400ad970
call	0x1400ad970
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
movsx	edx, dl
call	0x14006fb30
call	0x14006fb30
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
cmp	qword ptr [rcx + rax + 0x10], 0
mov	byte ptr [rsp + 0x38], dl
mov	rbx, rcx
je	0x1400b0738
je	0x1400b0738
lea	rdx, [rsp + 0x38]
mov	r8d, 1
call	0x1400ad970
call	0x1400ad970
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax]
movsx	edx, byte ptr [rsp + 0x38]
call	0x14006fb30
call	0x14006fb30
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
cmp	qword ptr [rcx + rax + 0x10], 0
mov	byte ptr [rsp + 0x2f], dl
mov	rbx, rcx
je	0x1400b0788
je	0x1400b0788
lea	rdx, [rsp + 0x2f]
mov	r8d, 1
call	0x1400ad970
call	0x1400ad970
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
movsx	edx, dl
call	0x14006fb30
call	0x14006fb30
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	ecx, edx
mov	rdx, qword ptr [rax]
mov	r8, qword ptr [rdx - 0x18]
add	r8, rax
or	dword ptr [r8 + 0x18], ecx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rcx]
movsxd	rdx, edx
mov	rcx, qword ptr [rcx - 0x18]
mov	qword ptr [rax + rcx + 8], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rcx]
not	edx
mov	r8, qword ptr [rcx - 0x18]
add	r8, rax
and	dword ptr [r8 + 0x18], edx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rcx]
movsxd	rdx, edx
mov	rcx, qword ptr [rcx - 0x18]
mov	qword ptr [rax + rcx + 0x10], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	r8d, r8d
mov	rax, rcx
mov	rcx, qword ptr [rcx]
sub	edx, 8
mov	r9, qword ptr [rcx - 0x18]
add	r9, rax
mov	rcx, r9
cmp	edx, 8
ja	0x1400b0846
ja	0x1400b0846
lea	r8, [rip + 0xeb5e]
mov	r8d, dword ptr [r8 + rdx*4]
mov	edx, dword ptr [rcx + 0x18]
and	edx, 0xffffffb5
or	edx, r8d
mov	dword ptr [rcx + 0x18], edx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rcx
mov	rbx, rcx
mov	esi, edx
cmp	byte ptr [rdi + 0xe1], 0
je	0x1400b0898
je	0x1400b0898
mov	rax, rbx
mov	byte ptr [rdi + 0xe0], sil
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	rbp, qword ptr [rdi + 0xf0]
test	rbp, rbp
je	0x1400b08e0
je	0x1400b08e0
cmp	byte ptr [rbp + 0x38], 0
je	0x1400b08b8
je	0x1400b08b8
mov	byte ptr [rdi + 0xe1], 1
jmp	0x1400b0880
jmp	0x1400b0880
nop	dword ptr [rax + rax]
mov	rcx, rbp
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [rbp]
lea	rdx, [rip - 0x8e42b]
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rdx
je	0x1400b08aa
je	0x1400b08aa
mov	edx, 0x20
mov	rcx, rbp
call	rax
call	rax
jmp	0x1400b08aa
jmp	0x1400b08aa
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	rbx, rdx
test	rdx, rdx
je	0x1400b0928
je	0x1400b0928
mov	rcx, rdx
call	0x140015a60
call	0x140015a60
mov	rdx, rbx
mov	rcx, rsi
mov	r8, rax
call	0x1400add70
call	0x1400add70
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rcx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rsi
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400abe20
call	0x1400abe20
mov	rax, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rdi, rcx
mov	rbx, rdx
test	rdx, rdx
je	0x1400b0a00
je	0x1400b0a00
mov	rcx, rdx
call	0x140015a08
call	0x140015a08
mov	r12, rax
movabs	rax, 0x3ffffffffffffffc
cmp	rax, r12
jb	0x1400b0a54
jb	0x1400b0a54
lea	rcx, [r12 + r12]
call	0x1400b2c00
call	0x1400b2c00
mov	r13, rax
mov	rsi, rax
lea	rbp, [rbx + r12]
test	r12, r12
je	0x1400b09d5
je	0x1400b09d5
nop	dword ptr [rax]
mov	rax, qword ptr [rdi]
movsx	edx, byte ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rdi + rax + 0xf0]
test	rcx, rcx
je	0x1400b0a25
je	0x1400b0a25
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
add	rbx, 1
mov	word ptr [rsi], ax
add	rsi, 2
cmp	rbp, rbx
jne	0x1400b09a8
jne	0x1400b09a8
mov	r8, r12
mov	rdx, r13
mov	rcx, rdi
call	0x1400add70
call	0x1400add70
mov	rcx, r13
call	0x1400b2bd0
call	0x1400b2bd0
mov	rax, rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
nop	dword ptr [rax + rax]
mov	rax, qword ptr [rcx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rdi
mov	edx, dword ptr [rcx + 0x20]
or	edx, 1
call	0x1400abe20
call	0x1400abe20
mov	rax, rdi
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
mov	rcx, rax
mov	rax, rdx
sub	rax, 1
jne	0x1400b0a6f
jne	0x1400b0a6f
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rdi]
mov	edx, 1
add	rdi, qword ptr [rax - 0x18]
mov	rcx, rdi
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b41c0
call	0x1400b41c0
mov	rbx, rax
mov	rsi, rdx
mov	rcx, r13
call	0x1400b2bd0
call	0x1400b2bd0
mov	rcx, rbx
mov	rax, rsi
jmp	0x1400b0a30
jmp	0x1400b0a30
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rdi]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rdi
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400b09eb
jmp	0x1400b09eb
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
cmp	qword ptr [rcx + rax + 0x10], 0
mov	word ptr [rsp + 0x38], dx
mov	rbx, rcx
je	0x1400b0af8
je	0x1400b0af8
lea	rdx, [rsp + 0x38]
mov	r8d, 1
call	0x1400add70
call	0x1400add70
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	word ptr [rax + rax]
movzx	edx, word ptr [rsp + 0x38]
call	0x140089ef0
call	0x140089ef0
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	ecx, edx
mov	rdx, qword ptr [rax]
mov	r8, qword ptr [rdx - 0x18]
add	r8, rax
or	dword ptr [r8 + 0x18], ecx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rcx]
movsxd	rdx, edx
mov	rcx, qword ptr [rcx - 0x18]
mov	qword ptr [rax + rcx + 8], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rcx]
not	edx
mov	r8, qword ptr [rcx - 0x18]
add	r8, rax
and	dword ptr [r8 + 0x18], edx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rcx]
movsxd	rdx, edx
mov	rcx, qword ptr [rcx - 0x18]
mov	qword ptr [rax + rcx + 0x10], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	r8d, r8d
mov	rax, rcx
mov	rcx, qword ptr [rcx]
sub	edx, 8
mov	r9, qword ptr [rcx - 0x18]
add	r9, rax
mov	rcx, r9
cmp	edx, 8
ja	0x1400b0bb6
ja	0x1400b0bb6
lea	r8, [rip + 0xe7ee]
mov	r8d, dword ptr [r8 + rdx*4]
mov	edx, dword ptr [rcx + 0x18]
and	edx, 0xffffffb5
or	edx, r8d
mov	dword ptr [rcx + 0x18], edx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rcx
mov	rbx, rcx
mov	esi, edx
cmp	byte ptr [rdi + 0xe2], 0
je	0x1400b0c08
je	0x1400b0c08
mov	rax, rbx
mov	word ptr [rdi + 0xe0], si
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, qword ptr [rdi + 0xf0]
test	rcx, rcx
je	0x1400b0c28
je	0x1400b0c28
mov	rax, qword ptr [rcx]
mov	edx, 0x20
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	byte ptr [rdi + 0xe2], 1
jmp	0x1400b0bef
jmp	0x1400b0bef
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
push	rbx
sub	rsp, 0x30
mov	rax, qword ptr [rcx]
mov	rax, qword ptr [rax - 0x18]
mov	rbx, rcx
mov	rcx, qword ptr [rcx + rax + 0xf0]
test	rcx, rcx
je	0x1400b0c99
je	0x1400b0c99
mov	rax, qword ptr [rcx]
movsx	edx, dl
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	rdx, qword ptr [rbx]
mov	word ptr [rsp + 0x2e], ax
mov	rdx, qword ptr [rdx - 0x18]
cmp	qword ptr [rbx + rdx + 0x10], 0
jne	0x1400b0c80
jne	0x1400b0c80
movzx	edx, ax
mov	rcx, rbx
call	0x140089ef0
call	0x140089ef0
mov	rax, rbx
add	rsp, 0x30
pop	rbx
ret	
ret	
nop	dword ptr [rax]
lea	rdx, [rsp + 0x2e]
mov	r8d, 1
mov	rcx, rbx
call	0x1400add70
call	0x1400add70
add	rsp, 0x30
pop	rbx
ret	
ret	
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbp, qword ptr [r8 + 8]
mov	r12, qword ptr [r8]
mov	rbx, rcx
mov	rcx, rdx
mov	rdi, rdx
call	0x140015a08
call	0x140015a08
mov	qword ptr [rbx + 8], 0
mov	rcx, rbx
mov	rsi, rax
lea	rax, [rbx + 0x10]
mov	byte ptr [rbx + 0x10], 0
mov	qword ptr [rbx], rax
lea	rdx, [rbp + rsi]
call	0x14009f7e0
call	0x14009f7e0
movabs	rax, 0x3fffffffffffffff
sub	rax, qword ptr [rbx + 8]
cmp	rax, rsi
jb	0x1400b0d32
jb	0x1400b0d32
mov	r8, rsi
mov	rdx, rdi
mov	rcx, rbx
call	0x14009f920
call	0x14009f920
movabs	rax, 0x3fffffffffffffff
sub	rax, qword ptr [rbx + 8]
cmp	rax, rbp
jb	0x1400b0d3e
jb	0x1400b0d3e
mov	r8, rbp
mov	rdx, r12
mov	rcx, rbx
call	0x14009f920
call	0x14009f920
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
lea	rcx, [rip + 0x976b]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rcx, [rip + 0x975f]
call	0x1400b3ba0
call	0x1400b3ba0
mov	rsi, rax
mov	rcx, rbx
call	0x14009cf50
call	0x14009cf50
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rdi, qword ptr [r8 + 8]
mov	rsi, qword ptr [rdx + 8]
mov	r12, qword ptr [rdx]
mov	rbp, qword ptr [r8]
lea	rdx, [rdi + rsi]
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx + 8], 0
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	byte ptr [rcx + 0x10], 0
call	0x14009f7e0
call	0x14009f7e0
movabs	rax, 0x3fffffffffffffff
sub	rax, qword ptr [rbx + 8]
cmp	rax, rsi
jb	0x1400b0de7
jb	0x1400b0de7
mov	r8, rsi
mov	rdx, r12
mov	rcx, rbx
call	0x14009f920
call	0x14009f920
movabs	rax, 0x3fffffffffffffff
sub	rax, qword ptr [rbx + 8]
cmp	rax, rdi
jb	0x1400b0df3
jb	0x1400b0df3
mov	r8, rdi
mov	rdx, rbp
mov	rcx, rbx
call	0x14009f920
call	0x14009f920
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
lea	rcx, [rip + 0x96b6]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rcx, [rip + 0x96aa]
call	0x1400b3ba0
call	0x1400b3ba0
mov	rsi, rax
mov	rcx, rbx
call	0x14009cf50
call	0x14009cf50
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, qword ptr [r8 + 8]
mov	rdi, qword ptr [r8]
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx + 8], 0
mov	rbx, rcx
mov	qword ptr [rcx], rax
mov	byte ptr [rcx + 0x10], 0
mov	byte ptr [rsp + 0x48], dl
lea	rdx, [rsi + 1]
call	0x14009f7e0
call	0x14009f7e0
movabs	rax, 0x3fffffffffffffff
cmp	qword ptr [rbx + 8], rax
je	0x1400b0ea0
je	0x1400b0ea0
lea	rdx, [rsp + 0x48]
mov	r8d, 1
mov	rcx, rbx
call	0x14009f920
call	0x14009f920
movabs	rax, 0x3fffffffffffffff
sub	rax, qword ptr [rbx + 8]
cmp	rax, rsi
jb	0x1400b0eac
jb	0x1400b0eac
mov	r8, rsi
mov	rdx, rdi
mov	rcx, rbx
call	0x14009f920
call	0x14009f920
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x95fd]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rcx, [rip + 0x95f1]
call	0x1400b3ba0
call	0x1400b3ba0
mov	rsi, rax
mov	rcx, rbx
call	0x14009cf50
call	0x14009cf50
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbp, qword ptr [r8]
mov	r12, qword ptr [rbp - 0x18]
mov	rbx, rcx
lea	r13, [rsp + 0x2f]
mov	rcx, rdx
mov	rsi, rdx
call	0x140015a08
call	0x140015a08
xor	edx, edx
xor	ecx, ecx
mov	r8, r13
mov	rdi, rax
call	0x140072600
call	0x140072600
lea	rdx, [rdi + r12]
mov	rcx, rbx
mov	dword ptr [rax + 0x10], 0
add	rax, 0x18
mov	qword ptr [rax - 0x18], 0
mov	byte ptr [rax], 0
mov	qword ptr [rbx], rax
call	0x140073cf0
call	0x140073cf0
mov	r8, rdi
mov	rdx, rsi
mov	rcx, rbx
call	0x1400729e0
call	0x1400729e0
mov	r8, r12
mov	rdx, rbp
mov	rcx, rbx
call	0x1400729e0
call	0x1400729e0
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rcx, qword ptr [rbx]
mov	rsi, rax
mov	rdx, r13
sub	rcx, 0x18
call	0x140072490
call	0x140072490
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [r8]
mov	rbp, qword ptr [rdx]
xor	edx, edx
mov	rdi, qword ptr [rsi - 0x18]
mov	r12, qword ptr [rbp - 0x18]
lea	r13, [rsp + 0x2f]
mov	rbx, rcx
xor	ecx, ecx
mov	r8, r13
call	0x140072600
call	0x140072600
lea	rdx, [r12 + rdi]
mov	rcx, rbx
mov	dword ptr [rax + 0x10], 0
add	rax, 0x18
mov	qword ptr [rax - 0x18], 0
mov	byte ptr [rax], 0
mov	qword ptr [rbx], rax
call	0x140073cf0
call	0x140073cf0
mov	r8, r12
mov	rdx, rbp
mov	rcx, rbx
call	0x1400729e0
call	0x1400729e0
mov	r8, rdi
mov	rdx, rsi
mov	rcx, rbx
call	0x1400729e0
call	0x1400729e0
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rcx, qword ptr [rbx]
mov	rsi, rax
mov	rdx, r13
sub	rcx, 0x18
call	0x140072490
call	0x140072490
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [r8]
mov	rdi, qword ptr [rsi - 0x18]
lea	rbp, [rsp + 0x2f]
mov	rbx, rcx
mov	byte ptr [rsp + 0x68], dl
xor	ecx, ecx
xor	edx, edx
mov	r8, rbp
call	0x140072600
call	0x140072600
lea	rdx, [rdi + 1]
mov	rcx, rbx
mov	dword ptr [rax + 0x10], 0
add	rax, 0x18
mov	qword ptr [rax - 0x18], 0
mov	byte ptr [rax], 0
mov	qword ptr [rbx], rax
call	0x140073cf0
call	0x140073cf0
lea	rdx, [rsp + 0x68]
mov	r8d, 1
mov	rcx, rbx
call	0x1400729e0
call	0x1400729e0
mov	r8, rdi
mov	rdx, rsi
mov	rcx, rbx
call	0x1400729e0
call	0x1400729e0
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rcx, qword ptr [rbx]
mov	rsi, rax
mov	rdx, rbp
sub	rcx, 0x18
call	0x140072490
call	0x140072490
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbp, qword ptr [r8 + 8]
mov	r12, qword ptr [r8]
mov	rbx, rcx
mov	rcx, rdx
mov	rdi, rdx
call	0x140015a60
call	0x140015a60
mov	qword ptr [rbx + 8], 0
mov	rcx, rbx
mov	rsi, rax
lea	rax, [rbx + 0x10]
mov	qword ptr [rbx], rax
xor	eax, eax
lea	rdx, [rsi + rbp]
mov	word ptr [rbx + 0x10], ax
call	0x1400a3520
call	0x1400a3520
movabs	rax, 0x1fffffffffffffff
sub	rax, qword ptr [rbx + 8]
cmp	rax, rsi
jb	0x1400b1153
jb	0x1400b1153
mov	r8, rsi
mov	rdx, rdi
mov	rcx, rbx
call	0x1400a3660
call	0x1400a3660
movabs	rax, 0x1fffffffffffffff
sub	rax, qword ptr [rbx + 8]
cmp	rax, rbp
jb	0x1400b115f
jb	0x1400b115f
mov	r8, rbp
mov	rdx, r12
mov	rcx, rbx
call	0x1400a3660
call	0x1400a3660
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
lea	rcx, [rip + 0x97d2]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rcx, [rip + 0x97c6]
call	0x1400b3ba0
call	0x1400b3ba0
mov	rsi, rax
mov	rcx, rbx
call	0x1400a1050
call	0x1400a1050
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rdi, qword ptr [r8 + 8]
mov	rsi, qword ptr [rdx + 8]
mov	r12, qword ptr [rdx]
mov	rbp, qword ptr [r8]
lea	rdx, [rdi + rsi]
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx + 8], 0
mov	rbx, rcx
mov	qword ptr [rcx], rax
xor	eax, eax
mov	word ptr [rcx + 0x10], ax
call	0x1400a3520
call	0x1400a3520
movabs	rax, 0x1fffffffffffffff
sub	rax, qword ptr [rbx + 8]
cmp	rax, rsi
jb	0x1400b1209
jb	0x1400b1209
mov	r8, rsi
mov	rdx, r12
mov	rcx, rbx
call	0x1400a3660
call	0x1400a3660
movabs	rax, 0x1fffffffffffffff
sub	rax, qword ptr [rbx + 8]
cmp	rax, rdi
jb	0x1400b1215
jb	0x1400b1215
mov	r8, rdi
mov	rdx, rbp
mov	rcx, rbx
call	0x1400a3660
call	0x1400a3660
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
lea	rcx, [rip + 0x971c]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rcx, [rip + 0x9710]
call	0x1400b3ba0
call	0x1400b3ba0
mov	rsi, rax
mov	rcx, rbx
call	0x1400a1050
call	0x1400a1050
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rsi, qword ptr [r8 + 8]
mov	rdi, qword ptr [r8]
lea	rax, [rcx + 0x10]
mov	qword ptr [rcx + 8], 0
mov	rbx, rcx
mov	qword ptr [rcx], rax
xor	eax, eax
mov	word ptr [rcx + 0x10], ax
mov	word ptr [rsp + 0x48], dx
lea	rdx, [rsi + 1]
call	0x1400a3520
call	0x1400a3520
movabs	rax, 0x1fffffffffffffff
cmp	qword ptr [rbx + 8], rax
je	0x1400b12c3
je	0x1400b12c3
lea	rdx, [rsp + 0x48]
mov	r8d, 1
mov	rcx, rbx
call	0x1400a3660
call	0x1400a3660
movabs	rax, 0x1fffffffffffffff
sub	rax, qword ptr [rbx + 8]
cmp	rax, rsi
jb	0x1400b12cf
jb	0x1400b12cf
mov	r8, rsi
mov	rdx, rdi
mov	rcx, rbx
call	0x1400a3660
call	0x1400a3660
mov	rax, rbx
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
lea	rcx, [rip + 0x9662]
call	0x1400b3ba0
call	0x1400b3ba0
lea	rcx, [rip + 0x9656]
call	0x1400b3ba0
call	0x1400b3ba0
mov	rsi, rax
mov	rcx, rbx
call	0x1400a1050
call	0x1400a1050
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rbp, qword ptr [r8]
mov	r12, qword ptr [rbp - 0x18]
mov	rbx, rcx
lea	r13, [rsp + 0x2f]
mov	rcx, rdx
mov	rsi, rdx
call	0x140015a60
call	0x140015a60
xor	edx, edx
xor	ecx, ecx
mov	r8, r13
mov	rdi, rax
call	0x140069080
call	0x140069080
xor	edx, edx
mov	rcx, rbx
mov	word ptr [rax + 0x18], dx
add	rax, 0x18
lea	rdx, [rdi + r12]
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], 0
mov	qword ptr [rbx], rax
call	0x14006a8f0
call	0x14006a8f0
mov	r8, rdi
mov	rdx, rsi
mov	rcx, rbx
call	0x140069490
call	0x140069490
mov	r8, r12
mov	rdx, rbp
mov	rcx, rbx
call	0x140069490
call	0x140069490
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rcx, qword ptr [rbx]
mov	rsi, rax
mov	rdx, r13
sub	rcx, 0x18
call	0x140068f00
call	0x140068f00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [r8]
mov	rbp, qword ptr [rdx]
xor	edx, edx
mov	rdi, qword ptr [rsi - 0x18]
mov	r12, qword ptr [rbp - 0x18]
lea	r13, [rsp + 0x2f]
mov	rbx, rcx
xor	ecx, ecx
mov	r8, r13
call	0x140069080
call	0x140069080
xor	edx, edx
mov	rcx, rbx
mov	word ptr [rax + 0x18], dx
add	rax, 0x18
lea	rdx, [r12 + rdi]
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], 0
mov	qword ptr [rbx], rax
call	0x14006a8f0
call	0x14006a8f0
mov	r8, r12
mov	rdx, rbp
mov	rcx, rbx
call	0x140069490
call	0x140069490
mov	r8, rdi
mov	rdx, rsi
mov	rcx, rbx
call	0x140069490
call	0x140069490
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
ret	
ret	
mov	rcx, qword ptr [rbx]
mov	rsi, rax
mov	rdx, r13
sub	rcx, 0x18
call	0x140068f00
call	0x140068f00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, qword ptr [r8]
mov	rdi, qword ptr [rsi - 0x18]
lea	rbp, [rsp + 0x2f]
mov	rbx, rcx
mov	word ptr [rsp + 0x68], dx
xor	ecx, ecx
xor	edx, edx
mov	r8, rbp
call	0x140069080
call	0x140069080
xor	edx, edx
mov	rcx, rbx
mov	word ptr [rax + 0x18], dx
add	rax, 0x18
lea	rdx, [rdi + 1]
mov	dword ptr [rax - 8], 0
mov	qword ptr [rax - 0x18], 0
mov	qword ptr [rbx], rax
call	0x14006a8f0
call	0x14006a8f0
lea	rdx, [rsp + 0x68]
mov	r8d, 1
mov	rcx, rbx
call	0x140069490
call	0x140069490
mov	r8, rdi
mov	rdx, rsi
mov	rcx, rbx
call	0x140069490
call	0x140069490
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
mov	rcx, qword ptr [rbx]
mov	rsi, rax
mov	rdx, rbp
sub	rcx, 0x18
call	0x140068f00
call	0x140068f00
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
movabs	r8, 0x7fffffffffffffff
mov	rbx, rcx
call	0x1400ae450
call	0x1400ae450
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
push	rbx
sub	rsp, 0x20
movabs	r8, 0x7fffffffffffffff
mov	rbx, rcx
call	0x1400ae450
call	0x1400ae450
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
jmp	0x1400b1560
jmp	0x1400b1560
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x1400b1560
jmp	0x1400b1560
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
movabs	r8, 0x7fffffffffffffff
mov	rbx, rcx
call	0x1400ae450
call	0x1400ae450
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
push	rsi
push	rbx
sub	rsp, 0x38
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x2f]
mov	rdx, rbx
call	0x14006e7d0
call	0x14006e7d0
cmp	byte ptr [rsp + 0x2f], 0
jne	0x1400b1590
jne	0x1400b1590
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rdx, qword ptr [rcx + 0x10]
cmp	rdx, qword ptr [rcx + 0x18]
jae	0x1400b15c0
jae	0x1400b15c0
movzx	eax, byte ptr [rdx]
add	rdx, 1
mov	qword ptr [rcx + 0x10], rdx
mov	byte ptr [rsi], al
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
cmp	eax, -1
jne	0x1400b15b4
jne	0x1400b15b4
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 6
call	0x1400ab490
call	0x1400ab490
jmp	0x1400b1583
jmp	0x1400b1583
sub	rdx, 1
mov	rcx, rax
jne	0x1400b1609
jne	0x1400b1609
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400ab170
call	0x1400ab170
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400b1583
jmp	0x1400b1583
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	ecx, edx
mov	rdx, qword ptr [rax]
mov	r8, qword ptr [rdx - 0x18]
add	r8, rax
or	dword ptr [r8 + 0x18], ecx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rcx]
movsxd	rdx, edx
mov	rcx, qword ptr [rcx - 0x18]
mov	qword ptr [rax + rcx + 8], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rcx]
not	edx
mov	r8, qword ptr [rcx - 0x18]
add	r8, rax
and	dword ptr [r8 + 0x18], edx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rcx]
movsxd	rdx, edx
mov	rcx, qword ptr [rcx - 0x18]
mov	qword ptr [rax + rcx + 0x10], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	r8d, r8d
mov	rax, rcx
mov	rcx, qword ptr [rcx]
sub	edx, 8
mov	r9, qword ptr [rcx - 0x18]
add	r9, rax
mov	rcx, r9
cmp	edx, 8
ja	0x1400b16f6
ja	0x1400b16f6
lea	r8, [rip + 0xdcee]
mov	r8d, dword ptr [r8 + rdx*4]
mov	edx, dword ptr [rcx + 0x18]
and	edx, 0xffffffb5
or	edx, r8d
mov	dword ptr [rcx + 0x18], edx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x28
mov	rax, qword ptr [rcx]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rcx
mov	rbx, rcx
mov	esi, edx
cmp	byte ptr [rdi + 0xe1], 0
je	0x1400b1748
je	0x1400b1748
mov	rax, rbx
mov	byte ptr [rdi + 0xe0], sil
add	rsp, 0x28
pop	rbx
pop	rsi
pop	rdi
pop	rbp
ret	
ret	
nop	dword ptr [rax + rax]
mov	rbp, qword ptr [rdi + 0xf0]
test	rbp, rbp
je	0x1400b1790
je	0x1400b1790
cmp	byte ptr [rbp + 0x38], 0
je	0x1400b1768
je	0x1400b1768
mov	byte ptr [rdi + 0xe1], 1
jmp	0x1400b1730
jmp	0x1400b1730
nop	dword ptr [rax + rax]
mov	rcx, rbp
call	0x140021cb0
call	0x140021cb0
mov	rax, qword ptr [rbp]
lea	rdx, [rip - 0x8f2db]
mov	rax, qword ptr [rax + 0x30]
cmp	rax, rdx
je	0x1400b175a
je	0x1400b175a
mov	edx, 0x20
mov	rcx, rbp
call	rax
call	rax
jmp	0x1400b175a
jmp	0x1400b175a
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
movabs	r8, 0x3fffffffffffffff
mov	rbx, rcx
call	0x1400ae140
call	0x1400ae140
mov	rax, rbx
add	rsp, 0x20
pop	rbx
ret	
ret	
push	rsi
push	rbx
sub	rsp, 0x38
xor	r8d, r8d
mov	rbx, rcx
mov	rsi, rdx
lea	rcx, [rsp + 0x2f]
mov	rdx, rbx
call	0x140088bb0
call	0x140088bb0
cmp	byte ptr [rsp + 0x2f], 0
jne	0x1400b17f0
jne	0x1400b17f0
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax]
mov	rax, qword ptr [rbx]
mov	rax, qword ptr [rax - 0x18]
mov	rcx, qword ptr [rbx + rax + 0xe8]
mov	rdx, qword ptr [rcx + 0x10]
cmp	rdx, qword ptr [rcx + 0x18]
jae	0x1400b1850
jae	0x1400b1850
movzx	eax, word ptr [rdx]
add	rdx, 2
mov	qword ptr [rcx + 0x10], rdx
cmp	ax, -1
je	0x1400b1830
je	0x1400b1830
mov	word ptr [rsi], ax
mov	rax, rbx
add	rsp, 0x38
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr [rax + rax]
mov	rax, qword ptr [rbx]
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
mov	edx, dword ptr [rcx + 0x20]
or	edx, 6
call	0x1400abe20
call	0x1400abe20
jmp	0x1400b17e3
jmp	0x1400b17e3
nop	word ptr [rax + rax]
mov	rax, qword ptr [rcx]
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
jmp	0x1400b1814
jmp	0x1400b1814
sub	rdx, 1
mov	rcx, rax
jne	0x1400b187f
jne	0x1400b187f
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
add	rbx, qword ptr [rax - 0x18]
mov	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b3540
call	0x1400b3540
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx]
mov	edx, 1
mov	rcx, qword ptr [rax - 0x18]
add	rcx, rbx
call	0x1400abb30
call	0x1400abb30
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400b17e3
jmp	0x1400b17e3
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	ecx, edx
mov	rdx, qword ptr [rax]
mov	r8, qword ptr [rdx - 0x18]
add	r8, rax
or	dword ptr [r8 + 0x18], ecx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rcx]
movsxd	rdx, edx
mov	rcx, qword ptr [rcx - 0x18]
mov	qword ptr [rax + rcx + 8], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rcx]
not	edx
mov	r8, qword ptr [rcx - 0x18]
add	r8, rax
and	dword ptr [r8 + 0x18], edx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, rcx
mov	rcx, qword ptr [rcx]
movsxd	rdx, edx
mov	rcx, qword ptr [rcx - 0x18]
mov	qword ptr [rax + rcx + 0x10], rdx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
xor	r8d, r8d
mov	rax, rcx
mov	rcx, qword ptr [rcx]
sub	edx, 8
mov	r9, qword ptr [rcx - 0x18]
add	r9, rax
mov	rcx, r9
cmp	edx, 8
ja	0x1400b1976
ja	0x1400b1976
lea	r8, [rip + 0xda6e]
mov	r8d, dword ptr [r8 + rdx*4]
mov	edx, dword ptr [rcx + 0x18]
and	edx, 0xffffffb5
or	edx, r8d
mov	dword ptr [rcx + 0x18], edx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rdi, qword ptr [rax - 0x18]
add	rdi, rcx
mov	rbx, rcx
mov	esi, edx
cmp	byte ptr [rdi + 0xe2], 0
je	0x1400b19c8
je	0x1400b19c8
mov	rax, rbx
mov	word ptr [rdi + 0xe0], si
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
ret	
ret	
nop	dword ptr [rax]
mov	rcx, qword ptr [rdi + 0xf0]
test	rcx, rcx
je	0x1400b19e8
je	0x1400b19e8
mov	rax, qword ptr [rcx]
mov	edx, 0x20
call	qword ptr [rax + 0x50]
call	qword ptr [rax + 0x50]
mov	byte ptr [rdi + 0xe2], 1
jmp	0x1400b19af
jmp	0x1400b19af
call	0x1400b3a30
call	0x1400b3a30
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0xe2dc]
lea	rdx, [rip + 0xe325]
movq	xmm0, rdx
mov	qword ptr [rcx - 0x10], rax
mov	rax, qword ptr [rip + 0xd74d]
mov	rbx, rcx
lea	rcx, [rcx + 8]
mov	qword ptr [rcx - 0x10], 0
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
call	0x1400aa330
call	0x1400aa330
lea	rcx, [rbx - 0x10]
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0xe281]
lea	rdx, [rip + 0xe2ca]
movq	xmm0, rdx
mov	qword ptr [rcx - 0x10], rax
mov	rax, qword ptr [rip + 0xd6f2]
add	rcx, 8
mov	qword ptr [rcx - 0x10], 0
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
jmp	0x1400aa330
jmp	0x1400aa330
push	rsi
push	rbx
sub	rsp, 0x28
lea	rax, [rip + 0x14e3b]
lea	rdx, [rip + 0x14e5c]
movq	xmm0, rdx
mov	qword ptr [rcx - 0x10], rax
add	rax, 0x50
mov	rbx, rcx
lea	rsi, [rcx - 0x10]
mov	qword ptr [rcx + 0xd0], rax
lea	rax, [rip + 0x14d0a]
lea	rcx, [rcx + 8]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x58]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xd424]
lea	rcx, [rbx + 0x40]
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0xe344]
mov	qword ptr [rbx - 8], 0
lea	rcx, [rbx + 0xd0]
mov	qword ptr [rbx], rax
lea	rax, [rip + 0xe2db]
mov	qword ptr [rbx - 0x10], rax
mov	rax, qword ptr [rip + 0xd638]
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400b1adc
jmp	0x1400b1adc
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x14d6c]
lea	rdx, [rip + 0x14d8d]
movq	xmm0, rdx
mov	qword ptr [rcx - 0x10], rax
add	rax, 0x50
mov	rbx, rcx
lea	rcx, [rcx + 8]
mov	qword ptr [rcx + 0xc8], rax
lea	rax, [rip + 0x14c3b]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x58]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xd359]
lea	rcx, [rbx + 0x40]
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0xe279]
lea	rcx, [rbx + 0xd0]
mov	qword ptr [rbx - 8], 0
mov	qword ptr [rbx], rax
lea	rax, [rip + 0xe210]
mov	qword ptr [rbx - 0x10], rax
mov	rax, qword ptr [rip + 0xd56d]
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
add	rsp, 0x20
pop	rbx
jmp	0x1400aa330
jmp	0x1400aa330
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400b1ba7
jmp	0x1400b1ba7
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
lea	rax, [rip + 0x14d2b]
lea	rdx, [rip + 0x14d4c]
movq	xmm0, rdx
mov	qword ptr [rcx - 0x10], rax
add	rax, 0x50
mov	rbx, rcx
lea	rsi, [rcx - 0x10]
mov	qword ptr [rcx + 0xd0], rax
lea	rax, [rip + 0x14bfa]
lea	rcx, [rcx + 8]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x58]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xd2a4]
lea	rcx, [rbx + 0x40]
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0xe2d4]
mov	qword ptr [rbx - 8], 0
lea	rcx, [rbx + 0xd0]
mov	qword ptr [rbx], rax
lea	rax, [rip + 0xe1eb]
mov	qword ptr [rbx - 0x10], rax
mov	rax, qword ptr [rip + 0xd4b8]
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rsi
add	rsp, 0x28
pop	rbx
pop	rsi
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400b1c6c
jmp	0x1400b1c6c
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0x14c5c]
lea	rdx, [rip + 0x14c7d]
movq	xmm0, rdx
mov	qword ptr [rcx - 0x10], rax
add	rax, 0x50
mov	rbx, rcx
lea	rcx, [rcx + 8]
mov	qword ptr [rcx + 0xc8], rax
lea	rax, [rip + 0x14b2b]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x58]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xd1d9]
lea	rcx, [rbx + 0x40]
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0xe209]
lea	rcx, [rbx + 0xd0]
mov	qword ptr [rbx - 8], 0
mov	qword ptr [rbx], rax
lea	rax, [rip + 0xe120]
mov	qword ptr [rbx - 0x10], rax
mov	rax, qword ptr [rip + 0xd3ed]
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
add	rsp, 0x20
pop	rbx
jmp	0x1400aa330
jmp	0x1400aa330
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400b1d37
jmp	0x1400b1d37
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rax, [rip + 0xe29c]
lea	rdx, [rip + 0xe2e5]
movq	xmm0, rdx
mov	qword ptr [rcx - 0x10], rax
mov	rax, qword ptr [rip + 0xd39d]
mov	rbx, rcx
lea	rcx, [rcx + 8]
mov	qword ptr [rcx - 0x10], 0
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
call	0x1400aa330
call	0x1400aa330
lea	rcx, [rbx - 0x10]
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rax, [rip + 0xe241]
lea	rdx, [rip + 0xe28a]
movq	xmm0, rdx
mov	qword ptr [rcx - 0x10], rax
mov	rax, qword ptr [rip + 0xd342]
add	rcx, 8
mov	qword ptr [rcx - 0x10], 0
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
jmp	0x1400aa330
jmp	0x1400aa330
push	rbx
sub	rsp, 0x20
lea	rdx, [rip + 0xdecc]
movq	xmm0, rdx
mov	rax, qword ptr [rcx]
mov	rbx, rcx
add	rbx, qword ptr [rax - 0x18]
lea	rax, [rip + 0xde66]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0xd2e4]
lea	rcx, [rbx + 0x18]
mov	qword ptr [rbx + 8], 0
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx + 0x10], xmm0
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0xde71]
movq	xmm0, rdx
mov	rax, qword ptr [rcx]
add	rcx, qword ptr [rax - 0x18]
lea	rax, [rip + 0xde0e]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0xd28c]
add	rcx, 0x18
mov	qword ptr [rcx - 0x10], 0
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
jmp	0x1400aa330
jmp	0x1400aa330
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rbx, rcx
add	rbx, qword ptr [rax - 0x18]
lea	rax, [rip + 0x14392]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0xd240]
lea	rcx, [rbx + 0x10]
mov	qword ptr [rbx + 8], 0
add	rax, 0x10
mov	qword ptr [rbx + 0x10], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rcx, qword ptr [rax - 0x18]
lea	rax, [rip + 0x1434a]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0xd1f8]
add	rcx, 0x10
mov	qword ptr [rcx - 8], 0
add	rax, 0x10
mov	qword ptr [rcx], rax
jmp	0x1400aa330
jmp	0x1400aa330
push	rbx
sub	rsp, 0x20
lea	rdx, [rip + 0x1436c]
movq	xmm0, rdx
mov	rax, qword ptr [rcx]
mov	rbx, rcx
add	rbx, qword ptr [rax - 0x18]
mov	rax, qword ptr [rip + 0xd1be]
lea	rcx, [rbx + 8]
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx], xmm0
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x14321]
movq	xmm0, rdx
mov	rax, qword ptr [rcx]
add	rcx, qword ptr [rax - 0x18]
mov	rax, qword ptr [rip + 0xd176]
add	rcx, 8
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
jmp	0x1400aa330
jmp	0x1400aa330
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rdx, [rip + 0x148e4]
movq	xmm0, rdx
mov	rax, qword ptr [rcx]
mov	rbx, rcx
add	rbx, qword ptr [rax - 0x18]
lea	rax, [rip + 0x148a6]
mov	qword ptr [rbx], rax
add	rax, 0x50
lea	rcx, [rbx + 0x18]
mov	qword ptr [rbx + 0xe0], rax
lea	rax, [rip + 0x14785]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx + 0x10], xmm0
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x68]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xcea3]
lea	rcx, [rbx + 0x50]
add	rax, 0x10
mov	qword ptr [rbx + 0x18], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0xddc3]
mov	qword ptr [rbx + 8], 0
lea	rcx, [rbx + 0xe0]
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0xdd59]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0xd0b7]
add	rax, 0x10
mov	qword ptr [rbx + 0xe0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400b205d
jmp	0x1400b205d
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rdx, [rip + 0x14814]
movq	xmm0, rdx
mov	rax, qword ptr [rcx]
mov	rbx, rcx
add	rbx, qword ptr [rax - 0x18]
lea	rax, [rip + 0x147d6]
mov	qword ptr [rbx], rax
add	rax, 0x50
lea	rcx, [rbx + 0x18]
mov	qword ptr [rbx + 0xe0], rax
lea	rax, [rip + 0x146b5]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx + 0x10], xmm0
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x68]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xcdd3]
lea	rcx, [rbx + 0x50]
add	rax, 0x10
mov	qword ptr [rbx + 0x18], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0xdcf3]
lea	rcx, [rbx + 0xe0]
mov	qword ptr [rbx + 8], 0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0xdc89]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0xcfe7]
add	rax, 0x10
mov	qword ptr [rbx + 0xe0], rax
add	rsp, 0x20
pop	rbx
jmp	0x1400aa330
jmp	0x1400aa330
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400b212d
jmp	0x1400b212d
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rdx, [rip + 0x147d4]
movq	xmm0, rdx
mov	rax, qword ptr [rcx]
mov	rbx, rcx
add	rbx, qword ptr [rax - 0x18]
lea	rax, [rip + 0x14796]
mov	qword ptr [rbx], rax
add	rax, 0x50
lea	rcx, [rbx + 0x18]
mov	qword ptr [rbx + 0xe0], rax
lea	rax, [rip + 0x14675]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx + 0x10], xmm0
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x68]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xcd23]
lea	rcx, [rbx + 0x50]
add	rax, 0x10
mov	qword ptr [rbx + 0x18], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0xdd53]
mov	qword ptr [rbx + 8], 0
lea	rcx, [rbx + 0xe0]
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0xdc69]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0xcf37]
add	rax, 0x10
mov	qword ptr [rbx + 0xe0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400b21ed
jmp	0x1400b21ed
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rdx, [rip + 0x14704]
movq	xmm0, rdx
mov	rax, qword ptr [rcx]
mov	rbx, rcx
add	rbx, qword ptr [rax - 0x18]
lea	rax, [rip + 0x146c6]
mov	qword ptr [rbx], rax
add	rax, 0x50
lea	rcx, [rbx + 0x18]
mov	qword ptr [rbx + 0xe0], rax
lea	rax, [rip + 0x145a5]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx + 0x10], xmm0
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x68]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xcc53]
lea	rcx, [rbx + 0x50]
add	rax, 0x10
mov	qword ptr [rbx + 0x18], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0xdc83]
lea	rcx, [rbx + 0xe0]
mov	qword ptr [rbx + 8], 0
mov	qword ptr [rbx + 0x10], rax
lea	rax, [rip + 0xdb99]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0xce67]
add	rax, 0x10
mov	qword ptr [rbx + 0xe0], rax
add	rsp, 0x20
pop	rbx
jmp	0x1400aa330
jmp	0x1400aa330
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400b22bd
jmp	0x1400b22bd
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rbx, rcx
add	rbx, qword ptr [rax - 0x18]
lea	rax, [rip + 0x14692]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0xce20]
lea	rcx, [rbx + 0x10]
mov	qword ptr [rbx + 8], 0
add	rax, 0x10
mov	qword ptr [rbx + 0x10], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx]
add	rcx, qword ptr [rax - 0x18]
lea	rax, [rip + 0x1464a]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0xcdd8]
add	rcx, 0x10
mov	qword ptr [rcx - 8], 0
add	rax, 0x10
mov	qword ptr [rcx], rax
jmp	0x1400aa330
jmp	0x1400aa330
push	rbx
sub	rsp, 0x20
lea	rdx, [rip + 0x1466c]
movq	xmm0, rdx
mov	rax, qword ptr [rcx]
mov	rbx, rcx
add	rbx, qword ptr [rax - 0x18]
mov	rax, qword ptr [rip + 0xcd9e]
lea	rcx, [rbx + 8]
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx], xmm0
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0x14621]
movq	xmm0, rdx
mov	rax, qword ptr [rcx]
add	rcx, qword ptr [rax - 0x18]
mov	rax, qword ptr [rip + 0xcd56]
add	rcx, 8
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
jmp	0x1400aa330
jmp	0x1400aa330
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rbx, rcx
add	rbx, qword ptr [rax - 0x18]
lea	rax, [rip + 0x14652]
mov	qword ptr [rbx], rax
add	rax, 0x28
lea	rcx, [rbx + 0x10]
mov	qword ptr [rbx + 0xd8], rax
lea	rax, [rip + 0x14361]
mov	qword ptr [rbx + 0x10], rax
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x60]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xca88]
lea	rcx, [rbx + 0x48]
add	rax, 0x10
mov	qword ptr [rbx + 0x10], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0xdb18]
mov	qword ptr [rbx + 8], 0
lea	rcx, [rbx + 0xd8]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0xcca7]
add	rax, 0x10
mov	qword ptr [rbx + 0xd8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400b2478
jmp	0x1400b2478
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rbx, rcx
add	rbx, qword ptr [rax - 0x18]
lea	rax, [rip + 0x145a2]
mov	qword ptr [rbx], rax
add	rax, 0x28
lea	rcx, [rbx + 0x10]
mov	qword ptr [rbx + 0xd8], rax
lea	rax, [rip + 0x142b1]
mov	qword ptr [rbx + 0x10], rax
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x60]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xc9d8]
lea	rcx, [rbx + 0x48]
add	rax, 0x10
mov	qword ptr [rbx + 0x10], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0xda68]
lea	rcx, [rbx + 0xd8]
mov	qword ptr [rbx + 8], 0
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0xcbf7]
add	rax, 0x10
mov	qword ptr [rbx + 0xd8], rax
add	rsp, 0x20
pop	rbx
jmp	0x1400aa330
jmp	0x1400aa330
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400b2528
jmp	0x1400b2528
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rbx, rcx
add	rbx, qword ptr [rax - 0x18]
lea	rax, [rip + 0x14552]
mov	qword ptr [rbx], rax
add	rax, 0x28
lea	rcx, [rbx + 0x10]
mov	qword ptr [rbx + 0xd8], rax
lea	rax, [rip + 0x14291]
mov	qword ptr [rbx + 0x10], rax
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x60]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xc948]
lea	rcx, [rbx + 0x48]
add	rax, 0x10
mov	qword ptr [rbx + 0x10], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0xda18]
mov	qword ptr [rbx + 8], 0
lea	rcx, [rbx + 0xd8]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0xcb67]
add	rax, 0x10
mov	qword ptr [rbx + 0xd8], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400b25c8
jmp	0x1400b25c8
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rax, qword ptr [rcx]
mov	rbx, rcx
add	rbx, qword ptr [rax - 0x18]
lea	rax, [rip + 0x144a2]
mov	qword ptr [rbx], rax
add	rax, 0x28
lea	rcx, [rbx + 0x10]
mov	qword ptr [rbx + 0xd8], rax
lea	rax, [rip + 0x141e1]
mov	qword ptr [rbx + 0x10], rax
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x60]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xc898]
lea	rcx, [rbx + 0x48]
add	rax, 0x10
mov	qword ptr [rbx + 0x10], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0xd968]
lea	rcx, [rbx + 0xd8]
mov	qword ptr [rbx + 8], 0
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0xcab7]
add	rax, 0x10
mov	qword ptr [rbx + 0xd8], rax
add	rsp, 0x20
pop	rbx
jmp	0x1400aa330
jmp	0x1400aa330
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400b2678
jmp	0x1400b2678
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rdx, [rip + 0xd9bc]
movq	xmm0, rdx
mov	rax, qword ptr [rcx]
mov	rbx, rcx
add	rbx, qword ptr [rax - 0x18]
lea	rax, [rip + 0xd956]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0xca64]
lea	rcx, [rbx + 0x18]
mov	qword ptr [rbx + 8], 0
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx + 0x10], xmm0
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
lea	rdx, [rip + 0xd961]
movq	xmm0, rdx
mov	rax, qword ptr [rcx]
add	rcx, qword ptr [rax - 0x18]
lea	rax, [rip + 0xd8fe]
mov	qword ptr [rcx], rax
mov	rax, qword ptr [rip + 0xca0c]
add	rcx, 0x18
mov	qword ptr [rcx - 0x10], 0
add	rax, 0x10
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rcx - 8], xmm0
jmp	0x1400aa330
jmp	0x1400aa330
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rdx, [rip + 0x1442c]
movq	xmm0, rdx
mov	rax, qword ptr [rcx]
mov	rbx, rcx
add	rbx, qword ptr [rax - 0x18]
lea	rax, [rip + 0x1443e]
mov	qword ptr [rbx + 0xd0], rax
lea	rax, [rip + 0x14010]
lea	rcx, [rbx + 8]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx], xmm0
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x58]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xc72b]
lea	rcx, [rbx + 0x40]
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0xd8fb]
lea	rcx, [rbx + 0xd0]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0xc952]
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400b27d5
jmp	0x1400b27d5
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rdx, [rip + 0x1437c]
movq	xmm0, rdx
mov	rax, qword ptr [rcx]
mov	rbx, rcx
add	rbx, qword ptr [rax - 0x18]
lea	rax, [rip + 0x1438e]
mov	qword ptr [rbx + 0xd0], rax
lea	rax, [rip + 0x13f60]
lea	rcx, [rbx + 8]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx], xmm0
call	0x140080270
call	0x140080270
lea	rcx, [rbx + 0x58]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xc67b]
lea	rcx, [rbx + 0x40]
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0xd84b]
lea	rcx, [rbx + 0xd0]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0xc8a2]
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
add	rsp, 0x20
pop	rbx
jmp	0x1400aa330
jmp	0x1400aa330
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400b2885
jmp	0x1400b2885
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rdx, [rip + 0x1431c]
movq	xmm0, rdx
mov	rax, qword ptr [rcx]
mov	rbx, rcx
add	rbx, qword ptr [rax - 0x18]
lea	rax, [rip + 0x1432e]
mov	qword ptr [rbx + 0xd0], rax
lea	rax, [rip + 0x13f30]
lea	rcx, [rbx + 8]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx], xmm0
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x58]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xc5db]
lea	rcx, [rbx + 0x40]
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0xd7eb]
lea	rcx, [rbx + 0xd0]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0xc802]
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
call	0x1400aa330
call	0x1400aa330
mov	rcx, rbx
add	rsp, 0x20
pop	rbx
jmp	0x1400b2be0
jmp	0x1400b2be0
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400b2935
jmp	0x1400b2935
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
lea	rdx, [rip + 0x1426c]
movq	xmm0, rdx
mov	rax, qword ptr [rcx]
mov	rbx, rcx
add	rbx, qword ptr [rax - 0x18]
lea	rax, [rip + 0x1427e]
mov	qword ptr [rbx + 0xd0], rax
lea	rax, [rip + 0x13e80]
lea	rcx, [rbx + 8]
movq	xmm1, rax
punpcklqdq	xmm0, xmm1
movups	xmmword ptr [rbx], xmm0
call	0x140082820
call	0x140082820
lea	rcx, [rbx + 0x58]
call	0x140078a10
call	0x140078a10
mov	rax, qword ptr [rip + 0xc52b]
lea	rcx, [rbx + 0x40]
add	rax, 0x10
mov	qword ptr [rbx + 8], rax
call	0x14009bf30
call	0x14009bf30
lea	rax, [rip + 0xd73b]
lea	rcx, [rbx + 0xd0]
mov	qword ptr [rbx], rax
mov	rax, qword ptr [rip + 0xc752]
add	rax, 0x10
mov	qword ptr [rbx + 0xd0], rax
add	rsp, 0x20
pop	rbx
jmp	0x1400aa330
jmp	0x1400aa330
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
jmp	0x1400b29e5
jmp	0x1400b29e5
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, qword ptr [rcx]
cmp	byte ptr [rbx + 0x80], 0
mov	dword ptr [rbx + 0x60], 0
mov	byte ptr [rbx + 0x98], 0
mov	rsi, rcx
je	0x1400b2a90
je	0x1400b2a90
mov	rcx, qword ptr [rbx + 0x70]
test	rcx, rcx
je	0x1400b2a81
je	0x1400b2a81
call	0x1400b2bd0
call	0x1400b2bd0
mov	qword ptr [rbx + 0x70], 0
mov	byte ptr [rbx + 0x80], 0
mov	rcx, qword ptr [rbx + 0xa8]
test	rcx, rcx
je	0x1400b2aa1
je	0x1400b2aa1
call	0x1400b2bd0
call	0x1400b2bd0
mov	rax, qword ptr [rsi]
pxor	xmm0, xmm0
xor	edx, edx
mov	qword ptr [rbx + 0xa8], 0
movups	xmmword ptr [rbx + 0xb8], xmm0
movq	xmm1, qword ptr [rax + 0x70]
movd	xmm3, dword ptr [rax + 0x64]
mov	qword ptr [rbx + 0xb0], 0
movups	xmmword ptr [rax + 0x20], xmm0
movdqu	xmm2, xmm1
pshufd	xmm0, xmm3, 0xe0
mov	word ptr [rax + 0x81], dx
punpcklqdq	xmm2, xmm2
mov	qword ptr [rax + 0x30], 0
movups	xmmword ptr [rax + 8], xmm2
movq	qword ptr [rax + 0x18], xmm1
movq	qword ptr [rax + 0x68], xmm0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rbx, qword ptr [rcx]
cmp	byte ptr [rbx + 0x80], 0
mov	dword ptr [rbx + 0x60], 0
mov	byte ptr [rbx + 0x98], 0
mov	rsi, rcx
je	0x1400b2b50
je	0x1400b2b50
mov	rcx, qword ptr [rbx + 0x70]
test	rcx, rcx
je	0x1400b2b41
je	0x1400b2b41
call	0x1400b2bd0
call	0x1400b2bd0
mov	qword ptr [rbx + 0x70], 0
mov	byte ptr [rbx + 0x80], 0
mov	rcx, qword ptr [rbx + 0xa8]
test	rcx, rcx
je	0x1400b2b61
je	0x1400b2b61
call	0x1400b2bd0
call	0x1400b2bd0
mov	rax, qword ptr [rsi]
pxor	xmm0, xmm0
xor	edx, edx
mov	qword ptr [rbx + 0xa8], 0
movups	xmmword ptr [rbx + 0xb8], xmm0
movq	xmm1, qword ptr [rax + 0x70]
movd	xmm3, dword ptr [rax + 0x64]
mov	qword ptr [rbx + 0xb0], 0
movups	xmmword ptr [rax + 0x20], xmm0
movdqu	xmm2, xmm1
pshufd	xmm0, xmm3, 0xe0
mov	word ptr [rax + 0x81], dx
punpcklqdq	xmm2, xmm2
mov	qword ptr [rax + 0x30], 0
movups	xmmword ptr [rax + 8], xmm2
movq	qword ptr [rax + 0x18], xmm1
movq	qword ptr [rax + 0x68], xmm0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x140015940
jmp	0x140015940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x1400b2be0
jmp	0x1400b2be0
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
jmp	0x1400b2c30
jmp	0x1400b2c30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
call	0x1400b2c00
call	0x1400b2c00
nop	
add	rsp, 0x28
ret	
ret	
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b2f60
call	0x1400b2f60
xor	eax, eax
jmp	0x1400b2c1a
jmp	0x1400b2c1a
push	rbx
sub	rsp, 0x20
mov	eax, 1
test	rcx, rcx
cmovne	rax, rcx
mov	rbx, rax
mov	rcx, rbx
call	0x140015980
call	0x140015980
test	rax, rax
je	0x1400b2c57
je	0x1400b2c57
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400ad870
call	0x1400ad870
test	rax, rax
je	0x1400b2c65
je	0x1400b2c65
call	rax
call	rax
jmp	0x1400b2c44
jmp	0x1400b2c44
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x7b56]
lea	rdx, [rip + 0xf3b3]
mov	rcx, rax
mov	rax, qword ptr [rip + 0xc4c9]
add	rax, 0x10
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
sub	rsp, 0x20
mov	ecx, 0x90
call	0x140015980
call	0x140015980
mov	rdx, rax
test	rax, rax
je	0x1400b2cee
je	0x1400b2cee
lea	rdi, [rdx + 8]
mov	rcx, rdx
xor	eax, eax
mov	qword ptr [rdx], 0
mov	qword ptr [rdx + 0x88], 0
and	rdi, 0xfffffffffffffff8
sub	rcx, rdi
add	ecx, 0x90
shr	ecx, 3
rep stosq	qword ptr [rdi], rax
mov	rax, rdx
add	rsp, 0x20
pop	rdi
ret	
ret	
mov	ecx, 0x90
call	0x140016a60
call	0x140016a60
mov	rdx, rax
test	rax, rax
jne	0x1400b2cb7
jne	0x1400b2cb7
call	0x1400afa30
call	0x1400afa30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
sub	rsp, 0x20
lea	rdi, [rcx + 0xa0]
mov	rcx, rdi
call	0x140015980
call	0x140015980
test	rax, rax
je	0x1400b2d64
je	0x1400b2d64
lea	rdi, [rax + 8]
mov	qword ptr [rax], 0
lea	rdx, [rax + 0xa0]
mov	qword ptr [rax + 0x98], 0
and	rdi, 0xfffffffffffffff8
sub	rax, rdi
lea	ecx, [rax + 0xa0]
xor	eax, eax
shr	ecx, 3
rep stosq	qword ptr [rdi], rax
mov	rax, rdx
add	rsp, 0x20
pop	rdi
ret	
ret	
mov	rcx, rdi
call	0x140016a60
call	0x140016a60
test	rax, rax
jne	0x1400b2d29
jne	0x1400b2d29
call	0x1400afa30
call	0x1400afa30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
call	0x1400b3070
call	0x1400b3070
lea	r8, [rbx - 0x50]
movabs	rdx, 0xb8b1aabcbcd4d500
add	rdx, qword ptr [rbx]
mov	rcx, qword ptr [rax]
cmp	rdx, 1
jbe	0x1400b2dc0
jbe	0x1400b2dc0
test	rcx, rcx
jne	0x1400b2df8
jne	0x1400b2df8
mov	qword ptr [rax], r8
mov	rax, rcx
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	dword ptr [rax + rax]
mov	r10d, dword ptr [rbx - 0x28]
mov	r9d, 1
sub	r9d, r10d
lea	edx, [r10 + 1]
test	r10d, r10d
cmovs	edx, r9d
mov	dword ptr [rbx - 0x28], edx
sub	dword ptr [rax + 8], 1
cmp	rcx, r8
je	0x1400b2deb
je	0x1400b2deb
mov	qword ptr [rbx - 0x30], rcx
mov	qword ptr [rax], r8
mov	rcx, qword ptr [rbx - 8]
mov	rax, rcx
add	rsp, 0x20
pop	rbx
ret	
ret	
call	0x1400afa30
call	0x1400afa30
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
test	rcx, rcx
je	0x1400b2e25
je	0x1400b2e25
call	0x1400b2d80
call	0x1400b2d80
movabs	rax, 0xb8b1aabcbcd4d500
add	rax, qword ptr [rbx]
cmp	rax, 1
jbe	0x1400b2e2a
jbe	0x1400b2e2a
call	0x1400afa30
call	0x1400afa30
mov	rcx, qword ptr [rbx - 0x38]
call	0x140016070
call	0x140016070
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x50
mov	rbx, rcx
call	0x1400b2d80
call	0x1400b2d80
mov	rax, qword ptr [rbx - 0x10]
mov	rcx, qword ptr [rbx - 0x40]
mov	rbp, qword ptr [rbx - 0x18]
movsxd	rsi, dword ptr [rbx - 0x24]
mov	qword ptr [rsp + 0x30], rax
mov	rdi, qword ptr [rbx - 0x38]
call	0x140016090
call	0x140016090
mov	rcx, rax
call	0x1400b2d80
call	0x1400b2d80
call	0x1400b3080
call	0x1400b3080
mov	rbx, qword ptr [rax]
test	byte ptr [rbx + 0x50], 1
je	0x1400b2efa
je	0x1400b2efa
mov	rbx, qword ptr [rbx]
lea	r12, [rsp + 0x20]
mov	rdx, rbp
xor	ecx, ecx
mov	r8, r12
call	0x140015c60
call	0x140015c60
mov	rdx, qword ptr [rbx - 0x90]
mov	r9, rsi
mov	r8, rbx
mov	rcx, r12
call	0x140015d50
call	0x140015d50
test	al, al
jne	0x1400b2f18
jne	0x1400b2f18
lea	rbx, [rip + 0xe505]
mov	r9, rsi
xor	r8d, r8d
mov	rcx, r12
mov	rdx, rbx
call	0x140015d50
call	0x140015d50
test	al, al
je	0x1400b2f1d
je	0x1400b2f1d
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x335c1]
mov	rdx, rbx
mov	rcx, rax
mov	rax, qword ptr [rip + 0xbf92]
add	rax, 0x10
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
add	rbx, 0x90
jmp	0x1400b2e89
jmp	0x1400b2e89
mov	rbx, rax
call	0x1400b2f60
call	0x1400b2f60
call	0x1400b2f60
call	0x1400b2f60
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
call	0x1400b3540
call	0x1400b3540
mov	rcx, rdi
call	0x140016070
call	0x140016070
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
call	0x1400b3070
call	0x1400b3070
mov	rax, qword ptr [rax]
test	rax, rax
je	0x1400b2f4a
je	0x1400b2f4a
test	byte ptr [rax + 0x50], 1
jne	0x1400b2f50
jne	0x1400b2f50
mov	rax, qword ptr [rax]
add	rsp, 0x28
ret	
ret	
nop	
mov	rax, qword ptr [rax]
sub	rax, 0x90
jmp	0x1400b2f47
jmp	0x1400b2f47
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
call	0x1400b3080
call	0x1400b3080
mov	rcx, qword ptr [rax]
test	rcx, rcx
je	0x1400b2f99
je	0x1400b2f99
movabs	rdx, 0xb8b1aabcbcd4d500
add	rdx, qword ptr [rcx + 0x50]
cmp	rdx, 1
ja	0x1400b2fb0
ja	0x1400b2fb0
mov	edx, dword ptr [rcx + 0x28]
test	edx, edx
js	0x1400b2fa0
js	0x1400b2fa0
sub	edx, 1
je	0x1400b2fc8
je	0x1400b2fc8
cmp	edx, -1
je	0x1400b2fdc
je	0x1400b2fdc
mov	dword ptr [rcx + 0x28], edx
add	rsp, 0x28
ret	
ret	
nop	
add	edx, 1
jne	0x1400b2f96
jne	0x1400b2f96
mov	r8, qword ptr [rcx + 0x20]
mov	qword ptr [rax], r8
jmp	0x1400b2f96
jmp	0x1400b2f96
nop	
add	rcx, 0x50
mov	qword ptr [rax], 0
add	rsp, 0x28
jmp	0x14000ca40
jmp	0x14000ca40
nop	dword ptr [rax]
mov	rdx, qword ptr [rcx + 0x20]
add	rcx, 0x50
mov	qword ptr [rax], rdx
add	rsp, 0x28
jmp	0x14000ca40
jmp	0x14000ca40
call	0x1400afa30
call	0x1400afa30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x2799]
mov	rdx, qword ptr [rip + 0x279a]
add	rdx, rax
cmp	rcx, rdx
jae	0x1400b3010
jae	0x1400b3010
cmp	rax, rcx
jae	0x1400b3010
jae	0x1400b3010
jmp	0x140016900
jmp	0x140016900
jmp	0x140015940
jmp	0x140015940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0x2769]
mov	rdx, qword ptr [rip + 0x276a]
add	rdx, rax
sub	rcx, 0xa0
cmp	rcx, rdx
jae	0x1400b3050
jae	0x1400b3050
cmp	rax, rcx
jae	0x1400b3050
jae	0x1400b3050
jmp	0x140016900
jmp	0x140016900
nop	word ptr [rax + rax]
jmp	0x140015940
jmp	0x140015940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rcx - 8]
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rcx, [rip + 0x4fa9]
jmp	0x14000ccd0
jmp	0x14000ccd0
nop	
nop	
nop	
nop	
lea	rcx, [rip + 0x4f99]
jmp	0x14000ccd0
jmp	0x14000ccd0
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, qword ptr [rip + 0xb593]
mov	r9d, dword ptr [rsi]
mov	rbx, rcx
test	r9d, r9d
jne	0x1400b30b8
jne	0x1400b30b8
mov	byte ptr [rcx + 1], 0
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	dword ptr [rax + rax]
lea	rcx, [rip + 0x4ee1]
lea	rdx, [rip - 0x9c436]
call	0x14000c3a0
call	0x14000c3a0
mov	r8d, dword ptr [rsi]
mov	rcx, qword ptr [rip + 0x372b]
test	r8d, r8d
jne	0x1400b3150
jne	0x1400b3150
mov	byte ptr [rbx + 1], 0
mov	ecx, dword ptr [rsi]
test	ecx, ecx
je	0x1400b30ac
je	0x1400b30ac
lea	rdx, [rip - 0x9c4ab]
lea	rcx, [rip + 0x4e5e]
call	0x14000c3a0
call	0x14000c3a0
mov	edx, dword ptr [rsi]
mov	rcx, qword ptr [rip + 0x36f0]
test	edx, edx
je	0x1400b30ac
je	0x1400b30ac
call	0x14000c1a0
call	0x14000c1a0
test	eax, eax
jne	0x1400b3183
jne	0x1400b3183
mov	eax, dword ptr [rsi]
mov	rcx, qword ptr [rip + 0x36ea]
test	eax, eax
je	0x1400b30ac
je	0x1400b30ac
call	0x14000c550
call	0x14000c550
test	eax, eax
je	0x1400b30ac
je	0x1400b30ac
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x9adb4]
lea	rdx, [rip + 0xd205]
mov	rcx, rax
lea	rax, [rip + 0x11d0b]
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
nop	dword ptr [rax]
call	0x14000c4f0
call	0x14000c4f0
test	eax, eax
je	0x1400b30da
je	0x1400b30da
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x9ae6a]
lea	rdx, [rip + 0xd18f]
mov	rcx, rax
lea	rax, [rip + 0x11c75]
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
call	0x140018780
call	0x140018780
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r14
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
movzx	eax, byte ptr [rcx]
mov	rbx, rcx
test	al, al
jne	0x1400b32c8
jne	0x1400b32c8
mov	rsi, qword ptr [rip + 0xb47d]
mov	edi, dword ptr [rsi]
test	edi, edi
je	0x1400b3298
je	0x1400b3298
lea	r12, [rip - 0x9c534]
lea	rbp, [rip + 0x4dd5]
mov	rcx, rbp
mov	rdx, r12
call	0x14000c3a0
call	0x14000c3a0
mov	r8d, dword ptr [rsi]
mov	rcx, qword ptr [rip + 0x3620]
test	r8d, r8d
jne	0x1400b32e0
jne	0x1400b32e0
lea	r13, [rip - 0x9c5b0]
lea	r14, [rip + 0x4d59]
jmp	0x1400b324e
jmp	0x1400b324e
nop	dword ptr [rax]
cmp	byte ptr [rbx + 1], 0
je	0x1400b32d0
je	0x1400b32d0
mov	ecx, dword ptr [rsi]
test	ecx, ecx
je	0x1400b3320
je	0x1400b3320
mov	rdx, r13
mov	rcx, r14
call	0x14000c3a0
call	0x14000c3a0
mov	edx, dword ptr [rsi]
mov	rdi, qword ptr [rip + 0x35c8]
test	edx, edx
je	0x1400b3237
je	0x1400b3237
mov	rdx, r12
mov	rcx, rbp
call	0x14000c3a0
call	0x14000c3a0
mov	rdx, qword ptr [rip + 0x35c2]
mov	rcx, rdi
call	0x14000c1e0
call	0x14000c1e0
test	eax, eax
jne	0x1400b336e
jne	0x1400b336e
cmp	byte ptr [rbx], 0
je	0x1400b3200
je	0x1400b3200
xor	edi, edi
mov	eax, dword ptr [rsi]
mov	rcx, qword ptr [rip + 0x35a2]
test	eax, eax
je	0x1400b32b0
je	0x1400b32b0
call	0x14000c550
call	0x14000c550
test	eax, eax
je	0x1400b32b0
je	0x1400b32b0
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x9aefc]
lea	rdx, [rip + 0xd0bd]
mov	rcx, rax
lea	rax, [rip + 0x11bc3]
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
nop	dword ptr [rax]
cmp	byte ptr [rcx], 0
jne	0x1400b32b0
jne	0x1400b32b0
cmp	byte ptr [rcx + 1], 0
jne	0x1400b33a0
jne	0x1400b33a0
mov	byte ptr [rcx + 1], 1
mov	edi, 1
mov	eax, edi
add	rsp, 0x20
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
pop	r14
ret	
ret	
nop	dword ptr [rax]
xor	edi, edi
jmp	0x1400b32b0
jmp	0x1400b32b0
nop	dword ptr [rax]
mov	byte ptr [rbx + 1], 1
mov	edi, 1
jmp	0x1400b3255
jmp	0x1400b3255
nop	
call	0x14000c4f0
call	0x14000c4f0
test	eax, eax
je	0x1400b31e9
je	0x1400b31e9
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x9affe]
lea	rdx, [rip + 0xcffb]
mov	rcx, rax
lea	rax, [rip + 0x11ae1]
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
nop	word ptr [rax + rax]
mov	rdi, qword ptr [rip + 0x34c9]
jmp	0x1400b3237
jmp	0x1400b3237
cmp	dword ptr [rsi], 0
mov	rcx, qword ptr [rip + 0x34ca]
mov	rbx, rax
je	0x1400b3398
je	0x1400b3398
call	0x14000c550
call	0x14000c550
test	eax, eax
je	0x1400b3398
je	0x1400b3398
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x9afd5]
lea	rdx, [rip + 0xcfe4]
mov	rcx, rax
lea	rax, [rip + 0x11aea]
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x9b03f]
lea	rdx, [rip + 0xcf9a]
mov	rcx, rax
lea	rax, [rip + 0x11a90]
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
mov	rbx, rax
mov	rcx, rax
call	0x140018280
call	0x140018280
lea	r8, [rip - 0x9b0fc]
lea	rdx, [rip + 0xcf1d]
mov	rcx, rbx
call	0x1400b3590
call	0x1400b3590
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, qword ptr [rip + 0xb253]
mov	r9d, dword ptr [rsi]
mov	rbx, rcx
test	r9d, r9d
jne	0x1400b3400
jne	0x1400b3400
mov	byte ptr [rcx + 1], 0
mov	byte ptr [rcx], 1
add	rsp, 0x28
pop	rbx
pop	rsi
ret	
ret	
nop	word ptr cs:[rax + rax]
lea	rcx, [rip + 0x4b99]
lea	rdx, [rip - 0x9c77e]
call	0x14000c3a0
call	0x14000c3a0
mov	r8d, dword ptr [rsi]
mov	rcx, qword ptr [rip + 0x33e3]
test	r8d, r8d
jne	0x1400b34a0
jne	0x1400b34a0
mov	byte ptr [rbx + 1], 0
mov	byte ptr [rbx], 1
mov	ecx, dword ptr [rsi]
test	ecx, ecx
je	0x1400b33ef
je	0x1400b33ef
lea	rdx, [rip - 0x9c7f6]
lea	rcx, [rip + 0x4b13]
call	0x14000c3a0
call	0x14000c3a0
mov	edx, dword ptr [rsi]
mov	rcx, qword ptr [rip + 0x33a5]
test	edx, edx
je	0x1400b33ef
je	0x1400b33ef
call	0x14000c1a0
call	0x14000c1a0
test	eax, eax
jne	0x1400b34d7
jne	0x1400b34d7
mov	eax, dword ptr [rsi]
mov	rcx, qword ptr [rip + 0x339f]
test	eax, eax
je	0x1400b33ef
je	0x1400b33ef
call	0x14000c550
call	0x14000c550
test	eax, eax
je	0x1400b33ef
je	0x1400b33ef
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x9b0ff]
lea	rdx, [rip + 0xceba]
mov	rcx, rax
lea	rax, [rip + 0x119c0]
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
nop	dword ptr [rax + rax]
call	0x14000c4f0
call	0x14000c4f0
test	eax, eax
je	0x1400b3422
je	0x1400b3422
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x9b1be]
lea	rdx, [rip + 0xce3b]
mov	rcx, rax
lea	rax, [rip + 0x11921]
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
call	0x140018780
call	0x140018780
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
mov	dword ptr [rcx - 0xa0], 0
mov	rbx, rcx
mov	qword ptr [rcx - 0x90], rdx
mov	qword ptr [rcx - 0x88], r8
call	0x1400acfc0
call	0x1400acfc0
mov	qword ptr [rbx - 0x80], rax
call	0x1400aca00
call	0x1400aca00
mov	qword ptr [rbx - 0x78], rax
movabs	rax, 0x474e5543432b2b00
mov	qword ptr [rbx - 0x40], rax
lea	rax, [rip - 0x9d657]
mov	qword ptr [rbx - 0x38], rax
lea	rax, [rbx - 0xa0]
add	rsp, 0x20
pop	rbx
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rbx
sub	rsp, 0x20
call	0x1400b3070
call	0x1400b3070
mov	rcx, qword ptr [rax]
add	dword ptr [rax + 8], 1
test	rcx, rcx
je	0x1400b3583
je	0x1400b3583
movabs	rdx, 0xb8b1aabcbcd4d500
add	rdx, qword ptr [rcx + 0x50]
cmp	rdx, 1
jbe	0x1400b3588
jbe	0x1400b3588
xor	edx, edx
mov	qword ptr [rax], rdx
lea	rbx, [rcx + 0x50]
mov	rcx, rbx
call	0x14000c9f0
call	0x14000c9f0
mov	rcx, rbx
call	0x1400b2d80
call	0x1400b2d80
call	0x1400afa30
call	0x1400afa30
neg	dword ptr [rcx + 0x28]
jmp	0x1400b356f
jmp	0x1400b356f
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x20
mov	rbx, rcx
mov	rsi, rdx
mov	rdi, r8
call	0x1400b3070
call	0x1400b3070
mov	r8, rdi
mov	rdx, rsi
mov	rcx, rbx
add	dword ptr [rax + 8], 1
call	0x1400b34e0
call	0x1400b34e0
mov	dword ptr [rax], 1
lea	rbx, [rax + 0x60]
mov	rcx, rbx
call	0x14000c900
call	0x14000c900
mov	rcx, rbx
call	0x1400b2d80
call	0x1400b2d80
call	0x1400afa30
call	0x1400afa30
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x70
mov	rbx, rcx
mov	rbp, rdx
mov	r12, r8
mov	rdi, r9
test	rcx, rcx
je	0x1400b36a7
je	0x1400b36a7
mov	rax, qword ptr [rcx]
mov	rdx, qword ptr [rax - 0x10]
lea	rsi, [rcx + rdx]
mov	rcx, qword ptr [rax - 8]
movabs	rax, 0x1000000000
mov	qword ptr [rsp + 0x50], 0
mov	qword ptr [rsp + 0x60], rax
mov	rax, qword ptr [rsi]
mov	qword ptr [rsp + 0x58], 0
cmp	qword ptr [rax - 8], rcx
jne	0x1400b36a7
jne	0x1400b36a7
test	r9, r9
js	0x1400b3646
js	0x1400b3646
add	rdx, r9
je	0x1400b36e0
je	0x1400b36e0
mov	rax, qword ptr [rcx]
lea	rdx, [rsp + 0x50]
mov	qword ptr [rsp + 0x20], rsi
mov	r9, r12
mov	qword ptr [rsp + 0x38], rdx
mov	r8d, 6
mov	rdx, rdi
mov	qword ptr [rsp + 0x30], rbx
mov	qword ptr [rsp + 0x28], rbp
call	qword ptr [rax + 0x38]
call	qword ptr [rax + 0x38]
mov	rsi, qword ptr [rsp + 0x50]
mov	r8, rsi
test	rsi, rsi
je	0x1400b36a7
je	0x1400b36a7
mov	ecx, dword ptr [rsp + 0x60]
mov	eax, ecx
not	eax
test	al, 6
je	0x1400b36a9
je	0x1400b36a9
mov	eax, dword ptr [rsp + 0x5c]
mov	edx, dword ptr [rsp + 0x58]
and	edx, eax
not	edx
and	edx, 6
je	0x1400b36a9
je	0x1400b36a9
and	eax, 5
cmp	eax, 4
je	0x1400b36a7
je	0x1400b36a7
test	ecx, ecx
je	0x1400b36c0
je	0x1400b36c0
xor	esi, esi
mov	rax, rsi
add	rsp, 0x70
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	word ptr [rax + rax]
test	rdi, rdi
js	0x1400b3700
js	0x1400b3700
add	rsi, rdi
cmp	rbx, rsi
jne	0x1400b36a7
jne	0x1400b36a7
mov	rsi, r8
mov	rax, rsi
add	rsp, 0x70
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
ret	
ret	
nop	
mov	rdx, r8
mov	qword ptr [rsp + 0x48], rcx
call	0x140068780
call	0x140068780
mov	rcx, qword ptr [rsp + 0x48]
test	al, al
je	0x1400b3646
je	0x1400b3646
jmp	0x1400b36a9
jmp	0x1400b36a9
nop	dword ptr [rax]
cmp	rdi, -2
je	0x1400b36a7
je	0x1400b36a7
mov	rax, qword ptr [r12]
mov	r9, rbp
mov	qword ptr [rsp + 0x20], rbx
mov	rdx, rdi
mov	rcx, r12
call	qword ptr [rax + 0x40]
call	qword ptr [rax + 0x40]
not	eax
test	al, 6
jne	0x1400b36a7
jne	0x1400b36a7
mov	r8, qword ptr [rsp + 0x50]
jmp	0x1400b36cd
jmp	0x1400b36cd
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x38
lea	rax, [rip - 0x9d59b]
mov	qword ptr [rsp + 0x20], rax
call	0x14000c6e0
call	0x14000c6e0
add	rsp, 0x38
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rcx, [rip + 0x47e9]
jmp	0x1400a9b80
jmp	0x1400a9b80
nop	
nop	
nop	
nop	
mov	rax, qword ptr [rip + 0xaec9]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400b3770
jne	0x1400b3770
ret	
ret	
nop	
lea	rcx, [rip + 0x4849]
jmp	0x14000c4e0
jmp	0x14000c4e0
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0xaea5]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400b37a0
jne	0x1400b37a0
add	rsp, 0x28
ret	
ret	
nop	word ptr cs:[rax + rax]
lea	rcx, [rip + 0x47b9]
call	0x14000c4e0
call	0x14000c4e0
nop	
add	rsp, 0x28
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rax, qword ptr [rip + 0xae65]
mov	eax, dword ptr [rax]
test	eax, eax
jne	0x1400b37e0
jne	0x1400b37e0
add	rsp, 0x28
ret	
ret	
nop	word ptr cs:[rax + rax]
lea	rcx, [rip + 0x1f79]
call	0x14000c4e0
call	0x14000c4e0
nop	
add	rsp, 0x28
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
lea	rcx, [rip + 0x4705]
call	0x1400a9450
call	0x1400a9450
lea	rcx, [rip - 0xf7]
add	rsp, 0x28
jmp	0x140001440
jmp	0x140001440
cmp	byte ptr [rip + 0x1a89], 0
jne	0x1400b3860
jne	0x1400b3860
mov	byte ptr [rip + 0x1a80], 1
cmp	byte ptr [rip + 0x1a99], 0
jne	0x1400b3870
jne	0x1400b3870
mov	byte ptr [rip + 0x1a90], 1
cmp	byte ptr [rip + 0x19a9], 0
jne	0x1400b3880
jne	0x1400b3880
mov	byte ptr [rip + 0x19a0], 1
cmp	byte ptr [rip + 0x19a9], 0
jne	0x1400b3890
jne	0x1400b3890
mov	byte ptr [rip + 0x19a0], 1
cmp	byte ptr [rip + 0x1a09], 0
jne	0x1400b38a0
jne	0x1400b38a0
mov	byte ptr [rip + 0x1a00], 1
cmp	byte ptr [rip + 0x1a19], 0
jne	0x1400b38b0
jne	0x1400b38b0
mov	byte ptr [rip + 0x1a10], 1
cmp	byte ptr [rip + 0x19c9], 0
jne	0x1400b38c0
jne	0x1400b38c0
mov	byte ptr [rip + 0x19c0], 1
cmp	byte ptr [rip + 0x1999], 0
jne	0x1400b38d0
jne	0x1400b38d0
mov	byte ptr [rip + 0x1990], 1
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
cmp	byte ptr [rip + 0x1a09], 0
jne	0x1400b38f0
jne	0x1400b38f0
mov	byte ptr [rip + 0x1a00], 1
cmp	byte ptr [rip + 0x1a19], 0
jne	0x1400b3900
jne	0x1400b3900
mov	byte ptr [rip + 0x1a10], 1
cmp	byte ptr [rip + 0x1939], 0
jne	0x1400b3910
jne	0x1400b3910
mov	byte ptr [rip + 0x1930], 1
cmp	byte ptr [rip + 0x1939], 0
jne	0x1400b3920
jne	0x1400b3920
mov	byte ptr [rip + 0x1930], 1
cmp	byte ptr [rip + 0x1989], 0
jne	0x1400b3930
jne	0x1400b3930
mov	byte ptr [rip + 0x1980], 1
cmp	byte ptr [rip + 0x1999], 0
jne	0x1400b3940
jne	0x1400b3940
mov	byte ptr [rip + 0x1990], 1
cmp	byte ptr [rip + 0x1949], 0
jne	0x1400b3950
jne	0x1400b3950
mov	byte ptr [rip + 0x1940], 1
cmp	byte ptr [rip + 0x1919], 0
jne	0x1400b3960
jne	0x1400b3960
mov	byte ptr [rip + 0x1910], 1
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x34065]
lea	rdx, [rip + 0xda34]
mov	rcx, rax
mov	rax, qword ptr [rip + 0xb4ea]
add	rax, 0x10
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x88a5]
lea	rdx, [rip + 0xe664]
mov	rcx, rax
mov	rax, qword ptr [rip + 0xb77a]
add	rax, 0x10
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x1b605]
lea	rdx, [rip + 0xe014]
mov	rcx, rax
mov	rax, qword ptr [rip + 0xb5da]
add	rax, 0x10
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0xab25]
lea	rdx, [rip + 0xe434]
mov	rcx, rax
mov	rax, qword ptr [rip + 0xb68a]
add	rax, 0x10
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x3e8d5]
lea	rdx, [rip + 0xd684]
mov	rcx, rax
mov	rax, qword ptr [rip + 0xb33a]
add	rax, 0x10
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	ecx, 0x10
call	0x1400b2d10
call	0x1400b2d10
mov	rdx, rsi
mov	rcx, rax
mov	rbx, rax
call	0x140077240
call	0x140077240
lea	r8, [rip - 0x3c6c8]
lea	rdx, [rip + 0xd7b1]
mov	rcx, rbx
call	0x1400b3590
call	0x1400b3590
mov	rsi, rax
mov	rcx, rbx
call	0x1400b3020
call	0x1400b3020
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	ecx, 0x10
call	0x1400b2d10
call	0x1400b2d10
mov	rdx, rsi
mov	rcx, rax
mov	rbx, rax
call	0x140079350
call	0x140079350
lea	r8, [rip - 0x3a658]
lea	rdx, [rip + 0xd7f1]
mov	rcx, rbx
call	0x1400b3590
call	0x1400b3590
mov	rsi, rax
mov	rcx, rbx
call	0x1400b3020
call	0x1400b3020
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	ecx, 0x10
call	0x1400b2d10
call	0x1400b2d10
mov	rdx, rsi
mov	rcx, rax
mov	rbx, rax
call	0x140094de0
call	0x140094de0
lea	r8, [rip - 0x1ec18]
lea	rdx, [rip + 0xdc51]
mov	rcx, rbx
call	0x1400b3590
call	0x1400b3590
mov	rsi, rax
mov	rcx, rbx
call	0x1400b3020
call	0x1400b3020
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	ecx, 0x10
call	0x1400b2d10
call	0x1400b2d10
mov	rdx, rsi
mov	rcx, rax
mov	rbx, rax
call	0x140079540
call	0x140079540
lea	r8, [rip - 0x3a508]
lea	rdx, [rip + 0xd771]
mov	rcx, rbx
call	0x1400b3590
call	0x1400b3590
mov	rsi, rax
mov	rcx, rbx
call	0x1400b3020
call	0x1400b3020
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	ecx, 0x10
call	0x1400b2d10
call	0x1400b2d10
mov	rdx, rsi
mov	rcx, rax
mov	rbx, rax
call	0x140079730
call	0x140079730
lea	r8, [rip - 0x3a368]
lea	rdx, [rip + 0xd741]
mov	rcx, rbx
call	0x1400b3590
call	0x1400b3590
mov	rsi, rax
mov	rcx, rbx
call	0x1400b3020
call	0x1400b3020
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	ecx, 0x10
call	0x1400b2d10
call	0x1400b2d10
mov	rdx, rsi
mov	rcx, rax
mov	rbx, rax
call	0x14008c260
call	0x14008c260
lea	r8, [rip - 0x27838]
lea	rdx, [rip + 0xd861]
mov	rcx, rbx
call	0x1400b3590
call	0x1400b3590
mov	rsi, rax
mov	rcx, rbx
call	0x1400b3020
call	0x1400b3020
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	ecx, 0x10
call	0x1400b2d10
call	0x1400b2d10
mov	rdx, rsi
mov	rcx, rax
mov	rbx, rax
call	0x1400774c0
call	0x1400774c0
lea	r8, [rip - 0x3c678]
lea	rdx, [rip + 0xd5f1]
mov	rcx, rbx
call	0x1400b3590
call	0x1400b3590
mov	rsi, rax
mov	rcx, rbx
call	0x1400b3020
call	0x1400b3020
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	ecx, 0x10
call	0x1400b2d10
call	0x1400b2d10
mov	rdx, rsi
mov	rcx, rax
mov	rbx, rax
call	0x140091490
call	0x140091490
lea	r8, [rip - 0x226f8]
lea	rdx, [rip + 0xd921]
mov	rcx, rbx
call	0x1400b3590
call	0x1400b3590
mov	rsi, rax
mov	rcx, rbx
call	0x1400b3020
call	0x1400b3020
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x28
mov	rsi, rcx
mov	ecx, 0x10
call	0x1400b2d10
call	0x1400b2d10
mov	rdx, rsi
mov	rcx, rax
mov	rbx, rax
call	0x140093a30
call	0x140093a30
lea	r8, [rip - 0x201a8]
lea	rdx, [rip + 0xda11]
mov	rcx, rbx
call	0x1400b3590
call	0x1400b3590
mov	rsi, rax
mov	rcx, rbx
call	0x1400b3020
call	0x1400b3020
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
cmp	byte ptr [rip + 0x15b9], 0
jne	0x1400b3d90
jne	0x1400b3d90
mov	byte ptr [rip + 0x15b0], 1
cmp	byte ptr [rip + 0x15c9], 0
jne	0x1400b3da0
jne	0x1400b3da0
mov	byte ptr [rip + 0x15c0], 1
cmp	byte ptr [rip + 0x1659], 0
jne	0x1400b3db0
jne	0x1400b3db0
mov	byte ptr [rip + 0x1650], 1
cmp	byte ptr [rip + 0x1669], 0
jne	0x1400b3dc0
jne	0x1400b3dc0
mov	byte ptr [rip + 0x1660], 1
cmp	byte ptr [rip + 0x13f9], 0
jne	0x1400b3dd0
jne	0x1400b3dd0
mov	byte ptr [rip + 0x13f0], 1
cmp	byte ptr [rip + 0x13f9], 0
jne	0x1400b3de0
jne	0x1400b3de0
mov	byte ptr [rip + 0x13f0], 1
cmp	byte ptr [rip + 0x15b9], 0
jne	0x1400b3df0
jne	0x1400b3df0
mov	byte ptr [rip + 0x15b0], 1
cmp	byte ptr [rip + 0x1409], 0
jne	0x1400b3e00
jne	0x1400b3e00
mov	byte ptr [rip + 0x1400], 1
cmp	byte ptr [rip + 0x15d9], 0
jne	0x1400b3e10
jne	0x1400b3e10
mov	byte ptr [rip + 0x15d0], 1
cmp	byte ptr [rip + 0x15a9], 0
jne	0x1400b3e20
jne	0x1400b3e20
mov	byte ptr [rip + 0x15a0], 1
cmp	byte ptr [rip + 0x1559], 0
jne	0x1400b3e30
jne	0x1400b3e30
mov	byte ptr [rip + 0x1550], 1
cmp	byte ptr [rip + 0x14e9], 0
jne	0x1400b3e40
jne	0x1400b3e40
mov	byte ptr [rip + 0x14e0], 1
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
cmp	byte ptr [rip + 0x14f9], 0
jne	0x1400b3e60
jne	0x1400b3e60
mov	byte ptr [rip + 0x14f0], 1
cmp	byte ptr [rip + 0x1509], 0
jne	0x1400b3e70
jne	0x1400b3e70
mov	byte ptr [rip + 0x1500], 1
cmp	byte ptr [rip + 0x1599], 0
jne	0x1400b3e80
jne	0x1400b3e80
mov	byte ptr [rip + 0x1590], 1
cmp	byte ptr [rip + 0x15a9], 0
jne	0x1400b3e90
jne	0x1400b3e90
mov	byte ptr [rip + 0x15a0], 1
cmp	byte ptr [rip + 0x1349], 0
jne	0x1400b3ea0
jne	0x1400b3ea0
mov	byte ptr [rip + 0x1340], 1
cmp	byte ptr [rip + 0x1349], 0
jne	0x1400b3eb0
jne	0x1400b3eb0
mov	byte ptr [rip + 0x1340], 1
cmp	byte ptr [rip + 0x14f9], 0
jne	0x1400b3ec0
jne	0x1400b3ec0
mov	byte ptr [rip + 0x14f0], 1
cmp	byte ptr [rip + 0x1349], 0
jne	0x1400b3ed0
jne	0x1400b3ed0
mov	byte ptr [rip + 0x1340], 1
cmp	byte ptr [rip + 0x1519], 0
jne	0x1400b3ee0
jne	0x1400b3ee0
mov	byte ptr [rip + 0x1510], 1
cmp	byte ptr [rip + 0x14e9], 0
jne	0x1400b3ef0
jne	0x1400b3ef0
mov	byte ptr [rip + 0x14e0], 1
cmp	byte ptr [rip + 0x1499], 0
jne	0x1400b3f00
jne	0x1400b3f00
mov	byte ptr [rip + 0x1490], 1
cmp	byte ptr [rip + 0x1429], 0
jne	0x1400b3f10
jne	0x1400b3f10
mov	byte ptr [rip + 0x1420], 1
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	rcx, qword ptr [rip + 0x1865]
test	rcx, rcx
je	0x1400b3f3e
je	0x1400b3f3e
call	0x140015940
call	0x140015940
xor	eax, eax
mov	qword ptr [rip + 0x1852], rax
add	rsp, 0x28
ret	
ret	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	r13
push	r12
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x68
mov	rax, qword ptr [rip + 0xa6cd]
mov	r8d, dword ptr [rax]
test	r8d, r8d
jne	0x1400b40e5
jne	0x1400b40e5
pxor	xmm0, xmm0
lea	rcx, [rip + 0x6b34]
mov	qword ptr [rip + 0x1813], 0
movabs	rdi, 0x2e78786362696c67
movups	xmmword ptr [rip + 0x17f2], xmm0
movabs	r12, 0x6c6f6f705f68652e
call	0x140015960
call	0x140015960
mov	dword ptr [rsp + 0x40], 0
mov	rbx, rax
lea	rax, [rip + 0x6b08]
mov	qword ptr [rsp + 0x30], 8
mov	qword ptr [rsp + 0x38], rax
lea	rax, [rip + 0x6afc]
mov	qword ptr [rsp + 0x48], 9
mov	qword ptr [rsp + 0x50], rax
mov	dword ptr [rsp + 0x58], 0x100
test	rbx, rbx
jne	0x1400b4005
jne	0x1400b4005
jmp	0x1400b40af
jmp	0x1400b40af
nop	dword ptr [rax]
mov	rcx, rbx
mov	edx, 0x3a
call	0x1400159e0
call	0x1400159e0
mov	rbx, rax
test	rax, rax
je	0x1400b4060
je	0x1400b4060
xor	eax, eax
cmp	byte ptr [rbx], 0x3a
sete	al
add	rbx, rax
cmp	qword ptr [rbx], rdi
jne	0x1400b3ff0
jne	0x1400b3ff0
cmp	qword ptr [rbx + 7], r12
jne	0x1400b3ff0
jne	0x1400b3ff0
cmp	byte ptr [rbx + 0xf], 0x2e
jne	0x1400b3ff0
jne	0x1400b3ff0
add	rbx, 0x10
lea	rbp, [rsp + 0x30]
lea	r13, [rsp + 0x60]
mov	rsi, qword ptr [rbp]
mov	rcx, qword ptr [rbp + 8]
test	rsi, rsi
je	0x1400b404b
je	0x1400b404b
mov	r8, rsi
mov	rdx, rbx
call	0x140015990
call	0x140015990
test	eax, eax
jne	0x1400b4055
jne	0x1400b4055
cmp	byte ptr [rbx + rsi], 0x3d
je	0x1400b40f6
je	0x1400b40f6
add	rbp, 0x18
cmp	rbp, r13
jne	0x1400b402f
jne	0x1400b402f
jmp	0x1400b3ff0
jmp	0x1400b3ff0
mov	eax, dword ptr [rsp + 0x58]
mov	edx, 0x1000
mov	ecx, 6
cmp	eax, edx
cmovle	edx, eax
mov	eax, dword ptr [rsp + 0x40]
test	eax, eax
cmove	eax, ecx
movsxd	rbx, eax
movsxd	rax, edx
add	rbx, 0x26
imul	rbx, rax
shl	rbx, 3
mov	qword ptr [rip + 0x1703], rbx
jne	0x1400b40bf
jne	0x1400b40bf
lea	rcx, [rip - 0x8de]
add	rsp, 0x68
pop	rbx
pop	rsi
pop	rdi
pop	rbp
pop	r12
pop	r13
jmp	0x140001440
jmp	0x140001440
mov	qword ptr [rip + 0x16de], 0x16000
mov	ebx, 0x16000
mov	rcx, rbx
call	0x140015980
call	0x140015980
mov	qword ptr [rip + 0x16c2], rax
test	rax, rax
je	0x1400b412d
je	0x1400b412d
xor	edx, edx
mov	qword ptr [rip + 0x16ac], rax
mov	qword ptr [rax], rbx
mov	qword ptr [rax + 8], rdx
jmp	0x1400b4097
jmp	0x1400b4097
lea	rcx, [rip + 0x1674]
call	0x14000c4d0
call	0x14000c4d0
jmp	0x1400b3f6f
jmp	0x1400b3f6f
lea	rdx, [rsp + 0x28]
lea	rcx, [rbx + rsi + 1]
xor	r8d, r8d
call	0x140015a18
call	0x140015a18
mov	rbx, qword ptr [rsp + 0x28]
movzx	edx, byte ptr [rbx]
cmp	dl, 0x3a
je	0x1400b411d
je	0x1400b411d
test	dl, dl
jne	0x1400b3ff0
jne	0x1400b3ff0
test	eax, eax
js	0x1400b3ff0
js	0x1400b3ff0
mov	dword ptr [rbp + 0x10], eax
jmp	0x1400b3ff0
jmp	0x1400b3ff0
xor	ecx, ecx
mov	qword ptr [rip + 0x1662], rcx
jmp	0x1400b4097
jmp	0x1400b4097
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0xb235]
lea	rdx, [rip + 0xdd24]
mov	rcx, rax
mov	rax, qword ptr [rip + 0xaf7a]
add	rax, 0x10
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x3efe5]
lea	rdx, [rip + 0xcf74]
mov	rcx, rax
mov	rax, qword ptr [rip + 0xac2a]
add	rax, 0x10
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
sub	rsp, 0x28
mov	ecx, 8
call	0x1400b2d10
call	0x1400b2d10
lea	r8, [rip - 0x1bdd5]
lea	rdx, [rip + 0xd844]
mov	rcx, rax
mov	rax, qword ptr [rip + 0xae0a]
add	rax, 0x10
mov	qword ptr [rcx], rax
call	0x1400b3590
call	0x1400b3590
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rsi
push	rbx
sub	rsp, 0x38
mov	rsi, rcx
mov	ecx, 0x30
call	0x1400b2d10
call	0x1400b2d10
mov	rbx, rax
call	0x1400ae890
call	0x1400ae890
lea	rdx, [rsp + 0x20]
mov	r8, rsi
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], 1
mov	qword ptr [rsp + 0x28], rax
call	0x140079920
call	0x140079920
lea	rax, [rip + 0x12530]
mov	rcx, rbx
mov	qword ptr [rbx], rax
call	0x14001d8e0
call	0x14001d8e0
lea	rcx, [rbx + 0x20]
mov	rdx, rax
call	0x1400aec20
call	0x1400aec20
lea	r8, [rip - 0x3498e]
lea	rdx, [rip + 0xd13b]
mov	rcx, rbx
call	0x1400b3590
call	0x1400b3590
mov	rsi, rax
mov	rcx, rbx
lea	rax, [rip + 0x11f46]
mov	qword ptr [rbx], rax
call	0x140079f10
call	0x140079f10
jmp	0x1400b4287
jmp	0x1400b4287
mov	rsi, rax
mov	rcx, rbx
call	0x1400b3020
call	0x1400b3020
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
push	rdi
push	rsi
push	rbx
sub	rsp, 0x30
mov	rdi, rcx
mov	ecx, 0x30
mov	esi, edx
call	0x1400b2d10
call	0x1400b2d10
mov	rbx, rax
test	esi, esi
je	0x1400b42c4
je	0x1400b42c4
call	0x140098500
call	0x140098500
jmp	0x1400b42ce
jmp	0x1400b42ce
call	0x1400ae890
call	0x1400ae890
mov	esi, 1
lea	rdx, [rsp + 0x20]
mov	r8, rdi
mov	rcx, rbx
mov	qword ptr [rsp + 0x20], rsi
mov	qword ptr [rsp + 0x28], rax
call	0x140079920
call	0x140079920
lea	rax, [rip + 0x12481]
mov	rcx, rbx
mov	qword ptr [rbx], rax
call	0x14001d8e0
call	0x14001d8e0
lea	rcx, [rbx + 0x20]
mov	rdx, rax
call	0x1400aec20
call	0x1400aec20
lea	r8, [rip - 0x34a3d]
lea	rdx, [rip + 0xd08c]
mov	rcx, rbx
call	0x1400b3590
call	0x1400b3590
mov	rsi, rax
mov	rcx, rbx
lea	rax, [rip + 0x11e97]
mov	qword ptr [rbx], rax
call	0x140079f10
call	0x140079f10
jmp	0x1400b4336
jmp	0x1400b4336
mov	rsi, rax
mov	rcx, rbx
call	0x1400b3020
call	0x1400b3020
mov	rcx, rsi
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
nop	
lea	rcx, [rip - 0xb57]
jmp	0x140001440
jmp	0x140001440
nop	
nop	
nop	
nop	
push	rbp
push	rdi
push	rsi
push	rbx
sub	rsp, 0x48
lea	rbp, [rip + 0x1b11]
mov	ebx, ecx
mov	ecx, 0x20
lea	rdi, [rsp + 0x20]
call	0x1400b2d10
call	0x1400b2d10
mov	r8d, ebx
mov	rdx, rbp
mov	rcx, rdi
mov	rsi, rax
mov	rax, qword ptr [rip + 0x1aed]
call	qword ptr [rax + 0x20]
call	qword ptr [rax + 0x20]
mov	rdx, rdi
mov	rcx, rsi
call	0x14008c2c0
call	0x14008c2c0
mov	rcx, qword ptr [rsp + 0x20]
lea	rax, [rsp + 0x30]
cmp	rcx, rax
je	0x1400b43b5
je	0x1400b43b5
call	0x1400b2be0
call	0x1400b2be0
lea	rax, [rip + 0x12384]
lea	r8, [rip - 0x3a4b3]
mov	rcx, rsi
mov	dword ptr [rsi + 0x10], ebx
lea	rdx, [rip + 0xcfb0]
mov	qword ptr [rsi], rax
mov	qword ptr [rsi + 0x18], rbp
call	0x1400b3590
call	0x1400b3590
mov	rcx, rdi
mov	rbx, rax
call	0x14009cf50
call	0x14009cf50
jmp	0x1400b43ec
jmp	0x1400b43ec
mov	rbx, rax
mov	rcx, rsi
call	0x1400b3020
call	0x1400b3020
mov	rcx, rbx
call	0x14000c940
call	0x14000c940
nop	
nop	
nop	
nop	
sub	rsp, 0x28
lea	rcx, [rip - 0xbfb]
call	0x140001440
call	0x140001440
lea	rcx, [rip - 0xbf7]
add	rsp, 0x28
jmp	0x140001440
jmp	0x140001440
mov	qword ptr [rbx + 0x18], rdx
lea	rcx, [rsp + 0x34]
lea	rdx, [rip + 0x7cdc]
call	0x140001ad0
call	0x140001ad0
mov	rax, qword ptr [0x10]
ud2	
nop	
jmp	0x140001460
jmp	0x140001460
